(c / chapter 
      :mod-of 1)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / draw-01 
      :ARG0 (h / here) 
      :ARG1 (t2 / thing 
            :ARG2-of (c / copy-01)))

(s2 / say-01 
      :ARG1 (c / constrictor 
            :ARG0-of (s / swallow-01 
                  :ARG1 (b / boa 
                        :ARG0 (b2 / book)) 
                  :ARG2 (p / prey 
                        :direction (w / whole 
                              :ARG0-of (c2 / chew-01))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(j / jungle 
      :ARG1 (a / adventure 
            :ARG0-of (d / deep-02 
                  :ARG1 (t / then 
                        :ARG1-of (p / ponder-01 
                              :ARG0 (i / i))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / picture 
      :name (n2 / name 
            :op "Drawing" 
            :op "Number" 
            :op "One"))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / contrast-01 
      :ARG1 (t / they 
            :ARG1-of (f / frighten-01 
                  :ARG1-of (a / answer-01))))

(f / frighten-01 
      :ARG0 (o / one) 
      :ARG1 (h / hat) 
      :ARG2 (a / any))

(d / draw-01 
      :ARG1 (p / picture-01 
            :ARG1 (h / hat)))

(c / constrictor 
      :degree-of (d / digest-01 
            :ARG0 (i / it 
                  :ARG1-of (p / picture-01)) 
            :ARG1 (e / elephant) 
            :ARG2 (b2 / boa)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(n / need-01 
      :ARG0 (t / they) 
      :ARG1 (a / always) 
      :ARG1-of (e / explain-01))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / and 
      :op (p2 / picture 
            :name (n2 / name 
                  :op "Drawing" 
                  :op "Number" 
                  :op "Two")) 
      :quant (p / picture 
            :ARG0-of (f / fail-01 
                  :ARG1 (d / dishearten-01 
                        :ARG0 (i / i))) 
            :name (n / name 
                  :op "Drawing" 
                  :op "Number" 
                  :op "One")))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(l / learn-01 
      :ARG1 (p / profession 
            :op (a / and)) 
      :ARG2 (p2 / pilot-01 
            :ARG1 (a3 / airplane 
                  :op (i / i 
                        :ARG1-of (c / choose-01 
                              :mod-of (a2 / another))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / possible-01 
      :ARG0 (c / country 
            :name (n / name 
                  :op "China")) 
      :ARG1 (g / glance-01 
            :ARG0 (s / state 
                  :name (n2 / name 
                        :op "Arizona")) 
            :ARG1 (i / i)) 
      :ARG2 (d / distinguish-01))

(l / lost 
      :ARG1-of (g / get-03 
            :ARG0 (n / night 
                  :ARG0-of (s / such 
                        :ARG0-of (v / value-02 
                              :ARG1 (k / knowledge)))) 
            :mod (o / one)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / deal 
      :ARG2-of (l / live-01 
            :ARG0 (i / i) 
            :ARG1 (g / grown-up 
                  :op (a / among)) 
            :extent (g2 / great)))

(c / close-10 
      :ARG1 (i2 / intimate-02 
            :ARG1 (s / see-01 
                  :ARG0 (i / i))))

(o2 / opine-01 
      :ARG0 (m2 / much 
            :ARG0-of (i / improve-01 
                  :ARG1 (t / that 
                        :mod-of (a / and)))) 
      :ARG1 (t3 / thing))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / find-out-03 
      :ARG0 (t2 / this) 
      :ARG1 (i / i 
            :ARG0-of (u2 / understand-01 
                  :ARG1 (p / person 
                        :ARG1-of (t3 / true-01)))) 
      :ARG1-of (t / try-01))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / bring-01 
      :ARG0 (d / down) 
      :ARG1 (i / i) 
      :ARG2 (l / level))

(b / bridge 
      :time (a / and 
            :domain (t / talk-01 
                  :ARG0 (p / politics) 
                  :ARG1 (n2 / necktie) 
                  :ARG2 (i / i)) 
            :mod (g / golf)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / chapter 
      :mod-of 2)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / break-01 
      :ARG0 (e / engine) 
      :ARG1 (s / something))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(l2 / last-03 
      :ARG1 (d2 / drink-01 
            :ARG1 (e / enough 
                  :ARG2-of (h / have-03 
                        :ARG1 (s / scarce) 
                        :mod (i / i 
                              :ARG0-of (q / question-01 
                                    :ARG1 (o / or 
                                          :ARG0-of (d / die-01 
                                                :ARG1 (t / temporal-quantity 
                                                      :unit (w2 / week)))))))) 
            :quant-of (w / water)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r / raft 
      :ARG1-of (i / isolate-01 
            :ARG0 (o / ocean) 
            :ARG1-of (s / sail-01 
                  :ARG0 (p / person 
                        :ARG1-of (s2 / shipwreck-01 
                              :ARG0 (i2 / i)))) 
            :op-of (m / more) 
            :time (m2 / middle)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

"what"

(d / draw-01 
      :ARG1 (s / sheep))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / blink-01 
      :ARG0 (i / i) 
      :ARG1 (h / hard-04 
            :manner (e / eye)))

(a / around 
      :ARG0-of (l / look-01 
            :ARG1 (a2 / all) 
            :ARG2-of (c / careful 
                  :op-of (i / i))))

(s3 / stand-01 
      :ARG0 (p / person) 
      :ARG1 (t / there 
            :ARG1-of (e2 / examine-01 
                  :ARG0 (g / great 
                        :ARG1-of (s4 / serious-01 
                              :ARG0 (s2 / small 
                                    :ARG0-of (s / see-01 
                                          :ARG1 (m / most) 
                                          :ARG2 (i / i) 
                                          :mod (a / and)) 
                                    :degree (e / extraordinary)))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / fault-01 
      :ARG1 (t / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r / remember-01 
      :ARG0 (r2 / region 
            :ARG1-of (i2 / inhabit-01 
                  :ARG0 (d / desert) 
                  :mod (a2 / any))) 
      :ARG1 (i / i 
            :ARG1-of (c / crash-01 
                  :ARG0 (d2 / distance-quantity 
                        :unit (m / mile)))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(m / middle 
      :ARG1-of (l / lose-02 
            :ARG0 (d2 / distance-quantity 
                  :unit (m2 / mile)) 
            :ARG2 (c / child) 
            :manner (s / suggest-01 
                  :ARG0 (d / desert) 
                  :ARG1 (h2 / human) 
                  :ARG2 (a3 / any) 
                  :time (n / nothing))))

(c / contrast-01 
      :ARG1-of (s / say-01 
            :ARG0 (i / i 
                  :ARG1-of (p / possible-01 
                        :ARG0 (y2 / you) 
                        :ARG1-of (s2 / speak-01 
                              :ARG0 (h2 / here))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / dare-01 
      :ARG0 (o / one 
            :ARG1-of (d2 / disobey-01) 
            :ARG1-of (o2 / overpower-01 
                  :ARG0 (t2 / too 
                        :ARG0 (m / mystery)))))

(a4 / absurd 
      :op (t / take-01 
            :ARG0 (i / i) 
            :ARG1 (p2 / pen 
                  :op-of (f / fountain)) 
            :ARG2 (p3 / pocket) 
            :ARG2-of (d2 / die-01 
                  :ARG0 (p / paper) 
                  :ARG1 (a / and)) 
            :condition (s2 / seem-01 
                  :ARG0 (a3 / any 
                        :mod-of (h / human)) 
                  :ARG1 (d / distance-quantity 
                        :unit (m / mile)) 
                  :ARG2 (s / sheet))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / draw-01 
      :ARG0 (s / sheep))

(c / contrast-01 
      :ARG0 (i / i 
            :ARG0-of (d / draw-01 
                  :ARG1 (s / sheep))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / boa 
      :mod (c2 / constrictor 
            :mod-of (f / from)) 
      :part (o / outside))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (i2 / inside 
            :degree (e / elephant)) 
      :ARG2 (b2 / boa) 
      :time (c2 / constrictor))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(n / need-01 
      :ARG0 (i / i) 
      :ARG1 (s / sheep))

(d / draw-01 
      :ARG1 (s / sheep))

(d / draw-01 
      :ARG0 (i / i) 
      :ARG1 (t2 / then))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(m / make-01 
      :ARG1 (a / another))

(m / make-01 
      :ARG0 (i / i) 
      :ARG1-of (d / draw-01) 
      :manner (a / another))

(i2 / indulgent 
      :time-of (s / smile-01 
            :ARG0 (f / friend) 
            :ARG1 (g / gentle) 
            :ARG2 (h / have-rel-role-91 
                  :ARG2 f)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r2 / ram 
      :op-of (t2 / this))

(h / have-03 
      :ARG0 (i / it) 
      :ARG1 (h2 / horn))

(d / do-02 
      :ARG0 (i / i) 
      :ARG1 (t2 / then) 
      :ARG1-of (d2 / draw-01 
            :ARG0 (o / over)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(o2 / old 
      :mod (t2 / too 
            :op (o / one 
                  :mod-of (t / this))))

(l / live-01 
      :ARG0 (i / i 
            :ARG0-of (w / want-01 
                  :ARG1 (s / sheep))) 
      :ARG1-of (l2 / long-03))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / toss-out-02 
      :ARG0 (i / i) 
      :ARG1 (d / draw-01 
            :ARG2 (t3 / this)) 
      :direction (o / off))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / box 
      :op-of (o / only 
            :domain (t / this)))

(a / ask-01 
      :ARG0 (s2 / sheep) 
      :ARG1 (i2 / inside) 
      :time (y / you))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / amr-empty)

(c / cause-01 
      :ARG0 (s / small) 
      :ARG1 (l / live-01 
            :ARG0 (i / i) 
            :ARG1 (v / very) 
            :ARG2 (e / everything)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / say-01 
      :ARG0 (i / i))

(g / give-01 
      :ARG0 (v / very 
            :op (s / sheep 
                  :mod (s2 / small))) 
      :ARG1 (y / you) 
      :ARG2 (i / i))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / sleep-01 
      :ARG1 (h / he))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c2 / chapter 
      :ARG0-of 3)

(l2 / learn-01 
      :ARG1 (h / he 
            :ARG1-of (c / come-01 
                  :ARG1-of (t2 / take-10))) 
      :ARG1-of (l / long-03))

(a2 / ask-01 
      :ARG0 (p / prince 
            :mod (l / little)) 
      :ARG1 (q / question-01 
            :ARG0 (i / i) 
            :ARG0-of (s / seem-01 
                  :ARG2 (h / hear-01 
                        :ARG0 (o / one) 
                        :ARG1 (s2 / so))) 
            :ARG2 (m / many)))

(r / reveal-01 
      :ARG1 (e / everything) 
      :ARG1-of (c / chance-02 
            :ARG0 (w / word) 
            :ARG1-of (d / drop-06 
                  :ARG2 (l / little-by-little) 
                  :ARG0 w)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / fly-01 
      :ARG1 (i / it))

(a / airplane 
      :poss (i / it))

(a2 / airplane 
      :op-of (i / it))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / then 
      :op (w / "what" 
            :domain (h / he)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(y2 / yes)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(o / oh)

(f2 / funny 
      :domain (t2 / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(m / misfortune 
      :ARG1-of (l / like-02) 
      :ARG1-of (t / take-04 
            :ARG1-of (s / serious-01 
                  :ARG0 (i / i))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / planet)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / contrast-01 
      :ARG0-of (h / he 
            :ARG1-of (r / reply-01)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r / reverie 
      :ARG0-of (s / sink-01 
            :ARG1 (l / long-03 
                  :ARG0 (a / and)) 
            :ARG2 (h / he)))

(c / contemplate-01 
      :ARG0 (s / sheep) 
      :ARG1 (t / treasure) 
      :ARG1-of (b / bury-01 
            :ARG0 (h / he 
                  :op-of (p / pocket 
                        :ARG1-of (t2 / take-out-11 
                              :ARG0 (t3 / then))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / come-01 
      :ARG0 (l / little 
            :mod-of (m / man)) 
      :ARG1 (y / you))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / take-01 
      :ARG1 (s / sheep) 
      :purpose (w / want-01 
            :mod (y / you)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / so 
      :op-of (t / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(i / idea 
      :mod (q / queer))

(c / contrast-01 
      :ARG1-of (t / tie-01 
            :ARG0 (y / you)))

(s / say-01 
      :ARG0 (h / he 
            :ARG0-of (w / wander-01 
                  :ARG1 (s2 / somewhere))) 
      :ARG1 (a / and 
            :ARG0-of (g / get-03 
                  :ARG1 (l / lost))) 
      :ARG2 (i / i))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / anywhere)

(s / straight-04 
      :ARG0 (a / ahead))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / small 
      :op-of (s2 / so 
            :ARG1-of (l / live-01 
                  :ARG0 (i / i) 
                  :ARG2 (e / everything))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 145
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:76)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

