(c / chapter 
      :mod-of 1)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 25
# 	at edu.cmu.lti.nlp.amr.Annotation.annotationSpan(Annotation.scala:101)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.dependencySpan(Features.scala:322)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$32.apply(Features.scala:397)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$32.apply(Features.scala:396)
# 	at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)
# 	at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)
# 	at scala.collection.immutable.Range.foreach(Range.scala:141)
# 	at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:251)
# 	at scala.collection.AbstractTraversable.flatMap(Traversable.scala:105)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.depPathStrv3(Features.scala:396)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.ffDistance(Features.scala:182)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$11.apply$mcV$sp(Features.scala:54)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:502)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:501)
# 	at scala.collection.immutable.List.foreach(List.scala:318)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.localFeatures(Features.scala:501)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1$$anonfun$apply$mcVI$sp$1.apply$mcVI$sp(Alg2.scala:59)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1.apply$mcVI$sp(Alg2.scala:54)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.weightMatrix(Alg2.scala:52)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.precomputeEdgeWeights(Alg2.scala:45)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.input_$eq(Alg2.scala:29)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:34)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:35)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 12
# 	at edu.cmu.lti.nlp.amr.Annotation.annotationSpan(Annotation.scala:101)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.dependencySpan(Features.scala:322)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.depPathStrv3(Features.scala:396)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.ffDistance(Features.scala:182)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$11.apply$mcV$sp(Features.scala:54)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:502)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:501)
# 	at scala.collection.immutable.List.foreach(List.scala:318)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.localFeatures(Features.scala:501)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1$$anonfun$apply$mcVI$sp$1.apply$mcVI$sp(Alg2.scala:59)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1.apply$mcVI$sp(Alg2.scala:54)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.weightMatrix(Alg2.scala:52)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.precomputeEdgeWeights(Alg2.scala:45)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.input_$eq(Alg2.scala:29)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:34)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:35)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

(t2 / thing 
      :ARG1-of (d / draw-01 
            :ARG0 (h / here)) 
      :ARG2-of (c / copy-01))

(s2 / say-01 
      :ARG2-of (c2 / chew-01 
            :op-of (w / whole 
                  :time-of (p / prey 
                        :ARG2-of (s / swallow-01 
                              :ARG1 (c / constrictor) 
                              :extent (b / boa)) 
                        :domain (b2 / book)))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 14
# 	at edu.cmu.lti.nlp.amr.Annotation.annotationSpan(Annotation.scala:101)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.dependencySpan(Features.scala:322)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.depPathStrv3(Features.scala:396)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.ffDistance(Features.scala:182)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$11.apply$mcV$sp(Features.scala:54)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:502)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:501)
# 	at scala.collection.immutable.List.foreach(List.scala:318)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.localFeatures(Features.scala:501)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1$$anonfun$apply$mcVI$sp$1.apply$mcVI$sp(Alg2.scala:59)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1.apply$mcVI$sp(Alg2.scala:54)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.weightMatrix(Alg2.scala:52)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.precomputeEdgeWeights(Alg2.scala:45)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.input_$eq(Alg2.scala:29)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:34)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:35)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

(d / deep-02 
      :ARG1 (t / then) 
      :ARG2-of (p / ponder-01 
            :ARG0 (i / i) 
            :ARG1 (a / adventure 
                  :op-of (j / jungle))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / picture 
      :name (n2 / name 
            :op "Drawing" 
            :op "Number" 
            :op "One"))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 21
# 	at edu.cmu.lti.nlp.amr.Annotation.annotationSpan(Annotation.scala:101)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.dependencySpan(Features.scala:322)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.depPathStrv3(Features.scala:396)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.ffDistance(Features.scala:182)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$11.apply$mcV$sp(Features.scala:54)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:502)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features$$anonfun$localFeatures$2.apply(Features.scala:501)
# 	at scala.collection.immutable.List.foreach(List.scala:318)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.localFeatures(Features.scala:501)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1$$anonfun$apply$mcVI$sp$1.apply$mcVI$sp(Alg2.scala:59)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$weightMatrix$1.apply$mcVI$sp(Alg2.scala:54)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.weightMatrix(Alg2.scala:52)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.precomputeEdgeWeights(Alg2.scala:45)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.input_$eq(Alg2.scala:29)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:34)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:35)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

(c / contrast-01 
      :ARG1 (t / they 
            :ARG1-of (f / frighten-01 
                  :ARG1-of (a / answer-01))))

(f / frighten-01 
      :ARG0 (h / hat) 
      :ARG1 (a / any) 
      :op-of (o / one))

(d / draw-01 
      :ARG1 (p / picture-01 
            :ARG1 (h / hat)))

(b2 / boa 
      :op (d / digest-01 
            :ARG1 (e / elephant) 
            :degree (c / constrictor 
                  :ARG1-of (p / picture-01)) 
            :op-of (i / it)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(n / need-01 
      :ARG1 (a / always) 
      :ARG1-of (e / explain-01) 
      :location (t / they))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / and 
      :mod (p / picture 
            :name (n / name 
                  :op "Drawing" 
                  :op "Number" 
                  :op "One") 
            :op-of (p2 / picture 
                  :name (n2 / name 
                        :op "Drawing" 
                        :op "Number" 
                        :op "Two")) 
            :time-of (d / dishearten-01 
                  :ARG2 (f / fail-01) 
                  :op-of (i / i))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a3 / airplane 
      :concession (i / i 
            :ARG1-of (c / choose-01 
                  :mod-of (a2 / another 
                        :ARG1-of (l / learn-01 
                              :ARG2 (p2 / pilot-01 
                                    :duration (a / and 
                                          :op-of (p / profession))))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / possible-01 
      :extent (c / country 
            :ARG1-of (d / distinguish-01) 
            :duration-of (i / i 
                  :ARG1-of (g / glance-01)) 
            :name (n / name 
                  :op "China")) 
      :location (s / state 
            :name (n2 / name 
                  :op "Arizona")))

(s / such 
      :ARG0-of (v / value-02 
            :ARG1 (k / knowledge)) 
      :domain (n / night 
            :ARG0-of (g / get-03 
                  :ARG1 (l / lost) 
                  :ARG2 (o / one))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / deal 
      :mod (g2 / great 
            :extent-of (l / live-01 
                  :ARG0 (i / i) 
                  :time (g / grown-up 
                        :op (a / among)))))

(s / see-01 
      :ARG0 (i / i) 
      :ARG1 (c / close-10 
            :ARG1-of (i2 / intimate-02)))

(o2 / opine-01 
      :ARG1 (t3 / thing 
            :ARG4-of (i / improve-01 
                  :ARG0 (t / that) 
                  :ARG2 (m2 / much 
                        :poss (a / and)))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / find-out-03 
      :ARG1 (i / i 
            :ARG0-of (u2 / understand-01 
                  :ARG1 (p / person) 
                  :manner-of (t3 / true-01))) 
      :ARG2 (t2 / this) 
      :ARG2-of (t / try-01))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / bring-01 
      :ARG0 (d / down) 
      :ARG1 (i / i) 
      :time (l / level))

(b / bridge 
      :domain (a / and 
            :domain (t / talk-01 
                  :ARG0 (p / politics 
                        :op-of (n2 / necktie)) 
                  :ARG1 (g / golf))) 
      :domain-of (i / i))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / chapter 
      :mod-of 2)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / something 
      :ARG1-of (b / break-01 
            :op-of (e / engine)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / die-01 
      :ARG0 (o / or 
            :part (t / temporal-quantity 
                  :unit (w2 / week))) 
      :ARG1 (i / i 
            :ARG0-of (d2 / drink-01 
                  :purpose-of (w / water)) 
            :mod-of (h / have-03 
                  :ARG0 (s / scarce) 
                  :ARG2 (e / enough))) 
      :ARG1-of (l2 / last-03) 
      :ARG1-of (q / question-01))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(i / isolate-01 
      :ARG0 (o / ocean) 
      :ARG1 (r / raft) 
      :location (m2 / middle 
            :domain-of (p / person 
                  :ARG0-of (s / sail-01) 
                  :ARG1-of (s2 / shipwreck-01)) 
            :time (i2 / i)) 
      :op-of (m / more))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

"what"

(d / draw-01 
      :ARG1 (s / sheep))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / blink-01 
      :ARG0 (i / i 
            :ARG1-of h) 
      :degree (e / eye 
            :manner-of (h / hard-04)))

(c / careful 
      :op (l / look-01 
            :ARG1 (a2 / all)) 
      :op-of (i / i 
            :poss (a / around)))

(s3 / stand-01 
      :ARG1 (p / person 
            :location-of (s2 / small 
                  :degree (e / extraordinary))) 
      :ARG2 (t / there 
            :ARG0-of (s / see-01 
                  :ARG1 (m / most) 
                  :mod (a / and)) 
            :ARG1-of (e2 / examine-01) 
            :poss-of (g / great 
                  :location (i / i) 
                  :time (s4 / serious-01))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / fault-01 
      :ARG1 (t / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r / remember-01 
      :ARG2 (c / crash-01 
            :ARG2 (i / i)) 
      :location (r2 / region 
            :manner-of (i2 / inhabit-01 
                  :ARG2 (d / desert) 
                  :compared-to-of (d2 / distance-quantity 
                        :unit (m / mile)) 
                  :mod (a2 / any))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d2 / distance-quantity 
      :extent-of (l / lose-02 
            :op-of (m / middle 
                  :poss (c / child 
                        :poss (a3 / any 
                              :op (s / suggest-01 
                                    :extent (h2 / human)) 
                              :poss-of (n / nothing))))) 
      :poss (d / desert) 
      :unit (m2 / mile))

(c / contrast-01 
      :ARG2 (s / say-01 
            :ARG1 (p / possible-01 
                  :ARG0 (y2 / you) 
                  :ARG1 (h2 / here) 
                  :ARG1-of (s2 / speak-01)) 
            :ARG2 (i / i)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / dare-01 
      :ARG1 (t2 / too 
            :ARG2-of (o2 / overpower-01 
                  :ARG0 (o / one 
                        :ARG1-of (d2 / disobey-01))) 
            :domain (m / mystery)))

(a4 / absurd 
      :location-of (s2 / seem-01 
            :ARG0-of (d2 / die-01 
                  :location (f / fountain 
                        :domain (p2 / pen 
                              :ARG1-of (t / take-01 
                                    :ARG2 (i / i) 
                                    :location (p3 / pocket 
                                          :poss-of (p / paper 
                                                :mod-of (a3 / any 
                                                      :mod-of (h / human)))) 
                                    :time (s / sheet)))) 
                  :location (a / and)) 
            :ARG1 (d / distance-quantity 
                  :unit (m / mile))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(d / draw-01 
      :ARG1 (s / sheep))

(c / contrast-01 
      :ARG2 (d / draw-01 
            :ARG0 (i / i) 
            :ARG1 (s / sheep)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / boa 
      :domain-of (f / from 
            :mod (c2 / constrictor)) 
      :poss (o / outside))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (i2 / inside 
            :degree (e / elephant)) 
      :ARG2 (c2 / constrictor 
            :mod-of (b2 / boa)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(n / need-01 
      :ARG0 (i / i) 
      :ARG1 (s / sheep))

(d / draw-01 
      :ARG1 (s / sheep))

(d / draw-01 
      :ARG1 (t2 / then 
            :time (i / i)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / another 
      :ARG1-of (m / make-01))

(m / make-01 
      :ARG0 (i / i) 
      :ARG1-of (d / draw-01) 
      :ARG4 (a / another))

(i2 / indulgent 
      :ARG1-of (h / have-rel-role-91 
            :ARG2 (f / friend) 
            :ARG2-of (s / smile-01 
                  :ARG1 (g / gentle) 
                  :ARG0 f)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r2 / ram 
      :op-of (t2 / this))

(h2 / horn 
      :ARG1-of (h / have-03 
            :ARG0 (i / it)))

(d / do-02 
      :ARG1 (t2 / then 
            :domain-of (i / i 
                  :ARG0-of (d2 / draw-01 
                        :ARG1 (o / over)))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(o2 / old 
      :mod (t2 / too) 
      :poss-of (t / this 
            :mod-of (o / one)))

(w / want-01 
      :condition (l / live-01 
            :ARG1-of (l2 / long-03) 
            :op-of (s / sheep) 
            :time (i / i)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / toss-out-02 
      :ARG0 (i / i) 
      :ARG2 (o / off) 
      :polarity (t3 / this 
            :ARG1-of (d / draw-01)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(b / box 
      :domain-of (o / only 
            :domain (t / this)))

(a / ask-01 
      :ARG1 (y / you 
            :poss-of (i2 / inside)) 
      :op-of (s2 / sheep))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / amr-empty)

(c / cause-01 
      :ARG0 (v / very) 
      :ARG2 (l / live-01 
            :ARG4 (e / everything) 
            :location (s / small) 
            :manner (i / i)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / say-01 
      :ARG2 (i / i))

(s2 / small 
      :mod-of (s / sheep 
            :ARG2-of (g / give-01 
                  :ARG0 (i / i) 
                  :ARG1 (y / you)) 
            :op-of (v / very)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / sleep-01 
      :ARG1 (h / he))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c2 / chapter 
      :mod-of 3)

(c / come-01 
      :ARG1 (h / he 
            :quant (l2 / learn-01 
                  :ARG1 (l / long-03))) 
      :ARG1-of (t2 / take-10))

(a2 / ask-01 
      :ARG0 (p / prince 
            :mod (l / little)) 
      :ARG1 (q / question-01 
            :ARG0 (i / i) 
            :ARG2 (m / many) 
            :condition-of (h / hear-01 
                  :ARG1 (s2 / so) 
                  :ARG2 (o / one 
                        :location-of (s / seem-01)))))

(w / word 
      :ARG0-of (d / drop-06 
            :ARG2 (l / little-by-little) 
            :ARG2-of (r / reveal-01 
                  :ARG1 (e / everything))) 
      :ARG1-of (c / chance-02))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(f / fly-01 
      :ARG1 (i / it))

(a / airplane 
      :op-of (i / it))

(a2 / airplane 
      :op-of (i / it))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / then 
      :op "what" 
      :poss (h / he))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(y2 / yes)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(o / oh)

(f2 / funny 
      :domain (t2 / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(m / misfortune 
      :ARG1-of (l / like-02) 
      :ARG1-of (s / serious-01 
            :ARG0 (i / i) 
            :ARG1-of (t / take-04)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(p / planet)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / contrast-01 
      :ARG1-of (r / reply-01) 
      :op-of (h / he))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(r / reverie 
      :direction-of (s / sink-01 
            :ARG1 (l / long-03) 
            :op-of (a / and)) 
      :poss (h / he))

(t2 / take-out-11 
      :ARG0 (t3 / then 
            :domain (t / treasure)) 
      :ARG1 (p / pocket 
            :op (h / he 
                  :ARG1-of (b / bury-01 
                        :ARG1-of (c / contemplate-01 
                              :ARG0 (s / sheep))))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(c / come-01 
      :ARG0 (l / little 
            :mod-of (m / man)) 
      :ARG1 (y / you))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(t / take-01 
      :ARG1 (s / sheep) 
      :ARG2 (w / want-01 
            :duration (y / you)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / so 
      :domain-of (t / that))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(i / idea 
      :mod (q / queer))

(c / contrast-01 
      :ARG0-of (t / tie-01 
            :ARG1 (y / you)))

(s / say-01 
      :ARG0 (h / he 
            :ARG0-of (w / wander-01)) 
      :ARG1 (s2 / somewhere) 
      :ARG2 (i / i) 
      :ARG2-of (g / get-03 
            :ARG1 (l / lost) 
            :manner (a / and)))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(a / anywhere)

(a / ahead 
      :op (s / straight-04))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException
(a / amr-empty)

(s / small 
      :op-of (s2 / so 
            :ARG1-of (l / live-01 
                  :ARG0 (i / i) 
                  :ARG2 (e / everything))))

# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.ArrayIndexOutOfBoundsException: 145
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:155)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj$$anonfun$evalDev$3.apply(TrainObj.scala:142)
# 	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
# 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:142)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.evalDev(TrainObj.scala:26)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.trainingObserver(TrainObj.scala:121)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj$$anonfun$10.apply(TrainObj.scala:173)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:35)
# 	at edu.cmu.lti.nlp.amr.FastFeatureVector.Adagrad.learnParameters(Adagrad.scala:20)
# 	at edu.cmu.lti.nlp.amr.Train.Optimizer.learnParameters(Optimizer.scala:42)
# 	at edu.cmu.lti.nlp.amr.Train.TrainObj.train(TrainObj.scala:165)
# 	at edu.cmu.lti.nlp.amr.GraphDecoder.TrainObj.train(TrainObj.scala:129)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:138)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

