Stage1 features = List(bias, length, fromNERTagger, conceptGivenPhrase)
features = List(rootConcept, rootDependencyPathv1, bias, typeBias, self, fragHead, edgeCount, distance, logDistance, posPathv3, dependencyPathv4, conceptBigram)
connected = true
Reading weights
done
Sentence: VII 。

Oracle Span 1:  VII => VII
Spans:
Span 0-1:  VII => VII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  VII => VII

Dependencies:
1	VII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(VII,ArrayBuffer(Span(0,1,List(0),VII,VII,false)),Map(0 -> VII),Map(x0 -> VII))),[Ljava.lang.String;@1d119efb,Annotation([Ljava.lang.String;@659a969b,[Ljava.lang.String;@76908cc0,[Ljava.lang.String;@2473d930),Annotation([Ljava.lang.String;@35047d03,[Ljava.lang.String;@49b0b76,[Ledu.cmu.lti.nlp.amr.Dependency;@769f71a9),Annotation([Ljava.lang.String;@4c9f8c13,[Ljava.lang.String;@5ae50ce6,[Ljava.lang.String;@6f96c77),Annotation([Ljava.lang.String;@be64738,[Ljava.lang.String;@3ba9ad43,[Ledu.cmu.lti.nlp.amr.Entity;@49d904ec))
AMR:


Decoded in 283,242 microseconds
Sentence: 第五 天 ， 还是 羊 的 事 ， 把 小 王子 的 生活 秘密 向 我 揭开 了 。

Oracle Span 1:  事 => 事
Oracle Span 2:  天 => 天
Oracle Span 3:  小 => 小-01
Oracle Span 4:  我 => 我
Oracle Span 5:  揭开 => 揭开-02
Oracle Span 6:  王子 => 王子
Oracle Span 7:  生活 => 生活-01
Oracle Span 8:  秘密 => 秘密-01
Oracle Span 9:  羊 => 羊
Oracle Span 10:  还是 => 还是
Spans:
Span 6-7:  事 => 事
Span 1-2:  天 => 天
Span 9-10:  小 => 小-01
Span 15-16:  我 => 我
Span 16-17:  揭开 => 揭开-02
Span 10-11:  王子 => 王子
Span 12-13:  生活 => 生活-01
Span 13-14:  秘密 => 秘密-01
Span 4-5:  羊 => 羊
Span 3-4:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  事 => 事
Oracle Span 1-2:  天 => 天
Oracle Span 9-10:  小 => 小-01
Oracle Span 15-16:  我 => 我
Oracle Span 16-17:  揭开 => 揭开-02
Oracle Span 10-11:  王子 => 王子
Oracle Span 12-13:  生活 => 生活-01
Oracle Span 13-14:  秘密 => 秘密-01
Oracle Span 4-5:  羊 => 羊
Oracle Span 3-4:  还是 => 还是

Dependencies:
1	第五	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	17	nsubj	_	_
3	,	_	PU	PU	_	17	punct	_	_
4	还是	_	AD	AD	_	17	advmod	_	_
5	羊	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	事	_	NN	NN	_	17	nsubj	_	_
8	,	_	PU	PU	_	17	punct	_	_
9	把	_	BA	BA	_	17	ba	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	生活	_	NN	NN	_	17	nsubj	_	_
14	秘密	_	AD	AD	_	17	advmod	_	_
15	向	_	P	P	_	17	prep	_	_
16	我	_	PN	PN	_	15	pobj	_	_
17	揭开	_	VV	VV	_	0	root	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x11 / 王子, mod, x12 / 小-01)
(x4 / 揭开-02, arg0, x6 / 事)
(x4 / 揭开-02, arg1, x9 / 秘密-01)
(x4 / 揭开-02, beneficiary, x19 / 我)
(x4 / 揭开-02, time, x16 / 天)
(x6 / 事, manner, x8 / 还是)
(x6 / 事, topic, x7 / 羊)
(x9 / 秘密-01, arg0, x11 / 王子)
(x9 / 秘密-01, topic, x10 / 生活-01)

Input(Some(Graph((揭开-02 :beneficiary 我 :time (天 :ord (ordinal-entity :value 5)) :arg1 (秘密-01 :arg0 (王子 :mod 小-01) :topic 生活-01) :arg0 (事 :manner 还是 :topic 羊)),ArrayBuffer(Span(16,17,List(0),揭开,揭开-02,false), Span(15,16,List(1),我,我,false), Span(1,2,List(2),天,天,false), Span(13,14,List(3),秘密,秘密-01,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false), Span(12,13,List(6),生活,生活-01,false), Span(6,7,List(7),事,事,false), Span(3,4,List(8),还是,还是,false), Span(4,5,List(9),羊,羊,false)),Map(2 -> 天, 5 -> 小-01, 8 -> 还是, 7 -> 事, 1 -> 我, 4 -> 王子, 6 -> 生活-01, 9 -> 羊, 0 -> 揭开-02, 3 -> 秘密-01),Map(x16 -> 天, x10 -> 生活-01, x19 -> 我, x8 -> 还是, x12 -> 小-01, x7 -> 羊, x4 -> 揭开-02, x11 -> 王子, x6 -> 事, x9 -> 秘密-01))),[Ljava.lang.String;@6c64cb25,Annotation([Ljava.lang.String;@6ae5aa72,[Ljava.lang.String;@222545dc,[Ljava.lang.String;@5c5eefef),Annotation([Ljava.lang.String;@16293aa2,[Ljava.lang.String;@5158b42f,[Ledu.cmu.lti.nlp.amr.Dependency;@595b007d),Annotation([Ljava.lang.String;@72d1ad2e,[Ljava.lang.String;@2d7275fc,[Ljava.lang.String;@399f45b1),Annotation([Ljava.lang.String;@38c6f217,[Ljava.lang.String;@478190fc,[Ledu.cmu.lti.nlp.amr.Entity;@79e2c065))
AMR:
(x10 / 生活-01, ARG0, x12 / 小-01)
(x11 / 王子, mod, x12 / 小-01)
(x4 / 揭开-02, ARG3, x9 / 秘密-01)
(x4 / 揭开-02, beneficiary, x19 / 我)
(x4 / 揭开-02, compared-to, x6 / 事)
(x4 / 揭开-02, time, x16 / 天)
(x6 / 事, manner, x8 / 还是)
(x6 / 事, topic, x7 / 羊)
(x9 / 秘密-01, topic, x10 / 生活-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 340,441 microseconds
Sentence: 好象 默默 地 思索 了 很 长 时间 以后 ， 得出 了 什么 结果 一样 ， 他 突然 没头没脑 地 问 我 ： “ 羊 ， 要是 吃 小 灌木 ， 它 也 要 吃 花 罗 ？ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  吃 => 吃-01
Oracle Span 4:  吃 => 吃-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  很 => 很
Oracle Span 7:  得出 => 得出-01
Oracle Span 8:  思索 => 思索-01
Oracle Span 9:  我 => 我
Oracle Span 10:  时间 => 时间
Oracle Span 11:  没头没脑 => 没头没脑
Oracle Span 12:  灌木 => 灌木
Oracle Span 13:  突然 => 突然
Oracle Span 14:  结果 => 结果
Oracle Span 15:  羊 => 羊
Oracle Span 16:  花 => 花
Oracle Span 17:  要 => 要-03
Oracle Span 18:  长 => 长-02
Oracle Span 19:  问 => 问-01
Oracle Span 20:  默默 => 默默
Spans:
Span 32-33:  也 => 也
Span 16-17:  他 => 他
Span 27-28:  吃 => 吃-01
Span 34-35:  吃 => 吃-01
Span 28-29:  小 => 小-01
Span 5-6:  很 => 很
Span 10-11:  得出 => 得出-01
Span 3-4:  思索 => 思索-01
Span 21-22:  我 => 我
Span 7-8:  时间 => 时间
Span 18-19:  没头没脑 => 没头没脑
Span 29-30:  灌木 => 灌木
Span 17-18:  突然 => 突然
Span 13-14:  结果 => 结果
Span 24-25:  羊 => 羊
Span 35-36:  花 => 花
Span 33-34:  要 => 要-03
Span 6-7:  长 => 长-02
Span 20-21:  问 => 问-01
Span 1-2:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 32-33:  也 => 也
Oracle Span 16-17:  他 => 他
Oracle Span 27-28:  吃 => 吃-01
Oracle Span 34-35:  吃 => 吃-01
Oracle Span 28-29:  小 => 小-01
Oracle Span 5-6:  很 => 很
Oracle Span 10-11:  得出 => 得出-01
Oracle Span 3-4:  思索 => 思索-01
Oracle Span 21-22:  我 => 我
Oracle Span 7-8:  时间 => 时间
Oracle Span 18-19:  没头没脑 => 没头没脑
Oracle Span 29-30:  灌木 => 灌木
Oracle Span 17-18:  突然 => 突然
Oracle Span 13-14:  结果 => 结果
Oracle Span 24-25:  羊 => 羊
Oracle Span 35-36:  花 => 花
Oracle Span 33-34:  要 => 要-03
Oracle Span 6-7:  长 => 长-02
Oracle Span 20-21:  问 => 问-01
Oracle Span 1-2:  默默 => 默默

Dependencies:
1	好象	_	NN	NN	_	4	nsubj	_	_
2	默默	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	思索	_	VV	VV	_	9	lccomp	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	长	_	JJ	JJ	_	8	amod	_	_
8	时间	_	NN	NN	_	4	dobj	_	_
9	以后	_	LC	LC	_	21	loc	_	_
10	,	_	PU	PU	_	21	punct	_	_
11	得出	_	VV	VV	_	21	dep	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	什么	_	DT	DT	_	14	det	_	_
14	结果	_	NN	NN	_	11	dobj	_	_
15	一样	_	VA	VA	_	11	conj	_	_
16	,	_	PU	PU	_	21	punct	_	_
17	他	_	PN	PN	_	21	nsubj	_	_
18	突然	_	AD	AD	_	19	advmod	_	_
19	没头没脑	_	VA	VA	_	21	dvpmod	_	_
20	地	_	DEV	DEV	_	19	dvpm	_	_
21	问	_	VV	VV	_	0	root	_	_
22	我	_	PN	PN	_	21	dobj	_	_
23	：	_	PU	PU	_	21	punct	_	_
24	“	_	PU	PU	_	28	punct	_	_
25	羊	_	NN	NN	_	28	nsubj	_	_
26	,	_	PU	PU	_	28	punct	_	_
27	要是	_	AD	AD	_	28	advmod	_	_
28	吃	_	VV	VV	_	21	dep	_	_
29	小	_	JJ	JJ	_	30	amod	_	_
30	灌木	_	NN	NN	_	28	dobj	_	_
31	,	_	PU	PU	_	21	punct	_	_
32	它	_	PN	PN	_	35	dep	_	_
33	也	_	AD	AD	_	35	advmod	_	_
34	要	_	VV	VV	_	35	mmod	_	_
35	吃	_	VV	VV	_	21	conj	_	_
36	花	_	NN	NN	_	37	nn	_	_
37	罗	_	NR	NR	_	35	dobj	_	_
38	？	_	PU	PU	_	21	punct	_	_
39	”	_	PU	PU	_	21	punct	_	_

Oracle:
(x10 / 得出-01, arg1, x12 / 结果)
(x13 / 问-01, arg2, x17 / 我)
(x13 / 问-01, manner, x14 / 突然)
(x13 / 问-01, manner, x15 / 没头没脑)
(x19 / 吃-01, arg0, x20 / 羊)
(x19 / 吃-01, arg1, x21 / 灌木)
(x21 / 灌木, mod, x22 / 小-01)
(x24 / 要-03, arg0, x25 / 吃-01)
(x25 / 吃-01, arg1, x28 / 花)
(x25 / 吃-01, manner, x27 / 也)
(x4 / 思索-01, arg0, x5 / 他)
(x4 / 思索-01, duration, x7 / 时间)
(x4 / 思索-01, manner, x6 / 默默)
(x7 / 时间, mod, x8 / 长-02)
(x8 / 长-02, degree, x9 / 很)

Input(Some(Graph((causation :arg1 (像-02 :arg1 (temporal :arg1 (思索-01 :duration (时间 :mod (长-02 :degree 很)) :manner 默默 :arg0 他)) :arg2 (得出-01 :arg1 结果 :arg0 x5)) :arg2 (问-01 :arg1 (condition :arg1 (吃-01 :arg1 (灌木 :mod 小-01) :arg0 羊) :arg2 (要-03 :arg0 (吃-01 :mode interrogative :arg1 花 :manner 也 :arg0 x20))) :arg2 我 :arg0 x5 :manner 没头没脑 :manner 突然)),ArrayBuffer(Span(3,4,List(0),思索,思索-01,false), Span(7,8,List(1),时间,时间,false), Span(6,7,List(2),长,长-02,false), Span(5,6,List(3),很,很,false), Span(1,2,List(4),默默,默默,false), Span(16,17,List(5),他,他,false), Span(10,11,List(6),得出,得出-01,false), Span(13,14,List(7),结果,结果,false), Span(20,21,List(8),问,问-01,false), Span(27,28,List(9),吃,吃-01,false), Span(29,30,List(10),灌木,灌木,false), Span(28,29,List(11),小,小-01,false), Span(24,25,List(12),羊,羊,false), Span(33,34,List(13),要,要-03,false), Span(34,35,List(14),吃,吃-01,false), Span(35,36,List(15),花,花,false), Span(32,33,List(16),也,也,false), Span(21,22,List(17),我,我,false), Span(18,19,List(18),没头没脑,没头没脑,false), Span(17,18,List(19),突然,突然,false)),Map(2 -> 长-02, 5 -> 他, 12 -> 羊, 15 -> 花, 8 -> 问-01, 18 -> 没头没脑, 7 -> 结果, 17 -> 我, 1 -> 时间, 4 -> 默默, 11 -> 小-01, 14 -> 吃-01, 6 -> 得出-01, 9 -> 吃-01, 0 -> 思索-01, 16 -> 也, 19 -> 突然, 10 -> 灌木, 3 -> 很, 13 -> 要-03),Map(x28 -> 花, x22 -> 小-01, x25 -> 吃-01, x10 -> 得出-01, x19 -> 吃-01, x5 -> 他, x13 -> 问-01, x8 -> 长-02, x12 -> 结果, x27 -> 也, x21 -> 灌木, x15 -> 没头没脑, x7 -> 时间, x24 -> 要-03, x4 -> 思索-01, x6 -> 默默, x14 -> 突然, x20 -> 羊, x9 -> 很, x17 -> 我))),[Ljava.lang.String;@3febb011,Annotation([Ljava.lang.String;@10e31a9a,[Ljava.lang.String;@131774fe,[Ljava.lang.String;@158d2680),Annotation([Ljava.lang.String;@77847718,[Ljava.lang.String;@7f3b84b8,[Ledu.cmu.lti.nlp.amr.Dependency;@57a3af25),Annotation([Ljava.lang.String;@2b662a77,[Ljava.lang.String;@7f0eb4b4,[Ljava.lang.String;@5c33f1a9),Annotation([Ljava.lang.String;@1623b78d,[Ljava.lang.String;@c8c12ac,[Ledu.cmu.lti.nlp.amr.Entity;@6adbc9d))
AMR:
(x10 / 得出-01, manner, x8 / 长-02)
(x12 / 结果, mod, x10 / 得出-01)
(x13 / 问-01, extent, x20 / 羊)
(x13 / 问-01, manner, x12 / 结果)
(x13 / 问-01, manner, x14 / 突然)
(x13 / 问-01, manner, x15 / 没头没脑)
(x13 / 问-01, season, x17 / 我)
(x14 / 突然, poss, x5 / 他)
(x19 / 吃-01, prep-for, x20 / 羊)
(x21 / 灌木, mod, x19 / 吃-01)
(x21 / 灌木, mod, x22 / 小-01)
(x24 / 要-03, manner, x21 / 灌木)
(x25 / 吃-01, accompanier, x28 / 花)
(x25 / 吃-01, manner, x24 / 要-03)
(x25 / 吃-01, manner, x27 / 也)
(x4 / 思索-01, manner, x6 / 默默)
(x4 / 思索-01, manner, x8 / 长-02)
(x7 / 时间, mod, x8 / 长-02)
(x8 / 长-02, degree, x9 / 很)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.4.0
WARNING: makeIds can't find span Id: 0.1.4.0.1
WARNING: makeIds can't find span Id: 0.1.4.0.1.0
WARNING: makeIds can't find span Id: 0.1.4.0.0
WARNING: makeIds can't find span Id: 0.1.4.1
WARNING: makeIds can't find span Id: 0.1.4.1.0
WARNING: makeIds can't find span Id: 0.1.4.1.0.2
WARNING: makeIds can't find span Id: 0.1.4.1.0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 467,008 microseconds
Sentence: 一 只 羊

Oracle Span 1:  羊 => 羊
Spans:
Span 2-3:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  羊 => 羊

Dependencies:
1	一	_	CD	CD	_	2	nummod	_	_
2	只	_	M	M	_	3	clf	_	_
3	羊	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph((羊 :quant 1),ArrayBuffer(Span(2,3,List(0),羊,羊,false)),Map(0 -> 羊),Map(x0 -> 羊))),[Ljava.lang.String;@4550bb58,Annotation([Ljava.lang.String;@4ec4f3a0,[Ljava.lang.String;@223191a6,[Ljava.lang.String;@49139829),Annotation([Ljava.lang.String;@9597028,[Ljava.lang.String;@6069db50,[Ledu.cmu.lti.nlp.amr.Dependency;@4efbca5a),Annotation([Ljava.lang.String;@1b7cc17c,[Ljava.lang.String;@59662a0b,[Ljava.lang.String;@77fbd92c),Annotation([Ljava.lang.String;@67c27493,[Ljava.lang.String;@1a482e36,[Ledu.cmu.lti.nlp.amr.Entity;@72967906))
AMR:


Decoded in 6,878 microseconds
Sentence: “ 它 碰到 什么 吃 什么 。 ” 我 回答 。

Oracle Span 1:  吃 => 吃-01
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  它 => 它
Oracle Span 4:  我 => 我
Oracle Span 5:  碰到 => 碰到-01
Spans:
Span 4-5:  吃 => 吃-01
Span 9-10:  回答 => 回答-01
Span 1-2:  它 => 它
Span 8-9:  我 => 我
Span 2-3:  碰到 => 碰到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  吃 => 吃-01
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 1-2:  它 => 它
Oracle Span 8-9:  我 => 我
Oracle Span 2-3:  碰到 => 碰到-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	它	_	PN	PN	_	3	nsubj	_	_
3	碰到	_	VV	VV	_	5	dep	_	_
4	什么	_	PN	PN	_	5	prep	_	_
5	吃	_	VV	VV	_	0	root	_	_
6	什么	_	PN	PN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	回答	_	VV	VV	_	5	dep	_	_
11	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)
(x7 / 碰到-01, arg0, x8 / 它)

Input(Some(Graph((回答-01 :arg2 (condition :arg1 (碰到-01 :arg1 thing :arg0 它) :arg2 (吃-01 :arg1 x13 :arg0 x8)) :arg0 我),ArrayBuffer(Span(9,10,List(0),回答,回答-01,false), Span(2,3,List(1),碰到,碰到-01,false), Span(1,2,List(2),它,它,false), Span(4,5,List(3),吃,吃-01,false), Span(8,9,List(4),我,我,false)),Map(2 -> 它, 1 -> 碰到-01, 4 -> 我, 0 -> 回答-01, 3 -> 吃-01),Map(x2 -> 我, x10 -> 吃-01, x8 -> 它, x7 -> 碰到-01, x0 -> 回答-01))),[Ljava.lang.String;@5b8dfcc1,Annotation([Ljava.lang.String;@2f9f7dcf,[Ljava.lang.String;@747ddf94,[Ljava.lang.String;@35e2d654),Annotation([Ljava.lang.String;@1bd4fdd,[Ljava.lang.String;@55183b20,[Ledu.cmu.lti.nlp.amr.Dependency;@4f83df68),Annotation([Ljava.lang.String;@6cf0e0ba,[Ljava.lang.String;@7d8995e,[Ljava.lang.String;@130d63be),Annotation([Ljava.lang.String;@42a48628,[Ljava.lang.String;@293a5bf6,[Ledu.cmu.lti.nlp.amr.Entity;@6aeb35e6))
AMR:
(x0 / 回答-01, manner, x2 / 我)
(x10 / 吃-01, prep-through, x0 / 回答-01)
(x7 / 碰到-01, ARG3, x8 / 它)
(x7 / 碰到-01, prep-through, x10 / 吃-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 29,344 microseconds
Sentence: “ 连 有 刺 的 花 也 吃 吗 ？ ”

Oracle Span 1:  刺 => 刺
Oracle Span 2:  吃 => 吃-01
Oracle Span 3:  有 => 有-01
Oracle Span 4:  花 => 花
Spans:
Span 3-4:  刺 => 刺
Span 7-8:  吃 => 吃-01
Span 2-3:  有 => 有-01
Span 5-6:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  刺 => 刺
Oracle Span 7-8:  吃 => 吃-01
Oracle Span 2-3:  有 => 有-01
Oracle Span 5-6:  花 => 花

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	连	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	6	rcmod	_	_
4	刺	_	NN	NN	_	3	dobj	_	_
5	的	_	DEC	DEC	_	3	cpm	_	_
6	花	_	NN	NN	_	8	nsubj	_	_
7	也	_	AD	AD	_	8	advmod	_	_
8	吃	_	VV	VV	_	0	root	_	_
9	吗	_	SP	SP	_	8	dep	_	_
10	？	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x15 / 有-01, arg0, x14 / 花)
(x15 / 有-01, arg1, x16 / 刺)

Input(Some(Graph((say :arg1 (concession :arg1 (花 :arg0-of (有-01 :arg1 刺)) :arg2 (吃-01 :mode interrogative :arg1 x14))),ArrayBuffer(Span(5,6,List(0),花,花,false), Span(2,3,List(1),有,有-01,false), Span(3,4,List(2),刺,刺,false), Span(7,8,List(3),吃,吃-01,false)),Map(2 -> 刺, 1 -> 有-01, 0 -> 花, 3 -> 吃-01),Map(x16 -> 刺, x15 -> 有-01, x14 -> 花, x17 -> 吃-01))),[Ljava.lang.String;@1283bb96,Annotation([Ljava.lang.String;@74f0ea28,[Ljava.lang.String;@f6efaab,[Ljava.lang.String;@3c19aaa5),Annotation([Ljava.lang.String;@3349e9bb,[Ljava.lang.String;@409bf450,[Ledu.cmu.lti.nlp.amr.Dependency;@38d8f54a),Annotation([Ljava.lang.String;@49e53c76,[Ljava.lang.String;@351d00c0,[Ljava.lang.String;@2a3b5b47),Annotation([Ljava.lang.String;@55b699ef,[Ljava.lang.String;@35d019a3,[Ledu.cmu.lti.nlp.amr.Entity;@689604d9))
AMR:
(x15 / 有-01, prep-as, x14 / 花)
(x15 / 有-01, prep-as, x16 / 刺)
(x17 / 吃-01, beneficiary, x14 / 花)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 25,336 microseconds
Sentence: “ 有 刺 的 也 吃 ！ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  刺 => 刺
Oracle Span 3:  吃 => (thing :arg1-of 吃-01)
Oracle Span 4:  有 => 有-03
Spans:
Span 4-5:  也 => 也
Span 2-3:  刺 => 刺
Span 5-6:  吃 => (thing :arg1-of 吃-01)
Span 1-2:  有 => 有-03

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 那么 刺 有 什么 用 呢 ？ ”

Oracle Span 1:  刺 => 刺
Spans:
Span 2-3:  刺 => 刺

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  刺 => 刺

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	刺	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	什么	_	PN	PN	_	6	nsubj	_	_
6	用	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有用-01 :arg0 刺 :mod amr-unknown :mode interrogative)),ArrayBuffer(Span(2,3,List(0),刺,刺,false)),Map(0 -> 刺),Map(x3 -> 刺))),[Ljava.lang.String;@34a3d150,Annotation([Ljava.lang.String;@2a4fb17b,[Ljava.lang.String;@5c6648b0,[Ljava.lang.String;@6f1de4c7),Annotation([Ljava.lang.String;@459e9125,[Ljava.lang.String;@128d2484,[Ledu.cmu.lti.nlp.amr.Dependency;@7cc0cdad),Annotation([Ljava.lang.String;@7c7b252e,[Ljava.lang.String;@4d5d943d,[Ljava.lang.String;@368f2016),Annotation([Ljava.lang.String;@4c583ecf,[Ljava.lang.String;@692f203f,[Ledu.cmu.lti.nlp.amr.Entity;@48f2bd5b))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,736 microseconds
Sentence: 我 不 知道 该 怎么 回答 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  我 => 我
Oracle Span 3:  知道 => 知道-01
Oracle Span 4:  该 => 该-01
Spans:
Span 5-6:  回答 => 回答-01
Span 0-1:  我 => 我
Span 2-3:  知道 => 知道-01
Span 3-4:  该 => 该-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 3-4:  该 => 该-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	该	_	DT	DT	_	6	dep	_	_
5	怎么	_	AD	AD	_	6	advmod	_	_
6	回答	_	VV	VV	_	3	ccomp	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x3 / 我)
(x0 / 知道-01, arg1, x5 / 该-01)
(x5 / 该-01, arg0, x6 / 回答-01)

Input(Some(Graph((知道-01 :arg1 (该-01 :arg0 (回答-01 :arg2 amr-unknown :arg0 x3)) :arg0 我 :polarity -),ArrayBuffer(Span(2,3,List(0),知道,知道-01,false), Span(3,4,List(1),该,该-01,false), Span(5,6,List(2),回答,回答-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 回答-01, 1 -> 该-01, 0 -> 知道-01, 3 -> 我),Map(x5 -> 该-01, x3 -> 我, x6 -> 回答-01, x0 -> 知道-01))),[Ljava.lang.String;@7b2bbc3,Annotation([Ljava.lang.String;@a1153bc,[Ljava.lang.String;@1aafa419,[Ljava.lang.String;@47eaca72),Annotation([Ljava.lang.String;@55141def,[Ljava.lang.String;@55182842,[Ledu.cmu.lti.nlp.amr.Dependency;@3270d194),Annotation([Ljava.lang.String;@235834f2,[Ljava.lang.String;@5656be13,[Ljava.lang.String;@4218d6a3),Annotation([Ljava.lang.String;@76505305,[Ljava.lang.String;@14cd1699,[Ledu.cmu.lti.nlp.amr.Entity;@77888435))
AMR:
(x0 / 知道-01, decade, x3 / 我)
(x0 / 知道-01, snt11, x5 / 该-01)
(x6 / 回答-01, manner, x5 / 该-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 16,727 microseconds
Sentence: 那会儿 我 正 忙 着 要 从 发动机 上 卸下 一 颗 拧 得 太 紧 的 螺丝 。

Oracle Span 1:  卸下 => 卸下-01
Oracle Span 2:  发动机 => 发动机
Oracle Span 3:  太 => 太
Oracle Span 4:  忙 => 忙-01
Oracle Span 5:  我 => 我
Oracle Span 6:  拧 => 拧-01
Oracle Span 7:  正 => 正
Oracle Span 8:  紧 => 紧-01
Oracle Span 9:  螺丝 => 螺丝
Oracle Span 10:  要 => 要-03
Oracle Span 11:  那会儿 => 那会儿
Spans:
Span 9-10:  卸下 => 卸下-01
Span 7-8:  发动机 => 发动机
Span 14-15:  太 => 太
Span 3-4:  忙 => 忙-01
Span 1-2:  我 => 我
Span 12-13:  拧 => 拧-01
Span 2-3:  正 => 正
Span 15-16:  紧 => 紧-01
Span 17-18:  螺丝 => 螺丝
Span 5-6:  要 => 要-03
Span 0-1:  那会儿 => 那会儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  卸下 => 卸下-01
Oracle Span 7-8:  发动机 => 发动机
Oracle Span 14-15:  太 => 太
Oracle Span 3-4:  忙 => 忙-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  拧 => 拧-01
Oracle Span 2-3:  正 => 正
Oracle Span 15-16:  紧 => 紧-01
Oracle Span 17-18:  螺丝 => 螺丝
Oracle Span 5-6:  要 => 要-03
Oracle Span 0-1:  那会儿 => 那会儿

Dependencies:
1	那会儿	_	NN	NN	_	4	nsubj	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	正	_	AD	AD	_	4	advmod	_	_
4	忙	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	要	_	VV	VV	_	10	mmod	_	_
7	从	_	P	P	_	10	prep	_	_
8	发动机	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	7	plmod	_	_
10	卸下	_	VV	VV	_	4	ccomp	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	颗	_	M	M	_	13	clf	_	_
13	拧	_	NN	NN	_	10	dobj	_	_
14	得	_	VV	VV	_	10	dep	_	_
15	太	_	AD	AD	_	14	advmod	_	_
16	紧	_	JJ	JJ	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	螺丝	_	NN	NN	_	14	dobj	_	_
19	。	_	PU	PU	_	4	punct	_	_
20	我	_	PN	PN	_	10	xsubj	_	_
21	那会儿	_	NN	NN	_	10	xsubj	_	_

Oracle:
(x0 / 忙-01, arg0, x2 / 我)
(x0 / 忙-01, arg1, x5 / 要-03)
(x0 / 忙-01, manner, x3 / 正)
(x0 / 忙-01, time, x4 / 那会儿)
(x10 / 拧-01, arg1, x8 / 螺丝)
(x10 / 拧-01, degree, x12 / 紧-01)
(x12 / 紧-01, degree, x13 / 太)
(x5 / 要-03, arg0, x6 / 卸下-01)
(x6 / 卸下-01, arg1, x8 / 螺丝)
(x8 / 螺丝, location, x14 / 发动机)

Input(Some(Graph((忙-01 :arg1 (要-03 :arg0 (卸下-01 :arg1 (螺丝 :location 发动机 :arg1-of (拧-01 :degree (紧-01 :degree 太) :arg0 x2) :quant 1) :arg0 x2)) :time 那会儿 :manner 正 :arg0 我),ArrayBuffer(Span(3,4,List(0),忙,忙-01,false), Span(5,6,List(1),要,要-03,false), Span(9,10,List(2),卸下,卸下-01,false), Span(17,18,List(3),螺丝,螺丝,false), Span(7,8,List(4),发动机,发动机,false), Span(12,13,List(5),拧,拧-01,false), Span(15,16,List(6),紧,紧-01,false), Span(14,15,List(7),太,太,false), Span(0,1,List(8),那会儿,那会儿,false), Span(2,3,List(9),正,正,false), Span(1,2,List(10),我,我,false)),Map(2 -> 卸下-01, 5 -> 拧-01, 8 -> 那会儿, 7 -> 太, 1 -> 要-03, 4 -> 发动机, 6 -> 紧-01, 9 -> 正, 0 -> 忙-01, 10 -> 我, 3 -> 螺丝),Map(x10 -> 拧-01, x2 -> 我, x5 -> 要-03, x13 -> 太, x8 -> 螺丝, x12 -> 紧-01, x4 -> 那会儿, x3 -> 正, x6 -> 卸下-01, x14 -> 发动机, x0 -> 忙-01))),[Ljava.lang.String;@73a1e9a9,Annotation([Ljava.lang.String;@71d44a3,[Ljava.lang.String;@7b98f307,[Ljava.lang.String;@4802796d),Annotation([Ljava.lang.String;@34123d65,[Ljava.lang.String;@59474f18,[Ledu.cmu.lti.nlp.amr.Dependency;@65fb9ffc),Annotation([Ljava.lang.String;@3e694b3f,[Ljava.lang.String;@1bb5a082,[Ljava.lang.String;@78691363),Annotation([Ljava.lang.String;@41d477ed,[Ljava.lang.String;@3590fc5b,[Ledu.cmu.lti.nlp.amr.Entity;@397fbdb))
AMR:
(x0 / 忙-01, degree, x14 / 发动机)
(x0 / 忙-01, degree, x2 / 我)
(x0 / 忙-01, extent, x5 / 要-03)
(x0 / 忙-01, manner, x3 / 正)
(x0 / 忙-01, time, x4 / 那会儿)
(x10 / 拧-01, degree, x12 / 紧-01)
(x10 / 拧-01, manner, x6 / 卸下-01)
(x12 / 紧-01, degree, x13 / 太)
(x6 / 卸下-01, location, x14 / 发动机)
(x8 / 螺丝, location, x12 / 紧-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.3.0.1.2
WARNING: makeIds can't find span Id: 0.3.0.1.1
WARNING: makeIds can't find span Id: 0.3.0.1.1.1
WARNING: makeIds can't find span Id: 0.3.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 92,246 microseconds
Sentence: 我 发现 机器 故障 似乎 很 严重 ，

Oracle Span 1:  严重 => 严重-01
Oracle Span 2:  似乎 => 似乎-01
Oracle Span 3:  发现 => 发现-01
Oracle Span 4:  很 => 很
Oracle Span 5:  我 => 我
Oracle Span 6:  故障 => 故障-01
Oracle Span 7:  机器 => 机器
Spans:
Span 6-7:  严重 => 严重-01
Span 4-5:  似乎 => 似乎-01
Span 1-2:  发现 => 发现-01
Span 5-6:  很 => 很
Span 0-1:  我 => 我
Span 3-4:  故障 => 故障-01
Span 2-3:  机器 => 机器

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  严重 => 严重-01
Oracle Span 4-5:  似乎 => 似乎-01
Oracle Span 1-2:  发现 => 发现-01
Oracle Span 5-6:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  故障 => 故障-01
Oracle Span 2-3:  机器 => 机器

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	发现	_	VV	VV	_	0	root	_	_
3	机器	_	NN	NN	_	4	nn	_	_
4	故障	_	NN	NN	_	2	dobj	_	_
5	似乎	_	VV	VV	_	7	mmod	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	严重	_	VA	VA	_	2	conj	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 发现-01, arg0, x2 / 我)
(x0 / 发现-01, arg1, x3 / 严重-01)
(x3 / 严重-01, arg0, x6 / 故障-01)
(x3 / 严重-01, degree, x4 / 很)
(x3 / 严重-01, manner, x5 / 似乎-01)
(x6 / 故障-01, arg0, x7 / 机器)

Input(Some(Graph((发现-01 :arg1 (严重-01 :arg0 (故障-01 :arg0 机器) :manner 似乎-01 :degree 很) :arg0 我),ArrayBuffer(Span(1,2,List(0),发现,发现-01,false), Span(6,7,List(1),严重,严重-01,false), Span(3,4,List(2),故障,故障-01,false), Span(2,3,List(3),机器,机器,false), Span(4,5,List(4),似乎,似乎-01,false), Span(5,6,List(5),很,很,false), Span(0,1,List(6),我,我,false)),Map(2 -> 故障-01, 5 -> 很, 1 -> 严重-01, 4 -> 似乎-01, 6 -> 我, 0 -> 发现-01, 3 -> 机器),Map(x2 -> 我, x5 -> 似乎-01, x7 -> 机器, x4 -> 很, x3 -> 严重-01, x6 -> 故障-01, x0 -> 发现-01))),[Ljava.lang.String;@33d512c1,Annotation([Ljava.lang.String;@515c6049,[Ljava.lang.String;@639c2c1d,[Ljava.lang.String;@5fe94a96),Annotation([Ljava.lang.String;@443118b0,[Ljava.lang.String;@765d7657,[Ledu.cmu.lti.nlp.amr.Dependency;@74235045),Annotation([Ljava.lang.String;@618b19ad,[Ljava.lang.String;@2d3379b4,[Ljava.lang.String;@30c15d8b),Annotation([Ljava.lang.String;@5e0e82ae,[Ljava.lang.String;@6771beb3,[Ledu.cmu.lti.nlp.amr.Entity;@51399530))
AMR:
(x0 / 发现-01, ARG3, x3 / 严重-01)
(x0 / 发现-01, value, x2 / 我)
(x3 / 严重-01, ARG1, x6 / 故障-01)
(x3 / 严重-01, degree, x4 / 很)
(x3 / 严重-01, manner, x5 / 似乎-01)
(x6 / 故障-01, location, x7 / 机器)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 45,423 microseconds
Sentence: 饮水 也 快 完 了 ， 担心 可能 发生 最 坏 的 情况 ， 心里 很 着急 。

Oracle Span 1:  也 => 也
Oracle Span 2:  发生 => 发生-01
Oracle Span 3:  可能 => 可能-02
Oracle Span 4:  坏 => 坏-01
Oracle Span 5:  完 => 完-01
Oracle Span 6:  很 => 很
Oracle Span 7:  心里 => 心里
Oracle Span 8:  快 => 快-01
Oracle Span 9:  情况 => 情况
Oracle Span 10:  担心 => 担心-01
Oracle Span 11:  最 => 最
Oracle Span 12:  着急 => 着急-02
Oracle Span 13:  饮水 => 饮水
Spans:
Span 1-2:  也 => 也
Span 8-9:  发生 => 发生-01
Span 7-8:  可能 => 可能-02
Span 10-11:  坏 => 坏-01
Span 3-4:  完 => 完-01
Span 15-16:  很 => 很
Span 14-15:  心里 => 心里
Span 2-3:  快 => 快-01
Span 12-13:  情况 => 情况
Span 6-7:  担心 => 担心-01
Span 9-10:  最 => 最
Span 16-17:  着急 => 着急-02
Span 0-1:  饮水 => 饮水

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 8-9:  发生 => 发生-01
Oracle Span 7-8:  可能 => 可能-02
Oracle Span 10-11:  坏 => 坏-01
Oracle Span 3-4:  完 => 完-01
Oracle Span 15-16:  很 => 很
Oracle Span 14-15:  心里 => 心里
Oracle Span 2-3:  快 => 快-01
Oracle Span 12-13:  情况 => 情况
Oracle Span 6-7:  担心 => 担心-01
Oracle Span 9-10:  最 => 最
Oracle Span 16-17:  着急 => 着急-02
Oracle Span 0-1:  饮水 => 饮水

Dependencies:
1	饮水	_	NN	NN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	快	_	VA	VA	_	0	root	_	_
4	完	_	VV	VV	_	3	dep	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	担心	_	VV	VV	_	3	dep	_	_
8	可能	_	VV	VV	_	9	mmod	_	_
9	发生	_	VV	VV	_	7	ccomp	_	_
10	最	_	AD	AD	_	11	advmod	_	_
11	坏	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	情况	_	NN	NN	_	9	dobj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	心里	_	NN	NN	_	17	nsubj	_	_
16	很	_	AD	AD	_	17	advmod	_	_
17	着急	_	VA	VA	_	3	conj	_	_
18	。	_	PU	PU	_	3	punct	_	_
19	饮水	_	NN	NN	_	9	xsubj	_	_

Oracle:
(x10 / 情况, mod, x11 / 坏-01)
(x11 / 坏-01, degree, x12 / 最)
(x13 / 着急-02, arg0, x15 / 心里)
(x13 / 着急-02, degree, x14 / 很)
(x3 / 完-01, arg0, x4 / 饮水)
(x3 / 完-01, manner, x5 / 快-01)
(x3 / 完-01, manner, x6 / 也)
(x7 / 担心-01, arg1, x8 / 可能-02)
(x8 / 可能-02, arg0, x9 / 发生-01)
(x9 / 发生-01, arg0, x10 / 情况)

Input(Some(Graph((causation :arg1 (and :op (完-01 :manner 也 :manner 快-01 :arg0 饮水) :op (担心-01 :arg1 (可能-02 :arg0 (发生-01 :arg0 (情况 :mod (坏-01 :degree 最)))))) :arg2 (着急-02 :arg0 心里 :degree 很)),ArrayBuffer(Span(3,4,List(0),完,完-01,false), Span(1,2,List(1),也,也,false), Span(2,3,List(2),快,快-01,false), Span(0,1,List(3),饮水,饮水,false), Span(6,7,List(4),担心,担心-01,false), Span(7,8,List(5),可能,可能-02,false), Span(8,9,List(6),发生,发生-01,false), Span(12,13,List(7),情况,情况,false), Span(10,11,List(8),坏,坏-01,false), Span(9,10,List(9),最,最,false), Span(16,17,List(10),着急,着急-02,false), Span(14,15,List(11),心里,心里,false), Span(15,16,List(12),很,很,false)),Map(2 -> 快-01, 5 -> 可能-02, 12 -> 很, 8 -> 坏-01, 7 -> 情况, 1 -> 也, 4 -> 担心-01, 11 -> 心里, 6 -> 发生-01, 9 -> 最, 0 -> 完-01, 10 -> 着急-02, 3 -> 饮水),Map(x10 -> 情况, x5 -> 快-01, x13 -> 着急-02, x8 -> 可能-02, x12 -> 最, x15 -> 心里, x7 -> 担心-01, x4 -> 饮水, x11 -> 坏-01, x3 -> 完-01, x6 -> 也, x14 -> 很, x9 -> 发生-01))),[Ljava.lang.String;@6b2ea799,Annotation([Ljava.lang.String;@411f53a0,[Ljava.lang.String;@2b71e916,[Ljava.lang.String;@36fc695d),Annotation([Ljava.lang.String;@28701274,[Ljava.lang.String;@13c9d689,[Ledu.cmu.lti.nlp.amr.Dependency;@3754a4bf),Annotation([Ljava.lang.String;@62379589,[Ljava.lang.String;@4afcd809,[Ljava.lang.String;@175c2241),Annotation([Ljava.lang.String;@5bf0d49,[Ljava.lang.String;@5b7a5baa,[Ledu.cmu.lti.nlp.amr.Entity;@776aec5c))
AMR:
(x10 / 情况, mod, x11 / 坏-01)
(x10 / 情况, mod, x15 / 心里)
(x11 / 坏-01, degree, x12 / 最)
(x11 / 坏-01, degree, x9 / 发生-01)
(x13 / 着急-02, degree, x14 / 很)
(x13 / 着急-02, degree, x15 / 心里)
(x3 / 完-01, manner, x4 / 饮水)
(x3 / 完-01, manner, x5 / 快-01)
(x3 / 完-01, manner, x6 / 也)
(x3 / 完-01, prep-against, x7 / 担心-01)
(x7 / 担心-01, season, x8 / 可能-02)
(x8 / 可能-02, season, x9 / 发生-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 107,456 microseconds
Sentence: “ 那么 刺 有 什么 用 呢 ？ ”

Oracle Span 1:  刺 => 刺
Spans:
Span 2-3:  刺 => 刺

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  刺 => 刺

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	刺	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	什么	_	PN	PN	_	6	nsubj	_	_
6	用	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有用-01 :arg0 刺 :mod amr-unknown :mode interrogative)),ArrayBuffer(Span(2,3,List(0),刺,刺,false)),Map(0 -> 刺),Map(x4 -> 刺))),[Ljava.lang.String;@1d296da,Annotation([Ljava.lang.String;@7c7a06ec,[Ljava.lang.String;@75d4a5c2,[Ljava.lang.String;@557caf28),Annotation([Ljava.lang.String;@408d971b,[Ljava.lang.String;@6c6cb480,[Ledu.cmu.lti.nlp.amr.Dependency;@3c46e67a),Annotation([Ljava.lang.String;@c730b35,[Ljava.lang.String;@206a70ef,[Ljava.lang.String;@292b08d6),Annotation([Ljava.lang.String;@22555ebf,[Ljava.lang.String;@36ebc363,[Ledu.cmu.lti.nlp.amr.Entity;@45752059))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,982 microseconds
Sentence: 小 王子 一旦 提出 了 问题 ， 从来 不 会 放过 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  会 => 会-02
Oracle Span 3:  小 => 小-01
Oracle Span 4:  提出 => 提出-01
Oracle Span 5:  放过 => 放过-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  问题 => 问题
Spans:
Span 7-8:  从来 => 从来
Span 9-10:  会 => 会-02
Span 0-1:  小 => 小-01
Span 3-4:  提出 => 提出-01
Span 10-11:  放过 => 放过-01
Span 1-2:  王子 => 王子
Span 5-6:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  从来 => 从来
Oracle Span 9-10:  会 => 会-02
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 10-11:  放过 => 放过-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  问题 => 问题

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	一旦	_	CS	CS	_	4	advmod	_	_
4	提出	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	问题	_	NN	NN	_	4	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	从来	_	AD	AD	_	11	advmod	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	会	_	VV	VV	_	11	dep	_	_
11	放过	_	VV	VV	_	4	conj	_	_
12	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 放过-01)
(x11 / 会-02, time, x17 / 从来)
(x6 / 提出-01, arg0, x7 / 王子)
(x6 / 提出-01, arg1, x9 / 问题)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((condition :arg1 (提出-01 :arg1 问题 :arg0 (王子 :mod 小-01)) :arg2 (会-02 :time 从来 :polarity - :arg0 (放过-01 :arg1 x9 :arg0 x7))),ArrayBuffer(Span(3,4,List(0),提出,提出-01,false), Span(5,6,List(1),问题,问题,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(9,10,List(4),会,会-02,false), Span(7,8,List(5),从来,从来,false), Span(10,11,List(6),放过,放过-01,false)),Map(2 -> 王子, 5 -> 从来, 1 -> 问题, 4 -> 会-02, 6 -> 放过-01, 0 -> 提出-01, 3 -> 小-01),Map(x8 -> 小-01, x12 -> 放过-01, x7 -> 王子, x11 -> 会-02, x6 -> 提出-01, x17 -> 从来, x9 -> 问题))),[Ljava.lang.String;@34e9fd99,Annotation([Ljava.lang.String;@3c41ed1d,[Ljava.lang.String;@54d9d12d,[Ljava.lang.String;@38425407),Annotation([Ljava.lang.String;@43bc63a3,[Ljava.lang.String;@702657cc,[Ledu.cmu.lti.nlp.amr.Dependency;@6a6cb05c),Annotation([Ljava.lang.String;@40a4337a,[Ljava.lang.String;@6025e1b6,[Ljava.lang.String;@22ff4249),Annotation([Ljava.lang.String;@2d1ef81a,[Ljava.lang.String;@4c402120,[Ledu.cmu.lti.nlp.amr.Entity;@327514f))
AMR:
(x11 / 会-02, compared-to, x12 / 放过-01)
(x11 / 会-02, time, x17 / 从来)
(x12 / 放过-01, age, x9 / 问题)
(x6 / 提出-01, mod, x9 / 问题)
(x6 / 提出-01, source, x7 / 王子)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 44,654 microseconds
Sentence: 这个 该死 的 螺丝 使 我 很 恼火 ，

Oracle Span 1:  很 => 很
Oracle Span 2:  恼火 => 恼火-01
Oracle Span 3:  我 => 我
Oracle Span 4:  螺丝 => 螺丝
Oracle Span 5:  该死 => 该死
Spans:
Span 6-7:  很 => 很
Span 7-8:  恼火 => 恼火-01
Span 5-6:  我 => 我
Span 3-4:  螺丝 => 螺丝
Span 1-2:  该死 => 该死

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  很 => 很
Oracle Span 7-8:  恼火 => 恼火-01
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  螺丝 => 螺丝
Oracle Span 1-2:  该死 => 该死

Dependencies:
1	这个	_	NN	NN	_	2	nn	_	_
2	该死	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	螺丝	_	NN	NN	_	5	nsubj	_	_
5	使	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	恼火	_	VV	VV	_	5	ccomp	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 螺丝, mod, x14 / 该死)
(x9 / 恼火-01, arg0, x12 / 我)
(x9 / 恼火-01, cause, x13 / 螺丝)
(x9 / 恼火-01, degree, x11 / 很)

Input(Some(Graph((恼火-01 :cause (螺丝 :mod 这 :mod 该死) :arg0 我 :degree 很),ArrayBuffer(Span(7,8,List(0),恼火,恼火-01,false), Span(3,4,List(1),螺丝,螺丝,false), Span(1,2,List(2),该死,该死,false), Span(5,6,List(3),我,我,false), Span(6,7,List(4),很,很,false)),Map(2 -> 该死, 1 -> 螺丝, 4 -> 很, 0 -> 恼火-01, 3 -> 我),Map(x13 -> 螺丝, x12 -> 我, x11 -> 很, x14 -> 该死, x9 -> 恼火-01))),[Ljava.lang.String;@5b12b668,Annotation([Ljava.lang.String;@1165b38,[Ljava.lang.String;@4c12331b,[Ljava.lang.String;@7586beff),Annotation([Ljava.lang.String;@3b69e7d1,[Ljava.lang.String;@815b41f,[Ledu.cmu.lti.nlp.amr.Dependency;@5542c4ed),Annotation([Ljava.lang.String;@1573f9fc,[Ljava.lang.String;@6150c3ec,[Ljava.lang.String;@44c03695),Annotation([Ljava.lang.String;@7e6f74c,[Ljava.lang.String;@dd05255,[Ledu.cmu.lti.nlp.amr.Entity;@6a78afa0))
AMR:
(x13 / 螺丝, mod, x14 / 该死)
(x9 / 恼火-01, ARG6, x13 / 螺丝)
(x9 / 恼火-01, beneficiary, x12 / 我)
(x9 / 恼火-01, degree, x11 / 很)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 25,124 microseconds
Sentence: 我 于是 就 随便 回答 了 他 一 句 ： “ 刺 么 ， 什么 用 都 没有 ，

Oracle Span 1:  什么 => 什么
Oracle Span 2:  他 => 他
Oracle Span 3:  刺 => 刺
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  我 => 我
Oracle Span 6:  用 => 用
Oracle Span 7:  随便 => 随便
Spans:
Span 14-15:  什么 => 什么
Span 6-7:  他 => 他
Span 11-12:  刺 => 刺
Span 4-5:  回答 => 回答-01
Span 0-1:  我 => 我
Span 15-16:  用 => 用
Span 3-4:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  什么 => 什么
Oracle Span 6-7:  他 => 他
Oracle Span 11-12:  刺 => 刺
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 15-16:  用 => 用
Oracle Span 3-4:  随便 => 随便

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	于是	_	AD	AD	_	5	advmod	_	_
3	就	_	P	P	_	5	prep	_	_
4	随便	_	NN	NN	_	3	pobj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	他	_	PN	PN	_	9	nn	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	句	_	NN	NN	_	5	dobj	_	_
10	：	_	PU	PU	_	5	punct	_	_
11	“	_	PU	PU	_	13	punct	_	_
12	刺	_	NR	NR	_	13	nsubj	_	_
13	么	_	VV	VV	_	5	dep	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	什么	_	DT	DT	_	16	det	_	_
16	用	_	NN	NN	_	18	nsubj	_	_
17	都	_	AD	AD	_	18	advmod	_	_
18	没有	_	VE	VE	_	13	ccomp	_	_
19	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x10 / 用, mod, x11 / 什么)
(x2 / 回答-01, arg0, x3 / 我)
(x2 / 回答-01, arg3, x6 / 他)
(x2 / 回答-01, manner, x5 / 随便)

Input(Some(Graph((temporal :arg2 (回答-01 :arg2 (有-03 :polarity - :arg0 刺 :arg1 (用 :mod 什么)) :arg3 他 :manner 随便 :arg0 我)),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(11,12,List(1),刺,刺,false), Span(15,16,List(2),用,用,false), Span(14,15,List(3),什么,什么,false), Span(6,7,List(4),他,他,false), Span(3,4,List(5),随便,随便,false), Span(0,1,List(6),我,我,false)),Map(2 -> 用, 5 -> 随便, 1 -> 刺, 4 -> 他, 6 -> 我, 0 -> 回答-01, 3 -> 什么),Map(x10 -> 用, x2 -> 回答-01, x5 -> 随便, x3 -> 我, x11 -> 什么, x6 -> 他, x9 -> 刺))),[Ljava.lang.String;@2f4948e4,Annotation([Ljava.lang.String;@1f2586d6,[Ljava.lang.String;@10683d9d,[Ljava.lang.String;@3fc2959f),Annotation([Ljava.lang.String;@5aa9e4eb,[Ljava.lang.String;@6989da5e,[Ledu.cmu.lti.nlp.amr.Dependency;@385c9627),Annotation([Ljava.lang.String;@139982de,[Ljava.lang.String;@682b2fa,[Ljava.lang.String;@217ed35e),Annotation([Ljava.lang.String;@7dcf94f8,[Ljava.lang.String;@229f66ed,[Ledu.cmu.lti.nlp.amr.Entity;@31190526))
AMR:
(x10 / 用, mod, x11 / 什么)
(x2 / 回答-01, manner, x5 / 随便)
(x2 / 回答-01, polite, x9 / 刺)
(x2 / 回答-01, snt11, x6 / 他)
(x5 / 随便, quant, x3 / 我)
(x9 / 刺, part, x10 / 用)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.3.2.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 63,893 microseconds
Sentence: 这 纯粹 是 花 的 恶劣 表现 。 ”

Oracle Span 1:  恶劣 => 恶劣-01
Oracle Span 2:  纯粹 => 纯粹
Oracle Span 3:  花 => 花
Oracle Span 4:  表现 => 表现-01
Oracle Span 5:  这 => 这
Spans:
Span 5-6:  恶劣 => 恶劣-01
Span 1-2:  纯粹 => 纯粹
Span 3-4:  花 => 花
Span 6-7:  表现 => 表现-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  恶劣 => 恶劣-01
Oracle Span 1-2:  纯粹 => 纯粹
Oracle Span 3-4:  花 => 花
Oracle Span 6-7:  表现 => 表现-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	纯粹	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	花	_	NN	NN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	恶劣	_	JJ	JJ	_	7	amod	_	_
7	表现	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x8 / 表现-01, domain, x12 / 这)
(x8 / 表现-01, manner, x11 / 纯粹)
(x8 / 表现-01, mod, x9 / 恶劣-01)
(x8 / 表现-01, poss, x10 / 花)

Input(Some(Graph((say :arg1 (表现-01 :domain 这 :manner 纯粹 :poss 花 :mod 恶劣-01)),ArrayBuffer(Span(6,7,List(0),表现,表现-01,false), Span(0,1,List(1),这,这,false), Span(1,2,List(2),纯粹,纯粹,false), Span(3,4,List(3),花,花,false), Span(5,6,List(4),恶劣,恶劣-01,false)),Map(2 -> 纯粹, 1 -> 这, 4 -> 恶劣-01, 0 -> 表现-01, 3 -> 花),Map(x10 -> 花, x8 -> 表现-01, x12 -> 这, x11 -> 纯粹, x9 -> 恶劣-01))),[Ljava.lang.String;@662ac478,Annotation([Ljava.lang.String;@6743e411,[Ljava.lang.String;@3eb25e1a,[Ljava.lang.String;@477b4cdf),Annotation([Ljava.lang.String;@77c2494c,[Ljava.lang.String;@f5958c9,[Ledu.cmu.lti.nlp.amr.Dependency;@233795b6),Annotation([Ljava.lang.String;@3eb738bb,[Ljava.lang.String;@5bda8e08,[Ljava.lang.String;@1e800aaa),Annotation([Ljava.lang.String;@185a6e9,[Ljava.lang.String;@6f03482,[Ledu.cmu.lti.nlp.amr.Entity;@9d5509a))
AMR:
(x8 / 表现-01, domain, x12 / 这)
(x8 / 表现-01, manner, x11 / 纯粹)
(x8 / 表现-01, mod, x9 / 恶劣-01)
(x8 / 表现-01, poss, x10 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,505 microseconds
Sentence: “ 噢 ！ ”

Oracle Span 1:  噢 => 噢
Spans:
Span 1-2:  噢 => 噢

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  噢 => 噢

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	噢	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (噢 :mode expressive)),ArrayBuffer(Span(1,2,List(0),噢,噢,false)),Map(0 -> 噢),Map(x2 -> 噢))),[Ljava.lang.String;@179ece50,Annotation([Ljava.lang.String;@3b0090a4,[Ljava.lang.String;@3cd3e762,[Ljava.lang.String;@1fa121e2),Annotation([Ljava.lang.String;@7eac9008,[Ljava.lang.String;@4116aac9,[Ledu.cmu.lti.nlp.amr.Dependency;@62ddbd7e),Annotation([Ljava.lang.String;@74e52ef6,[Ljava.lang.String;@6ed3ccb2,[Ljava.lang.String;@1a677343),Annotation([Ljava.lang.String;@15de0b3c,[Ljava.lang.String;@489115ef,[Ledu.cmu.lti.nlp.amr.Entity;@3857f613))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 3,552 microseconds
Sentence: 可是 他 沉默 了 一会儿 之后 ，

Oracle Span 1:  一会儿 => 一会儿
Oracle Span 2:  他 => 他
Oracle Span 3:  沉默 => 沉默-01
Spans:
Span 4-5:  一会儿 => 一会儿
Span 1-2:  他 => 他
Span 2-3:  沉默 => 沉默-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会儿 => 一会儿
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  沉默 => 沉默-01

Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	VV	VV	_	3	conj	_	_
5	一会儿	_	CD	CD	_	6	lobj	_	_
6	之后	_	LC	LC	_	4	loc	_	_
7	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 沉默-01, arg0, x7 / 他)
(x6 / 沉默-01, duration, x9 / 一会儿)

Input(Some(Graph((contrast :arg2 (temporal :arg1 (沉默-01 :duration 一会儿 :arg0 他))),ArrayBuffer(Span(2,3,List(0),沉默,沉默-01,false), Span(4,5,List(1),一会儿,一会儿,false), Span(1,2,List(2),他,他,false)),Map(2 -> 他, 1 -> 一会儿, 0 -> 沉默-01),Map(x7 -> 他, x6 -> 沉默-01, x9 -> 一会儿))),[Ljava.lang.String;@198b6731,Annotation([Ljava.lang.String;@7c6908d7,[Ljava.lang.String;@3c9754d8,[Ljava.lang.String;@3bf7ca37),Annotation([Ljava.lang.String;@79079097,[Ljava.lang.String;@4d1c00d0,[Ledu.cmu.lti.nlp.amr.Dependency;@4b2bac3f),Annotation([Ljava.lang.String;@4e08711f,[Ljava.lang.String;@bcec361,[Ljava.lang.String;@26794848),Annotation([Ljava.lang.String;@302552ec,[Ljava.lang.String;@3d285d7e,[Ledu.cmu.lti.nlp.amr.Entity;@40005471))
AMR:
(x6 / 沉默-01, duration, x9 / 一会儿)
(x6 / 沉默-01, prep-for, x7 / 他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 10,714 microseconds
Sentence: 怀 着 不满 的 心情 冲 我 说 ： “ 我 不 信 ！

Oracle Span 1:  不满 => 不满-01
Oracle Span 2:  信 => 信-01
Oracle Span 3:  心情 => 心情
Oracle Span 4:  怀 => 怀-01
Oracle Span 5:  我 => 我
Oracle Span 6:  说 => 说-01
Spans:
Span 2-3:  不满 => 不满-01
Span 12-13:  信 => 信-01
Span 4-5:  心情 => 心情
Span 0-1:  怀 => 怀-01
Span 6-7:  我 => 我
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
Oracle Span 2-3:  不满 => 不满-01
Oracle Span 12-13:  信 => 信-01
Oracle Span 4-5:  心情 => 心情
Oracle Span 0-1:  怀 => 怀-01
Oracle Span 6-7:  我 => 我
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	怀	_	NN	NN	_	2	nsubj	_	_
2	着	_	VV	VV	_	6	rcmod	_	_
3	不满	_	NN	NN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	心情	_	NN	NN	_	6	nn	_	_
6	冲	_	NN	NN	_	8	nsubj	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	8	punct	_	_
11	我	_	PN	PN	_	13	nsubj	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	信	_	VV	VV	_	8	ccomp	_	_
14	！	_	PU	PU	_	8	punct	_	_

Oracle:
(x4 / 说-01, arg1, x10 / 信-01)
(x4 / 说-01, arg3, x9 / 我)
(x4 / 说-01, manner, x6 / 怀-01)
(x6 / 怀-01, arg1, x7 / 心情)
(x7 / 心情, mod, x8 / 不满-01)

Input(Some(Graph((说-01 :arg1 (信-01 :arg0 他 :polarity -) :arg3 我 :manner (怀-01 :arg1 (心情 :mod 不满-01))),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(12,13,List(1),信,信-01,false), Span(6,7,List(2),我,我,false), Span(0,1,List(3),怀,怀-01,false), Span(4,5,List(4),心情,心情,false), Span(2,3,List(5),不满,不满-01,false)),Map(2 -> 我, 5 -> 不满-01, 1 -> 信-01, 4 -> 心情, 0 -> 说-01, 3 -> 怀-01),Map(x10 -> 信-01, x8 -> 不满-01, x7 -> 心情, x4 -> 说-01, x6 -> 怀-01, x9 -> 我))),[Ljava.lang.String;@2cd76f31,Annotation([Ljava.lang.String;@367ffa75,[Ljava.lang.String;@49438269,[Ljava.lang.String;@ba2f4ec),Annotation([Ljava.lang.String;@1c1bbc4e,[Ljava.lang.String;@55fe41ea,[Ledu.cmu.lti.nlp.amr.Dependency;@fbd1f6),Annotation([Ljava.lang.String;@1ce24091,[Ljava.lang.String;@5dda768f,[Ljava.lang.String;@7a8c8dcf),Annotation([Ljava.lang.String;@24269709,[Ljava.lang.String;@2aceadd4,[Ledu.cmu.lti.nlp.amr.Entity;@24aed80c))
AMR:
(x4 / 说-01, manner, x6 / 怀-01)
(x4 / 说-01, mod, x9 / 我)
(x4 / 说-01, prep-against, x10 / 信-01)
(x6 / 怀-01, destination, x8 / 不满-01)
(x7 / 心情, mod, x8 / 不满-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 23,773 microseconds
Sentence: 花 是 弱小 的 、

Oracle Span 1:  弱小 => 弱小
Oracle Span 2:  花 => 花
Spans:
Span 2-3:  弱小 => 弱小
Span 0-1:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  弱小 => 弱小
Oracle Span 0-1:  花 => 花

Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	弱小	_	NR	NR	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	、	_	NN	NN	_	2	attr	_	_

Oracle:
(x0 / 弱小, domain, x2 / 花)

Input(Some(Graph((弱小 :domain 花),ArrayBuffer(Span(2,3,List(0),弱小,弱小,false), Span(0,1,List(1),花,花,false)),Map(1 -> 花, 0 -> 弱小),Map(x2 -> 花, x0 -> 弱小))),[Ljava.lang.String;@3a52dba3,Annotation([Ljava.lang.String;@2a5c8d3f,[Ljava.lang.String;@752325ad,[Ljava.lang.String;@279fedbd),Annotation([Ljava.lang.String;@b3ca52e,[Ljava.lang.String;@45c7e403,[Ledu.cmu.lti.nlp.amr.Dependency;@2925bf5b),Annotation([Ljava.lang.String;@710f4dc7,[Ljava.lang.String;@1ff4931d,[Ljava.lang.String;@65e98b1c),Annotation([Ljava.lang.String;@61322f9d,[Ljava.lang.String;@6ad82709,[Ledu.cmu.lti.nlp.amr.Entity;@510f3d34))
AMR:
(x0 / 弱小, domain, x2 / 花)

WARNING: makeIds can't find span Id: 0.0
Decoded in 7,067 microseconds
Sentence: 他们 是 淳朴 的 ，

Oracle Span 1:  他们 => 他们
Oracle Span 2:  淳朴 => 淳朴
Spans:
Span 0-1:  他们 => 他们
Span 2-3:  淳朴 => 淳朴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  淳朴 => 淳朴

Dependencies:
1	他们	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	淳朴	_	VA	VA	_	2	attr	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 淳朴, domain, x2 / 他们)

Input(Some(Graph((淳朴 :domain 他们),ArrayBuffer(Span(2,3,List(0),淳朴,淳朴,false), Span(0,1,List(1),他们,他们,false)),Map(1 -> 他们, 0 -> 淳朴),Map(x2 -> 他们, x0 -> 淳朴))),[Ljava.lang.String;@7817fd62,Annotation([Ljava.lang.String;@8297b3a,[Ljava.lang.String;@2362f559,[Ljava.lang.String;@b2c9a9c),Annotation([Ljava.lang.String;@4c178a76,[Ljava.lang.String;@fa4c865,[Ledu.cmu.lti.nlp.amr.Dependency;@3bd82cf5),Annotation([Ljava.lang.String;@544fa968,[Ljava.lang.String;@247bddad,[Ljava.lang.String;@d35dea7),Annotation([Ljava.lang.String;@7770f470,[Ljava.lang.String;@5e5d171f,[Ledu.cmu.lti.nlp.amr.Entity;@24313fcc))
AMR:
(x0 / 淳朴, domain, x2 / 他们)

WARNING: makeIds can't find span Id: 0.0
Decoded in 8,668 microseconds
Sentence: 它们 总是 设法 保护 自己 ，

Oracle Span 1:  保护 => 保护-01
Oracle Span 2:  它们 => 它们
Oracle Span 3:  总是 => 总是
Oracle Span 4:  设法 => 设法-01
Spans:
Span 3-4:  保护 => 保护-01
Span 0-1:  它们 => 它们
Span 1-2:  总是 => 总是
Span 2-3:  设法 => 设法-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  保护 => 保护-01
Oracle Span 0-1:  它们 => 它们
Oracle Span 1-2:  总是 => 总是
Oracle Span 2-3:  设法 => 设法-01

Dependencies:
1	它们	_	PN	PN	_	3	nsubj	_	_
2	总是	_	AD	AD	_	3	advmod	_	_
3	设法	_	VV	VV	_	0	root	_	_
4	保护	_	VV	VV	_	3	ccomp	_	_
5	自己	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 设法-01, arg0, x2 / 它们)
(x0 / 设法-01, arg1, x4 / 保护-01)
(x0 / 设法-01, manner, x3 / 总是)

Input(Some(Graph((设法-01 :arg1 (保护-01 :arg1 x2 :arg0 x2) :manner 总是 :arg0 它们),ArrayBuffer(Span(2,3,List(0),设法,设法-01,false), Span(3,4,List(1),保护,保护-01,false), Span(1,2,List(2),总是,总是,false), Span(0,1,List(3),它们,它们,false)),Map(2 -> 总是, 1 -> 保护-01, 0 -> 设法-01, 3 -> 它们),Map(x2 -> 它们, x4 -> 保护-01, x3 -> 总是, x0 -> 设法-01))),[Ljava.lang.String;@7d20d0b,Annotation([Ljava.lang.String;@77f1baf5,[Ljava.lang.String;@41a2befb,[Ljava.lang.String;@6c40365c),Annotation([Ljava.lang.String;@7bedc48a,[Ljava.lang.String;@131ef10,[Ledu.cmu.lti.nlp.amr.Dependency;@55b0dcab),Annotation([Ljava.lang.String;@38afe297,[Ljava.lang.String;@2df3b89c,[Ljava.lang.String;@23348b5d),Annotation([Ljava.lang.String;@70325e14,[Ljava.lang.String;@37ceb1df,[Ledu.cmu.lti.nlp.amr.Entity;@7c9d8e2))
AMR:
(x0 / 设法-01, ARG6, x2 / 它们)
(x0 / 设法-01, manner, x3 / 总是)
(x0 / 设法-01, prep-along-with, x4 / 保护-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,718 microseconds
Sentence: 以为 有 了 刺 就 可以 显出 自己 的 厉害 … ”

Oracle Span 1:  以为 => 以为-01
Oracle Span 2:  刺 => 刺-01
Oracle Span 3:  厉害 => 厉害
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  显出 => 显出-01
Oracle Span 6:  有 => 有-03
Oracle Span 7:  自己 => 自己
Spans:
Span 0-1:  以为 => 以为-01
Span 3-4:  刺 => 刺-01
Span 9-10:  厉害 => 厉害
Span 5-6:  可以 => 可以-01
Span 6-7:  显出 => 显出-01
Span 1-2:  有 => 有-03
Span 7-8:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  以为 => 以为-01
Oracle Span 3-4:  刺 => 刺-01
Oracle Span 9-10:  厉害 => 厉害
Oracle Span 5-6:  可以 => 可以-01
Oracle Span 6-7:  显出 => 显出-01
Oracle Span 1-2:  有 => 有-03
Oracle Span 7-8:  自己 => 自己

Dependencies:
1	以为	_	NR	NR	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	刺	_	PU	PU	_	11	punct	_	_
5	就	_	AD	AD	_	7	advmod	_	_
6	可以	_	VV	VV	_	7	mmod	_	_
7	显出	_	VV	VV	_	11	rcmod	_	_
8	自己	_	PN	PN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	厉害	_	JJ	JJ	_	11	amod	_	_
11	…	_	NN	NN	_	2	dobj	_	_
12	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x10 / 厉害, poss, x11 / 自己)
(x5 / 有-03, arg1, x6 / 刺-01)
(x7 / 可以-01, arg0, x9 / 显出-01)
(x9 / 显出-01, arg1, x10 / 厉害)

Input(Some(Graph((say :arg1 (以为-01 :arg1 (condition :arg1 (有-03 :arg1 刺-01) :arg2 (可以-01 :arg0 (显出-01 :arg1 (厉害 :poss 自己)))))),ArrayBuffer(Span(0,1,List(0),以为,以为-01,false), Span(1,2,List(1),有,有-03,false), Span(3,4,List(2),刺,刺-01,false), Span(5,6,List(3),可以,可以-01,false), Span(6,7,List(4),显出,显出-01,false), Span(9,10,List(5),厉害,厉害,false), Span(7,8,List(6),自己,自己,false)),Map(2 -> 刺-01, 5 -> 厉害, 1 -> 有-03, 4 -> 显出-01, 6 -> 自己, 0 -> 以为-01, 3 -> 可以-01),Map(x10 -> 厉害, x2 -> 以为-01, x5 -> 有-03, x7 -> 可以-01, x11 -> 自己, x6 -> 刺-01, x9 -> 显出-01))),[Ljava.lang.String;@20d525,Annotation([Ljava.lang.String;@6200f9cb,[Ljava.lang.String;@2002fc1d,[Ljava.lang.String;@69453e37),Annotation([Ljava.lang.String;@6f4a47c7,[Ljava.lang.String;@ae13544,[Ledu.cmu.lti.nlp.amr.Dependency;@3d34d211),Annotation([Ljava.lang.String;@7dc0f706,[Ljava.lang.String;@4009e306,[Ljava.lang.String;@43c1b556),Annotation([Ljava.lang.String;@587e5365,[Ljava.lang.String;@22fcf7ab,[Ledu.cmu.lti.nlp.amr.Entity;@2de23121))
AMR:
(x10 / 厉害, poss, x11 / 自己)
(x11 / 自己, weekday, x9 / 显出-01)
(x5 / 有-03, day, x6 / 刺-01)
(x5 / 有-03, manner, x2 / 以为-01)
(x7 / 可以-01, subevent, x9 / 显出-01)
(x9 / 显出-01, prep-on-behalf, x6 / 刺-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0.0
Decoded in 23,315 microseconds
Sentence: 我 默不作声 。

Oracle Span 1:  我 => 我
Oracle Span 2:  默不作声 => 默不作声
Spans:
Span 0-1:  我 => 我
Span 1-2:  默不作声 => 默不作声

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  默不作声 => 默不作声

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	默不作声	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 默不作声, arg0, x2 / 我)

Input(Some(Graph((默不作声 :arg0 我),ArrayBuffer(Span(1,2,List(0),默不作声,默不作声,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 默不作声),Map(x2 -> 我, x0 -> 默不作声))),[Ljava.lang.String;@63475ace,Annotation([Ljava.lang.String;@4988d8b8,[Ljava.lang.String;@c0c2f8d,[Ljava.lang.String;@305b7c14),Annotation([Ljava.lang.String;@6913c1fb,[Ljava.lang.String;@66d18979,[Ledu.cmu.lti.nlp.amr.Dependency;@bccb269),Annotation([Ljava.lang.String;@609cd4d8,[Ljava.lang.String;@17f7cd29,[Ljava.lang.String;@7d8704ef),Annotation([Ljava.lang.String;@13b6aecc,[Ljava.lang.String;@158a8276,[Ledu.cmu.lti.nlp.amr.Entity;@3c3d9b6b))
AMR:
(x0 / 默不作声, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 8,319 microseconds
Sentence: 我 当时 想 的 ， 如果 这个 螺丝 再 和 我 作对 ， 我 就 一 锤子 敲掉 它 。

Oracle Span 1:  作对 => 作对-01
Oracle Span 2:  当时 => 当时
Oracle Span 3:  想 => 想-01
Oracle Span 4:  我 => 我
Oracle Span 5:  螺丝 => 螺丝
Oracle Span 6:  锤子 => 锤子
Spans:
Span 11-12:  作对 => 作对-01
Span 1-2:  当时 => 当时
Span 2-3:  想 => 想-01
Span 0-1:  我 => 我
Span 7-8:  螺丝 => 螺丝
Span 16-17:  锤子 => 锤子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  作对 => 作对-01
Oracle Span 1-2:  当时 => 当时
Oracle Span 2-3:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  螺丝 => 螺丝
Oracle Span 16-17:  锤子 => 锤子

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	当时	_	NT	NT	_	3	tmod	_	_
3	想	_	VV	VV	_	18	nsubj	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	,	_	PU	PU	_	18	punct	_	_
6	如果	_	CS	CS	_	12	advmod	_	_
7	这个	_	NN	NN	_	8	nn	_	_
8	螺丝	_	NN	NN	_	12	nsubj	_	_
9	再	_	AD	AD	_	12	advmod	_	_
10	和	_	P	P	_	12	prep	_	_
11	我	_	PN	PN	_	10	pobj	_	_
12	作对	_	VV	VV	_	18	pccomp	_	_
13	,	_	PU	PU	_	18	punct	_	_
14	我	_	PN	PN	_	18	nsubj	_	_
15	就	_	P	P	_	18	prep	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	锤子	_	NN	NN	_	15	pobj	_	_
18	敲掉	_	VV	VV	_	0	root	_	_
19	它	_	PN	PN	_	18	dobj	_	_
20	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, time, x4 / 当时)
(x5 / 作对-01, arg0, x6 / 螺丝)

Input(Some(Graph((想-01 :time 当时 :arg1 (condition :arg1 (作对-01 :arg1 x2 :arg0 (螺丝 :mod 这)) :arg2 (敲-02 :arg0 x2 :arg1 x6 :instrument 锤子)) :arg0 我),ArrayBuffer(Span(2,3,List(0),想,想-01,false), Span(1,2,List(1),当时,当时,false), Span(11,12,List(2),作对,作对-01,false), Span(7,8,List(3),螺丝,螺丝,false), Span(16,17,List(4),锤子,锤子,false), Span(0,1,List(5),我,我,false)),Map(2 -> 作对-01, 5 -> 我, 1 -> 当时, 4 -> 锤子, 0 -> 想-01, 3 -> 螺丝),Map(x16 -> 锤子, x2 -> 我, x5 -> 作对-01, x4 -> 当时, x6 -> 螺丝, x0 -> 想-01))),[Ljava.lang.String;@79d8407f,Annotation([Ljava.lang.String;@5fbe4146,[Ljava.lang.String;@1e66f1f5,[Ljava.lang.String;@4e50c791),Annotation([Ljava.lang.String;@7530ad9c,[Ljava.lang.String;@58a9760d,[Ledu.cmu.lti.nlp.amr.Dependency;@71e9ddb4),Annotation([Ljava.lang.String;@394df057,[Ljava.lang.String;@4961f6af,[Ljava.lang.String;@5aebe890),Annotation([Ljava.lang.String;@65d09a04,[Ljava.lang.String;@33c911a1,[Ledu.cmu.lti.nlp.amr.Entity;@75db5df9))
AMR:
(x0 / 想-01, ARG4, x2 / 我)
(x0 / 想-01, time, x4 / 当时)
(x5 / 作对-01, beneficiary, x6 / 螺丝)
(x6 / 螺丝, location, x16 / 锤子)
(x6 / 螺丝, mod, x4 / 当时)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 28,977 microseconds
Sentence: 小 王子 又 来 打搅 我 的 思绪 了 ：

Oracle Span 1:  又 => 又
Oracle Span 2:  小 => 小-01
Oracle Span 3:  思绪 => 思绪
Oracle Span 4:  我 => 我
Oracle Span 5:  打搅 => 打搅-01
Oracle Span 6:  来 => 来-05
Oracle Span 7:  王子 => 王子
Spans:
Span 2-3:  又 => 又
Span 0-1:  小 => 小-01
Span 7-8:  思绪 => 思绪
Span 5-6:  我 => 我
Span 4-5:  打搅 => 打搅-01
Span 3-4:  来 => 来-05
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 7-8:  思绪 => 思绪
Oracle Span 5-6:  我 => 我
Oracle Span 4-5:  打搅 => 打搅-01
Oracle Span 3-4:  来 => 来-05
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	打搅	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	思绪	_	NN	NN	_	5	dobj	_	_
9	了	_	VV	VV	_	5	conj	_	_
10	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 来-05, arg0, x3 / 王子)
(x0 / 来-05, arg1, x5 / 打搅-01)
(x0 / 来-05, manner, x2 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 打搅-01, arg1, x7 / 思绪)
(x7 / 思绪, poss, x8 / 我)

Input(Some(Graph((来-05 :arg1 (打搅-01 :arg1 (思绪 :poss 我) :arg0 x3) :arg0 (王子 :mod 小-01) :manner 又),ArrayBuffer(Span(3,4,List(0),来,来-05,false), Span(4,5,List(1),打搅,打搅-01,false), Span(7,8,List(2),思绪,思绪,false), Span(5,6,List(3),我,我,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false), Span(2,3,List(6),又,又,false)),Map(2 -> 思绪, 5 -> 小-01, 1 -> 打搅-01, 4 -> 王子, 6 -> 又, 0 -> 来-05, 3 -> 我),Map(x2 -> 又, x5 -> 打搅-01, x8 -> 我, x7 -> 思绪, x4 -> 小-01, x3 -> 王子, x0 -> 来-05))),[Ljava.lang.String;@707194ba,Annotation([Ljava.lang.String;@1190200a,[Ljava.lang.String;@6a2f6f80,[Ljava.lang.String;@45b4c3a9),Annotation([Ljava.lang.String;@399c4be1,[Ljava.lang.String;@291caca8,[Ledu.cmu.lti.nlp.amr.Dependency;@385e9564),Annotation([Ljava.lang.String;@5b94b04d,[Ljava.lang.String;@8c3b9d,[Ljava.lang.String;@4c39bec8),Annotation([Ljava.lang.String;@f79e,[Ljava.lang.String;@7ee8290b,[Ledu.cmu.lti.nlp.amr.Entity;@1f59a598))
AMR:
(x0 / 来-05, ARG6, x5 / 打搅-01)
(x0 / 来-05, manner, x2 / 又)
(x0 / 来-05, purpose, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 打搅-01, unit, x7 / 思绪)
(x7 / 思绪, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 29,167 microseconds
Sentence: “ 你 却 认为 花 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  花 => 花
Oracle Span 3:  认为 => 认为-01
Spans:
Span 1-2:  你 => 你
Span 4-5:  花 => 花
Span 3-4:  认为 => 认为-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  花 => 花
Oracle Span 3-4:  认为 => 认为-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	认为	_	VV	VV	_	0	root	_	_
5	花	_	NN	NN	_	4	dobj	_	_
6	…	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 认为-01, arg0, x8 / 你)
(x7 / 认为-01, arg1, x9 / 花)

Input(Some(Graph((say :arg1 (contrast :arg2 (认为-01 :arg1 花 :arg0 你))),ArrayBuffer(Span(3,4,List(0),认为,认为-01,false), Span(4,5,List(1),花,花,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 花, 0 -> 认为-01),Map(x8 -> 你, x7 -> 认为-01, x9 -> 花))),[Ljava.lang.String;@1e178745,Annotation([Ljava.lang.String;@192c3f1e,[Ljava.lang.String;@26b3fd41,[Ljava.lang.String;@7494f96a),Annotation([Ljava.lang.String;@561b6512,[Ljava.lang.String;@2e377400,[Ledu.cmu.lti.nlp.amr.Dependency;@1757cd72),Annotation([Ljava.lang.String;@445b295b,[Ljava.lang.String;@49e5f737,[Ljava.lang.String;@5c671d7f),Annotation([Ljava.lang.String;@757277dc,[Ljava.lang.String;@687e99d8,[Ledu.cmu.lti.nlp.amr.Entity;@e4487af))
AMR:
(x7 / 认为-01, degree, x8 / 你)
(x7 / 认为-01, example, x9 / 花)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 12,007 microseconds
Sentence: “ 算了 吧 ！

Oracle Span 1:  算了 => 算了-01
Spans:
Span 1-2:  算了 => 算了-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  算了 => 算了-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	算了	_	VV	VV	_	0	root	_	_
3	吧	_	SP	SP	_	2	dep	_	_
4	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (算了-01 :mode expressive)),ArrayBuffer(Span(1,2,List(0),算了,算了-01,false)),Map(0 -> 算了-01),Map(x2 -> 算了-01))),[Ljava.lang.String;@6aaceffd,Annotation([Ljava.lang.String;@c86b9e3,[Ljava.lang.String;@10aa41f2,[Ljava.lang.String;@3af9c5b7),Annotation([Ljava.lang.String;@37271612,[Ljava.lang.String;@ed7f8b4,[Ledu.cmu.lti.nlp.amr.Dependency;@4c309d4d),Annotation([Ljava.lang.String;@38102d01,[Ljava.lang.String;@37883b97,[Ljava.lang.String;@6ab778a),Annotation([Ljava.lang.String;@4e3958e7,[Ljava.lang.String;@77f80c04,[Ledu.cmu.lti.nlp.amr.Entity;@1dac5ef))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 4,388 microseconds
Sentence: 我 哭 着 说 。

Oracle Span 1:  哭 => 哭-01
Oracle Span 2:  我 => 我
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  哭 => 哭-01
Span 0-1:  我 => 我
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  哭 => 哭-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	哭	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	说	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, manner, x3 / 哭-01)

Input(Some(Graph((说-01 :manner (哭-01 :arg0 x2) :arg0 我),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(1,2,List(1),哭,哭-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 哭-01, 0 -> 说-01),Map(x2 -> 我, x3 -> 哭-01, x0 -> 说-01))),[Ljava.lang.String;@5c90e579,Annotation([Ljava.lang.String;@58ea606c,[Ljava.lang.String;@6f45df59,[Ljava.lang.String;@38e79ae3),Annotation([Ljava.lang.String;@63070bab,[Ljava.lang.String;@68e5eea7,[Ledu.cmu.lti.nlp.amr.Dependency;@291b4bf5),Annotation([Ljava.lang.String;@2d2ffcb7,[Ljava.lang.String;@762ef0ea,[Ljava.lang.String;@31f9b85e),Annotation([Ljava.lang.String;@424e1977,[Ljava.lang.String;@10d68fcd,[Ledu.cmu.lti.nlp.amr.Entity;@117e949d))
AMR:
(x0 / 说-01, ARG0, x2 / 我)
(x0 / 说-01, manner, x3 / 哭-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,167 microseconds
Sentence: “ 算了 吧 ， 算了 吧 ！

Oracle Span 1:  算了 => 算了-01
Oracle Span 2:  算了 => 算了-01
Spans:
Span 1-2:  算了 => 算了-01
Span 4-5:  算了 => 算了-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  算了 => 算了-01
Oracle Span 4-5:  算了 => 算了-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	算了	_	VV	VV	_	5	pccomp	_	_
3	吧	_	SP	SP	_	2	dep	_	_
4	,	_	PU	PU	_	5	punct	_	_
5	算了	_	VV	VV	_	0	root	_	_
6	吧	_	SP	SP	_	5	dep	_	_
7	！	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (and :op 算了-01 :op 算了-01 :mode expressive)),ArrayBuffer(Span(1,2,List(0),算了,算了-01,false), Span(4,5,List(1),算了,算了-01,false)),Map(1 -> 算了-01, 0 -> 算了-01),Map(x5 -> 算了-01, x4 -> 算了-01))),[Ljava.lang.String;@6db9f5a4,Annotation([Ljava.lang.String;@5f8edcc5,[Ljava.lang.String;@7b02881e,[Ljava.lang.String;@1ebd319f),Annotation([Ljava.lang.String;@3c0be339,[Ljava.lang.String;@15ca7889,[Ledu.cmu.lti.nlp.amr.Dependency;@7a675056),Annotation([Ljava.lang.String;@d21a74c,[Ljava.lang.String;@6e509ffa,[Ljava.lang.String;@2898ac89),Annotation([Ljava.lang.String;@683dbc2c,[Ljava.lang.String;@68267da0,[Ledu.cmu.lti.nlp.amr.Entity;@2638011))
AMR:
(x5 / 算了-01, manner, x4 / 算了-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 16,904 microseconds
Sentence: 我 什么 也 不 认为 ！

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  我 => 我
Oracle Span 4:  认为 => 认为-01
Spans:
Span 2-3:  也 => 也
Span 1-2:  什么 => 什么
Span 0-1:  我 => 我
Span 4-5:  认为 => 认为-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  什么 => 什么
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  认为 => 认为-01

Dependencies:
1	我	_	PN	PN	_	2	dep	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	认为	_	VV	VV	_	0	root	_	_
6	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 认为-01, arg0, x3 / 我)
(x0 / 认为-01, arg1, x5 / 什么)
(x0 / 认为-01, manner, x4 / 也)

Input(Some(Graph((认为-01 :mode expressive :arg1 什么 :manner 也 :arg0 我 :polarity -),ArrayBuffer(Span(4,5,List(0),认为,认为-01,false), Span(1,2,List(1),什么,什么,false), Span(2,3,List(2),也,也,false), Span(0,1,List(3),我,我,false)),Map(2 -> 也, 1 -> 什么, 0 -> 认为-01, 3 -> 我),Map(x5 -> 什么, x4 -> 也, x3 -> 我, x0 -> 认为-01))),[Ljava.lang.String;@6ff29830,Annotation([Ljava.lang.String;@6a2b953e,[Ljava.lang.String;@313b2ea6,[Ljava.lang.String;@2f465398),Annotation([Ljava.lang.String;@548e6d58,[Ljava.lang.String;@623a8092,[Ledu.cmu.lti.nlp.amr.Dependency;@a1cdc6d),Annotation([Ljava.lang.String;@175b9425,[Ljava.lang.String;@3098cf3b,[Ljava.lang.String;@610f7aa),Annotation([Ljava.lang.String;@6a03bcb1,[Ljava.lang.String;@21b2e768,[Ledu.cmu.lti.nlp.amr.Entity;@57250572))
AMR:
(x0 / 认为-01, manner, x4 / 也)
(x0 / 认为-01, polite, x3 / 我)
(x0 / 认为-01, prep-following, x5 / 什么)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 13,263 microseconds
Sentence: 我 是 随便 回答 你 的 。

Oracle Span 1:  你 => 你
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  我 => 我
Oracle Span 4:  随便 => 随便-01
Spans:
Span 4-5:  你 => 你
Span 3-4:  回答 => 回答-01
Span 0-1:  我 => 我
Span 2-3:  随便 => 随便-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  随便 => 随便-01

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	随便	_	AD	AD	_	4	advmod	_	_
4	回答	_	VV	VV	_	2	attr	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x3 / 我)
(x0 / 回答-01, arg2, x4 / 你)
(x0 / 回答-01, manner, x2 / 随便-01)

Input(Some(Graph((回答-01 :arg2 你 :arg0 我 :manner 随便-01),ArrayBuffer(Span(3,4,List(0),回答,回答-01,false), Span(4,5,List(1),你,你,false), Span(0,1,List(2),我,我,false), Span(2,3,List(3),随便,随便-01,false)),Map(2 -> 我, 1 -> 你, 0 -> 回答-01, 3 -> 随便-01),Map(x2 -> 随便-01, x4 -> 你, x3 -> 我, x0 -> 回答-01))),[Ljava.lang.String;@5609159b,Annotation([Ljava.lang.String;@2118cddf,[Ljava.lang.String;@17a7f733,[Ljava.lang.String;@68567e20),Annotation([Ljava.lang.String;@76ed1b7c,[Ljava.lang.String;@11fc564b,[Ledu.cmu.lti.nlp.amr.Dependency;@394a2528),Annotation([Ljava.lang.String;@6236eb5f,[Ljava.lang.String;@7c1e2a9e,[Ljava.lang.String;@fa36558),Annotation([Ljava.lang.String;@672872e1,[Ljava.lang.String;@32910148,[Ledu.cmu.lti.nlp.amr.Entity;@3f56875e))
AMR:
(x0 / 回答-01, age, x3 / 我)
(x0 / 回答-01, manner, x2 / 随便-01)
(x0 / 回答-01, quarter, x4 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,089 microseconds
Sentence: 我 可 有 正经 事 要 做 。 ”

Oracle Span 1:  事 => 事
Oracle Span 2:  做 => 做-01
Oracle Span 3:  我 => 我
Oracle Span 4:  有 => 有-04
Oracle Span 5:  正经 => 正经
Oracle Span 6:  要 => 要-03
Spans:
Span 4-5:  事 => 事
Span 6-7:  做 => 做-01
Span 0-1:  我 => 我
Span 2-3:  有 => 有-04
Span 3-4:  正经 => 正经
Span 5-6:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  事 => 事
Oracle Span 6-7:  做 => 做-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  有 => 有-04
Oracle Span 3-4:  正经 => 正经
Oracle Span 5-6:  要 => 要-03

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	可	_	VV	VV	_	3	mmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	正经	_	JJ	JJ	_	5	amod	_	_
5	事	_	NN	NN	_	7	nsubj	_	_
6	要	_	VV	VV	_	7	dep	_	_
7	做	_	VV	VV	_	3	dep	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-04, arg0, x14 / 要-03)
(x14 / 要-03, arg0, x15 / 做-01)
(x15 / 做-01, arg0, x16 / 我)
(x15 / 做-01, arg1, x17 / 事)
(x17 / 事, mod, x18 / 正经)

Input(Some(Graph((say :arg1 (有-04 :arg0 (要-03 :arg0 (做-01 :arg1 (事 :mod 正经) :arg0 我)))),ArrayBuffer(Span(2,3,List(0),有,有-04,false), Span(5,6,List(1),要,要-03,false), Span(6,7,List(2),做,做-01,false), Span(4,5,List(3),事,事,false), Span(3,4,List(4),正经,正经,false), Span(0,1,List(5),我,我,false)),Map(2 -> 做-01, 5 -> 我, 1 -> 要-03, 4 -> 正经, 0 -> 有-04, 3 -> 事),Map(x16 -> 我, x13 -> 有-04, x15 -> 做-01, x18 -> 正经, x14 -> 要-03, x17 -> 事))),[Ljava.lang.String;@2b4bac49,Annotation([Ljava.lang.String;@fd07cbb,[Ljava.lang.String;@3571b748,[Ljava.lang.String;@3e96bacf),Annotation([Ljava.lang.String;@484970b0,[Ljava.lang.String;@4470f8a6,[Ledu.cmu.lti.nlp.amr.Dependency;@7c83dc97),Annotation([Ljava.lang.String;@7748410a,[Ljava.lang.String;@740773a3,[Ljava.lang.String;@37f1104d),Annotation([Ljava.lang.String;@55740540,[Ljava.lang.String;@60015ef5,[Ledu.cmu.lti.nlp.amr.Entity;@2f54a33d))
AMR:
(x13 / 有-04, polite, x16 / 我)
(x13 / 有-04, snt11, x18 / 正经)
(x14 / 要-03, prep-along-with, x15 / 做-01)
(x17 / 事, domain, x14 / 要-03)
(x17 / 事, mod, x18 / 正经)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 22,551 microseconds
Sentence: 他 惊讶 地 看 着 我 。

Oracle Span 1:  他 => 他
Oracle Span 2:  惊讶 => 惊讶-01
Oracle Span 3:  我 => 我
Oracle Span 4:  看 => 看-02
Spans:
Span 0-1:  他 => 他
Span 1-2:  惊讶 => 惊讶-01
Span 5-6:  我 => 我
Span 3-4:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  惊讶 => 惊讶-01
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  看 => 看-02

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	惊讶	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	看	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 看-02, arg0, x2 / 他)
(x0 / 看-02, arg1, x3 / 我)
(x0 / 看-02, manner, x4 / 惊讶-01)

Input(Some(Graph((看-02 :manner (惊讶-01 :arg0 x2) :arg1 我 :arg0 他),ArrayBuffer(Span(3,4,List(0),看,看-02,false), Span(1,2,List(1),惊讶,惊讶-01,false), Span(5,6,List(2),我,我,false), Span(0,1,List(3),他,他,false)),Map(2 -> 我, 1 -> 惊讶-01, 0 -> 看-02, 3 -> 他),Map(x2 -> 他, x4 -> 惊讶-01, x3 -> 我, x0 -> 看-02))),[Ljava.lang.String;@1018bde2,Annotation([Ljava.lang.String;@65b3f4a4,[Ljava.lang.String;@f2ff811,[Ljava.lang.String;@568ff82),Annotation([Ljava.lang.String;@50caa560,[Ljava.lang.String;@2a266d09,[Ledu.cmu.lti.nlp.amr.Dependency;@5ab9e72c),Annotation([Ljava.lang.String;@186f8716,[Ljava.lang.String;@1d8bd0de,[Ljava.lang.String;@45ca843),Annotation([Ljava.lang.String;@11c9af63,[Ljava.lang.String;@757acd7b,[Ledu.cmu.lti.nlp.amr.Entity;@36b4fe2a))
AMR:
(x0 / 看-02, domain, x3 / 我)
(x0 / 看-02, manner, x4 / 惊讶-01)
(x0 / 看-02, season, x2 / 他)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 23,171 microseconds
Sentence: “ 正经 事 ？ ”

Oracle Span 1:  事 => 事
Oracle Span 2:  正经 => 正经
Spans:
Span 2-3:  事 => 事
Span 1-2:  正经 => 正经

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  事 => 事
Oracle Span 1-2:  正经 => 正经

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	正经	_	VV	VV	_	0	root	_	_
3	事	_	NN	NN	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 事, mod, x3 / 正经)

Input(Some(Graph((say :arg1 (事 :mode interrogative :mod 正经)),ArrayBuffer(Span(2,3,List(0),事,事,false), Span(1,2,List(1),正经,正经,false)),Map(1 -> 正经, 0 -> 事),Map(x2 -> 事, x3 -> 正经))),[Ljava.lang.String;@574b560f,Annotation([Ljava.lang.String;@ba54932,[Ljava.lang.String;@28975c28,[Ljava.lang.String;@3943a2be),Annotation([Ljava.lang.String;@343570b7,[Ljava.lang.String;@157853da,[Ledu.cmu.lti.nlp.amr.Dependency;@71c3b41),Annotation([Ljava.lang.String;@236e3f4e,[Ljava.lang.String;@3cc1435c,[Ljava.lang.String;@6bf0219d),Annotation([Ljava.lang.String;@dd0c991,[Ljava.lang.String;@5f16132a,[Ledu.cmu.lti.nlp.amr.Entity;@69fb6037))
AMR:
(x2 / 事, mod, x3 / 正经)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,013 microseconds
Sentence: 他 瞅 着 我 手 拿 锤子 ， 手指 沾满 了 油污 ， 伏 在 一 个 在 他 看来 丑不可言 的 机件 上 。

Oracle Span 1:  丑不可言 => 丑不可言
Oracle Span 2:  他 => 他
Oracle Span 3:  伏 => 伏-01
Oracle Span 4:  我 => 我
Oracle Span 5:  手 => 手
Oracle Span 6:  手指 => 手指
Oracle Span 7:  拿 => 拿-03
Oracle Span 8:  机件 => 机件
Oracle Span 9:  油污 => 油污
Oracle Span 10:  沾满 => 沾满-01
Oracle Span 11:  看来 => 看来-01
Oracle Span 12:  瞅 => 瞅-01
Oracle Span 13:  锤子 => 锤子
Spans:
Span 20-21:  丑不可言 => 丑不可言
Span 0-1:  他 => 他
Span 13-14:  伏 => 伏-01
Span 3-4:  我 => 我
Span 4-5:  手 => 手
Span 8-9:  手指 => 手指
Span 5-6:  拿 => 拿-03
Span 22-23:  机件 => 机件
Span 11-12:  油污 => 油污
Span 9-10:  沾满 => 沾满-01
Span 19-20:  看来 => 看来-01
Span 1-2:  瞅 => 瞅-01
Span 6-7:  锤子 => 锤子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 20-21:  丑不可言 => 丑不可言
Oracle Span 0-1:  他 => 他
Oracle Span 13-14:  伏 => 伏-01
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  手 => 手
Oracle Span 8-9:  手指 => 手指
Oracle Span 5-6:  拿 => 拿-03
Oracle Span 22-23:  机件 => 机件
Oracle Span 11-12:  油污 => 油污
Oracle Span 9-10:  沾满 => 沾满-01
Oracle Span 19-20:  看来 => 看来-01
Oracle Span 1-2:  瞅 => 瞅-01
Oracle Span 6-7:  锤子 => 锤子

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	瞅	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	我	_	PN	PN	_	5	nn	_	_
5	手	_	NN	NN	_	6	nsubj	_	_
6	拿	_	VV	VV	_	2	ccomp	_	_
7	锤子	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	手指	_	AD	AD	_	10	advmod	_	_
10	沾满	_	VV	VV	_	6	conj	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	油污	_	NN	NN	_	10	dobj	_	_
13	,	_	PU	PU	_	6	punct	_	_
14	伏	_	VV	VV	_	6	conj	_	_
15	在	_	P	P	_	14	prep	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	23	clf	_	_
18	在	_	P	P	_	20	prep	_	_
19	他	_	PN	PN	_	18	pobj	_	_
20	看来	_	VV	VV	_	23	rcmod	_	_
21	丑不可言	_	NN	NN	_	20	dobj	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	机件	_	NN	NN	_	24	lobj	_	_
24	上	_	LC	LC	_	15	plmod	_	_
25	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 沾满-01, arg0, x11 / 手指)
(x10 / 沾满-01, arg1, x12 / 油污)
(x13 / 伏-01, arg1, x15 / 看来-01)
(x15 / 看来-01, arg1, x17 / 机件)
(x17 / 机件, mod, x19 / 丑不可言)
(x2 / 瞅-01, arg0, x4 / 他)
(x6 / 拿-03, arg0, x7 / 我)
(x6 / 拿-03, arg1, x8 / 锤子)
(x8 / 锤子, location, x9 / 手)

Input(Some(Graph((瞅-01 :arg1 (and :op (拿-03 :arg1 (锤子 :location 手) :arg0 我) :op (沾满-01 :arg1 油污 :arg0 手指) :op (伏-01 :arg1 (看来-01 :arg1 (机件 :mod 丑不可言 :quant 1) :arg0 x4) :arg0 x7)) :arg0 他),ArrayBuffer(Span(1,2,List(0),瞅,瞅-01,false), Span(5,6,List(1),拿,拿-03,false), Span(6,7,List(2),锤子,锤子,false), Span(4,5,List(3),手,手,false), Span(3,4,List(4),我,我,false), Span(9,10,List(5),沾满,沾满-01,false), Span(11,12,List(6),油污,油污,false), Span(8,9,List(7),手指,手指,false), Span(13,14,List(8),伏,伏-01,false), Span(19,20,List(9),看来,看来-01,false), Span(22,23,List(10),机件,机件,false), Span(20,21,List(11),丑不可言,丑不可言,false), Span(0,1,List(12),他,他,false)),Map(2 -> 锤子, 5 -> 沾满-01, 12 -> 他, 8 -> 伏-01, 7 -> 手指, 1 -> 拿-03, 4 -> 我, 11 -> 丑不可言, 6 -> 油污, 9 -> 看来-01, 0 -> 瞅-01, 10 -> 机件, 3 -> 手),Map(x10 -> 沾满-01, x19 -> 丑不可言, x2 -> 瞅-01, x13 -> 伏-01, x8 -> 锤子, x12 -> 油污, x15 -> 看来-01, x7 -> 我, x4 -> 他, x11 -> 手指, x6 -> 拿-03, x9 -> 手, x17 -> 机件))),[Ljava.lang.String;@36d585c,Annotation([Ljava.lang.String;@87a85e1,[Ljava.lang.String;@671a5887,[Ljava.lang.String;@5552768b),Annotation([Ljava.lang.String;@3c947bc5,[Ljava.lang.String;@609db43b,[Ledu.cmu.lti.nlp.amr.Dependency;@55f616cf),Annotation([Ljava.lang.String;@1356d4d4,[Ljava.lang.String;@c03cf28,[Ljava.lang.String;@1329eff),Annotation([Ljava.lang.String;@6497b078,[Ljava.lang.String;@41c2284a,[Ledu.cmu.lti.nlp.amr.Entity;@53aad5d5))
AMR:
(x10 / 沾满-01, ARG3, x9 / 手)
(x10 / 沾满-01, location, x11 / 手指)
(x10 / 沾满-01, mod, x12 / 油污)
(x13 / 伏-01, direction, x15 / 看来-01)
(x13 / 伏-01, location, x9 / 手)
(x15 / 看来-01, value, x17 / 机件)
(x17 / 机件, mod, x19 / 丑不可言)
(x2 / 瞅-01, extent, x6 / 拿-03)
(x2 / 瞅-01, prep-from, x4 / 他)
(x6 / 拿-03, ARG6, x7 / 我)
(x6 / 拿-03, beneficiary, x8 / 锤子)
(x8 / 锤子, location, x9 / 手)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.1
WARNING: makeIds can't find span Id: 0.1.2.1.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 105,082 microseconds
Sentence: “ 你 说话 就 和 那些 大人 一样 ！ ”

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  你 => 你
Oracle Span 3:  大人 => 大人
Oracle Span 4:  就 => 就
Oracle Span 5:  说话 => 说话-01
Oracle Span 6:  那些 => 那些
Spans:
Span 7-8:  一样 => 一样-02
Span 1-2:  你 => 你
Span 6-7:  大人 => 大人
Span 3-4:  就 => 就
Span 2-3:  说话 => 说话-01
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  一样 => 一样-02
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  大人 => 大人
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  说话 => 说话-01
Oracle Span 5-6:  那些 => 那些

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你	_	PN	PN	_	8	nsubj	_	_
3	说话	_	VV	VV	_	8	mmod	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	和	_	P	P	_	8	prep	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	大人	_	NN	NN	_	5	pobj	_	_
8	一样	_	VA	VA	_	0	root	_	_
9	！	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 一样-02, arg0, x3 / 说话-01)
(x2 / 一样-02, arg1, x5 / 大人)
(x2 / 一样-02, manner, x7 / 就)
(x3 / 说话-01, arg0, x4 / 你)
(x5 / 大人, mod, x6 / 那些)

Input(Some(Graph((say :arg1 (一样-02 :mode expressive :manner 就 :arg1 (大人 :mod 那些) :arg0 (说话-01 :arg0 你))),ArrayBuffer(Span(7,8,List(0),一样,一样-02,false), Span(3,4,List(1),就,就,false), Span(6,7,List(2),大人,大人,false), Span(5,6,List(3),那些,那些,false), Span(2,3,List(4),说话,说话-01,false), Span(1,2,List(5),你,你,false)),Map(2 -> 大人, 5 -> 你, 1 -> 就, 4 -> 说话-01, 0 -> 一样-02, 3 -> 那些),Map(x2 -> 一样-02, x5 -> 大人, x7 -> 就, x4 -> 你, x3 -> 说话-01, x6 -> 那些))),[Ljava.lang.String;@46fa7c39,Annotation([Ljava.lang.String;@1fb700ee,[Ljava.lang.String;@4f67eb2a,[Ljava.lang.String;@4a668b6e),Annotation([Ljava.lang.String;@5f683daf,[Ljava.lang.String;@78ffe6dc,[Ledu.cmu.lti.nlp.amr.Dependency;@8317c52),Annotation([Ljava.lang.String;@76f2bbc1,[Ljava.lang.String;@68e965f5,[Ljava.lang.String;@6f27a732),Annotation([Ljava.lang.String;@6c779568,[Ljava.lang.String;@f381794,[Ledu.cmu.lti.nlp.amr.Entity;@2cdd0d4b))
AMR:
(x2 / 一样-02, beneficiary, x5 / 大人)
(x2 / 一样-02, location, x3 / 说话-01)
(x2 / 一样-02, manner, x6 / 那些)
(x2 / 一样-02, manner, x7 / 就)
(x3 / 说话-01, direction, x4 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 29,505 microseconds
Sentence: 这 话 使 我 有点 难堪 。

Oracle Span 1:  我 => 我
Oracle Span 2:  有点 => 有点
Oracle Span 3:  话 => 话
Oracle Span 4:  这 => 这
Oracle Span 5:  难堪 => 难堪-01
Spans:
Span 3-4:  我 => 我
Span 4-5:  有点 => 有点
Span 1-2:  话 => 话
Span 0-1:  这 => 这
Span 5-6:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  有点 => 有点
Oracle Span 1-2:  话 => 话
Oracle Span 0-1:  这 => 这
Oracle Span 5-6:  难堪 => 难堪-01

Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	话	_	NN	NN	_	3	nsubj	_	_
3	使	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	有点	_	VV	VV	_	3	dep	_	_
6	难堪	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 话, mod, x13 / 这)
(x8 / 难堪-01, arg0, x11 / 我)
(x8 / 难堪-01, cause, x12 / 话)
(x8 / 难堪-01, degree, x10 / 有点)

Input(Some(Graph((难堪-01 :cause (话 :mod 这) :arg0 我 :degree 有点),ArrayBuffer(Span(5,6,List(0),难堪,难堪-01,false), Span(1,2,List(1),话,话,false), Span(0,1,List(2),这,这,false), Span(3,4,List(3),我,我,false), Span(4,5,List(4),有点,有点,false)),Map(2 -> 这, 1 -> 话, 4 -> 有点, 0 -> 难堪-01, 3 -> 我),Map(x10 -> 有点, x13 -> 这, x8 -> 难堪-01, x12 -> 话, x11 -> 我))),[Ljava.lang.String;@7e9131d5,Annotation([Ljava.lang.String;@2e1d27ba,[Ljava.lang.String;@61d6015a,[Ljava.lang.String;@2525ff7e),Annotation([Ljava.lang.String;@524d6d96,[Ljava.lang.String;@152aa092,[Ledu.cmu.lti.nlp.amr.Dependency;@44a7bfbc),Annotation([Ljava.lang.String;@4ef37659,[Ljava.lang.String;@776b83cc,[Ljava.lang.String;@37858383),Annotation([Ljava.lang.String;@4e268090,[Ljava.lang.String;@1bb266b3,[Ledu.cmu.lti.nlp.amr.Entity;@306cf3ea))
AMR:
(x12 / 话, mod, x13 / 这)
(x8 / 难堪-01, degree, x10 / 有点)
(x8 / 难堪-01, manner, x12 / 话)
(x8 / 难堪-01, time, x11 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 25,627 microseconds
Sentence: 可是 他 又 尖刻 无情 地 说道 ： “ 你 什么 都 分 不 清 …

Oracle Span 1:  什么 => 什么
Oracle Span 2:  他 => 他
Oracle Span 3:  你 => 你
Oracle Span 4:  又 => 又
Oracle Span 5:  尖刻 => 尖刻-01
Oracle Span 6:  无情 => 无情-01
Oracle Span 7:  说道 => 说道-01
Oracle Span 8:  都 => 都
Spans:
Span 10-11:  什么 => 什么
Span 1-2:  他 => 他
Span 9-10:  你 => 你
Span 2-3:  又 => 又
Span 3-4:  尖刻 => 尖刻-01
Span 4-5:  无情 => 无情-01
Span 6-7:  说道 => 说道-01
Span 11-12:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  什么 => 什么
Oracle Span 1-2:  他 => 他
Oracle Span 9-10:  你 => 你
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  尖刻 => 尖刻-01
Oracle Span 4-5:  无情 => 无情-01
Oracle Span 6-7:  说道 => 说道-01
Oracle Span 11-12:  都 => 都

Dependencies:
1	可是	_	AD	AD	_	7	advmod	_	_
2	他	_	PN	PN	_	7	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	尖刻	_	VV	VV	_	7	dvpmod	_	_
5	无情	_	NN	NN	_	4	dobj	_	_
6	地	_	DEV	DEV	_	4	dvpm	_	_
7	说道	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	13	punct	_	_
10	你	_	PN	PN	_	13	nsubj	_	_
11	什么	_	PN	PN	_	13	nsubj	_	_
12	都	_	AD	AD	_	13	advmod	_	_
13	分	_	VV	VV	_	7	conj	_	_
14	不	_	AD	AD	_	13	neg	_	_
15	清	_	PU	PU	_	7	punct	_	_
16	…	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 说道-01, arg0, x5 / 他)
(x4 / 说道-01, manner, x18 / 又)
(x4 / 说道-01, manner, x6 / 尖刻-01)
(x4 / 说道-01, manner, x7 / 无情-01)

Input(Some(Graph((contrast :arg2 (说道-01 :manner 又 :arg1 (possible :arg0 (分清-01 :arg0 你 :arg1 什么) :polarity - :manner 都) :manner (无情-01 :arg0 x5) :manner (尖刻-01 :arg0 x5) :arg0 他)),ArrayBuffer(Span(6,7,List(0),说道,说道-01,false), Span(2,3,List(1),又,又,false), Span(9,10,List(2),你,你,false), Span(10,11,List(3),什么,什么,false), Span(11,12,List(4),都,都,false), Span(4,5,List(5),无情,无情-01,false), Span(3,4,List(6),尖刻,尖刻-01,false), Span(1,2,List(7),他,他,false)),Map(2 -> 你, 5 -> 无情-01, 7 -> 他, 1 -> 又, 4 -> 都, 6 -> 尖刻-01, 0 -> 说道-01, 3 -> 什么),Map(x16 -> 都, x5 -> 他, x15 -> 什么, x7 -> 无情-01, x18 -> 又, x4 -> 说道-01, x6 -> 尖刻-01, x14 -> 你))),[Ljava.lang.String;@2beee7ff,Annotation([Ljava.lang.String;@5136d012,[Ljava.lang.String;@5939a379,[Ljava.lang.String;@e1de817),Annotation([Ljava.lang.String;@52102734,[Ljava.lang.String;@3541cb24,[Ledu.cmu.lti.nlp.amr.Dependency;@2177849e),Annotation([Ljava.lang.String;@40cb8df7,[Ljava.lang.String;@13b13b5d,[Ljava.lang.String;@2892dae4),Annotation([Ljava.lang.String;@355ce81c,[Ljava.lang.String;@29647f75,[Ledu.cmu.lti.nlp.amr.Entity;@3315d2d7))
AMR:
(x14 / 你, mod, x15 / 什么)
(x15 / 什么, mod, x16 / 都)
(x4 / 说道-01, manner, x6 / 尖刻-01)
(x4 / 说道-01, manner, x7 / 无情-01)
(x4 / 说道-01, prep-within, x15 / 什么)
(x5 / 他, part, x6 / 尖刻-01)
(x6 / 尖刻-01, manner, x18 / 又)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.3.0.0
WARNING: makeIds can't find span Id: 0.0.3.0.1
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 55,070 microseconds
Sentence: 你 把 什么 都 混 在 一起 ！ ”

Oracle Span 1:  什么 => 什么
Oracle Span 2:  你 => 你
Oracle Span 3:  混 => 混-01
Oracle Span 4:  都 => 都
Spans:
Span 2-3:  什么 => 什么
Span 0-1:  你 => 你
Span 4-5:  混 => 混-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  混 => 混-01
Oracle Span 3-4:  都 => 都

Dependencies:
1	你	_	PN	PN	_	7	nsubj	_	_
2	把	_	BA	BA	_	7	ba	_	_
3	什么	_	PN	PN	_	7	nsubj	_	_
4	都	_	AD	AD	_	7	advmod	_	_
5	混	_	AD	AD	_	7	advmod	_	_
6	在	_	AD	AD	_	7	advmod	_	_
7	一起	_	VV	VV	_	0	root	_	_
8	！	_	PU	PU	_	7	punct	_	_
9	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 混-01, arg0, x3 / 你)
(x2 / 混-01, arg1, x4 / 什么)
(x2 / 混-01, manner, x5 / 都)

Input(Some(Graph((say :arg1 (混-01 :mode expressive :manner 都 :arg1 什么 :arg0 你)),ArrayBuffer(Span(4,5,List(0),混,混-01,false), Span(3,4,List(1),都,都,false), Span(2,3,List(2),什么,什么,false), Span(0,1,List(3),你,你,false)),Map(2 -> 什么, 1 -> 都, 0 -> 混-01, 3 -> 你),Map(x2 -> 混-01, x5 -> 都, x4 -> 什么, x3 -> 你))),[Ljava.lang.String;@d6e7bab,Annotation([Ljava.lang.String;@5fa07e12,[Ljava.lang.String;@55b53d44,[Ljava.lang.String;@482bce4f),Annotation([Ljava.lang.String;@366647c2,[Ljava.lang.String;@6a6afff2,[Ledu.cmu.lti.nlp.amr.Dependency;@1649b0e6),Annotation([Ljava.lang.String;@865dd6,[Ljava.lang.String;@4da4253,[Ljava.lang.String;@3972a855),Annotation([Ljava.lang.String;@62e7f11d,[Ljava.lang.String;@503d687a,[Ledu.cmu.lti.nlp.amr.Entity;@6a370f4))
AMR:
(x2 / 混-01, manner, x3 / 你)
(x2 / 混-01, manner, x4 / 什么)
(x2 / 混-01, manner, x5 / 都)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,330 microseconds
Sentence: 他 着实 非常 恼火 。

Oracle Span 1:  他 => 他
Oracle Span 2:  恼火 => 恼火-01
Oracle Span 3:  着实 => 着实
Oracle Span 4:  非常 => 非常
Spans:
Span 0-1:  他 => 他
Span 3-4:  恼火 => 恼火-01
Span 1-2:  着实 => 着实
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  恼火 => 恼火-01
Oracle Span 1-2:  着实 => 着实
Oracle Span 2-3:  非常 => 非常

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	着实	_	VV	VV	_	0	root	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	恼火	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	他	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 恼火-01, arg0, x3 / 他)
(x0 / 恼火-01, degree, x2 / 非常)
(x0 / 恼火-01, manner, x4 / 着实)

Input(Some(Graph((恼火-01 :manner 着实 :arg0 他 :degree 非常),ArrayBuffer(Span(3,4,List(0),恼火,恼火-01,false), Span(1,2,List(1),着实,着实,false), Span(0,1,List(2),他,他,false), Span(2,3,List(3),非常,非常,false)),Map(2 -> 他, 1 -> 着实, 0 -> 恼火-01, 3 -> 非常),Map(x2 -> 非常, x4 -> 着实, x3 -> 他, x0 -> 恼火-01))),[Ljava.lang.String;@4cc8eb05,Annotation([Ljava.lang.String;@51f116b8,[Ljava.lang.String;@19d481b,[Ljava.lang.String;@1f97cf0d),Annotation([Ljava.lang.String;@140c9f39,[Ljava.lang.String;@4d910fd6,[Ledu.cmu.lti.nlp.amr.Dependency;@26275bef),Annotation([Ljava.lang.String;@7690781,[Ljava.lang.String;@77eca502,[Ljava.lang.String;@3246fb96),Annotation([Ljava.lang.String;@2e222612,[Ljava.lang.String;@61386958,[Ledu.cmu.lti.nlp.amr.Entity;@73ee04c8))
AMR:
(x0 / 恼火-01, degree, x2 / 非常)
(x0 / 恼火-01, manner, x4 / 着实)
(x4 / 着实, quant, x3 / 他)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,474 microseconds
Sentence: 摇动 着 脑袋 ， 金黄色 的 头发 随 风 颤动 着 。

Oracle Span 1:  头发 => 头发
Oracle Span 2:  摇动 => 摇动-01
Oracle Span 3:  脑袋 => 脑袋
Oracle Span 4:  金黄色 => 金黄色
Oracle Span 5:  颤动 => 颤动-01
Spans:
Span 6-7:  头发 => 头发
Span 0-1:  摇动 => 摇动-01
Span 2-3:  脑袋 => 脑袋
Span 4-5:  金黄色 => 金黄色
Span 9-10:  颤动 => 颤动-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  头发 => 头发
Oracle Span 0-1:  摇动 => 摇动-01
Oracle Span 2-3:  脑袋 => 脑袋
Oracle Span 4-5:  金黄色 => 金黄色
Oracle Span 9-10:  颤动 => 颤动-01

Dependencies:
1	摇动	_	VV	VV	_	10	dep	_	_
2	着	_	AS	AS	_	1	asp	_	_
3	脑袋	_	NN	NN	_	1	dobj	_	_
4	,	_	PU	PU	_	10	punct	_	_
5	金黄色	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	头发	_	NN	NN	_	10	nsubj	_	_
8	随	_	P	P	_	10	prep	_	_
9	风	_	NN	NN	_	8	pobj	_	_
10	颤动	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x10 / 摇动-01, arg1, x11 / 脑袋)
(x12 / 颤动-01, arg0, x13 / 头发)
(x13 / 头发, mod, x14 / 金黄色)

Input(Some(Graph((and :op (摇动-01 :arg1 脑袋) :op (颤动-01 :manner 随风 :arg0 (头发 :mod 金黄色))),ArrayBuffer(Span(0,1,List(0),摇动,摇动-01,false), Span(2,3,List(1),脑袋,脑袋,false), Span(9,10,List(2),颤动,颤动-01,false), Span(6,7,List(3),头发,头发,false), Span(4,5,List(4),金黄色,金黄色,false)),Map(2 -> 颤动-01, 1 -> 脑袋, 4 -> 金黄色, 0 -> 摇动-01, 3 -> 头发),Map(x10 -> 摇动-01, x13 -> 头发, x12 -> 颤动-01, x11 -> 脑袋, x14 -> 金黄色))),[Ljava.lang.String;@7671cb68,Annotation([Ljava.lang.String;@49dc7102,[Ljava.lang.String;@6b8ca3c8,[Ljava.lang.String;@68c72235),Annotation([Ljava.lang.String;@10959ece,[Ljava.lang.String;@3a6bb9bf,[Ledu.cmu.lti.nlp.amr.Dependency;@34f7cfd9),Annotation([Ljava.lang.String;@65f095f8,[Ljava.lang.String;@59af0466,[Ljava.lang.String;@3e6ef8ad),Annotation([Ljava.lang.String;@346d61be,[Ljava.lang.String;@55536d9e,[Ledu.cmu.lti.nlp.amr.Entity;@747edf66))
AMR:
(x10 / 摇动-01, mod, x11 / 脑袋)
(x11 / 脑袋, time, x12 / 颤动-01)
(x12 / 颤动-01, prep-on-behalf, x13 / 头发)
(x13 / 头发, mod, x14 / 金黄色)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 22,676 microseconds
Sentence: “ 我 到 过 一 个 星球 ， 上面 住 着 一 个 红 脸 先生 。

Oracle Span 1:  住 => 住-01
Oracle Span 2:  先生 => 先生
Oracle Span 3:  到 => 到-01
Oracle Span 4:  我 => 我
Oracle Span 5:  星球 => 星球
Spans:
Span 9-10:  住 => 住-01
Span 15-16:  先生 => 先生
Span 2-3:  到 => 到-01
Span 1-2:  我 => 我
Span 6-7:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  住 => 住-01
Oracle Span 15-16:  先生 => 先生
Oracle Span 2-3:  到 => 到-01
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  星球 => 星球

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	到	_	VV	VV	_	0	root	_	_
4	过	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	星球	_	NN	NN	_	3	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	上面	_	NN	NN	_	10	nsubj	_	_
10	住	_	VV	VV	_	3	conj	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	16	clf	_	_
14	红	_	JJ	JJ	_	16	amod	_	_
15	脸	_	NN	NN	_	16	nn	_	_
16	先生	_	NN	NN	_	10	dobj	_	_
17	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x3 / 到-01, arg0, x4 / 我)
(x3 / 到-01, arg1, x5 / 星球)
(x7 / 住-01, arg0, x8 / 先生)
(x7 / 住-01, arg1, x5 / 星球)

Input(Some(Graph((say :arg1 (到-01 :arg1 (星球 :arg1-of (住-01 :arg0 (先生 :quant 1 :mod 红脸-01)) :quant 1) :arg0 我)),ArrayBuffer(Span(2,3,List(0),到,到-01,false), Span(6,7,List(1),星球,星球,false), Span(9,10,List(2),住,住-01,false), Span(15,16,List(3),先生,先生,false), Span(1,2,List(4),我,我,false)),Map(2 -> 住-01, 1 -> 星球, 4 -> 我, 0 -> 到-01, 3 -> 先生),Map(x5 -> 星球, x8 -> 先生, x7 -> 住-01, x4 -> 我, x3 -> 到-01))),[Ljava.lang.String;@3d1cfad4,Annotation([Ljava.lang.String;@62230c58,[Ljava.lang.String;@2cd2a21f,[Ljava.lang.String;@2e55dd0c),Annotation([Ljava.lang.String;@74455848,[Ljava.lang.String;@e7edb54,[Ledu.cmu.lti.nlp.amr.Dependency;@378542de),Annotation([Ljava.lang.String;@3738449f,[Ljava.lang.String;@69e1dd28,[Ljava.lang.String;@11bd0f3b),Annotation([Ljava.lang.String;@c333c60,[Ljava.lang.String;@79da8dc5,[Ledu.cmu.lti.nlp.amr.Entity;@1eb5174b))
AMR:
(x3 / 到-01, example, x4 / 我)
(x7 / 住-01, domain, x3 / 到-01)
(x7 / 住-01, purpose, x8 / 先生)
(x7 / 住-01, snt3, x5 / 星球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,642 microseconds
Sentence: 他 从来 没 闻 过 一 朵 花 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  他 => 他
Oracle Span 3:  花 => 花
Oracle Span 4:  闻 => 闻-02
Spans:
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 7-8:  花 => 花
Span 3-4:  闻 => 闻-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  花 => 花
Oracle Span 3-4:  闻 => 闻-02

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	从来	_	AD	AD	_	4	advmod	_	_
3	没	_	AD	AD	_	4	neg	_	_
4	闻	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	朵	_	M	M	_	8	clf	_	_
8	花	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 闻-02, arg0, x3 / 他)
(x0 / 闻-02, arg1, x4 / 花)
(x0 / 闻-02, duration, x6 / 从来)

Input(Some(Graph((闻-02 :duration 从来 :arg1 (花 :quant 1) :arg0 他 :polarity -),ArrayBuffer(Span(3,4,List(0),闻,闻-02,false), Span(1,2,List(1),从来,从来,false), Span(7,8,List(2),花,花,false), Span(0,1,List(3),他,他,false)),Map(2 -> 花, 1 -> 从来, 0 -> 闻-02, 3 -> 他),Map(x4 -> 花, x3 -> 他, x6 -> 从来, x0 -> 闻-02))),[Ljava.lang.String;@67080771,Annotation([Ljava.lang.String;@72cde7cc,[Ljava.lang.String;@5fd4f8f5,[Ljava.lang.String;@696da30b),Annotation([Ljava.lang.String;@4e7912d8,[Ljava.lang.String;@53976f5c,[Ledu.cmu.lti.nlp.amr.Dependency;@2bfc268b),Annotation([Ljava.lang.String;@2f8dad04,[Ljava.lang.String;@29e495ff,[Ljava.lang.String;@41e1e210),Annotation([Ljava.lang.String;@be35cd9,[Ljava.lang.String;@4944252c,[Ledu.cmu.lti.nlp.amr.Entity;@44821a96))
AMR:
(x0 / 闻-02, duration, x6 / 从来)
(x0 / 闻-02, mode, x3 / 他)
(x0 / 闻-02, prep-to, x4 / 花)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 16,544 microseconds
Sentence: 他 从来 没有 看 过 一 颗 星星 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  他 => 他
Oracle Span 3:  星星 => 星星
Oracle Span 4:  看 => 看-02
Spans:
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 7-8:  星星 => 星星
Span 3-4:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  星星 => 星星
Oracle Span 3-4:  看 => 看-02

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	从来	_	AD	AD	_	4	advmod	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	看	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	颗	_	M	M	_	8	clf	_	_
8	星星	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 看-02, arg0, x3 / 他)
(x0 / 看-02, arg1, x4 / 星星)
(x0 / 看-02, duration, x6 / 从来)

Input(Some(Graph((看-02 :duration 从来 :arg1 (星星 :quant 1) :arg0 他 :polarity -),ArrayBuffer(Span(3,4,List(0),看,看-02,false), Span(1,2,List(1),从来,从来,false), Span(7,8,List(2),星星,星星,false), Span(0,1,List(3),他,他,false)),Map(2 -> 星星, 1 -> 从来, 0 -> 看-02, 3 -> 他),Map(x4 -> 星星, x3 -> 他, x6 -> 从来, x0 -> 看-02))),[Ljava.lang.String;@a3d8174,Annotation([Ljava.lang.String;@1ba9117e,[Ljava.lang.String;@732c2a62,[Ljava.lang.String;@272ed83b),Annotation([Ljava.lang.String;@41fecb8b,[Ljava.lang.String;@120f102b,[Ledu.cmu.lti.nlp.amr.Dependency;@625732),Annotation([Ljava.lang.String;@51dcb805,[Ljava.lang.String;@66498326,[Ljava.lang.String;@cad498c),Annotation([Ljava.lang.String;@1e6454ec,[Ljava.lang.String;@2accdbb5,[Ledu.cmu.lti.nlp.amr.Entity;@b62d79))
AMR:
(x0 / 看-02, duration, x6 / 从来)
(x0 / 看-02, prep-for, x4 / 星星)
(x0 / 看-02, season, x3 / 他)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 19,400 microseconds
Sentence: 他 什么 人 也 没有 喜欢 过 。

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  什么 => 什么
Oracle Span 4:  他 => 他
Oracle Span 5:  喜欢 => 喜欢-01
Spans:
Span 3-4:  也 => 也
Span 2-3:  人 => 人
Span 1-2:  什么 => 什么
Span 0-1:  他 => 他
Span 5-6:  喜欢 => 喜欢-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  人 => 人
Oracle Span 1-2:  什么 => 什么
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  喜欢 => 喜欢-01

Dependencies:
1	他	_	PN	PN	_	6	nsubj	_	_
2	什么	_	DT	DT	_	3	det	_	_
3	人	_	NN	NN	_	6	dep	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	没有	_	VV	VV	_	6	neg	_	_
6	喜欢	_	VV	VV	_	0	root	_	_
7	过	_	VV	VV	_	6	ccomp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 喜欢-01, arg0, x4 / 他)
(x0 / 喜欢-01, arg1, x5 / 人)
(x0 / 喜欢-01, manner, x3 / 也)
(x5 / 人, mod, x6 / 什么)

Input(Some(Graph((喜欢-01 :arg1 (人 :mod 什么) :arg0 他 :manner 也 :polarity -),ArrayBuffer(Span(5,6,List(0),喜欢,喜欢-01,false), Span(2,3,List(1),人,人,false), Span(1,2,List(2),什么,什么,false), Span(0,1,List(3),他,他,false), Span(3,4,List(4),也,也,false)),Map(2 -> 什么, 1 -> 人, 4 -> 也, 0 -> 喜欢-01, 3 -> 他),Map(x5 -> 人, x4 -> 他, x3 -> 也, x6 -> 什么, x0 -> 喜欢-01))),[Ljava.lang.String;@6631f5ca,Annotation([Ljava.lang.String;@5ace1ed4,[Ljava.lang.String;@1613674b,[Ljava.lang.String;@27ff5d15),Annotation([Ljava.lang.String;@4e096385,[Ljava.lang.String;@649bec2e,[Ledu.cmu.lti.nlp.amr.Dependency;@693fe6c9),Annotation([Ljava.lang.String;@34f5090e,[Ljava.lang.String;@31e5415e,[Ljava.lang.String;@a2431d0),Annotation([Ljava.lang.String;@1cbb87f3,[Ljava.lang.String;@1a4013,[Ledu.cmu.lti.nlp.amr.Entity;@1b6e1eff))
AMR:
(x0 / 喜欢-01, location, x5 / 人)
(x0 / 喜欢-01, manner, x3 / 也)
(x0 / 喜欢-01, subevent, x4 / 他)
(x5 / 人, mod, x6 / 什么)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 27,624 microseconds
Sentence: 除了 算帐 以外 ， 他 什么 也 没有 做 过 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  他 => 他
Oracle Span 3:  做 => 做-02
Oracle Span 4:  除了 => 除了
Spans:
Span 5-6:  什么 => 什么
Span 4-5:  他 => 他
Span 8-9:  做 => 做-02
Span 0-1:  除了 => 除了

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  什么 => 什么
Oracle Span 4-5:  他 => 他
Oracle Span 8-9:  做 => 做-02
Oracle Span 0-1:  除了 => 除了

Dependencies:
1	除了	_	P	P	_	9	prep	_	_
2	算帐	_	NN	NN	_	3	lobj	_	_
3	以外	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	9	punct	_	_
5	他	_	PN	PN	_	9	nsubj	_	_
6	什么	_	PN	PN	_	9	nsubj	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	没有	_	VV	VV	_	9	neg	_	_
9	做	_	VV	VV	_	0	root	_	_
10	过	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x3 / 做-02, arg0, x5 / 他)
(x3 / 做-02, arg1, x7 / 什么)
(x8 / 除了, arg2, x3 / 做-02)

Input(Some(Graph((做-02 :arg2-of (除了 :arg1 (算账-01 :arg0 x5)) :arg1 什么 :polarity - :arg0 他),ArrayBuffer(Span(8,9,List(0),做,做-02,false), Span(0,1,List(1),除了,除了,false), Span(5,6,List(2),什么,什么,false), Span(4,5,List(3),他,他,false)),Map(2 -> 什么, 1 -> 除了, 0 -> 做-02, 3 -> 他),Map(x5 -> 他, x8 -> 除了, x7 -> 什么, x3 -> 做-02))),[Ljava.lang.String;@306f16f3,Annotation([Ljava.lang.String;@702b8b12,[Ljava.lang.String;@22e357dc,[Ljava.lang.String;@49912c99),Annotation([Ljava.lang.String;@10163d6,[Ljava.lang.String;@2dde1bff,[Ledu.cmu.lti.nlp.amr.Dependency;@15bbf42f),Annotation([Ljava.lang.String;@550ee7e5,[Ljava.lang.String;@5f9b2141,[Ljava.lang.String;@247d8ae),Annotation([Ljava.lang.String;@48974e45,[Ljava.lang.String;@6a84a97d,[Ledu.cmu.lti.nlp.amr.Entity;@6c130c45))
AMR:
(x3 / 做-02, season, x7 / 什么)
(x3 / 做-02, subevent, x5 / 他)
(x8 / 除了, prep-on-behalf, x3 / 做-02)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 25,654 microseconds
Sentence: 他 整天 同 你 一样 老是 说 ： ‘ 我 有 正经事 ， 我 是 个 严肃 的 人 ’ 。 这 使 他 傲气 十足 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  严肃 => 严肃-01
Oracle Span 3:  人 => 人
Oracle Span 4:  他 => 他
Oracle Span 5:  你 => 你
Oracle Span 6:  整天 => 整天
Oracle Span 7:  有 => 有-01
Oracle Span 8:  正经事 => 正经事
Oracle Span 9:  老是 => 老是
Oracle Span 10:  说 => 说-01
Spans:
Span 4-5:  一样 => 一样-02
Span 16-17:  严肃 => 严肃-01
Span 18-19:  人 => 人
Span 0-1:  他 => 他
Span 3-4:  你 => 你
Span 1-2:  整天 => 整天
Span 10-11:  有 => 有-01
Span 11-12:  正经事 => 正经事
Span 5-6:  老是 => 老是
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  一样 => 一样-02
Oracle Span 16-17:  严肃 => 严肃-01
Oracle Span 18-19:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  整天 => 整天
Oracle Span 10-11:  有 => 有-01
Oracle Span 11-12:  正经事 => 正经事
Oracle Span 5-6:  老是 => 老是
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	他	_	PN	PN	_	7	nsubj	_	_
2	整天	_	AD	AD	_	5	advmod	_	_
3	同	_	P	P	_	5	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	一样	_	VA	VA	_	6	rcmod	_	_
6	老是	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	‘	_	PU	PU	_	11	punct	_	_
10	我	_	PN	PN	_	11	top	_	_
11	有	_	VE	VE	_	7	ccomp	_	_
12	正经事	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	我	_	PN	PN	_	15	top	_	_
15	是	_	VC	VC	_	11	conj	_	_
16	个	_	M	M	_	19	clf	_	_
17	严肃	_	JJ	JJ	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	人	_	NN	NN	_	15	attr	_	_
20	’	_	PU	PU	_	7	punct	_	_
21	。	_	PU	PU	_	7	punct	_	_
22	这	_	PN	PN	_	23	nsubj	_	_
23	使	_	VV	VV	_	7	conj	_	_
24	他	_	PN	PN	_	23	dobj	_	_
25	傲气	_	VV	VV	_	23	dep	_	_
26	十足	_	CD	CD	_	25	range	_	_
27	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x24 / 一样-02, arg1, x26 / 你)
(x24 / 一样-02, time, x27 / 整天)
(x29 / 说-01, manner, x30 / 老是)
(x33 / 有-01, arg1, x36 / 正经事)
(x37 / 人, mod, x38 / 严肃-01)

Input(Some(Graph((傲气十足 :arg0 他 :cause (一样-02 :arg0-of (mean :arg1 (说-01 :arg1 (and :op (有-01 :arg1 正经事 :arg0 x23) :op (人 :domain x23 :mod 严肃-01)) :arg0 x23 :manner 老是)) :time 整天 :arg1 你 :arg0 x23)),ArrayBuffer(Span(0,1,List(0),他,他,false), Span(4,5,List(1),一样,一样-02,false), Span(6,7,List(2),说,说-01,false), Span(10,11,List(3),有,有-01,false), Span(11,12,List(4),正经事,正经事,false), Span(18,19,List(5),人,人,false), Span(16,17,List(6),严肃,严肃-01,false), Span(5,6,List(7),老是,老是,false), Span(1,2,List(8),整天,整天,false), Span(3,4,List(9),你,你,false)),Map(2 -> 说-01, 5 -> 人, 8 -> 整天, 7 -> 老是, 1 -> 一样-02, 4 -> 正经事, 6 -> 严肃-01, 9 -> 你, 0 -> 他, 3 -> 有-01),Map(x37 -> 人, x30 -> 老是, x27 -> 整天, x33 -> 有-01, x36 -> 正经事, x24 -> 一样-02, x23 -> 他, x38 -> 严肃-01, x26 -> 你, x29 -> 说-01))),[Ljava.lang.String;@50ad3bc1,Annotation([Ljava.lang.String;@223aa2f7,[Ljava.lang.String;@6d3a388c,[Ljava.lang.String;@193f604a),Annotation([Ljava.lang.String;@20f5239f,[Ljava.lang.String;@57af006c,[Ledu.cmu.lti.nlp.amr.Dependency;@6bedbc4d),Annotation([Ljava.lang.String;@932bc4a,[Ljava.lang.String;@d29f28,[Ljava.lang.String;@2fd1433e),Annotation([Ljava.lang.String;@29d89d5d,[Ljava.lang.String;@3514a4c0,[Ledu.cmu.lti.nlp.amr.Entity;@212b5695))
AMR:
(x24 / 一样-02, manner, x26 / 你)
(x24 / 一样-02, time, x27 / 整天)
(x24 / 一样-02, time, x30 / 老是)
(x27 / 整天, quant, x23 / 他)
(x29 / 说-01, manner, x30 / 老是)
(x33 / 有-01, location, x36 / 正经事)
(x33 / 有-01, prep-following, x29 / 说-01)
(x36 / 正经事, mod, x38 / 严肃-01)
(x37 / 人, mod, x38 / 严肃-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3.0
WARNING: makeIds can't find span Id: 0.1.3.0.2.0
WARNING: makeIds can't find span Id: 0.1.3.0.2.0.1
WARNING: makeIds can't find span Id: 0.1.3.0.2.1
WARNING: makeIds can't find span Id: 0.1.3.0.2.1.0
WARNING: makeIds can't find span Id: 0.1.3.0.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 68,850 microseconds
Sentence: 他 简直 不 象 是 个 人 ， 他 是 个 蘑菇 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  简直 => 简直
Oracle Span 4:  蘑菇 => 蘑菇
Spans:
Span 6-7:  人 => 人
Span 0-1:  他 => 他
Span 1-2:  简直 => 简直
Span 11-12:  蘑菇 => 蘑菇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  简直 => 简直
Oracle Span 11-12:  蘑菇 => 蘑菇

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	简直	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	象	_	VA	VA	_	5	conj	_	_
5	是	_	VC	VC	_	2	ccomp	_	_
6	个	_	M	M	_	7	dep	_	_
7	人	_	NN	NN	_	5	attr	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	他	_	PN	PN	_	10	top	_	_
10	是	_	VC	VC	_	5	dep	_	_
11	个	_	M	M	_	12	dep	_	_
12	蘑菇	_	NN	NN	_	10	attr	_	_
13	。	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_
15	象	_	VA	VA	_	5	top	_	_

Oracle:


Input(Some(Graph((say :arg1 (and :op (像-01 :polarity - :arg0 他 :arg1 人 :manner 简直) :op (蘑菇 :domain x15))),ArrayBuffer(Span(0,1,List(0),他,他,false), Span(6,7,List(1),人,人,false), Span(1,2,List(2),简直,简直,false), Span(11,12,List(3),蘑菇,蘑菇,false)),Map(2 -> 简直, 1 -> 人, 0 -> 他, 3 -> 蘑菇),Map(x16 -> 人, x15 -> 他, x18 -> 简直, x17 -> 蘑菇))),[Ljava.lang.String;@446293d,Annotation([Ljava.lang.String;@69997e9d,[Ljava.lang.String;@793be5ca,[Ljava.lang.String;@2df9b86),Annotation([Ljava.lang.String;@37654521,[Ljava.lang.String;@15aab8c6,[Ledu.cmu.lti.nlp.amr.Dependency;@33990a0c),Annotation([Ljava.lang.String;@4de4b452,[Ljava.lang.String;@50b5ac82,[Ljava.lang.String;@101952da),Annotation([Ljava.lang.String;@6babf3bf,[Ljava.lang.String;@3059cbc,[Ledu.cmu.lti.nlp.amr.Entity;@7ea9e1e2))
AMR:
(x16 / 人, location, x17 / 蘑菇)
(x16 / 人, location, x18 / 简直)
(x18 / 简直, quant, x15 / 他)

WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 16,023 microseconds
Sentence: “ 是 个 什么 ？ ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	什么	_	PN	PN	_	2	attr	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (amr-unknown :mode interrogative)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@24fcf36f,Annotation([Ljava.lang.String;@10feca44,[Ljava.lang.String;@3fb1549b,[Ljava.lang.String;@ea6147e),Annotation([Ljava.lang.String;@4d02f94e,[Ljava.lang.String;@2b48a640,[Ledu.cmu.lti.nlp.amr.Dependency;@1e683a3e),Annotation([Ljava.lang.String;@2053d869,[Ljava.lang.String;@7a419da4,[Ljava.lang.String;@14555e0a),Annotation([Ljava.lang.String;@4bb33f74,[Ljava.lang.String;@759d26fb,[Ledu.cmu.lti.nlp.amr.Entity;@3c73951))
AMR:


Decoded in 3,285 microseconds
Sentence: “ 是 个 蘑菇 ！ ”

Oracle Span 1:  蘑菇 => 蘑菇
Spans:
Span 3-4:  蘑菇 => 蘑菇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  蘑菇 => 蘑菇

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	蘑菇	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (蘑菇 :mode expressive)),ArrayBuffer(Span(3,4,List(0),蘑菇,蘑菇,false)),Map(0 -> 蘑菇),Map(x2 -> 蘑菇))),[Ljava.lang.String;@3d5c822d,Annotation([Ljava.lang.String;@6f46426d,[Ljava.lang.String;@73700b80,[Ljava.lang.String;@49c7b90e),Annotation([Ljava.lang.String;@10d307f1,[Ljava.lang.String;@4d5b6aac,[Ledu.cmu.lti.nlp.amr.Dependency;@3e84448c),Annotation([Ljava.lang.String;@4a7f959b,[Ljava.lang.String;@429bffaa,[Ljava.lang.String;@5403f35f),Annotation([Ljava.lang.String;@483f6d77,[Ljava.lang.String;@7e5afaa6,[Ledu.cmu.lti.nlp.amr.Entity;@63a12c68))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 4,085 microseconds
Sentence: 小 王子 当时 气 得 脸色 发 白。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  当时 => 当时
Oracle Span 3:  气 => 气-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  脸色 => 脸色
Spans:
Span 0-1:  小 => 小-01
Span 2-3:  当时 => 当时
Span 3-4:  气 => 气-01
Span 1-2:  王子 => 王子
Span 5-6:  脸色 => 脸色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  当时 => 当时
Oracle Span 3-4:  气 => 气-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  脸色 => 脸色

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nn	_	_
3	当时	_	NT	NT	_	4	nn	_	_
4	气	_	NN	NN	_	7	nsubj	_	_
5	得	_	VV	VV	_	7	mmod	_	_
6	脸色	_	AD	AD	_	7	advmod	_	_
7	发	_	VV	VV	_	0	root	_	_
8	白。	_	NN	NN	_	7	dobj	_	_

Oracle:
(x0 / 气-01, arg0, x2 / 王子)
(x0 / 气-01, time, x4 / 当时)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((气-01 :manner (发白 :arg0 脸色) :time 当时 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(3,4,List(0),气,气-01,false), Span(5,6,List(1),脸色,脸色,false), Span(2,3,List(2),当时,当时,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 当时, 1 -> 脸色, 4 -> 小-01, 0 -> 气-01, 3 -> 王子),Map(x2 -> 王子, x4 -> 当时, x3 -> 小-01, x6 -> 脸色, x0 -> 气-01))),[Ljava.lang.String;@28f3b248,Annotation([Ljava.lang.String;@1b1426f4,[Ljava.lang.String;@32b260fa,[Ljava.lang.String;@581ac8a8),Annotation([Ljava.lang.String;@6d4e5011,[Ljava.lang.String;@57d7f8ca,[Ledu.cmu.lti.nlp.amr.Dependency;@76c3e77a),Annotation([Ljava.lang.String;@78123e82,[Ljava.lang.String;@67c33749,[Ljava.lang.String;@fba92d3),Annotation([Ljava.lang.String;@662b4c69,[Ljava.lang.String;@fa49800,[Ledu.cmu.lti.nlp.amr.Entity;@71238fc2))
AMR:
(x0 / 气-01, ARG1, x2 / 王子)
(x0 / 气-01, time, x4 / 当时)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 当时, location, x6 / 脸色)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 45,731 microseconds
Sentence: “ 几百万 年 以来 花儿 都 在 制造 着 刺 ，

Oracle Span 1:  制造 => 制造-01
Oracle Span 2:  刺 => 刺
Oracle Span 3:  年 => (temporal-quantity :unit 年)
Oracle Span 4:  花儿 => 花儿
Spans:
Span 7-8:  制造 => 制造-01
Span 9-10:  刺 => 刺
Span 2-3:  年 => (temporal-quantity :unit 年)
Span 4-5:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  制造 => 制造-01
Oracle Span 9-10:  刺 => 刺
Oracle Span 2-3:  年 => (temporal-quantity :unit 年)
Oracle Span 4-5:  花儿 => 花儿

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	几百万	_	CD	CD	_	3	nummod	_	_
3	年	_	M	M	_	4	lobj	_	_
4	以来	_	LC	LC	_	5	dep	_	_
5	花儿	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	在	_	VV	VV	_	0	root	_	_
8	制造	_	VV	VV	_	7	conj	_	_
9	着	_	AS	AS	_	8	asp	_	_
10	刺	_	VV	VV	_	8	dep	_	_
11	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 制造-01, arg0, x3 / 花儿)
(x2 / 制造-01, arg1, x4 / 刺)
(x6 / temporal-quantity, unit, x9 / 年)

Input(Some(Graph((say :arg1 (制造-01 :duration (multiple :op (temporal-quantity :unit 年 :quant 1000000)) :arg1 刺 :arg0 花儿)),ArrayBuffer(Span(7,8,List(0),制造,制造-01,false), Span(2,3,List(1, 2),年,(temporal-quantity :unit 年),false), Span(9,10,List(3),刺,刺,false), Span(4,5,List(4),花儿,花儿,false)),Map(2 -> 年, 1 -> temporal-quantity, 4 -> 花儿, 0 -> 制造-01, 3 -> 刺),Map(x2 -> 制造-01, x4 -> 刺, x3 -> 花儿, x6 -> temporal-quantity, x9 -> 年))),[Ljava.lang.String;@2a54a73f,Annotation([Ljava.lang.String;@16a0ee18,[Ljava.lang.String;@3d6f0054,[Ljava.lang.String;@505fc5a4),Annotation([Ljava.lang.String;@5fbdfdcf,[Ljava.lang.String;@4efc180e,[Ledu.cmu.lti.nlp.amr.Dependency;@bd4dc25),Annotation([Ljava.lang.String;@25084a1e,[Ljava.lang.String;@156b88f5,[Ljava.lang.String;@3bf9ce3e),Annotation([Ljava.lang.String;@16610890,[Ljava.lang.String;@71def8f8,[Ledu.cmu.lti.nlp.amr.Entity;@383bfa16))
AMR:
(x2 / 制造-01, location, x3 / 花儿)
(x2 / 制造-01, prep-through, x4 / 刺)
(x6 / temporal-quantity, location, x3 / 花儿)
(x6 / temporal-quantity, unit, x9 / 年)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,410 microseconds
Sentence: 几百万 年 以来 羊 仍然 在 吃 花 。

Oracle Span 1:  仍然 => 仍然
Oracle Span 2:  吃 => 吃-01
Oracle Span 3:  年 => (temporal-quantity :unit 年)
Oracle Span 4:  羊 => 羊
Oracle Span 5:  花 => 花
Spans:
Span 4-5:  仍然 => 仍然
Span 6-7:  吃 => 吃-01
Span 1-2:  年 => (temporal-quantity :unit 年)
Span 3-4:  羊 => 羊
Span 7-8:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  仍然 => 仍然
Oracle Span 6-7:  吃 => 吃-01
Oracle Span 1-2:  年 => (temporal-quantity :unit 年)
Oracle Span 3-4:  羊 => 羊
Oracle Span 7-8:  花 => 花

Dependencies:
1	几百万	_	CD	CD	_	2	nummod	_	_
2	年	_	M	M	_	3	lobj	_	_
3	以来	_	LC	LC	_	7	loc	_	_
4	羊	_	NN	NN	_	7	nsubj	_	_
5	仍然	_	AD	AD	_	7	advmod	_	_
6	在	_	AD	AD	_	7	advmod	_	_
7	吃	_	VV	VV	_	0	root	_	_
8	花	_	NN	NN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 吃-01, arg0, x2 / 羊)
(x0 / 吃-01, arg1, x3 / 花)
(x0 / 吃-01, manner, x4 / 仍然)
(x6 / temporal-quantity, unit, x8 / 年)

Input(Some(Graph((吃-01 :duration (multiple :op (temporal-quantity :unit 年 :quant 1000000)) :manner 仍然 :arg1 花 :arg0 羊),ArrayBuffer(Span(6,7,List(0),吃,吃-01,false), Span(1,2,List(1, 2),年,(temporal-quantity :unit 年),false), Span(4,5,List(3),仍然,仍然,false), Span(7,8,List(4),花,花,false), Span(3,4,List(5),羊,羊,false)),Map(2 -> 年, 5 -> 羊, 1 -> temporal-quantity, 4 -> 花, 0 -> 吃-01, 3 -> 仍然),Map(x2 -> 羊, x8 -> 年, x4 -> 仍然, x3 -> 花, x6 -> temporal-quantity, x0 -> 吃-01))),[Ljava.lang.String;@4d465b11,Annotation([Ljava.lang.String;@53fdffa1,[Ljava.lang.String;@5562c41e,[Ljava.lang.String;@32ee6fee),Annotation([Ljava.lang.String;@4d0f2471,[Ljava.lang.String;@7133da86,[Ledu.cmu.lti.nlp.amr.Dependency;@3232a28a),Annotation([Ljava.lang.String;@73e22a3d,[Ljava.lang.String;@47faa49c,[Ljava.lang.String;@28f2a10f),Annotation([Ljava.lang.String;@f736069,[Ljava.lang.String;@6da21078,[Ledu.cmu.lti.nlp.amr.Entity;@7fee8714))
AMR:
(x0 / 吃-01, manner, x4 / 仍然)
(x0 / 吃-01, mode, x2 / 羊)
(x0 / 吃-01, quant, x3 / 花)
(x6 / temporal-quantity, location, x4 / 仍然)
(x6 / temporal-quantity, unit, x8 / 年)

WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,703 microseconds
Sentence: 要 搞 清楚 为什么 花儿 费 那么 大 劲 给 自己 制造 没有 什么 用 的 刺 ， 这 难道 不 是 正经 事 ？

Oracle Span 1:  事 => 事
Oracle Span 2:  制造 => 制造-01
Oracle Span 3:  刺 => 刺
Oracle Span 4:  劲 => 劲
Oracle Span 5:  大 => 大-01
Oracle Span 6:  搞 => 搞-04
Oracle Span 7:  正经 => 正经
Oracle Span 8:  清楚 => 清楚-01
Oracle Span 9:  花儿 => 花儿
Oracle Span 10:  要 => 要-03
Oracle Span 11:  费 => 费-01
Oracle Span 12:  那么 => 那么
Oracle Span 13:  难道 => 难道
Spans:
Span 23-24:  事 => 事
Span 11-12:  制造 => 制造-01
Span 16-17:  刺 => 刺
Span 8-9:  劲 => 劲
Span 7-8:  大 => 大-01
Span 1-2:  搞 => 搞-04
Span 22-23:  正经 => 正经
Span 2-3:  清楚 => 清楚-01
Span 4-5:  花儿 => 花儿
Span 0-1:  要 => 要-03
Span 5-6:  费 => 费-01
Span 6-7:  那么 => 那么
Span 19-20:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 23-24:  事 => 事
Oracle Span 11-12:  制造 => 制造-01
Oracle Span 16-17:  刺 => 刺
Oracle Span 8-9:  劲 => 劲
Oracle Span 7-8:  大 => 大-01
Oracle Span 1-2:  搞 => 搞-04
Oracle Span 22-23:  正经 => 正经
Oracle Span 2-3:  清楚 => 清楚-01
Oracle Span 4-5:  花儿 => 花儿
Oracle Span 0-1:  要 => 要-03
Oracle Span 5-6:  费 => 费-01
Oracle Span 6-7:  那么 => 那么
Oracle Span 19-20:  难道 => 难道

Dependencies:
1	要	_	VV	VV	_	2	mmod	_	_
2	搞	_	VV	VV	_	5	dep	_	_
3	清楚	_	VA	VA	_	2	dep	_	_
4	为什么	_	AD	AD	_	5	advmod	_	_
5	花儿	_	VV	VV	_	0	root	_	_
6	费	_	NN	NN	_	5	dobj	_	_
7	那么	_	AD	AD	_	12	advmod	_	_
8	大	_	JJ	JJ	_	9	amod	_	_
9	劲	_	NN	NN	_	12	nsubj	_	_
10	给	_	P	P	_	12	prep	_	_
11	自己	_	PN	PN	_	10	pobj	_	_
12	制造	_	VV	VV	_	5	dep	_	_
13	没有	_	VE	VE	_	17	rcmod	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	用	_	NN	NN	_	13	dobj	_	_
16	的	_	DEC	DEC	_	13	cpm	_	_
17	刺	_	NN	NN	_	12	dobj	_	_
18	,	_	PU	PU	_	5	punct	_	_
19	这	_	DT	DT	_	20	det	_	_
20	难道	_	NN	NN	_	22	nsubj	_	_
21	不	_	AD	AD	_	22	neg	_	_
22	是	_	VC	VC	_	5	dep	_	_
23	正经	_	JJ	JJ	_	24	amod	_	_
24	事	_	NN	NN	_	22	attr	_	_
25	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 事, domain, x5 / 要-03)
(x0 / 事, manner, x4 / 难道)
(x0 / 事, mod, x2 / 正经)
(x11 / 劲, mod, x12 / 大-01)
(x12 / 大-01, degree, x13 / 那么)
(x15 / 制造-01, arg1, x17 / 刺)
(x5 / 要-03, arg0, x7 / 搞-04)
(x7 / 搞-04, arg1, x8 / 费-01)
(x7 / 搞-04, manner, x9 / 清楚-01)
(x8 / 费-01, arg0, x10 / 花儿)
(x8 / 费-01, arg1, x11 / 劲)
(x8 / 费-01, purpose, x15 / 制造-01)

Input(Some(Graph((事 :mode interrogative :domain (要-03 :arg0 (搞-04 :manner 清楚-01 :arg1 (费-01 :purpose (制造-01 :arg1 (刺 :arg0-of (有用-01 :polarity -)) :arg0 x10) :arg1 (劲 :mod (大-01 :degree 那么)) :arg0 花儿))) :manner 难道 :polarity - :mod 正经),ArrayBuffer(Span(23,24,List(0),事,事,false), Span(0,1,List(1),要,要-03,false), Span(1,2,List(2),搞,搞-04,false), Span(2,3,List(3),清楚,清楚-01,false), Span(5,6,List(4),费,费-01,false), Span(11,12,List(5),制造,制造-01,false), Span(16,17,List(6),刺,刺,false), Span(8,9,List(7),劲,劲,false), Span(7,8,List(8),大,大-01,false), Span(6,7,List(9),那么,那么,false), Span(4,5,List(10),花儿,花儿,false), Span(19,20,List(11),难道,难道,false), Span(22,23,List(12),正经,正经,false)),Map(2 -> 搞-04, 5 -> 制造-01, 12 -> 正经, 8 -> 大-01, 7 -> 劲, 1 -> 要-03, 4 -> 费-01, 11 -> 难道, 6 -> 刺, 9 -> 那么, 0 -> 事, 10 -> 花儿, 3 -> 清楚-01),Map(x10 -> 花儿, x2 -> 正经, x5 -> 要-03, x13 -> 那么, x8 -> 费-01, x12 -> 大-01, x15 -> 制造-01, x7 -> 搞-04, x4 -> 难道, x11 -> 劲, x9 -> 清楚-01, x17 -> 刺, x0 -> 事))),[Ljava.lang.String;@4229bb3f,Annotation([Ljava.lang.String;@56cdfb3b,[Ljava.lang.String;@2b91004a,[Ljava.lang.String;@20ccf40b),Annotation([Ljava.lang.String;@2fb3536e,[Ljava.lang.String;@169e6180,[Ledu.cmu.lti.nlp.amr.Dependency;@35aea049),Annotation([Ljava.lang.String;@7205765b,[Ljava.lang.String;@47987356,[Ljava.lang.String;@22ef9844),Annotation([Ljava.lang.String;@6283d8b8,[Ljava.lang.String;@3b6ddd1d,[Ledu.cmu.lti.nlp.amr.Entity;@3f6b0be5))
AMR:
(x0 / 事, manner, x4 / 难道)
(x0 / 事, mod, x2 / 正经)
(x11 / 劲, mod, x12 / 大-01)
(x12 / 大-01, degree, x13 / 那么)
(x15 / 制造-01, prep-through, x17 / 刺)
(x17 / 刺, manner, x4 / 难道)
(x5 / 要-03, manner, x7 / 搞-04)
(x7 / 搞-04, manner, x9 / 清楚-01)
(x8 / 费-01, location, x10 / 花儿)
(x8 / 费-01, manner, x13 / 那么)
(x8 / 费-01, manner, x9 / 清楚-01)
(x8 / 费-01, purpose, x15 / 制造-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.3.0.0.2
WARNING: makeIds can't find span Id: 0.3.0.0.2.1
WARNING: makeIds can't find span Id: 0.3.0.0.1
WARNING: makeIds can't find span Id: 0.3.0.0.1.0
WARNING: makeIds can't find span Id: 0.3.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.3.0.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 65,673 microseconds
Sentence: 难道 羊 和 花 之间 的 战争 不 重要 ？

Oracle Span 1:  战争 => 战争
Oracle Span 2:  羊 => 羊
Oracle Span 3:  花 => 花
Oracle Span 4:  重要 => 重要-01
Oracle Span 5:  难道 => 难道
Spans:
Span 6-7:  战争 => 战争
Span 1-2:  羊 => 羊
Span 3-4:  花 => 花
Span 8-9:  重要 => 重要-01
Span 0-1:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  战争 => 战争
Oracle Span 1-2:  羊 => 羊
Oracle Span 3-4:  花 => 花
Oracle Span 8-9:  重要 => 重要-01
Oracle Span 0-1:  难道 => 难道

Dependencies:
1	难道	_	VV	VV	_	0	root	_	_
2	羊	_	NN	NN	_	4	conj	_	_
3	和	_	CC	CC	_	4	cc	_	_
4	花	_	NN	NN	_	5	lobj	_	_
5	之间	_	LC	LC	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	战争	_	NN	NN	_	1	dobj	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	重要	_	VA	VA	_	1	conj	_	_
10	？	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 重要-01, arg0, x3 / 战争)
(x0 / 重要-01, manner, x6 / 难道)

Input(Some(Graph((重要-01 :mode interrogative :manner 难道 :arg0 (战争 :arg0 (and :op 羊 :op 花)) :polarity -),ArrayBuffer(Span(8,9,List(0),重要,重要-01,false), Span(0,1,List(1),难道,难道,false), Span(6,7,List(2),战争,战争,false), Span(1,2,List(3),羊,羊,false), Span(3,4,List(4),花,花,false)),Map(2 -> 战争, 1 -> 难道, 4 -> 花, 0 -> 重要-01, 3 -> 羊),Map(x10 -> 花, x3 -> 战争, x6 -> 难道, x9 -> 羊, x0 -> 重要-01))),[Ljava.lang.String;@611889f4,Annotation([Ljava.lang.String;@1da2cb77,[Ljava.lang.String;@48f278eb,[Ljava.lang.String;@2f217633),Annotation([Ljava.lang.String;@a530d0a,[Ljava.lang.String;@1a18644,[Ledu.cmu.lti.nlp.amr.Dependency;@5acf93bb),Annotation([Ljava.lang.String;@7e7be63f,[Ljava.lang.String;@6cd28fa7,[Ljava.lang.String;@614ca7df),Annotation([Ljava.lang.String;@4738a206,[Ljava.lang.String;@66d3eec0,[Ledu.cmu.lti.nlp.amr.Entity;@1e04fa0a))
AMR:
(x0 / 重要-01, manner, x3 / 战争)
(x0 / 重要-01, manner, x6 / 难道)
(x10 / 花, location, x9 / 羊)
(x9 / 羊, manner, x6 / 难道)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
Decoded in 11,271 microseconds
Sentence: 这 难道 不 比 那个 大 胖子 红 脸 先生 的 帐目 更 重要 ？

Oracle Span 1:  先生 => 先生
Oracle Span 2:  大 => 大-01
Oracle Span 3:  更 => 更-01
Oracle Span 4:  胖子 => 胖子
Oracle Span 5:  这 => 这
Oracle Span 6:  重要 => 重要-01
Spans:
Span 9-10:  先生 => 先生
Span 5-6:  大 => 大-01
Span 12-13:  更 => 更-01
Span 6-7:  胖子 => 胖子
Span 0-1:  这 => 这
Span 13-14:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  先生 => 先生
Oracle Span 5-6:  大 => 大-01
Oracle Span 12-13:  更 => 更-01
Oracle Span 6-7:  胖子 => 胖子
Oracle Span 0-1:  这 => 这
Oracle Span 13-14:  重要 => 重要-01

Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	14	neg	_	_
4	比	_	P	P	_	14	prep	_	_
5	那个	_	NR	NR	_	7	nn	_	_
6	大	_	JJ	JJ	_	7	amod	_	_
7	胖子	_	NN	NN	_	9	nn	_	_
8	红	_	JJ	JJ	_	9	amod	_	_
9	脸	_	NN	NN	_	10	nn	_	_
10	先生	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	帐目	_	NN	NN	_	4	pobj	_	_
13	更	_	AD	AD	_	14	advmod	_	_
14	重要	_	VA	VA	_	2	ccomp	_	_
15	？	_	PU	PU	_	2	punct	_	_
16	这	_	PN	PN	_	14	xsubj	_	_

Oracle:
(x21 / 重要-01, arg0, x24 / 这)
(x21 / 重要-01, degree, x23 / 更-01)
(x26 / 先生, mod, x28 / 胖子)
(x28 / 胖子, mod, x29 / 大-01)

Input(Some(Graph((重要-01 :arg0 (这 :compared-to (账目 :poss (先生 :mod 那 :mod (胖子 :mod 大-01) :mod 红脸-01))) :degree 更-01),ArrayBuffer(Span(13,14,List(0),重要,重要-01,false), Span(0,1,List(1),这,这,false), Span(9,10,List(2),先生,先生,false), Span(6,7,List(3),胖子,胖子,false), Span(5,6,List(4),大,大-01,false), Span(12,13,List(5),更,更-01,false)),Map(2 -> 先生, 5 -> 更-01, 1 -> 这, 4 -> 大-01, 0 -> 重要-01, 3 -> 胖子),Map(x28 -> 胖子, x21 -> 重要-01, x24 -> 这, x23 -> 更-01, x26 -> 先生, x29 -> 大-01))),[Ljava.lang.String;@1af2d44a,Annotation([Ljava.lang.String;@18d87d80,[Ljava.lang.String;@618425b5,[Ljava.lang.String;@58695725),Annotation([Ljava.lang.String;@543588e6,[Ljava.lang.String;@f5acb9d,[Ledu.cmu.lti.nlp.amr.Dependency;@4fb3ee4e),Annotation([Ljava.lang.String;@5d7148e2,[Ljava.lang.String;@25fb8912,[Ljava.lang.String;@7c24b813),Annotation([Ljava.lang.String;@2c35e847,[Ljava.lang.String;@7bd4937b,[Ledu.cmu.lti.nlp.amr.Entity;@21e360a))
AMR:
(x21 / 重要-01, degree, x23 / 更-01)
(x26 / 先生, mod, x28 / 胖子)
(x26 / 先生, source, x23 / 更-01)
(x28 / 胖子, mod, x24 / 这)
(x28 / 胖子, mod, x29 / 大-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 17,418 microseconds
Sentence: 如果 我 认识 一 朵 人世 间 唯一 的 花 ， 只有 我 的 星球 上 有 它 ， 别的 地方 都 不 存在 ， 而 一 只 小羊 胡里胡涂 就 这样 把 它 一下子 毁掉 了 ，

Oracle Span 1:  别的 => 别的
Oracle Span 2:  只有 => 只有
Oracle Span 3:  唯一 => 唯一
Oracle Span 4:  地方 => 地方
Oracle Span 5:  存在 => 存在-01
Oracle Span 6:  就 => 就
Oracle Span 7:  我 => 我
Oracle Span 8:  星球 => 星球
Oracle Span 9:  有 => 有-03
Oracle Span 10:  毁掉 => 毁掉-01
Oracle Span 11:  花 => 花
Oracle Span 12:  认识 => 认识-01
Oracle Span 13:  这样 => 这样
Spans:
Span 19-20:  别的 => 别的
Span 11-12:  只有 => 只有
Span 7-8:  唯一 => 唯一
Span 20-21:  地方 => 地方
Span 23-24:  存在 => 存在-01
Span 30-31:  就 => 就
Span 1-2:  我 => 我
Span 14-15:  星球 => 星球
Span 16-17:  有 => 有-03
Span 35-36:  毁掉 => 毁掉-01
Span 9-10:  花 => 花
Span 2-3:  认识 => 认识-01
Span 31-32:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  别的 => 别的
Oracle Span 11-12:  只有 => 只有
Oracle Span 7-8:  唯一 => 唯一
Oracle Span 20-21:  地方 => 地方
Oracle Span 23-24:  存在 => 存在-01
Oracle Span 30-31:  就 => 就
Oracle Span 1-2:  我 => 我
Oracle Span 14-15:  星球 => 星球
Oracle Span 16-17:  有 => 有-03
Oracle Span 35-36:  毁掉 => 毁掉-01
Oracle Span 9-10:  花 => 花
Oracle Span 2-3:  认识 => 认识-01
Oracle Span 31-32:  这样 => 这样

Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	认识	_	VV	VV	_	17	pccomp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	朵	_	M	M	_	6	clf	_	_
6	人世	_	NN	NN	_	7	lobj	_	_
7	间	_	LC	LC	_	10	dep	_	_
8	唯一	_	JJ	JJ	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	花	_	NN	NN	_	3	dobj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	只有	_	AD	AD	_	17	advmod	_	_
13	我	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	星球	_	NN	NN	_	16	lobj	_	_
16	上	_	LC	LC	_	17	loc	_	_
17	有	_	VE	VE	_	0	root	_	_
18	它	_	PN	PN	_	20	nsubj	_	_
19	,	_	PU	PU	_	20	punct	_	_
20	别的	_	VV	VV	_	17	dep	_	_
21	地方	_	NN	NN	_	20	dobj	_	_
22	都	_	AD	AD	_	24	advmod	_	_
23	不	_	AD	AD	_	24	neg	_	_
24	存在	_	VV	VV	_	20	dep	_	_
25	,	_	PU	PU	_	17	punct	_	_
26	而	_	CC	CC	_	17	cc	_	_
27	一	_	CD	CD	_	28	nummod	_	_
28	只	_	M	M	_	30	clf	_	_
29	小羊	_	NN	NN	_	30	nn	_	_
30	胡里胡涂	_	NN	NN	_	36	nsubj	_	_
31	就	_	AD	AD	_	36	advmod	_	_
32	这样	_	AD	AD	_	36	advmod	_	_
33	把	_	BA	BA	_	36	ba	_	_
34	它	_	PN	PN	_	36	nsubj	_	_
35	一下子	_	AD	AD	_	36	advmod	_	_
36	毁掉	_	VV	VV	_	17	dep	_	_
37	了	_	AS	AS	_	36	asp	_	_
38	,	_	PU	PU	_	36	punct	_	_

Oracle:
(x10 / 有-03, arg0, x11 / 星球)
(x11 / 星球, manner, x15 / 只有)
(x16 / 存在-01, arg0, x19 / 地方)
(x19 / 地方, mod, x20 / 别的)
(x21 / 毁掉-01, manner, x27 / 这样)
(x27 / 这样, manner, x28 / 就)
(x4 / 认识-01, arg0, x5 / 我)
(x4 / 认识-01, arg1, x6 / 花)
(x6 / 花, mod, x8 / 唯一)

Input(Some(Graph((condition :arg1 (contrast :arg1 (and :op (认识-01 :arg1 (花 :mod 唯一 :quant 1) :arg0 (我 :location 人世间)) :op (有-03 :arg1 x6 :arg0 (星球 :manner 只有 :poss x5)) :op (存在-01 :arg0 (地方 :mod 别的) :polarity -)) :arg2 (毁掉-01 :arg1 x6 :manner (这样 :manner 就) :manner (糊里糊涂 :arg0 x22) :arg0 (羊 :mod 小-01 :quant 1)))),ArrayBuffer(Span(2,3,List(0),认识,认识-01,false), Span(9,10,List(1),花,花,false), Span(7,8,List(2),唯一,唯一,false), Span(1,2,List(3),我,我,false), Span(16,17,List(4),有,有-03,false), Span(14,15,List(5),星球,星球,false), Span(11,12,List(6),只有,只有,false), Span(23,24,List(7),存在,存在-01,false), Span(20,21,List(8),地方,地方,false), Span(19,20,List(9),别的,别的,false), Span(35,36,List(10),毁掉,毁掉-01,false), Span(31,32,List(11),这样,这样,false), Span(30,31,List(12),就,就,false)),Map(2 -> 唯一, 5 -> 星球, 12 -> 就, 8 -> 地方, 7 -> 存在-01, 1 -> 花, 4 -> 有-03, 11 -> 这样, 6 -> 只有, 9 -> 别的, 0 -> 认识-01, 10 -> 毁掉-01, 3 -> 我),Map(x28 -> 就, x16 -> 存在-01, x10 -> 有-03, x19 -> 地方, x5 -> 我, x8 -> 唯一, x27 -> 这样, x21 -> 毁掉-01, x15 -> 只有, x4 -> 认识-01, x11 -> 星球, x6 -> 花, x20 -> 别的))),[Ljava.lang.String;@74751b3,Annotation([Ljava.lang.String;@741a8937,[Ljava.lang.String;@306e95ec,[Ljava.lang.String;@52af26ee),Annotation([Ljava.lang.String;@6fd83fc1,[Ljava.lang.String;@4f2b503c,[Ledu.cmu.lti.nlp.amr.Dependency;@bae7dc0),Annotation([Ljava.lang.String;@209da20d,[Ljava.lang.String;@e15b7e8,[Ljava.lang.String;@1b2abca6),Annotation([Ljava.lang.String;@6392827e,[Ljava.lang.String;@2ed2d9cb,[Ledu.cmu.lti.nlp.amr.Entity;@d5b810e))
AMR:
(x10 / 有-03, ARG6, x11 / 星球)
(x11 / 星球, manner, x15 / 只有)
(x16 / 存在-01, op, x19 / 地方)
(x16 / 存在-01, time, x10 / 有-03)
(x19 / 地方, mod, x20 / 别的)
(x21 / 毁掉-01, manner, x27 / 这样)
(x27 / 这样, domain, x16 / 存在-01)
(x27 / 这样, manner, x28 / 就)
(x4 / 认识-01, prep-for, x5 / 我)
(x4 / 认识-01, prep-from, x6 / 花)
(x4 / 认识-01, time, x15 / 只有)
(x6 / 花, mod, x8 / 唯一)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
Decoded in 110,165 microseconds
Sentence: 这 难道 不 重要 ？ ”

Oracle Span 1:  这 => 这
Oracle Span 2:  重要 => 重要-01
Oracle Span 3:  难道 => 难道
Spans:
Span 0-1:  这 => 这
Span 3-4:  重要 => 重要-01
Span 1-2:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  这 => 这
Oracle Span 3-4:  重要 => 重要-01
Oracle Span 1-2:  难道 => 难道

Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	重要	_	VA	VA	_	2	ccomp	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_
7	这	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x7 / 重要-01, arg0, x9 / 这)
(x7 / 重要-01, manner, x10 / 难道)

Input(Some(Graph((say :arg1 (重要-01 :mode interrogative :manner 难道 :arg0 这 :polarity -)),ArrayBuffer(Span(3,4,List(0),重要,重要-01,false), Span(1,2,List(1),难道,难道,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 难道, 0 -> 重要-01),Map(x10 -> 难道, x7 -> 重要-01, x9 -> 这))),[Ljava.lang.String;@43dac38f,Annotation([Ljava.lang.String;@342c38f8,[Ljava.lang.String;@c88a337,[Ljava.lang.String;@5d0a1059),Annotation([Ljava.lang.String;@485966cc,[Ljava.lang.String;@1de76cc7,[Ledu.cmu.lti.nlp.amr.Dependency;@54bff557),Annotation([Ljava.lang.String;@593aaf41,[Ljava.lang.String;@5a56cdac,[Ljava.lang.String;@7c711375),Annotation([Ljava.lang.String;@57cf54e1,[Ljava.lang.String;@5b03b9fe,[Ledu.cmu.lti.nlp.amr.Entity;@37d4349f))
AMR:
(x7 / 重要-01, manner, x10 / 难道)
(x7 / 重要-01, mod, x9 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 7,472 microseconds
Sentence: 他 的 脸 气 得 发红 ， 然后 又 接着 说道 ： “ 如果 有 人 爱上 了 在 这 亿万 颗 星星 中 独一无二 的 一 株 花 ， 当 他 看 着 这些 星星 的 时候 ， 这 就 足以 使 他 感到 幸福 。

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  又 => 又
Oracle Span 4:  发红 => 发红-01
Oracle Span 5:  幸福 => 幸福
Oracle Span 6:  感到 => 感到-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  星星 => 星星
Oracle Span 9:  气 => 气-01
Oracle Span 10:  爱上 => 爱上-01
Oracle Span 11:  独一无二 => 独一无二
Oracle Span 12:  看 => 看-02
Oracle Span 13:  脸 => 脸
Oracle Span 14:  花 => 花
Oracle Span 15:  说道 => 说道
Oracle Span 16:  足以 => 足以-01
Oracle Span 17:  这 => 这
Oracle Span 18:  这些 => 这些
Spans:
Span 15-16:  人 => 人
Span 0-1:  他 => 他
Span 8-9:  又 => 又
Span 5-6:  发红 => 发红-01
Span 45-46:  幸福 => 幸福
Span 44-45:  感到 => 感到-01
Span 22-23:  星星 => 星星
Span 35-36:  星星 => 星星
Span 3-4:  气 => 气-01
Span 16-17:  爱上 => 爱上-01
Span 24-25:  独一无二 => 独一无二
Span 32-33:  看 => 看-02
Span 2-3:  脸 => 脸
Span 28-29:  花 => 花
Span 10-11:  说道 => 说道
Span 41-42:  足以 => 足以-01
Span 19-20:  这 => 这
Span 34-35:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  又 => 又
Oracle Span 5-6:  发红 => 发红-01
Oracle Span 45-46:  幸福 => 幸福
Oracle Span 44-45:  感到 => 感到-01
Oracle Span 22-23:  星星 => 星星
Oracle Span 35-36:  星星 => 星星
Oracle Span 3-4:  气 => 气-01
Oracle Span 16-17:  爱上 => 爱上-01
Oracle Span 24-25:  独一无二 => 独一无二
Oracle Span 32-33:  看 => 看-02
Oracle Span 2-3:  脸 => 脸
Oracle Span 28-29:  花 => 花
Oracle Span 10-11:  说道 => 说道
Oracle Span 41-42:  足以 => 足以-01
Oracle Span 19-20:  这 => 这
Oracle Span 34-35:  这些 => 这些

Dependencies:
1	他	_	PN	PN	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	脸	_	NN	NN	_	4	nn	_	_
4	气	_	NN	NN	_	5	nsubj	_	_
5	得	_	VV	VV	_	0	root	_	_
6	发红	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	然后	_	AD	AD	_	11	advmod	_	_
9	又	_	AD	AD	_	11	advmod	_	_
10	接着	_	AD	AD	_	11	advmod	_	_
11	说道	_	VV	VV	_	5	conj	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	15	punct	_	_
14	如果	_	CS	CS	_	15	advmod	_	_
15	有	_	VE	VE	_	11	ccomp	_	_
16	人	_	NN	NN	_	17	nsubj	_	_
17	爱上	_	VV	VV	_	15	dep	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	在	_	P	P	_	42	prep	_	_
20	这	_	DT	DT	_	23	det	_	_
21	亿万	_	CD	CD	_	22	nummod	_	_
22	颗	_	M	M	_	20	dep	_	_
23	星星	_	NN	NN	_	24	lobj	_	_
24	中	_	LC	LC	_	19	plmod	_	_
25	独一无二	_	CD	CD	_	29	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	一	_	CD	CD	_	28	nummod	_	_
28	株	_	M	M	_	29	clf	_	_
29	花	_	NN	NN	_	42	nsubj	_	_
30	,	_	PU	PU	_	42	punct	_	_
31	当	_	P	P	_	42	prep	_	_
32	他	_	PN	PN	_	33	nsubj	_	_
33	看	_	VV	VV	_	38	rcmod	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	这些	_	DT	DT	_	36	det	_	_
36	星星	_	NN	NN	_	33	dobj	_	_
37	的	_	DEC	DEC	_	33	cpm	_	_
38	时候	_	NN	NN	_	31	pobj	_	_
39	,	_	PU	PU	_	42	punct	_	_
40	这	_	PN	PN	_	42	nsubj	_	_
41	就	_	AD	AD	_	42	advmod	_	_
42	足以	_	VV	VV	_	17	ccomp	_	_
43	使	_	VV	VV	_	42	ccomp	_	_
44	他	_	PN	PN	_	43	dobj	_	_
45	感到	_	VV	VV	_	43	dep	_	_
46	幸福	_	NN	NN	_	45	dobj	_	_
47	。	_	PU	PU	_	5	punct	_	_
48	气	_	NN	NN	_	15	xsubj	_	_

Oracle:
(x11 / 说道, manner, x12 / 又)
(x37 / 爱上-01, arg0, x38 / 人)
(x37 / 爱上-01, arg1, x39 / 花)
(x39 / 花, location, x42 / 星星)
(x39 / 花, mod, x41 / 独一无二)
(x42 / 星星, mod, x45 / 这)
(x6 / 发红-01, arg0, x7 / 脸)
(x66 / 足以-01, arg1, x67 / 感到-01)
(x66 / 足以-01, time, x71 / 看-02)
(x67 / 感到-01, arg1, x69 / 幸福)
(x71 / 看-02, arg1, x73 / 星星)
(x73 / 星星, mod, x74 / 这些)
(x8 / 他, part, x7 / 脸)
(x9 / 气-01, cause, x6 / 发红-01)

Input(Some(Graph((temporal :arg1 (发红-01 :cause-of (气-01 :arg0 x8) :arg0 (脸 :part-of 他)) :arg2 (说道 :arg1 (condition :arg1 (爱上-01 :arg1 (花 :location (星星 :mod 这 :quant (multiple :op 1000000)) :mod 独一无二 :quant 1) :arg0 人) :arg2 (足以-01 :time (看-02 :arg1 (星星 :mod 这些) :arg0 x8) :arg1 (感到-01 :cause x37 :arg1 幸福 :arg0 x8))) :arg0 x8 :manner 又)),ArrayBuffer(Span(5,6,List(0),发红,发红-01,false), Span(3,4,List(1),气,气-01,false), Span(2,3,List(2),脸,脸,false), Span(0,1,List(3),他,他,false), Span(10,11,List(4),说道,说道,false), Span(16,17,List(5),爱上,爱上-01,false), Span(28,29,List(6),花,花,false), Span(22,23,List(7),星星,星星,false), Span(19,20,List(8),这,这,false), Span(24,25,List(9),独一无二,独一无二,false), Span(15,16,List(10),人,人,false), Span(41,42,List(11),足以,足以-01,false), Span(32,33,List(12),看,看-02,false), Span(35,36,List(13),星星,星星,false), Span(34,35,List(14),这些,这些,false), Span(44,45,List(15),感到,感到-01,false), Span(45,46,List(16),幸福,幸福,false), Span(8,9,List(17),又,又,false)),Map(2 -> 脸, 5 -> 爱上-01, 12 -> 看-02, 15 -> 感到-01, 8 -> 这, 7 -> 星星, 17 -> 又, 1 -> 气-01, 4 -> 说道, 11 -> 足以-01, 14 -> 这些, 6 -> 花, 9 -> 独一无二, 0 -> 发红-01, 16 -> 幸福, 10 -> 人, 3 -> 他, 13 -> 星星),Map(x67 -> 感到-01, x73 -> 星星, x37 -> 爱上-01, x8 -> 他, x66 -> 足以-01, x39 -> 花, x45 -> 这, x12 -> 又, x69 -> 幸福, x7 -> 脸, x42 -> 星星, x74 -> 这些, x41 -> 独一无二, x71 -> 看-02, x38 -> 人, x11 -> 说道, x6 -> 发红-01, x9 -> 气-01))),[Ljava.lang.String;@434a63ab,Annotation([Ljava.lang.String;@6e0f5f7f,[Ljava.lang.String;@2805d709,[Ljava.lang.String;@3ee37e5a),Annotation([Ljava.lang.String;@2ea41516,[Ljava.lang.String;@3a44431a,[Ledu.cmu.lti.nlp.amr.Dependency;@3c7f66c4),Annotation([Ljava.lang.String;@194bcebf,[Ljava.lang.String;@17497425,[Ljava.lang.String;@f0da945),Annotation([Ljava.lang.String;@4803b726,[Ljava.lang.String;@ffaa6af,[Ledu.cmu.lti.nlp.amr.Entity;@53ce1329))
AMR:
(x11 / 说道, manner, x12 / 又)
(x11 / 说道, mod, x6 / 发红-01)
(x37 / 爱上-01, prep-following, x38 / 人)
(x38 / 人, mod, x11 / 说道)
(x39 / 花, mod, x41 / 独一无二)
(x41 / 独一无二, mod, x42 / 星星)
(x42 / 星星, mod, x37 / 爱上-01)
(x42 / 星星, mod, x45 / 这)
(x6 / 发红-01, time, x9 / 气-01)
(x66 / 足以-01, time, x67 / 感到-01)
(x66 / 足以-01, time, x71 / 看-02)
(x67 / 感到-01, ARG3, x69 / 幸福)
(x71 / 看-02, direction, x73 / 星星)
(x71 / 看-02, time, x39 / 花)
(x73 / 星星, mod, x74 / 这些)
(x8 / 他, part, x7 / 脸)
(x9 / 气-01, time, x7 / 脸)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.0.1
WARNING: makeIds can't find span Id: 0.1.2.0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.0.1.1
WARNING: makeIds can't find span Id: 0.1.2.0.0
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.1
WARNING: makeIds can't find span Id: 0.1.2.1.1.1
WARNING: makeIds can't find span Id: 0.1.2.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.2.1.0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 181,268 microseconds
Sentence: 他 可以 自言自语 地 说 ： ‘ 我 的 那 朵 花 就 在 其中 的 一 颗 星星 上 … ’ ， 但是 如果 羊 吃掉 了 这 朵 花 ， 对 他 来说 ， 好象 所有 的 星星 一下子 全 都 熄灭 了 一样 ！

Oracle Span 1:  一下子 => 一下子
Oracle Span 2:  他 => 他
Oracle Span 3:  全 => 全-01
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  吃掉 => 吃掉-01
Oracle Span 6:  我 => 我
Oracle Span 7:  所有 => 所有
Oracle Span 8:  星星 => 星星
Oracle Span 9:  星星 => 星星
Oracle Span 10:  来说 => 来说-01
Oracle Span 11:  熄灭 => 熄灭-01
Oracle Span 12:  羊 => 羊
Oracle Span 13:  自言自语 => 自言自语
Oracle Span 14:  花 => 花
Oracle Span 15:  说 => 说-01
Oracle Span 16:  这 => 这
Oracle Span 17:  那 => 那
Oracle Span 18:  都 => 都
Spans:
Span 40-41:  一下子 => 一下子
Span 0-1:  他 => 他
Span 41-42:  全 => 全-01
Span 1-2:  可以 => 可以-01
Span 26-27:  吃掉 => 吃掉-01
Span 7-8:  我 => 我
Span 37-38:  所有 => 所有
Span 18-19:  星星 => 星星
Span 39-40:  星星 => 星星
Span 34-35:  来说 => 来说-01
Span 43-44:  熄灭 => 熄灭-01
Span 25-26:  羊 => 羊
Span 2-3:  自言自语 => 自言自语
Span 11-12:  花 => 花
Span 4-5:  说 => 说-01
Span 28-29:  这 => 这
Span 9-10:  那 => 那
Span 42-43:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 40-41:  一下子 => 一下子
Oracle Span 0-1:  他 => 他
Oracle Span 41-42:  全 => 全-01
Oracle Span 1-2:  可以 => 可以-01
Oracle Span 26-27:  吃掉 => 吃掉-01
Oracle Span 7-8:  我 => 我
Oracle Span 37-38:  所有 => 所有
Oracle Span 18-19:  星星 => 星星
Oracle Span 39-40:  星星 => 星星
Oracle Span 34-35:  来说 => 来说-01
Oracle Span 43-44:  熄灭 => 熄灭-01
Oracle Span 25-26:  羊 => 羊
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 11-12:  花 => 花
Oracle Span 4-5:  说 => 说-01
Oracle Span 28-29:  这 => 这
Oracle Span 9-10:  那 => 那
Oracle Span 42-43:  都 => 都

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	可以	_	VV	VV	_	5	mmod	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	44	dep	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	‘	_	PU	PU	_	21	punct	_	_
8	我	_	PN	PN	_	12	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	那	_	DT	DT	_	12	det	_	_
11	朵	_	M	M	_	10	clf	_	_
12	花	_	NN	NN	_	21	nsubj	_	_
13	就	_	AD	AD	_	21	advmod	_	_
14	在	_	P	P	_	21	prep	_	_
15	其中	_	NN	NN	_	19	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	颗	_	M	M	_	19	clf	_	_
19	星星	_	NN	NN	_	20	lobj	_	_
20	上	_	LC	LC	_	14	plmod	_	_
21	…	_	VV	VV	_	5	ccomp	_	_
22	’	_	PU	PU	_	21	punct	_	_
23	,	_	PU	PU	_	44	punct	_	_
24	但是	_	AD	AD	_	44	advmod	_	_
25	如果	_	CS	CS	_	27	advmod	_	_
26	羊	_	NN	NN	_	27	nsubj	_	_
27	吃掉	_	VV	VV	_	44	pccomp	_	_
28	了	_	AS	AS	_	27	asp	_	_
29	这	_	DT	DT	_	31	det	_	_
30	朵	_	M	M	_	29	clf	_	_
31	花	_	NN	NN	_	27	dobj	_	_
32	,	_	PU	PU	_	44	punct	_	_
33	对	_	P	P	_	44	prep	_	_
34	他	_	PN	PN	_	35	nn	_	_
35	来说	_	NN	NN	_	33	pobj	_	_
36	,	_	PU	PU	_	44	punct	_	_
37	好象	_	NR	NR	_	40	nn	_	_
38	所有	_	DT	DT	_	40	assmod	_	_
39	的	_	DEG	DEG	_	38	assm	_	_
40	星星	_	NN	NN	_	44	nsubj	_	_
41	一下子	_	CD	CD	_	44	nsubj	_	_
42	全	_	AD	AD	_	44	advmod	_	_
43	都	_	AD	AD	_	44	advmod	_	_
44	熄灭	_	VV	VV	_	0	root	_	_
45	了	_	AS	AS	_	44	asp	_	_
46	一样	_	CD	CD	_	44	dep	_	_
47	！	_	PU	PU	_	44	punct	_	_

Oracle:
(x16 / 吃掉-01, arg0, x17 / 羊)
(x27 / 熄灭-01, manner, x28 / 都)
(x27 / 熄灭-01, manner, x29 / 全-01)
(x27 / 熄灭-01, manner, x30 / 一下子)
(x4 / 可以-01, arg0, x5 / 说-01)
(x5 / 说-01, arg0, x7 / 他)
(x5 / 说-01, arg1, x8 / 花)
(x5 / 说-01, manner, x6 / 自言自语)
(x8 / 花, location, x11 / 星星)
(x8 / 花, mod, x9 / 那)
(x8 / 花, poss, x10 / 我)

Input(Some(Graph((contrast :arg1 (可以-01 :arg0 (说-01 :arg1 (花 :location (星星 :arg1-of (include-91 :arg2 星星) :quant 1) :poss 我 :mod 那) :arg0 他 :manner 自言自语)) :arg2 (condition :arg1 (吃掉-01 :arg1 (x8 :mod 这) :arg0 羊) :arg2 (来说-01 :arg2 (像-02 :arg0 (星星 :mod 所有) :arg1 (熄灭-01 :manner 一下子 :manner 全-01 :manner 都)) :arg1 x7)) :mode expressive),ArrayBuffer(Span(1,2,List(0),可以,可以-01,false), Span(4,5,List(1),说,说-01,false), Span(11,12,List(2),花,花,false), Span(18,19,List(3),星星,星星,false), Span(39,40,List(4),星星,星星,false), Span(7,8,List(5),我,我,false), Span(9,10,List(6),那,那,false), Span(0,1,List(7),他,他,false), Span(2,3,List(8),自言自语,自言自语,false), Span(26,27,List(9),吃掉,吃掉-01,false), Span(28,29,List(10),这,这,false), Span(25,26,List(11),羊,羊,false), Span(34,35,List(12),来说,来说-01,false), Span(37,38,List(13),所有,所有,false), Span(43,44,List(14),熄灭,熄灭-01,false), Span(40,41,List(15),一下子,一下子,false), Span(41,42,List(16),全,全-01,false), Span(42,43,List(17),都,都,false)),Map(2 -> 花, 5 -> 我, 12 -> 来说-01, 15 -> 一下子, 8 -> 自言自语, 7 -> 他, 17 -> 都, 1 -> 说-01, 4 -> 星星, 11 -> 羊, 14 -> 熄灭-01, 6 -> 那, 9 -> 吃掉-01, 0 -> 可以-01, 16 -> 全-01, 10 -> 这, 3 -> 星星, 13 -> 所有),Map(x28 -> 都, x34 -> 星星, x22 -> 来说-01, x16 -> 吃掉-01, x10 -> 我, x5 -> 说-01, x8 -> 花, x30 -> 一下子, x27 -> 熄灭-01, x21 -> 这, x7 -> 他, x4 -> 可以-01, x26 -> 所有, x11 -> 星星, x29 -> 全-01, x6 -> 自言自语, x9 -> 那, x17 -> 羊))),[Ljava.lang.String;@316bcf94,Annotation([Ljava.lang.String;@6404f418,[Ljava.lang.String;@3e11f9e9,[Ljava.lang.String;@1de5f259),Annotation([Ljava.lang.String;@729d991e,[Ljava.lang.String;@31fa1761,[Ledu.cmu.lti.nlp.amr.Dependency;@957e06),Annotation([Ljava.lang.String;@32502377,[Ljava.lang.String;@2c1b194a,[Ljava.lang.String;@4dbb42b7),Annotation([Ljava.lang.String;@66f57048,[Ljava.lang.String;@550dbc7a,[Ledu.cmu.lti.nlp.amr.Entity;@21282ed8))
AMR:
(x16 / 吃掉-01, location, x11 / 星星)
(x16 / 吃掉-01, time, x17 / 羊)
(x16 / 吃掉-01, topic, x21 / 这)
(x22 / 来说-01, location, x26 / 所有)
(x22 / 来说-01, time, x16 / 吃掉-01)
(x27 / 熄灭-01, manner, x28 / 都)
(x27 / 熄灭-01, manner, x29 / 全-01)
(x27 / 熄灭-01, manner, x30 / 一下子)
(x34 / 星星, manner, x30 / 一下子)
(x34 / 星星, mod, x26 / 所有)
(x4 / 可以-01, manner, x6 / 自言自语)
(x4 / 可以-01, prep-following, x7 / 他)
(x5 / 说-01, manner, x6 / 自言自语)
(x5 / 说-01, subevent, x10 / 我)
(x5 / 说-01, time, x9 / 那)
(x8 / 花, location, x11 / 星星)
(x8 / 花, mod, x9 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.2
WARNING: makeIds can't find span Id: 0.0.0.2.2.1.0
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1.0
Decoded in 144,922 microseconds
Sentence: 这 难道 也 不 重要 吗 ？ ！ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  这 => 这
Oracle Span 3:  重要 => 重要-01
Oracle Span 4:  难道 => 难道
Spans:
Span 2-3:  也 => 也
Span 0-1:  这 => 这
Span 4-5:  重要 => 重要-01
Span 1-2:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 0-1:  这 => 这
Oracle Span 4-5:  重要 => 重要-01
Oracle Span 1-2:  难道 => 难道

Dependencies:
1	这	_	AD	AD	_	2	advmod	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	重要	_	VA	VA	_	2	dobj	_	_
6	吗	_	SP	SP	_	5	dep	_	_
7	？	_	PU	PU	_	2	punct	_	_
8	！	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 重要-01, arg0, x5 / 这)
(x2 / 重要-01, manner, x4 / 也)
(x2 / 重要-01, manner, x6 / 难道)

Input(Some(Graph((say :arg1 (重要-01 :mode interrogative :manner 难道 :arg0 这 :manner 也 :polarity -)),ArrayBuffer(Span(4,5,List(0),重要,重要-01,false), Span(1,2,List(1),难道,难道,false), Span(0,1,List(2),这,这,false), Span(2,3,List(3),也,也,false)),Map(2 -> 这, 1 -> 难道, 0 -> 重要-01, 3 -> 也),Map(x2 -> 重要-01, x5 -> 这, x4 -> 也, x6 -> 难道))),[Ljava.lang.String;@36916eb0,Annotation([Ljava.lang.String;@7bab3f1a,[Ljava.lang.String;@437da279,[Ljava.lang.String;@23c30a20),Annotation([Ljava.lang.String;@1e1a0406,[Ljava.lang.String;@3cebbb30,[Ledu.cmu.lti.nlp.amr.Dependency;@12aba8be),Annotation([Ljava.lang.String;@290222c1,[Ljava.lang.String;@67f639d3,[Ljava.lang.String;@6253c26),Annotation([Ljava.lang.String;@49049a04,[Ljava.lang.String;@71a8adcf,[Ledu.cmu.lti.nlp.amr.Entity;@27462a88))
AMR:
(x2 / 重要-01, manner, x4 / 也)
(x2 / 重要-01, manner, x6 / 难道)
(x6 / 难道, domain, x5 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 8,193 microseconds
Sentence: 他 无法 再 说 下去 了 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  再 => 再
Oracle Span 3:  说 => 说-01
Spans:
Span 0-1:  他 => 他
Span 2-3:  再 => 再
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  再 => 再
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	无法	_	AD	AD	_	4	advmod	_	_
3	再	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	下去	_	VV	VV	_	4	rcomp	_	_
6	了	_	AS	AS	_	4	asp	_	_
7	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 说-01, arg0, x6 / 他)
(x2 / 说-01, manner, x4 / 再)

Input(Some(Graph((possible :arg0 (说-01 :manner 再 :arg0 他)),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(2,3,List(1),再,再,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 再, 0 -> 说-01),Map(x2 -> 说-01, x4 -> 再, x6 -> 他))),[Ljava.lang.String;@82de64a,Annotation([Ljava.lang.String;@659499f1,[Ljava.lang.String;@51e69659,[Ljava.lang.String;@47e2e487),Annotation([Ljava.lang.String;@201a4587,[Ljava.lang.String;@61001b64,[Ledu.cmu.lti.nlp.amr.Dependency;@4310d43),Annotation([Ljava.lang.String;@54a7079e,[Ljava.lang.String;@26e356f0,[Ljava.lang.String;@47d9a273),Annotation([Ljava.lang.String;@4b8ee4de,[Ljava.lang.String;@27f981c6,[Ledu.cmu.lti.nlp.amr.Entity;@1b11171f))
AMR:
(x2 / 说-01, manner, x4 / 再)
(x2 / 说-01, mode, x6 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,751 microseconds
Sentence: 突然 泣不成声 。

Oracle Span 1:  泣不成声 => 泣不成声
Oracle Span 2:  突然 => 突然
Spans:
Span 1-2:  泣不成声 => 泣不成声
Span 0-1:  突然 => 突然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  泣不成声 => 泣不成声
Oracle Span 0-1:  突然 => 突然

Dependencies:
1	突然	_	AD	AD	_	2	advmod	_	_
2	泣不成声	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 泣不成声, manner, x2 / 突然)

Input(Some(Graph((泣不成声 :manner 突然),ArrayBuffer(Span(1,2,List(0),泣不成声,泣不成声,false), Span(0,1,List(1),突然,突然,false)),Map(1 -> 突然, 0 -> 泣不成声),Map(x2 -> 突然, x0 -> 泣不成声))),[Ljava.lang.String;@1151e434,Annotation([Ljava.lang.String;@2dc54ad4,[Ljava.lang.String;@4659191b,[Ljava.lang.String;@55634720),Annotation([Ljava.lang.String;@4b0d79fc,[Ljava.lang.String;@4c1909a3,[Ledu.cmu.lti.nlp.amr.Dependency;@428640fa),Annotation([Ljava.lang.String;@d9345cd,[Ljava.lang.String;@2d710f1a,[Ljava.lang.String;@29215f06),Annotation([Ljava.lang.String;@59505b48,[Ljava.lang.String;@4efac082,[Ledu.cmu.lti.nlp.amr.Entity;@6bd61f98))
AMR:
(x0 / 泣不成声, manner, x2 / 突然)

WARNING: makeIds can't find span Id: 0.0
Decoded in 5,735 microseconds
Sentence: 夜幕 已经 降临 。

Oracle Span 1:  夜幕 => 夜幕
Oracle Span 2:  降临 => 降临-01
Spans:
Span 0-1:  夜幕 => 夜幕
Span 2-3:  降临 => 降临-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  夜幕 => 夜幕
Oracle Span 2-3:  降临 => 降临-01

Dependencies:
1	夜幕	_	NN	NN	_	3	nsubj	_	_
2	已经	_	AD	AD	_	3	advmod	_	_
3	降临	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 降临-01, arg0, x2 / 夜幕)

Input(Some(Graph((降临-01 :arg0 夜幕),ArrayBuffer(Span(2,3,List(0),降临,降临-01,false), Span(0,1,List(1),夜幕,夜幕,false)),Map(1 -> 夜幕, 0 -> 降临-01),Map(x2 -> 夜幕, x0 -> 降临-01))),[Ljava.lang.String;@48aca48b,Annotation([Ljava.lang.String;@13fd2ccd,[Ljava.lang.String;@b9b00e0,[Ljava.lang.String;@506ae4d4),Annotation([Ljava.lang.String;@7d4f9aae,[Ljava.lang.String;@72e5a8e,[Ledu.cmu.lti.nlp.amr.Dependency;@54e1c68b),Annotation([Ljava.lang.String;@53aac487,[Ljava.lang.String;@52b1beb6,[Ljava.lang.String;@273e7444),Annotation([Ljava.lang.String;@7db12bb6,[Ljava.lang.String;@783a467b,[Ledu.cmu.lti.nlp.amr.Entity;@272113c4))
AMR:
(x0 / 降临-01, mode, x2 / 夜幕)

WARNING: makeIds can't find span Id: 0.0
Decoded in 6,421 microseconds
Sentence: 我 放下 手 中 的 工具 。

Oracle Span 1:  工具 => 工具
Oracle Span 2:  我 => 我
Oracle Span 3:  手 => 手
Oracle Span 4:  放下 => 放下-01
Spans:
Span 5-6:  工具 => 工具
Span 0-1:  我 => 我
Span 2-3:  手 => 手
Span 1-2:  放下 => 放下-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  工具 => 工具
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  手 => 手
Oracle Span 1-2:  放下 => 放下-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	放下	_	VV	VV	_	0	root	_	_
3	手	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	工具	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 放下-01, arg0, x2 / 我)
(x0 / 放下-01, arg1, x3 / 工具)
(x3 / 工具, location, x4 / 手)

Input(Some(Graph((放下-01 :arg1 (工具 :location 手) :arg0 我),ArrayBuffer(Span(1,2,List(0),放下,放下-01,false), Span(5,6,List(1),工具,工具,false), Span(2,3,List(2),手,手,false), Span(0,1,List(3),我,我,false)),Map(2 -> 手, 1 -> 工具, 0 -> 放下-01, 3 -> 我),Map(x2 -> 我, x4 -> 手, x3 -> 工具, x0 -> 放下-01))),[Ljava.lang.String;@73e9cf30,Annotation([Ljava.lang.String;@771a660,[Ljava.lang.String;@2d52216b,[Ljava.lang.String;@242b836),Annotation([Ljava.lang.String;@3f6f6701,[Ljava.lang.String;@3527942a,[Ledu.cmu.lti.nlp.amr.Dependency;@942a29c),Annotation([Ljava.lang.String;@1ed6388a,[Ljava.lang.String;@5a45133e,[Ljava.lang.String;@534a5a98),Annotation([Ljava.lang.String;@4f80542f,[Ljava.lang.String;@60bd273d,[Ledu.cmu.lti.nlp.amr.Entity;@121314f7))
AMR:
(x0 / 放下-01, snt1, x3 / 工具)
(x0 / 放下-01, value, x2 / 我)
(x3 / 工具, location, x4 / 手)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,990 microseconds
Sentence: 我 把 锤子 、 螺钉 、 饥渴 、 死亡 ， 全都 抛在 脑后 。

Oracle Span 1:  我 => 我
Oracle Span 2:  死亡 => 死亡
Oracle Span 3:  螺钉 => 螺钉
Oracle Span 4:  锤子 => 锤子
Oracle Span 5:  饥渴 => 饥渴
Spans:
Span 0-1:  我 => 我
Span 8-9:  死亡 => 死亡
Span 4-5:  螺钉 => 螺钉
Span 2-3:  锤子 => 锤子
Span 6-7:  饥渴 => 饥渴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  死亡 => 死亡
Oracle Span 4-5:  螺钉 => 螺钉
Oracle Span 2-3:  锤子 => 锤子
Oracle Span 6-7:  饥渴 => 饥渴

Dependencies:
1	我	_	PN	PN	_	12	nsubj	_	_
2	把	_	BA	BA	_	12	ba	_	_
3	锤子	_	NN	NN	_	9	conj	_	_
4	、	_	PU	PU	_	9	punct	_	_
5	螺钉	_	NN	NN	_	9	conj	_	_
6	、	_	PU	PU	_	9	punct	_	_
7	饥渴	_	NN	NN	_	9	conj	_	_
8	、	_	PU	PU	_	9	punct	_	_
9	死亡	_	NN	NN	_	12	nsubj	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	全都	_	AD	AD	_	12	advmod	_	_
12	抛在	_	VV	VV	_	0	root	_	_
13	脑后	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:


Input(Some(Graph((抛-01 :arg0 我 :arg1 (and :op 锤子 :op 螺钉 :op 饥渴 :op 死亡) :arg2 (后 :arg0 脑) :manner 全-01 :manner 都),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),锤子,锤子,false), Span(4,5,List(2),螺钉,螺钉,false), Span(6,7,List(3),饥渴,饥渴,false), Span(8,9,List(4),死亡,死亡,false)),Map(2 -> 螺钉, 1 -> 锤子, 4 -> 死亡, 0 -> 我, 3 -> 饥渴),Map(x2 -> 我, x5 -> 螺钉, x7 -> 死亡, x4 -> 锤子, x6 -> 饥渴))),[Ljava.lang.String;@130c12b7,Annotation([Ljava.lang.String;@5e600dd5,[Ljava.lang.String;@576d5deb,[Ljava.lang.String;@5d534f5d),Annotation([Ljava.lang.String;@2e3967ea,[Ljava.lang.String;@70e9c95d,[Ledu.cmu.lti.nlp.amr.Dependency;@4d5650ae),Annotation([Ljava.lang.String;@a38c7fe,[Ljava.lang.String;@6fdbe764,[Ljava.lang.String;@51c668e3),Annotation([Ljava.lang.String;@2e6a8155,[Ljava.lang.String;@6221a451,[Ledu.cmu.lti.nlp.amr.Entity;@52719fb6))
AMR:
(x4 / 锤子, domain, x2 / 我)
(x5 / 螺钉, domain, x4 / 锤子)
(x5 / 螺钉, part, x6 / 饥渴)
(x6 / 饥渴, prep-along-with, x7 / 死亡)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.3
Decoded in 10,245 microseconds
Sentence: 在 一 颗 星球 上 ， 在 一 颗 行星 上 ， 在 我 的 行星 上 ， 在 地球 上 有 一 个 小 王子 需要 安慰 ！

Oracle Span 1:  地球 => 地球
Oracle Span 2:  小 => 小-01
Oracle Span 3:  我 => 我
Oracle Span 4:  星球 => 星球
Oracle Span 5:  有 => 有-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  行星 => 行星
Oracle Span 8:  行星 => 行星
Oracle Span 9:  需要 => 需要-04
Spans:
Span 19-20:  地球 => 地球
Span 24-25:  小 => 小-01
Span 13-14:  我 => 我
Span 3-4:  星球 => 星球
Span 21-22:  有 => 有-01
Span 25-26:  王子 => 王子
Span 9-10:  行星 => 行星
Span 15-16:  行星 => 行星
Span 26-27:  需要 => 需要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 19-20:  地球 => 地球
Oracle Span 24-25:  小 => 小-01
Oracle Span 13-14:  我 => 我
Oracle Span 3-4:  星球 => 星球
Oracle Span 21-22:  有 => 有-01
Oracle Span 25-26:  王子 => 王子
Oracle Span 9-10:  行星 => 行星
Oracle Span 15-16:  行星 => 行星
Oracle Span 26-27:  需要 => 需要-04

Dependencies:
1	在	_	P	P	_	22	prep	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	颗	_	M	M	_	4	clf	_	_
4	星球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	1	plmod	_	_
6	,	_	PU	PU	_	22	punct	_	_
7	在	_	P	P	_	22	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	10	clf	_	_
10	行星	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	7	plmod	_	_
12	,	_	PU	PU	_	22	punct	_	_
13	在	_	P	P	_	22	prep	_	_
14	我	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	行星	_	NN	NN	_	17	lobj	_	_
17	上	_	LC	LC	_	13	plmod	_	_
18	,	_	PU	PU	_	22	punct	_	_
19	在	_	P	P	_	22	prep	_	_
20	地球	_	NN	NN	_	21	lobj	_	_
21	上	_	LC	LC	_	19	plmod	_	_
22	有	_	VE	VE	_	0	root	_	_
23	一	_	CD	CD	_	24	nummod	_	_
24	个	_	M	M	_	28	clf	_	_
25	小	_	JJ	JJ	_	26	amod	_	_
26	王子	_	NN	NN	_	27	nn	_	_
27	需要	_	NN	NN	_	28	nn	_	_
28	安慰	_	NN	NN	_	22	dobj	_	_
29	！	_	PU	PU	_	22	punct	_	_

Oracle:
(x0 / 有-01, arg1, x10 / 王子)
(x10 / 王子, mod, x11 / 小-01)
(x12 / 需要-04, arg0, x10 / 王子)
(x7 / 行星, poss, x8 / 我)

Input(Some(Graph((有-01 :mode expressive :arg1 (王子 :arg0-of (需要-04 :arg1 安慰安慰-01) :mod 小-01) :arg0 (and :op (星球 :quant 1) :op (行星 :quant 1) :op (行星 :poss 我) :op 地球)),ArrayBuffer(Span(21,22,List(0),有,有-01,false), Span(25,26,List(1),王子,王子,false), Span(26,27,List(2),需要,需要-04,false), Span(24,25,List(3),小,小-01,false), Span(3,4,List(4),星球,星球,false), Span(9,10,List(5),行星,行星,false), Span(15,16,List(6),行星,行星,false), Span(13,14,List(7),我,我,false), Span(19,20,List(8),地球,地球,false)),Map(2 -> 需要-04, 5 -> 行星, 8 -> 地球, 7 -> 我, 1 -> 王子, 4 -> 星球, 6 -> 行星, 0 -> 有-01, 3 -> 小-01),Map(x10 -> 王子, x5 -> 行星, x8 -> 我, x12 -> 需要-04, x7 -> 行星, x3 -> 星球, x11 -> 小-01, x9 -> 地球, x0 -> 有-01))),[Ljava.lang.String;@3012646b,Annotation([Ljava.lang.String;@4a883b15,[Ljava.lang.String;@25641d39,[Ljava.lang.String;@7b36aa0c),Annotation([Ljava.lang.String;@5824a83d,[Ljava.lang.String;@537f60bf,[Ledu.cmu.lti.nlp.amr.Dependency;@5677323c),Annotation([Ljava.lang.String;@18df8434,[Ljava.lang.String;@65c7a252,[Ljava.lang.String;@4d154ccd),Annotation([Ljava.lang.String;@229c6181,[Ljava.lang.String;@4686afc2,[Ledu.cmu.lti.nlp.amr.Entity;@1e0b4072))
AMR:
(x0 / 有-01, time, x7 / 行星)
(x0 / 有-01, time, x9 / 地球)
(x10 / 王子, mod, x11 / 小-01)
(x12 / 需要-04, time, x0 / 有-01)
(x12 / 需要-04, time, x10 / 王子)
(x5 / 行星, mod, x3 / 星球)
(x7 / 行星, poss, x5 / 行星)
(x7 / 行星, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.3
Decoded in 33,728 microseconds
Sentence: 我 把 他 抱在 怀里 ， 摇 着 他 。

Oracle Span 1:  他 => 他
Oracle Span 2:  怀里 => 怀里
Oracle Span 3:  我 => 我
Oracle Span 4:  摇 => 摇-01
Spans:
Span 2-3:  他 => 他
Span 4-5:  怀里 => 怀里
Span 0-1:  我 => 我
Span 6-7:  摇 => 摇-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  怀里 => 怀里
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  摇 => 摇-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	抱在	_	VV	VV	_	0	root	_	_
5	怀里	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	摇	_	VV	VV	_	4	dep	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	他	_	PN	PN	_	7	dobj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((and :op (抱-01 :arg0 我 :arg1 他 :location 怀里) :op (摇-01 :arg1 x14 :arg0 x12)),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),他,他,false), Span(4,5,List(2),怀里,怀里,false), Span(6,7,List(3),摇,摇-01,false)),Map(2 -> 怀里, 1 -> 他, 0 -> 我, 3 -> 摇-01),Map(x16 -> 摇-01, x12 -> 我, x15 -> 怀里, x14 -> 他))),[Ljava.lang.String;@2794eab6,Annotation([Ljava.lang.String;@6340e5f0,[Ljava.lang.String;@45099dd3,[Ljava.lang.String;@13e344d),Annotation([Ljava.lang.String;@1ffaf86,[Ljava.lang.String;@6574a52c,[Ledu.cmu.lti.nlp.amr.Dependency;@6c1a5b54),Annotation([Ljava.lang.String;@1c7696c6,[Ljava.lang.String;@60099951,[Ljava.lang.String;@20140db9),Annotation([Ljava.lang.String;@1e6a3214,[Ljava.lang.String;@368247b9,[Ledu.cmu.lti.nlp.amr.Entity;@1a6d8329))
AMR:
(x12 / 我, mod, x15 / 怀里)
(x14 / 他, ARG3, x15 / 怀里)
(x16 / 摇-01, op, x14 / 他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 13,823 microseconds
Sentence: 对 他 说 ： “ 你 爱 的 那 朵 花 没 有 危险 …

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  危险 => 危险-01
Oracle Span 4:  有 => 有-05
Oracle Span 5:  爱 => 爱-01
Oracle Span 6:  花 => 花
Oracle Span 7:  说 => 说-01
Oracle Span 8:  那 => 那
Spans:
Span 1-2:  他 => 他
Span 5-6:  你 => 你
Span 13-14:  危险 => 危险-01
Span 12-13:  有 => 有-05
Span 6-7:  爱 => 爱-01
Span 10-11:  花 => 花
Span 2-3:  说 => 说-01
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 5-6:  你 => 你
Oracle Span 13-14:  危险 => 危险-01
Oracle Span 12-13:  有 => 有-05
Oracle Span 6-7:  爱 => 爱-01
Oracle Span 10-11:  花 => 花
Oracle Span 2-3:  说 => 说-01
Oracle Span 8-9:  那 => 那

Dependencies:
1	对	_	P	P	_	3	prep	_	_
2	他	_	PN	PN	_	1	pobj	_	_
3	说	_	VV	VV	_	11	rcmod	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	你	_	PN	PN	_	7	nsubj	_	_
7	爱	_	VV	VV	_	3	ccomp	_	_
8	的	_	DEC	DEC	_	3	cpm	_	_
9	那	_	DT	DT	_	11	det	_	_
10	朵	_	M	M	_	9	clf	_	_
11	花	_	NN	NN	_	13	nsubj	_	_
12	没	_	AD	AD	_	13	neg	_	_
13	有	_	VE	VE	_	0	root	_	_
14	危险	_	NN	NN	_	15	nn	_	_
15	…	_	NN	NN	_	13	dobj	_	_

Oracle:
(x0 / 说-01, arg1, x3 / 爱-01)
(x0 / 说-01, arg3, x2 / 他)
(x3 / 爱-01, arg0, x4 / 你)
(x3 / 爱-01, arg1, x5 / 花)
(x5 / 花, mod, x6 / 那)
(x7 / 有-05, arg0, x5 / 花)
(x7 / 有-05, arg1, x9 / 危险-01)

Input(Some(Graph((说-01 :arg1 (爱-01 :arg1 (花 :arg0-of (有-05 :arg1 危险-01 :polarity -) :mod 那) :arg0 你) :arg3 他),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(6,7,List(1),爱,爱-01,false), Span(10,11,List(2),花,花,false), Span(12,13,List(3),有,有-05,false), Span(13,14,List(4),危险,危险-01,false), Span(8,9,List(5),那,那,false), Span(5,6,List(6),你,你,false), Span(1,2,List(7),他,他,false)),Map(2 -> 花, 5 -> 那, 7 -> 他, 1 -> 爱-01, 4 -> 危险-01, 6 -> 你, 0 -> 说-01, 3 -> 有-05),Map(x2 -> 他, x5 -> 花, x7 -> 有-05, x4 -> 你, x3 -> 爱-01, x6 -> 那, x9 -> 危险-01, x0 -> 说-01))),[Ljava.lang.String;@1a942c18,Annotation([Ljava.lang.String;@55a147cc,[Ljava.lang.String;@71ba6d4e,[Ljava.lang.String;@738dc9b),Annotation([Ljava.lang.String;@3c77d488,[Ljava.lang.String;@63376bed,[Ledu.cmu.lti.nlp.amr.Dependency;@4145bad8),Annotation([Ljava.lang.String;@d86a6f,[Ljava.lang.String;@2892d68,[Ljava.lang.String;@5ab956d7),Annotation([Ljava.lang.String;@3646a422,[Ljava.lang.String;@750e2b97,[Ledu.cmu.lti.nlp.amr.Entity;@3e27aa33))
AMR:
(x0 / 说-01, prep-along-with, x2 / 他)
(x0 / 说-01, source, x3 / 爱-01)
(x3 / 爱-01, manner, x4 / 你)
(x3 / 爱-01, snt5, x6 / 那)
(x5 / 花, mod, x6 / 那)
(x7 / 有-05, beneficiary, x5 / 花)
(x7 / 有-05, snt5, x9 / 危险-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 26,088 microseconds
Sentence: 我 给 你 的 小羊 画 一 个 罩子 …

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  画 => 画-01
Oracle Span 4:  罩子 => 罩子
Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 5-6:  画 => 画-01
Span 8-9:  罩子 => 罩子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  画 => 画-01
Oracle Span 8-9:  罩子 => 罩子

Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	给	_	P	P	_	6	prep	_	_
3	你	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	小羊	_	NN	NN	_	2	pobj	_	_
6	画	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	6	range	_	_
9	罩子	_	PU	PU	_	6	punct	_	_
10	…	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 画-01, arg0, x2 / 我)
(x0 / 画-01, arg1, x3 / 罩子)

Input(Some(Graph((画-01 :beneficiary (羊 :mod 小-01 :poss 你) :arg1 (罩子 :quant 1) :arg0 我),ArrayBuffer(Span(5,6,List(0),画,画-01,false), Span(2,3,List(1),你,你,false), Span(8,9,List(2),罩子,罩子,false), Span(0,1,List(3),我,我,false)),Map(2 -> 罩子, 1 -> 你, 0 -> 画-01, 3 -> 我),Map(x2 -> 我, x7 -> 你, x3 -> 罩子, x0 -> 画-01))),[Ljava.lang.String;@2e385cce,Annotation([Ljava.lang.String;@2ddc9a9f,[Ljava.lang.String;@298a5e20,[Ljava.lang.String;@2a7f1f10),Annotation([Ljava.lang.String;@46cdf8bd,[Ljava.lang.String;@f0c8a99,[Ledu.cmu.lti.nlp.amr.Dependency;@740cae06),Annotation([Ljava.lang.String;@26d9b808,[Ljava.lang.String;@f78a47e,[Ljava.lang.String;@644baf4a),Annotation([Ljava.lang.String;@7526515b,[Ljava.lang.String;@1ed4ae0f,[Ledu.cmu.lti.nlp.amr.Entity;@54c5a2ff))
AMR:
(x0 / 画-01, beneficiary, x2 / 我)
(x0 / 画-01, domain, x7 / 你)
(x0 / 画-01, snt1, x3 / 罩子)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,270 microseconds
Sentence: 我 给 你 的 花 画 一 副 盔甲 …

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  画 => 画-01
Oracle Span 4:  盔甲 => 盔甲
Oracle Span 5:  花 => 花
Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 5-6:  画 => 画-01
Span 8-9:  盔甲 => 盔甲
Span 4-5:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  画 => 画-01
Oracle Span 8-9:  盔甲 => 盔甲
Oracle Span 4-5:  花 => 花

Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	给	_	P	P	_	6	prep	_	_
3	你	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	花	_	NN	NN	_	2	pobj	_	_
6	画	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	副	_	NN	NN	_	6	dobj	_	_
9	盔甲	_	PU	PU	_	6	punct	_	_
10	…	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 画-01, arg0, x2 / 我)
(x0 / 画-01, arg1, x3 / 盔甲)
(x0 / 画-01, beneficiary, x5 / 花)
(x5 / 花, poss, x6 / 你)

Input(Some(Graph((画-01 :beneficiary (花 :poss 你) :arg1 (盔甲 :quant 1) :arg0 我),ArrayBuffer(Span(5,6,List(0),画,画-01,false), Span(4,5,List(1),花,花,false), Span(2,3,List(2),你,你,false), Span(8,9,List(3),盔甲,盔甲,false), Span(0,1,List(4),我,我,false)),Map(2 -> 你, 1 -> 花, 4 -> 我, 0 -> 画-01, 3 -> 盔甲),Map(x2 -> 我, x5 -> 花, x3 -> 盔甲, x6 -> 你, x0 -> 画-01))),[Ljava.lang.String;@6d4d66d2,Annotation([Ljava.lang.String;@2a265ea9,[Ljava.lang.String;@11392934,[Ljava.lang.String;@6892b3b6),Annotation([Ljava.lang.String;@6e6f2380,[Ljava.lang.String;@76a4ebf2,[Ledu.cmu.lti.nlp.amr.Dependency;@2e8c1c9b),Annotation([Ljava.lang.String;@53fe15ff,[Ljava.lang.String;@449a4f23,[Ljava.lang.String;@1530c739),Annotation([Ljava.lang.String;@5b1669c0,[Ljava.lang.String;@78e4deb0,[Ledu.cmu.lti.nlp.amr.Entity;@6e9175d8))
AMR:
(x0 / 画-01, beneficiary, x5 / 花)
(x0 / 画-01, location, x3 / 盔甲)
(x5 / 花, poss, x2 / 我)
(x5 / 花, poss, x6 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,128 microseconds
Sentence: 我 … ”

Oracle Span 1:  我 => 我
Spans:
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	…	_	PU	PU	_	3	dep	_	_
3	”	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 我),ArrayBuffer(Span(0,1,List(0),我,我,false)),Map(0 -> 我),Map(x2 -> 我))),[Ljava.lang.String;@7d0b7e3c,Annotation([Ljava.lang.String;@15bb5034,[Ljava.lang.String;@4b741d6d,[Ljava.lang.String;@2eae8e6e),Annotation([Ljava.lang.String;@8f2ef19,[Ljava.lang.String;@470734c3,[Ledu.cmu.lti.nlp.amr.Dependency;@2cf3d63b),Annotation([Ljava.lang.String;@7674f035,[Ljava.lang.String;@69e153c5,[Ljava.lang.String;@173ed316),Annotation([Ljava.lang.String;@25ce9dc4,[Ljava.lang.String;@74ea2410,[Ledu.cmu.lti.nlp.amr.Entity;@17f62e33))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,205 microseconds
Sentence: 我 也 不 太 知道 该 说 些 什么 。

Oracle Span 1:  也 => 也
Oracle Span 2:  些 => 些
Oracle Span 3:  我 => 我
Oracle Span 4:  知道 => 知道-01
Oracle Span 5:  该 => 该-01
Oracle Span 6:  说 => 说-01
Spans:
Span 1-2:  也 => 也
Span 7-8:  些 => 些
Span 0-1:  我 => 我
Span 4-5:  知道 => 知道-01
Span 5-6:  该 => 该-01
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 7-8:  些 => 些
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  知道 => 知道-01
Oracle Span 5-6:  该 => 该-01
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	该	_	VV	VV	_	7	mmod	_	_
7	说	_	VV	VV	_	5	ccomp	_	_
8	些	_	M	M	_	9	dep	_	_
9	什么	_	PN	PN	_	7	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x4 / 我)
(x0 / 知道-01, arg1, x5 / 该-01)
(x0 / 知道-01, manner, x3 / 也)
(x5 / 该-01, arg0, x6 / 说-01)

Input(Some(Graph((知道-01 :arg1 (该-01 :arg0 (说-01 :arg1 (amr-unknown :quant 些) :arg0 x4)) :arg0 我 :manner 也 :polarity -),ArrayBuffer(Span(4,5,List(0),知道,知道-01,false), Span(5,6,List(1),该,该-01,false), Span(6,7,List(2),说,说-01,false), Span(7,8,List(3),些,些,false), Span(0,1,List(4),我,我,false), Span(1,2,List(5),也,也,false)),Map(2 -> 说-01, 5 -> 也, 1 -> 该-01, 4 -> 我, 0 -> 知道-01, 3 -> 些),Map(x10 -> 些, x5 -> 该-01, x4 -> 我, x3 -> 也, x6 -> 说-01, x0 -> 知道-01))),[Ljava.lang.String;@76b1e9b8,Annotation([Ljava.lang.String;@27406a17,[Ljava.lang.String;@2af004b,[Ljava.lang.String;@248e319b),Annotation([Ljava.lang.String;@5d0bf09b,[Ljava.lang.String;@793f29ff,[Ledu.cmu.lti.nlp.amr.Dependency;@3e8c3cb),Annotation([Ljava.lang.String;@563f38c4,[Ljava.lang.String;@543295b0,[Ljava.lang.String;@54422e18),Annotation([Ljava.lang.String;@117159c0,[Ljava.lang.String;@3e27ba32,[Ledu.cmu.lti.nlp.amr.Entity;@7ef82753))
AMR:
(x0 / 知道-01, snt11, x5 / 该-01)
(x5 / 该-01, domain, x4 / 我)
(x5 / 该-01, manner, x3 / 也)
(x6 / 说-01, decade, x5 / 该-01)
(x6 / 说-01, snt11, x10 / 些)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 14,377 microseconds
Sentence: 我 觉得 自己 太 笨拙 。

Oracle Span 1:  太 => 太
Oracle Span 2:  我 => 我
Oracle Span 3:  笨拙 => 笨拙-01
Oracle Span 4:  觉得 => 觉得-01
Spans:
Span 3-4:  太 => 太
Span 0-1:  我 => 我
Span 4-5:  笨拙 => 笨拙-01
Span 1-2:  觉得 => 觉得-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  太 => 太
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  笨拙 => 笨拙-01
Oracle Span 1-2:  觉得 => 觉得-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	自己	_	PN	PN	_	5	nsubj	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	笨拙	_	VA	VA	_	2	ccomp	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 觉得-01, arg0, x2 / 我)
(x0 / 觉得-01, arg1, x3 / 笨拙-01)
(x3 / 笨拙-01, degree, x4 / 太)

Input(Some(Graph((觉得-01 :arg1 (笨拙-01 :arg0 x2 :degree 太) :arg0 我),ArrayBuffer(Span(1,2,List(0),觉得,觉得-01,false), Span(4,5,List(1),笨拙,笨拙-01,false), Span(3,4,List(2),太,太,false), Span(0,1,List(3),我,我,false)),Map(2 -> 太, 1 -> 笨拙-01, 0 -> 觉得-01, 3 -> 我),Map(x2 -> 我, x4 -> 太, x3 -> 笨拙-01, x0 -> 觉得-01))),[Ljava.lang.String;@3b0fe47a,Annotation([Ljava.lang.String;@202b0582,[Ljava.lang.String;@235ecd9f,[Ljava.lang.String;@1ca3b418),Annotation([Ljava.lang.String;@58cbafc2,[Ljava.lang.String;@2034b64c,[Ledu.cmu.lti.nlp.amr.Dependency;@75d3a5e0),Annotation([Ljava.lang.String;@74d1dc36,[Ljava.lang.String;@7161d8d1,[Ljava.lang.String;@74e28667),Annotation([Ljava.lang.String;@1cf6d1be,[Ljava.lang.String;@663c9e7a,[Ledu.cmu.lti.nlp.amr.Entity;@19e4653c))
AMR:
(x0 / 觉得-01, ARG5, x3 / 笨拙-01)
(x0 / 觉得-01, value, x2 / 我)
(x3 / 笨拙-01, degree, x4 / 太)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,038 microseconds
Sentence: 我 不 知道 怎样 才 能 达到 他 的 境界 ， 怎样 才 能 再 进入 他 的 境界 … 唉 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  再 => 再-01
Oracle Span 3:  唉 => 唉
Oracle Span 4:  境界 => 境界
Oracle Span 5:  境界 => 境界
Oracle Span 6:  我 => 我
Oracle Span 7:  才 => 才
Oracle Span 8:  才 => 才
Oracle Span 9:  知道 => 知道-01
Oracle Span 10:  能 => 能-01
Oracle Span 11:  能 => 能-01
Oracle Span 12:  达到 => 达到-01
Oracle Span 13:  进入 => 进入-01
Spans:
Span 7-8:  他 => 他
Span 14-15:  再 => 再-01
Span 20-21:  唉 => 唉
Span 9-10:  境界 => 境界
Span 18-19:  境界 => 境界
Span 0-1:  我 => 我
Span 4-5:  才 => 才
Span 12-13:  才 => 才
Span 2-3:  知道 => 知道-01
Span 5-6:  能 => 能-01
Span 13-14:  能 => 能-01
Span 6-7:  达到 => 达到-01
Span 15-16:  进入 => 进入-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 14-15:  再 => 再-01
Oracle Span 20-21:  唉 => 唉
Oracle Span 9-10:  境界 => 境界
Oracle Span 18-19:  境界 => 境界
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  才 => 才
Oracle Span 12-13:  才 => 才
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 5-6:  能 => 能-01
Oracle Span 13-14:  能 => 能-01
Oracle Span 6-7:  达到 => 达到-01
Oracle Span 15-16:  进入 => 进入-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	怎样	_	AD	AD	_	7	advmod	_	_
5	才	_	AD	AD	_	7	advmod	_	_
6	能	_	VV	VV	_	7	mmod	_	_
7	达到	_	VV	VV	_	3	ccomp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	境界	_	NN	NN	_	7	dobj	_	_
11	,	_	PU	PU	_	7	punct	_	_
12	怎样	_	AD	AD	_	16	advmod	_	_
13	才	_	AD	AD	_	16	advmod	_	_
14	能	_	VV	VV	_	16	mmod	_	_
15	再	_	AD	AD	_	16	advmod	_	_
16	进入	_	VV	VV	_	7	dep	_	_
17	他	_	PN	PN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	境界	_	NN	NN	_	16	dobj	_	_
20	…	_	PU	PU	_	21	punct	_	_
21	唉	_	NR	NR	_	19	prnmod	_	_
22	,	_	PU	PU	_	16	punct	_	_
23	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x26 / 知道-01, arg0, x28 / 我)
(x30 / 能-01, arg0, x32 / 达到-01)
(x30 / 能-01, manner, x31 / 才)
(x32 / 达到-01, arg1, x34 / 境界)
(x34 / 境界, poss, x35 / 他)
(x38 / 能-01, arg0, x40 / 进入-01)
(x38 / 能-01, manner, x39 / 才)
(x40 / 进入-01, arg1, x43 / 境界)
(x40 / 进入-01, manner, x41 / 再-01)

Input(Some(Graph((multi-sentence :snt1 (知道-01 :arg1 (and :op (能-01 :arg0 (达到-01 :manner amr-unknown :arg1 (境界 :poss 他) :arg0 x28) :manner 才) :op (能-01 :arg0 (进入-01 :manner amr-unknown :arg1 (境界 :poss x35) :arg0 x28 :manner 再-01) :manner 才)) :arg0 我 :polarity -) :snt2 (唉 :mode expressive)),ArrayBuffer(Span(2,3,List(0),知道,知道-01,false), Span(5,6,List(1),能,能-01,false), Span(6,7,List(2),达到,达到-01,false), Span(9,10,List(3),境界,境界,false), Span(7,8,List(4),他,他,false), Span(4,5,List(5),才,才,false), Span(13,14,List(6),能,能-01,false), Span(15,16,List(7),进入,进入-01,false), Span(18,19,List(8),境界,境界,false), Span(14,15,List(9),再,再-01,false), Span(12,13,List(10),才,才,false), Span(0,1,List(11),我,我,false), Span(20,21,List(12),唉,唉,false)),Map(2 -> 达到-01, 5 -> 才, 12 -> 唉, 8 -> 境界, 7 -> 进入-01, 1 -> 能-01, 4 -> 他, 11 -> 我, 6 -> 能-01, 9 -> 再-01, 0 -> 知道-01, 10 -> 才, 3 -> 境界),Map(x46 -> 唉, x28 -> 我, x34 -> 境界, x40 -> 进入-01, x43 -> 境界, x31 -> 才, x39 -> 才, x30 -> 能-01, x41 -> 再-01, x38 -> 能-01, x32 -> 达到-01, x26 -> 知道-01, x35 -> 他))),[Ljava.lang.String;@795509d9,Annotation([Ljava.lang.String;@53045c6c,[Ljava.lang.String;@5149d738,[Ljava.lang.String;@6bbe85a8),Annotation([Ljava.lang.String;@3a7442c7,[Ljava.lang.String;@4be29ed9,[Ledu.cmu.lti.nlp.amr.Dependency;@548d708a),Annotation([Ljava.lang.String;@4b013c76,[Ljava.lang.String;@53fb3dab,[Ljava.lang.String;@cb0755b),Annotation([Ljava.lang.String;@33065d67,[Ljava.lang.String;@712625fd,[Ledu.cmu.lti.nlp.amr.Entity;@7bba5817))
AMR:
(x26 / 知道-01, decade, x28 / 我)
(x26 / 知道-01, manner, x31 / 才)
(x30 / 能-01, manner, x31 / 才)
(x30 / 能-01, snt11, x32 / 达到-01)
(x34 / 境界, poss, x32 / 达到-01)
(x34 / 境界, poss, x35 / 他)
(x38 / 能-01, manner, x34 / 境界)
(x38 / 能-01, manner, x39 / 才)
(x38 / 能-01, manner, x41 / 再-01)
(x40 / 进入-01, manner, x41 / 再-01)
(x40 / 进入-01, snt1, x43 / 境界)
(x46 / 唉, polite, x43 / 境界)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.1.1
WARNING: makeIds can't find span Id: 0.0.2.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.2.1.1.2
WARNING: makeIds can't find span Id: 0.0.2.1.1.0
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
Decoded in 54,918 microseconds
Sentence: 泪水 的 世界 是 多么 神秘 啊 ！

Oracle Span 1:  世界 => 世界
Oracle Span 2:  多么 => 多么
Oracle Span 3:  泪水 => 泪水
Oracle Span 4:  神秘 => 神秘-01
Spans:
Span 2-3:  世界 => 世界
Span 4-5:  多么 => 多么
Span 0-1:  泪水 => 泪水
Span 5-6:  神秘 => 神秘-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  世界 => 世界
Oracle Span 4-5:  多么 => 多么
Oracle Span 0-1:  泪水 => 泪水
Oracle Span 5-6:  神秘 => 神秘-01

Dependencies:
1	泪水	_	NR	NR	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	世界	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	多么	_	NN	NN	_	6	nn	_	_
6	神秘	_	NN	NN	_	4	attr	_	_
7	啊	_	SP	SP	_	4	dep	_	_
8	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 神秘-01, arg0, x3 / 世界)
(x0 / 神秘-01, degree, x2 / 多么)
(x3 / 世界, mod, x4 / 泪水)

Input(Some(Graph((神秘-01 :mode expressive :arg0 (世界 :mod 泪水) :degree 多么),ArrayBuffer(Span(5,6,List(0),神秘,神秘-01,false), Span(2,3,List(1),世界,世界,false), Span(0,1,List(2),泪水,泪水,false), Span(4,5,List(3),多么,多么,false)),Map(2 -> 泪水, 1 -> 世界, 0 -> 神秘-01, 3 -> 多么),Map(x2 -> 多么, x4 -> 泪水, x3 -> 世界, x0 -> 神秘-01))),[Ljava.lang.String;@742ff096,Annotation([Ljava.lang.String;@75437611,[Ljava.lang.String;@350aac89,[Ljava.lang.String;@1c5920df),Annotation([Ljava.lang.String;@17f9d882,[Ljava.lang.String;@79e4c792,[Ledu.cmu.lti.nlp.amr.Dependency;@196a42c3),Annotation([Ljava.lang.String;@4c60d6e9,[Ljava.lang.String;@15043a2f,[Ljava.lang.String;@4a83a74a),Annotation([Ljava.lang.String;@1349883,[Ljava.lang.String;@4b29d1d2,[Ledu.cmu.lti.nlp.amr.Entity;@7f485fda))
AMR:
(x0 / 神秘-01, degree, x2 / 多么)
(x0 / 神秘-01, degree, x4 / 泪水)
(x3 / 世界, mod, x4 / 泪水)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,780 microseconds
Sentence: VIII 。

Oracle Span 1:  VIII => VIII
Spans:
Span 0-1:  VIII => VIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  VIII => VIII

Dependencies:
1	VIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(VIII,ArrayBuffer(Span(0,1,List(0),VIII,VIII,false)),Map(0 -> VIII),Map(x0 -> VIII))),[Ljava.lang.String;@28261e8e,Annotation([Ljava.lang.String;@d737b89,[Ljava.lang.String;@8519cb4,[Ljava.lang.String;@35dab4eb),Annotation([Ljava.lang.String;@2d901eb0,[Ljava.lang.String;@3ba987b8,[Ledu.cmu.lti.nlp.amr.Dependency;@3f191845),Annotation([Ljava.lang.String;@5f049ea1,[Ljava.lang.String;@72cc7e6f,[Ljava.lang.String;@5afa3c9),Annotation([Ljava.lang.String;@72035809,[Ljava.lang.String;@909217e,[Ledu.cmu.lti.nlp.amr.Entity;@18271936))
AMR:


Decoded in 3,211 microseconds
Sentence: 很 快 我 就 进一步 了解 了 这 朵 花儿 。

Oracle Span 1:  了解 => 了解-02
Oracle Span 2:  就 => 就
Oracle Span 3:  很 => 很
Oracle Span 4:  快 => 快
Oracle Span 5:  我 => 我
Oracle Span 6:  花儿 => 花儿
Oracle Span 7:  这 => 这
Oracle Span 8:  进一步 => 进一步
Spans:
Span 5-6:  了解 => 了解-02
Span 3-4:  就 => 就
Span 0-1:  很 => 很
Span 1-2:  快 => 快
Span 2-3:  我 => 我
Span 9-10:  花儿 => 花儿
Span 7-8:  这 => 这
Span 4-5:  进一步 => 进一步

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  了解 => 了解-02
Oracle Span 3-4:  就 => 就
Oracle Span 0-1:  很 => 很
Oracle Span 1-2:  快 => 快
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  花儿 => 花儿
Oracle Span 7-8:  这 => 这
Oracle Span 4-5:  进一步 => 进一步

Dependencies:
1	很	_	AD	AD	_	2	advmod	_	_
2	快	_	VA	VA	_	0	root	_	_
3	我	_	PN	PN	_	6	dep	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	进一步	_	AD	AD	_	6	advmod	_	_
6	了解	_	VV	VV	_	2	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	这	_	DT	DT	_	10	det	_	_
9	朵	_	M	M	_	8	clf	_	_
10	花儿	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 了解-02, arg0, x2 / 我)
(x0 / 了解-02, arg1, x3 / 花儿)
(x0 / 了解-02, manner, x5 / 进一步)
(x0 / 了解-02, manner, x6 / 就)
(x0 / 了解-02, manner, x7 / 快)
(x3 / 花儿, mod, x4 / 这)
(x7 / 快, degree, x8 / 很)

Input(Some(Graph((了解-02 :manner (快 :degree 很) :manner 就 :manner 进一步 :arg1 (花儿 :mod 这) :arg0 我),ArrayBuffer(Span(5,6,List(0),了解,了解-02,false), Span(1,2,List(1),快,快,false), Span(0,1,List(2),很,很,false), Span(3,4,List(3),就,就,false), Span(4,5,List(4),进一步,进一步,false), Span(9,10,List(5),花儿,花儿,false), Span(7,8,List(6),这,这,false), Span(2,3,List(7),我,我,false)),Map(2 -> 很, 5 -> 花儿, 7 -> 我, 1 -> 快, 4 -> 进一步, 6 -> 这, 0 -> 了解-02, 3 -> 就),Map(x2 -> 我, x5 -> 进一步, x8 -> 很, x7 -> 快, x4 -> 这, x3 -> 花儿, x6 -> 就, x0 -> 了解-02))),[Ljava.lang.String;@606e4010,Annotation([Ljava.lang.String;@8458f04,[Ljava.lang.String;@48075da3,[Ljava.lang.String;@68c9133c),Annotation([Ljava.lang.String;@7a35b0f5,[Ljava.lang.String;@5e2c3d18,[Ledu.cmu.lti.nlp.amr.Dependency;@2cb4893b),Annotation([Ljava.lang.String;@cc43f62,[Ljava.lang.String;@5b218417,[Ljava.lang.String;@645aa696),Annotation([Ljava.lang.String;@6caf0677,[Ljava.lang.String;@413d1baf,[Ledu.cmu.lti.nlp.amr.Entity;@16eb3ea3))
AMR:
(x0 / 了解-02, manner, x5 / 进一步)
(x0 / 了解-02, manner, x6 / 就)
(x0 / 了解-02, manner, x7 / 快)
(x0 / 了解-02, op, x2 / 我)
(x0 / 了解-02, snt1, x3 / 花儿)
(x3 / 花儿, mod, x4 / 这)
(x7 / 快, degree, x8 / 很)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.0
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 24,250 microseconds
Sentence: 在 小 王子 的 星球 上 ， 过去 一直 都 生长 着 一些 只 有 一 层 花瓣 的 很 简单 的 花 。

Oracle Span 1:  一直 => 一直
Oracle Span 2:  只 => 只
Oracle Span 3:  小 => 小-01
Oracle Span 4:  很 => 很
Oracle Span 5:  星球 => 星球
Oracle Span 6:  有 => 有
Oracle Span 7:  王子 => 王子
Oracle Span 8:  生长 => 生长-01
Oracle Span 9:  简单 => 简单-01
Oracle Span 10:  花 => 花
Oracle Span 11:  花瓣 => 花瓣
Oracle Span 12:  过去 => 过去-01
Oracle Span 13:  都 => 都
Spans:
Span 8-9:  一直 => 一直
Span 13-14:  只 => 只
Span 1-2:  小 => 小-01
Span 19-20:  很 => 很
Span 4-5:  星球 => 星球
Span 14-15:  有 => 有
Span 2-3:  王子 => 王子
Span 10-11:  生长 => 生长-01
Span 20-21:  简单 => 简单-01
Span 22-23:  花 => 花
Span 17-18:  花瓣 => 花瓣
Span 7-8:  过去 => 过去-01
Span 9-10:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一直 => 一直
Oracle Span 13-14:  只 => 只
Oracle Span 1-2:  小 => 小-01
Oracle Span 19-20:  很 => 很
Oracle Span 4-5:  星球 => 星球
Oracle Span 14-15:  有 => 有
Oracle Span 2-3:  王子 => 王子
Oracle Span 10-11:  生长 => 生长-01
Oracle Span 20-21:  简单 => 简单-01
Oracle Span 22-23:  花 => 花
Oracle Span 17-18:  花瓣 => 花瓣
Oracle Span 7-8:  过去 => 过去-01
Oracle Span 9-10:  都 => 都

Dependencies:
1	在	_	P	P	_	12	prep	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	1	plmod	_	_
7	,	_	PU	PU	_	12	punct	_	_
8	过去	_	NT	NT	_	12	tmod	_	_
9	一直	_	AD	AD	_	12	advmod	_	_
10	都	_	AD	AD	_	12	advmod	_	_
11	生长	_	NN	NN	_	12	dobj	_	_
12	着	_	VV	VV	_	0	root	_	_
13	一些	_	CD	CD	_	23	nummod	_	_
14	只	_	AD	AD	_	15	advmod	_	_
15	有	_	VE	VE	_	23	rcmod	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	层	_	M	M	_	18	clf	_	_
18	花瓣	_	NN	NN	_	15	dobj	_	_
19	的	_	DEC	DEC	_	15	cpm	_	_
20	很	_	AD	AD	_	21	advmod	_	_
21	简单	_	VA	VA	_	23	rcmod	_	_
22	的	_	DEC	DEC	_	21	cpm	_	_
23	花	_	NN	NN	_	12	dobj	_	_
24	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 生长-01, arg0, x5 / 花)
(x0 / 生长-01, location, x13 / 星球)
(x0 / 生长-01, manner, x2 / 都)
(x0 / 生长-01, manner, x3 / 一直)
(x0 / 生长-01, time, x4 / 过去-01)
(x13 / 星球, poss, x14 / 王子)
(x14 / 王子, mod, x15 / 小-01)
(x5 / 花, mod, x6 / 简单-01)
(x6 / 简单-01, degree, x7 / 很)
(x8 / 有, arg0, x5 / 花)
(x8 / 有, arg1, x10 / 花瓣)
(x8 / 有, manner, x9 / 只)

Input(Some(Graph((生长-01 :location (星球 :poss (王子 :mod 小-01)) :arg0 (花 :quant 1 :arg0-of (有 :arg1 (花瓣 :quant 1) :manner 只) :mod (简单-01 :degree 很)) :time 过去-01 :manner 一直 :manner 都),ArrayBuffer(Span(10,11,List(0),生长,生长-01,false), Span(4,5,List(1),星球,星球,false), Span(2,3,List(2),王子,王子,false), Span(1,2,List(3),小,小-01,false), Span(22,23,List(4),花,花,false), Span(14,15,List(5),有,有,false), Span(17,18,List(6),花瓣,花瓣,false), Span(13,14,List(7),只,只,false), Span(20,21,List(8),简单,简单-01,false), Span(19,20,List(9),很,很,false), Span(7,8,List(10),过去,过去-01,false), Span(8,9,List(11),一直,一直,false), Span(9,10,List(12),都,都,false)),Map(2 -> 王子, 5 -> 有, 12 -> 都, 8 -> 简单-01, 7 -> 只, 1 -> 星球, 4 -> 花, 11 -> 一直, 6 -> 花瓣, 9 -> 很, 0 -> 生长-01, 10 -> 过去-01, 3 -> 小-01),Map(x10 -> 花瓣, x2 -> 都, x5 -> 花, x13 -> 星球, x8 -> 有, x15 -> 小-01, x7 -> 很, x4 -> 过去-01, x3 -> 一直, x6 -> 简单-01, x14 -> 王子, x9 -> 只, x0 -> 生长-01))),[Ljava.lang.String;@273444fe,Annotation([Ljava.lang.String;@33bc72d1,[Ljava.lang.String;@1a75e76a,[Ljava.lang.String;@5524cca1),Annotation([Ljava.lang.String;@5032714f,[Ljava.lang.String;@48bb62,[Ledu.cmu.lti.nlp.amr.Dependency;@353352b6),Annotation([Ljava.lang.String;@4681c175,[Ljava.lang.String;@57a78e3,[Ljava.lang.String;@402c4085),Annotation([Ljava.lang.String;@6fa51cd4,[Ljava.lang.String;@2767e23c,[Ledu.cmu.lti.nlp.amr.Entity;@710c2b53))
AMR:
(x0 / 生长-01, location, x13 / 星球)
(x0 / 生长-01, manner, x2 / 都)
(x0 / 生长-01, manner, x3 / 一直)
(x0 / 生长-01, time, x4 / 过去-01)
(x0 / 生长-01, unit, x5 / 花)
(x13 / 星球, poss, x14 / 王子)
(x14 / 王子, mod, x15 / 小-01)
(x5 / 花, mod, x6 / 简单-01)
(x6 / 简单-01, degree, x7 / 很)
(x8 / 有, manner, x9 / 只)
(x8 / 有, mod, x5 / 花)
(x8 / 有, part, x10 / 花瓣)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.0
WARNING: makeIds can't find span Id: 0.4.0.0
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.1
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 58,075 microseconds
Sentence: 这些 花 非常 小 ， 一点 也 不 占 地方 ， 从来 也 不 会 去 打搅 任何 人 。

Oracle Span 1:  一点 => 一点
Oracle Span 2:  人 => 人
Oracle Span 3:  从来 => 从来
Oracle Span 4:  任何 => 任何
Oracle Span 5:  会 => 会-02
Oracle Span 6:  占 => 占-02
Oracle Span 7:  地方 => 地方
Oracle Span 8:  小 => 小-01
Oracle Span 9:  打搅 => 打搅-01
Oracle Span 10:  花 => 花
Oracle Span 11:  这些 => 这些
Oracle Span 12:  非常 => 非常-01
Spans:
Span 5-6:  一点 => 一点
Span 18-19:  人 => 人
Span 11-12:  从来 => 从来
Span 17-18:  任何 => 任何
Span 14-15:  会 => 会-02
Span 8-9:  占 => 占-02
Span 9-10:  地方 => 地方
Span 3-4:  小 => 小-01
Span 16-17:  打搅 => 打搅-01
Span 1-2:  花 => 花
Span 0-1:  这些 => 这些
Span 2-3:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  一点 => 一点
Oracle Span 18-19:  人 => 人
Oracle Span 11-12:  从来 => 从来
Oracle Span 17-18:  任何 => 任何
Oracle Span 14-15:  会 => 会-02
Oracle Span 8-9:  占 => 占-02
Oracle Span 9-10:  地方 => 地方
Oracle Span 3-4:  小 => 小-01
Oracle Span 16-17:  打搅 => 打搅-01
Oracle Span 1-2:  花 => 花
Oracle Span 0-1:  这些 => 这些
Oracle Span 2-3:  非常 => 非常-01

Dependencies:
1	这些	_	DT	DT	_	2	det	_	_
2	花	_	NN	NN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	小	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	一点	_	AD	AD	_	9	advmod	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	占	_	VV	VV	_	4	dep	_	_
10	地方	_	NN	NN	_	9	dobj	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	从来	_	AD	AD	_	17	advmod	_	_
13	也	_	AD	AD	_	17	advmod	_	_
14	不	_	AD	AD	_	17	neg	_	_
15	会	_	VV	VV	_	17	mmod	_	_
16	去	_	MSP	MSP	_	17	prtmod	_	_
17	打搅	_	VV	VV	_	4	dep	_	_
18	任何	_	DT	DT	_	19	det	_	_
19	人	_	NN	NN	_	17	dobj	_	_
20	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x23 / 小-01, arg0, x25 / 花)
(x23 / 小-01, degree, x24 / 非常-01)
(x25 / 花, mod, x26 / 这些)
(x27 / 占-02, arg1, x29 / 地方)
(x27 / 占-02, degree, x30 / 一点)
(x31 / 会-02, arg0, x33 / 打搅-01)
(x33 / 打搅-01, arg1, x35 / 人)
(x33 / 打搅-01, time, x37 / 从来)
(x35 / 人, mod, x36 / 任何)

Input(Some(Graph((and :op (小-01 :arg0 (花 :mod 这些) :degree 非常-01) :op (占-02 :degree 一点 :arg1 地方 :polarity -) :op (会-02 :arg0 (打搅-01 :time 从来 :arg1 (人 :mod 任何) :arg0 x25) :polarity -)),ArrayBuffer(Span(3,4,List(0),小,小-01,false), Span(1,2,List(1),花,花,false), Span(0,1,List(2),这些,这些,false), Span(2,3,List(3),非常,非常-01,false), Span(8,9,List(4),占,占-02,false), Span(5,6,List(5),一点,一点,false), Span(9,10,List(6),地方,地方,false), Span(14,15,List(7),会,会-02,false), Span(16,17,List(8),打搅,打搅-01,false), Span(11,12,List(9),从来,从来,false), Span(18,19,List(10),人,人,false), Span(17,18,List(11),任何,任何,false)),Map(2 -> 这些, 5 -> 一点, 8 -> 打搅-01, 7 -> 会-02, 1 -> 花, 4 -> 占-02, 11 -> 任何, 6 -> 地方, 9 -> 从来, 0 -> 小-01, 10 -> 人, 3 -> 非常-01),Map(x37 -> 从来, x25 -> 花, x31 -> 会-02, x30 -> 一点, x33 -> 打搅-01, x27 -> 占-02, x36 -> 任何, x24 -> 非常-01, x23 -> 小-01, x26 -> 这些, x35 -> 人, x29 -> 地方))),[Ljava.lang.String;@5386659f,Annotation([Ljava.lang.String;@14028087,[Ljava.lang.String;@cecf639,[Ljava.lang.String;@1caa0244),Annotation([Ljava.lang.String;@7ce026d3,[Ljava.lang.String;@7ce69770,[Ledu.cmu.lti.nlp.amr.Dependency;@1750fbeb),Annotation([Ljava.lang.String;@5b247367,[Ljava.lang.String;@268f106e,[Ljava.lang.String;@6e9a5ed8),Annotation([Ljava.lang.String;@7e057f43,[Ljava.lang.String;@6c284af,[Ledu.cmu.lti.nlp.amr.Entity;@5890e879))
AMR:
(x23 / 小-01, degree, x24 / 非常-01)
(x23 / 小-01, op, x25 / 花)
(x25 / 花, manner, x27 / 占-02)
(x25 / 花, mod, x26 / 这些)
(x27 / 占-02, degree, x30 / 一点)
(x27 / 占-02, quant, x29 / 地方)
(x31 / 会-02, prep-through, x33 / 打搅-01)
(x33 / 打搅-01, time, x35 / 人)
(x33 / 打搅-01, time, x37 / 从来)
(x35 / 人, mod, x36 / 任何)
(x37 / 从来, prep-on-behalf, x23 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.1.0
Decoded in 79,797 microseconds
Sentence: 她们 早晨 在 草丛 中 开放 ， 晚上 就 凋谢 了 。

Oracle Span 1:  凋谢 => 凋谢-01
Oracle Span 2:  她们 => 她们
Oracle Span 3:  就 => 就
Oracle Span 4:  开放 => 开放-04
Oracle Span 5:  早晨 => 早晨
Oracle Span 6:  晚上 => 晚上
Oracle Span 7:  草丛 => 草丛
Spans:
Span 9-10:  凋谢 => 凋谢-01
Span 0-1:  她们 => 她们
Span 8-9:  就 => 就
Span 5-6:  开放 => 开放-04
Span 1-2:  早晨 => 早晨
Span 7-8:  晚上 => 晚上
Span 3-4:  草丛 => 草丛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  凋谢 => 凋谢-01
Oracle Span 0-1:  她们 => 她们
Oracle Span 8-9:  就 => 就
Oracle Span 5-6:  开放 => 开放-04
Oracle Span 1-2:  早晨 => 早晨
Oracle Span 7-8:  晚上 => 晚上
Oracle Span 3-4:  草丛 => 草丛

Dependencies:
1	她们	_	PN	PN	_	6	nsubj	_	_
2	早晨	_	NT	NT	_	6	tmod	_	_
3	在	_	P	P	_	6	prep	_	_
4	草丛	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	3	plmod	_	_
6	开放	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	晚上	_	NT	NT	_	10	tmod	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	凋谢	_	VV	VV	_	6	ccomp	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 开放-04, arg0, x13 / 她们)
(x12 / 开放-04, location, x14 / 草丛)
(x12 / 开放-04, time, x15 / 早晨)
(x16 / 凋谢-01, manner, x19 / 就)
(x16 / 凋谢-01, time, x17 / 晚上)

Input(Some(Graph((and :op (开放-04 :time 早晨 :location 草丛 :arg0 她们) :op (凋谢-01 :manner 就 :arg0 x13 :time 晚上)),ArrayBuffer(Span(5,6,List(0),开放,开放-04,false), Span(1,2,List(1),早晨,早晨,false), Span(3,4,List(2),草丛,草丛,false), Span(0,1,List(3),她们,她们,false), Span(9,10,List(4),凋谢,凋谢-01,false), Span(8,9,List(5),就,就,false), Span(7,8,List(6),晚上,晚上,false)),Map(2 -> 草丛, 5 -> 就, 1 -> 早晨, 4 -> 凋谢-01, 6 -> 晚上, 0 -> 开放-04, 3 -> 她们),Map(x16 -> 凋谢-01, x19 -> 就, x13 -> 她们, x12 -> 开放-04, x15 -> 早晨, x14 -> 草丛, x17 -> 晚上))),[Ljava.lang.String;@6440112d,Annotation([Ljava.lang.String;@31ea9581,[Ljava.lang.String;@231f98ef,[Ljava.lang.String;@7c137fd5),Annotation([Ljava.lang.String;@183ec003,[Ljava.lang.String;@7d9d0818,[Ledu.cmu.lti.nlp.amr.Dependency;@221a3fa4),Annotation([Ljava.lang.String;@451001e5,[Ljava.lang.String;@2b40ff9c,[Ljava.lang.String;@3e08ff24),Annotation([Ljava.lang.String;@4d1c005e,[Ljava.lang.String;@8462f31,[Ledu.cmu.lti.nlp.amr.Entity;@24569dba))
AMR:
(x12 / 开放-04, location, x14 / 草丛)
(x12 / 开放-04, op, x13 / 她们)
(x12 / 开放-04, time, x15 / 早晨)
(x16 / 凋谢-01, manner, x19 / 就)
(x16 / 凋谢-01, time, x17 / 晚上)
(x19 / 就, ARG3, x12 / 开放-04)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 32,552 microseconds
Sentence: 不 知 从 哪里 来 了 一 颗 种子 ， 忽然 一天 这 种子 发 了 芽 。 小 王子 特别 仔细 地 监视 着 这 棵 与众不同 的 小苗 ：

Oracle Span 1:  一天 => 一天
Oracle Span 2:  与众不同 => 与众不同-01
Oracle Span 3:  仔细 => 仔细-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  忽然 => 忽然
Oracle Span 6:  来 => 来-01
Oracle Span 7:  特别 => 特别-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  监视 => 监视-01
Oracle Span 10:  知 => 知-01
Oracle Span 11:  种子 => 种子
Oracle Span 12:  这 => 这
Oracle Span 13:  这 => 这
Spans:
Span 11-12:  一天 => 一天
Span 27-28:  与众不同 => 与众不同-01
Span 21-22:  仔细 => 仔细-01
Span 18-19:  小 => 小-01
Span 10-11:  忽然 => 忽然
Span 4-5:  来 => 来-01
Span 20-21:  特别 => 特别-01
Span 19-20:  王子 => 王子
Span 23-24:  监视 => 监视-01
Span 1-2:  知 => 知-01
Span 8-9:  种子 => 种子
Span 12-13:  这 => 这
Span 25-26:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一天 => 一天
Oracle Span 27-28:  与众不同 => 与众不同-01
Oracle Span 21-22:  仔细 => 仔细-01
Oracle Span 18-19:  小 => 小-01
Oracle Span 10-11:  忽然 => 忽然
Oracle Span 4-5:  来 => 来-01
Oracle Span 20-21:  特别 => 特别-01
Oracle Span 19-20:  王子 => 王子
Oracle Span 23-24:  监视 => 监视-01
Oracle Span 1-2:  知 => 知-01
Oracle Span 8-9:  种子 => 种子
Oracle Span 12-13:  这 => 这
Oracle Span 25-26:  这 => 这

Dependencies:
1	不	_	AD	AD	_	2	neg	_	_
2	知	_	VV	VV	_	15	conj	_	_
3	从	_	P	P	_	5	prep	_	_
4	哪里	_	NN	NN	_	3	pobj	_	_
5	来	_	VV	VV	_	2	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	颗	_	M	M	_	9	clf	_	_
9	种子	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	2	punct	_	_
11	忽然	_	VV	VV	_	2	dep	_	_
12	一天	_	CD	CD	_	11	range	_	_
13	这	_	DT	DT	_	14	det	_	_
14	种子	_	NN	NN	_	15	dep	_	_
15	发	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	芽	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	15	punct	_	_
19	小	_	JJ	JJ	_	20	amod	_	_
20	王子	_	NN	NN	_	25	nsubj	_	_
21	特别	_	AD	AD	_	25	advmod	_	_
22	仔细	_	AD	AD	_	25	advmod	_	_
23	地	_	NN	NN	_	24	nn	_	_
24	监视	_	NN	NN	_	25	prep	_	_
25	着	_	VV	VV	_	15	dep	_	_
26	这	_	DT	DT	_	28	det	_	_
27	棵	_	CD	CD	_	26	dep	_	_
28	与众不同	_	NN	NN	_	30	assmod	_	_
29	的	_	DEG	DEG	_	28	assm	_	_
30	小苗	_	NN	NN	_	25	dobj	_	_
31	：	_	PU	PU	_	15	punct	_	_

Oracle:
(x12 / 一天, mod, x13 / 忽然)
(x14 / 监视-01, arg0, x17 / 王子)
(x14 / 监视-01, manner, x15 / 仔细-01)
(x15 / 仔细-01, degree, x16 / 特别-01)
(x3 / 知-01, arg1, x5 / 来-01)
(x5 / 来-01, arg0, x6 / 种子)

Input(Some(Graph((multi-sentence :snt1 (progression :arg1 (知-01 :arg1 (来-01 :arg2 amr-unknown :arg0 (种子 :quant 1)) :polarity -) :arg2 (发芽-01 :arg0 (x6 :mod 这) :time (一天 :mod 忽然))) :snt2 (监视-01 :arg1 (苗 :mod 小-01 :mod 这 :mod 与众不同-01) :arg0 (王子 :mod 小-01) :manner (仔细-01 :degree 特别-01))),ArrayBuffer(Span(1,2,List(0),知,知-01,false), Span(4,5,List(1),来,来-01,false), Span(8,9,List(2),种子,种子,false), Span(12,13,List(3),这,这,false), Span(11,12,List(4),一天,一天,false), Span(10,11,List(5),忽然,忽然,false), Span(23,24,List(6),监视,监视-01,false), Span(18,19,List(7),小,小-01,false), Span(25,26,List(8),这,这,false), Span(27,28,List(9),与众不同,与众不同-01,false), Span(19,20,List(10),王子,王子,false), Span(21,22,List(11),仔细,仔细-01,false), Span(20,21,List(12),特别,特别-01,false)),Map(2 -> 种子, 5 -> 忽然, 12 -> 特别-01, 8 -> 这, 7 -> 小-01, 1 -> 来-01, 4 -> 一天, 11 -> 仔细-01, 6 -> 监视-01, 9 -> 与众不同-01, 0 -> 知-01, 10 -> 王子, 3 -> 这),Map(x22 -> 与众不同-01, x16 -> 特别-01, x5 -> 来-01, x13 -> 忽然, x12 -> 一天, x15 -> 仔细-01, x21 -> 这, x11 -> 这, x3 -> 知-01, x6 -> 种子, x20 -> 小-01, x14 -> 监视-01, x17 -> 王子))),[Ljava.lang.String;@5ddeb7cb,Annotation([Ljava.lang.String;@70ed52de,[Ljava.lang.String;@496bc455,[Ljava.lang.String;@59402b8f),Annotation([Ljava.lang.String;@7188af83,[Ljava.lang.String;@6be968ce,[Ledu.cmu.lti.nlp.amr.Dependency;@7c37508a),Annotation([Ljava.lang.String;@247310d0,[Ljava.lang.String;@1033576a,[Ljava.lang.String;@303cf2ba),Annotation([Ljava.lang.String;@76494737,[Ljava.lang.String;@4a003cbe,[Ledu.cmu.lti.nlp.amr.Entity;@4082ba93))
AMR:
(x12 / 一天, mod, x13 / 忽然)
(x12 / 一天, subset, x11 / 这)
(x13 / 忽然, poss, x6 / 种子)
(x14 / 监视-01, ARG5, x21 / 这)
(x14 / 监视-01, manner, x15 / 仔细-01)
(x14 / 监视-01, manner, x22 / 与众不同-01)
(x15 / 仔细-01, degree, x13 / 忽然)
(x15 / 仔细-01, degree, x16 / 特别-01)
(x16 / 特别-01, degree, x17 / 王子)
(x17 / 王子, mod, x20 / 小-01)
(x3 / 知-01, snt3, x5 / 来-01)
(x5 / 来-01, op, x6 / 种子)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 110,486 microseconds
Sentence: 这 玩艺 说不定 是 一 种 新 的 猴面包树 。

Oracle Span 1:  新 => 新-01
Oracle Span 2:  猴面包树 => 猴面包树
Oracle Span 3:  玩艺 => 玩艺
Oracle Span 4:  说不定 => 说不定-01
Oracle Span 5:  这 => 这
Spans:
Span 6-7:  新 => 新-01
Span 8-9:  猴面包树 => 猴面包树
Span 1-2:  玩艺 => 玩艺
Span 2-3:  说不定 => 说不定-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  新 => 新-01
Oracle Span 8-9:  猴面包树 => 猴面包树
Oracle Span 1-2:  玩艺 => 玩艺
Oracle Span 2-3:  说不定 => 说不定-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	玩艺	_	CD	CD	_	1	dep	_	_
3	说不定	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	9	clf	_	_
7	新	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	猴面包树	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 猴面包树, domain, x4 / 玩艺)
(x0 / 猴面包树, manner, x6 / 说不定-01)
(x0 / 猴面包树, mod, x2 / 新-01)
(x4 / 玩艺, mod, x5 / 这)

Input(Some(Graph((猴面包树 :manner 说不定-01 :domain (玩艺 :mod 这) :quant 1 :mod 新-01),ArrayBuffer(Span(8,9,List(0),猴面包树,猴面包树,false), Span(2,3,List(1),说不定,说不定-01,false), Span(1,2,List(2),玩艺,玩艺,false), Span(0,1,List(3),这,这,false), Span(6,7,List(4),新,新-01,false)),Map(2 -> 玩艺, 1 -> 说不定-01, 4 -> 新-01, 0 -> 猴面包树, 3 -> 这),Map(x2 -> 新-01, x5 -> 这, x4 -> 玩艺, x6 -> 说不定-01, x0 -> 猴面包树))),[Ljava.lang.String;@17fc391b,Annotation([Ljava.lang.String;@2b30a42c,[Ljava.lang.String;@609e8838,[Ljava.lang.String;@359df09a),Annotation([Ljava.lang.String;@43df23d3,[Ljava.lang.String;@6d60fe40,[Ledu.cmu.lti.nlp.amr.Dependency;@792b749c),Annotation([Ljava.lang.String;@23e84203,[Ljava.lang.String;@19932c16,[Ljava.lang.String;@73eb439a),Annotation([Ljava.lang.String;@514646ef,[Ljava.lang.String;@305ffe9e,[Ledu.cmu.lti.nlp.amr.Entity;@302c971f))
AMR:
(x0 / 猴面包树, domain, x4 / 玩艺)
(x0 / 猴面包树, manner, x6 / 说不定-01)
(x0 / 猴面包树, mod, x2 / 新-01)
(x4 / 玩艺, mod, x5 / 这)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,639 microseconds
Sentence: 但是 ， 这 小苗 不久 就 不 再 长 了 ， 而且 开始 孕育 着 一 个 花朵 。

Oracle Span 1:  不久 => 不久
Oracle Span 2:  再 => 再
Oracle Span 3:  孕育 => 孕育-01
Oracle Span 4:  就 => 就
Oracle Span 5:  开始 => 开始-02
Oracle Span 6:  花朵 => 花朵
Oracle Span 7:  这 => 这
Oracle Span 8:  长 => 长-01
Spans:
Span 4-5:  不久 => 不久
Span 7-8:  再 => 再
Span 13-14:  孕育 => 孕育-01
Span 5-6:  就 => 就
Span 12-13:  开始 => 开始-02
Span 17-18:  花朵 => 花朵
Span 2-3:  这 => 这
Span 8-9:  长 => 长-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  不久 => 不久
Oracle Span 7-8:  再 => 再
Oracle Span 13-14:  孕育 => 孕育-01
Oracle Span 5-6:  就 => 就
Oracle Span 12-13:  开始 => 开始-02
Oracle Span 17-18:  花朵 => 花朵
Oracle Span 2-3:  这 => 这
Oracle Span 8-9:  长 => 长-01

Dependencies:
1	但是	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	这	_	DT	DT	_	4	det	_	_
4	小苗	_	NN	NN	_	14	nsubj	_	_
5	不久	_	NT	NT	_	14	tmod	_	_
6	就	_	P	P	_	14	prep	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	再	_	AD	AD	_	9	advmod	_	_
9	长	_	VA	VA	_	6	pccomp	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	9	punct	_	_
12	而且	_	CC	CC	_	9	cc	_	_
13	开始	_	VV	VV	_	9	dep	_	_
14	孕育	_	VV	VV	_	0	root	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	18	clf	_	_
18	花朵	_	NN	NN	_	14	dobj	_	_
19	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x11 / 开始-02, arg0, x12 / 孕育-01)
(x12 / 孕育-01, arg1, x13 / 花朵)
(x3 / 长-01, manner, x6 / 再)
(x3 / 长-01, manner, x7 / 就)
(x3 / 长-01, time, x8 / 不久)

Input(Some(Graph((contrast :arg2 (progression :arg1 (长-01 :time 不久 :manner 就 :manner 再 :polarity - :arg1 (苗 :mod 小-01 :mod 这)) :arg2 (开始-02 :arg0 (孕育-01 :arg1 (花朵 :quant 1))))),ArrayBuffer(Span(8,9,List(0),长,长-01,false), Span(4,5,List(1),不久,不久,false), Span(5,6,List(2),就,就,false), Span(7,8,List(3),再,再,false), Span(2,3,List(4),这,这,false), Span(12,13,List(5),开始,开始-02,false), Span(13,14,List(6),孕育,孕育-01,false), Span(17,18,List(7),花朵,花朵,false)),Map(2 -> 就, 5 -> 开始-02, 7 -> 花朵, 1 -> 不久, 4 -> 这, 6 -> 孕育-01, 0 -> 长-01, 3 -> 再),Map(x10 -> 这, x13 -> 花朵, x8 -> 不久, x12 -> 孕育-01, x7 -> 就, x11 -> 开始-02, x3 -> 长-01, x6 -> 再))),[Ljava.lang.String;@1972e513,Annotation([Ljava.lang.String;@7ae0a9ec,[Ljava.lang.String;@35841320,[Ljava.lang.String;@61c4eee0),Annotation([Ljava.lang.String;@6f10d5b6,[Ljava.lang.String;@1040be71,[Ledu.cmu.lti.nlp.amr.Dependency;@548a24a),Annotation([Ljava.lang.String;@433defed,[Ljava.lang.String;@2a693f59,[Ljava.lang.String;@3f4faf53),Annotation([Ljava.lang.String;@7fd50002,[Ljava.lang.String;@533bda92,[Ledu.cmu.lti.nlp.amr.Entity;@304bb45b))
AMR:
(x11 / 开始-02, ARG3, x12 / 孕育-01)
(x12 / 孕育-01, degree, x10 / 这)
(x12 / 孕育-01, prep-for, x13 / 花朵)
(x3 / 长-01, ARG3, x12 / 孕育-01)
(x3 / 长-01, manner, x6 / 再)
(x3 / 长-01, manner, x7 / 就)
(x3 / 长-01, time, x8 / 不久)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.4
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 47,501 microseconds
Sentence: 看到 在 这 棵 苗 上 长出 了 一 个 很 大 很 大 的 花蕾 ， 小 王子 感觉 到 从 这个 花苞 中 一定 会 出现 一 个 奇迹 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  会 => 会-02
Oracle Span 3:  出现 => 出现-01
Oracle Span 4:  大 => 大-01
Oracle Span 5:  大 => 大-01
Oracle Span 6:  奇迹 => 奇迹
Oracle Span 7:  小 => 小-01
Oracle Span 8:  很 => 很
Oracle Span 9:  很 => 很
Oracle Span 10:  感觉 => 感觉-01
Oracle Span 11:  王子 => 王子
Oracle Span 12:  看到 => 看到-01
Oracle Span 13:  花苞 => 花苞
Oracle Span 14:  花蕾 => 花蕾
Oracle Span 15:  苗 => 苗
Oracle Span 16:  这 => 这
Oracle Span 17:  长出 => 长出-01
Spans:
Span 25-26:  一定 => 一定
Span 26-27:  会 => 会-02
Span 27-28:  出现 => 出现-01
Span 11-12:  大 => 大-01
Span 13-14:  大 => 大-01
Span 30-31:  奇迹 => 奇迹
Span 17-18:  小 => 小-01
Span 10-11:  很 => 很
Span 12-13:  很 => 很
Span 19-20:  感觉 => 感觉-01
Span 18-19:  王子 => 王子
Span 0-1:  看到 => 看到-01
Span 23-24:  花苞 => 花苞
Span 15-16:  花蕾 => 花蕾
Span 4-5:  苗 => 苗
Span 2-3:  这 => 这
Span 6-7:  长出 => 长出-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 25-26:  一定 => 一定
Oracle Span 26-27:  会 => 会-02
Oracle Span 27-28:  出现 => 出现-01
Oracle Span 11-12:  大 => 大-01
Oracle Span 13-14:  大 => 大-01
Oracle Span 30-31:  奇迹 => 奇迹
Oracle Span 17-18:  小 => 小-01
Oracle Span 10-11:  很 => 很
Oracle Span 12-13:  很 => 很
Oracle Span 19-20:  感觉 => 感觉-01
Oracle Span 18-19:  王子 => 王子
Oracle Span 0-1:  看到 => 看到-01
Oracle Span 23-24:  花苞 => 花苞
Oracle Span 15-16:  花蕾 => 花蕾
Oracle Span 4-5:  苗 => 苗
Oracle Span 2-3:  这 => 这
Oracle Span 6-7:  长出 => 长出-01

Dependencies:
1	看到	_	VV	VV	_	0	root	_	_
2	在	_	P	P	_	7	prep	_	_
3	这	_	DT	DT	_	5	det	_	_
4	棵	_	CD	CD	_	3	dep	_	_
5	苗	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	2	plmod	_	_
7	长出	_	VV	VV	_	1	ccomp	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	16	clf	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	大	_	JJ	JJ	_	16	amod	_	_
13	很	_	AD	AD	_	14	advmod	_	_
14	大	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	花蕾	_	NN	NN	_	7	dobj	_	_
17	,	_	PU	PU	_	1	punct	_	_
18	小	_	JJ	JJ	_	19	amod	_	_
19	王子	_	NN	NN	_	20	nsubj	_	_
20	感觉	_	VV	VV	_	1	dep	_	_
21	到	_	VV	VV	_	20	comod	_	_
22	从	_	P	P	_	28	prep	_	_
23	这个	_	NN	NN	_	24	nn	_	_
24	花苞	_	NN	NN	_	25	lobj	_	_
25	中	_	LC	LC	_	22	plmod	_	_
26	一定	_	AD	AD	_	28	advmod	_	_
27	会	_	VV	VV	_	28	mmod	_	_
28	出现	_	VV	VV	_	20	ccomp	_	_
29	一	_	CD	CD	_	30	nummod	_	_
30	个	_	M	M	_	31	clf	_	_
31	奇迹	_	NN	NN	_	28	dobj	_	_
32	。	_	PU	PU	_	1	punct	_	_
33	王子	_	NN	NN	_	28	xsubj	_	_

Oracle:
(x10 / 苗, mod, x11 / 这)
(x12 / 感觉-01, arg0, x13 / 王子)
(x12 / 感觉-01, arg1, x19 / 会-02)
(x13 / 王子, mod, x14 / 小-01)
(x19 / 会-02, arg0, x20 / 出现-01)
(x19 / 会-02, manner, x23 / 一定)
(x2 / 看到-01, arg1, x3 / 长出-01)
(x20 / 出现-01, arg0, x21 / 花苞)
(x20 / 出现-01, arg1, x24 / 奇迹)
(x3 / 长出-01, arg0, x4 / 花蕾)
(x3 / 长出-01, location, x10 / 苗)
(x4 / 花蕾, mod, x6 / 大-01)
(x4 / 花蕾, mod, x8 / 大-01)
(x6 / 大-01, degree, x7 / 很)
(x8 / 大-01, degree, x9 / 很)

Input(Some(Graph((causation :arg1 (看到-01 :arg1 (长出-01 :location (苗 :mod 这) :arg0 (花蕾 :mod (大-01 :degree 很) :mod (大-01 :degree 很) :quant 1))) :arg2 (感觉-01 :arg1 (会-02 :manner 一定 :arg0 (出现-01 :arg1 (奇迹 :quant 1) :arg0 (花苞 :mod 这))) :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(0,1,List(0),看到,看到-01,false), Span(6,7,List(1),长出,长出-01,false), Span(4,5,List(2),苗,苗,false), Span(2,3,List(3),这,这,false), Span(15,16,List(4),花蕾,花蕾,false), Span(11,12,List(5),大,大-01,false), Span(10,11,List(6),很,很,false), Span(13,14,List(7),大,大-01,false), Span(12,13,List(8),很,很,false), Span(19,20,List(9),感觉,感觉-01,false), Span(26,27,List(10),会,会-02,false), Span(25,26,List(11),一定,一定,false), Span(27,28,List(12),出现,出现-01,false), Span(30,31,List(13),奇迹,奇迹,false), Span(23,24,List(14),花苞,花苞,false), Span(18,19,List(15),王子,王子,false), Span(17,18,List(16),小,小-01,false)),Map(2 -> 苗, 5 -> 大-01, 12 -> 出现-01, 15 -> 王子, 8 -> 很, 7 -> 大-01, 1 -> 长出-01, 4 -> 花蕾, 11 -> 一定, 14 -> 花苞, 6 -> 很, 9 -> 感觉-01, 0 -> 看到-01, 16 -> 小-01, 10 -> 会-02, 3 -> 这, 13 -> 奇迹),Map(x10 -> 苗, x19 -> 会-02, x2 -> 看到-01, x13 -> 王子, x8 -> 大-01, x12 -> 感觉-01, x21 -> 花苞, x7 -> 很, x24 -> 奇迹, x4 -> 花蕾, x23 -> 一定, x11 -> 这, x3 -> 长出-01, x6 -> 大-01, x14 -> 小-01, x20 -> 出现-01, x9 -> 很))),[Ljava.lang.String;@723ca036,Annotation([Ljava.lang.String;@25be7b63,[Ljava.lang.String;@28dcca0c,[Ljava.lang.String;@45d84a20),Annotation([Ljava.lang.String;@52f27fbd,[Ljava.lang.String;@4c163e3,[Ledu.cmu.lti.nlp.amr.Dependency;@4a8355dd),Annotation([Ljava.lang.String;@4d0d9fe7,[Ljava.lang.String;@c430e6c,[Ljava.lang.String;@312aa7c),Annotation([Ljava.lang.String;@536f2a7e,[Ljava.lang.String;@72bc6553,[Ledu.cmu.lti.nlp.amr.Entity;@66982506))
AMR:
(x10 / 苗, mod, x11 / 这)
(x12 / 感觉-01, beneficiary, x13 / 王子)
(x12 / 感觉-01, topic, x21 / 花苞)
(x13 / 王子, mod, x14 / 小-01)
(x19 / 会-02, manner, x20 / 出现-01)
(x19 / 会-02, manner, x23 / 一定)
(x2 / 看到-01, topic, x10 / 苗)
(x20 / 出现-01, duration, x24 / 奇迹)
(x23 / 一定, degree, x21 / 花苞)
(x3 / 长出-01, location, x10 / 苗)
(x4 / 花蕾, mod, x14 / 小-01)
(x4 / 花蕾, mod, x3 / 长出-01)
(x4 / 花蕾, mod, x6 / 大-01)
(x4 / 花蕾, mod, x8 / 大-01)
(x6 / 大-01, degree, x7 / 很)
(x8 / 大-01, degree, x9 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 144,283 microseconds
Sentence: 然而 这 朵 花 藏 在 它 那 绿茵茵 的 房间 中 用 了 很 长 的 时间 来 打扮 自己 。

Oracle Span 1:  房间 => 房间
Oracle Span 2:  打扮 => 打扮-01
Oracle Span 3:  时间 => 时间
Oracle Span 4:  用 => 用-01
Oracle Span 5:  绿茵茵 => 绿茵茵
Oracle Span 6:  花 => 花
Oracle Span 7:  藏 => 藏-01
Oracle Span 8:  这 => 这
Oracle Span 9:  那 => 那
Spans:
Span 10-11:  房间 => 房间
Span 19-20:  打扮 => 打扮-01
Span 17-18:  时间 => 时间
Span 12-13:  用 => 用-01
Span 8-9:  绿茵茵 => 绿茵茵
Span 3-4:  花 => 花
Span 4-5:  藏 => 藏-01
Span 1-2:  这 => 这
Span 7-8:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  房间 => 房间
Oracle Span 19-20:  打扮 => 打扮-01
Oracle Span 17-18:  时间 => 时间
Oracle Span 12-13:  用 => 用-01
Oracle Span 8-9:  绿茵茵 => 绿茵茵
Oracle Span 3-4:  花 => 花
Oracle Span 4-5:  藏 => 藏-01
Oracle Span 1-2:  这 => 这
Oracle Span 7-8:  那 => 那

Dependencies:
1	然而	_	AD	AD	_	13	advmod	_	_
2	这	_	DT	DT	_	4	det	_	_
3	朵	_	M	M	_	2	clf	_	_
4	花	_	NN	NN	_	13	nsubj	_	_
5	藏	_	NR	NR	_	13	nsubj	_	_
6	在	_	P	P	_	13	prep	_	_
7	它	_	PN	PN	_	9	nn	_	_
8	那	_	DT	DT	_	9	det	_	_
9	绿茵茵	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	房间	_	NN	NN	_	12	lobj	_	_
12	中	_	LC	LC	_	6	plmod	_	_
13	用	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	很	_	AD	AD	_	16	advmod	_	_
16	长	_	VA	VA	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	时间	_	NN	NN	_	13	dobj	_	_
19	来	_	MSP	MSP	_	20	prtmod	_	_
20	打扮	_	VV	VV	_	13	conj	_	_
21	自己	_	PN	PN	_	20	dobj	_	_
22	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 用-01, arg0, x12 / 花)
(x11 / 用-01, arg1, x14 / 时间)
(x11 / 用-01, arg2, x16 / 打扮-01)
(x11 / 用-01, location, x19 / 房间)
(x12 / 花, mod, x13 / 这)
(x19 / 房间, mod, x20 / 那)
(x19 / 房间, mod, x21 / 绿茵茵)
(x23 / 藏-01, arg1, x19 / 房间)

Input(Some(Graph((contrast :arg2 (用-01 :location (房间 :arg1-of (藏-01 :arg0 x12) :poss x12 :mod 绿茵茵 :mod 那) :arg2 (打扮-01 :arg1 x12 :arg0 x12) :arg1 (时间 :mod 很长) :arg0 (花 :mod 这))),ArrayBuffer(Span(12,13,List(0),用,用-01,false), Span(10,11,List(1),房间,房间,false), Span(4,5,List(2),藏,藏-01,false), Span(8,9,List(3),绿茵茵,绿茵茵,false), Span(7,8,List(4),那,那,false), Span(19,20,List(5),打扮,打扮-01,false), Span(17,18,List(6),时间,时间,false), Span(3,4,List(7),花,花,false), Span(1,2,List(8),这,这,false)),Map(2 -> 藏-01, 5 -> 打扮-01, 8 -> 这, 7 -> 花, 1 -> 房间, 4 -> 那, 6 -> 时间, 0 -> 用-01, 3 -> 绿茵茵),Map(x16 -> 打扮-01, x19 -> 房间, x13 -> 这, x12 -> 花, x21 -> 绿茵茵, x23 -> 藏-01, x11 -> 用-01, x14 -> 时间, x20 -> 那))),[Ljava.lang.String;@70cf32e3,Annotation([Ljava.lang.String;@5a59ca5e,[Ljava.lang.String;@4bdeaabb,[Ljava.lang.String;@6c4906d3),Annotation([Ljava.lang.String;@65987993,[Ljava.lang.String;@71075444,[Ledu.cmu.lti.nlp.amr.Dependency;@4f32a3ad),Annotation([Ljava.lang.String;@6b695b06,[Ljava.lang.String;@4d1bf319,[Ljava.lang.String;@6f53b8a),Annotation([Ljava.lang.String;@5c80cf32,[Ljava.lang.String;@7d900ecf,[Ledu.cmu.lti.nlp.amr.Entity;@6f01b95f))
AMR:
(x11 / 用-01, location, x19 / 房间)
(x11 / 用-01, op, x12 / 花)
(x11 / 用-01, subset, x14 / 时间)
(x11 / 用-01, unit, x16 / 打扮-01)
(x12 / 花, mod, x13 / 这)
(x19 / 房间, mod, x20 / 那)
(x19 / 房间, mod, x21 / 绿茵茵)
(x23 / 藏-01, time, x19 / 房间)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.3
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 42,323 microseconds
Sentence: 她 精心 选择 着 她 将来 的 颜色 ，

Oracle Span 1:  她 => 她
Oracle Span 2:  将来 => 将来
Oracle Span 3:  精心 => 精心
Oracle Span 4:  选择 => 选择-01
Oracle Span 5:  颜色 => 颜色
Spans:
Span 0-1:  她 => 她
Span 5-6:  将来 => 将来
Span 1-2:  精心 => 精心
Span 2-3:  选择 => 选择-01
Span 7-8:  颜色 => 颜色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  她 => 她
Oracle Span 5-6:  将来 => 将来
Oracle Span 1-2:  精心 => 精心
Oracle Span 2-3:  选择 => 选择-01
Oracle Span 7-8:  颜色 => 颜色

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	精心	_	AD	AD	_	3	advmod	_	_
3	选择	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	她	_	PN	PN	_	8	nn	_	_
6	将来	_	NT	NT	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	颜色	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 选择-01, arg0, x2 / 她)
(x0 / 选择-01, arg1, x3 / 颜色)
(x0 / 选择-01, manner, x6 / 精心)
(x3 / 颜色, time, x5 / 将来)

Input(Some(Graph((选择-01 :manner 精心 :arg1 (颜色 :time 将来 :poss x2) :arg0 她),ArrayBuffer(Span(2,3,List(0),选择,选择-01,false), Span(1,2,List(1),精心,精心,false), Span(7,8,List(2),颜色,颜色,false), Span(5,6,List(3),将来,将来,false), Span(0,1,List(4),她,她,false)),Map(2 -> 颜色, 1 -> 精心, 4 -> 她, 0 -> 选择-01, 3 -> 将来),Map(x2 -> 她, x5 -> 将来, x3 -> 颜色, x6 -> 精心, x0 -> 选择-01))),[Ljava.lang.String;@4007f65e,Annotation([Ljava.lang.String;@1a245833,[Ljava.lang.String;@673fdbce,[Ljava.lang.String;@5965d37),Annotation([Ljava.lang.String;@7a5ceedd,[Ljava.lang.String;@4201c465,[Ledu.cmu.lti.nlp.amr.Dependency;@5b799640),Annotation([Ljava.lang.String;@6cb107fd,[Ljava.lang.String;@710636b0,[Ljava.lang.String;@3de8f619),Annotation([Ljava.lang.String;@2ab4bc72,[Ljava.lang.String;@4e5ed836,[Ledu.cmu.lti.nlp.amr.Entity;@eadd4fb))
AMR:
(x0 / 选择-01, manner, x6 / 精心)
(x0 / 选择-01, prep-along-with, x2 / 她)
(x0 / 选择-01, subset, x3 / 颜色)
(x3 / 颜色, time, x5 / 将来)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,654 microseconds
Sentence: 慢慢腾腾 地 妆饰 着 ， 一 片 片 地 搭配 着 她 的 花瓣 ，

Oracle Span 1:  她 => 她
Oracle Span 2:  妆饰 => 妆饰-01
Oracle Span 3:  慢慢腾腾 => 慢慢腾腾
Oracle Span 4:  搭配 => 搭配-01
Oracle Span 5:  花瓣 => 花瓣
Spans:
Span 11-12:  她 => 她
Span 2-3:  妆饰 => 妆饰-01
Span 0-1:  慢慢腾腾 => 慢慢腾腾
Span 9-10:  搭配 => 搭配-01
Span 13-14:  花瓣 => 花瓣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  她 => 她
Oracle Span 2-3:  妆饰 => 妆饰-01
Oracle Span 0-1:  慢慢腾腾 => 慢慢腾腾
Oracle Span 9-10:  搭配 => 搭配-01
Oracle Span 13-14:  花瓣 => 花瓣

Dependencies:
1	慢慢腾腾	_	VA	VA	_	3	dvpmod	_	_
2	地	_	DEV	DEV	_	1	dvpm	_	_
3	妆饰	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	片	_	M	M	_	10	nsubj	_	_
8	片	_	M	M	_	9	dep	_	_
9	地	_	NN	NN	_	10	nsubj	_	_
10	搭配	_	VV	VV	_	3	dep	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	她	_	PN	PN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	花瓣	_	NN	NN	_	10	dobj	_	_
15	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x11 / 妆饰-01, manner, x12 / 慢慢腾腾)
(x13 / 搭配-01, arg1, x14 / 花瓣)
(x14 / 花瓣, poss, x15 / 她)

Input(Some(Graph((and :op (妆饰-01 :manner 慢慢腾腾) :op (搭配-01 :manner 一片片 :arg1 (花瓣 :poss 她))),ArrayBuffer(Span(2,3,List(0),妆饰,妆饰-01,false), Span(0,1,List(1),慢慢腾腾,慢慢腾腾,false), Span(9,10,List(2),搭配,搭配-01,false), Span(13,14,List(3),花瓣,花瓣,false), Span(11,12,List(4),她,她,false)),Map(2 -> 搭配-01, 1 -> 慢慢腾腾, 4 -> 她, 0 -> 妆饰-01, 3 -> 花瓣),Map(x13 -> 搭配-01, x12 -> 慢慢腾腾, x15 -> 她, x11 -> 妆饰-01, x14 -> 花瓣))),[Ljava.lang.String;@740fb309,Annotation([Ljava.lang.String;@7bd7d6d6,[Ljava.lang.String;@43f02ef2,[Ljava.lang.String;@239a307b),Annotation([Ljava.lang.String;@2a8448fa,[Ljava.lang.String;@6f204a1a,[Ledu.cmu.lti.nlp.amr.Dependency;@2de56eb2),Annotation([Ljava.lang.String;@5f8e8a9d,[Ljava.lang.String;@5745ca0e,[Ljava.lang.String;@3ad83a66),Annotation([Ljava.lang.String;@3cce5371,[Ljava.lang.String;@17bffc17,[Ledu.cmu.lti.nlp.amr.Entity;@6e535154))
AMR:
(x11 / 妆饰-01, manner, x12 / 慢慢腾腾)
(x11 / 妆饰-01, prep-on-behalf, x13 / 搭配-01)
(x13 / 搭配-01, snt1, x14 / 花瓣)
(x14 / 花瓣, poss, x15 / 她)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 13,450 microseconds
Sentence: 她 不 愿 象 虞美人 那样 一 出世 就 满 脸 皱纹 。

Oracle Span 1:  出世 => 出世-01
Oracle Span 2:  她 => 她
Oracle Span 3:  愿 => 愿-01
Oracle Span 4:  满 => 满-01
Oracle Span 5:  皱纹 => 皱纹
Oracle Span 6:  脸 => 脸
Oracle Span 7:  虞美人 => 虞美人
Spans:
Span 7-8:  出世 => 出世-01
Span 0-1:  她 => 她
Span 2-3:  愿 => 愿-01
Span 9-10:  满 => 满-01
Span 11-12:  皱纹 => 皱纹
Span 10-11:  脸 => 脸
Span 4-5:  虞美人 => 虞美人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出世 => 出世-01
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  愿 => 愿-01
Oracle Span 9-10:  满 => 满-01
Oracle Span 11-12:  皱纹 => 皱纹
Oracle Span 10-11:  脸 => 脸
Oracle Span 4-5:  虞美人 => 虞美人

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	愿	_	VV	VV	_	0	root	_	_
4	象	_	P	P	_	6	dep	_	_
5	虞美人	_	NN	NN	_	4	pobj	_	_
6	那样	_	AD	AD	_	10	advmod	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	出世	_	NN	NN	_	10	prep	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	满	_	VV	VV	_	3	ccomp	_	_
11	脸	_	NN	NN	_	12	nn	_	_
12	皱纹	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	她	_	PN	PN	_	10	xsubj	_	_

Oracle:
(x0 / 愿-01, arg0, x3 / 她)
(x10 / 满-01, arg0, x12 / 皱纹)
(x10 / 满-01, arg1, x11 / 脸)
(x10 / 满-01, time, x13 / 出世-01)

Input(Some(Graph((愿-01 :arg1 (像-01 :arg0 x3 :arg1 虞美人 :arg2 (满-01 :time (出世-01 :arg0 x3) :arg0 皱纹 :arg1 脸)) :arg0 她 :polarity -),ArrayBuffer(Span(2,3,List(0),愿,愿-01,false), Span(4,5,List(1),虞美人,虞美人,false), Span(9,10,List(2),满,满-01,false), Span(7,8,List(3),出世,出世-01,false), Span(11,12,List(4),皱纹,皱纹,false), Span(10,11,List(5),脸,脸,false), Span(0,1,List(6),她,她,false)),Map(2 -> 满-01, 5 -> 脸, 1 -> 虞美人, 4 -> 皱纹, 6 -> 她, 0 -> 愿-01, 3 -> 出世-01),Map(x10 -> 满-01, x13 -> 出世-01, x12 -> 皱纹, x3 -> 她, x11 -> 脸, x6 -> 虞美人, x0 -> 愿-01))),[Ljava.lang.String;@15a34df2,Annotation([Ljava.lang.String;@5b38c1ec,[Ljava.lang.String;@338fc1d8,[Ljava.lang.String;@4722ef0c),Annotation([Ljava.lang.String;@48e1f6c7,[Ljava.lang.String;@55cb6996,[Ledu.cmu.lti.nlp.amr.Dependency;@1807e3f6),Annotation([Ljava.lang.String;@480d3575,[Ljava.lang.String;@f1da57d,[Ljava.lang.String;@194fad1),Annotation([Ljava.lang.String;@26abb146,[Ljava.lang.String;@72c8e7b,[Ledu.cmu.lti.nlp.amr.Entity;@65f8f5ae))
AMR:
(x0 / 愿-01, degree, x3 / 她)
(x10 / 满-01, accompanier, x11 / 脸)
(x10 / 满-01, mode, x12 / 皱纹)
(x10 / 满-01, time, x13 / 出世-01)
(x6 / 虞美人, accompanier, x13 / 出世-01)
(x6 / 虞美人, mod, x0 / 愿-01)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 17,492 microseconds
Sentence: 她 要 让 自己 带 着 光艳夺目 的 丽姿 来到 世间 。

Oracle Span 1:  世间 => 世间
Oracle Span 2:  丽姿 => 丽姿
Oracle Span 3:  光艳夺目 => 光艳夺目
Oracle Span 4:  她 => 她
Oracle Span 5:  带 => 带-01
Oracle Span 6:  来到 => 来到-01
Oracle Span 7:  自己 => 自己
Oracle Span 8:  要 => 要-03
Oracle Span 9:  让 => 让-02
Spans:
Span 10-11:  世间 => 世间
Span 8-9:  丽姿 => 丽姿
Span 6-7:  光艳夺目 => 光艳夺目
Span 0-1:  她 => 她
Span 4-5:  带 => 带-01
Span 9-10:  来到 => 来到-01
Span 3-4:  自己 => 自己
Span 1-2:  要 => 要-03
Span 2-3:  让 => 让-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  世间 => 世间
Oracle Span 8-9:  丽姿 => 丽姿
Oracle Span 6-7:  光艳夺目 => 光艳夺目
Oracle Span 0-1:  她 => 她
Oracle Span 4-5:  带 => 带-01
Oracle Span 9-10:  来到 => 来到-01
Oracle Span 3-4:  自己 => 自己
Oracle Span 1-2:  要 => 要-03
Oracle Span 2-3:  让 => 让-02

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	让	_	VV	VV	_	0	root	_	_
4	自己	_	PN	PN	_	5	nsubj	_	_
5	带	_	VV	VV	_	9	rcmod	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	光艳夺目	_	NN	NN	_	5	dobj	_	_
8	的	_	DEC	DEC	_	5	cpm	_	_
9	丽姿	_	NN	NN	_	3	dobj	_	_
10	来到	_	VV	VV	_	3	dep	_	_
11	世间	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 要-03, arg0, x2 / 让-02)
(x2 / 让-02, arg0, x3 / 她)
(x2 / 让-02, arg1, x4 / 自己)
(x2 / 让-02, arg2, x5 / 带-01)
(x5 / 带-01, arg1, x7 / 丽姿)
(x5 / 带-01, purpose, x9 / 来到-01)
(x7 / 丽姿, mod, x8 / 光艳夺目)
(x9 / 来到-01, arg1, x11 / 世间)

Input(Some(Graph((要-03 :arg0 (让-02 :arg2 (带-01 :purpose (来到-01 :arg1 世间 :arg0 x3) :arg1 (丽姿 :mod 光艳夺目) :arg0 x3) :arg1 自己 :arg0 她)),ArrayBuffer(Span(1,2,List(0),要,要-03,false), Span(2,3,List(1),让,让-02,false), Span(4,5,List(2),带,带-01,false), Span(9,10,List(3),来到,来到-01,false), Span(10,11,List(4),世间,世间,false), Span(8,9,List(5),丽姿,丽姿,false), Span(6,7,List(6),光艳夺目,光艳夺目,false), Span(3,4,List(7),自己,自己,false), Span(0,1,List(8),她,她,false)),Map(2 -> 带-01, 5 -> 丽姿, 8 -> 她, 7 -> 自己, 1 -> 让-02, 4 -> 世间, 6 -> 光艳夺目, 0 -> 要-03, 3 -> 来到-01),Map(x2 -> 让-02, x5 -> 带-01, x8 -> 光艳夺目, x7 -> 丽姿, x4 -> 自己, x3 -> 她, x11 -> 世间, x9 -> 来到-01, x0 -> 要-03))),[Ljava.lang.String;@431cd9b2,Annotation([Ljava.lang.String;@38467116,[Ljava.lang.String;@5b7a7f33,[Ljava.lang.String;@790da477),Annotation([Ljava.lang.String;@5c7933ad,[Ljava.lang.String;@57bc27f5,[Ledu.cmu.lti.nlp.amr.Dependency;@5fb759d6),Annotation([Ljava.lang.String;@4b8d604b,[Ljava.lang.String;@5e7cd6cc,[Ljava.lang.String;@68c9d179),Annotation([Ljava.lang.String;@d554c5f,[Ljava.lang.String;@2dfaea86,[Ledu.cmu.lti.nlp.amr.Entity;@15888343))
AMR:
(x0 / 要-03, op, x2 / 让-02)
(x2 / 让-02, ARG4, x4 / 自己)
(x2 / 让-02, snt1, x3 / 她)
(x2 / 让-02, time, x5 / 带-01)
(x5 / 带-01, purpose, x9 / 来到-01)
(x5 / 带-01, snt11, x7 / 丽姿)
(x7 / 丽姿, mod, x8 / 光艳夺目)
(x9 / 来到-01, quant, x11 / 世间)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.2
WARNING: makeIds can't find span Id: 0.0.2.2.1
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 25,322 microseconds
Sentence: 是 的 ，

Oracle Span 1:  是 => 是-03
Spans:
Span 0-1:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  是 => 是-03

Dependencies:
1	是	_	VC	VC	_	3	rcmod	_	_
2	的	_	DEC	DEC	_	1	cpm	_	_
3	,	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(是-03,ArrayBuffer(Span(0,1,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x0 -> 是-03))),[Ljava.lang.String;@33ecda92,Annotation([Ljava.lang.String;@14fc5f04,[Ljava.lang.String;@6e2829c7,[Ljava.lang.String;@3feb2dda),Annotation([Ljava.lang.String;@6a8658ff,[Ljava.lang.String;@1c742ed4,[Ledu.cmu.lti.nlp.amr.Dependency;@333d4a8c),Annotation([Ljava.lang.String;@55de24cc,[Ljava.lang.String;@dc7df28,[Ljava.lang.String;@30f842ca),Annotation([Ljava.lang.String;@69c81773,[Ljava.lang.String;@4d14b6c2,[Ledu.cmu.lti.nlp.amr.Entity;@7e990ed7))
AMR:


Decoded in 1,793 microseconds
Sentence: 她 是 非常 爱 俏 的 。

Oracle Span 1:  俏 => 俏
Oracle Span 2:  她 => 她
Oracle Span 3:  爱 => 爱-01
Oracle Span 4:  非常 => 非常-01
Spans:
Span 4-5:  俏 => 俏
Span 0-1:  她 => 她
Span 3-4:  爱 => 爱-01
Span 2-3:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  俏 => 俏
Oracle Span 0-1:  她 => 她
Oracle Span 3-4:  爱 => 爱-01
Oracle Span 2-3:  非常 => 非常-01

Dependencies:
1	她	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	爱	_	VV	VV	_	2	attr	_	_
5	俏	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 爱-01, arg0, x2 / 她)
(x0 / 爱-01, arg1, x3 / 俏)
(x0 / 爱-01, degree, x4 / 非常-01)

Input(Some(Graph((爱-01 :degree 非常-01 :arg1 俏 :arg0 她),ArrayBuffer(Span(3,4,List(0),爱,爱-01,false), Span(2,3,List(1),非常,非常-01,false), Span(4,5,List(2),俏,俏,false), Span(0,1,List(3),她,她,false)),Map(2 -> 俏, 1 -> 非常-01, 0 -> 爱-01, 3 -> 她),Map(x2 -> 她, x4 -> 非常-01, x3 -> 俏, x0 -> 爱-01))),[Ljava.lang.String;@c05fddc,Annotation([Ljava.lang.String;@25df00a0,[Ljava.lang.String;@4d15107f,[Ljava.lang.String;@7b4c50bc),Annotation([Ljava.lang.String;@5884a914,[Ljava.lang.String;@50378a4,[Ledu.cmu.lti.nlp.amr.Dependency;@60f00693),Annotation([Ljava.lang.String;@79207381,[Ljava.lang.String;@491b9b8,[Ljava.lang.String;@1a4927d6),Annotation([Ljava.lang.String;@7a6d7e92,[Ljava.lang.String;@aba625,[Ledu.cmu.lti.nlp.amr.Entity;@97e93f1))
AMR:
(x0 / 爱-01, age, x2 / 她)
(x0 / 爱-01, degree, x4 / 非常-01)
(x0 / 爱-01, quant, x3 / 俏)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,569 microseconds
Sentence: 她 用 好些 好些 日子 天仙 般 地 梳妆打扮 。

Oracle Span 1:  天仙 => 天仙
Oracle Span 2:  她 => 她
Oracle Span 3:  日子 => (temporal-quantity :unit 日子)
Oracle Span 4:  梳妆打扮 => 梳妆打扮-01
Spans:
Span 5-6:  天仙 => 天仙
Span 0-1:  她 => 她
Span 4-5:  日子 => (temporal-quantity :unit 日子)
Span 8-9:  梳妆打扮 => 梳妆打扮-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  天仙 => 天仙
Oracle Span 0-1:  她 => 她
Oracle Span 4-5:  日子 => (temporal-quantity :unit 日子)
Oracle Span 8-9:  梳妆打扮 => 梳妆打扮-01

Dependencies:
1	她	_	PN	PN	_	9	nsubj	_	_
2	用	_	P	P	_	9	prep	_	_
3	好些	_	NN	NN	_	6	nn	_	_
4	好些	_	NN	NN	_	6	nn	_	_
5	日子	_	NN	NN	_	6	nn	_	_
6	天仙	_	NN	NN	_	2	pobj	_	_
7	般	_	VA	VA	_	9	dvpmod	_	_
8	地	_	DEV	DEV	_	7	dvpm	_	_
9	梳妆打扮	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x12 / 梳妆打扮-01, arg0, x14 / 她)
(x16 / temporal-quantity, unit, x23 / 日子)

Input(Some(Graph((梳妆打扮-01 :manner (resemble :arg0 x14 :arg1 天仙) :duration (multiple :op (temporal-quantity :unit 日子 :quant 1)) :arg0 她),ArrayBuffer(Span(8,9,List(0),梳妆打扮,梳妆打扮-01,false), Span(5,6,List(1),天仙,天仙,false), Span(4,5,List(2, 3),日子,(temporal-quantity :unit 日子),false), Span(0,1,List(4),她,她,false)),Map(2 -> temporal-quantity, 1 -> 天仙, 4 -> 她, 0 -> 梳妆打扮-01, 3 -> 日子),Map(x16 -> temporal-quantity, x22 -> 天仙, x12 -> 梳妆打扮-01, x23 -> 日子, x14 -> 她))),[Ljava.lang.String;@5a5a729f,Annotation([Ljava.lang.String;@4b520ea8,[Ljava.lang.String;@16150369,[Ljava.lang.String;@6b09fb41),Annotation([Ljava.lang.String;@624ea235,[Ljava.lang.String;@3932c79a,[Ledu.cmu.lti.nlp.amr.Dependency;@782859e),Annotation([Ljava.lang.String;@23f5b5dc,[Ljava.lang.String;@34bde49d,[Ljava.lang.String;@1b1cfb87),Annotation([Ljava.lang.String;@821330f,[Ljava.lang.String;@6f43c82,[Ledu.cmu.lti.nlp.amr.Entity;@5db6b9cd))
AMR:
(x12 / 梳妆打扮-01, season, x14 / 她)
(x12 / 梳妆打扮-01, unit, x22 / 天仙)
(x16 / temporal-quantity, part, x22 / 天仙)
(x16 / temporal-quantity, unit, x23 / 日子)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,919 microseconds
Sentence: 然后 ， 在 一 天 的 早晨 ， 恰好 在 太阳 升起 的 时候 ， 她 开放 了 。

Oracle Span 1:  升起 => 升起-02
Oracle Span 2:  太阳 => 太阳
Oracle Span 3:  她 => 她
Oracle Span 4:  开放 => 开放-04
Oracle Span 5:  恰好 => 恰好
Oracle Span 6:  早晨 => 早晨
Spans:
Span 11-12:  升起 => 升起-02
Span 10-11:  太阳 => 太阳
Span 15-16:  她 => 她
Span 16-17:  开放 => 开放-04
Span 8-9:  恰好 => 恰好
Span 6-7:  早晨 => 早晨

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  升起 => 升起-02
Oracle Span 10-11:  太阳 => 太阳
Oracle Span 15-16:  她 => 她
Oracle Span 16-17:  开放 => 开放-04
Oracle Span 8-9:  恰好 => 恰好
Oracle Span 6-7:  早晨 => 早晨

Dependencies:
1	然后	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	在	_	P	P	_	12	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	天	_	M	M	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	早晨	_	NT	NT	_	3	pobj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	恰好	_	AD	AD	_	12	advmod	_	_
10	在	_	P	P	_	12	prep	_	_
11	太阳	_	NN	NN	_	10	pobj	_	_
12	升起	_	VV	VV	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	时候	_	NN	NN	_	17	nsubj	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	她	_	PN	PN	_	17	nsubj	_	_
17	开放	_	VV	VV	_	0	root	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x2 / 开放-04, arg0, x3 / 她)
(x2 / 开放-04, time, x4 / 升起-02)
(x4 / 升起-02, arg0, x5 / 太阳)
(x4 / 升起-02, manner, x6 / 恰好)
(x4 / 升起-02, time, x7 / 早晨)

Input(Some(Graph((temporal :arg2 (开放-04 :time (升起-02 :time (早晨 :time 一天) :manner 恰好 :arg0 太阳) :arg0 她)),ArrayBuffer(Span(16,17,List(0),开放,开放-04,false), Span(11,12,List(1),升起,升起-02,false), Span(6,7,List(2),早晨,早晨,false), Span(8,9,List(3),恰好,恰好,false), Span(10,11,List(4),太阳,太阳,false), Span(15,16,List(5),她,她,false)),Map(2 -> 早晨, 5 -> 她, 1 -> 升起-02, 4 -> 太阳, 0 -> 开放-04, 3 -> 恰好),Map(x2 -> 开放-04, x5 -> 太阳, x7 -> 早晨, x4 -> 升起-02, x3 -> 她, x6 -> 恰好))),[Ljava.lang.String;@210ab13f,Annotation([Ljava.lang.String;@20b2475a,[Ljava.lang.String;@7857fe2,[Ljava.lang.String;@6f15d60e),Annotation([Ljava.lang.String;@1be2019a,[Ljava.lang.String;@29d80d2b,[Ledu.cmu.lti.nlp.amr.Dependency;@58e1d9d),Annotation([Ljava.lang.String;@446a1e84,[Ljava.lang.String;@4f0f2942,[Ljava.lang.String;@2657d4dd),Annotation([Ljava.lang.String;@5340477f,[Ljava.lang.String;@47caedad,[Ledu.cmu.lti.nlp.amr.Entity;@7139992f))
AMR:
(x2 / 开放-04, prep-for, x3 / 她)
(x2 / 开放-04, time, x4 / 升起-02)
(x4 / 升起-02, manner, x6 / 恰好)
(x4 / 升起-02, mod, x5 / 太阳)
(x4 / 升起-02, time, x7 / 早晨)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 24,598 microseconds
Sentence: 她 已经 精细 地 做 了 那么 长 的 准备 工作 ， 却 打 着 哈欠 说道 ： “

Oracle Span 1:  做 => 做-04
Oracle Span 2:  准备 => 准备
Oracle Span 3:  她 => 她
Oracle Span 4:  工作 => 工作
Oracle Span 5:  精细 => 精细-01
Oracle Span 6:  说道 => 说道-01
Oracle Span 7:  那么 => 那么
Oracle Span 8:  长 => 长
Spans:
Span 4-5:  做 => 做-04
Span 9-10:  准备 => 准备
Span 0-1:  她 => 她
Span 10-11:  工作 => 工作
Span 2-3:  精细 => 精细-01
Span 16-17:  说道 => 说道-01
Span 6-7:  那么 => 那么
Span 7-8:  长 => 长

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  做 => 做-04
Oracle Span 9-10:  准备 => 准备
Oracle Span 0-1:  她 => 她
Oracle Span 10-11:  工作 => 工作
Oracle Span 2-3:  精细 => 精细-01
Oracle Span 16-17:  说道 => 说道-01
Oracle Span 6-7:  那么 => 那么
Oracle Span 7-8:  长 => 长

Dependencies:
1	她	_	PN	PN	_	5	nsubj	_	_
2	已经	_	AD	AD	_	5	advmod	_	_
3	精细	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	做	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	那么	_	AD	AD	_	8	advmod	_	_
8	长	_	VA	VA	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	准备	_	NN	NN	_	11	nn	_	_
11	工作	_	NN	NN	_	5	dobj	_	_
12	,	_	PU	PU	_	5	punct	_	_
13	却	_	AD	AD	_	14	advmod	_	_
14	打	_	VV	VV	_	5	dep	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	哈欠	_	NN	NN	_	17	nn	_	_
17	说道	_	NN	NN	_	14	dobj	_	_
18	：	_	PU	PU	_	5	punct	_	_
19	“	_	VA	VA	_	5	conj	_	_

Oracle:
(x2 / 做-04, arg0, x3 / 她)
(x2 / 做-04, arg1, x5 / 工作)
(x2 / 做-04, manner, x4 / 精细-01)
(x5 / 工作, mod, x6 / 准备)
(x5 / 工作, mod, x7 / 长)
(x7 / 长, degree, x8 / 那么)

Input(Some(Graph((contrast :arg1 (做-04 :arg1 (工作 :mod (长 :degree 那么) :mod 准备) :manner 精细-01 :arg0 她) :arg2 (说道-01 :manner (打哈欠-01 :arg0 x3) :arg0 x3)),ArrayBuffer(Span(4,5,List(0),做,做-04,false), Span(10,11,List(1),工作,工作,false), Span(7,8,List(2),长,长,false), Span(6,7,List(3),那么,那么,false), Span(9,10,List(4),准备,准备,false), Span(2,3,List(5),精细,精细-01,false), Span(0,1,List(6),她,她,false), Span(16,17,List(7),说道,说道-01,false)),Map(2 -> 长, 5 -> 精细-01, 7 -> 说道-01, 1 -> 工作, 4 -> 准备, 6 -> 她, 0 -> 做-04, 3 -> 那么),Map(x2 -> 做-04, x5 -> 工作, x8 -> 那么, x7 -> 长, x4 -> 精细-01, x3 -> 她, x6 -> 准备, x9 -> 说道-01))),[Ljava.lang.String;@69504ae9,Annotation([Ljava.lang.String;@387a8303,[Ljava.lang.String;@28cda624,[Ljava.lang.String;@1500b2f3),Annotation([Ljava.lang.String;@7eecb5b8,[Ljava.lang.String;@126253fd,[Ledu.cmu.lti.nlp.amr.Dependency;@57db2b13),Annotation([Ljava.lang.String;@475c9c31,[Ljava.lang.String;@5c86a017,[Ljava.lang.String;@5c7bfdc1),Annotation([Ljava.lang.String;@5276d6ee,[Ljava.lang.String;@71687585,[Ledu.cmu.lti.nlp.amr.Entity;@1807f5a7))
AMR:
(x2 / 做-04, manner, x4 / 精细-01)
(x4 / 精细-01, degree, x3 / 她)
(x5 / 工作, mod, x6 / 准备)
(x5 / 工作, mod, x7 / 长)
(x7 / 长, degree, x8 / 那么)
(x7 / 长, mod, x2 / 做-04)
(x9 / 说道-01, domain, x5 / 工作)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 25,334 microseconds
Sentence: 我 刚刚 睡醒 ，

Oracle Span 1:  刚刚 => 刚刚
Oracle Span 2:  我 => 我
Oracle Span 3:  睡醒 => 睡醒-01
Spans:
Span 1-2:  刚刚 => 刚刚
Span 0-1:  我 => 我
Span 2-3:  睡醒 => 睡醒-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  刚刚 => 刚刚
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  睡醒 => 睡醒-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	刚刚	_	AD	AD	_	3	advmod	_	_
3	睡醒	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 睡醒-01, arg0, x2 / 我)
(x0 / 睡醒-01, time, x3 / 刚刚)

Input(Some(Graph((睡醒-01 :time 刚刚 :arg0 我),ArrayBuffer(Span(2,3,List(0),睡醒,睡醒-01,false), Span(1,2,List(1),刚刚,刚刚,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 刚刚, 0 -> 睡醒-01),Map(x2 -> 我, x3 -> 刚刚, x0 -> 睡醒-01))),[Ljava.lang.String;@1b919693,Annotation([Ljava.lang.String;@7fb4f2a9,[Ljava.lang.String;@4dc27487,[Ljava.lang.String;@6a4f1a55),Annotation([Ljava.lang.String;@7dfd3c81,[Ljava.lang.String;@2584b82d,[Ledu.cmu.lti.nlp.amr.Dependency;@7bbc8656),Annotation([Ljava.lang.String;@6933b6c6,[Ljava.lang.String;@7d3e8655,[Ljava.lang.String;@7dfb0c0f),Annotation([Ljava.lang.String;@626abbd0,[Ljava.lang.String;@169bb4dd,[Ledu.cmu.lti.nlp.amr.Entity;@1f9e9475))
AMR:
(x0 / 睡醒-01, beneficiary, x2 / 我)
(x0 / 睡醒-01, time, x3 / 刚刚)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,095 microseconds
Sentence: 真 对不起 ，

Oracle Span 1:  对不起 => 对不起-01
Oracle Span 2:  真 => 真
Spans:
Span 1-2:  对不起 => 对不起-01
Span 0-1:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对不起 => 对不起-01
Oracle Span 0-1:  真 => 真

Dependencies:
1	真	_	NN	NN	_	2	nsubj	_	_
2	对不起	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 对不起-01, degree, x2 / 真)

Input(Some(Graph((对不起-01 :degree 真),ArrayBuffer(Span(1,2,List(0),对不起,对不起-01,false), Span(0,1,List(1),真,真,false)),Map(1 -> 真, 0 -> 对不起-01),Map(x2 -> 真, x0 -> 对不起-01))),[Ljava.lang.String;@3aa078fd,Annotation([Ljava.lang.String;@d23e042,[Ljava.lang.String;@46d59067,[Ljava.lang.String;@2d0399f4),Annotation([Ljava.lang.String;@14dd7b39,[Ljava.lang.String;@66ea810,[Ledu.cmu.lti.nlp.amr.Dependency;@6cd24612),Annotation([Ljava.lang.String;@5dafbe45,[Ljava.lang.String;@2254127a,[Ljava.lang.String;@51891008),Annotation([Ljava.lang.String;@2f953efd,[Ljava.lang.String;@f68f0dc,[Ledu.cmu.lti.nlp.amr.Entity;@d2de489))
AMR:
(x0 / 对不起-01, degree, x2 / 真)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,636 microseconds
Sentence: 瞧 我 的 头发 还是 乱蓬蓬 的 … ”

Oracle Span 1:  乱蓬蓬 => 乱蓬蓬
Oracle Span 2:  头发 => 头发
Oracle Span 3:  我 => 我
Oracle Span 4:  瞧 => 瞧-01
Oracle Span 5:  还是 => 还是
Spans:
Span 5-6:  乱蓬蓬 => 乱蓬蓬
Span 3-4:  头发 => 头发
Span 1-2:  我 => 我
Span 0-1:  瞧 => 瞧-01
Span 4-5:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  乱蓬蓬 => 乱蓬蓬
Oracle Span 3-4:  头发 => 头发
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  瞧 => 瞧-01
Oracle Span 4-5:  还是 => 还是

Dependencies:
1	瞧	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	头发	_	NN	NN	_	5	nsubj	_	_
5	还是	_	VV	VV	_	0	root	_	_
6	乱蓬蓬	_	NR	NR	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	…	_	NN	NN	_	5	dobj	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x6 / 瞧-01, arg1, x7 / 乱蓬蓬)
(x7 / 乱蓬蓬, arg0, x8 / 头发)
(x7 / 乱蓬蓬, manner, x10 / 还是)
(x9 / 我, part, x8 / 头发)

Input(Some(Graph((say :arg1 (瞧-01 :arg1 (乱蓬蓬 :manner 还是 :arg0 (头发 :part-of 我)))),ArrayBuffer(Span(0,1,List(0),瞧,瞧-01,false), Span(5,6,List(1),乱蓬蓬,乱蓬蓬,false), Span(4,5,List(2),还是,还是,false), Span(3,4,List(3),头发,头发,false), Span(1,2,List(4),我,我,false)),Map(2 -> 还是, 1 -> 乱蓬蓬, 4 -> 我, 0 -> 瞧-01, 3 -> 头发),Map(x10 -> 还是, x8 -> 头发, x7 -> 乱蓬蓬, x6 -> 瞧-01, x9 -> 我))),[Ljava.lang.String;@14bdbc74,Annotation([Ljava.lang.String;@12591ac8,[Ljava.lang.String;@5a7fe64f,[Ljava.lang.String;@38145825),Annotation([Ljava.lang.String;@41330d4f,[Ljava.lang.String;@1b66c0fb,[Ledu.cmu.lti.nlp.amr.Dependency;@3e0e1046),Annotation([Ljava.lang.String;@24c1b2d2,[Ljava.lang.String;@7dc19a70,[Ljava.lang.String;@508dec2b),Annotation([Ljava.lang.String;@1e4f4a5c,[Ljava.lang.String;@37313c65,[Ledu.cmu.lti.nlp.amr.Entity;@465232e9))
AMR:
(x6 / 瞧-01, part, x8 / 头发)
(x7 / 乱蓬蓬, manner, x10 / 还是)
(x7 / 乱蓬蓬, manner, x8 / 头发)
(x9 / 我, part, x8 / 头发)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 10,517 microseconds
Sentence: 小 王子 这时 再 也 控制 不 住 自己 的 爱慕 心情 ： “

Oracle Span 1:  也 => 也
Oracle Span 2:  再 => 再-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  心情 => 心情
Oracle Span 5:  控制 => 控制-01
Oracle Span 6:  爱慕 => 爱慕-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  这时 => 这时
Spans:
Span 4-5:  也 => 也
Span 3-4:  再 => 再-01
Span 0-1:  小 => 小-01
Span 11-12:  心情 => 心情
Span 5-6:  控制 => 控制-01
Span 10-11:  爱慕 => 爱慕-01
Span 1-2:  王子 => 王子
Span 2-3:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 3-4:  再 => 再-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  心情 => 心情
Oracle Span 5-6:  控制 => 控制-01
Oracle Span 10-11:  爱慕 => 爱慕-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  这时 => 这时

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	8	nsubj	_	_
3	这时	_	AD	AD	_	6	advmod	_	_
4	再	_	AD	AD	_	6	advmod	_	_
5	也	_	AD	AD	_	6	advmod	_	_
6	控制	_	VV	VV	_	8	conj	_	_
7	不	_	AD	AD	_	8	neg	_	_
8	住	_	VV	VV	_	0	root	_	_
9	自己	_	PN	PN	_	12	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	爱慕	_	NN	NN	_	12	nn	_	_
12	心情	_	NN	NN	_	8	dobj	_	_
13	：	_	PU	PU	_	8	punct	_	_
14	“	_	VA	VA	_	8	conj	_	_

Oracle:
(x12 / 控制-01, arg0, x14 / 王子)
(x12 / 控制-01, arg1, x18 / 心情)
(x12 / 控制-01, manner, x16 / 也)
(x12 / 控制-01, manner, x17 / 再-01)
(x12 / 控制-01, time, x22 / 这时)
(x14 / 王子, mod, x15 / 小-01)
(x18 / 心情, mod, x19 / 爱慕-01)

Input(Some(Graph((possible :arg0 (控制-01 :time 这时 :arg1 (心情 :poss x14 :mod (爱慕-01 :arg0 x14)) :manner 再-01 :manner 也 :arg0 (王子 :mod 小-01) :polarity -)),ArrayBuffer(Span(5,6,List(0),控制,控制-01,false), Span(2,3,List(1),这时,这时,false), Span(11,12,List(2),心情,心情,false), Span(10,11,List(3),爱慕,爱慕-01,false), Span(3,4,List(4),再,再-01,false), Span(4,5,List(5),也,也,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小-01,false)),Map(2 -> 心情, 5 -> 也, 7 -> 小-01, 1 -> 这时, 4 -> 再-01, 6 -> 王子, 0 -> 控制-01, 3 -> 爱慕-01),Map(x16 -> 也, x22 -> 这时, x19 -> 爱慕-01, x12 -> 控制-01, x15 -> 小-01, x18 -> 心情, x14 -> 王子, x17 -> 再-01))),[Ljava.lang.String;@798162bc,Annotation([Ljava.lang.String;@1df8da7a,[Ljava.lang.String;@23941fb4,[Ljava.lang.String;@7486b455),Annotation([Ljava.lang.String;@660acfb,[Ljava.lang.String;@5d908d47,[Ledu.cmu.lti.nlp.amr.Dependency;@5efa40fe),Annotation([Ljava.lang.String;@1f9f6368,[Ljava.lang.String;@1c9b0314,[Ljava.lang.String;@45385f75),Annotation([Ljava.lang.String;@49c90a9c,[Ljava.lang.String;@2d29b4ee,[Ledu.cmu.lti.nlp.amr.Entity;@69ee81fc))
AMR:
(x12 / 控制-01, degree, x19 / 爱慕-01)
(x12 / 控制-01, manner, x16 / 也)
(x12 / 控制-01, manner, x17 / 再-01)
(x12 / 控制-01, time, x22 / 这时)
(x14 / 王子, mod, x15 / 小-01)
(x18 / 心情, mod, x19 / 爱慕-01)
(x22 / 这时, poss, x14 / 王子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.5
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.4.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 26,129 microseconds
Sentence: 你 是 多么 美丽 啊 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  多么 => 多么
Oracle Span 3:  美丽 => 美丽-01
Spans:
Span 0-1:  你 => 你
Span 2-3:  多么 => 多么
Span 3-4:  美丽 => 美丽-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  多么 => 多么
Oracle Span 3-4:  美丽 => 美丽-01

Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	多么	_	NR	NR	_	4	nsubj	_	_
4	美丽	_	VA	VA	_	2	ccomp	_	_
5	啊	_	SP	SP	_	2	dep	_	_
6	！	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 美丽-01, arg0, x4 / 你)
(x2 / 美丽-01, degree, x3 / 多么)

Input(Some(Graph((say :arg1 (美丽-01 :mode expressive :arg0 你 :degree 多么)),ArrayBuffer(Span(3,4,List(0),美丽,美丽-01,false), Span(0,1,List(1),你,你,false), Span(2,3,List(2),多么,多么,false)),Map(2 -> 多么, 1 -> 你, 0 -> 美丽-01),Map(x2 -> 美丽-01, x4 -> 你, x3 -> 多么))),[Ljava.lang.String;@6e2aa843,Annotation([Ljava.lang.String;@6f36c2f0,[Ljava.lang.String;@f58853c,[Ljava.lang.String;@1224144a),Annotation([Ljava.lang.String;@29f7cefd,[Ljava.lang.String;@700fb871,[Ledu.cmu.lti.nlp.amr.Dependency;@3b35a229),Annotation([Ljava.lang.String;@9816741,[Ljava.lang.String;@1e16c0aa,[Ljava.lang.String;@13d73f29),Annotation([Ljava.lang.String;@565f390,[Ljava.lang.String;@7dc3712,[Ledu.cmu.lti.nlp.amr.Entity;@2f67a4d3))
AMR:
(x2 / 美丽-01, degree, x3 / 多么)
(x2 / 美丽-01, quant, x4 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,542 microseconds
Sentence: 花儿 悠然自得 地 说 ： “ 是 吧 ，

Oracle Span 1:  悠然自得 => 悠然自得
Oracle Span 2:  是 => 是-03
Oracle Span 3:  花儿 => 花儿
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  悠然自得 => 悠然自得
Span 6-7:  是 => 是-03
Span 0-1:  花儿 => 花儿
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  悠然自得 => 悠然自得
Oracle Span 6-7:  是 => 是-03
Oracle Span 0-1:  花儿 => 花儿
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	花儿	_	NR	NR	_	4	nsubj	_	_
2	悠然自得	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	7	punct	_	_
7	是	_	VC	VC	_	4	ccomp	_	_
8	吧	_	SP	SP	_	7	dep	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花儿)
(x0 / 说-01, arg1, x4 / 是-03)
(x0 / 说-01, manner, x3 / 悠然自得)

Input(Some(Graph((说-01 :mode expressive :arg1 是-03 :manner 悠然自得 :arg0 花儿),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(6,7,List(1),是,是-03,false), Span(1,2,List(2),悠然自得,悠然自得,false), Span(0,1,List(3),花儿,花儿,false)),Map(2 -> 悠然自得, 1 -> 是-03, 0 -> 说-01, 3 -> 花儿),Map(x2 -> 花儿, x4 -> 是-03, x3 -> 悠然自得, x0 -> 说-01))),[Ljava.lang.String;@5e3f861,Annotation([Ljava.lang.String;@2fb0623e,[Ljava.lang.String;@49b2a47d,[Ljava.lang.String;@5be1d0a4),Annotation([Ljava.lang.String;@415b0b49,[Ljava.lang.String;@6d5620ce,[Ledu.cmu.lti.nlp.amr.Dependency;@311bf055),Annotation([Ljava.lang.String;@642a7222,[Ljava.lang.String;@7d322cad,[Ljava.lang.String;@21be3395),Annotation([Ljava.lang.String;@4f49f6af,[Ljava.lang.String;@78452606,[Ledu.cmu.lti.nlp.amr.Entity;@147e2ae7))
AMR:
(x0 / 说-01, manner, x3 / 悠然自得)
(x0 / 说-01, prep-on-behalf, x4 / 是-03)
(x3 / 悠然自得, weekday, x2 / 花儿)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,662 microseconds
Sentence: 我 是 与 太阳 同时 出生 的 … ”

Oracle Span 1:  出生 => 出生-01
Oracle Span 2:  同时 => 同时
Oracle Span 3:  太阳 => 太阳
Oracle Span 4:  我 => 我
Spans:
Span 5-6:  出生 => 出生-01
Span 4-5:  同时 => 同时
Span 3-4:  太阳 => 太阳
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  出生 => 出生-01
Oracle Span 4-5:  同时 => 同时
Oracle Span 3-4:  太阳 => 太阳
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	与	_	P	P	_	2	prep	_	_
4	太阳	_	NN	NN	_	6	nn	_	_
5	同时	_	NN	NN	_	6	nn	_	_
6	出生	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	…	_	NN	NN	_	3	pobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 出生-01, arg0, x15 / 我)
(x10 / 出生-01, time, x16 / 同时)
(x15 / 我, compared-to, x17 / 太阳)

Input(Some(Graph((say :arg1 (出生-01 :time 同时 :arg0 (我 :compared-to 太阳))),ArrayBuffer(Span(5,6,List(0),出生,出生-01,false), Span(4,5,List(1),同时,同时,false), Span(0,1,List(2),我,我,false), Span(3,4,List(3),太阳,太阳,false)),Map(2 -> 我, 1 -> 同时, 0 -> 出生-01, 3 -> 太阳),Map(x16 -> 同时, x10 -> 出生-01, x15 -> 我, x17 -> 太阳))),[Ljava.lang.String;@448c8166,Annotation([Ljava.lang.String;@4470fbd6,[Ljava.lang.String;@15d49048,[Ljava.lang.String;@7098b907),Annotation([Ljava.lang.String;@503f91c3,[Ljava.lang.String;@13526e59,[Ledu.cmu.lti.nlp.amr.Dependency;@2235eaab),Annotation([Ljava.lang.String;@17503f6b,[Ljava.lang.String;@3bcd05cb,[Ljava.lang.String;@3b6d844d),Annotation([Ljava.lang.String;@36804139,[Ljava.lang.String;@20bd8be5,[Ledu.cmu.lti.nlp.amr.Entity;@730d2164))
AMR:
(x10 / 出生-01, time, x16 / 同时)
(x15 / 我, compared-to, x17 / 太阳)
(x16 / 同时, mod, x17 / 太阳)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 7,606 microseconds
Sentence: 小 王子 看出 了 这 花儿 不 太 谦虚 ， 可是 她 确实 丽姿 动人 。

Oracle Span 1:  丽姿 => 丽姿
Oracle Span 2:  动人 => 动人-01
Oracle Span 3:  太 => 太
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  看出 => 看出-01
Oracle Span 7:  确实 => 确实
Oracle Span 8:  花儿 => 花儿
Oracle Span 9:  谦虚 => 谦虚-01
Oracle Span 10:  这 => 这
Spans:
Span 13-14:  丽姿 => 丽姿
Span 14-15:  动人 => 动人-01
Span 7-8:  太 => 太
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 2-3:  看出 => 看出-01
Span 12-13:  确实 => 确实
Span 5-6:  花儿 => 花儿
Span 8-9:  谦虚 => 谦虚-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  丽姿 => 丽姿
Oracle Span 14-15:  动人 => 动人-01
Oracle Span 7-8:  太 => 太
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  看出 => 看出-01
Oracle Span 12-13:  确实 => 确实
Oracle Span 5-6:  花儿 => 花儿
Oracle Span 8-9:  谦虚 => 谦虚-01
Oracle Span 4-5:  这 => 这

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	看出	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	这	_	DT	DT	_	6	det	_	_
6	花儿	_	NN	NN	_	9	nsubj	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	太	_	AD	AD	_	9	advmod	_	_
9	谦虚	_	VV	VV	_	3	ccomp	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	可是	_	AD	AD	_	14	advmod	_	_
12	她	_	PN	PN	_	14	nsubj	_	_
13	确实	_	AD	AD	_	14	advmod	_	_
14	丽姿	_	VV	VV	_	3	conj	_	_
15	动人	_	NN	NN	_	14	dobj	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 动人-01, arg0, x11 / 丽姿)
(x10 / 动人-01, degree, x13 / 确实)
(x2 / 看出-01, arg0, x3 / 王子)
(x2 / 看出-01, arg1, x5 / 谦虚-01)
(x2 / 看出-01, arg2, x10 / 动人-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 谦虚-01, arg0, x8 / 花儿)
(x5 / 谦虚-01, degree, x6 / 太)
(x8 / 花儿, mod, x9 / 这)

Input(Some(Graph((contrast :arg1 (看出-01 :arg2 (动人-01 :degree 确实 :arg0 (丽姿 :poss x8)) :arg1 (谦虚-01 :arg0 (花儿 :mod 这) :polarity - :degree 太) :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(2,3,List(0),看出,看出-01,false), Span(14,15,List(1),动人,动人-01,false), Span(12,13,List(2),确实,确实,false), Span(13,14,List(3),丽姿,丽姿,false), Span(8,9,List(4),谦虚,谦虚-01,false), Span(5,6,List(5),花儿,花儿,false), Span(4,5,List(6),这,这,false), Span(7,8,List(7),太,太,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小-01,false)),Map(2 -> 确实, 5 -> 花儿, 8 -> 王子, 7 -> 太, 1 -> 动人-01, 4 -> 谦虚-01, 6 -> 这, 9 -> 小-01, 0 -> 看出-01, 3 -> 丽姿),Map(x10 -> 动人-01, x2 -> 看出-01, x5 -> 谦虚-01, x13 -> 确实, x8 -> 花儿, x4 -> 小-01, x3 -> 王子, x11 -> 丽姿, x6 -> 太, x9 -> 这))),[Ljava.lang.String;@24959ca4,Annotation([Ljava.lang.String;@10289886,[Ljava.lang.String;@5c86dbc5,[Ljava.lang.String;@461ad730),Annotation([Ljava.lang.String;@4ee203eb,[Ljava.lang.String;@1a5a4e19,[Ledu.cmu.lti.nlp.amr.Dependency;@7068e664),Annotation([Ljava.lang.String;@60db1c0e,[Ljava.lang.String;@3e78b6a5,[Ljava.lang.String;@769a1df5),Annotation([Ljava.lang.String;@41f69e84,[Ljava.lang.String;@7975d1d8,[Ledu.cmu.lti.nlp.amr.Entity;@2438dcd))
AMR:
(x10 / 动人-01, ARG6, x11 / 丽姿)
(x10 / 动人-01, degree, x13 / 确实)
(x2 / 看出-01, direction, x3 / 王子)
(x2 / 看出-01, extent, x5 / 谦虚-01)
(x2 / 看出-01, prep-through, x10 / 动人-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 谦虚-01, degree, x6 / 太)
(x5 / 谦虚-01, mode, x8 / 花儿)
(x8 / 花儿, mod, x9 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 35,318 microseconds
Sentence: 她 随后 又 说道 ： “ 现在 该 是 吃 早点 的 时候 了 吧 ，

Oracle Span 1:  又 => 又
Oracle Span 2:  吃 => 吃-01
Oracle Span 3:  她 => 她
Oracle Span 4:  早点 => 早点
Oracle Span 5:  现在 => 现在
Oracle Span 6:  该 => 该-01
Oracle Span 7:  说道 => 说道-01
Spans:
Span 2-3:  又 => 又
Span 9-10:  吃 => 吃-01
Span 0-1:  她 => 她
Span 10-11:  早点 => 早点
Span 6-7:  现在 => 现在
Span 7-8:  该 => 该-01
Span 3-4:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 9-10:  吃 => 吃-01
Oracle Span 0-1:  她 => 她
Oracle Span 10-11:  早点 => 早点
Oracle Span 6-7:  现在 => 现在
Oracle Span 7-8:  该 => 该-01
Oracle Span 3-4:  说道 => 说道-01

Dependencies:
1	她	_	PN	PN	_	4	nsubj	_	_
2	随后	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说道	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	现在	_	NT	NT	_	9	dep	_	_
8	该	_	VV	VV	_	9	mmod	_	_
9	是	_	VC	VC	_	4	ccomp	_	_
10	吃	_	VV	VV	_	9	attr	_	_
11	早点	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	时候	_	NN	NN	_	10	dobj	_	_
14	了	_	SP	SP	_	10	dep	_	_
15	吧	_	SP	SP	_	9	dep	_	_
16	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 该-01, arg0, x13 / 吃-01)
(x12 / 该-01, time, x15 / 现在)
(x13 / 吃-01, arg1, x14 / 早点)
(x2 / 说道-01, arg0, x3 / 她)
(x2 / 说道-01, arg1, x12 / 该-01)
(x2 / 说道-01, manner, x4 / 又)

Input(Some(Graph((temporal :arg2 (说道-01 :arg1 (该-01 :time 现在 :arg0 (吃-01 :arg1 早点)) :mode expressive :manner 又 :arg0 她)),ArrayBuffer(Span(3,4,List(0),说道,说道-01,false), Span(7,8,List(1),该,该-01,false), Span(6,7,List(2),现在,现在,false), Span(9,10,List(3),吃,吃-01,false), Span(10,11,List(4),早点,早点,false), Span(2,3,List(5),又,又,false), Span(0,1,List(6),她,她,false)),Map(2 -> 现在, 5 -> 又, 1 -> 该-01, 4 -> 早点, 6 -> 她, 0 -> 说道-01, 3 -> 吃-01),Map(x2 -> 说道-01, x13 -> 吃-01, x12 -> 该-01, x15 -> 现在, x4 -> 又, x3 -> 她, x14 -> 早点))),[Ljava.lang.String;@24105dc5,Annotation([Ljava.lang.String;@5167f57d,[Ljava.lang.String;@64b0598,[Ljava.lang.String;@18f8cd79),Annotation([Ljava.lang.String;@3e2055d6,[Ljava.lang.String;@50029372,[Ledu.cmu.lti.nlp.amr.Dependency;@e3b3b2f),Annotation([Ljava.lang.String;@50f6ac94,[Ljava.lang.String;@6cc4cdb9,[Ljava.lang.String;@28194a50),Annotation([Ljava.lang.String;@7f2cfe3f,[Ljava.lang.String;@1a5b6f42,[Ledu.cmu.lti.nlp.amr.Entity;@5038d0b5))
AMR:
(x12 / 该-01, mode, x13 / 吃-01)
(x12 / 该-01, time, x15 / 现在)
(x13 / 吃-01, accompanier, x14 / 早点)
(x2 / 说道-01, domain, x3 / 她)
(x2 / 说道-01, manner, x4 / 又)
(x2 / 说道-01, prep-on, x12 / 该-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.3.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 24,137 microseconds
Sentence: 请 你 也 想 着 给 我 准备 一点 … ”

Oracle Span 1:  一点 => 一点
Oracle Span 2:  也 => 也
Oracle Span 3:  你 => 你
Oracle Span 4:  准备 => 准备-01
Oracle Span 5:  想 => 想-05
Oracle Span 6:  我 => 我
Oracle Span 7:  请 => 请-01
Spans:
Span 8-9:  一点 => 一点
Span 2-3:  也 => 也
Span 1-2:  你 => 你
Span 7-8:  准备 => 准备-01
Span 3-4:  想 => 想-05
Span 6-7:  我 => 我
Span 0-1:  请 => 请-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  一点 => 一点
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  准备 => 准备-01
Oracle Span 3-4:  想 => 想-05
Oracle Span 6-7:  我 => 我
Oracle Span 0-1:  请 => 请-01

Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	1	ccomp	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	给	_	P	P	_	8	prep	_	_
7	我	_	PN	PN	_	6	pobj	_	_
8	准备	_	VV	VV	_	4	ccomp	_	_
9	一点	_	AD	AD	_	10	advmod	_	_
10	…	_	VV	VV	_	8	ccomp	_	_
11	”	_	PU	PU	_	8	punct	_	_
12	你	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x14 / 请-01, arg1, x15 / 你)
(x14 / 请-01, arg2, x16 / 想-05)
(x16 / 想-05, arg1, x20 / 准备-01)
(x16 / 想-05, manner, x17 / 也)
(x20 / 准备-01, beneficiary, x23 / 我)

Input(Some(Graph((say :arg1 (请-01 :mode imperative :arg2 (想-05 :arg1 (准备-01 :arg1 (thing :quant 一点) :beneficiary 我 :arg0 x15) :arg0 x15 :manner 也) :arg1 你)),ArrayBuffer(Span(0,1,List(0),请,请-01,false), Span(3,4,List(1),想,想-05,false), Span(7,8,List(2),准备,准备-01,false), Span(8,9,List(3),一点,一点,false), Span(6,7,List(4),我,我,false), Span(2,3,List(5),也,也,false), Span(1,2,List(6),你,你,false)),Map(2 -> 准备-01, 5 -> 也, 1 -> 想-05, 4 -> 我, 6 -> 你, 0 -> 请-01, 3 -> 一点),Map(x16 -> 想-05, x25 -> 一点, x15 -> 你, x23 -> 我, x20 -> 准备-01, x14 -> 请-01, x17 -> 也))),[Ljava.lang.String;@32115b28,Annotation([Ljava.lang.String;@2ad48653,[Ljava.lang.String;@6bb4dd34,[Ljava.lang.String;@7d9f158f),Annotation([Ljava.lang.String;@45efd90f,[Ljava.lang.String;@4b8729ff,[Ledu.cmu.lti.nlp.amr.Dependency;@61710c6),Annotation([Ljava.lang.String;@3214ee6,[Ljava.lang.String;@383dc82c,[Ljava.lang.String;@4a07d605),Annotation([Ljava.lang.String;@74287ea3,[Ljava.lang.String;@7d7758be,[Ledu.cmu.lti.nlp.amr.Entity;@2bdd8394))
AMR:
(x14 / 请-01, ord, x15 / 你)
(x14 / 请-01, prep-on-behalf, x16 / 想-05)
(x16 / 想-05, manner, x17 / 也)
(x16 / 想-05, manner, x20 / 准备-01)
(x20 / 准备-01, beneficiary, x23 / 我)
(x25 / 一点, mod, x20 / 准备-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.2.0
WARNING: makeIds can't find span Id: 0.0.1.2.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,708 microseconds
Sentence: 小 王子 很 有些 不好意思 ， 于是 就 拿 着 喷壶 ， 打来 了 一 壶 清清 的 凉水 ，

Oracle Span 1:  不好意思 => 不好意思-01
Oracle Span 2:  凉水 => 凉水
Oracle Span 3:  喷壶 => 喷壶
Oracle Span 4:  壶 => 壶
Oracle Span 5:  小 => 小-01
Oracle Span 6:  很 => 很
Oracle Span 7:  打来 => 打来-01
Oracle Span 8:  拿 => 拿-01
Oracle Span 9:  有些 => 有些
Oracle Span 10:  清清 => 清清
Oracle Span 11:  王子 => 王子
Spans:
Span 4-5:  不好意思 => 不好意思-01
Span 18-19:  凉水 => 凉水
Span 10-11:  喷壶 => 喷壶
Span 15-16:  壶 => 壶
Span 0-1:  小 => 小-01
Span 2-3:  很 => 很
Span 12-13:  打来 => 打来-01
Span 8-9:  拿 => 拿-01
Span 3-4:  有些 => 有些
Span 16-17:  清清 => 清清
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  不好意思 => 不好意思-01
Oracle Span 18-19:  凉水 => 凉水
Oracle Span 10-11:  喷壶 => 喷壶
Oracle Span 15-16:  壶 => 壶
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  很 => 很
Oracle Span 12-13:  打来 => 打来-01
Oracle Span 8-9:  拿 => 拿-01
Oracle Span 3-4:  有些 => 有些
Oracle Span 16-17:  清清 => 清清
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	很	_	AD	AD	_	5	advmod	_	_
4	有些	_	AD	AD	_	5	advmod	_	_
5	不好意思	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	于是	_	AD	AD	_	9	advmod	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	拿	_	VV	VV	_	5	conj	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	喷壶	_	NN	NN	_	9	dobj	_	_
12	,	_	PU	PU	_	9	punct	_	_
13	打来	_	VV	VV	_	9	conj	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	壶	_	NN	NN	_	17	nn	_	_
17	清清	_	NN	NN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	凉水	_	NN	NN	_	13	dobj	_	_
20	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x18 / 打来-01, arg1, x20 / 凉水)
(x18 / 打来-01, manner, x24 / 拿-01)
(x2 / 不好意思-01, arg0, x6 / 王子)
(x2 / 不好意思-01, degree, x4 / 有些)
(x2 / 不好意思-01, degree, x5 / 很)
(x20 / 凉水, mod, x21 / 清清)
(x20 / 凉水, unit, x23 / 壶)
(x24 / 拿-01, arg1, x26 / 喷壶)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph((causation :arg1 (不好意思-01 :arg0 (王子 :mod 小-01) :degree 很 :degree 有些) :arg2 (打来-01 :manner (拿-01 :arg1 喷壶 :arg0 x6) :arg1 (凉水 :unit 壶 :quant 1 :mod 清清) :arg0 x6)),ArrayBuffer(Span(4,5,List(0),不好意思,不好意思-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false), Span(2,3,List(3),很,很,false), Span(3,4,List(4),有些,有些,false), Span(12,13,List(5),打来,打来-01,false), Span(8,9,List(6),拿,拿-01,false), Span(10,11,List(7),喷壶,喷壶,false), Span(18,19,List(8),凉水,凉水,false), Span(15,16,List(9),壶,壶,false), Span(16,17,List(10),清清,清清,false)),Map(2 -> 小-01, 5 -> 打来-01, 8 -> 凉水, 7 -> 喷壶, 1 -> 王子, 4 -> 有些, 6 -> 拿-01, 9 -> 壶, 0 -> 不好意思-01, 10 -> 清清, 3 -> 很),Map(x2 -> 不好意思-01, x5 -> 很, x21 -> 清清, x7 -> 小-01, x24 -> 拿-01, x18 -> 打来-01, x4 -> 有些, x23 -> 壶, x26 -> 喷壶, x6 -> 王子, x20 -> 凉水))),[Ljava.lang.String;@5f9edf14,Annotation([Ljava.lang.String;@68746f22,[Ljava.lang.String;@2f01783a,[Ljava.lang.String;@68878f6d),Annotation([Ljava.lang.String;@41488b16,[Ljava.lang.String;@a8ef162,[Ledu.cmu.lti.nlp.amr.Dependency;@2eea88a1),Annotation([Ljava.lang.String;@7ac296f6,[Ljava.lang.String;@7fd7a283,[Ljava.lang.String;@22f59fa),Annotation([Ljava.lang.String;@78fa769e,[Ljava.lang.String;@16612a51,[Ledu.cmu.lti.nlp.amr.Entity;@54e041a4))
AMR:
(x18 / 打来-01, manner, x24 / 拿-01)
(x18 / 打来-01, snt1, x20 / 凉水)
(x18 / 打来-01, time, x2 / 不好意思-01)
(x2 / 不好意思-01, degree, x4 / 有些)
(x2 / 不好意思-01, degree, x5 / 很)
(x2 / 不好意思-01, prep-on-behalf, x6 / 王子)
(x20 / 凉水, mod, x21 / 清清)
(x20 / 凉水, unit, x23 / 壶)
(x24 / 拿-01, mod, x26 / 喷壶)
(x6 / 王子, mod, x7 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 40,969 microseconds
Sentence: 他 浇灌 着 花儿 。

Oracle Span 1:  他 => 他
Oracle Span 2:  浇灌 => 浇灌-01
Oracle Span 3:  花儿 => 花儿
Spans:
Span 0-1:  他 => 他
Span 1-2:  浇灌 => 浇灌-01
Span 3-4:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  浇灌 => 浇灌-01
Oracle Span 3-4:  花儿 => 花儿

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	浇灌	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	花儿	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 浇灌-01, arg0, x2 / 他)
(x0 / 浇灌-01, arg1, x3 / 花儿)

Input(Some(Graph((浇灌-01 :arg1 花儿 :arg0 他),ArrayBuffer(Span(1,2,List(0),浇灌,浇灌-01,false), Span(3,4,List(1),花儿,花儿,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 花儿, 0 -> 浇灌-01),Map(x2 -> 他, x3 -> 花儿, x0 -> 浇灌-01))),[Ljava.lang.String;@2c78324b,Annotation([Ljava.lang.String;@79defdc,[Ljava.lang.String;@18317edc,[Ljava.lang.String;@4e0ae11f),Annotation([Ljava.lang.String;@238d68ff,[Ljava.lang.String;@4b86805d,[Ledu.cmu.lti.nlp.amr.Dependency;@5852c06f),Annotation([Ljava.lang.String;@4149c063,[Ljava.lang.String;@9cb8225,[Ljava.lang.String;@76b07f29),Annotation([Ljava.lang.String;@38af9828,[Ljava.lang.String;@376a0d86,[Ledu.cmu.lti.nlp.amr.Entity;@62656be4))
AMR:
(x0 / 浇灌-01, ARG6, x3 / 花儿)
(x0 / 浇灌-01, prep-from, x2 / 他)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,430 microseconds
Sentence: 于是 ， 就 这样 ， 这 朵 花儿 就 以 她 那 有点 敏感 多疑 的 虚荣心 折磨 着 小 王子 。

Oracle Span 1:  多疑 => 多疑
Oracle Span 2:  小 => 小
Oracle Span 3:  就 => 就
Oracle Span 4:  折磨 => 折磨-01
Oracle Span 5:  敏感 => 敏感
Oracle Span 6:  有点 => 有点
Oracle Span 7:  王子 => 王子
Oracle Span 8:  花儿 => 花儿
Oracle Span 9:  虚荣心 => 虚荣心
Oracle Span 10:  这 => 这
Oracle Span 11:  这样 => 这样-01
Oracle Span 12:  那 => 那
Spans:
Span 14-15:  多疑 => 多疑
Span 19-20:  小 => 小
Span 2-3:  就 => 就
Span 17-18:  折磨 => 折磨-01
Span 13-14:  敏感 => 敏感
Span 12-13:  有点 => 有点
Span 20-21:  王子 => 王子
Span 7-8:  花儿 => 花儿
Span 16-17:  虚荣心 => 虚荣心
Span 5-6:  这 => 这
Span 3-4:  这样 => 这样-01
Span 11-12:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  多疑 => 多疑
Oracle Span 19-20:  小 => 小
Oracle Span 2-3:  就 => 就
Oracle Span 17-18:  折磨 => 折磨-01
Oracle Span 13-14:  敏感 => 敏感
Oracle Span 12-13:  有点 => 有点
Oracle Span 20-21:  王子 => 王子
Oracle Span 7-8:  花儿 => 花儿
Oracle Span 16-17:  虚荣心 => 虚荣心
Oracle Span 5-6:  这 => 这
Oracle Span 3-4:  这样 => 这样-01
Oracle Span 11-12:  那 => 那

Dependencies:
1	于是	_	AD	AD	_	18	advmod	_	_
2	,	_	PU	PU	_	18	punct	_	_
3	就	_	P	P	_	18	prep	_	_
4	这样	_	AD	AD	_	14	advmod	_	_
5	,	_	PU	PU	_	14	punct	_	_
6	这	_	DT	DT	_	8	det	_	_
7	朵	_	M	M	_	6	clf	_	_
8	花儿	_	NN	NN	_	14	nsubj	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	以	_	P	P	_	14	prep	_	_
11	她	_	PN	PN	_	13	nn	_	_
12	那	_	DT	DT	_	13	det	_	_
13	有点	_	NN	NN	_	10	pobj	_	_
14	敏感	_	VA	VA	_	15	rcmod	_	_
15	多疑	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	虚荣心	_	NN	NN	_	3	pobj	_	_
18	折磨	_	VV	VV	_	0	root	_	_
19	着	_	AS	AS	_	18	asp	_	_
20	小	_	JJ	JJ	_	21	amod	_	_
21	王子	_	NN	NN	_	18	dobj	_	_
22	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x20 / 这样-01, manner, x21 / 就)
(x22 / 折磨-01, arg0, x23 / 花儿)
(x22 / 折磨-01, arg1, x25 / 王子)
(x22 / 折磨-01, manner, x27 / 虚荣心)
(x23 / 花儿, mod, x24 / 这)
(x25 / 王子, mod, x26 / 小)
(x27 / 虚荣心, degree, x30 / 有点)
(x27 / 虚荣心, mod, x28 / 多疑)
(x27 / 虚荣心, mod, x29 / 敏感)
(x27 / 虚荣心, mod, x31 / 那)

Input(Some(Graph((and :op (这样-01 :manner 就) :op (折磨-01 :manner (虚荣心 :poss x23 :mod 那 :degree 有点 :mod 敏感 :mod 多疑) :arg1 (王子 :mod 小) :arg0 (花儿 :mod 这))),ArrayBuffer(Span(3,4,List(0),这样,这样-01,false), Span(2,3,List(1),就,就,false), Span(17,18,List(2),折磨,折磨-01,false), Span(16,17,List(3),虚荣心,虚荣心,false), Span(11,12,List(4),那,那,false), Span(12,13,List(5),有点,有点,false), Span(13,14,List(6),敏感,敏感,false), Span(14,15,List(7),多疑,多疑,false), Span(20,21,List(8),王子,王子,false), Span(19,20,List(9),小,小,false), Span(7,8,List(10),花儿,花儿,false), Span(5,6,List(11),这,这,false)),Map(2 -> 折磨-01, 5 -> 有点, 8 -> 王子, 7 -> 多疑, 1 -> 就, 4 -> 那, 11 -> 这, 6 -> 敏感, 9 -> 小, 0 -> 这样-01, 10 -> 花儿, 3 -> 虚荣心),Map(x28 -> 多疑, x22 -> 折磨-01, x25 -> 王子, x31 -> 那, x30 -> 有点, x27 -> 虚荣心, x21 -> 就, x24 -> 这, x23 -> 花儿, x26 -> 小, x29 -> 敏感, x20 -> 这样-01))),[Ljava.lang.String;@17d919b6,Annotation([Ljava.lang.String;@53f3bdbd,[Ljava.lang.String;@34129c78,[Ljava.lang.String;@7d61eb55),Annotation([Ljava.lang.String;@222a59e6,[Ljava.lang.String;@6c7a164b,[Ledu.cmu.lti.nlp.amr.Dependency;@4c2bb6e0),Annotation([Ljava.lang.String;@3e62d773,[Ljava.lang.String;@4ef74c30,[Ljava.lang.String;@7283d3eb),Annotation([Ljava.lang.String;@638ef7ed,[Ljava.lang.String;@4bff7da0,[Ledu.cmu.lti.nlp.amr.Entity;@3f1d2e23))
AMR:
(x20 / 这样-01, ARG0, x24 / 这)
(x20 / 这样-01, manner, x21 / 就)
(x22 / 折磨-01, manner, x27 / 虚荣心)
(x22 / 折磨-01, snt3, x25 / 王子)
(x23 / 花儿, mod, x24 / 这)
(x24 / 这, domain, x29 / 敏感)
(x25 / 王子, mod, x26 / 小)
(x27 / 虚荣心, degree, x30 / 有点)
(x27 / 虚荣心, mod, x28 / 多疑)
(x27 / 虚荣心, mod, x29 / 敏感)
(x27 / 虚荣心, mod, x31 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.3
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 55,540 microseconds
Sentence: 例如 ， 有 一 天 ， 她 向 小 王子 讲起 她 身 上 长 的 四 根 刺 ： “ 老虎 ， 让 它 张 着 爪子 来 吧 ！ ”

Oracle Span 1:  例如 => 例如-01
Oracle Span 2:  刺 => 刺
Oracle Span 3:  她 => 她
Oracle Span 4:  小 => 小-01
Oracle Span 5:  张 => 张-01
Oracle Span 6:  来 => 来-01
Oracle Span 7:  爪子 => 爪子
Oracle Span 8:  王子 => 王子
Oracle Span 9:  老虎 => 老虎
Oracle Span 10:  让 => 让-02
Oracle Span 11:  长 => 长-01
Spans:
Span 0-1:  例如 => 例如-01
Span 18-19:  刺 => 刺
Span 6-7:  她 => 她
Span 8-9:  小 => 小-01
Span 25-26:  张 => 张-01
Span 28-29:  来 => 来-01
Span 27-28:  爪子 => 爪子
Span 9-10:  王子 => 王子
Span 21-22:  老虎 => 老虎
Span 23-24:  让 => 让-02
Span 14-15:  长 => 长-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  例如 => 例如-01
Oracle Span 18-19:  刺 => 刺
Oracle Span 6-7:  她 => 她
Oracle Span 8-9:  小 => 小-01
Oracle Span 25-26:  张 => 张-01
Oracle Span 28-29:  来 => 来-01
Oracle Span 27-28:  爪子 => 爪子
Oracle Span 9-10:  王子 => 王子
Oracle Span 21-22:  老虎 => 老虎
Oracle Span 23-24:  让 => 让-02
Oracle Span 14-15:  长 => 长-01

Dependencies:
1	例如	_	AD	AD	_	3	advmod	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	天	_	M	M	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	她	_	PN	PN	_	11	nsubj	_	_
8	向	_	P	P	_	11	prep	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	8	pobj	_	_
11	讲起	_	VV	VV	_	3	dep	_	_
12	她	_	PN	PN	_	15	nsubj	_	_
13	身	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	15	loc	_	_
15	长	_	VA	VA	_	19	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	四	_	CD	CD	_	18	nummod	_	_
18	根	_	M	M	_	19	clf	_	_
19	刺	_	NN	NN	_	11	dobj	_	_
20	：	_	PU	PU	_	3	punct	_	_
21	“	_	PU	PU	_	24	punct	_	_
22	老虎	_	NN	NN	_	24	prep	_	_
23	,	_	PU	PU	_	24	punct	_	_
24	让	_	VV	VV	_	3	dep	_	_
25	它	_	PN	PN	_	24	dobj	_	_
26	张	_	NR	NR	_	27	dep	_	_
27	着	_	VV	VV	_	24	dep	_	_
28	爪子	_	NT	NT	_	29	lobj	_	_
29	来	_	LC	LC	_	27	loc	_	_
30	吧	_	SP	SP	_	24	dep	_	_
31	！	_	PU	PU	_	3	punct	_	_
32	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x29 / 让-02, arg1, x30 / 老虎)
(x29 / 让-02, arg2, x31 / 来-01)
(x31 / 来-01, manner, x32 / 张-01)
(x32 / 张-01, arg1, x35 / 爪子)
(x36 / 王子, mod, x37 / 小-01)
(x38 / 长-01, arg1, x41 / 刺)

Input(Some(Graph((例如-01 :arg0 (讲-01 :arg0 她 :arg1 (让-02 :arg2 (来-01 :arg0 x30 :manner (张-01 :arg1 爪子 :arg0 x30)) :arg1 老虎) :arg2 (王子 :mod 小-01) :topic (长-01 :arg1 (刺 :quant 4) :arg0 (身上 :poss x28)) :mode expressive)),ArrayBuffer(Span(0,1,List(0),例如,例如-01,false), Span(6,7,List(1),她,她,false), Span(23,24,List(2),让,让-02,false), Span(28,29,List(3),来,来-01,false), Span(25,26,List(4),张,张-01,false), Span(27,28,List(5),爪子,爪子,false), Span(21,22,List(6),老虎,老虎,false), Span(9,10,List(7),王子,王子,false), Span(8,9,List(8),小,小-01,false), Span(14,15,List(9),长,长-01,false), Span(18,19,List(10),刺,刺,false)),Map(2 -> 让-02, 5 -> 爪子, 8 -> 小-01, 7 -> 王子, 1 -> 她, 4 -> 张-01, 6 -> 老虎, 9 -> 长-01, 0 -> 例如-01, 10 -> 刺, 3 -> 来-01),Map(x28 -> 她, x37 -> 小-01, x25 -> 例如-01, x31 -> 来-01, x30 -> 老虎, x36 -> 王子, x41 -> 刺, x38 -> 长-01, x32 -> 张-01, x35 -> 爪子, x29 -> 让-02))),[Ljava.lang.String;@536dbea0,Annotation([Ljava.lang.String;@47c81abf,[Ljava.lang.String;@776a6d9b,[Ljava.lang.String;@21d03963),Annotation([Ljava.lang.String;@1f760b47,[Ljava.lang.String;@18ece7f4,[Ledu.cmu.lti.nlp.amr.Dependency;@3cce57c7),Annotation([Ljava.lang.String;@1cf56a1c,[Ljava.lang.String;@33f676f6,[Ljava.lang.String;@4c5ae43b),Annotation([Ljava.lang.String;@264f218,[Ljava.lang.String;@3576ddc2,[Ledu.cmu.lti.nlp.amr.Entity;@35b74c5c))
AMR:
(x25 / 例如-01, snt1, x28 / 她)
(x29 / 让-02, snt1, x32 / 张-01)
(x29 / 让-02, value, x30 / 老虎)
(x29 / 让-02, value, x41 / 刺)
(x31 / 来-01, manner, x32 / 张-01)
(x31 / 来-01, manner, x35 / 爪子)
(x36 / 王子, mod, x37 / 小-01)
(x36 / 王子, mod, x38 / 长-01)
(x37 / 小-01, value, x28 / 她)
(x41 / 刺, prep-out, x38 / 长-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.1
Decoded in 49,761 microseconds
Sentence: 小 王子 顶 了 她 一 句 ： “ 在 我 这个 星球 上 没有 老虎 ，

Oracle Span 1:  她 => 她
Oracle Span 2:  小 => 小-01
Oracle Span 3:  星球 => 星球
Oracle Span 4:  王子 => 王子
Oracle Span 5:  老虎 => 老虎
Oracle Span 6:  顶 => 顶
Spans:
Span 4-5:  她 => 她
Span 0-1:  小 => 小-01
Span 12-13:  星球 => 星球
Span 1-2:  王子 => 王子
Span 15-16:  老虎 => 老虎
Span 2-3:  顶 => 顶

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  老虎 => 老虎
Oracle Span 2-3:  顶 => 顶

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	顶	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	她	_	PN	PN	_	7	nsubj	_	_
6	一	_	NT	NT	_	7	tmod	_	_
7	句	_	VV	VV	_	3	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	15	punct	_	_
10	在	_	P	P	_	15	prep	_	_
11	我	_	PN	PN	_	13	nn	_	_
12	这个	_	NN	NN	_	13	nn	_	_
13	星球	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	10	plmod	_	_
15	没有	_	VE	VE	_	7	ccomp	_	_
16	老虎	_	NN	NN	_	15	dobj	_	_
17	,	_	PU	PU	_	7	punct	_	_
18	一	_	NT	NT	_	15	xsubj	_	_
19	她	_	PN	PN	_	15	xsubj	_	_

Oracle:
(x0 / 顶, arg0, x2 / 王子)
(x0 / 顶, arg2, x11 / 她)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((顶 :arg1 (说-01 :arg0 x2 :arg1 (有-03 :polarity - :arg0 (星球 :poss x2 :mod 这) :arg1 老虎)) :arg2 她 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),顶,顶,false), Span(12,13,List(1),星球,星球,false), Span(15,16,List(2),老虎,老虎,false), Span(4,5,List(3),她,她,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false)),Map(2 -> 老虎, 5 -> 小-01, 1 -> 星球, 4 -> 王子, 0 -> 顶, 3 -> 她),Map(x22 -> 星球, x2 -> 王子, x25 -> 老虎, x3 -> 小-01, x11 -> 她, x0 -> 顶))),[Ljava.lang.String;@2e570ded,Annotation([Ljava.lang.String;@b86de0d,[Ljava.lang.String;@81d9a72,[Ljava.lang.String;@747f281),Annotation([Ljava.lang.String;@1169afe1,[Ljava.lang.String;@2ca26d77,[Ledu.cmu.lti.nlp.amr.Dependency;@4808bc9b),Annotation([Ljava.lang.String;@70e38ce1,[Ljava.lang.String;@2ca923bb,[Ljava.lang.String;@13df2a8c),Annotation([Ljava.lang.String;@1ebea008,[Ljava.lang.String;@72d6b3ba,[Ledu.cmu.lti.nlp.amr.Entity;@1787f2a0))
AMR:
(x0 / 顶, value, x11 / 她)
(x0 / 顶, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x22 / 星球, poss, x11 / 她)
(x25 / 老虎, location, x22 / 星球)

WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,049 microseconds
Sentence: 而且 ， 老虎 是 不 会 吃 草 的 ” 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  吃 => 吃-01
Oracle Span 3:  老虎 => 老虎
Oracle Span 4:  草 => 草
Spans:
Span 5-6:  会 => 会-02
Span 6-7:  吃 => 吃-01
Span 2-3:  老虎 => 老虎
Span 7-8:  草 => 草

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 6-7:  吃 => 吃-01
Oracle Span 2-3:  老虎 => 老虎
Oracle Span 7-8:  草 => 草

Dependencies:
1	而且	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	老虎	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	不	_	AD	AD	_	7	neg	_	_
6	会	_	VV	VV	_	7	mmod	_	_
7	吃	_	VV	VV	_	4	attr	_	_
8	草	_	NN	NN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	”	_	PU	PU	_	4	punct	_	_
11	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 吃-01)
(x12 / 吃-01, arg0, x13 / 老虎)
(x12 / 吃-01, arg1, x14 / 草)

Input(Some(Graph((say :arg1 (progression :arg2 (会-02 :polarity - :arg0 (吃-01 :arg1 草 :arg0 老虎)))),ArrayBuffer(Span(5,6,List(0),会,会-02,false), Span(6,7,List(1),吃,吃-01,false), Span(7,8,List(2),草,草,false), Span(2,3,List(3),老虎,老虎,false)),Map(2 -> 草, 1 -> 吃-01, 0 -> 会-02, 3 -> 老虎),Map(x13 -> 老虎, x12 -> 吃-01, x11 -> 会-02, x14 -> 草))),[Ljava.lang.String;@7de62196,Annotation([Ljava.lang.String;@163370c2,[Ljava.lang.String;@51bf5add,[Ljava.lang.String;@7905a0b8),Annotation([Ljava.lang.String;@35a3d49f,[Ljava.lang.String;@389b0789,[Ledu.cmu.lti.nlp.amr.Dependency;@13d9cbf5),Annotation([Ljava.lang.String;@478db956,[Ljava.lang.String;@6ca18a14,[Ljava.lang.String;@c667f46),Annotation([Ljava.lang.String;@51bd8b5c,[Ljava.lang.String;@7b50df34,[Ledu.cmu.lti.nlp.amr.Entity;@1b410b60))
AMR:
(x11 / 会-02, prep-on-behalf, x13 / 老虎)
(x11 / 会-02, snt1, x14 / 草)
(x12 / 吃-01, direction, x14 / 草)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 8,354 microseconds
Sentence: 花儿 轻声 说道 ： “ 我 并 不 是 草 。 ”

Oracle Span 1:  并 => 并
Oracle Span 2:  花儿 => 花儿
Oracle Span 3:  草 => 草
Oracle Span 4:  说道 => 说道-01
Oracle Span 5:  轻声 => 轻声
Spans:
Span 6-7:  并 => 并
Span 0-1:  花儿 => 花儿
Span 9-10:  草 => 草
Span 2-3:  说道 => 说道-01
Span 1-2:  轻声 => 轻声

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  并 => 并
Oracle Span 0-1:  花儿 => 花儿
Oracle Span 9-10:  草 => 草
Oracle Span 2-3:  说道 => 说道-01
Oracle Span 1-2:  轻声 => 轻声

Dependencies:
1	花儿	_	NN	NN	_	2	nn	_	_
2	轻声	_	NN	NN	_	3	nsubj	_	_
3	说道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	9	punct	_	_
6	我	_	PN	PN	_	9	nsubj	_	_
7	并	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	3	ccomp	_	_
10	草	_	NN	NN	_	9	attr	_	_
11	。	_	PU	PU	_	3	punct	_	_
12	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 花儿)
(x0 / 说道-01, arg1, x4 / 草)
(x0 / 说道-01, manner, x3 / 轻声)

Input(Some(Graph((说道-01 :arg1 (草 :polarity - :domain (x2 :manner 并)) :manner 轻声 :arg0 花儿),ArrayBuffer(Span(2,3,List(0),说道,说道-01,false), Span(9,10,List(1),草,草,false), Span(6,7,List(2),并,并,false), Span(1,2,List(3),轻声,轻声,false), Span(0,1,List(4),花儿,花儿,false)),Map(2 -> 并, 1 -> 草, 4 -> 花儿, 0 -> 说道-01, 3 -> 轻声),Map(x2 -> 花儿, x8 -> 并, x4 -> 草, x3 -> 轻声, x0 -> 说道-01))),[Ljava.lang.String;@2462cb01,Annotation([Ljava.lang.String;@19b843ba,[Ljava.lang.String;@64ec96c6,[Ljava.lang.String;@77659b30),Annotation([Ljava.lang.String;@456d6c1e,[Ljava.lang.String;@1e13529a,[Ledu.cmu.lti.nlp.amr.Dependency;@1ec9bd38),Annotation([Ljava.lang.String;@452e19ca,[Ljava.lang.String;@6b0d80ed,[Ljava.lang.String;@6f8e8894),Annotation([Ljava.lang.String;@3cfdd820,[Ljava.lang.String;@928763c,[Ledu.cmu.lti.nlp.amr.Entity;@e25951c))
AMR:
(x0 / 说道-01, manner, x3 / 轻声)
(x0 / 说道-01, manner, x8 / 并)
(x3 / 轻声, mod, x2 / 花儿)
(x8 / 并, prep-against, x4 / 草)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,257 microseconds
Sentence: “ 真 对不起 。 ”

Oracle Span 1:  对不起 => 对不起-02
Oracle Span 2:  真 => 真
Spans:
Span 2-3:  对不起 => 对不起-02
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  对不起 => 对不起-02
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	对不起	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 对不起-02, degree, x3 / 真)

Input(Some(Graph((say :arg1 (对不起-02 :degree 真)),ArrayBuffer(Span(2,3,List(0),对不起,对不起-02,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 对不起-02),Map(x2 -> 对不起-02, x3 -> 真))),[Ljava.lang.String;@15f47664,Annotation([Ljava.lang.String;@471a9022,[Ljava.lang.String;@dc9876b,[Ljava.lang.String;@2f666ebb),Annotation([Ljava.lang.String;@19976a65,[Ljava.lang.String;@a1f72f5,[Ledu.cmu.lti.nlp.amr.Dependency;@4b2c5e02),Annotation([Ljava.lang.String;@57a3e26a,[Ljava.lang.String;@75c56eb9,[Ljava.lang.String;@4bc222e),Annotation([Ljava.lang.String;@2dc9b0f5,[Ljava.lang.String;@6531a794,[Ledu.cmu.lti.nlp.amr.Entity;@3b5fad2d))
AMR:
(x2 / 对不起-02, degree, x3 / 真)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,601 microseconds
Sentence: “ 我 并 不 怕 什么 老虎 ， 可 我 讨厌 穿堂风 。

Oracle Span 1:  并 => 并
Oracle Span 2:  怕 => 怕-01
Oracle Span 3:  我 => 我
Oracle Span 4:  穿堂风 => 穿堂风
Oracle Span 5:  老虎 => 老虎
Oracle Span 6:  讨厌 => 讨厌-01
Spans:
Span 2-3:  并 => 并
Span 4-5:  怕 => 怕-01
Span 1-2:  我 => 我
Span 11-12:  穿堂风 => 穿堂风
Span 6-7:  老虎 => 老虎
Span 10-11:  讨厌 => 讨厌-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  并 => 并
Oracle Span 4-5:  怕 => 怕-01
Oracle Span 1-2:  我 => 我
Oracle Span 11-12:  穿堂风 => 穿堂风
Oracle Span 6-7:  老虎 => 老虎
Oracle Span 10-11:  讨厌 => 讨厌-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	并	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	怕	_	VV	VV	_	0	root	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	老虎	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	可	_	VV	VV	_	5	dep	_	_
10	我	_	PN	PN	_	12	nn	_	_
11	讨厌	_	NN	NN	_	12	nn	_	_
12	穿堂风	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 讨厌-01, arg1, x12 / 穿堂风)
(x5 / 怕-01, arg0, x8 / 我)
(x5 / 怕-01, arg1, x9 / 老虎)
(x5 / 怕-01, manner, x7 / 并)

Input(Some(Graph((say :arg1 (contrast :arg1 (怕-01 :arg1 老虎 :arg0 我 :manner 并 :polarity -) :arg2 (讨厌-01 :arg1 穿堂风 :arg0 x8))),ArrayBuffer(Span(4,5,List(0),怕,怕-01,false), Span(6,7,List(1),老虎,老虎,false), Span(1,2,List(2),我,我,false), Span(2,3,List(3),并,并,false), Span(10,11,List(4),讨厌,讨厌-01,false), Span(11,12,List(5),穿堂风,穿堂风,false)),Map(2 -> 我, 5 -> 穿堂风, 1 -> 老虎, 4 -> 讨厌-01, 0 -> 怕-01, 3 -> 并),Map(x10 -> 讨厌-01, x5 -> 怕-01, x8 -> 我, x12 -> 穿堂风, x7 -> 并, x9 -> 老虎))),[Ljava.lang.String;@5e17553a,Annotation([Ljava.lang.String;@3eb91815,[Ljava.lang.String;@56dc1551,[Ljava.lang.String;@102cec62),Annotation([Ljava.lang.String;@74f6c5d8,[Ljava.lang.String;@27912e3,[Ledu.cmu.lti.nlp.amr.Dependency;@34b9f960),Annotation([Ljava.lang.String;@43015c69,[Ljava.lang.String;@19b89d4,[Ljava.lang.String;@4bbf6d0e),Annotation([Ljava.lang.String;@30b6ffe0,[Ljava.lang.String;@791d1f8b,[Ledu.cmu.lti.nlp.amr.Entity;@2415fc55))
AMR:
(x10 / 讨厌-01, location, x12 / 穿堂风)
(x10 / 讨厌-01, location, x9 / 老虎)
(x5 / 怕-01, location, x9 / 老虎)
(x5 / 怕-01, manner, x7 / 并)
(x5 / 怕-01, manner, x8 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 12,874 microseconds
Sentence: 我 猜想 你 没有 为 我 准备 个 屏风 吗 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  准备 => 准备-01
Oracle Span 3:  屏风 => 屏风
Oracle Span 4:  我 => 我
Oracle Span 5:  猜想 => 猜想-01
Spans:
Span 2-3:  你 => 你
Span 6-7:  准备 => 准备-01
Span 8-9:  屏风 => 屏风
Span 0-1:  我 => 我
Span 1-2:  猜想 => 猜想-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 6-7:  准备 => 准备-01
Oracle Span 8-9:  屏风 => 屏风
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  猜想 => 猜想-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	猜想	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	没有	_	VV	VV	_	7	neg	_	_
5	为	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	准备	_	VV	VV	_	2	dep	_	_
8	个	_	M	M	_	9	dep	_	_
9	屏风	_	NN	NN	_	7	dobj	_	_
10	吗	_	SP	SP	_	2	dep	_	_
11	？	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x17 / 猜想-01, arg0, x18 / 我)
(x17 / 猜想-01, arg1, x19 / 准备-01)
(x19 / 准备-01, arg0, x21 / 你)
(x19 / 准备-01, arg1, x23 / 屏风)

Input(Some(Graph((say :arg1 (猜想-01 :arg1 (准备-01 :beneficiary x18 :arg1 (屏风 :quant 1) :arg0 你 :polarity -) :arg0 我)),ArrayBuffer(Span(1,2,List(0),猜想,猜想-01,false), Span(6,7,List(1),准备,准备-01,false), Span(8,9,List(2),屏风,屏风,false), Span(2,3,List(3),你,你,false), Span(0,1,List(4),我,我,false)),Map(2 -> 屏风, 1 -> 准备-01, 4 -> 我, 0 -> 猜想-01, 3 -> 你),Map(x19 -> 准备-01, x21 -> 你, x18 -> 我, x23 -> 屏风, x17 -> 猜想-01))),[Ljava.lang.String;@14f232c4,Annotation([Ljava.lang.String;@13bc8645,[Ljava.lang.String;@24c22fe,[Ljava.lang.String;@93081b6),Annotation([Ljava.lang.String;@cd1e646,[Ljava.lang.String;@7ba8c737,[Ledu.cmu.lti.nlp.amr.Dependency;@1890516e),Annotation([Ljava.lang.String;@15a04efb,[Ljava.lang.String;@16c069df,[Ljava.lang.String;@2bec854f),Annotation([Ljava.lang.String;@31edaa7d,[Ljava.lang.String;@26adfd2d,[Ledu.cmu.lti.nlp.amr.Entity;@3336e6b6))
AMR:
(x17 / 猜想-01, manner, x18 / 我)
(x17 / 猜想-01, snt11, x21 / 你)
(x17 / 猜想-01, year, x19 / 准备-01)
(x19 / 准备-01, prep-along-with, x23 / 屏风)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,168 microseconds
Sentence: 小 王子 思忖 着 ： “ 讨厌 穿堂风 … 这 对 一 株 植物 来 说 ， 真 不 走运 ， 这 朵 花儿 真 不 大 好 伺候 … ”

Oracle Span 1:  伺候 => 伺候-01
Oracle Span 2:  好 => 好
Oracle Span 3:  小 => 小-01
Oracle Span 4:  思忖 => 思忖-01
Oracle Span 5:  植物 => 植物
Oracle Span 6:  王子 => 王子
Oracle Span 7:  真 => 真
Oracle Span 8:  穿堂风 => 穿堂风
Oracle Span 9:  花儿 => 花儿
Oracle Span 10:  讨厌 => 讨厌-01
Oracle Span 11:  走运 => 走运
Oracle Span 12:  这 => 这
Spans:
Span 28-29:  伺候 => 伺候-01
Span 27-28:  好 => 好
Span 0-1:  小 => 小-01
Span 2-3:  思忖 => 思忖-01
Span 13-14:  植物 => 植物
Span 1-2:  王子 => 王子
Span 17-18:  真 => 真
Span 7-8:  穿堂风 => 穿堂风
Span 23-24:  花儿 => 花儿
Span 6-7:  讨厌 => 讨厌-01
Span 19-20:  走运 => 走运
Span 9-10:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 28-29:  伺候 => 伺候-01
Oracle Span 27-28:  好 => 好
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  思忖 => 思忖-01
Oracle Span 13-14:  植物 => 植物
Oracle Span 1-2:  王子 => 王子
Oracle Span 17-18:  真 => 真
Oracle Span 7-8:  穿堂风 => 穿堂风
Oracle Span 23-24:  花儿 => 花儿
Oracle Span 6-7:  讨厌 => 讨厌-01
Oracle Span 19-20:  走运 => 走运
Oracle Span 9-10:  这 => 这

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	思忖	_	VV	VV	_	0	root	_	_
4	着	_	VV	VV	_	3	comod	_	_
5	：	_	PU	PU	_	3	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	讨厌	_	NN	NN	_	8	nn	_	_
8	穿堂风	_	NN	NN	_	3	dobj	_	_
9	…	_	PU	PU	_	10	punct	_	_
10	这	_	PN	PN	_	8	prnmod	_	_
11	对	_	P	P	_	10	conj	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	株	_	M	M	_	14	clf	_	_
14	植物	_	NN	NN	_	16	nsubj	_	_
15	来	_	MSP	MSP	_	16	prtmod	_	_
16	说	_	VV	VV	_	11	pccomp	_	_
17	,	_	PU	PU	_	16	punct	_	_
18	真	_	AD	AD	_	20	advmod	_	_
19	不	_	AD	AD	_	20	neg	_	_
20	走运	_	VV	VV	_	27	dep	_	_
21	,	_	PU	PU	_	27	punct	_	_
22	这	_	DT	DT	_	24	det	_	_
23	朵	_	M	M	_	22	clf	_	_
24	花儿	_	NN	NN	_	27	nsubj	_	_
25	真	_	AD	AD	_	27	advmod	_	_
26	不	_	AD	AD	_	27	neg	_	_
27	大	_	VA	VA	_	16	ccomp	_	_
28	好	_	VA	VA	_	16	dep	_	_
29	伺候	_	VV	VV	_	28	dep	_	_
30	…	_	PU	PU	_	10	punct	_	_
31	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 思忖-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x27 / 讨厌-01, arg1, x28 / 穿堂风)
(x31 / 走运, degree, x33 / 真)
(x34 / 伺候-01, arg1, x37 / 花儿)
(x34 / 伺候-01, manner, x35 / 好)
(x37 / 花儿, mod, x38 / 这)

Input(Some(Graph((思忖-01 :arg2 (and :op (来说-01 :arg0 (讨厌-01 :arg1 穿堂风) :arg1 (植物 :quant 1) :arg2 (走运 :degree 真 :polarity -)) :op (伺候-01 :arg1 (花儿 :mod 这) :manner (好 :polarity -))) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),思忖,思忖-01,false), Span(6,7,List(1),讨厌,讨厌-01,false), Span(7,8,List(2),穿堂风,穿堂风,false), Span(13,14,List(3),植物,植物,false), Span(19,20,List(4),走运,走运,false), Span(17,18,List(5),真,真,false), Span(28,29,List(6),伺候,伺候-01,false), Span(23,24,List(7),花儿,花儿,false), Span(9,10,List(8),这,这,false), Span(27,28,List(9),好,好,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小-01,false)),Map(2 -> 穿堂风, 5 -> 真, 8 -> 这, 7 -> 花儿, 1 -> 讨厌-01, 4 -> 走运, 11 -> 小-01, 6 -> 伺候-01, 9 -> 好, 0 -> 思忖-01, 10 -> 王子, 3 -> 植物),Map(x34 -> 伺候-01, x28 -> 穿堂风, x37 -> 花儿, x2 -> 王子, x31 -> 走运, x33 -> 真, x27 -> 讨厌-01, x38 -> 这, x3 -> 小-01, x35 -> 好, x29 -> 植物, x0 -> 思忖-01))),[Ljava.lang.String;@7c3fdb62,Annotation([Ljava.lang.String;@205d38da,[Ljava.lang.String;@6950ed69,[Ljava.lang.String;@6dd7b5a3),Annotation([Ljava.lang.String;@6f3187b0,[Ljava.lang.String;@2663e964,[Ledu.cmu.lti.nlp.amr.Dependency;@48b67364),Annotation([Ljava.lang.String;@189cbd7c,[Ljava.lang.String;@7bf3a5d8,[Ljava.lang.String;@42e25b0b),Annotation([Ljava.lang.String;@39b43d60,[Ljava.lang.String;@44be0077,[Ledu.cmu.lti.nlp.amr.Entity;@2205a05d))
AMR:
(x0 / 思忖-01, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x27 / 讨厌-01, degree, x28 / 穿堂风)
(x27 / 讨厌-01, purpose, x0 / 思忖-01)
(x29 / 植物, mod, x28 / 穿堂风)
(x29 / 植物, purpose, x33 / 真)
(x31 / 走运, degree, x33 / 真)
(x34 / 伺候-01, location, x37 / 花儿)
(x34 / 伺候-01, manner, x35 / 好)
(x37 / 花儿, mod, x31 / 走运)
(x38 / 这, mod, x28 / 穿堂风)

WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 55,662 microseconds
Sentence: “ 晚上 您 得 把 我 放到 一 个 玻璃 罩子 中 。

Oracle Span 1:  您 => 您
Oracle Span 2:  我 => 我
Oracle Span 3:  晚上 => 晚上
Oracle Span 4:  玻璃 => 玻璃
Oracle Span 5:  罩子 => 罩子
Spans:
Span 2-3:  您 => 您
Span 5-6:  我 => 我
Span 1-2:  晚上 => 晚上
Span 9-10:  玻璃 => 玻璃
Span 10-11:  罩子 => 罩子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  您 => 您
Oracle Span 5-6:  我 => 我
Oracle Span 1-2:  晚上 => 晚上
Oracle Span 9-10:  玻璃 => 玻璃
Oracle Span 10-11:  罩子 => 罩子

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	晚上	_	NT	NT	_	7	tmod	_	_
3	您	_	PN	PN	_	7	nsubj	_	_
4	得	_	VV	VV	_	7	mmod	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	放到	_	VV	VV	_	0	root	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	11	clf	_	_
10	玻璃	_	NN	NN	_	11	nn	_	_
11	罩子	_	NN	NN	_	12	lobj	_	_
12	中	_	LC	LC	_	7	loc	_	_
13	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x5 / 罩子, mod, x6 / 玻璃)

Input(Some(Graph((say :arg1 (放-01 :arg0 您 :arg1 我 :arg2 (罩子 :quant 1 :mod 玻璃) :time 晚上)),ArrayBuffer(Span(2,3,List(0),您,您,false), Span(5,6,List(1),我,我,false), Span(10,11,List(2),罩子,罩子,false), Span(9,10,List(3),玻璃,玻璃,false), Span(1,2,List(4),晚上,晚上,false)),Map(2 -> 罩子, 1 -> 我, 4 -> 晚上, 0 -> 您, 3 -> 玻璃),Map(x5 -> 罩子, x8 -> 晚上, x4 -> 我, x3 -> 您, x6 -> 玻璃))),[Ljava.lang.String;@72ef8d15,Annotation([Ljava.lang.String;@6aa8e115,[Ljava.lang.String;@5e21e98f,[Ljava.lang.String;@51a9ad5e),Annotation([Ljava.lang.String;@5f20155b,[Ljava.lang.String;@72ade7e3,[Ledu.cmu.lti.nlp.amr.Dependency;@239105a8),Annotation([Ljava.lang.String;@3fce8fd9,[Ljava.lang.String;@609bcfb6,[Ljava.lang.String;@7d94beb9),Annotation([Ljava.lang.String;@560348e6,[Ljava.lang.String;@1df8b5b8,[Ledu.cmu.lti.nlp.amr.Entity;@23202fce))
AMR:
(x3 / 您, location, x8 / 晚上)
(x4 / 我, location, x8 / 晚上)
(x5 / 罩子, mod, x6 / 玻璃)
(x6 / 玻璃, location, x8 / 晚上)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.3
Decoded in 15,205 microseconds
Sentence: 你 这 地方 太 冷 。

Oracle Span 1:  你 => 你
Oracle Span 2:  冷 => 冷-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  太 => 太
Oracle Span 5:  这 => 这
Spans:
Span 0-1:  你 => 你
Span 4-5:  冷 => 冷-01
Span 2-3:  地方 => 地方
Span 3-4:  太 => 太
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  冷 => 冷-01
Oracle Span 2-3:  地方 => 地方
Oracle Span 3-4:  太 => 太
Oracle Span 1-2:  这 => 这

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	这	_	DT	DT	_	3	det	_	_
3	地方	_	NN	NN	_	5	dep	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	冷	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 冷-01, arg0, x3 / 地方)
(x0 / 冷-01, degree, x2 / 太)
(x3 / 地方, mod, x4 / 这)
(x3 / 地方, poss, x5 / 你)

Input(Some(Graph((冷-01 :arg0 (地方 :poss 你 :mod 这) :degree 太),ArrayBuffer(Span(4,5,List(0),冷,冷-01,false), Span(2,3,List(1),地方,地方,false), Span(0,1,List(2),你,你,false), Span(1,2,List(3),这,这,false), Span(3,4,List(4),太,太,false)),Map(2 -> 你, 1 -> 地方, 4 -> 太, 0 -> 冷-01, 3 -> 这),Map(x2 -> 太, x5 -> 你, x4 -> 这, x3 -> 地方, x0 -> 冷-01))),[Ljava.lang.String;@7b993c65,Annotation([Ljava.lang.String;@37911f88,[Ljava.lang.String;@6f1c29b7,[Ljava.lang.String;@4d6025c5),Annotation([Ljava.lang.String;@7f284218,[Ljava.lang.String;@407a7f2a,[Ledu.cmu.lti.nlp.amr.Dependency;@4ea5b703),Annotation([Ljava.lang.String;@2a7ed1f,[Ljava.lang.String;@3fa247d1,[Ljava.lang.String;@2cb2fc20),Annotation([Ljava.lang.String;@4f4c4b1a,[Ljava.lang.String;@723e88f9,[Ledu.cmu.lti.nlp.amr.Entity;@5f0fd5a0))
AMR:
(x0 / 冷-01, ARG0, x3 / 地方)
(x0 / 冷-01, degree, x2 / 太)
(x3 / 地方, mod, x4 / 这)
(x3 / 地方, poss, x5 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,814 microseconds
Sentence: 我 原来 住 的 那个 地方 … ”

Oracle Span 1:  住 => 住-01
Oracle Span 2:  原来 => 原来-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  我 => 我
Spans:
Span 2-3:  住 => 住-01
Span 1-2:  原来 => 原来-01
Span 5-6:  地方 => 地方
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  住 => 住-01
Oracle Span 1-2:  原来 => 原来-01
Oracle Span 5-6:  地方 => 地方
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	原来	_	AD	AD	_	3	advmod	_	_
3	住	_	VV	VV	_	7	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	那个	_	NN	NN	_	7	nn	_	_
6	地方	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	0	root	_	_
8	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x9 / 住-01, arg0, x11 / 我)
(x9 / 住-01, arg1, x12 / 地方)
(x9 / 住-01, manner, x10 / 原来-01)

Input(Some(Graph((say :arg1 (住-01 :arg1 (地方 :mod 那) :arg0 我 :manner 原来-01)),ArrayBuffer(Span(2,3,List(0),住,住-01,false), Span(5,6,List(1),地方,地方,false), Span(0,1,List(2),我,我,false), Span(1,2,List(3),原来,原来-01,false)),Map(2 -> 我, 1 -> 地方, 0 -> 住-01, 3 -> 原来-01),Map(x10 -> 原来-01, x12 -> 地方, x11 -> 我, x9 -> 住-01))),[Ljava.lang.String;@64e7619d,Annotation([Ljava.lang.String;@495ee280,[Ljava.lang.String;@4fa1c212,[Ljava.lang.String;@6ea2bc93),Annotation([Ljava.lang.String;@3116c353,[Ljava.lang.String;@f627d13,[Ledu.cmu.lti.nlp.amr.Dependency;@4e928fbf),Annotation([Ljava.lang.String;@352ff4da,[Ljava.lang.String;@3224a577,[Ljava.lang.String;@2e32ccc5),Annotation([Ljava.lang.String;@748741cb,[Ljava.lang.String;@3e44f2a5,[Ledu.cmu.lti.nlp.amr.Entity;@295cf707))
AMR:
(x9 / 住-01, manner, x10 / 原来-01)
(x9 / 住-01, mode, x12 / 地方)
(x9 / 住-01, polite, x11 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,043 microseconds
Sentence: 但 她 没有 说 下去 。

Oracle Span 1:  她 => 她
Oracle Span 2:  说 => 说-01
Spans:
Span 1-2:  她 => 她
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  她 => 她
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	她	_	PN	PN	_	4	nsubj	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	说	_	VV	VV	_	0	root	_	_
5	下去	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 说-01, arg0, x4 / 她)

Input(Some(Graph((contrast :arg2 (说-01 :arg0 她 :polarity -)),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(1,2,List(1),她,她,false)),Map(1 -> 她, 0 -> 说-01),Map(x2 -> 说-01, x4 -> 她))),[Ljava.lang.String;@1130520d,Annotation([Ljava.lang.String;@5f77d0f9,[Ljava.lang.String;@463fd068,[Ljava.lang.String;@895e367),Annotation([Ljava.lang.String;@1b266842,[Ljava.lang.String;@7a3793c7,[Ledu.cmu.lti.nlp.amr.Dependency;@42b3b079),Annotation([Ljava.lang.String;@651aed93,[Ljava.lang.String;@4dd6fd0a,[Ljava.lang.String;@bb9e6dc),Annotation([Ljava.lang.String;@5456afaa,[Ljava.lang.String;@6692b6c6,[Ledu.cmu.lti.nlp.amr.Entity;@1cd629b3))
AMR:
(x2 / 说-01, prep-on, x4 / 她)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 4,183 microseconds
Sentence: 她 来 的 时候 是 粒 种子 。

Oracle Span 1:  她 => 她
Oracle Span 2:  来 => 来-01
Oracle Span 3:  种子 => 种子
Spans:
Span 0-1:  她 => 她
Span 1-2:  来 => 来-01
Span 6-7:  种子 => 种子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  她 => 她
Oracle Span 1-2:  来 => 来-01
Oracle Span 6-7:  种子 => 种子

Dependencies:
1	她	_	PN	PN	_	5	dep	_	_
2	来	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	时候	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	粒	_	NN	NN	_	7	nn	_	_
7	种子	_	NN	NN	_	5	attr	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 种子, domain, x2 / 她)
(x0 / 种子, time, x4 / 来-01)

Input(Some(Graph((种子 :time (来-01 :arg0 x2) :domain 她),ArrayBuffer(Span(6,7,List(0),种子,种子,false), Span(1,2,List(1),来,来-01,false), Span(0,1,List(2),她,她,false)),Map(2 -> 她, 1 -> 来-01, 0 -> 种子),Map(x2 -> 她, x4 -> 来-01, x0 -> 种子))),[Ljava.lang.String;@589da3f3,Annotation([Ljava.lang.String;@39d76cb5,[Ljava.lang.String;@4a00d9cf,[Ljava.lang.String;@6736fa8d),Annotation([Ljava.lang.String;@52815fa3,[Ljava.lang.String;@50313382,[Ledu.cmu.lti.nlp.amr.Dependency;@1cb346ea),Annotation([Ljava.lang.String;@4c012563,[Ljava.lang.String;@14a50707,[Ljava.lang.String;@4d518b32),Annotation([Ljava.lang.String;@4bd31064,[Ljava.lang.String;@e3c0e40,[Ledu.cmu.lti.nlp.amr.Entity;@329dbdbf))
AMR:
(x0 / 种子, domain, x2 / 她)
(x0 / 种子, time, x4 / 来-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,891 microseconds
Sentence: 她 哪里 见 过 什么 别的 世界 。

Oracle Span 1:  世界 => 世界
Oracle Span 2:  别的 => 别的
Oracle Span 3:  她 => 她
Oracle Span 4:  见 => 见-01
Spans:
Span 6-7:  世界 => 世界
Span 5-6:  别的 => 别的
Span 0-1:  她 => 她
Span 2-3:  见 => 见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  世界 => 世界
Oracle Span 5-6:  别的 => 别的
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  见 => 见-01

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	哪里	_	AD	AD	_	3	advmod	_	_
3	见	_	VV	VV	_	0	root	_	_
4	过	_	AS	AS	_	3	asp	_	_
5	什么	_	DT	DT	_	7	det	_	_
6	别的	_	CD	CD	_	5	dep	_	_
7	世界	_	NN	NN	_	3	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 见-01, arg0, x3 / 她)
(x0 / 见-01, arg1, x4 / 世界)
(x4 / 世界, mod, x5 / 别的)

Input(Some(Graph((见-01 :arg1 (世界 :mod 别的) :arg0 她 :polarity -),ArrayBuffer(Span(2,3,List(0),见,见-01,false), Span(6,7,List(1),世界,世界,false), Span(5,6,List(2),别的,别的,false), Span(0,1,List(3),她,她,false)),Map(2 -> 别的, 1 -> 世界, 0 -> 见-01, 3 -> 她),Map(x5 -> 别的, x4 -> 世界, x3 -> 她, x0 -> 见-01))),[Ljava.lang.String;@7354b8c5,Annotation([Ljava.lang.String;@20d7d6fb,[Ljava.lang.String;@4ef782af,[Ljava.lang.String;@11d8ae8b),Annotation([Ljava.lang.String;@479cbee5,[Ljava.lang.String;@59e2d8e3,[Ledu.cmu.lti.nlp.amr.Dependency;@2b72cb8a),Annotation([Ljava.lang.String;@7f8a9499,[Ljava.lang.String;@5d43661b,[Ljava.lang.String;@12299890),Annotation([Ljava.lang.String;@2fba3fc4,[Ljava.lang.String;@4bf48f6,[Ledu.cmu.lti.nlp.amr.Entity;@420a85c4))
AMR:
(x0 / 见-01, op, x4 / 世界)
(x0 / 见-01, prep-along-with, x3 / 她)
(x4 / 世界, mod, x5 / 别的)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 9,476 microseconds
Sentence: 她 叫 人 发现 她 是 在 凑 一 个 如此 不 太 高明 的 谎话 ， 她 有点 羞怒 ， 咳嗽 了 两三 声 。 她 的 这 一 招 是 要 小 王子 处于 有 过失 的 地位 ， 她 说道 ：

Oracle Span 1:  人 => 人
Oracle Span 2:  凑 => 凑-03
Oracle Span 3:  发现 => 发现-01
Oracle Span 4:  咳嗽 => 咳嗽-01
Oracle Span 5:  地位 => 地位
Oracle Span 6:  处于 => 处于-01
Oracle Span 7:  太 => 太
Oracle Span 8:  她 => 她
Oracle Span 9:  如此 => 如此-01
Oracle Span 10:  小 => 小-01
Oracle Span 11:  招 => 招
Oracle Span 12:  有 => 有-01
Oracle Span 13:  有点 => 有点
Oracle Span 14:  王子 => 王子
Oracle Span 15:  羞怒 => 羞怒
Oracle Span 16:  要 => 要-03
Oracle Span 17:  说道 => 说道-01
Oracle Span 18:  谎话 => 谎话
Oracle Span 19:  过失 => 过失
Oracle Span 20:  这 => 这
Oracle Span 21:  高明 => 高明-01
Spans:
Span 2-3:  人 => 人
Span 7-8:  凑 => 凑-03
Span 3-4:  发现 => 发现-01
Span 21-22:  咳嗽 => 咳嗽-01
Span 39-40:  地位 => 地位
Span 35-36:  处于 => 处于-01
Span 12-13:  太 => 太
Span 0-1:  她 => 她
Span 10-11:  如此 => 如此-01
Span 33-34:  小 => 小-01
Span 30-31:  招 => 招
Span 36-37:  有 => 有-01
Span 18-19:  有点 => 有点
Span 34-35:  王子 => 王子
Span 19-20:  羞怒 => 羞怒
Span 32-33:  要 => 要-03
Span 42-43:  说道 => 说道-01
Span 15-16:  谎话 => 谎话
Span 37-38:  过失 => 过失
Span 28-29:  这 => 这
Span 13-14:  高明 => 高明-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 7-8:  凑 => 凑-03
Oracle Span 3-4:  发现 => 发现-01
Oracle Span 21-22:  咳嗽 => 咳嗽-01
Oracle Span 39-40:  地位 => 地位
Oracle Span 35-36:  处于 => 处于-01
Oracle Span 12-13:  太 => 太
Oracle Span 0-1:  她 => 她
Oracle Span 10-11:  如此 => 如此-01
Oracle Span 33-34:  小 => 小-01
Oracle Span 30-31:  招 => 招
Oracle Span 36-37:  有 => 有-01
Oracle Span 18-19:  有点 => 有点
Oracle Span 34-35:  王子 => 王子
Oracle Span 19-20:  羞怒 => 羞怒
Oracle Span 32-33:  要 => 要-03
Oracle Span 42-43:  说道 => 说道-01
Oracle Span 15-16:  谎话 => 谎话
Oracle Span 37-38:  过失 => 过失
Oracle Span 28-29:  这 => 这
Oracle Span 13-14:  高明 => 高明-01

Dependencies:
1	她	_	PN	PN	_	2	nsubj	_	_
2	叫	_	VV	VV	_	0	root	_	_
3	人	_	NN	NN	_	2	dobj	_	_
4	发现	_	VV	VV	_	2	dep	_	_
5	她	_	PN	PN	_	6	top	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	在	_	P	P	_	19	prep	_	_
8	凑	_	NR	NR	_	16	nn	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	16	clf	_	_
11	如此	_	AD	AD	_	14	advmod	_	_
12	不	_	AD	AD	_	14	neg	_	_
13	太	_	AD	AD	_	14	advmod	_	_
14	高明	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	谎话	_	NN	NN	_	7	pobj	_	_
17	,	_	PU	PU	_	19	punct	_	_
18	她	_	PN	PN	_	19	nsubj	_	_
19	有点	_	VV	VV	_	6	ccomp	_	_
20	羞怒	_	NN	NN	_	19	dobj	_	_
21	,	_	PU	PU	_	19	punct	_	_
22	咳嗽	_	VV	VV	_	19	conj	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	两三	_	CD	CD	_	25	nummod	_	_
25	声	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	6	punct	_	_
27	她	_	PN	PN	_	31	assmod	_	_
28	的	_	DEG	DEG	_	27	assm	_	_
29	这	_	DT	DT	_	31	det	_	_
30	一	_	CD	CD	_	29	dep	_	_
31	招	_	NN	NN	_	32	top	_	_
32	是	_	VC	VC	_	6	conj	_	_
33	要	_	VV	VV	_	36	conj	_	_
34	小	_	JJ	JJ	_	35	amod	_	_
35	王子	_	NN	NN	_	33	dobj	_	_
36	处于	_	VV	VV	_	32	ccomp	_	_
37	有	_	VE	VE	_	40	rcmod	_	_
38	过失	_	NN	NN	_	37	dobj	_	_
39	的	_	DEC	DEC	_	37	cpm	_	_
40	地位	_	NN	NN	_	36	dobj	_	_
41	,	_	PU	PU	_	6	punct	_	_
42	她	_	PN	PN	_	43	nsubj	_	_
43	说道	_	VV	VV	_	6	conj	_	_
44	：	_	PU	PU	_	2	punct	_	_
45	高明	_	VA	VA	_	8	rcmod	_	_

Oracle:
(x17 / 发现-01, arg0, x18 / 人)
(x17 / 发现-01, arg1, x19 / 凑-03)
(x19 / 凑-03, arg0, x20 / 她)
(x19 / 凑-03, arg1, x21 / 谎话)
(x21 / 谎话, mod, x22 / 高明-01)
(x21 / 谎话, mod, x27 / 如此-01)
(x22 / 高明-01, degree, x24 / 太)
(x39 / 招, mod, x41 / 这)
(x39 / 招, purpose, x43 / 要-03)
(x43 / 要-03, arg0, x44 / 处于-01)
(x44 / 处于-01, arg0, x45 / 王子)
(x44 / 处于-01, arg1, x47 / 地位)
(x45 / 王子, mod, x46 / 小-01)
(x47 / 地位, mod, x48 / 过失)
(x49 / 有-01, arg1, x48 / 过失)
(x56 / 羞怒, degree, x57 / 有点)

Input(Some(Graph((multi-sentence :snt1 (causation :arg1 (发现-01 :arg1 (凑-03 :arg1 (谎话 :quant 1 :mod 如此-01 :mod (高明-01 :polarity - :degree 太)) :arg0 她) :arg0 人) :arg2 (and :op (羞怒 :arg0 x20 :degree 有点) :op (咳嗽-01 :quant (between :op 2 :op 3) :arg0 x20))) :snt2 (causation :arg1 (招 :purpose (要-03 :arg0 (处于-01 :arg1 (地位 :mod (过失 :arg1-of (有-01 :arg0 x45))) :arg0 (王子 :mod 小-01))) :poss x20 :mod 这 :quant 1) :arg2 (说道-01 :arg0 x20))),ArrayBuffer(Span(3,4,List(0),发现,发现-01,false), Span(7,8,List(1),凑,凑-03,false), Span(15,16,List(2),谎话,谎话,false), Span(10,11,List(3),如此,如此-01,false), Span(13,14,List(4),高明,高明-01,false), Span(12,13,List(5),太,太,false), Span(0,1,List(6),她,她,false), Span(2,3,List(7),人,人,false), Span(19,20,List(8),羞怒,羞怒,false), Span(18,19,List(9),有点,有点,false), Span(21,22,List(10),咳嗽,咳嗽-01,false), Span(30,31,List(11),招,招,false), Span(32,33,List(12),要,要-03,false), Span(35,36,List(13),处于,处于-01,false), Span(39,40,List(14),地位,地位,false), Span(37,38,List(15),过失,过失,false), Span(36,37,List(16),有,有-01,false), Span(34,35,List(17),王子,王子,false), Span(33,34,List(18),小,小-01,false), Span(28,29,List(19),这,这,false), Span(42,43,List(20),说道,说道-01,false)),Map(2 -> 谎话, 5 -> 太, 12 -> 要-03, 15 -> 过失, 8 -> 羞怒, 18 -> 小-01, 7 -> 人, 17 -> 王子, 1 -> 凑-03, 4 -> 高明-01, 11 -> 招, 14 -> 地位, 20 -> 说道-01, 6 -> 她, 9 -> 有点, 0 -> 发现-01, 16 -> 有-01, 19 -> 这, 10 -> 咳嗽-01, 3 -> 如此-01, 13 -> 处于-01),Map(x46 -> 小-01, x49 -> 有-01, x43 -> 要-03, x22 -> 高明-01, x19 -> 凑-03, x57 -> 有点, x39 -> 招, x51 -> 说道-01, x45 -> 王子, x48 -> 过失, x27 -> 如此-01, x21 -> 谎话, x24 -> 太, x18 -> 人, x41 -> 这, x56 -> 羞怒, x59 -> 咳嗽-01, x44 -> 处于-01, x47 -> 地位, x20 -> 她, x17 -> 发现-01))),[Ljava.lang.String;@1c852c0f,Annotation([Ljava.lang.String;@a37aefe,[Ljava.lang.String;@5d99c6b5,[Ljava.lang.String;@266374ef),Annotation([Ljava.lang.String;@13b3d178,[Ljava.lang.String;@24c4ddae,[Ledu.cmu.lti.nlp.amr.Dependency;@37fb0bed),Annotation([Ljava.lang.String;@a82c5f1,[Ljava.lang.String;@7b7fdc8,[Ljava.lang.String;@51c693d),Annotation([Ljava.lang.String;@6a57ae10,[Ljava.lang.String;@766653e6,[Ledu.cmu.lti.nlp.amr.Entity;@4e07b95f))
AMR:
(x17 / 发现-01, accompanier, x19 / 凑-03)
(x17 / 发现-01, prep-following, x18 / 人)
(x18 / 人, domain, x20 / 她)
(x19 / 凑-03, accompanier, x27 / 如此-01)
(x21 / 谎话, mod, x22 / 高明-01)
(x21 / 谎话, mod, x27 / 如此-01)
(x22 / 高明-01, degree, x24 / 太)
(x39 / 招, mod, x41 / 这)
(x39 / 招, purpose, x43 / 要-03)
(x43 / 要-03, accompanier, x44 / 处于-01)
(x44 / 处于-01, degree, x45 / 王子)
(x44 / 处于-01, degree, x59 / 咳嗽-01)
(x44 / 处于-01, mode, x49 / 有-01)
(x44 / 处于-01, time, x48 / 过失)
(x45 / 王子, mod, x46 / 小-01)
(x47 / 地位, mod, x48 / 过失)
(x51 / 说道-01, time, x47 / 地位)
(x56 / 羞怒, degree, x21 / 谎话)
(x56 / 羞怒, degree, x57 / 有点)
(x59 / 咳嗽-01, time, x56 / 羞怒)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.3
WARNING: makeIds can't find span Id: 0.1.0.3.0
WARNING: makeIds can't find span Id: 0.1.0.3.0.1
WARNING: makeIds can't find span Id: 0.1.0.3.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.3.0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.3.0.0
WARNING: makeIds can't find span Id: 0.1.0.3.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 184,040 microseconds
Sentence: “ 屏风 呢 ？ ”

Oracle Span 1:  屏风 => 屏风
Spans:
Span 1-2:  屏风 => 屏风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  屏风 => 屏风

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	屏风	_	VA	VA	_	0	root	_	_
3	呢	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (屏风 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),屏风,屏风,false)),Map(0 -> 屏风),Map(x4 -> 屏风))),[Ljava.lang.String;@28b46423,Annotation([Ljava.lang.String;@7fc4780b,[Ljava.lang.String;@3b79fd76,[Ljava.lang.String;@48c76607),Annotation([Ljava.lang.String;@43599640,[Ljava.lang.String;@1f81aa00,[Ledu.cmu.lti.nlp.amr.Dependency;@6b6776cb),Annotation([Ljava.lang.String;@1863d2fe,[Ljava.lang.String;@1787bc24,[Ljava.lang.String;@544d57e),Annotation([Ljava.lang.String;@55c53a33,[Ljava.lang.String;@53b7f657,[Ledu.cmu.lti.nlp.amr.Entity;@797b0699))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,095 microseconds
Sentence: “ 我 正 准备 去 拿 。 可 你 刚才 说 的 是 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  准备 => 准备-02
Oracle Span 3:  刚才 => 刚才
Oracle Span 4:  去 => 去-01
Oracle Span 5:  我 => 我
Oracle Span 6:  拿 => 拿-01
Oracle Span 7:  正 => 正
Oracle Span 8:  说 => 说-01
Spans:
Span 8-9:  你 => 你
Span 3-4:  准备 => 准备-02
Span 9-10:  刚才 => 刚才
Span 4-5:  去 => 去-01
Span 1-2:  我 => 我
Span 5-6:  拿 => 拿-01
Span 2-3:  正 => 正
Span 10-11:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  你 => 你
Oracle Span 3-4:  准备 => 准备-02
Oracle Span 9-10:  刚才 => 刚才
Oracle Span 4-5:  去 => 去-01
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  拿 => 拿-01
Oracle Span 2-3:  正 => 正
Oracle Span 10-11:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	正	_	AD	AD	_	4	advmod	_	_
4	准备	_	VV	VV	_	0	root	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	拿	_	VV	VV	_	4	ccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	可	_	AD	AD	_	11	advmod	_	_
9	你	_	PN	PN	_	11	nsubj	_	_
10	刚才	_	AD	AD	_	11	advmod	_	_
11	说	_	VV	VV	_	4	conj	_	_
12	的	_	SP	SP	_	11	dep	_	_
13	是	_	VC	VC	_	4	conj	_	_
14	…	_	NN	NN	_	13	attr	_	_
15	”	_	PU	PU	_	4	punct	_	_
16	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x15 / 准备-02, arg0, x16 / 我)
(x15 / 准备-02, arg1, x18 / 去-01)
(x15 / 准备-02, manner, x17 / 正)
(x18 / 去-01, arg1, x20 / 拿-01)
(x22 / 说-01, arg0, x23 / 你)
(x22 / 说-01, time, x24 / 刚才)

Input(Some(Graph((say :arg1 (multi-sentence :snt1 (准备-02 :arg1 (去-01 :arg1 拿-01 :arg0 x16) :manner 正 :arg0 我) :snt2 (contrast :arg2 (说-01 :arg1 (thing :domain-of amr-unknown) :time 刚才 :arg0 你)))),ArrayBuffer(Span(3,4,List(0),准备,准备-02,false), Span(4,5,List(1),去,去-01,false), Span(5,6,List(2),拿,拿-01,false), Span(2,3,List(3),正,正,false), Span(1,2,List(4),我,我,false), Span(10,11,List(5),说,说-01,false), Span(9,10,List(6),刚才,刚才,false), Span(8,9,List(7),你,你,false)),Map(2 -> 拿-01, 5 -> 说-01, 7 -> 你, 1 -> 去-01, 4 -> 我, 6 -> 刚才, 0 -> 准备-02, 3 -> 正),Map(x22 -> 说-01, x16 -> 我, x15 -> 准备-02, x24 -> 刚才, x18 -> 去-01, x23 -> 你, x20 -> 拿-01, x17 -> 正))),[Ljava.lang.String;@5a37d3ed,Annotation([Ljava.lang.String;@26df6e3a,[Ljava.lang.String;@4a3631f8,[Ljava.lang.String;@6b58b9e9),Annotation([Ljava.lang.String;@f14a7d4,[Ljava.lang.String;@52e7a6b2,[Ledu.cmu.lti.nlp.amr.Dependency;@29a5f4e7),Annotation([Ljava.lang.String;@79c97cb,[Ljava.lang.String;@2d9caaeb,[Ljava.lang.String;@42a15bdc),Annotation([Ljava.lang.String;@44a59da3,[Ljava.lang.String;@27e47833,[Ledu.cmu.lti.nlp.amr.Entity;@6f6745d6))
AMR:
(x15 / 准备-02, example, x16 / 我)
(x15 / 准备-02, manner, x17 / 正)
(x15 / 准备-02, subset, x18 / 去-01)
(x18 / 去-01, location, x20 / 拿-01)
(x20 / 拿-01, time, x24 / 刚才)
(x22 / 说-01, time, x24 / 刚才)
(x23 / 你, location, x24 / 刚才)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 25,522 microseconds
Sentence: 于是 花儿 放开 嗓门 咳嗽 了 几 声 ， 依然 要 使 小 王子 后悔 自己 的 过失 。

Oracle Span 1:  依然 => 依然
Oracle Span 2:  后悔 => 后悔-01
Oracle Span 3:  咳嗽 => 咳嗽-01
Oracle Span 4:  嗓门 => 嗓门
Oracle Span 5:  小 => 小-01
Oracle Span 6:  放开 => 放开-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  花儿 => 花儿
Oracle Span 9:  过失 => 过失
Spans:
Span 9-10:  依然 => 依然
Span 14-15:  后悔 => 后悔-01
Span 4-5:  咳嗽 => 咳嗽-01
Span 3-4:  嗓门 => 嗓门
Span 12-13:  小 => 小-01
Span 2-3:  放开 => 放开-01
Span 13-14:  王子 => 王子
Span 1-2:  花儿 => 花儿
Span 17-18:  过失 => 过失

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  依然 => 依然
Oracle Span 14-15:  后悔 => 后悔-01
Oracle Span 4-5:  咳嗽 => 咳嗽-01
Oracle Span 3-4:  嗓门 => 嗓门
Oracle Span 12-13:  小 => 小-01
Oracle Span 2-3:  放开 => 放开-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 1-2:  花儿 => 花儿
Oracle Span 17-18:  过失 => 过失

Dependencies:
1	于是	_	AD	AD	_	3	advmod	_	_
2	花儿	_	NN	NN	_	3	nsubj	_	_
3	放开	_	VV	VV	_	0	root	_	_
4	嗓门	_	NN	NN	_	3	dobj	_	_
5	咳嗽	_	VV	VV	_	3	conj	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	几	_	CD	CD	_	8	nummod	_	_
8	声	_	NN	NN	_	5	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	依然	_	AD	AD	_	12	advmod	_	_
11	要	_	VV	VV	_	12	mmod	_	_
12	使	_	VV	VV	_	3	conj	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	12	dobj	_	_
15	后悔	_	VV	VV	_	12	dep	_	_
16	自己	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	过失	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x22 / 咳嗽-01, arg0, x23 / 花儿)
(x22 / 咳嗽-01, manner, x25 / 放开-01)
(x22 / 咳嗽-01, purpose, x36 / 后悔-01)
(x25 / 放开-01, arg1, x27 / 嗓门)
(x36 / 后悔-01, arg0, x37 / 王子)
(x36 / 后悔-01, arg1, x40 / 过失)
(x36 / 后悔-01, manner, x39 / 依然)
(x37 / 王子, mod, x38 / 小-01)

Input(Some(Graph((causation :arg2 (咳嗽-01 :purpose (后悔-01 :arg1 (过失 :poss x37) :manner 依然 :arg0 (王子 :mod 小-01)) :manner (放开-01 :arg1 嗓门 :arg0 x23) :degree 几声 :arg0 花儿)),ArrayBuffer(Span(4,5,List(0),咳嗽,咳嗽-01,false), Span(14,15,List(1),后悔,后悔-01,false), Span(17,18,List(2),过失,过失,false), Span(9,10,List(3),依然,依然,false), Span(13,14,List(4),王子,王子,false), Span(12,13,List(5),小,小-01,false), Span(2,3,List(6),放开,放开-01,false), Span(3,4,List(7),嗓门,嗓门,false), Span(1,2,List(8),花儿,花儿,false)),Map(2 -> 过失, 5 -> 小-01, 8 -> 花儿, 7 -> 嗓门, 1 -> 后悔-01, 4 -> 王子, 6 -> 放开-01, 0 -> 咳嗽-01, 3 -> 依然),Map(x40 -> 过失, x37 -> 王子, x22 -> 咳嗽-01, x25 -> 放开-01, x39 -> 依然, x27 -> 嗓门, x36 -> 后悔-01, x23 -> 花儿, x38 -> 小-01))),[Ljava.lang.String;@27508c5d,Annotation([Ljava.lang.String;@4f704591,[Ljava.lang.String;@4b5189ac,[Ljava.lang.String;@1e4d3ce5),Annotation([Ljava.lang.String;@3ddc6915,[Ljava.lang.String;@704deff2,[Ledu.cmu.lti.nlp.amr.Dependency;@379614be),Annotation([Ljava.lang.String;@404bbcbd,[Ljava.lang.String;@1e81f160,[Ljava.lang.String;@1acaf3d),Annotation([Ljava.lang.String;@6986852,[Ljava.lang.String;@1bab8268,[Ledu.cmu.lti.nlp.amr.Entity;@a307a8c))
AMR:
(x22 / 咳嗽-01, ARG6, x23 / 花儿)
(x22 / 咳嗽-01, manner, x25 / 放开-01)
(x22 / 咳嗽-01, purpose, x36 / 后悔-01)
(x25 / 放开-01, quant, x27 / 嗓门)
(x36 / 后悔-01, manner, x37 / 王子)
(x36 / 后悔-01, manner, x39 / 依然)
(x36 / 后悔-01, snt3, x40 / 过失)
(x37 / 王子, mod, x38 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.3.0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 33,120 microseconds
Sentence: 尽管 小 王子 本来 诚心诚意 地 喜欢 这 朵 花 ， 可是 ， 这一来 ， 却 使 他 马上 对 她 产生 了 怀疑 。

Oracle Span 1:  产生 => 产生-01
Oracle Span 2:  喜欢 => 喜欢-01
Oracle Span 3:  小 => 小
Oracle Span 4:  怀疑 => 怀疑-01
Oracle Span 5:  本来 => 本来
Oracle Span 6:  王子 => 王子
Oracle Span 7:  花 => 花
Oracle Span 8:  诚心诚意 => 诚心诚意
Oracle Span 9:  这 => 这
Oracle Span 10:  这一来 => 这一来
Oracle Span 11:  马上 => 马上
Spans:
Span 21-22:  产生 => 产生-01
Span 6-7:  喜欢 => 喜欢-01
Span 1-2:  小 => 小
Span 23-24:  怀疑 => 怀疑-01
Span 3-4:  本来 => 本来
Span 2-3:  王子 => 王子
Span 9-10:  花 => 花
Span 4-5:  诚心诚意 => 诚心诚意
Span 7-8:  这 => 这
Span 13-14:  这一来 => 这一来
Span 18-19:  马上 => 马上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 21-22:  产生 => 产生-01
Oracle Span 6-7:  喜欢 => 喜欢-01
Oracle Span 1-2:  小 => 小
Oracle Span 23-24:  怀疑 => 怀疑-01
Oracle Span 3-4:  本来 => 本来
Oracle Span 2-3:  王子 => 王子
Oracle Span 9-10:  花 => 花
Oracle Span 4-5:  诚心诚意 => 诚心诚意
Oracle Span 7-8:  这 => 这
Oracle Span 13-14:  这一来 => 这一来
Oracle Span 18-19:  马上 => 马上

Dependencies:
1	尽管	_	CS	CS	_	7	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	7	nsubj	_	_
4	本来	_	AD	AD	_	5	advmod	_	_
5	诚心诚意	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	喜欢	_	VV	VV	_	0	root	_	_
8	这	_	DT	DT	_	10	det	_	_
9	朵	_	M	M	_	8	clf	_	_
10	花	_	NN	NN	_	17	nsubj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	可是	_	AD	AD	_	17	advmod	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	这一来	_	CD	CD	_	17	dep	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	却	_	AD	AD	_	17	advmod	_	_
17	使	_	VV	VV	_	7	ccomp	_	_
18	他	_	PN	PN	_	17	dobj	_	_
19	马上	_	AD	AD	_	22	advmod	_	_
20	对	_	P	P	_	22	prep	_	_
21	她	_	PN	PN	_	20	pobj	_	_
22	产生	_	VV	VV	_	17	dep	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	怀疑	_	NN	NN	_	22	dobj	_	_
25	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x24 / 喜欢-01, arg0, x25 / 王子)
(x24 / 喜欢-01, arg1, x27 / 花)
(x24 / 喜欢-01, manner, x29 / 诚心诚意)
(x24 / 喜欢-01, manner, x30 / 本来)
(x25 / 王子, mod, x26 / 小)
(x27 / 花, mod, x28 / 这)
(x32 / 产生-01, arg1, x34 / 怀疑-01)
(x32 / 产生-01, cause, x38 / 这一来)
(x32 / 产生-01, manner, x37 / 马上)

Input(Some(Graph((concession :arg1 (喜欢-01 :manner 本来 :manner 诚心诚意 :arg1 (花 :mod 这) :arg0 (王子 :mod 小)) :arg2 (contrast :arg2 (产生-01 :cause 这一来 :manner 马上 :arg1 (怀疑-01 :arg1 x27 :arg0 x25) :arg0 x25))),ArrayBuffer(Span(6,7,List(0),喜欢,喜欢-01,false), Span(3,4,List(1),本来,本来,false), Span(4,5,List(2),诚心诚意,诚心诚意,false), Span(9,10,List(3),花,花,false), Span(7,8,List(4),这,这,false), Span(2,3,List(5),王子,王子,false), Span(1,2,List(6),小,小,false), Span(21,22,List(7),产生,产生-01,false), Span(13,14,List(8),这一来,这一来,false), Span(18,19,List(9),马上,马上,false), Span(23,24,List(10),怀疑,怀疑-01,false)),Map(2 -> 诚心诚意, 5 -> 王子, 8 -> 这一来, 7 -> 产生-01, 1 -> 本来, 4 -> 这, 6 -> 小, 9 -> 马上, 0 -> 喜欢-01, 10 -> 怀疑-01, 3 -> 花),Map(x34 -> 怀疑-01, x28 -> 这, x37 -> 马上, x25 -> 王子, x30 -> 本来, x27 -> 花, x24 -> 喜欢-01, x38 -> 这一来, x32 -> 产生-01, x26 -> 小, x29 -> 诚心诚意))),[Ljava.lang.String;@6e01f9b0,Annotation([Ljava.lang.String;@2b9ed6da,[Ljava.lang.String;@6c61a903,[Ljava.lang.String;@658c5a19),Annotation([Ljava.lang.String;@421e361,[Ljava.lang.String;@59d4cd39,[Ledu.cmu.lti.nlp.amr.Dependency;@389c4eb1),Annotation([Ljava.lang.String;@3fc79729,[Ljava.lang.String;@34f6515b,[Ljava.lang.String;@4b34fff9),Annotation([Ljava.lang.String;@1187c9e8,[Ljava.lang.String;@127a7a2e,[Ledu.cmu.lti.nlp.amr.Entity;@14008db3))
AMR:
(x24 / 喜欢-01, ARG6, x27 / 花)
(x24 / 喜欢-01, age, x38 / 这一来)
(x24 / 喜欢-01, manner, x29 / 诚心诚意)
(x24 / 喜欢-01, manner, x30 / 本来)
(x24 / 喜欢-01, source, x25 / 王子)
(x25 / 王子, mod, x26 / 小)
(x27 / 花, mod, x28 / 这)
(x32 / 产生-01, extent, x34 / 怀疑-01)
(x32 / 产生-01, location, x38 / 这一来)
(x32 / 产生-01, manner, x37 / 马上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.3
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
Decoded in 48,639 microseconds
Sentence: 小 王子 对 一些 无关紧要 的 话 看 得 太 认真 ， 结果 使 自己 很 苦恼 。

Oracle Span 1:  一些 => 一些
Oracle Span 2:  太 => 太
Oracle Span 3:  小 => 小-01
Oracle Span 4:  很 => 很
Oracle Span 5:  无关紧要 => 无关紧要
Oracle Span 6:  王子 => 王子
Oracle Span 7:  看 => 看-10
Oracle Span 8:  苦恼 => 苦恼-01
Oracle Span 9:  认真 => 认真
Oracle Span 10:  话 => 话
Spans:
Span 3-4:  一些 => 一些
Span 9-10:  太 => 太
Span 0-1:  小 => 小-01
Span 15-16:  很 => 很
Span 4-5:  无关紧要 => 无关紧要
Span 1-2:  王子 => 王子
Span 7-8:  看 => 看-10
Span 16-17:  苦恼 => 苦恼-01
Span 10-11:  认真 => 认真
Span 6-7:  话 => 话

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 3-4:  一些 => 一些
Oracle Span 9-10:  太 => 太
Oracle Span 0-1:  小 => 小-01
Oracle Span 15-16:  很 => 很
Oracle Span 4-5:  无关紧要 => 无关紧要
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  看 => 看-10
Oracle Span 16-17:  苦恼 => 苦恼-01
Oracle Span 10-11:  认真 => 认真
Oracle Span 6-7:  话 => 话

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	14	nsubj	_	_
3	对	_	P	P	_	14	prep	_	_
4	一些	_	CD	CD	_	5	nummod	_	_
5	无关紧要	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	话	_	NN	NN	_	3	pobj	_	_
8	看	_	VV	VV	_	14	mmod	_	_
9	得	_	VV	VV	_	14	mmod	_	_
10	太	_	AD	AD	_	14	advmod	_	_
11	认真	_	AD	AD	_	14	advmod	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	结果	_	AD	AD	_	14	advmod	_	_
14	使	_	VV	VV	_	0	root	_	_
15	自己	_	PN	PN	_	14	dobj	_	_
16	很	_	AD	AD	_	17	advmod	_	_
17	苦恼	_	VA	VA	_	14	dep	_	_
18	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x17 / 苦恼-01, cause, x20 / 看-10)
(x17 / 苦恼-01, degree, x19 / 很)
(x20 / 看-10, arg0, x22 / 王子)
(x20 / 看-10, arg1, x24 / 话)
(x20 / 看-10, arg2, x27 / 认真)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 话, mod, x25 / 无关紧要)
(x24 / 话, quant, x26 / 一些)
(x27 / 认真, degree, x28 / 太)

Input(Some(Graph((苦恼-01 :arg0 x22 :cause (看-10 :arg2 (认真 :degree 太) :arg1 (话 :quant 一些 :mod 无关紧要) :arg0 (王子 :mod 小-01)) :degree 很),ArrayBuffer(Span(16,17,List(0),苦恼,苦恼-01,false), Span(7,8,List(1),看,看-10,false), Span(10,11,List(2),认真,认真,false), Span(9,10,List(3),太,太,false), Span(6,7,List(4),话,话,false), Span(3,4,List(5),一些,一些,false), Span(4,5,List(6),无关紧要,无关紧要,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小-01,false), Span(15,16,List(9),很,很,false)),Map(2 -> 认真, 5 -> 一些, 8 -> 小-01, 7 -> 王子, 1 -> 看-10, 4 -> 话, 6 -> 无关紧要, 9 -> 很, 0 -> 苦恼-01, 3 -> 太),Map(x28 -> 太, x22 -> 王子, x19 -> 很, x25 -> 无关紧要, x27 -> 认真, x24 -> 话, x23 -> 小-01, x26 -> 一些, x20 -> 看-10, x17 -> 苦恼-01))),[Ljava.lang.String;@78a773fd,Annotation([Ljava.lang.String;@57c03d88,[Ljava.lang.String;@16aa8654,[Ljava.lang.String;@6d7fc27),Annotation([Ljava.lang.String;@45ac5f9b,[Ljava.lang.String;@135606db,[Ledu.cmu.lti.nlp.amr.Dependency;@518caac3),Annotation([Ljava.lang.String;@68034211,[Ljava.lang.String;@4f74980d,[Ljava.lang.String;@6c372fe6),Annotation([Ljava.lang.String;@58594a11,[Ljava.lang.String;@2a3888c1,[Ledu.cmu.lti.nlp.amr.Entity;@4167d97b))
AMR:
(x17 / 苦恼-01, degree, x19 / 很)
(x17 / 苦恼-01, op, x20 / 看-10)
(x20 / 看-10, degree, x24 / 话)
(x20 / 看-10, domain, x22 / 王子)
(x20 / 看-10, time, x27 / 认真)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 话, mod, x25 / 无关紧要)
(x24 / 话, quant, x26 / 一些)
(x27 / 认真, degree, x28 / 太)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 31,958 microseconds
Sentence: 有 一 天 他 告诉 我 说 ： “ 我 不 该 听信 她 的 话 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  听信 => 听信-01
Oracle Span 3:  告诉 => 告诉-01
Oracle Span 4:  她 => 她
Oracle Span 5:  我 => 我
Oracle Span 6:  话 => 话
Oracle Span 7:  该 => 该-01
Spans:
Span 3-4:  他 => 他
Span 12-13:  听信 => 听信-01
Span 4-5:  告诉 => 告诉-01
Span 13-14:  她 => 她
Span 5-6:  我 => 我
Span 15-16:  话 => 话
Span 11-12:  该 => 该-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 12-13:  听信 => 听信-01
Oracle Span 4-5:  告诉 => 告诉-01
Oracle Span 13-14:  她 => 她
Oracle Span 5-6:  我 => 我
Oracle Span 15-16:  话 => 话
Oracle Span 11-12:  该 => 该-01

Dependencies:
1	有	_	VE	VE	_	0	root	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	他	_	PN	PN	_	5	nsubj	_	_
5	告诉	_	VV	VV	_	1	dep	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	说	_	VV	VV	_	5	ccomp	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	7	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	该	_	DT	DT	_	13	dep	_	_
13	听信	_	VV	VV	_	7	ccomp	_	_
14	她	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	话	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 告诉-01, arg0, x2 / 他)
(x0 / 告诉-01, arg1, x3 / 该-01)
(x3 / 该-01, arg0, x5 / 听信-01)
(x5 / 听信-01, arg0, x6 / 我)
(x5 / 听信-01, arg1, x7 / 话)
(x7 / 话, poss, x8 / 她)

Input(Some(Graph((告诉-01 :time 有一天 :arg2 x6 :arg1 (该-01 :arg0 (听信-01 :arg1 (话 :poss 她) :arg0 我) :polarity -) :arg0 他),ArrayBuffer(Span(4,5,List(0),告诉,告诉-01,false), Span(11,12,List(1),该,该-01,false), Span(12,13,List(2),听信,听信-01,false), Span(15,16,List(3),话,话,false), Span(13,14,List(4),她,她,false), Span(5,6,List(5),我,我,false), Span(3,4,List(6),他,他,false)),Map(2 -> 听信-01, 5 -> 我, 1 -> 该-01, 4 -> 她, 6 -> 他, 0 -> 告诉-01, 3 -> 话),Map(x2 -> 他, x5 -> 听信-01, x8 -> 她, x7 -> 话, x3 -> 该-01, x6 -> 我, x0 -> 告诉-01))),[Ljava.lang.String;@14fa86ae,Annotation([Ljava.lang.String;@6e15fe2,[Ljava.lang.String;@68f1b17f,[Ljava.lang.String;@1722011b),Annotation([Ljava.lang.String;@57ad2aa7,[Ljava.lang.String;@5b3f61ff,[Ledu.cmu.lti.nlp.amr.Dependency;@3e2059ae),Annotation([Ljava.lang.String;@398dada8,[Ljava.lang.String;@7cb502c,[Ljava.lang.String;@275bf9b3),Annotation([Ljava.lang.String;@1b8a29df,[Ljava.lang.String;@4fbe37eb,[Ledu.cmu.lti.nlp.amr.Entity;@12a94400))
AMR:
(x0 / 告诉-01, direction, x2 / 他)
(x0 / 告诉-01, direction, x6 / 我)
(x5 / 听信-01, extent, x3 / 该-01)
(x5 / 听信-01, manner, x0 / 告诉-01)
(x7 / 话, poss, x5 / 听信-01)
(x7 / 话, poss, x8 / 她)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 16,552 microseconds
Sentence: 绝 不 该 听信 那些 花儿 的 话 ，

Oracle Span 1:  听信 => 听信-01
Oracle Span 2:  绝 => 绝
Oracle Span 3:  花儿 => 花儿
Oracle Span 4:  话 => 话
Oracle Span 5:  该 => 该-01
Oracle Span 6:  那些 => 那些
Spans:
Span 3-4:  听信 => 听信-01
Span 0-1:  绝 => 绝
Span 5-6:  花儿 => 花儿
Span 7-8:  话 => 话
Span 2-3:  该 => 该-01
Span 4-5:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  听信 => 听信-01
Oracle Span 0-1:  绝 => 绝
Oracle Span 5-6:  花儿 => 花儿
Oracle Span 7-8:  话 => 话
Oracle Span 2-3:  该 => 该-01
Oracle Span 4-5:  那些 => 那些

Dependencies:
1	绝	_	NN	NN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	该	_	DT	DT	_	4	dep	_	_
4	听信	_	VV	VV	_	0	root	_	_
5	那些	_	DT	DT	_	6	det	_	_
6	花儿	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	话	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 该-01, arg0, x4 / 听信-01)
(x0 / 该-01, manner, x2 / 绝)
(x4 / 听信-01, arg1, x5 / 话)
(x5 / 话, poss, x6 / 花儿)
(x6 / 花儿, mod, x7 / 那些)

Input(Some(Graph((该-01 :arg0 (听信-01 :arg1 (话 :poss (花儿 :mod 那些))) :polarity - :manner 绝),ArrayBuffer(Span(2,3,List(0),该,该-01,false), Span(3,4,List(1),听信,听信-01,false), Span(7,8,List(2),话,话,false), Span(5,6,List(3),花儿,花儿,false), Span(4,5,List(4),那些,那些,false), Span(0,1,List(5),绝,绝,false)),Map(2 -> 话, 5 -> 绝, 1 -> 听信-01, 4 -> 那些, 0 -> 该-01, 3 -> 花儿),Map(x2 -> 绝, x5 -> 话, x7 -> 那些, x4 -> 听信-01, x6 -> 花儿, x0 -> 该-01))),[Ljava.lang.String;@6a47b187,Annotation([Ljava.lang.String;@2049a9c1,[Ljava.lang.String;@1ef6d34c,[Ljava.lang.String;@46271dd6),Annotation([Ljava.lang.String;@11bb571c,[Ljava.lang.String;@7c51f34b,[Ledu.cmu.lti.nlp.amr.Dependency;@5495333e),Annotation([Ljava.lang.String;@2a225dd7,[Ljava.lang.String;@61eaec38,[Ljava.lang.String;@125290e5),Annotation([Ljava.lang.String;@6fa34d52,[Ljava.lang.String;@57576994,[Ledu.cmu.lti.nlp.amr.Entity;@616ac46a))
AMR:
(x0 / 该-01, ARG0, x4 / 听信-01)
(x0 / 该-01, manner, x2 / 绝)
(x4 / 听信-01, snt1, x5 / 话)
(x5 / 话, poss, x6 / 花儿)
(x6 / 花儿, mod, x7 / 那些)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,558 microseconds
Sentence: 看看 花 ， 闻闻 它 就 得 了 。

Oracle Span 1:  花 => 花
Spans:
Span 1-2:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  花 => 花

Dependencies:
1	看看	_	VV	VV	_	0	root	_	_
2	花	_	NN	NN	_	1	dobj	_	_
3	,	_	PU	PU	_	1	punct	_	_
4	闻闻	_	NR	NR	_	7	nsubj	_	_
5	它	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	得	_	VV	VV	_	1	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((得了-01 :arg0 (and :op (看-02 :arg1 花) :op (闻-02 :arg1 x12))),ArrayBuffer(Span(1,2,List(0),花,花,false)),Map(0 -> 花),Map(x12 -> 花))),[Ljava.lang.String;@67b9b51a,Annotation([Ljava.lang.String;@1205bd62,[Ljava.lang.String;@7ef27d7f,[Ljava.lang.String;@490caf5f),Annotation([Ljava.lang.String;@6337c201,[Ljava.lang.String;@5c669da8,[Ledu.cmu.lti.nlp.amr.Dependency;@31920ade),Annotation([Ljava.lang.String;@1d483de4,[Ljava.lang.String;@4032d386,[Ljava.lang.String;@28d18df5),Annotation([Ljava.lang.String;@934b6cb,[Ljava.lang.String;@55cf0d14,[Ledu.cmu.lti.nlp.amr.Entity;@3b74ac8))
AMR:


WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 3,842 microseconds
Sentence: 我 的 那 朵 花 使 我 的 星球 芳香 四溢 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  星球 => 星球
Oracle Span 3:  花 => 花
Oracle Span 4:  那 => 那
Spans:
Span 0-1:  我 => 我
Span 8-9:  星球 => 星球
Span 4-5:  花 => 花
Span 2-3:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  星球 => 星球
Oracle Span 4-5:  花 => 花
Oracle Span 2-3:  那 => 那

Dependencies:
1	我	_	PN	PN	_	5	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	5	det	_	_
4	朵	_	M	M	_	3	clf	_	_
5	花	_	NN	NN	_	6	nsubj	_	_
6	使	_	VV	VV	_	0	root	_	_
7	我	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	6	ccomp	_	_
10	芳香	_	VV	VV	_	6	dep	_	_
11	四溢	_	CD	CD	_	10	range	_	_
12	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 星球, poss, x12 / 我)
(x13 / 花, mod, x14 / 那)

Input(Some(Graph((芳香四溢 :arg0 (星球 :poss 我) :cause (花 :poss x12 :mod 那)),ArrayBuffer(Span(8,9,List(0),星球,星球,false), Span(0,1,List(1),我,我,false), Span(4,5,List(2),花,花,false), Span(2,3,List(3),那,那,false)),Map(2 -> 花, 1 -> 我, 0 -> 星球, 3 -> 那),Map(x13 -> 花, x12 -> 我, x11 -> 星球, x14 -> 那))),[Ljava.lang.String;@27adc16e,Annotation([Ljava.lang.String;@b83a9be,[Ljava.lang.String;@2609b277,[Ljava.lang.String;@1fd14d74),Annotation([Ljava.lang.String;@563e4951,[Ljava.lang.String;@4066c471,[Ledu.cmu.lti.nlp.amr.Dependency;@2b175c00),Annotation([Ljava.lang.String;@3eb81efb,[Ljava.lang.String;@1ae8bcbc,[Ljava.lang.String;@6cdba6dc),Annotation([Ljava.lang.String;@7d3d101b,[Ljava.lang.String;@30c8681,[Ledu.cmu.lti.nlp.amr.Entity;@5cdec700))
AMR:
(x11 / 星球, poss, x12 / 我)
(x13 / 花, mod, x14 / 那)
(x13 / 花, poss, x12 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 9,076 microseconds
Sentence: 可 我 不 会 享受 它 。

Oracle Span 1:  享受 => 享受-01
Oracle Span 2:  会 => 会-02
Oracle Span 3:  它 => 它
Oracle Span 4:  我 => 我
Spans:
Span 4-5:  享受 => 享受-01
Span 3-4:  会 => 会-02
Span 5-6:  它 => 它
Span 1-2:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  享受 => 享受-01
Oracle Span 3-4:  会 => 会-02
Oracle Span 5-6:  它 => 它
Oracle Span 1-2:  我 => 我

Dependencies:
1	可	_	VV	VV	_	5	mmod	_	_
2	我	_	PN	PN	_	5	dep	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	享受	_	VV	VV	_	0	root	_	_
6	它	_	PN	PN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 会-02, arg0, x4 / 享受-01)
(x4 / 享受-01, arg0, x5 / 我)
(x4 / 享受-01, arg1, x6 / 它)

Input(Some(Graph((contrast :arg2 (会-02 :arg0 (享受-01 :arg1 它 :arg0 我) :polarity -)),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(4,5,List(1),享受,享受-01,false), Span(5,6,List(2),它,它,false), Span(1,2,List(3),我,我,false)),Map(2 -> 它, 1 -> 享受-01, 0 -> 会-02, 3 -> 我),Map(x2 -> 会-02, x5 -> 我, x4 -> 享受-01, x6 -> 它))),[Ljava.lang.String;@6d026701,Annotation([Ljava.lang.String;@78aa1f72,[Ljava.lang.String;@1f75a668,[Ljava.lang.String;@35399441),Annotation([Ljava.lang.String;@4b7dc788,[Ljava.lang.String;@6304101a,[Ledu.cmu.lti.nlp.amr.Dependency;@5170bcf4),Annotation([Ljava.lang.String;@2812b107,[Ljava.lang.String;@df6620a,[Ljava.lang.String;@4e31276e),Annotation([Ljava.lang.String;@1a72a540,[Ljava.lang.String;@27d5a580,[Ledu.cmu.lti.nlp.amr.Entity;@198d6542))
AMR:
(x2 / 会-02, op, x4 / 享受-01)
(x4 / 享受-01, location, x5 / 我)
(x4 / 享受-01, purpose, x6 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 7,218 microseconds
Sentence: 关于 老虎 爪子 的 事 ， 本 应该 使 我 产生 同情 ， 却 反而 使 我 恼火 … ”

Oracle Span 1:  事 => 事
Oracle Span 2:  产生 => 产生-02
Oracle Span 3:  同情 => 同情-01
Oracle Span 4:  应该 => 应该-02
Oracle Span 5:  恼火 => 恼火-01
Oracle Span 6:  我 => 我
Oracle Span 7:  本 => 本
Oracle Span 8:  爪子 => 爪子
Oracle Span 9:  老虎 => 老虎
Spans:
Span 4-5:  事 => 事
Span 10-11:  产生 => 产生-02
Span 11-12:  同情 => 同情-01
Span 7-8:  应该 => 应该-02
Span 17-18:  恼火 => 恼火-01
Span 9-10:  我 => 我
Span 6-7:  本 => 本
Span 2-3:  爪子 => 爪子
Span 1-2:  老虎 => 老虎

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  事 => 事
Oracle Span 10-11:  产生 => 产生-02
Oracle Span 11-12:  同情 => 同情-01
Oracle Span 7-8:  应该 => 应该-02
Oracle Span 17-18:  恼火 => 恼火-01
Oracle Span 9-10:  我 => 我
Oracle Span 6-7:  本 => 本
Oracle Span 2-3:  爪子 => 爪子
Oracle Span 1-2:  老虎 => 老虎

Dependencies:
1	关于	_	P	P	_	9	prep	_	_
2	老虎	_	NN	NN	_	3	nn	_	_
3	爪子	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	事	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	本	_	DT	DT	_	8	det	_	_
8	应该	_	NN	NN	_	9	nsubj	_	_
9	使	_	VV	VV	_	0	root	_	_
10	我	_	PN	PN	_	11	nsubj	_	_
11	产生	_	VV	VV	_	9	ccomp	_	_
12	同情	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	却	_	AD	AD	_	16	advmod	_	_
15	反而	_	AD	AD	_	16	advmod	_	_
16	使	_	VV	VV	_	11	conj	_	_
17	我	_	PN	PN	_	18	nsubj	_	_
18	恼火	_	VV	VV	_	16	ccomp	_	_
19	…	_	NN	NN	_	18	dobj	_	_
20	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x37 / 应该-02, arg0, x51 / 产生-02)
(x37 / 应该-02, manner, x38 / 本)
(x51 / 产生-02, arg1, x52 / 同情-01)
(x51 / 产生-02, cause, x58 / 事)
(x52 / 同情-01, arg0, x57 / 我)
(x58 / 事, topic, x59 / 爪子)
(x60 / 老虎, part, x59 / 爪子)

Input(Some(Graph((say :arg1 (contrast :arg1 (应该-02 :arg0 (产生-02 :cause (事 :topic (爪子 :part-of 老虎)) :arg1 (同情-01 :arg0 我)) :manner 本) :arg2 (恼火-01 :cause x58 :arg0 x57))),ArrayBuffer(Span(7,8,List(0),应该,应该-02,false), Span(10,11,List(1),产生,产生-02,false), Span(4,5,List(2),事,事,false), Span(2,3,List(3),爪子,爪子,false), Span(1,2,List(4),老虎,老虎,false), Span(11,12,List(5),同情,同情-01,false), Span(9,10,List(6),我,我,false), Span(6,7,List(7),本,本,false), Span(17,18,List(8),恼火,恼火-01,false)),Map(2 -> 事, 5 -> 同情-01, 8 -> 恼火-01, 7 -> 本, 1 -> 产生-02, 4 -> 老虎, 6 -> 我, 0 -> 应该-02, 3 -> 爪子),Map(x52 -> 同情-01, x37 -> 应该-02, x58 -> 事, x57 -> 我, x51 -> 产生-02, x60 -> 老虎, x56 -> 恼火-01, x59 -> 爪子, x38 -> 本))),[Ljava.lang.String;@5e403b4a,Annotation([Ljava.lang.String;@5117dd67,[Ljava.lang.String;@5be49b60,[Ljava.lang.String;@2931522b),Annotation([Ljava.lang.String;@7674b62c,[Ljava.lang.String;@19e7a160,[Ledu.cmu.lti.nlp.amr.Dependency;@662706a7),Annotation([Ljava.lang.String;@45a4b042,[Ljava.lang.String;@16b2bb0c,[Ljava.lang.String;@327af41b),Annotation([Ljava.lang.String;@6cb6decd,[Ljava.lang.String;@c7045b9,[Ledu.cmu.lti.nlp.amr.Entity;@f99f5e0))
AMR:
(x37 / 应该-02, manner, x38 / 本)
(x37 / 应该-02, snt5, x51 / 产生-02)
(x37 / 应该-02, subset, x58 / 事)
(x51 / 产生-02, beneficiary, x57 / 我)
(x51 / 产生-02, degree, x56 / 恼火-01)
(x52 / 同情-01, time, x51 / 产生-02)
(x58 / 事, topic, x59 / 爪子)
(x60 / 老虎, part, x59 / 爪子)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 24,938 microseconds
Sentence: 他 还 告诉 我 说 ： “ 我 那时 什么 也 不 懂 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  告诉 => 告诉-01
Oracle Span 3:  懂 => 懂-01
Oracle Span 4:  我 => 我
Oracle Span 5:  还 => 还
Oracle Span 6:  那时 => 那时
Spans:
Span 0-1:  他 => 他
Span 2-3:  告诉 => 告诉-01
Span 12-13:  懂 => 懂-01
Span 3-4:  我 => 我
Span 1-2:  还 => 还
Span 8-9:  那时 => 那时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  告诉 => 告诉-01
Oracle Span 12-13:  懂 => 懂-01
Oracle Span 3-4:  我 => 我
Oracle Span 1-2:  还 => 还
Oracle Span 8-9:  那时 => 那时

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	告诉	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	说	_	VV	VV	_	3	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	13	punct	_	_
8	我	_	PN	PN	_	13	nsubj	_	_
9	那时	_	NT	NT	_	13	tmod	_	_
10	什么	_	PN	PN	_	13	nsubj	_	_
11	也	_	AD	AD	_	13	advmod	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	懂	_	VV	VV	_	5	ccomp	_	_
14	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 告诉-01, arg0, x3 / 他)
(x0 / 告诉-01, arg1, x5 / 懂-01)
(x0 / 告诉-01, arg2, x4 / 我)
(x0 / 告诉-01, manner, x2 / 还)
(x5 / 懂-01, time, x9 / 那时)

Input(Some(Graph((告诉-01 :mode expressive :arg1 (懂-01 :time 那时 :arg1 anything :polarity - :arg0 x4) :arg2 我 :arg0 他 :manner 还),ArrayBuffer(Span(2,3,List(0),告诉,告诉-01,false), Span(12,13,List(1),懂,懂-01,false), Span(8,9,List(2),那时,那时,false), Span(3,4,List(3),我,我,false), Span(0,1,List(4),他,他,false), Span(1,2,List(5),还,还,false)),Map(2 -> 那时, 5 -> 还, 1 -> 懂-01, 4 -> 他, 0 -> 告诉-01, 3 -> 我),Map(x2 -> 还, x5 -> 懂-01, x4 -> 我, x3 -> 他, x9 -> 那时, x0 -> 告诉-01))),[Ljava.lang.String;@6aa61224,Annotation([Ljava.lang.String;@30bce90b,[Ljava.lang.String;@3e6f3f28,[Ljava.lang.String;@7e19ebf0),Annotation([Ljava.lang.String;@2474f125,[Ljava.lang.String;@7357a011,[Ledu.cmu.lti.nlp.amr.Dependency;@3406472c),Annotation([Ljava.lang.String;@5717c37,[Ljava.lang.String;@68f4865,[Ljava.lang.String;@4816278d),Annotation([Ljava.lang.String;@4eaf3684,[Ljava.lang.String;@40317ba2,[Ledu.cmu.lti.nlp.amr.Entity;@3c01cfa1))
AMR:
(x0 / 告诉-01, ARG3, x4 / 我)
(x0 / 告诉-01, manner, x2 / 还)
(x0 / 告诉-01, prep-following, x3 / 他)
(x0 / 告诉-01, time, x9 / 那时)
(x5 / 懂-01, time, x9 / 那时)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,488 microseconds
Sentence: 我 应该 根据 她 的 行为 ， 而 不 是 根据 她 的 话 来 判断 她 。

Oracle Span 1:  判断 => 判断-01
Oracle Span 2:  她 => 她
Oracle Span 3:  应该 => 应该-01
Oracle Span 4:  我 => 我
Oracle Span 5:  根据 => 根据-01
Oracle Span 6:  根据 => 根据
Oracle Span 7:  行为 => 行为
Oracle Span 8:  话 => 话
Spans:
Span 15-16:  判断 => 判断-01
Span 3-4:  她 => 她
Span 1-2:  应该 => 应该-01
Span 0-1:  我 => 我
Span 2-3:  根据 => 根据-01
Span 10-11:  根据 => 根据
Span 5-6:  行为 => 行为
Span 13-14:  话 => 话

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  判断 => 判断-01
Oracle Span 3-4:  她 => 她
Oracle Span 1-2:  应该 => 应该-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  根据 => 根据-01
Oracle Span 10-11:  根据 => 根据
Oracle Span 5-6:  行为 => 行为
Oracle Span 13-14:  话 => 话

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	应该	_	VV	VV	_	0	root	_	_
3	根据	_	P	P	_	6	assmod	_	_
4	她	_	PN	PN	_	3	pobj	_	_
5	的	_	DEG	DEG	_	3	assm	_	_
6	行为	_	NN	NN	_	2	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	而	_	AD	AD	_	10	advmod	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	是	_	VC	VC	_	2	conj	_	_
11	根据	_	P	P	_	14	assmod	_	_
12	她	_	PN	PN	_	11	pobj	_	_
13	的	_	DEG	DEG	_	11	assm	_	_
14	话	_	NN	NN	_	10	attr	_	_
15	来	_	MSP	MSP	_	16	prtmod	_	_
16	判断	_	VV	VV	_	10	dep	_	_
17	她	_	PN	PN	_	16	dobj	_	_
18	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x31 / 判断-01, arg0, x32 / 我)
(x31 / 判断-01, arg1, x33 / 她)
(x31 / 判断-01, manner, x34 / 根据-01)
(x34 / 根据-01, arg1, x36 / 行为)
(x41 / 根据, arg1, x44 / 话)

Input(Some(Graph((应该-01 :arg0 (and :op (判断-01 :manner (根据-01 :arg1 (行为 :poss x33) :arg0 x32) :arg1 她 :arg0 我) :op (判断-01 :arg0 x32 :arg1 x33 :manner (根据 :arg1 (话 :poss x33) :arg0 x32 :polarity -)))),ArrayBuffer(Span(1,2,List(0),应该,应该-01,false), Span(15,16,List(1),判断,判断-01,false), Span(2,3,List(2),根据,根据-01,false), Span(5,6,List(3),行为,行为,false), Span(3,4,List(4),她,她,false), Span(0,1,List(5),我,我,false), Span(10,11,List(6),根据,根据,false), Span(13,14,List(7),话,话,false)),Map(2 -> 根据-01, 5 -> 我, 7 -> 话, 1 -> 判断-01, 4 -> 她, 6 -> 根据, 0 -> 应该-01, 3 -> 行为),Map(x34 -> 根据-01, x31 -> 判断-01, x33 -> 她, x27 -> 应该-01, x36 -> 行为, x41 -> 根据, x44 -> 话, x32 -> 我))),[Ljava.lang.String;@45d2ade3,Annotation([Ljava.lang.String;@727eb8cb,[Ljava.lang.String;@39d9314d,[Ljava.lang.String;@b978d10),Annotation([Ljava.lang.String;@5b7a8434,[Ljava.lang.String;@5c45d770,[Ledu.cmu.lti.nlp.amr.Dependency;@2ce6c6ec),Annotation([Ljava.lang.String;@1bae316d,[Ljava.lang.String;@147a5d08,[Ljava.lang.String;@6676f6a0),Annotation([Ljava.lang.String;@7cbd9d24,[Ljava.lang.String;@1672fe87,[Ledu.cmu.lti.nlp.amr.Entity;@5026735c))
AMR:
(x27 / 应该-01, ARG5, x34 / 根据-01)
(x31 / 判断-01, ARG5, x44 / 话)
(x31 / 判断-01, degree, x32 / 我)
(x31 / 判断-01, manner, x34 / 根据-01)
(x34 / 根据-01, ARG0, x36 / 行为)
(x34 / 根据-01, ARG5, x33 / 她)
(x41 / 根据, location, x44 / 话)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.2
Decoded in 22,908 microseconds
Sentence: 她 使 我 的 生活 芬芳 多彩 ，

Oracle Span 1:  多彩 => 多彩-01
Oracle Span 2:  她 => 她
Oracle Span 3:  我 => 我
Oracle Span 4:  生活 => 生活
Oracle Span 5:  芬芳 => 芬芳
Spans:
Span 6-7:  多彩 => 多彩-01
Span 0-1:  她 => 她
Span 2-3:  我 => 我
Span 4-5:  生活 => 生活
Span 5-6:  芬芳 => 芬芳

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  多彩 => 多彩-01
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  生活 => 生活
Oracle Span 5-6:  芬芳 => 芬芳

Dependencies:
1	她	_	PN	PN	_	2	nsubj	_	_
2	使	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	生活	_	NN	NN	_	2	dobj	_	_
6	芬芳	_	VA	VA	_	2	dep	_	_
7	多彩	_	VA	VA	_	2	conj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 生活, poss, x11 / 我)

Input(Some(Graph((and :op 芬芳 :op 多彩-01 :arg0 (生活 :poss 我) :cause 她),ArrayBuffer(Span(5,6,List(0),芬芳,芬芳,false), Span(6,7,List(1),多彩,多彩-01,false), Span(4,5,List(2),生活,生活,false), Span(2,3,List(3),我,我,false), Span(0,1,List(4),她,她,false)),Map(2 -> 生活, 1 -> 多彩-01, 4 -> 她, 0 -> 芬芳, 3 -> 我),Map(x10 -> 生活, x8 -> 芬芳, x12 -> 她, x11 -> 我, x9 -> 多彩-01))),[Ljava.lang.String;@1b45c0e,Annotation([Ljava.lang.String;@11f0a5a1,[Ljava.lang.String;@10f7f7de,[Ljava.lang.String;@73a8da0f),Annotation([Ljava.lang.String;@50dfbc58,[Ljava.lang.String;@4416d64f,[Ledu.cmu.lti.nlp.amr.Dependency;@6bf08014),Annotation([Ljava.lang.String;@5e3d57c7,[Ljava.lang.String;@732d0d24,[Ljava.lang.String;@1fb19a0),Annotation([Ljava.lang.String;@6ee4d9ab,[Ljava.lang.String;@5a5338df,[Ledu.cmu.lti.nlp.amr.Entity;@418c5a9c))
AMR:
(x10 / 生活, poss, x11 / 我)
(x12 / 她, mod, x10 / 生活)
(x8 / 芬芳, ARG4, x10 / 生活)
(x8 / 芬芳, ARG6, x9 / 多彩-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.3
Decoded in 10,555 microseconds
Sentence: 我 真 不 该 离开 她 跑 出来 。

Oracle Span 1:  出来 => 出来
Oracle Span 2:  她 => 她
Oracle Span 3:  我 => 我
Oracle Span 4:  真 => 真
Oracle Span 5:  离开 => 离开-01
Oracle Span 6:  该 => 该-01
Oracle Span 7:  跑 => 跑-01
Spans:
Span 7-8:  出来 => 出来
Span 5-6:  她 => 她
Span 0-1:  我 => 我
Span 1-2:  真 => 真
Span 4-5:  离开 => 离开-01
Span 3-4:  该 => 该-01
Span 6-7:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出来 => 出来
Oracle Span 5-6:  她 => 她
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  真 => 真
Oracle Span 4-5:  离开 => 离开-01
Oracle Span 3-4:  该 => 该-01
Oracle Span 6-7:  跑 => 跑-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	真	_	AD	AD	_	5	advmod	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	该	_	VV	VV	_	5	mmod	_	_
5	离开	_	VV	VV	_	0	root	_	_
6	她	_	PN	PN	_	5	dobj	_	_
7	跑	_	VV	VV	_	5	dep	_	_
8	出来	_	VV	VV	_	7	comod	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 真, arg0, x15 / 该-01)
(x20 / 离开-01, arg0, x21 / 我)
(x20 / 离开-01, arg1, x22 / 她)
(x23 / 跑-01, direction, x25 / 出来)

Input(Some(Graph((真 :arg0 (该-01 :arg0 (and :op (离开-01 :arg1 她 :arg0 我) :op (跑-01 :direction 出来 :arg0 x21)) :polarity -)),ArrayBuffer(Span(1,2,List(0),真,真,false), Span(3,4,List(1),该,该-01,false), Span(4,5,List(2),离开,离开-01,false), Span(5,6,List(3),她,她,false), Span(0,1,List(4),我,我,false), Span(6,7,List(5),跑,跑-01,false), Span(7,8,List(6),出来,出来,false)),Map(2 -> 离开-01, 5 -> 跑-01, 1 -> 该-01, 4 -> 我, 6 -> 出来, 0 -> 真, 3 -> 她),Map(x22 -> 她, x25 -> 出来, x13 -> 真, x21 -> 我, x15 -> 该-01, x23 -> 跑-01, x20 -> 离开-01))),[Ljava.lang.String;@18e36d14,Annotation([Ljava.lang.String;@5082d622,[Ljava.lang.String;@13d4992d,[Ljava.lang.String;@302f7971),Annotation([Ljava.lang.String;@332729ad,[Ljava.lang.String;@75d2da2d,[Ledu.cmu.lti.nlp.amr.Dependency;@4278284b),Annotation([Ljava.lang.String;@9573584,[Ljava.lang.String;@3370f42,[Ljava.lang.String;@6057aebb),Annotation([Ljava.lang.String;@63eef88a,[Ljava.lang.String;@53251a66,[Ledu.cmu.lti.nlp.amr.Entity;@6853425f))
AMR:
(x13 / 真, manner, x15 / 该-01)
(x20 / 离开-01, ARG0, x15 / 该-01)
(x20 / 离开-01, prep-on-behalf, x23 / 跑-01)
(x20 / 离开-01, purpose, x22 / 她)
(x20 / 离开-01, value, x21 / 我)
(x23 / 跑-01, direction, x25 / 出来)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
Decoded in 16,835 microseconds
Sentence: 我 本 应该 猜出 在 她 那 令 人 爱怜 的 花招 后面 所 隐藏 的 温情 。

Oracle Span 1:  人 => 人
Oracle Span 2:  她 => 她
Oracle Span 3:  应该 => 应该-02
Oracle Span 4:  我 => 我
Oracle Span 5:  本 => 本
Oracle Span 6:  温情 => 温情
Oracle Span 7:  爱怜 => 爱怜-01
Oracle Span 8:  猜出 => 猜出-01
Oracle Span 9:  花招 => 花招
Oracle Span 10:  那 => 那
Oracle Span 11:  隐藏 => 隐藏-01
Spans:
Span 8-9:  人 => 人
Span 5-6:  她 => 她
Span 2-3:  应该 => 应该-02
Span 0-1:  我 => 我
Span 1-2:  本 => 本
Span 16-17:  温情 => 温情
Span 9-10:  爱怜 => 爱怜-01
Span 3-4:  猜出 => 猜出-01
Span 11-12:  花招 => 花招
Span 6-7:  那 => 那
Span 14-15:  隐藏 => 隐藏-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 5-6:  她 => 她
Oracle Span 2-3:  应该 => 应该-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  本 => 本
Oracle Span 16-17:  温情 => 温情
Oracle Span 9-10:  爱怜 => 爱怜-01
Oracle Span 3-4:  猜出 => 猜出-01
Oracle Span 11-12:  花招 => 花招
Oracle Span 6-7:  那 => 那
Oracle Span 14-15:  隐藏 => 隐藏-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	本	_	DT	DT	_	4	dep	_	_
3	应该	_	VV	VV	_	4	mmod	_	_
4	猜出	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	15	prep	_	_
6	她	_	PN	PN	_	8	nsubj	_	_
7	那	_	PN	PN	_	8	nsubj	_	_
8	令	_	VV	VV	_	13	rcmod	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	爱怜	_	VA	VA	_	8	dep	_	_
11	的	_	DEC	DEC	_	8	cpm	_	_
12	花招	_	NN	NN	_	13	nn	_	_
13	后面	_	NN	NN	_	5	pobj	_	_
14	所	_	MSP	MSP	_	15	prtmod	_	_
15	隐藏	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	温情	_	NN	NN	_	4	dobj	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 应该-02, arg0, x3 / 猜出-01)
(x0 / 应该-02, manner, x2 / 本)
(x13 / 隐藏-01, arg1, x12 / 温情)
(x13 / 隐藏-01, arg2, x14 / 花招)
(x14 / 花招, mod, x18 / 那)
(x14 / 花招, poss, x17 / 她)
(x15 / 爱怜-01, arg0, x16 / 人)
(x15 / 爱怜-01, arg1, x14 / 花招)
(x3 / 猜出-01, arg0, x4 / 我)
(x3 / 猜出-01, arg1, x12 / 温情)

Input(Some(Graph((应该-02 :arg0 (猜出-01 :arg1 (温情 :arg1-of (隐藏-01 :arg2 (花招 :mod 那 :poss 她 :arg1-of (爱怜-01 :arg0 人)))) :arg0 我) :manner 本),ArrayBuffer(Span(2,3,List(0),应该,应该-02,false), Span(3,4,List(1),猜出,猜出-01,false), Span(16,17,List(2),温情,温情,false), Span(14,15,List(3),隐藏,隐藏-01,false), Span(11,12,List(4),花招,花招,false), Span(6,7,List(5),那,那,false), Span(5,6,List(6),她,她,false), Span(9,10,List(7),爱怜,爱怜-01,false), Span(8,9,List(8),人,人,false), Span(0,1,List(9),我,我,false), Span(1,2,List(10),本,本,false)),Map(2 -> 温情, 5 -> 那, 8 -> 人, 7 -> 爱怜-01, 1 -> 猜出-01, 4 -> 花招, 6 -> 她, 9 -> 我, 0 -> 应该-02, 10 -> 本, 3 -> 隐藏-01),Map(x16 -> 人, x2 -> 本, x13 -> 隐藏-01, x12 -> 温情, x15 -> 爱怜-01, x18 -> 那, x4 -> 我, x3 -> 猜出-01, x14 -> 花招, x17 -> 她, x0 -> 应该-02))),[Ljava.lang.String;@352c1b98,Annotation([Ljava.lang.String;@21129f1f,[Ljava.lang.String;@5a9f4771,[Ljava.lang.String;@282cb7c7),Annotation([Ljava.lang.String;@7d898981,[Ljava.lang.String;@48d61b48,[Ledu.cmu.lti.nlp.amr.Dependency;@68d279ec),Annotation([Ljava.lang.String;@258d79be,[Ljava.lang.String;@14f9390f,[Ljava.lang.String;@6c0d7c83),Annotation([Ljava.lang.String;@176b75f7,[Ljava.lang.String;@5965be2d,[Ledu.cmu.lti.nlp.amr.Entity;@409c54f))
AMR:
(x0 / 应该-02, manner, x2 / 本)
(x0 / 应该-02, op, x3 / 猜出-01)
(x13 / 隐藏-01, degree, x14 / 花招)
(x13 / 隐藏-01, op, x12 / 温情)
(x14 / 花招, mod, x18 / 那)
(x14 / 花招, poss, x17 / 她)
(x15 / 爱怜-01, ARG3, x14 / 花招)
(x15 / 爱怜-01, ARG4, x16 / 人)
(x3 / 猜出-01, op, x4 / 我)
(x3 / 猜出-01, time, x12 / 温情)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.0.2
WARNING: makeIds can't find span Id: 0.1.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 56,134 microseconds
Sentence: 花 是 多么 自相矛盾 ！

Oracle Span 1:  多么 => 多么
Oracle Span 2:  自相矛盾 => 自相矛盾-01
Oracle Span 3:  花 => 花
Spans:
Span 2-3:  多么 => 多么
Span 3-4:  自相矛盾 => 自相矛盾-01
Span 0-1:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  多么 => 多么
Oracle Span 3-4:  自相矛盾 => 自相矛盾-01
Oracle Span 0-1:  花 => 花

Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	多么	_	NN	NN	_	4	nn	_	_
4	自相矛盾	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 自相矛盾-01, arg0, x3 / 花)
(x0 / 自相矛盾-01, degree, x2 / 多么)

Input(Some(Graph((自相矛盾-01 :mode expressive :arg0 花 :degree 多么),ArrayBuffer(Span(3,4,List(0),自相矛盾,自相矛盾-01,false), Span(0,1,List(1),花,花,false), Span(2,3,List(2),多么,多么,false)),Map(2 -> 多么, 1 -> 花, 0 -> 自相矛盾-01),Map(x2 -> 多么, x3 -> 花, x0 -> 自相矛盾-01))),[Ljava.lang.String;@3e74829,Annotation([Ljava.lang.String;@4f6f416f,[Ljava.lang.String;@3b8f0a79,[Ljava.lang.String;@71e693fa),Annotation([Ljava.lang.String;@48793bef,[Ljava.lang.String;@7d286fb6,[Ledu.cmu.lti.nlp.amr.Dependency;@3eb77ea8),Annotation([Ljava.lang.String;@7b8b43c7,[Ljava.lang.String;@7aaca91a,[Ljava.lang.String;@44c73c26),Annotation([Ljava.lang.String;@41005828,[Ljava.lang.String;@60b4beb4,[Ledu.cmu.lti.nlp.amr.Entity;@7fcf2fc1))
AMR:
(x0 / 自相矛盾-01, degree, x2 / 多么)
(x0 / 自相矛盾-01, degree, x3 / 花)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,460 microseconds
Sentence: 我 当时 太 年青 ， 还 不 懂得 爱 她 。 ”

Oracle Span 1:  太 => 太
Oracle Span 2:  她 => 她
Oracle Span 3:  当时 => 当时
Oracle Span 4:  懂得 => 懂得-01
Oracle Span 5:  我 => 我
Oracle Span 6:  爱 => 爱-01
Oracle Span 7:  还 => 还
Spans:
Span 2-3:  太 => 太
Span 9-10:  她 => 她
Span 1-2:  当时 => 当时
Span 7-8:  懂得 => 懂得-01
Span 0-1:  我 => 我
Span 8-9:  爱 => 爱-01
Span 5-6:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  太 => 太
Oracle Span 9-10:  她 => 她
Oracle Span 1-2:  当时 => 当时
Oracle Span 7-8:  懂得 => 懂得-01
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  爱 => 爱-01
Oracle Span 5-6:  还 => 还

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	当时	_	NT	NT	_	4	tmod	_	_
3	太	_	AD	AD	_	4	advmod	_	_
4	年青	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	还	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	懂得	_	AD	AD	_	9	advmod	_	_
9	爱	_	VV	VV	_	4	ccomp	_	_
10	她	_	PN	PN	_	9	dobj	_	_
11	。	_	PU	PU	_	4	punct	_	_
12	”	_	PU	PU	_	4	punct	_	_
13	当时	_	NT	NT	_	9	xsubj	_	_
14	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x20 / 懂得-01, arg1, x24 / 爱-01)
(x20 / 懂得-01, manner, x23 / 还)
(x24 / 爱-01, arg1, x26 / 她)

Input(Some(Graph((say :arg1 (causation :arg1 (年轻-01 :degree 太 :arg0 我 :time 当时) :arg2 (懂得-01 :arg1 (爱-01 :arg1 她 :arg0 x18) :manner 还 :arg0 x18 :polarity -))),ArrayBuffer(Span(2,3,List(0),太,太,false), Span(0,1,List(1),我,我,false), Span(1,2,List(2),当时,当时,false), Span(7,8,List(3),懂得,懂得-01,false), Span(8,9,List(4),爱,爱-01,false), Span(9,10,List(5),她,她,false), Span(5,6,List(6),还,还,false)),Map(2 -> 当时, 5 -> 她, 1 -> 我, 4 -> 爱-01, 6 -> 还, 0 -> 太, 3 -> 懂得-01),Map(x19 -> 当时, x24 -> 爱-01, x18 -> 我, x23 -> 还, x26 -> 她, x20 -> 懂得-01, x17 -> 太))),[Ljava.lang.String;@2141a12,Annotation([Ljava.lang.String;@4196c360,[Ljava.lang.String;@41294f8,[Ljava.lang.String;@225129c),Annotation([Ljava.lang.String;@20435c40,[Ljava.lang.String;@573906eb,[Ledu.cmu.lti.nlp.amr.Dependency;@479ceda0),Annotation([Ljava.lang.String;@6d07a63d,[Ljava.lang.String;@571c5681,[Ljava.lang.String;@488d1cd7),Annotation([Ljava.lang.String;@68dc098b,[Ljava.lang.String;@38ba6ce3,[Ledu.cmu.lti.nlp.amr.Entity;@d278d2b))
AMR:
(x19 / 当时, domain, x18 / 我)
(x19 / 当时, snt11, x17 / 太)
(x20 / 懂得-01, manner, x17 / 太)
(x20 / 懂得-01, manner, x23 / 还)
(x20 / 懂得-01, snt11, x24 / 爱-01)
(x24 / 爱-01, prep-in, x26 / 她)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.1
WARNING: makeIds can't find span Id: 0.0.1.2
Decoded in 25,348 microseconds
Sentence: IX 。

Oracle Span 1:  IX => IX
Spans:
Span 0-1:  IX => IX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  IX => IX

Dependencies:
1	IX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(IX,ArrayBuffer(Span(0,1,List(0),IX,IX,false)),Map(0 -> IX),Map(x0 -> IX))),[Ljava.lang.String;@2d6c53fc,Annotation([Ljava.lang.String;@25f4878b,[Ljava.lang.String;@4e423aa2,[Ljava.lang.String;@7fbdb894),Annotation([Ljava.lang.String;@3081f72c,[Ljava.lang.String;@3148f668,[Ledu.cmu.lti.nlp.amr.Dependency;@6e005dc9),Annotation([Ljava.lang.String;@7ceb3185,[Ljava.lang.String;@436c81a3,[Ljava.lang.String;@3561c410),Annotation([Ljava.lang.String;@59e32960,[Ljava.lang.String;@7c214cc0,[Ledu.cmu.lti.nlp.amr.Entity;@5b67bb7e))
AMR:


Decoded in 1,784 microseconds
Sentence: 我 想 小 王子 大概 是 利用 一 群 候鸟 迁徙 的 机会 跑 出来 的 。

Oracle Span 1:  候鸟 => 候鸟
Oracle Span 2:  出来 => 出来-01
Oracle Span 3:  利用 => 利用-01
Oracle Span 4:  大概 => 大概
Oracle Span 5:  小 => 小-01
Oracle Span 6:  想 => 想-01
Oracle Span 7:  我 => 我
Oracle Span 8:  机会 => 机会
Oracle Span 9:  王子 => 王子
Oracle Span 10:  跑 => 跑-01
Oracle Span 11:  迁徙 => 迁徙-01
Spans:
Span 9-10:  候鸟 => 候鸟
Span 14-15:  出来 => 出来-01
Span 6-7:  利用 => 利用-01
Span 4-5:  大概 => 大概
Span 2-3:  小 => 小-01
Span 1-2:  想 => 想-01
Span 0-1:  我 => 我
Span 12-13:  机会 => 机会
Span 3-4:  王子 => 王子
Span 13-14:  跑 => 跑-01
Span 10-11:  迁徙 => 迁徙-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  候鸟 => 候鸟
Oracle Span 14-15:  出来 => 出来-01
Oracle Span 6-7:  利用 => 利用-01
Oracle Span 4-5:  大概 => 大概
Oracle Span 2-3:  小 => 小-01
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  机会 => 机会
Oracle Span 3-4:  王子 => 王子
Oracle Span 13-14:  跑 => 跑-01
Oracle Span 10-11:  迁徙 => 迁徙-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	dobj	_	_
5	大概	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	2	dep	_	_
7	利用	_	VV	VV	_	13	rcmod	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	群	_	M	M	_	11	clf	_	_
10	候鸟	_	NN	NN	_	11	nn	_	_
11	迁徙	_	NN	NN	_	7	dobj	_	_
12	的	_	DEC	DEC	_	7	cpm	_	_
13	机会	_	NN	NN	_	14	nsubj	_	_
14	跑	_	VV	VV	_	6	attr	_	_
15	出来	_	VV	VV	_	14	comod	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 利用-01)
(x11 / 跑-01, direction, x13 / 出来-01)
(x3 / 利用-01, arg0, x4 / 王子)
(x3 / 利用-01, arg1, x7 / 机会)
(x3 / 利用-01, manner, x6 / 大概)
(x3 / 利用-01, purpose, x11 / 跑-01)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 机会, mod, x8 / 迁徙-01)
(x8 / 迁徙-01, arg0, x9 / 候鸟)

Input(Some(Graph((想-01 :arg1 (利用-01 :purpose (跑-01 :direction 出来-01 :arg0 x4) :arg1 (机会 :mod (迁徙-01 :arg0 (候鸟 :quant 1))) :manner 大概 :arg0 (王子 :mod 小-01)) :arg0 我),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(6,7,List(1),利用,利用-01,false), Span(13,14,List(2),跑,跑-01,false), Span(14,15,List(3),出来,出来-01,false), Span(12,13,List(4),机会,机会,false), Span(10,11,List(5),迁徙,迁徙-01,false), Span(9,10,List(6),候鸟,候鸟,false), Span(4,5,List(7),大概,大概,false), Span(3,4,List(8),王子,王子,false), Span(2,3,List(9),小,小-01,false), Span(0,1,List(10),我,我,false)),Map(2 -> 跑-01, 5 -> 迁徙-01, 8 -> 王子, 7 -> 大概, 1 -> 利用-01, 4 -> 机会, 6 -> 候鸟, 9 -> 小-01, 0 -> 想-01, 10 -> 我, 3 -> 出来-01),Map(x2 -> 我, x5 -> 小-01, x13 -> 出来-01, x8 -> 迁徙-01, x7 -> 机会, x4 -> 王子, x11 -> 跑-01, x3 -> 利用-01, x6 -> 大概, x9 -> 候鸟, x0 -> 想-01))),[Ljava.lang.String;@609db546,Annotation([Ljava.lang.String;@20f5281c,[Ljava.lang.String;@56c4278e,[Ljava.lang.String;@301eda63),Annotation([Ljava.lang.String;@3d246ea3,[Ljava.lang.String;@341814d3,[Ledu.cmu.lti.nlp.amr.Dependency;@4397ad89),Annotation([Ljava.lang.String;@59cba5a,[Ljava.lang.String;@1bd39d3c,[Ljava.lang.String;@6f19ac19),Annotation([Ljava.lang.String;@119cbf96,[Ljava.lang.String;@71329995,[Ledu.cmu.lti.nlp.amr.Entity;@768fc0f2))
AMR:
(x0 / 想-01, ARG6, x4 / 王子)
(x0 / 想-01, time, x3 / 利用-01)
(x0 / 想-01, value, x2 / 我)
(x11 / 跑-01, direction, x13 / 出来-01)
(x3 / 利用-01, manner, x6 / 大概)
(x3 / 利用-01, purpose, x11 / 跑-01)
(x3 / 利用-01, value, x7 / 机会)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 机会, mod, x8 / 迁徙-01)
(x8 / 迁徙-01, location, x9 / 候鸟)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.3.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 54,161 microseconds
Sentence: 在 他 出发 的 那 天 早上 ， 他 把 他 的 星球 收拾 得 整整齐齐 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  出发 => 出发-01
Oracle Span 3:  收拾 => 收拾-01
Oracle Span 4:  整整齐齐 => 整整齐齐
Oracle Span 5:  早上 => 早上
Oracle Span 6:  星球 => 星球
Spans:
Span 1-2:  他 => 他
Span 2-3:  出发 => 出发-01
Span 13-14:  收拾 => 收拾-01
Span 15-16:  整整齐齐 => 整整齐齐
Span 6-7:  早上 => 早上
Span 12-13:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  出发 => 出发-01
Oracle Span 13-14:  收拾 => 收拾-01
Oracle Span 15-16:  整整齐齐 => 整整齐齐
Oracle Span 6-7:  早上 => 早上
Oracle Span 12-13:  星球 => 星球

Dependencies:
1	在	_	P	P	_	3	prep	_	_
2	他	_	PN	PN	_	1	pobj	_	_
3	出发	_	VV	VV	_	6	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	那	_	DT	DT	_	6	det	_	_
6	天	_	NN	NN	_	16	nsubj	_	_
7	早上	_	NT	NT	_	16	tmod	_	_
8	,	_	PU	PU	_	16	punct	_	_
9	他	_	PN	PN	_	16	nsubj	_	_
10	把	_	BA	BA	_	16	ba	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	星球	_	NN	NN	_	16	nsubj	_	_
14	收拾	_	VV	VV	_	16	dep	_	_
15	得	_	DER	DER	_	16	dep	_	_
16	整整齐齐	_	VV	VV	_	0	root	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 收拾-01, arg0, x2 / 他)
(x0 / 收拾-01, arg1, x3 / 星球)
(x0 / 收拾-01, time, x6 / 出发-01)
(x5 / 整整齐齐, cause, x0 / 收拾-01)
(x6 / 出发-01, time, x8 / 早上)

Input(Some(Graph((收拾-01 :time (出发-01 :time (早上 :time 那天) :arg0 x2) :cause-of 整整齐齐 :arg1 (星球 :poss x2) :arg0 他),ArrayBuffer(Span(13,14,List(0),收拾,收拾-01,false), Span(2,3,List(1),出发,出发-01,false), Span(6,7,List(2),早上,早上,false), Span(15,16,List(3),整整齐齐,整整齐齐,false), Span(12,13,List(4),星球,星球,false), Span(1,2,List(5),他,他,false)),Map(2 -> 早上, 5 -> 他, 1 -> 出发-01, 4 -> 星球, 0 -> 收拾-01, 3 -> 整整齐齐),Map(x2 -> 他, x5 -> 整整齐齐, x8 -> 早上, x3 -> 星球, x6 -> 出发-01, x0 -> 收拾-01))),[Ljava.lang.String;@5454d35e,Annotation([Ljava.lang.String;@20c0a64d,[Ljava.lang.String;@455b6df1,[Ljava.lang.String;@4ddbbdf8),Annotation([Ljava.lang.String;@3f67593e,[Ljava.lang.String;@1ab06251,[Ledu.cmu.lti.nlp.amr.Dependency;@41ab013),Annotation([Ljava.lang.String;@14bee915,[Ljava.lang.String;@1115ec15,[Ljava.lang.String;@82ea68c),Annotation([Ljava.lang.String;@59e505b2,[Ljava.lang.String;@3af0a9da,[Ledu.cmu.lti.nlp.amr.Entity;@43b9fd5))
AMR:
(x0 / 收拾-01, ARG2, x3 / 星球)
(x0 / 收拾-01, time, x6 / 出发-01)
(x5 / 整整齐齐, prep-on-behalf, x0 / 收拾-01)
(x6 / 出发-01, location, x2 / 他)
(x6 / 出发-01, time, x8 / 早上)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 33,409 microseconds
Sentence: 把 它 上头 的 活 火山 打扫 得 干干净净 。

Oracle Span 1:  上头 => 上头
Oracle Span 2:  它 => 它
Oracle Span 3:  干干净净 => 干干净净
Oracle Span 4:  打扫 => 打扫-01
Oracle Span 5:  活 => 活
Oracle Span 6:  火山 => 火山
Spans:
Span 2-3:  上头 => 上头
Span 1-2:  它 => 它
Span 8-9:  干干净净 => 干干净净
Span 6-7:  打扫 => 打扫-01
Span 4-5:  活 => 活
Span 5-6:  火山 => 火山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  上头 => 上头
Oracle Span 1-2:  它 => 它
Oracle Span 8-9:  干干净净 => 干干净净
Oracle Span 6-7:  打扫 => 打扫-01
Oracle Span 4-5:  活 => 活
Oracle Span 5-6:  火山 => 火山

Dependencies:
1	把	_	BA	BA	_	3	ba	_	_
2	它	_	PN	PN	_	3	nsubj	_	_
3	上头	_	VV	VV	_	7	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	活	_	JJ	JJ	_	6	amod	_	_
6	火山	_	NN	NN	_	7	nn	_	_
7	打扫	_	NN	NN	_	8	nsubj	_	_
8	得	_	VV	VV	_	0	root	_	_
9	干干净净	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 打扫-01, arg1, x2 / 火山)
(x2 / 火山, location, x4 / 上头)
(x2 / 火山, mod, x3 / 活)
(x4 / 上头, arg0, x5 / 它)
(x6 / 干干净净, cause, x0 / 打扫-01)

Input(Some(Graph((打扫-01 :cause-of 干干净净 :arg1 (火山 :location (上头 :arg0 它) :mod 活)),ArrayBuffer(Span(6,7,List(0),打扫,打扫-01,false), Span(8,9,List(1),干干净净,干干净净,false), Span(5,6,List(2),火山,火山,false), Span(2,3,List(3),上头,上头,false), Span(1,2,List(4),它,它,false), Span(4,5,List(5),活,活,false)),Map(2 -> 火山, 5 -> 活, 1 -> 干干净净, 4 -> 它, 0 -> 打扫-01, 3 -> 上头),Map(x2 -> 火山, x5 -> 它, x4 -> 上头, x3 -> 活, x6 -> 干干净净, x0 -> 打扫-01))),[Ljava.lang.String;@79dc5318,Annotation([Ljava.lang.String;@8e50104,[Ljava.lang.String;@37e4d7bb,[Ljava.lang.String;@6f7923a5),Annotation([Ljava.lang.String;@74a6f9c1,[Ljava.lang.String;@54eb2b70,[Ledu.cmu.lti.nlp.amr.Dependency;@45a37759),Annotation([Ljava.lang.String;@63611043,[Ljava.lang.String;@20ca951f,[Ljava.lang.String;@2d778add),Annotation([Ljava.lang.String;@73302995,[Ljava.lang.String;@1838ccb8,[Ledu.cmu.lti.nlp.amr.Entity;@6c2ed0cd))
AMR:
(x0 / 打扫-01, location, x2 / 火山)
(x2 / 火山, location, x4 / 上头)
(x2 / 火山, mod, x3 / 活)
(x4 / 上头, value, x5 / 它)
(x6 / 干干净净, medium, x0 / 打扫-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 24,571 microseconds
Sentence: 他 有 两 个 活 火山 ， 早上 热 早点 很 方便 。

Oracle Span 1:  他 => 他
Oracle Span 2:  很 => 很
Oracle Span 3:  方便 => 方便-03
Oracle Span 4:  早上 => 早上
Oracle Span 5:  早点 => 早点
Oracle Span 6:  有 => 有-01
Oracle Span 7:  活 => 活
Oracle Span 8:  火山 => 火山
Oracle Span 9:  热 => 热-03
Spans:
Span 0-1:  他 => 他
Span 10-11:  很 => 很
Span 11-12:  方便 => 方便-03
Span 7-8:  早上 => 早上
Span 9-10:  早点 => 早点
Span 1-2:  有 => 有-01
Span 4-5:  活 => 活
Span 5-6:  火山 => 火山
Span 8-9:  热 => 热-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 10-11:  很 => 很
Oracle Span 11-12:  方便 => 方便-03
Oracle Span 7-8:  早上 => 早上
Oracle Span 9-10:  早点 => 早点
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  活 => 活
Oracle Span 5-6:  火山 => 火山
Oracle Span 8-9:  热 => 热-03

Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	两	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	活	_	JJ	JJ	_	6	amod	_	_
6	火山	_	NN	NN	_	2	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	早上	_	NT	NT	_	10	nn	_	_
9	热	_	JJ	JJ	_	10	amod	_	_
10	早点	_	NN	NN	_	12	nsubj	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	方便	_	VA	VA	_	2	conj	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 有-01, arg0, x3 / 他)
(x2 / 有-01, arg1, x4 / 火山)
(x4 / 火山, mod, x5 / 活)
(x7 / 方便-03, arg0, x9 / 热-03)
(x7 / 方便-03, degree, x8 / 很)
(x9 / 热-03, arg1, x11 / 早点)
(x9 / 热-03, time, x12 / 早上)

Input(Some(Graph((causation :arg1 (有-01 :arg1 (火山 :quant 2 :mod 活) :arg0 他) :arg2 (方便-03 :arg0 (热-03 :time 早上 :arg1 早点 :arg0 x3) :degree 很)),ArrayBuffer(Span(1,2,List(0),有,有-01,false), Span(5,6,List(1),火山,火山,false), Span(4,5,List(2),活,活,false), Span(0,1,List(3),他,他,false), Span(11,12,List(4),方便,方便-03,false), Span(8,9,List(5),热,热-03,false), Span(7,8,List(6),早上,早上,false), Span(9,10,List(7),早点,早点,false), Span(10,11,List(8),很,很,false)),Map(2 -> 活, 5 -> 热-03, 8 -> 很, 7 -> 早点, 1 -> 火山, 4 -> 方便-03, 6 -> 早上, 0 -> 有-01, 3 -> 他),Map(x2 -> 有-01, x5 -> 活, x8 -> 很, x12 -> 早上, x7 -> 方便-03, x4 -> 火山, x11 -> 早点, x3 -> 他, x9 -> 热-03))),[Ljava.lang.String;@7d9e8ef7,Annotation([Ljava.lang.String;@f107c50,[Ljava.lang.String;@51133c06,[Ljava.lang.String;@4b213651),Annotation([Ljava.lang.String;@4241e0f4,[Ljava.lang.String;@4ebff610,[Ledu.cmu.lti.nlp.amr.Dependency;@60410cd),Annotation([Ljava.lang.String;@44d52de2,[Ljava.lang.String;@95e33cc,[Ljava.lang.String;@38604b81),Annotation([Ljava.lang.String;@1e44b638,[Ljava.lang.String;@7393222f,[Ledu.cmu.lti.nlp.amr.Entity;@babafc2))
AMR:
(x2 / 有-01, ARG6, x3 / 他)
(x2 / 有-01, degree, x7 / 方便-03)
(x2 / 有-01, part, x4 / 火山)
(x4 / 火山, mod, x5 / 活)
(x7 / 方便-03, ARG0, x9 / 热-03)
(x7 / 方便-03, degree, x8 / 很)
(x9 / 热-03, ARG6, x11 / 早点)
(x9 / 热-03, time, x12 / 早上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 55,917 microseconds
Sentence: 他 还 有 一 座 死 火山 ， 他 也 把 它 打扫 干净 。

Oracle Span 1:  他 => 他
Oracle Span 2:  干净 => 干净
Oracle Span 3:  打扫 => 打扫-01
Oracle Span 4:  有 => 有-01
Oracle Span 5:  死 => 死
Oracle Span 6:  火山 => 火山
Oracle Span 7:  还 => 还
Spans:
Span 0-1:  他 => 他
Span 13-14:  干净 => 干净
Span 12-13:  打扫 => 打扫-01
Span 2-3:  有 => 有-01
Span 5-6:  死 => 死
Span 6-7:  火山 => 火山
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 13-14:  干净 => 干净
Oracle Span 12-13:  打扫 => 打扫-01
Oracle Span 2-3:  有 => 有-01
Oracle Span 5-6:  死 => 死
Oracle Span 6-7:  火山 => 火山
Oracle Span 1-2:  还 => 还

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	nsubj	_	_
6	死	_	VV	VV	_	3	dep	_	_
7	火山	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	他	_	PN	PN	_	14	nsubj	_	_
10	也	_	AD	AD	_	14	advmod	_	_
11	把	_	BA	BA	_	14	ba	_	_
12	它	_	PN	PN	_	14	nsubj	_	_
13	打扫	_	AD	AD	_	14	advmod	_	_
14	干净	_	VA	VA	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 有-01, arg0, x17 / 他)
(x15 / 有-01, arg1, x18 / 火山)
(x15 / 有-01, manner, x16 / 还)
(x18 / 火山, mod, x19 / 死)
(x24 / 干净, cause, x21 / 打扫-01)

Input(Some(Graph((and :op (有-01 :arg1 (火山 :quant 1 :mod 死) :arg0 他 :manner 还) :op (打扫-01 :cause-of 干净 :arg1 x18 :arg0 x17)),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(6,7,List(1),火山,火山,false), Span(5,6,List(2),死,死,false), Span(0,1,List(3),他,他,false), Span(1,2,List(4),还,还,false), Span(12,13,List(5),打扫,打扫-01,false), Span(13,14,List(6),干净,干净,false)),Map(2 -> 死, 5 -> 打扫-01, 1 -> 火山, 4 -> 还, 6 -> 干净, 0 -> 有-01, 3 -> 他),Map(x16 -> 还, x19 -> 死, x21 -> 打扫-01, x15 -> 有-01, x24 -> 干净, x18 -> 火山, x17 -> 他))),[Ljava.lang.String;@31add175,Annotation([Ljava.lang.String;@ae3540e,[Ljava.lang.String;@600b9d27,[Ljava.lang.String;@3688eb5b),Annotation([Ljava.lang.String;@69f1a286,[Ljava.lang.String;@7922d892,[Ledu.cmu.lti.nlp.amr.Dependency;@457c9034),Annotation([Ljava.lang.String;@345f69f3,[Ljava.lang.String;@50de186c,[Ljava.lang.String;@3f57bcad),Annotation([Ljava.lang.String;@1e8b7643,[Ljava.lang.String;@51549490,[Ledu.cmu.lti.nlp.amr.Entity;@71e9ebae))
AMR:
(x15 / 有-01, ARG5, x18 / 火山)
(x15 / 有-01, age, x24 / 干净)
(x15 / 有-01, manner, x16 / 还)
(x15 / 有-01, op, x17 / 他)
(x18 / 火山, mod, x19 / 死)
(x24 / 干净, manner, x21 / 打扫-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 44,309 microseconds
Sentence: 他 想 ， 说不定 它 还 会 活动 呢 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  会 => 会-02
Oracle Span 3:  它 => 它
Oracle Span 4:  想 => 想-01
Oracle Span 5:  活动 => 活动-01
Oracle Span 6:  说不定 => 说不定
Oracle Span 7:  还 => 还
Spans:
Span 0-1:  他 => 他
Span 6-7:  会 => 会-02
Span 4-5:  它 => 它
Span 1-2:  想 => 想-01
Span 7-8:  活动 => 活动-01
Span 3-4:  说不定 => 说不定
Span 5-6:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  会 => 会-02
Oracle Span 4-5:  它 => 它
Oracle Span 1-2:  想 => 想-01
Oracle Span 7-8:  活动 => 活动-01
Oracle Span 3-4:  说不定 => 说不定
Oracle Span 5-6:  还 => 还

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	说不定	_	NN	NN	_	7	nsubj	_	_
5	它	_	PN	PN	_	7	nsubj	_	_
6	还	_	AD	AD	_	7	advmod	_	_
7	会	_	VV	VV	_	2	ccomp	_	_
8	活动	_	NN	NN	_	7	dobj	_	_
9	呢	_	SP	SP	_	2	dep	_	_
10	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 他)
(x0 / 想-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 活动-01)
(x3 / 会-02, manner, x6 / 还)
(x3 / 会-02, manner, x7 / 说不定)
(x4 / 活动-01, arg0, x5 / 它)

Input(Some(Graph((想-01 :mode expressive :arg1 (会-02 :manner 说不定 :manner 还 :arg0 (活动-01 :arg0 它)) :arg0 他),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(6,7,List(1),会,会-02,false), Span(3,4,List(2),说不定,说不定,false), Span(5,6,List(3),还,还,false), Span(7,8,List(4),活动,活动-01,false), Span(4,5,List(5),它,它,false), Span(0,1,List(6),他,他,false)),Map(2 -> 说不定, 5 -> 它, 1 -> 会-02, 4 -> 活动-01, 6 -> 他, 0 -> 想-01, 3 -> 还),Map(x2 -> 他, x5 -> 它, x7 -> 说不定, x4 -> 活动-01, x3 -> 会-02, x6 -> 还, x0 -> 想-01))),[Ljava.lang.String;@73d983ea,Annotation([Ljava.lang.String;@36a5cabc,[Ljava.lang.String;@432038ec,[Ljava.lang.String;@7daa0fbd),Annotation([Ljava.lang.String;@42530531,[Ljava.lang.String;@5a3bc7ed,[Ledu.cmu.lti.nlp.amr.Dependency;@181e731e),Annotation([Ljava.lang.String;@35645047,[Ljava.lang.String;@6f44a157,[Ljava.lang.String;@6bc407fd),Annotation([Ljava.lang.String;@291f18,[Ljava.lang.String;@17d88132,[Ledu.cmu.lti.nlp.amr.Entity;@5ddcc487))
AMR:
(x0 / 想-01, time, x2 / 他)
(x0 / 想-01, time, x7 / 说不定)
(x3 / 会-02, ARG3, x4 / 活动-01)
(x3 / 会-02, manner, x6 / 还)
(x3 / 会-02, manner, x7 / 说不定)
(x4 / 活动-01, quant, x5 / 它)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 33,458 microseconds
Sentence: 他 也 把 它 打扫 干净 。

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  它 => 它
Oracle Span 4:  干净 => 干净-01
Oracle Span 5:  打扫 => 打扫-01
Spans:
Span 1-2:  也 => 也
Span 0-1:  他 => 他
Span 3-4:  它 => 它
Span 5-6:  干净 => 干净-01
Span 4-5:  打扫 => 打扫-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  它 => 它
Oracle Span 5-6:  干净 => 干净-01
Oracle Span 4-5:  打扫 => 打扫-01

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	打扫	_	VV	VV	_	0	root	_	_
6	干净	_	VA	VA	_	5	ccomp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 打扫-01, arg0, x2 / 他)
(x0 / 打扫-01, arg1, x3 / 它)
(x0 / 打扫-01, manner, x5 / 也)
(x4 / 干净-01, cause, x0 / 打扫-01)

Input(Some(Graph((打扫-01 :manner 也 :cause-of 干净-01 :arg1 它 :arg0 他),ArrayBuffer(Span(4,5,List(0),打扫,打扫-01,false), Span(1,2,List(1),也,也,false), Span(5,6,List(2),干净,干净-01,false), Span(3,4,List(3),它,它,false), Span(0,1,List(4),他,他,false)),Map(2 -> 干净-01, 1 -> 也, 4 -> 他, 0 -> 打扫-01, 3 -> 它),Map(x2 -> 他, x5 -> 也, x4 -> 干净-01, x3 -> 它, x0 -> 打扫-01))),[Ljava.lang.String;@16eccb2e,Annotation([Ljava.lang.String;@5ef5c734,[Ljava.lang.String;@d771cc9,[Ljava.lang.String;@36b4091c),Annotation([Ljava.lang.String;@4671115f,[Ljava.lang.String;@36cda2c2,[Ledu.cmu.lti.nlp.amr.Dependency;@3697186),Annotation([Ljava.lang.String;@1583741e,[Ljava.lang.String;@5b367418,[Ljava.lang.String;@36060e),Annotation([Ljava.lang.String;@481ba2cf,[Ljava.lang.String;@46b61c56,[Ledu.cmu.lti.nlp.amr.Entity;@2e48362c))
AMR:
(x0 / 打扫-01, manner, x5 / 也)
(x0 / 打扫-01, prep-from, x2 / 他)
(x0 / 打扫-01, value, x3 / 它)
(x4 / 干净-01, ARG6, x0 / 打扫-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,576 microseconds
Sentence: 打扫 干净 了 ， 它们 就 可以 慢慢 地 有 规律 地 燃烧 ， 而 不 会 突然 爆发 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  它们 => 它们
Oracle Span 4:  就 => 就
Oracle Span 5:  干净 => 干净-01
Oracle Span 6:  慢慢 => 慢慢-01
Oracle Span 7:  打扫 => 打扫-01
Oracle Span 8:  燃烧 => 燃烧-01
Oracle Span 9:  爆发 => 爆发-01
Oracle Span 10:  突然 => 突然
Oracle Span 11:  规律 => 规律-01
Spans:
Span 16-17:  会 => 会-02
Span 6-7:  可以 => 可以-01
Span 4-5:  它们 => 它们
Span 5-6:  就 => 就
Span 1-2:  干净 => 干净-01
Span 7-8:  慢慢 => 慢慢-01
Span 0-1:  打扫 => 打扫-01
Span 12-13:  燃烧 => 燃烧-01
Span 18-19:  爆发 => 爆发-01
Span 17-18:  突然 => 突然
Span 10-11:  规律 => 规律-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  会 => 会-02
Oracle Span 6-7:  可以 => 可以-01
Oracle Span 4-5:  它们 => 它们
Oracle Span 5-6:  就 => 就
Oracle Span 1-2:  干净 => 干净-01
Oracle Span 7-8:  慢慢 => 慢慢-01
Oracle Span 0-1:  打扫 => 打扫-01
Oracle Span 12-13:  燃烧 => 燃烧-01
Oracle Span 18-19:  爆发 => 爆发-01
Oracle Span 17-18:  突然 => 突然
Oracle Span 10-11:  规律 => 规律-01

Dependencies:
1	打扫	_	NN	NN	_	2	nsubj	_	_
2	干净	_	VA	VA	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	它们	_	PN	PN	_	13	nsubj	_	_
6	就	_	AD	AD	_	13	advmod	_	_
7	可以	_	VV	VV	_	13	mmod	_	_
8	慢慢	_	AD	AD	_	13	advmod	_	_
9	地	_	NN	NN	_	13	dep	_	_
10	有	_	VE	VE	_	13	dvpmod	_	_
11	规律	_	NN	NN	_	10	dobj	_	_
12	地	_	DEV	DEV	_	10	dvpm	_	_
13	燃烧	_	VV	VV	_	2	conj	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	而	_	CC	CC	_	13	cc	_	_
16	不	_	AD	AD	_	19	neg	_	_
17	会	_	VV	VV	_	19	mmod	_	_
18	突然	_	AD	AD	_	19	advmod	_	_
19	爆发	_	VV	VV	_	13	conj	_	_
20	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 爆发-01)
(x12 / 爆发-01, manner, x14 / 突然)
(x3 / 干净-01, cause, x2 / 打扫-01)
(x5 / 可以-01, arg0, x7 / 燃烧-01)
(x5 / 可以-01, manner, x6 / 就)
(x7 / 燃烧-01, arg0, x8 / 它们)
(x7 / 燃烧-01, manner, x10 / 规律-01)
(x7 / 燃烧-01, manner, x9 / 慢慢-01)

Input(Some(Graph((condition :arg1 (打扫-01 :cause-of 干净-01) :arg2 (causation :arg1 (可以-01 :arg0 (燃烧-01 :manner 规律-01 :manner 慢慢-01 :arg0 它们) :manner 就) :arg2 (会-02 :polarity - :arg0 (爆发-01 :manner 突然)))),ArrayBuffer(Span(0,1,List(0),打扫,打扫-01,false), Span(1,2,List(1),干净,干净-01,false), Span(6,7,List(2),可以,可以-01,false), Span(12,13,List(3),燃烧,燃烧-01,false), Span(10,11,List(4),规律,规律-01,false), Span(7,8,List(5),慢慢,慢慢-01,false), Span(4,5,List(6),它们,它们,false), Span(5,6,List(7),就,就,false), Span(16,17,List(8),会,会-02,false), Span(18,19,List(9),爆发,爆发-01,false), Span(17,18,List(10),突然,突然,false)),Map(2 -> 可以-01, 5 -> 慢慢-01, 8 -> 会-02, 7 -> 就, 1 -> 干净-01, 4 -> 规律-01, 6 -> 它们, 9 -> 爆发-01, 0 -> 打扫-01, 10 -> 突然, 3 -> 燃烧-01),Map(x10 -> 规律-01, x2 -> 打扫-01, x5 -> 可以-01, x8 -> 它们, x12 -> 爆发-01, x7 -> 燃烧-01, x11 -> 会-02, x3 -> 干净-01, x6 -> 就, x14 -> 突然, x9 -> 慢慢-01))),[Ljava.lang.String;@1efe439d,Annotation([Ljava.lang.String;@be68757,[Ljava.lang.String;@7d446ed1,[Ljava.lang.String;@12d2ce03),Annotation([Ljava.lang.String;@7e5c856f,[Ljava.lang.String;@413f69cc,[Ledu.cmu.lti.nlp.amr.Dependency;@1f53a5dc),Annotation([Ljava.lang.String;@1b75c2e3,[Ljava.lang.String;@1984b1f,[Ljava.lang.String;@3bd323e9),Annotation([Ljava.lang.String;@39ac0c0a,[Ljava.lang.String;@c7ba306,[Ledu.cmu.lti.nlp.amr.Entity;@4ff8d125))
AMR:
(x11 / 会-02, op, x12 / 爆发-01)
(x12 / 爆发-01, manner, x14 / 突然)
(x3 / 干净-01, prep-into, x2 / 打扫-01)
(x5 / 可以-01, manner, x6 / 就)
(x5 / 可以-01, prep-out, x7 / 燃烧-01)
(x7 / 燃烧-01, ARG5, x14 / 突然)
(x7 / 燃烧-01, location, x8 / 它们)
(x7 / 燃烧-01, manner, x10 / 规律-01)
(x7 / 燃烧-01, manner, x9 / 慢慢-01)
(x9 / 慢慢-01, ARG3, x3 / 干净-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.2
WARNING: makeIds can't find span Id: 0.1.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
Decoded in 90,482 microseconds
Sentence: 火山 爆发 就 象 烟囱 里 的 火焰 一样 。

Oracle Span 1:  就 => 就
Oracle Span 2:  火山 => 火山
Oracle Span 3:  火焰 => 火焰
Oracle Span 4:  烟囱 => 烟囱
Oracle Span 5:  爆发 => 爆发-01
Spans:
Span 2-3:  就 => 就
Span 0-1:  火山 => 火山
Span 7-8:  火焰 => 火焰
Span 4-5:  烟囱 => 烟囱
Span 1-2:  爆发 => 爆发-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 0-1:  火山 => 火山
Oracle Span 7-8:  火焰 => 火焰
Oracle Span 4-5:  烟囱 => 烟囱
Oracle Span 1-2:  爆发 => 爆发-01

Dependencies:
1	火山	_	NN	NN	_	2	nsubj	_	_
2	爆发	_	VV	VV	_	0	root	_	_
3	就	_	AD	AD	_	9	advmod	_	_
4	象	_	P	P	_	9	prep	_	_
5	烟囱	_	NN	NN	_	6	lobj	_	_
6	里	_	LC	LC	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	火焰	_	NN	NN	_	4	pobj	_	_
9	一样	_	VA	VA	_	2	dep	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 爆发-01, arg0, x3 / 火山)
(x4 / 火焰, location, x5 / 烟囱)

Input(Some(Graph((像-01 :arg0 (爆发-01 :arg0 火山) :arg1 (火焰 :location 烟囱) :manner 就),ArrayBuffer(Span(1,2,List(0),爆发,爆发-01,false), Span(0,1,List(1),火山,火山,false), Span(7,8,List(2),火焰,火焰,false), Span(4,5,List(3),烟囱,烟囱,false), Span(2,3,List(4),就,就,false)),Map(2 -> 火焰, 1 -> 火山, 4 -> 就, 0 -> 爆发-01, 3 -> 烟囱),Map(x2 -> 爆发-01, x5 -> 烟囱, x4 -> 火焰, x3 -> 火山, x6 -> 就))),[Ljava.lang.String;@6d167f58,Annotation([Ljava.lang.String;@3403e2ac,[Ljava.lang.String;@65b104b9,[Ljava.lang.String;@6c4980d3),Annotation([Ljava.lang.String;@327bcebd,[Ljava.lang.String;@19c65cdc,[Ledu.cmu.lti.nlp.amr.Dependency;@74bf1791),Annotation([Ljava.lang.String;@54504ecd,[Ljava.lang.String;@38b27cdc,[Ljava.lang.String;@1339e7aa),Annotation([Ljava.lang.String;@1fb669c3,[Ljava.lang.String;@49c66ade,[Ledu.cmu.lti.nlp.amr.Entity;@6239aba6))
AMR:
(x2 / 爆发-01, ARG0, x6 / 就)
(x2 / 爆发-01, prep-from, x3 / 火山)
(x3 / 火山, part, x5 / 烟囱)
(x4 / 火焰, location, x5 / 烟囱)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
Decoded in 17,998 microseconds
Sentence: 当然 ， 在 我们 地球 上 我们 人 太 小 ， 不 能 打扫 火山 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  地球 => 地球
Oracle Span 3:  太 => 太
Oracle Span 4:  小 => 小-01
Oracle Span 5:  当然 => 当然
Oracle Span 6:  我们 => 我们
Oracle Span 7:  打扫 => 打扫-01
Oracle Span 8:  火山 => 火山
Oracle Span 9:  能 => 能-01
Spans:
Span 7-8:  人 => 人
Span 4-5:  地球 => 地球
Span 8-9:  太 => 太
Span 9-10:  小 => 小-01
Span 0-1:  当然 => 当然
Span 3-4:  我们 => 我们
Span 13-14:  打扫 => 打扫-01
Span 14-15:  火山 => 火山
Span 12-13:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  人 => 人
Oracle Span 4-5:  地球 => 地球
Oracle Span 8-9:  太 => 太
Oracle Span 9-10:  小 => 小-01
Oracle Span 0-1:  当然 => 当然
Oracle Span 3-4:  我们 => 我们
Oracle Span 13-14:  打扫 => 打扫-01
Oracle Span 14-15:  火山 => 火山
Oracle Span 12-13:  能 => 能-01

Dependencies:
1	当然	_	AD	AD	_	10	advmod	_	_
2	,	_	PU	PU	_	10	punct	_	_
3	在	_	P	P	_	10	prep	_	_
4	我们	_	PN	PN	_	5	nn	_	_
5	地球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	3	plmod	_	_
7	我们	_	PN	PN	_	8	nn	_	_
8	人	_	NN	NN	_	10	nsubj	_	_
9	太	_	AD	AD	_	10	advmod	_	_
10	小	_	VA	VA	_	0	root	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	不	_	AD	AD	_	14	neg	_	_
13	能	_	VV	VV	_	14	mmod	_	_
14	打扫	_	VV	VV	_	10	conj	_	_
15	火山	_	NN	NN	_	14	dobj	_	_
16	,	_	PU	PU	_	14	punct	_	_

Oracle:
(x10 / 打扫-01, arg1, x12 / 火山)
(x2 / 小-01, arg0, x3 / 人)
(x2 / 小-01, degree, x4 / 太)
(x2 / 小-01, manner, x7 / 当然)
(x3 / 人, location, x5 / 地球)
(x5 / 地球, poss, x6 / 我们)
(x8 / 能-01, arg0, x10 / 打扫-01)

Input(Some(Graph((causation :arg1 (小-01 :manner 当然 :degree 太 :arg0 (人 :location (地球 :poss 我们))) :arg2 (能-01 :arg0 (打扫-01 :arg1 火山 :arg0 x3) :polarity -)),ArrayBuffer(Span(9,10,List(0),小,小-01,false), Span(0,1,List(1),当然,当然,false), Span(8,9,List(2),太,太,false), Span(7,8,List(3),人,人,false), Span(4,5,List(4),地球,地球,false), Span(3,4,List(5),我们,我们,false), Span(12,13,List(6),能,能-01,false), Span(13,14,List(7),打扫,打扫-01,false), Span(14,15,List(8),火山,火山,false)),Map(2 -> 太, 5 -> 我们, 8 -> 火山, 7 -> 打扫-01, 1 -> 当然, 4 -> 地球, 6 -> 能-01, 0 -> 小-01, 3 -> 人),Map(x10 -> 打扫-01, x2 -> 小-01, x5 -> 地球, x8 -> 能-01, x12 -> 火山, x7 -> 当然, x4 -> 太, x3 -> 人, x6 -> 我们))),[Ljava.lang.String;@3e6104fc,Annotation([Ljava.lang.String;@12359a82,[Ljava.lang.String;@68df9280,[Ljava.lang.String;@479460a6),Annotation([Ljava.lang.String;@7164ca4c,[Ljava.lang.String;@4f3bbf68,[Ledu.cmu.lti.nlp.amr.Dependency;@5be46f9d),Annotation([Ljava.lang.String;@3f91b517,[Ljava.lang.String;@68702e03,[Ljava.lang.String;@7a220c9a),Annotation([Ljava.lang.String;@2421cc4,[Ljava.lang.String;@30c93896,[Ledu.cmu.lti.nlp.amr.Entity;@59a008ba))
AMR:
(x10 / 打扫-01, ARG3, x4 / 太)
(x10 / 打扫-01, quant, x12 / 火山)
(x2 / 小-01, degree, x4 / 太)
(x2 / 小-01, location, x3 / 人)
(x2 / 小-01, manner, x7 / 当然)
(x3 / 人, location, x5 / 地球)
(x5 / 地球, poss, x6 / 我们)
(x8 / 能-01, op, x10 / 打扫-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 53,297 microseconds
Sentence: 所以 火山 给 我们 带来 很多 很多 麻烦 。

Oracle Span 1:  带来 => 带来-01
Oracle Span 2:  很多 => 很多
Oracle Span 3:  很多 => 很多
Oracle Span 4:  我们 => 我们
Oracle Span 5:  火山 => 火山
Oracle Span 6:  麻烦 => 麻烦
Spans:
Span 4-5:  带来 => 带来-01
Span 5-6:  很多 => 很多
Span 6-7:  很多 => 很多
Span 3-4:  我们 => 我们
Span 1-2:  火山 => 火山
Span 7-8:  麻烦 => 麻烦

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  带来 => 带来-01
Oracle Span 5-6:  很多 => 很多
Oracle Span 6-7:  很多 => 很多
Oracle Span 3-4:  我们 => 我们
Oracle Span 1-2:  火山 => 火山
Oracle Span 7-8:  麻烦 => 麻烦

Dependencies:
1	所以	_	AD	AD	_	5	advmod	_	_
2	火山	_	NN	NN	_	5	nsubj	_	_
3	给	_	P	P	_	5	prep	_	_
4	我们	_	PN	PN	_	3	pobj	_	_
5	带来	_	VV	VV	_	0	root	_	_
6	很多	_	CD	CD	_	8	nummod	_	_
7	很多	_	CD	CD	_	8	nummod	_	_
8	麻烦	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 带来-01, arg0, x3 / 火山)
(x2 / 带来-01, arg1, x4 / 麻烦)
(x2 / 带来-01, arg2, x7 / 我们)
(x4 / 麻烦, mod, x5 / 很多)
(x4 / 麻烦, mod, x6 / 很多)

Input(Some(Graph((causation :arg2 (带来-01 :arg2 我们 :arg1 (麻烦 :mod 很多 :mod 很多) :arg0 火山)),ArrayBuffer(Span(4,5,List(0),带来,带来-01,false), Span(3,4,List(1),我们,我们,false), Span(7,8,List(2),麻烦,麻烦,false), Span(5,6,List(3),很多,很多,false), Span(6,7,List(4),很多,很多,false), Span(1,2,List(5),火山,火山,false)),Map(2 -> 麻烦, 5 -> 火山, 1 -> 我们, 4 -> 很多, 0 -> 带来-01, 3 -> 很多),Map(x2 -> 带来-01, x5 -> 很多, x7 -> 我们, x4 -> 麻烦, x3 -> 火山, x6 -> 很多))),[Ljava.lang.String;@338c99c8,Annotation([Ljava.lang.String;@21ba0741,[Ljava.lang.String;@58ce9668,[Ljava.lang.String;@172b013),Annotation([Ljava.lang.String;@56673b2c,[Ljava.lang.String;@2796aeae,[Ledu.cmu.lti.nlp.amr.Dependency;@b4711e2),Annotation([Ljava.lang.String;@1fa1cab1,[Ljava.lang.String;@70f02c32,[Ljava.lang.String;@62010f5c),Annotation([Ljava.lang.String;@51fadaff,[Ljava.lang.String;@401f7633,[Ledu.cmu.lti.nlp.amr.Entity;@31ff43be))
AMR:
(x2 / 带来-01, location, x7 / 我们)
(x2 / 带来-01, prep-on-behalf, x3 / 火山)
(x2 / 带来-01, snt3, x4 / 麻烦)
(x4 / 麻烦, mod, x5 / 很多)
(x4 / 麻烦, mod, x6 / 很多)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 36,923 microseconds
Sentence: 小 王子 还 把 剩下 的 最后 几 颗 猴面包树 苗 全 拔 了 。 他 有点 忧伤 。

Oracle Span 1:  全 => 全-01
Oracle Span 2:  几 => 几
Oracle Span 3:  剩下 => 剩下-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  忧伤 => 忧伤
Oracle Span 6:  拔 => 拔-01
Oracle Span 7:  最后 => 最后
Oracle Span 8:  有点 => 有点
Oracle Span 9:  猴面包树 => 猴面包树
Oracle Span 10:  王子 => 王子
Oracle Span 11:  苗 => 苗
Oracle Span 12:  还 => 还
Spans:
Span 11-12:  全 => 全-01
Span 7-8:  几 => 几
Span 4-5:  剩下 => 剩下-01
Span 0-1:  小 => 小-01
Span 17-18:  忧伤 => 忧伤
Span 12-13:  拔 => 拔-01
Span 6-7:  最后 => 最后
Span 16-17:  有点 => 有点
Span 9-10:  猴面包树 => 猴面包树
Span 1-2:  王子 => 王子
Span 10-11:  苗 => 苗
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  全 => 全-01
Oracle Span 7-8:  几 => 几
Oracle Span 4-5:  剩下 => 剩下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 17-18:  忧伤 => 忧伤
Oracle Span 12-13:  拔 => 拔-01
Oracle Span 6-7:  最后 => 最后
Oracle Span 16-17:  有点 => 有点
Oracle Span 9-10:  猴面包树 => 猴面包树
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  苗 => 苗
Oracle Span 2-3:  还 => 还

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	13	nsubj	_	_
3	还	_	AD	AD	_	13	advmod	_	_
4	把	_	BA	BA	_	13	ba	_	_
5	剩下	_	VV	VV	_	11	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	最后	_	AD	AD	_	9	advmod	_	_
8	几	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	11	clf	_	_
10	猴面包树	_	NN	NN	_	11	nn	_	_
11	苗	_	NN	NN	_	13	nsubj	_	_
12	全	_	AD	AD	_	13	advmod	_	_
13	拔	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_
16	他	_	PN	PN	_	17	nsubj	_	_
17	有点	_	VV	VV	_	13	conj	_	_
18	忧伤	_	NN	NN	_	17	dobj	_	_
19	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 苗, mod, x12 / 猴面包树)
(x11 / 苗, mod, x14 / 最后)
(x11 / 苗, quant, x13 / 几)
(x15 / 剩下-01, arg1, x11 / 苗)
(x16 / 忧伤, degree, x17 / 有点)
(x2 / 拔-01, arg0, x3 / 王子)
(x2 / 拔-01, arg1, x11 / 苗)
(x2 / 拔-01, manner, x10 / 还)
(x2 / 拔-01, manner, x5 / 全-01)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (拔-01 :arg1 (苗 :arg1-of 剩下-01 :mod 最后 :quant 几 :mod 猴面包树) :manner 还 :manner 全-01 :arg0 (王子 :mod 小-01)) :snt2 (忧伤 :arg0 x3 :degree 有点)),ArrayBuffer(Span(12,13,List(0),拔,拔-01,false), Span(10,11,List(1),苗,苗,false), Span(4,5,List(2),剩下,剩下-01,false), Span(6,7,List(3),最后,最后,false), Span(7,8,List(4),几,几,false), Span(9,10,List(5),猴面包树,猴面包树,false), Span(2,3,List(6),还,还,false), Span(11,12,List(7),全,全-01,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小-01,false), Span(17,18,List(10),忧伤,忧伤,false), Span(16,17,List(11),有点,有点,false)),Map(2 -> 剩下-01, 5 -> 猴面包树, 8 -> 王子, 7 -> 全-01, 1 -> 苗, 4 -> 几, 11 -> 有点, 6 -> 还, 9 -> 小-01, 0 -> 拔-01, 10 -> 忧伤, 3 -> 最后),Map(x16 -> 忧伤, x10 -> 还, x2 -> 拔-01, x5 -> 全-01, x13 -> 几, x12 -> 猴面包树, x15 -> 剩下-01, x4 -> 小-01, x3 -> 王子, x11 -> 苗, x14 -> 最后, x17 -> 有点))),[Ljava.lang.String;@5b6ec132,Annotation([Ljava.lang.String;@5c44c582,[Ljava.lang.String;@67d18ed7,[Ljava.lang.String;@2c78d320),Annotation([Ljava.lang.String;@132e0cc,[Ljava.lang.String;@7b205dbd,[Ledu.cmu.lti.nlp.amr.Dependency;@106cc338),Annotation([Ljava.lang.String;@7a67e3c6,[Ljava.lang.String;@6cc558c6,[Ljava.lang.String;@15713d56),Annotation([Ljava.lang.String;@63f259c3,[Ljava.lang.String;@26ceffa8,[Ledu.cmu.lti.nlp.amr.Entity;@600b90df))
AMR:
(x11 / 苗, mod, x12 / 猴面包树)
(x11 / 苗, mod, x14 / 最后)
(x11 / 苗, quant, x13 / 几)
(x15 / 剩下-01, value, x11 / 苗)
(x16 / 忧伤, degree, x17 / 有点)
(x2 / 拔-01, manner, x10 / 还)
(x2 / 拔-01, manner, x5 / 全-01)
(x2 / 拔-01, mode, x11 / 苗)
(x2 / 拔-01, prep-on-behalf, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 全-01, ARG5, x17 / 有点)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.3
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 98,615 microseconds
Sentence: 他 以为 他 再 也 不 会 回来 了 。

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  以为 => 以为-01
Oracle Span 4:  会 => 会-02
Oracle Span 5:  再 => 再-01
Oracle Span 6:  回来 => 回来-01
Spans:
Span 4-5:  也 => 也
Span 0-1:  他 => 他
Span 1-2:  以为 => 以为-01
Span 6-7:  会 => 会-02
Span 3-4:  再 => 再-01
Span 7-8:  回来 => 回来-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  以为 => 以为-01
Oracle Span 6-7:  会 => 会-02
Oracle Span 3-4:  再 => 再-01
Oracle Span 7-8:  回来 => 回来-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	以为	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	8	nsubj	_	_
4	再	_	AD	AD	_	8	advmod	_	_
5	也	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	会	_	VV	VV	_	8	mmod	_	_
8	回来	_	VV	VV	_	2	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 以为-01, arg0, x2 / 他)
(x0 / 以为-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 回来-01)
(x3 / 会-02, manner, x6 / 也)
(x3 / 会-02, manner, x7 / 再-01)

Input(Some(Graph((以为-01 :arg1 (会-02 :manner 再-01 :manner 也 :polarity - :arg0 (回来-01 :arg0 x2)) :arg0 他),ArrayBuffer(Span(1,2,List(0),以为,以为-01,false), Span(6,7,List(1),会,会-02,false), Span(3,4,List(2),再,再-01,false), Span(4,5,List(3),也,也,false), Span(7,8,List(4),回来,回来-01,false), Span(0,1,List(5),他,他,false)),Map(2 -> 再-01, 5 -> 他, 1 -> 会-02, 4 -> 回来-01, 0 -> 以为-01, 3 -> 也),Map(x2 -> 他, x7 -> 再-01, x4 -> 回来-01, x3 -> 会-02, x6 -> 也, x0 -> 以为-01))),[Ljava.lang.String;@7c8c9a05,Annotation([Ljava.lang.String;@d41f816,[Ljava.lang.String;@5c2375a9,[Ljava.lang.String;@60129b9a),Annotation([Ljava.lang.String;@78d6692f,[Ljava.lang.String;@7a55af6b,[Ledu.cmu.lti.nlp.amr.Dependency;@3d9c13b5),Annotation([Ljava.lang.String;@492691d7,[Ljava.lang.String;@27216cd,[Ljava.lang.String;@558bdf1f),Annotation([Ljava.lang.String;@8576fa0,[Ljava.lang.String;@7582ff54,[Ledu.cmu.lti.nlp.amr.Entity;@67545b57))
AMR:
(x0 / 以为-01, manner, x3 / 会-02)
(x0 / 以为-01, prep-for, x2 / 他)
(x3 / 会-02, manner, x6 / 也)
(x3 / 会-02, manner, x7 / 再-01)
(x3 / 会-02, op, x4 / 回来-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 37,513 microseconds
Sentence: 这 天 ， 这些 家常 活 使 他 感到 特别 亲切 。

Oracle Span 1:  亲切 => 亲切
Oracle Span 2:  他 => 他
Oracle Span 3:  家常 => 家常
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  活 => 活
Oracle Span 6:  特别 => 特别
Oracle Span 7:  这些 => 这些
Spans:
Span 10-11:  亲切 => 亲切
Span 7-8:  他 => 他
Span 4-5:  家常 => 家常
Span 8-9:  感到 => 感到-01
Span 5-6:  活 => 活
Span 9-10:  特别 => 特别
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  亲切 => 亲切
Oracle Span 7-8:  他 => 他
Oracle Span 4-5:  家常 => 家常
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 5-6:  活 => 活
Oracle Span 9-10:  特别 => 特别
Oracle Span 3-4:  这些 => 这些

Dependencies:
1	这	_	DT	DT	_	6	dep	_	_
2	天	_	M	M	_	1	clf	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	家常	_	NN	NN	_	6	nsubj	_	_
6	活	_	VV	VV	_	0	root	_	_
7	使	_	VV	VV	_	6	ccomp	_	_
8	他	_	PN	PN	_	7	dobj	_	_
9	感到	_	VV	VV	_	7	dep	_	_
10	特别	_	AD	AD	_	11	advmod	_	_
11	亲切	_	VA	VA	_	9	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 感到-01, arg0, x13 / 他)
(x11 / 感到-01, arg1, x14 / 亲切)
(x11 / 感到-01, cause, x16 / 活)
(x14 / 亲切, degree, x15 / 特别)
(x16 / 活, mod, x17 / 家常)
(x16 / 活, mod, x18 / 这些)

Input(Some(Graph((感到-01 :time 这天 :cause (活 :mod 这些 :mod 家常) :arg1 (亲切 :degree 特别) :arg0 他),ArrayBuffer(Span(8,9,List(0),感到,感到-01,false), Span(5,6,List(1),活,活,false), Span(3,4,List(2),这些,这些,false), Span(4,5,List(3),家常,家常,false), Span(10,11,List(4),亲切,亲切,false), Span(9,10,List(5),特别,特别,false), Span(7,8,List(6),他,他,false)),Map(2 -> 这些, 5 -> 特别, 1 -> 活, 4 -> 亲切, 6 -> 他, 0 -> 感到-01, 3 -> 家常),Map(x16 -> 活, x13 -> 他, x15 -> 特别, x18 -> 这些, x11 -> 感到-01, x14 -> 亲切, x17 -> 家常))),[Ljava.lang.String;@6c2c1385,Annotation([Ljava.lang.String;@5f354bcf,[Ljava.lang.String;@3daf7722,[Ljava.lang.String;@78641d23),Annotation([Ljava.lang.String;@74589991,[Ljava.lang.String;@146dfe6,[Ledu.cmu.lti.nlp.amr.Dependency;@4716be8b),Annotation([Ljava.lang.String;@1fc32e4f,[Ljava.lang.String;@2f67b837,[Ljava.lang.String;@1869fbd2),Annotation([Ljava.lang.String;@6af9fcb2,[Ljava.lang.String;@6cce16f4,[Ledu.cmu.lti.nlp.amr.Entity;@7efaad5a))
AMR:
(x11 / 感到-01, ARG1, x14 / 亲切)
(x11 / 感到-01, ARG6, x16 / 活)
(x11 / 感到-01, beneficiary, x13 / 他)
(x14 / 亲切, degree, x15 / 特别)
(x16 / 活, mod, x17 / 家常)
(x16 / 活, mod, x18 / 这些)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 35,051 microseconds
Sentence: 当 他 最后 一 次 浇花 时 ， 准备 把 她 放 在 玻璃 罩子 下面 。 他 发觉 自己 要 哭 出来 。

Oracle Span 1:  下面 => 下面
Oracle Span 2:  他 => 他
Oracle Span 3:  准备 => 准备-02
Oracle Span 4:  发觉 => 发觉-01
Oracle Span 5:  哭 => 哭-01
Oracle Span 6:  她 => 她
Oracle Span 7:  放 => 放-01
Oracle Span 8:  最后 => 最后
Oracle Span 9:  玻璃 => 玻璃
Oracle Span 10:  罩子 => 罩子
Oracle Span 11:  自己 => 自己
Oracle Span 12:  要 => 要-03
Spans:
Span 15-16:  下面 => 下面
Span 1-2:  他 => 他
Span 8-9:  准备 => 准备-02
Span 18-19:  发觉 => 发觉-01
Span 21-22:  哭 => 哭-01
Span 10-11:  她 => 她
Span 11-12:  放 => 放-01
Span 2-3:  最后 => 最后
Span 13-14:  玻璃 => 玻璃
Span 14-15:  罩子 => 罩子
Span 19-20:  自己 => 自己
Span 20-21:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  下面 => 下面
Oracle Span 1-2:  他 => 他
Oracle Span 8-9:  准备 => 准备-02
Oracle Span 18-19:  发觉 => 发觉-01
Oracle Span 21-22:  哭 => 哭-01
Oracle Span 10-11:  她 => 她
Oracle Span 11-12:  放 => 放-01
Oracle Span 2-3:  最后 => 最后
Oracle Span 13-14:  玻璃 => 玻璃
Oracle Span 14-15:  罩子 => 罩子
Oracle Span 19-20:  自己 => 自己
Oracle Span 20-21:  要 => 要-03

Dependencies:
1	当	_	P	P	_	9	prep	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	最后	_	AD	AD	_	5	advmod	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	次	_	M	M	_	6	dep	_	_
6	浇花	_	VV	VV	_	7	lccomp	_	_
7	时	_	LC	LC	_	1	plmod	_	_
8	,	_	PU	PU	_	9	punct	_	_
9	准备	_	VV	VV	_	0	root	_	_
10	把	_	BA	BA	_	12	ba	_	_
11	她	_	PN	PN	_	12	nsubj	_	_
12	放	_	VV	VV	_	9	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	玻璃	_	NN	NN	_	16	nn	_	_
15	罩子	_	NN	NN	_	16	nn	_	_
16	下面	_	NN	NN	_	13	pobj	_	_
17	。	_	PU	PU	_	9	punct	_	_
18	他	_	PN	PN	_	19	nsubj	_	_
19	发觉	_	VV	VV	_	9	dep	_	_
20	自己	_	PN	PN	_	23	nsubj	_	_
21	要	_	VV	VV	_	23	mmod	_	_
22	哭	_	AD	AD	_	23	advmod	_	_
23	出来	_	VV	VV	_	19	ccomp	_	_
24	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x17 / 发觉-01, arg1, x19 / 要-03)
(x19 / 要-03, arg0, x20 / 哭-01)
(x2 / 准备-02, arg0, x3 / 他)
(x2 / 准备-02, arg1, x4 / 放-01)
(x20 / 哭-01, arg0, x21 / 自己)
(x4 / 放-01, arg1, x6 / 她)
(x4 / 放-01, arg2, x7 / 下面)
(x7 / 下面, arg0, x9 / 罩子)
(x9 / 罩子, mod, x10 / 玻璃)

Input(Some(Graph((multi-sentence :snt1 (准备-02 :time (浇-01 :arg0 x3 :arg1 花 :frequency (rate-entity-91 :mod 最后)) :arg1 (放-01 :arg2 (下面 :arg0 (罩子 :mod 玻璃)) :arg1 她 :arg0 x3) :arg0 他) :snt2 (发觉-01 :arg1 (要-03 :arg0 (哭-01 :arg0 自己)) :arg0 x3)),ArrayBuffer(Span(8,9,List(0),准备,准备-02,false), Span(2,3,List(1),最后,最后,false), Span(11,12,List(2),放,放-01,false), Span(15,16,List(3),下面,下面,false), Span(14,15,List(4),罩子,罩子,false), Span(13,14,List(5),玻璃,玻璃,false), Span(10,11,List(6),她,她,false), Span(1,2,List(7),他,他,false), Span(18,19,List(8),发觉,发觉-01,false), Span(20,21,List(9),要,要-03,false), Span(21,22,List(10),哭,哭-01,false), Span(19,20,List(11),自己,自己,false)),Map(2 -> 放-01, 5 -> 玻璃, 8 -> 发觉-01, 7 -> 他, 1 -> 最后, 4 -> 罩子, 11 -> 自己, 6 -> 她, 9 -> 要-03, 0 -> 准备-02, 10 -> 哭-01, 3 -> 下面),Map(x16 -> 最后, x10 -> 玻璃, x19 -> 要-03, x2 -> 准备-02, x21 -> 自己, x7 -> 下面, x4 -> 放-01, x3 -> 他, x6 -> 她, x20 -> 哭-01, x9 -> 罩子, x17 -> 发觉-01))),[Ljava.lang.String;@291a7e3c,Annotation([Ljava.lang.String;@ca30bc1,[Ljava.lang.String;@1046d517,[Ljava.lang.String;@3b7d3a38),Annotation([Ljava.lang.String;@416c58f5,[Ljava.lang.String;@5505ae1a,[Ledu.cmu.lti.nlp.amr.Dependency;@73cd37c0),Annotation([Ljava.lang.String;@21337f7b,[Ljava.lang.String;@2bb3058,[Ljava.lang.String;@7a362b6b),Annotation([Ljava.lang.String;@60df60da,[Ljava.lang.String;@5a2d131d,[Ledu.cmu.lti.nlp.amr.Entity;@14fc1f0))
AMR:
(x17 / 发觉-01, degree, x7 / 下面)
(x17 / 发觉-01, time, x19 / 要-03)
(x19 / 要-03, ARG5, x20 / 哭-01)
(x2 / 准备-02, accompanier, x4 / 放-01)
(x2 / 准备-02, degree, x3 / 他)
(x20 / 哭-01, ARG2, x21 / 自己)
(x3 / 他, manner, x16 / 最后)
(x4 / 放-01, op, x7 / 下面)
(x4 / 放-01, prep-for, x6 / 她)
(x7 / 下面, location, x9 / 罩子)
(x9 / 罩子, mod, x10 / 玻璃)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
Decoded in 127,035 microseconds
Sentence: “ 再见 了 。 ” 他 对 花儿 说道 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再见 => 再见
Oracle Span 3:  花儿 => 花儿
Oracle Span 4:  说道 => 说道-01
Spans:
Span 5-6:  他 => 他
Span 1-2:  再见 => 再见
Span 7-8:  花儿 => 花儿
Span 8-9:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  再见 => 再见
Oracle Span 7-8:  花儿 => 花儿
Oracle Span 8-9:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	9	dep	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	9	nsubj	_	_
7	对	_	P	P	_	9	prep	_	_
8	花儿	_	NN	NN	_	7	pobj	_	_
9	说道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x0 / 说道-01, arg1, x3 / 再见)
(x0 / 说道-01, arg2, x4 / 花儿)

Input(Some(Graph((说道-01 :arg2 花儿 :arg1 再见 :arg0 他),ArrayBuffer(Span(8,9,List(0),说道,说道-01,false), Span(7,8,List(1),花儿,花儿,false), Span(1,2,List(2),再见,再见,false), Span(5,6,List(3),他,他,false)),Map(2 -> 再见, 1 -> 花儿, 0 -> 说道-01, 3 -> 他),Map(x2 -> 他, x4 -> 花儿, x3 -> 再见, x0 -> 说道-01))),[Ljava.lang.String;@4ae9cfc1,Annotation([Ljava.lang.String;@512baff6,[Ljava.lang.String;@632ceb35,[Ljava.lang.String;@1c93f6e1),Annotation([Ljava.lang.String;@1800a575,[Ljava.lang.String;@1458ed9c,[Ledu.cmu.lti.nlp.amr.Dependency;@10a9d961),Annotation([Ljava.lang.String;@130e116b,[Ljava.lang.String;@e383572,[Ljava.lang.String;@5ddf0d24),Annotation([Ljava.lang.String;@363a52f,[Ljava.lang.String;@60856961,[Ledu.cmu.lti.nlp.amr.Entity;@2fd953a6))
AMR:
(x0 / 说道-01, example, x2 / 他)
(x0 / 说道-01, example, x4 / 花儿)
(x0 / 说道-01, manner, x3 / 再见)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,735 microseconds
Sentence: 可是 花儿 没有 回答 他 。

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  花儿 => 花儿
Spans:
Span 4-5:  他 => 他
Span 3-4:  回答 => 回答-01
Span 1-2:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 1-2:  花儿 => 花儿

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	花儿	_	NR	NR	_	4	nsubj	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	回答	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x4 / 花儿)
(x2 / 回答-01, arg3, x5 / 他)

Input(Some(Graph((contrast :arg2 (回答-01 :arg3 他 :arg0 花儿 :polarity -)),ArrayBuffer(Span(3,4,List(0),回答,回答-01,false), Span(4,5,List(1),他,他,false), Span(1,2,List(2),花儿,花儿,false)),Map(2 -> 花儿, 1 -> 他, 0 -> 回答-01),Map(x2 -> 回答-01, x5 -> 他, x4 -> 花儿))),[Ljava.lang.String;@a4add54,Annotation([Ljava.lang.String;@141e5bef,[Ljava.lang.String;@5f9be66c,[Ljava.lang.String;@3abada5a),Annotation([Ljava.lang.String;@66c61024,[Ljava.lang.String;@61fe30,[Ledu.cmu.lti.nlp.amr.Dependency;@c9d0d6),Annotation([Ljava.lang.String;@6ccdb29f,[Ljava.lang.String;@3adcc812,[Ljava.lang.String;@35432107),Annotation([Ljava.lang.String;@7b420819,[Ljava.lang.String;@7a1a14a4,[Ledu.cmu.lti.nlp.amr.Entity;@265adfad))
AMR:
(x2 / 回答-01, ARG3, x4 / 花儿)
(x2 / 回答-01, purpose, x5 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 15,426 microseconds
Sentence: “ 再见 了 。 ” 他 又 说 了 一 遍 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再见 => 再见
Oracle Span 3:  又 => 又
Oracle Span 4:  说 => 说-01
Spans:
Span 5-6:  他 => 他
Span 1-2:  再见 => 再见
Span 6-7:  又 => 又
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  再见 => 再见
Oracle Span 6-7:  又 => 又
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	8	dep	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	遍	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x7 / 再见)
(x0 / 说-01, manner, x3 / 又)

Input(Some(Graph((说-01 :arg1 再见 :frequency (temporal-quantity :quant 1) :manner 又 :arg0 他),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(1,2,List(1),再见,再见,false), Span(6,7,List(2),又,又,false), Span(5,6,List(3),他,他,false)),Map(2 -> 又, 1 -> 再见, 0 -> 说-01, 3 -> 他),Map(x2 -> 他, x7 -> 再见, x3 -> 又, x0 -> 说-01))),[Ljava.lang.String;@a3d9978,Annotation([Ljava.lang.String;@61544ae6,[Ljava.lang.String;@4b41dd5c,[Ljava.lang.String;@3b96c42e),Annotation([Ljava.lang.String;@5d066c7d,[Ljava.lang.String;@1e461e41,[Ledu.cmu.lti.nlp.amr.Dependency;@5ba88be8),Annotation([Ljava.lang.String;@56928307,[Ljava.lang.String;@3899782c,[Ljava.lang.String;@1603cd68),Annotation([Ljava.lang.String;@9ebe38b,[Ljava.lang.String;@4b23c30a,[Ledu.cmu.lti.nlp.amr.Entity;@38089a5a))
AMR:
(x0 / 说-01, conj-as-if, x2 / 他)
(x0 / 说-01, manner, x3 / 又)
(x0 / 说-01, prep-from, x7 / 再见)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,292 microseconds
Sentence: 花儿 咳嗽 了 一 阵 。

Oracle Span 1:  咳嗽 => 咳嗽-01
Oracle Span 2:  花儿 => 花儿
Spans:
Span 1-2:  咳嗽 => 咳嗽-01
Span 0-1:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  咳嗽 => 咳嗽-01
Oracle Span 0-1:  花儿 => 花儿

Dependencies:
1	花儿	_	AD	AD	_	2	advmod	_	_
2	咳嗽	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	阵	_	NN	NN	_	2	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 咳嗽-01, arg0, x2 / 花儿)

Input(Some(Graph((咳嗽-01 :duration 一阵 :arg0 花儿),ArrayBuffer(Span(1,2,List(0),咳嗽,咳嗽-01,false), Span(0,1,List(1),花儿,花儿,false)),Map(1 -> 花儿, 0 -> 咳嗽-01),Map(x2 -> 花儿, x0 -> 咳嗽-01))),[Ljava.lang.String;@30e868be,Annotation([Ljava.lang.String;@66c92293,[Ljava.lang.String;@332796d3,[Ljava.lang.String;@4f0100a7),Annotation([Ljava.lang.String;@3cdf2c61,[Ljava.lang.String;@13ad5cd3,[Ledu.cmu.lti.nlp.amr.Dependency;@1c33c17b),Annotation([Ljava.lang.String;@5bf0fe62,[Ljava.lang.String;@1e097d59,[Ljava.lang.String;@673be18f),Annotation([Ljava.lang.String;@6581dc0a,[Ljava.lang.String;@39de3d36,[Ledu.cmu.lti.nlp.amr.Entity;@6ce86ce1))
AMR:
(x0 / 咳嗽-01, location, x2 / 花儿)

WARNING: makeIds can't find span Id: 0.0
Decoded in 6,580 microseconds
Sentence: 但 并 不 是 由于 感冒 。

Oracle Span 1:  并 => 并
Oracle Span 2:  感冒 => 感冒-01
Spans:
Span 1-2:  并 => 并
Span 5-6:  感冒 => 感冒-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  并 => 并
Oracle Span 5-6:  感冒 => 感冒-01

Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	并	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	由于	_	P	P	_	4	prep	_	_
6	感冒	_	VV	VV	_	5	pccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x3 / 感冒-01, manner, x5 / 并)

Input(Some(Graph((contrast :arg2 (cause-01 :arg0 (感冒-01 :manner 并 :polarity -))),ArrayBuffer(Span(5,6,List(0),感冒,感冒-01,false), Span(1,2,List(1),并,并,false)),Map(1 -> 并, 0 -> 感冒-01),Map(x5 -> 并, x3 -> 感冒-01))),[Ljava.lang.String;@54e7df6a,Annotation([Ljava.lang.String;@3fed2870,[Ljava.lang.String;@77128536,[Ljava.lang.String;@58326051),Annotation([Ljava.lang.String;@32c4e8b2,[Ljava.lang.String;@64bce832,[Ledu.cmu.lti.nlp.amr.Dependency;@764faa6),Annotation([Ljava.lang.String;@4c1f22f3,[Ljava.lang.String;@598bd2ba,[Ljava.lang.String;@5a755cc1),Annotation([Ljava.lang.String;@7ae42ce3,[Ljava.lang.String;@4f5991f6,[Ledu.cmu.lti.nlp.amr.Entity;@484094a5))
AMR:
(x3 / 感冒-01, manner, x5 / 并)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 10,101 microseconds
Sentence: 她 终于 对 他 说道 ： “ 我 方才 真 蠢 。

Oracle Span 1:  他 => 他
Oracle Span 2:  她 => 她
Oracle Span 3:  方才 => 方才
Oracle Span 4:  真 => 真
Oracle Span 5:  终于 => 终于
Oracle Span 6:  蠢 => 蠢-01
Oracle Span 7:  说道 => 说道-01
Spans:
Span 3-4:  他 => 他
Span 0-1:  她 => 她
Span 8-9:  方才 => 方才
Span 9-10:  真 => 真
Span 1-2:  终于 => 终于
Span 10-11:  蠢 => 蠢-01
Span 4-5:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 0-1:  她 => 她
Oracle Span 8-9:  方才 => 方才
Oracle Span 9-10:  真 => 真
Oracle Span 1-2:  终于 => 终于
Oracle Span 10-11:  蠢 => 蠢-01
Oracle Span 4-5:  说道 => 说道-01

Dependencies:
1	她	_	PN	PN	_	5	nsubj	_	_
2	终于	_	AD	AD	_	5	advmod	_	_
3	对	_	P	P	_	5	prep	_	_
4	他	_	PN	PN	_	3	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	方才	_	AD	AD	_	11	advmod	_	_
10	真	_	AD	AD	_	11	advmod	_	_
11	蠢	_	VV	VV	_	5	ccomp	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 她)
(x0 / 说道-01, arg1, x4 / 蠢-01)
(x0 / 说道-01, arg2, x8 / 他)
(x0 / 说道-01, manner, x3 / 终于)
(x4 / 蠢-01, degree, x5 / 真)
(x4 / 蠢-01, time, x6 / 方才)

Input(Some(Graph((说道-01 :arg2 他 :arg1 (蠢-01 :arg0 x2 :time 方才 :degree 真) :manner 终于 :arg0 她),ArrayBuffer(Span(4,5,List(0),说道,说道-01,false), Span(3,4,List(1),他,他,false), Span(10,11,List(2),蠢,蠢-01,false), Span(8,9,List(3),方才,方才,false), Span(9,10,List(4),真,真,false), Span(1,2,List(5),终于,终于,false), Span(0,1,List(6),她,她,false)),Map(2 -> 蠢-01, 5 -> 终于, 1 -> 他, 4 -> 真, 6 -> 她, 0 -> 说道-01, 3 -> 方才),Map(x2 -> 她, x5 -> 真, x8 -> 他, x4 -> 蠢-01, x3 -> 终于, x6 -> 方才, x0 -> 说道-01))),[Ljava.lang.String;@38234a38,Annotation([Ljava.lang.String;@63fbfaeb,[Ljava.lang.String;@602e0143,[Ljava.lang.String;@2c07545f),Annotation([Ljava.lang.String;@e57b96d,[Ljava.lang.String;@32c726ee,[Ledu.cmu.lti.nlp.amr.Dependency;@22f31dec),Annotation([Ljava.lang.String;@34c01041,[Ljava.lang.String;@76f4b65,[Ljava.lang.String;@c94fd30),Annotation([Ljava.lang.String;@36328d33,[Ljava.lang.String;@2c4d1ac,[Ledu.cmu.lti.nlp.amr.Entity;@7f0d96f2))
AMR:
(x0 / 说道-01, manner, x3 / 终于)
(x0 / 说道-01, prep-except, x8 / 他)
(x0 / 说道-01, time, x6 / 方才)
(x3 / 终于, domain, x2 / 她)
(x4 / 蠢-01, degree, x5 / 真)
(x4 / 蠢-01, time, x6 / 方才)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 25,004 microseconds
Sentence: 请 你 原谅 我 。

Oracle Span 1:  你 => 你
Oracle Span 2:  原谅 => 原谅-01
Oracle Span 3:  我 => 我
Oracle Span 4:  请 => 请-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  原谅 => 原谅-01
Span 3-4:  我 => 我
Span 0-1:  请 => 请-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  原谅 => 原谅-01
Oracle Span 3-4:  我 => 我
Oracle Span 0-1:  请 => 请-01

Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	dobj	_	_
3	原谅	_	VV	VV	_	1	dep	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 请-01, arg2, x5 / 原谅-01)
(x5 / 原谅-01, arg0, x6 / 你)
(x5 / 原谅-01, arg1, x7 / 我)

Input(Some(Graph((请-01 :arg2 (原谅-01 :arg1 我 :arg0 你)),ArrayBuffer(Span(0,1,List(0),请,请-01,false), Span(2,3,List(1),原谅,原谅-01,false), Span(3,4,List(2),我,我,false), Span(1,2,List(3),你,你,false)),Map(2 -> 我, 1 -> 原谅-01, 0 -> 请-01, 3 -> 你),Map(x5 -> 原谅-01, x7 -> 我, x6 -> 你, x0 -> 请-01))),[Ljava.lang.String;@545b995e,Annotation([Ljava.lang.String;@76a2ddf3,[Ljava.lang.String;@524f3b3a,[Ljava.lang.String;@41e68d87),Annotation([Ljava.lang.String;@49ff7d8c,[Ljava.lang.String;@29526c05,[Ledu.cmu.lti.nlp.amr.Dependency;@2ef14fe),Annotation([Ljava.lang.String;@77102b91,[Ljava.lang.String;@45312be2,[Ljava.lang.String;@7fb95505),Annotation([Ljava.lang.String;@58be6e8,[Ljava.lang.String;@7331196b,[Ledu.cmu.lti.nlp.amr.Entity;@3f9342d4))
AMR:
(x0 / 请-01, prep-on-behalf, x5 / 原谅-01)
(x5 / 原谅-01, beneficiary, x6 / 你)
(x5 / 原谅-01, value, x7 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,566 microseconds
Sentence: 希望 你 能 幸福 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  希望 => 希望-01
Oracle Span 3:  幸福 => 幸福-01
Oracle Span 4:  能 => 能-01
Spans:
Span 1-2:  你 => 你
Span 0-1:  希望 => 希望-01
Span 3-4:  幸福 => 幸福-01
Span 2-3:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 0-1:  希望 => 希望-01
Oracle Span 3-4:  幸福 => 幸福-01
Oracle Span 2-3:  能 => 能-01

Dependencies:
1	希望	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	ccomp	_	_
3	能	_	VV	VV	_	1	dep	_	_
4	幸福	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	1	punct	_	_
6	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x7 / 希望-01, arg1, x8 / 能-01)
(x8 / 能-01, arg0, x9 / 幸福-01)
(x9 / 幸福-01, arg0, x10 / 你)

Input(Some(Graph((say :arg1 (希望-01 :arg1 (能-01 :arg0 (幸福-01 :arg0 你)))),ArrayBuffer(Span(0,1,List(0),希望,希望-01,false), Span(2,3,List(1),能,能-01,false), Span(3,4,List(2),幸福,幸福-01,false), Span(1,2,List(3),你,你,false)),Map(2 -> 幸福-01, 1 -> 能-01, 0 -> 希望-01, 3 -> 你),Map(x10 -> 你, x8 -> 能-01, x7 -> 希望-01, x9 -> 幸福-01))),[Ljava.lang.String;@ab7395e,Annotation([Ljava.lang.String;@50d13246,[Ljava.lang.String;@2bd08376,[Ljava.lang.String;@e70f13a),Annotation([Ljava.lang.String;@3d3e5463,[Ljava.lang.String;@64a40280,[Ledu.cmu.lti.nlp.amr.Dependency;@4b40f651),Annotation([Ljava.lang.String;@42b02722,[Ljava.lang.String;@d62fe5b,[Ljava.lang.String;@49964d75),Annotation([Ljava.lang.String;@528c868,[Ljava.lang.String;@466276d8,[Ledu.cmu.lti.nlp.amr.Entity;@5ce8d869))
AMR:
(x7 / 希望-01, ord, x10 / 你)
(x8 / 能-01, ord, x9 / 幸福-01)
(x9 / 幸福-01, degree, x7 / 希望-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 6,442 microseconds
Sentence: 花儿 对 他 毫 不 抱怨 ， 他 感到 很 惊讶 。

Oracle Span 1:  他 => 他
Oracle Span 2:  很 => 很
Oracle Span 3:  惊讶 => 惊讶-01
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  抱怨 => 抱怨-01
Oracle Span 6:  毫 => 毫
Oracle Span 7:  花儿 => 花儿
Spans:
Span 2-3:  他 => 他
Span 9-10:  很 => 很
Span 10-11:  惊讶 => 惊讶-01
Span 8-9:  感到 => 感到-01
Span 5-6:  抱怨 => 抱怨-01
Span 3-4:  毫 => 毫
Span 0-1:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  很 => 很
Oracle Span 10-11:  惊讶 => 惊讶-01
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 5-6:  抱怨 => 抱怨-01
Oracle Span 3-4:  毫 => 毫
Oracle Span 0-1:  花儿 => 花儿

Dependencies:
1	花儿	_	NR	NR	_	6	nsubj	_	_
2	对	_	P	P	_	6	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	毫	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	抱怨	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	感到	_	VV	VV	_	6	ccomp	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	惊讶	_	VA	VA	_	9	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	他	_	PN	PN	_	11	xsubj	_	_

Oracle:
(x2 / 抱怨-01, arg0, x5 / 花儿)
(x2 / 抱怨-01, arg2, x6 / 他)
(x2 / 抱怨-01, degree, x4 / 毫)
(x7 / 感到-01, arg1, x9 / 惊讶-01)
(x9 / 惊讶-01, degree, x10 / 很)

Input(Some(Graph((causation :arg1 (抱怨-01 :arg2 他 :arg0 花儿 :degree 毫 :polarity -) :arg2 (感到-01 :arg1 (惊讶-01 :arg0 x6 :degree 很) :arg0 x6)),ArrayBuffer(Span(5,6,List(0),抱怨,抱怨-01,false), Span(2,3,List(1),他,他,false), Span(0,1,List(2),花儿,花儿,false), Span(3,4,List(3),毫,毫,false), Span(8,9,List(4),感到,感到-01,false), Span(10,11,List(5),惊讶,惊讶-01,false), Span(9,10,List(6),很,很,false)),Map(2 -> 花儿, 5 -> 惊讶-01, 1 -> 他, 4 -> 感到-01, 6 -> 很, 0 -> 抱怨-01, 3 -> 毫),Map(x10 -> 很, x2 -> 抱怨-01, x5 -> 花儿, x7 -> 感到-01, x4 -> 毫, x6 -> 他, x9 -> 惊讶-01))),[Ljava.lang.String;@27eedb64,Annotation([Ljava.lang.String;@64c63c79,[Ljava.lang.String;@31c7528f,[Ljava.lang.String;@2b76ff4e),Annotation([Ljava.lang.String;@7a1234bf,[Ljava.lang.String;@2f62ea70,[Ledu.cmu.lti.nlp.amr.Dependency;@24ba9639),Annotation([Ljava.lang.String;@38aa816f,[Ljava.lang.String;@53f6fd09,[Ljava.lang.String;@6bffbc6d),Annotation([Ljava.lang.String;@1b84f475,[Ljava.lang.String;@7749bf93,[Ledu.cmu.lti.nlp.amr.Entity;@13330ac6))
AMR:
(x2 / 抱怨-01, degree, x4 / 毫)
(x2 / 抱怨-01, degree, x5 / 花儿)
(x2 / 抱怨-01, prep-on-behalf, x6 / 他)
(x7 / 感到-01, season, x9 / 惊讶-01)
(x7 / 感到-01, source, x2 / 抱怨-01)
(x9 / 惊讶-01, degree, x10 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 14,795 microseconds
Sentence: 他 举 着 罩子 ， 不知所措 地 伫立 在 那里 。

Oracle Span 1:  不知所措 => 不知所措-01
Oracle Span 2:  举 => 举-02
Oracle Span 3:  他 => 他
Oracle Span 4:  伫立 => 伫立-01
Oracle Span 5:  罩子 => 罩子
Oracle Span 6:  那里 => 那里
Spans:
Span 5-6:  不知所措 => 不知所措-01
Span 1-2:  举 => 举-02
Span 0-1:  他 => 他
Span 7-8:  伫立 => 伫立-01
Span 3-4:  罩子 => 罩子
Span 9-10:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  不知所措 => 不知所措-01
Oracle Span 1-2:  举 => 举-02
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  伫立 => 伫立-01
Oracle Span 3-4:  罩子 => 罩子
Oracle Span 9-10:  那里 => 那里

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	举	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	罩子	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	不知所措	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	伫立	_	VV	VV	_	2	conj	_	_
9	在	_	P	P	_	8	prep	_	_
10	那里	_	PN	PN	_	9	pobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 举-02, arg0, x13 / 他)
(x12 / 举-02, arg1, x14 / 罩子)
(x15 / 伫立-01, arg1, x17 / 那里)
(x15 / 伫立-01, manner, x18 / 不知所措-01)

Input(Some(Graph((and :op (举-02 :arg1 罩子 :arg0 他) :op (伫立-01 :manner (不知所措-01 :arg0 x13) :arg1 那里 :arg0 x13)),ArrayBuffer(Span(1,2,List(0),举,举-02,false), Span(3,4,List(1),罩子,罩子,false), Span(0,1,List(2),他,他,false), Span(7,8,List(3),伫立,伫立-01,false), Span(5,6,List(4),不知所措,不知所措-01,false), Span(9,10,List(5),那里,那里,false)),Map(2 -> 他, 5 -> 那里, 1 -> 罩子, 4 -> 不知所措-01, 0 -> 举-02, 3 -> 伫立-01),Map(x13 -> 他, x12 -> 举-02, x15 -> 伫立-01, x18 -> 不知所措-01, x14 -> 罩子, x17 -> 那里))),[Ljava.lang.String;@539d019,Annotation([Ljava.lang.String;@39a2bb97,[Ljava.lang.String;@3ad2e17,[Ljava.lang.String;@8c3619e),Annotation([Ljava.lang.String;@4331d187,[Ljava.lang.String;@6f63b475,[Ledu.cmu.lti.nlp.amr.Dependency;@554e218),Annotation([Ljava.lang.String;@1608bcbd,[Ljava.lang.String;@5bf8fa12,[Ljava.lang.String;@29ca3d04),Annotation([Ljava.lang.String;@b2c5e07,[Ljava.lang.String;@5812f68b,[Ledu.cmu.lti.nlp.amr.Entity;@4426bff1))
AMR:
(x12 / 举-02, mod, x14 / 罩子)
(x12 / 举-02, prep-from, x13 / 他)
(x15 / 伫立-01, degree, x17 / 那里)
(x15 / 伫立-01, manner, x18 / 不知所措-01)
(x18 / 不知所措-01, ARG0, x14 / 罩子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 13,683 microseconds
Sentence: 他 不 明白 她 为什么 会 这样 温柔 恬静 。

Oracle Span 1:  他 => 他
Oracle Span 2:  她 => 她
Oracle Span 3:  恬静 => 恬静-01
Oracle Span 4:  明白 => 明白-01
Oracle Span 5:  温柔 => 温柔-01
Oracle Span 6:  这样 => 这样
Spans:
Span 0-1:  他 => 他
Span 3-4:  她 => 她
Span 8-9:  恬静 => 恬静-01
Span 2-3:  明白 => 明白-01
Span 7-8:  温柔 => 温柔-01
Span 6-7:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  她 => 她
Oracle Span 8-9:  恬静 => 恬静-01
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 7-8:  温柔 => 温柔-01
Oracle Span 6-7:  这样 => 这样

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	她	_	PN	PN	_	8	nsubj	_	_
5	为什么	_	AD	AD	_	8	advmod	_	_
6	会	_	VV	VV	_	8	mmod	_	_
7	这样	_	AD	AD	_	8	advmod	_	_
8	温柔	_	VV	VV	_	3	ccomp	_	_
9	恬静	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 明白-01, arg0, x3 / 他)
(x5 / 温柔-01, arg0, x7 / 她)
(x5 / 温柔-01, degree, x6 / 这样)

Input(Some(Graph((明白-01 :arg1 (and :op (温柔-01 :arg0 她 :degree 这样) :op (恬静-01 :arg0 x7 :degree 这样) :cause amr-unknown) :arg0 他 :polarity -),ArrayBuffer(Span(2,3,List(0),明白,明白-01,false), Span(7,8,List(1),温柔,温柔-01,false), Span(3,4,List(2),她,她,false), Span(6,7,List(3),这样,这样,false), Span(8,9,List(4),恬静,恬静-01,false), Span(0,1,List(5),他,他,false)),Map(2 -> 她, 5 -> 他, 1 -> 温柔-01, 4 -> 恬静-01, 0 -> 明白-01, 3 -> 这样),Map(x5 -> 温柔-01, x8 -> 恬静-01, x7 -> 她, x3 -> 他, x6 -> 这样, x0 -> 明白-01))),[Ljava.lang.String;@3c7c886c,Annotation([Ljava.lang.String;@55493582,[Ljava.lang.String;@1a20270e,[Ljava.lang.String;@6b88ca8c),Annotation([Ljava.lang.String;@336f1079,[Ljava.lang.String;@2f16c6b3,[Ledu.cmu.lti.nlp.amr.Dependency;@34158c08),Annotation([Ljava.lang.String;@19e4fcac,[Ljava.lang.String;@52c3cb31,[Ljava.lang.String;@4b79ac84),Annotation([Ljava.lang.String;@53941c2f,[Ljava.lang.String;@6dab9b6d,[Ledu.cmu.lti.nlp.amr.Entity;@21fd5faa))
AMR:
(x0 / 明白-01, ARG0, x6 / 这样)
(x0 / 明白-01, ARG6, x3 / 他)
(x5 / 温柔-01, degree, x6 / 这样)
(x5 / 温柔-01, polite, x7 / 她)
(x8 / 恬静-01, degree, x5 / 温柔-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
Decoded in 13,702 microseconds
Sentence: “ 的确 ， 我 爱 你 。 ” 花儿 对 他 说道

Oracle Span 1:  他 => 他
Oracle Span 2:  爱 => 爱-01
Oracle Span 3:  的确 => 的确
Oracle Span 4:  花儿 => 花儿
Oracle Span 5:  说道 => 说道-01
Spans:
Span 10-11:  他 => 他
Span 4-5:  爱 => 爱-01
Span 1-2:  的确 => 的确
Span 8-9:  花儿 => 花儿
Span 11-12:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  他 => 他
Oracle Span 4-5:  爱 => 爱-01
Oracle Span 1-2:  的确 => 的确
Oracle Span 8-9:  花儿 => 花儿
Oracle Span 11-12:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	的确	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	我	_	PN	PN	_	5	prep	_	_
5	爱	_	VV	VV	_	12	dep	_	_
6	你	_	PN	PN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	花儿	_	NN	NN	_	12	nsubj	_	_
10	对	_	P	P	_	12	prep	_	_
11	他	_	PN	PN	_	10	pobj	_	_
12	说道	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 花儿)
(x0 / 说道-01, arg1, x3 / 爱-01)
(x0 / 说道-01, arg2, x6 / 他)
(x3 / 爱-01, manner, x7 / 的确)

Input(Some(Graph((说道-01 :arg2 他 :arg1 (爱-01 :manner 的确 :arg1 他 :arg0 x2) :arg0 花儿),ArrayBuffer(Span(11,12,List(0),说道,说道-01,false), Span(10,11,List(1),他,他,false), Span(4,5,List(2),爱,爱-01,false), Span(1,2,List(3),的确,的确,false), Span(8,9,List(4),花儿,花儿,false)),Map(2 -> 爱-01, 1 -> 他, 4 -> 花儿, 0 -> 说道-01, 3 -> 的确),Map(x2 -> 花儿, x7 -> 的确, x3 -> 爱-01, x6 -> 他, x0 -> 说道-01))),[Ljava.lang.String;@2766ca9d,Annotation([Ljava.lang.String;@5460cf3a,[Ljava.lang.String;@65a15628,[Ljava.lang.String;@2e6a5539),Annotation([Ljava.lang.String;@3fc9504b,[Ljava.lang.String;@6d025197,[Ledu.cmu.lti.nlp.amr.Dependency;@27d4a09),Annotation([Ljava.lang.String;@7e4204e2,[Ljava.lang.String;@b7c4869,[Ljava.lang.String;@740d2e78),Annotation([Ljava.lang.String;@1c481ff2,[Ljava.lang.String;@72437d8d,[Ledu.cmu.lti.nlp.amr.Entity;@1b955cac))
AMR:
(x0 / 说道-01, example, x2 / 花儿)
(x0 / 说道-01, example, x6 / 他)
(x3 / 爱-01, manner, x7 / 的确)
(x3 / 爱-01, source, x2 / 花儿)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,315 microseconds
Sentence: “ 但 由于 我 的 过错 ， 你 一点 也 没有 理会 。

Oracle Span 1:  一点 => 一点
Oracle Span 2:  也 => 也
Oracle Span 3:  你 => 你
Oracle Span 4:  我 => 我
Oracle Span 5:  理会 => 理会-01
Oracle Span 6:  过错 => 过错
Spans:
Span 8-9:  一点 => 一点
Span 9-10:  也 => 也
Span 7-8:  你 => 你
Span 3-4:  我 => 我
Span 11-12:  理会 => 理会-01
Span 5-6:  过错 => 过错

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一点 => 一点
Oracle Span 9-10:  也 => 也
Oracle Span 7-8:  你 => 你
Oracle Span 3-4:  我 => 我
Oracle Span 11-12:  理会 => 理会-01
Oracle Span 5-6:  过错 => 过错

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	但	_	AD	AD	_	11	advmod	_	_
3	由于	_	P	P	_	11	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	过错	_	NN	NN	_	3	pobj	_	_
7	,	_	PU	PU	_	11	punct	_	_
8	你	_	PN	PN	_	11	nsubj	_	_
9	一点	_	AD	AD	_	11	advmod	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	没有	_	VE	VE	_	0	root	_	_
12	理会	_	NN	NN	_	11	dobj	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x6 / 过错, poss, x7 / 我)
(x8 / 理会-01, arg0, x10 / 你)
(x8 / 理会-01, degree, x12 / 一点)
(x8 / 理会-01, manner, x11 / 也)

Input(Some(Graph((say :arg1 (contrast :arg2 (causation :arg1 (过错 :poss 我) :arg2 (理会-01 :degree 一点 :manner 也 :arg0 你 :polarity -)))),ArrayBuffer(Span(5,6,List(0),过错,过错,false), Span(3,4,List(1),我,我,false), Span(11,12,List(2),理会,理会-01,false), Span(8,9,List(3),一点,一点,false), Span(9,10,List(4),也,也,false), Span(7,8,List(5),你,你,false)),Map(2 -> 理会-01, 5 -> 你, 1 -> 我, 4 -> 也, 0 -> 过错, 3 -> 一点),Map(x10 -> 你, x8 -> 理会-01, x12 -> 一点, x7 -> 我, x11 -> 也, x6 -> 过错))),[Ljava.lang.String;@676cf48,Annotation([Ljava.lang.String;@5a1de7fb,[Ljava.lang.String;@335b5620,[Ljava.lang.String;@29a0cdb),Annotation([Ljava.lang.String;@32a68f4f,[Ljava.lang.String;@73194df,[Ledu.cmu.lti.nlp.amr.Dependency;@6eb2384f),Annotation([Ljava.lang.String;@3c9c0d96,[Ljava.lang.String;@3a4621bd,[Ljava.lang.String;@31dadd46),Annotation([Ljava.lang.String;@4ed5eb72,[Ljava.lang.String;@12f9af83,[Ledu.cmu.lti.nlp.amr.Entity;@19b93fa8))
AMR:
(x6 / 过错, poss, x10 / 你)
(x6 / 过错, poss, x7 / 我)
(x8 / 理会-01, degree, x12 / 一点)
(x8 / 理会-01, location, x6 / 过错)
(x8 / 理会-01, manner, x11 / 也)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.3
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
Decoded in 12,659 microseconds
Sentence: 这 丝毫 不 重要 。

Oracle Span 1:  丝毫 => 丝毫
Oracle Span 2:  这 => 这
Oracle Span 3:  重要 => 重要-01
Spans:
Span 1-2:  丝毫 => 丝毫
Span 0-1:  这 => 这
Span 3-4:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  丝毫 => 丝毫
Oracle Span 0-1:  这 => 这
Oracle Span 3-4:  重要 => 重要-01

Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	丝毫	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	重要	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 重要-01, arg0, x3 / 这)
(x0 / 重要-01, degree, x4 / 丝毫)

Input(Some(Graph((重要-01 :degree 丝毫 :arg0 这 :polarity -),ArrayBuffer(Span(3,4,List(0),重要,重要-01,false), Span(1,2,List(1),丝毫,丝毫,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 丝毫, 0 -> 重要-01),Map(x4 -> 丝毫, x3 -> 这, x0 -> 重要-01))),[Ljava.lang.String;@7e6ef134,Annotation([Ljava.lang.String;@1f010bf0,[Ljava.lang.String;@40db2a24,[Ljava.lang.String;@10cf09e8),Annotation([Ljava.lang.String;@1921ad94,[Ljava.lang.String;@ee86bcb,[Ledu.cmu.lti.nlp.amr.Dependency;@177bea38),Annotation([Ljava.lang.String;@7f132176,[Ljava.lang.String;@6bca7e0d,[Ljava.lang.String;@2631f68c),Annotation([Ljava.lang.String;@6ed3f258,[Ljava.lang.String;@8ad6665,[Ledu.cmu.lti.nlp.amr.Entity;@30af5b6b))
AMR:
(x0 / 重要-01, degree, x4 / 丝毫)
(x0 / 重要-01, direction, x3 / 这)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 6,301 microseconds
Sentence: 不过 ， 你 也 和 我 一样 的 蠢 。

Oracle Span 1:  一样 => 一样
Oracle Span 2:  你 => 你
Oracle Span 3:  我 => 我
Oracle Span 4:  蠢 => 蠢-01
Spans:
Span 6-7:  一样 => 一样
Span 2-3:  你 => 你
Span 5-6:  我 => 我
Span 8-9:  蠢 => 蠢-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一样 => 一样
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 8-9:  蠢 => 蠢-01

Dependencies:
1	不过	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	你	_	PN	PN	_	7	nsubj	_	_
4	也	_	AD	AD	_	7	advmod	_	_
5	和	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	一样	_	VA	VA	_	9	nsubj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	蠢	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x3 / 蠢-01, arg0, x7 / 你)
(x3 / 蠢-01, degree, x9 / 一样)
(x7 / 你, compared-to, x8 / 我)

Input(Some(Graph((contrast :arg2 (蠢-01 :degree 一样 :arg0 (你 :compared-to 我))),ArrayBuffer(Span(8,9,List(0),蠢,蠢-01,false), Span(6,7,List(1),一样,一样,false), Span(2,3,List(2),你,你,false), Span(5,6,List(3),我,我,false)),Map(2 -> 你, 1 -> 一样, 0 -> 蠢-01, 3 -> 我),Map(x8 -> 我, x7 -> 你, x3 -> 蠢-01, x9 -> 一样))),[Ljava.lang.String;@19835e64,Annotation([Ljava.lang.String;@68b32e3e,[Ljava.lang.String;@bcef303,[Ljava.lang.String;@41709512),Annotation([Ljava.lang.String;@42039326,[Ljava.lang.String;@33308786,[Ledu.cmu.lti.nlp.amr.Dependency;@4f9a2c08),Annotation([Ljava.lang.String;@a87f8ec,[Ljava.lang.String;@5443d039,[Ljava.lang.String;@63787180),Annotation([Ljava.lang.String;@7d1cfb8b,[Ljava.lang.String;@48e92c5c,[Ledu.cmu.lti.nlp.amr.Entity;@2e1ef60))
AMR:
(x3 / 蠢-01, ARG3, x7 / 你)
(x3 / 蠢-01, degree, x9 / 一样)
(x7 / 你, compared-to, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,554 microseconds
Sentence: 希望 你 今后 能 幸福 。 把 罩子 放 在 一边 吧 ，

Oracle Span 1:  一边 => 一边
Oracle Span 2:  今后 => 今后
Oracle Span 3:  你 => 你
Oracle Span 4:  希望 => 希望-01
Oracle Span 5:  幸福 => 幸福-01
Oracle Span 6:  放 => 放-01
Oracle Span 7:  罩子 => 罩子
Oracle Span 8:  能 => 能-01
Spans:
Span 10-11:  一边 => 一边
Span 2-3:  今后 => 今后
Span 1-2:  你 => 你
Span 0-1:  希望 => 希望-01
Span 4-5:  幸福 => 幸福-01
Span 8-9:  放 => 放-01
Span 7-8:  罩子 => 罩子
Span 3-4:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  一边 => 一边
Oracle Span 2-3:  今后 => 今后
Oracle Span 1-2:  你 => 你
Oracle Span 0-1:  希望 => 希望-01
Oracle Span 4-5:  幸福 => 幸福-01
Oracle Span 8-9:  放 => 放-01
Oracle Span 7-8:  罩子 => 罩子
Oracle Span 3-4:  能 => 能-01

Dependencies:
1	希望	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	今后	_	NT	NT	_	4	tmod	_	_
4	能	_	VV	VV	_	1	ccomp	_	_
5	幸福	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	把	_	BA	BA	_	9	ba	_	_
8	罩子	_	NN	NN	_	9	nsubj	_	_
9	放	_	VV	VV	_	1	dep	_	_
10	在	_	VV	VV	_	9	dobj	_	_
11	一边	_	CD	CD	_	10	range	_	_
12	吧	_	SP	SP	_	10	dep	_	_
13	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x2 / 希望-01, arg1, x3 / 能-01)
(x3 / 能-01, arg0, x4 / 幸福-01)
(x4 / 幸福-01, arg0, x5 / 你)
(x4 / 幸福-01, duration, x6 / 今后)
(x7 / 放-01, arg1, x8 / 罩子)
(x7 / 放-01, arg2, x9 / 一边)

Input(Some(Graph((multi-sentence :snt1 (希望-01 :arg1 (能-01 :arg0 (幸福-01 :duration 今后 :arg0 你))) :snt2 (放-01 :mode expressive :arg2 一边 :arg1 罩子)),ArrayBuffer(Span(0,1,List(0),希望,希望-01,false), Span(3,4,List(1),能,能-01,false), Span(4,5,List(2),幸福,幸福-01,false), Span(2,3,List(3),今后,今后,false), Span(1,2,List(4),你,你,false), Span(8,9,List(5),放,放-01,false), Span(10,11,List(6),一边,一边,false), Span(7,8,List(7),罩子,罩子,false)),Map(2 -> 幸福-01, 5 -> 放-01, 7 -> 罩子, 1 -> 能-01, 4 -> 你, 6 -> 一边, 0 -> 希望-01, 3 -> 今后),Map(x2 -> 希望-01, x5 -> 你, x8 -> 罩子, x7 -> 放-01, x4 -> 幸福-01, x3 -> 能-01, x6 -> 今后, x9 -> 一边))),[Ljava.lang.String;@22356acd,Annotation([Ljava.lang.String;@386f0da3,[Ljava.lang.String;@39655d3e,[Ljava.lang.String;@34f22f9d),Annotation([Ljava.lang.String;@3d1848cc,[Ljava.lang.String;@7dda48d9,[Ledu.cmu.lti.nlp.amr.Dependency;@6e4566f1),Annotation([Ljava.lang.String;@4b6e2263,[Ljava.lang.String;@344f4dea,[Ljava.lang.String;@1b7c473a),Annotation([Ljava.lang.String;@5e4bd84a,[Ljava.lang.String;@648c94da,[Ledu.cmu.lti.nlp.amr.Entity;@2a62b5bc))
AMR:
(x2 / 希望-01, accompanier, x3 / 能-01)
(x2 / 希望-01, prep-on-behalf, x7 / 放-01)
(x3 / 能-01, prep-within, x4 / 幸福-01)
(x4 / 幸福-01, ARG3, x5 / 你)
(x4 / 幸福-01, duration, x6 / 今后)
(x7 / 放-01, ARG4, x9 / 一边)
(x7 / 放-01, manner, x8 / 罩子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 19,772 microseconds
Sentence: 我 用 不 着 它 了 。 ”

Oracle Span 1:  它 => 它
Oracle Span 2:  我 => 我
Oracle Span 3:  用 => 用-01
Spans:
Span 4-5:  它 => 它
Span 0-1:  我 => 我
Span 1-2:  用 => 用-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  它 => 它
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  用 => 用-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	用	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	2	dep	_	_
4	着	_	VV	VV	_	2	dep	_	_
5	它	_	PN	PN	_	2	dobj	_	_
6	了	_	SP	SP	_	2	dep	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 用-01, arg0, x9 / 我)
(x7 / 用-01, arg1, x10 / 它)

Input(Some(Graph((say :arg1 (用-01 :arg1 它 :arg0 我 :polarity -)),ArrayBuffer(Span(1,2,List(0),用,用-01,false), Span(4,5,List(1),它,它,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 它, 0 -> 用-01),Map(x10 -> 它, x7 -> 用-01, x9 -> 我))),[Ljava.lang.String;@53de625d,Annotation([Ljava.lang.String;@535779e4,[Ljava.lang.String;@53fd0d10,[Ljava.lang.String;@6c0d9d86),Annotation([Ljava.lang.String;@4ce1d6d0,[Ljava.lang.String;@24111ef1,[Ledu.cmu.lti.nlp.amr.Dependency;@1f3f02ee),Annotation([Ljava.lang.String;@1fde5d22,[Ljava.lang.String;@5dcb4f5f,[Ljava.lang.String;@71812481),Annotation([Ljava.lang.String;@16ce702d,[Ljava.lang.String;@7b94089b,[Ledu.cmu.lti.nlp.amr.Entity;@7ca20101))
AMR:
(x7 / 用-01, poss, x9 / 我)
(x7 / 用-01, snt1, x10 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 5,162 microseconds
Sentence: “ 要是 风 来 了 怎么 办 ？ ”

Oracle Span 1:  办 => 办-01
Oracle Span 2:  来 => 来-06
Oracle Span 3:  风 => 风
Spans:
Span 6-7:  办 => 办-01
Span 3-4:  来 => 来-06
Span 2-3:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  办 => 办-01
Oracle Span 3-4:  来 => 来-06
Oracle Span 2-3:  风 => 风

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	要是	_	NN	NN	_	3	nn	_	_
3	风	_	NN	NN	_	4	nsubj	_	_
4	来	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	怎么	_	AD	AD	_	7	advmod	_	_
7	办	_	VV	VV	_	4	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x3 / 来-06, arg0, x4 / 风)

Input(Some(Graph((say :arg1 (condition :arg1 (来-06 :mode interrogative :arg0 风) :arg2 (办-01 :arg1 amr-unknown))),ArrayBuffer(Span(3,4,List(0),来,来-06,false), Span(2,3,List(1),风,风,false), Span(6,7,List(2),办,办-01,false)),Map(2 -> 办-01, 1 -> 风, 0 -> 来-06),Map(x5 -> 办-01, x4 -> 风, x3 -> 来-06))),[Ljava.lang.String;@47f9738,Annotation([Ljava.lang.String;@6155d082,[Ljava.lang.String;@3a5ecce3,[Ljava.lang.String;@561868a0),Annotation([Ljava.lang.String;@2ea6e30c,[Ljava.lang.String;@6138e79a,[Ledu.cmu.lti.nlp.amr.Dependency;@2dcd168a),Annotation([Ljava.lang.String;@388526fb,[Ljava.lang.String;@21a21c64,[Ljava.lang.String;@7803bfd),Annotation([Ljava.lang.String;@42bc14c1,[Ljava.lang.String;@531f4093,[Ledu.cmu.lti.nlp.amr.Entity;@62ef27a8))
AMR:
(x3 / 来-06, purpose, x5 / 办-01)
(x4 / 风, purpose, x3 / 来-06)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 5,012 microseconds
Sentence: “ 我 的 感冒 并 不 那么 重 … 夜晚 的 凉风 对 我 倒 有 好处 。

Oracle Span 1:  凉风 => 凉风
Oracle Span 2:  夜晚 => 夜晚
Oracle Span 3:  好处 => 好处
Oracle Span 4:  并 => 并
Oracle Span 5:  感冒 => 感冒-01
Oracle Span 6:  我 => 我
Oracle Span 7:  有 => 有-05
Oracle Span 8:  那么 => 那么
Oracle Span 9:  重 => 重-02
Spans:
Span 11-12:  凉风 => 凉风
Span 9-10:  夜晚 => 夜晚
Span 16-17:  好处 => 好处
Span 4-5:  并 => 并
Span 3-4:  感冒 => 感冒-01
Span 1-2:  我 => 我
Span 15-16:  有 => 有-05
Span 6-7:  那么 => 那么
Span 7-8:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  凉风 => 凉风
Oracle Span 9-10:  夜晚 => 夜晚
Oracle Span 16-17:  好处 => 好处
Oracle Span 4-5:  并 => 并
Oracle Span 3-4:  感冒 => 感冒-01
Oracle Span 1-2:  我 => 我
Oracle Span 15-16:  有 => 有-05
Oracle Span 6-7:  那么 => 那么
Oracle Span 7-8:  重 => 重-02

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	感冒	_	NN	NN	_	8	nsubj	_	_
5	并	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	那么	_	AD	AD	_	8	advmod	_	_
8	重	_	VV	VV	_	0	root	_	_
9	…	_	PU	PU	_	8	punct	_	_
10	夜晚	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	凉风	_	NN	NN	_	16	nsubj	_	_
13	对	_	P	P	_	16	prep	_	_
14	我	_	PN	PN	_	13	pobj	_	_
15	倒	_	AD	AD	_	16	advmod	_	_
16	有	_	VE	VE	_	8	conj	_	_
17	好处	_	NN	NN	_	16	dobj	_	_
18	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 有-05, arg0, x11 / 凉风)
(x10 / 有-05, arg1, x13 / 好处)
(x11 / 凉风, time, x12 / 夜晚)
(x3 / 重-02, arg0, x7 / 感冒-01)
(x3 / 重-02, degree, x4 / 那么)
(x3 / 重-02, manner, x6 / 并)
(x7 / 感冒-01, arg0, x9 / 我)

Input(Some(Graph((say :arg1 (multi-sentence :snt1 (重-02 :arg0 (感冒-01 :arg0 我) :manner 并 :polarity - :degree 那么) :snt2 (有-05 :arg1 (好处 :beneficiary x9) :arg0 (凉风 :time 夜晚)))),ArrayBuffer(Span(7,8,List(0),重,重-02,false), Span(3,4,List(1),感冒,感冒-01,false), Span(1,2,List(2),我,我,false), Span(4,5,List(3),并,并,false), Span(6,7,List(4),那么,那么,false), Span(15,16,List(5),有,有-05,false), Span(16,17,List(6),好处,好处,false), Span(11,12,List(7),凉风,凉风,false), Span(9,10,List(8),夜晚,夜晚,false)),Map(2 -> 我, 5 -> 有-05, 8 -> 夜晚, 7 -> 凉风, 1 -> 感冒-01, 4 -> 那么, 6 -> 好处, 0 -> 重-02, 3 -> 并),Map(x10 -> 有-05, x13 -> 好处, x12 -> 夜晚, x7 -> 感冒-01, x4 -> 那么, x11 -> 凉风, x3 -> 重-02, x6 -> 并, x9 -> 我))),[Ljava.lang.String;@6436a7db,Annotation([Ljava.lang.String;@460ebd80,[Ljava.lang.String;@6f3c660a,[Ljava.lang.String;@74f5ce22),Annotation([Ljava.lang.String;@25aca718,[Ljava.lang.String;@16fdec90,[Ledu.cmu.lti.nlp.amr.Dependency;@1afdd473),Annotation([Ljava.lang.String;@40238dd0,[Ljava.lang.String;@7776ab,[Ljava.lang.String;@79179359),Annotation([Ljava.lang.String;@dbd8e44,[Ljava.lang.String;@51acdf2e,[Ledu.cmu.lti.nlp.amr.Entity;@6a55299e))
AMR:
(x10 / 有-05, location, x11 / 凉风)
(x10 / 有-05, prep-through, x13 / 好处)
(x11 / 凉风, time, x12 / 夜晚)
(x3 / 重-02, degree, x4 / 那么)
(x3 / 重-02, manner, x6 / 并)
(x3 / 重-02, prep-through, x12 / 夜晚)
(x6 / 并, location, x7 / 感冒-01)
(x7 / 感冒-01, example, x9 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 26,392 microseconds
Sentence: 我 是 一 朵 花 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  花 => 花
Spans:
Span 0-1:  我 => 我
Span 4-5:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  花 => 花

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	5	clf	_	_
5	花	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 花, domain, x8 / 我)

Input(Some(Graph((say :arg1 (花 :domain 我 :quant 1)),ArrayBuffer(Span(4,5,List(0),花,花,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 花),Map(x8 -> 我, x6 -> 花))),[Ljava.lang.String;@2f1de2d6,Annotation([Ljava.lang.String;@4eb386df,[Ljava.lang.String;@79517588,[Ljava.lang.String;@3a0baae5),Annotation([Ljava.lang.String;@7ac0e420,[Ljava.lang.String;@289710d9,[Ledu.cmu.lti.nlp.amr.Dependency;@5a18cd76),Annotation([Ljava.lang.String;@3da30852,[Ljava.lang.String;@403f0a22,[Ljava.lang.String;@503ecb24),Annotation([Ljava.lang.String;@4c51cf28,[Ljava.lang.String;@6995bf68,[Ledu.cmu.lti.nlp.amr.Entity;@5143c662))
AMR:
(x6 / 花, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 3,187 microseconds
Sentence: “ 要是 有 虫子 野兽 呢 ？ … ”

Oracle Span 1:  有 => 有-03
Oracle Span 2:  虫子 => 虫子
Oracle Span 3:  野兽 => 野兽
Spans:
Span 2-3:  有 => 有-03
Span 3-4:  虫子 => 虫子
Span 4-5:  野兽 => 野兽

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  有 => 有-03
Oracle Span 3-4:  虫子 => 虫子
Oracle Span 4-5:  野兽 => 野兽

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	要是	_	VV	VV	_	0	root	_	_
3	有	_	VE	VE	_	8	rcmod	_	_
4	虫子	_	NN	NN	_	5	nn	_	_
5	野兽	_	NN	NN	_	3	dobj	_	_
6	呢	_	SP	SP	_	3	dep	_	_
7	？	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	2	dobj	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有-03 :mode interrogative :arg1 (and :op 虫子 :op 野兽))),ArrayBuffer(Span(2,3,List(0),有,有-03,false), Span(3,4,List(1),虫子,虫子,false), Span(4,5,List(2),野兽,野兽,false)),Map(2 -> 野兽, 1 -> 虫子, 0 -> 有-03),Map(x5 -> 有-03, x8 -> 野兽, x7 -> 虫子))),[Ljava.lang.String;@77825085,Annotation([Ljava.lang.String;@3568f9d2,[Ljava.lang.String;@71c27ee8,[Ljava.lang.String;@3e7dd664),Annotation([Ljava.lang.String;@5b1ebf56,[Ljava.lang.String;@294a6b8e,[Ledu.cmu.lti.nlp.amr.Dependency;@4b1d6571),Annotation([Ljava.lang.String;@1b835480,[Ljava.lang.String;@3549bca9,[Ljava.lang.String;@4f25b795),Annotation([Ljava.lang.String;@6fb365ed,[Ljava.lang.String;@6e950bcf,[Ledu.cmu.lti.nlp.amr.Entity;@16414e40))
AMR:
(x5 / 有-03, prep-for, x7 / 虫子)
(x8 / 野兽, location, x7 / 虫子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 4,510 microseconds
Sentence: “ 我 要是 想 认识 蝴蝶 ， 经 不 起 两三 只 尺蠖 是 不 行 的 。

Oracle Span 1:  尺蠖 => 尺蠖
Oracle Span 2:  想 => 想-02
Oracle Span 3:  我 => 我
Oracle Span 4:  经 => 经-01
Oracle Span 5:  蝴蝶 => 蝴蝶
Oracle Span 6:  认识 => 认识-01
Spans:
Span 12-13:  尺蠖 => 尺蠖
Span 3-4:  想 => 想-02
Span 1-2:  我 => 我
Span 7-8:  经 => 经-01
Span 5-6:  蝴蝶 => 蝴蝶
Span 4-5:  认识 => 认识-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  尺蠖 => 尺蠖
Oracle Span 3-4:  想 => 想-02
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  经 => 经-01
Oracle Span 5-6:  蝴蝶 => 蝴蝶
Oracle Span 4-5:  认识 => 认识-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	要是	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	0	root	_	_
5	认识	_	VV	VV	_	4	ccomp	_	_
6	蝴蝶	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	经	_	P	P	_	14	prep	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	起	_	VV	VV	_	8	pccomp	_	_
11	两三	_	CD	CD	_	12	nummod	_	_
12	只	_	M	M	_	10	range	_	_
13	尺蠖	_	AD	AD	_	14	advmod	_	_
14	是	_	VC	VC	_	4	dep	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	行	_	VV	VV	_	14	attr	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x19 / 想-02, arg0, x20 / 我)
(x19 / 想-02, arg1, x21 / 认识-01)
(x21 / 认识-01, arg1, x23 / 蝴蝶)
(x25 / 经-01, arg1, x27 / 尺蠖)

Input(Some(Graph((say :arg1 (condition :arg1 (想-02 :arg1 (认识-01 :arg1 蝴蝶 :arg0 x20) :arg0 我) :arg2 (obligate :arg1 (经-01 :arg1 (尺蠖 :quant (between :op 2 :op 3)) :arg0 x20)))),ArrayBuffer(Span(3,4,List(0),想,想-02,false), Span(4,5,List(1),认识,认识-01,false), Span(5,6,List(2),蝴蝶,蝴蝶,false), Span(1,2,List(3),我,我,false), Span(7,8,List(4),经,经-01,false), Span(12,13,List(5),尺蠖,尺蠖,false)),Map(2 -> 蝴蝶, 5 -> 尺蠖, 1 -> 认识-01, 4 -> 经-01, 0 -> 想-02, 3 -> 我),Map(x25 -> 经-01, x19 -> 想-02, x27 -> 尺蠖, x21 -> 认识-01, x23 -> 蝴蝶, x20 -> 我))),[Ljava.lang.String;@74bada02,Annotation([Ljava.lang.String;@525575,[Ljava.lang.String;@46dffdc3,[Ljava.lang.String;@5a709816),Annotation([Ljava.lang.String;@78383390,[Ljava.lang.String;@6ad3381f,[Ledu.cmu.lti.nlp.amr.Dependency;@53dbe163),Annotation([Ljava.lang.String;@db57326,[Ljava.lang.String;@34a875b3,[Ljava.lang.String;@4748a0f9),Annotation([Ljava.lang.String;@4b14918a,[Ljava.lang.String;@6d1ef78d,[Ledu.cmu.lti.nlp.amr.Entity;@1a6c1270))
AMR:
(x19 / 想-02, prep-through, x20 / 我)
(x21 / 认识-01, prep-through, x23 / 蝴蝶)
(x21 / 认识-01, time, x19 / 想-02)
(x25 / 经-01, location, x23 / 蝴蝶)
(x25 / 经-01, location, x27 / 尺蠖)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
Decoded in 14,565 microseconds
Sentence: 据说 这 是 很 美 的 。

Oracle Span 1:  很 => 很
Oracle Span 2:  据说 => 据说-01
Oracle Span 3:  美 => 美-01
Oracle Span 4:  这 => 这
Spans:
Span 3-4:  很 => 很
Span 0-1:  据说 => 据说-01
Span 4-5:  美 => 美-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  很 => 很
Oracle Span 0-1:  据说 => 据说-01
Oracle Span 4-5:  美 => 美-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	据说	_	AD	AD	_	3	advmod	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	美	_	JJ	JJ	_	3	dep	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 据说-01, arg0, x2 / 美-01)
(x2 / 美-01, arg0, x4 / 这)
(x2 / 美-01, degree, x3 / 很)

Input(Some(Graph((据说-01 :arg0 (美-01 :arg0 这 :degree 很)),ArrayBuffer(Span(0,1,List(0),据说,据说-01,false), Span(4,5,List(1),美,美-01,false), Span(1,2,List(2),这,这,false), Span(3,4,List(3),很,很,false)),Map(2 -> 这, 1 -> 美-01, 0 -> 据说-01, 3 -> 很),Map(x2 -> 美-01, x4 -> 这, x3 -> 很, x0 -> 据说-01))),[Ljava.lang.String;@18a136ac,Annotation([Ljava.lang.String;@77d67cf3,[Ljava.lang.String;@6dee4f1b,[Ljava.lang.String;@176b3f44),Annotation([Ljava.lang.String;@6ee6f53,[Ljava.lang.String;@421bba99,[Ledu.cmu.lti.nlp.amr.Dependency;@5d12a356),Annotation([Ljava.lang.String;@134d26af,[Ljava.lang.String;@66ac5762,[Ljava.lang.String;@797cf65c),Annotation([Ljava.lang.String;@31bcf236,[Ljava.lang.String;@4b3ed2f0,[Ledu.cmu.lti.nlp.amr.Entity;@4fad9bb2))
AMR:
(x0 / 据说-01, ARG3, x2 / 美-01)
(x2 / 美-01, degree, x3 / 很)
(x2 / 美-01, time, x4 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,223 microseconds
Sentence: 不然 还 有 谁 来 看 我 呢 ？

Oracle Span 1:  我 => 我
Oracle Span 2:  来 => 来-05
Oracle Span 3:  看 => 看-02
Spans:
Span 6-7:  我 => 我
Span 4-5:  来 => 来-05
Span 5-6:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  我 => 我
Oracle Span 4-5:  来 => 来-05
Oracle Span 5-6:  看 => 看-02

Dependencies:
1	不然	_	NN	NN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	谁	_	PN	PN	_	6	nsubj	_	_
5	来	_	MSP	MSP	_	6	prtmod	_	_
6	看	_	VV	VV	_	3	dep	_	_
7	我	_	PN	PN	_	6	dobj	_	_
8	呢	_	SP	SP	_	6	dep	_	_
9	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 来-05, purpose, x15 / 看-02)
(x15 / 看-02, arg1, x16 / 我)

Input(Some(Graph((来-05 :mode interrogative :purpose (看-02 :arg0 x14 :arg1 我) :arg0 amr-unknown),ArrayBuffer(Span(4,5,List(0),来,来-05,false), Span(5,6,List(1),看,看-02,false), Span(6,7,List(2),我,我,false)),Map(2 -> 我, 1 -> 看-02, 0 -> 来-05),Map(x16 -> 我, x12 -> 来-05, x15 -> 看-02))),[Ljava.lang.String;@517d4a0d,Annotation([Ljava.lang.String;@7862f56,[Ljava.lang.String;@3a12c404,[Ljava.lang.String;@1941a8ff),Annotation([Ljava.lang.String;@22d7b4f8,[Ljava.lang.String;@149dd36b,[Ledu.cmu.lti.nlp.amr.Dependency;@38831718),Annotation([Ljava.lang.String;@2c1156a7,[Ljava.lang.String;@33fe57a9,[Ljava.lang.String;@4982cc36),Annotation([Ljava.lang.String;@691939c9,[Ljava.lang.String;@4f1bfe23,[Ledu.cmu.lti.nlp.amr.Entity;@e19bb76))
AMR:
(x12 / 来-05, purpose, x15 / 看-02)
(x15 / 看-02, prep-following, x16 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 5,134 microseconds
Sentence: 你 就 要 到 远处 去 了 。 至于 说 大 动物 ， 我 并 不 怕 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  到 => 到-01
Oracle Span 3:  动物 => 动物
Oracle Span 4:  大 => 大-01
Oracle Span 5:  就 => 就
Oracle Span 6:  怕 => 怕-01
Oracle Span 7:  我 => 我
Oracle Span 8:  要 => 要-03
Oracle Span 9:  远处 => 远处
Spans:
Span 0-1:  你 => 你
Span 3-4:  到 => 到-01
Span 11-12:  动物 => 动物
Span 10-11:  大 => 大-01
Span 1-2:  就 => 就
Span 16-17:  怕 => 怕-01
Span 13-14:  我 => 我
Span 2-3:  要 => 要-03
Span 4-5:  远处 => 远处

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  到 => 到-01
Oracle Span 11-12:  动物 => 动物
Oracle Span 10-11:  大 => 大-01
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  怕 => 怕-01
Oracle Span 13-14:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 4-5:  远处 => 远处

Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	就	_	AD	AD	_	6	advmod	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	到	_	P	P	_	6	prep	_	_
5	远处	_	NN	NN	_	4	pobj	_	_
6	去	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_
9	至于	_	P	P	_	17	prep	_	_
10	说	_	VV	VV	_	12	vmod	_	_
11	大	_	JJ	JJ	_	12	amod	_	_
12	动物	_	NN	NN	_	9	pobj	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	我	_	PN	PN	_	17	nsubj	_	_
15	并	_	AD	AD	_	17	advmod	_	_
16	不	_	AD	AD	_	17	neg	_	_
17	怕	_	VV	VV	_	6	conj	_	_
18	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x10 / 动物, mod, x11 / 大-01)
(x2 / 要-03, arg0, x3 / 到-01)
(x2 / 要-03, manner, x6 / 就)
(x3 / 到-01, arg0, x4 / 你)
(x3 / 到-01, arg1, x5 / 远处)
(x7 / 怕-01, arg0, x8 / 我)
(x7 / 怕-01, arg1, x10 / 动物)

Input(Some(Graph((multi-sentence :snt1 (要-03 :manner 就 :arg0 (到-01 :arg1 远处 :arg0 你)) :snt2 (怕-01 :arg1 (动物 :mod 大-01) :polarity - :arg0 我)),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(1,2,List(1),就,就,false), Span(3,4,List(2),到,到-01,false), Span(4,5,List(3),远处,远处,false), Span(0,1,List(4),你,你,false), Span(16,17,List(5),怕,怕-01,false), Span(11,12,List(6),动物,动物,false), Span(10,11,List(7),大,大-01,false), Span(13,14,List(8),我,我,false)),Map(2 -> 到-01, 5 -> 怕-01, 8 -> 我, 7 -> 大-01, 1 -> 就, 4 -> 你, 6 -> 动物, 0 -> 要-03, 3 -> 远处),Map(x10 -> 动物, x2 -> 要-03, x5 -> 远处, x8 -> 我, x7 -> 怕-01, x4 -> 你, x11 -> 大-01, x3 -> 到-01, x6 -> 就))),[Ljava.lang.String;@512535ff,Annotation([Ljava.lang.String;@71529963,[Ljava.lang.String;@61a88b8c,[Ljava.lang.String;@22295ec4),Annotation([Ljava.lang.String;@5adb0db3,[Ljava.lang.String;@3f270e0a,[Ledu.cmu.lti.nlp.amr.Dependency;@1a760689),Annotation([Ljava.lang.String;@7241a47d,[Ljava.lang.String;@70f59913,[Ljava.lang.String;@77258e59),Annotation([Ljava.lang.String;@5dcd8c7a,[Ljava.lang.String;@2250b9f2,[Ledu.cmu.lti.nlp.amr.Entity;@7e3181aa))
AMR:
(x10 / 动物, mod, x11 / 大-01)
(x2 / 要-03, ARG2, x3 / 到-01)
(x2 / 要-03, manner, x6 / 就)
(x3 / 到-01, ARG0, x5 / 远处)
(x3 / 到-01, ARG6, x4 / 你)
(x3 / 到-01, time, x11 / 大-01)
(x7 / 怕-01, op, x8 / 我)
(x7 / 怕-01, unit, x10 / 动物)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 33,723 microseconds
Sentence: 我 有 爪子 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  有 => 有-01
Oracle Span 3:  爪子 => 爪子
Spans:
Span 0-1:  我 => 我
Span 1-2:  有 => 有-01
Span 2-3:  爪子 => 爪子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有 => 有-01
Oracle Span 2-3:  爪子 => 爪子

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	爪子	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 有-01, arg0, x7 / 我)
(x6 / 有-01, arg1, x8 / 爪子)

Input(Some(Graph((say :arg1 (有-01 :arg1 爪子 :arg0 我)),ArrayBuffer(Span(1,2,List(0),有,有-01,false), Span(2,3,List(1),爪子,爪子,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 爪子, 0 -> 有-01),Map(x8 -> 爪子, x7 -> 我, x6 -> 有-01))),[Ljava.lang.String;@253d9f73,Annotation([Ljava.lang.String;@142269f2,[Ljava.lang.String;@331acdad,[Ljava.lang.String;@41d426b5),Annotation([Ljava.lang.String;@8dbfffb,[Ljava.lang.String;@f316aeb,[Ledu.cmu.lti.nlp.amr.Dependency;@6aa3a905),Annotation([Ljava.lang.String;@a22cb6a,[Ljava.lang.String;@5dd1c9f2,[Ljava.lang.String;@59b38691),Annotation([Ljava.lang.String;@2e2ff723,[Ljava.lang.String;@324a0017,[Ledu.cmu.lti.nlp.amr.Entity;@6187d1f5))
AMR:
(x6 / 有-01, decade, x7 / 我)
(x6 / 有-01, part, x8 / 爪子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,224 microseconds
Sentence: 于是 ， 她 天真 地 显露 出 她 那 四 根 刺 ，

Oracle Span 1:  刺 => 刺
Oracle Span 2:  天真 => 天真-01
Oracle Span 3:  她 => 她
Oracle Span 4:  显露 => 显露-01
Oracle Span 5:  那 => 那
Spans:
Span 11-12:  刺 => 刺
Span 3-4:  天真 => 天真-01
Span 2-3:  她 => 她
Span 5-6:  显露 => 显露-01
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  刺 => 刺
Oracle Span 3-4:  天真 => 天真-01
Oracle Span 2-3:  她 => 她
Oracle Span 5-6:  显露 => 显露-01
Oracle Span 8-9:  那 => 那

Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	她	_	PN	PN	_	6	nsubj	_	_
4	天真	_	VA	VA	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	显露	_	VV	VV	_	0	root	_	_
7	出	_	VV	VV	_	6	comod	_	_
8	她	_	PN	PN	_	12	nsubj	_	_
9	那	_	DT	DT	_	12	dep	_	_
10	四	_	CD	CD	_	11	nummod	_	_
11	根	_	M	M	_	9	dep	_	_
12	刺	_	VV	VV	_	6	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 显露-01, arg0, x3 / 她)
(x2 / 显露-01, arg1, x6 / 刺)
(x2 / 显露-01, manner, x4 / 天真-01)
(x6 / 刺, mod, x8 / 那)

Input(Some(Graph((temporal :arg2 (显露-01 :arg1 (刺 :poss x3 :mod 那 :quant 4) :manner (天真-01 :arg0 x3) :arg0 她)),ArrayBuffer(Span(5,6,List(0),显露,显露-01,false), Span(11,12,List(1),刺,刺,false), Span(8,9,List(2),那,那,false), Span(3,4,List(3),天真,天真-01,false), Span(2,3,List(4),她,她,false)),Map(2 -> 那, 1 -> 刺, 4 -> 她, 0 -> 显露-01, 3 -> 天真-01),Map(x2 -> 显露-01, x8 -> 那, x4 -> 天真-01, x3 -> 她, x6 -> 刺))),[Ljava.lang.String;@2445445a,Annotation([Ljava.lang.String;@7502291e,[Ljava.lang.String;@17aad511,[Ljava.lang.String;@487db668),Annotation([Ljava.lang.String;@46944ca9,[Ljava.lang.String;@22bac7bc,[Ledu.cmu.lti.nlp.amr.Dependency;@63798ca7),Annotation([Ljava.lang.String;@4612b856,[Ljava.lang.String;@22875539,[Ljava.lang.String;@5674e1f2),Annotation([Ljava.lang.String;@79c7532f,[Ljava.lang.String;@2a448449,[Ledu.cmu.lti.nlp.amr.Entity;@32f232a5))
AMR:
(x2 / 显露-01, domain, x6 / 刺)
(x2 / 显露-01, manner, x4 / 天真-01)
(x2 / 显露-01, op, x3 / 她)
(x6 / 刺, mod, x8 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,293 microseconds
Sentence: 随后 又 说道 ： “ 别 这么 磨蹭 了 。

Oracle Span 1:  又 => 又
Oracle Span 2:  磨蹭 => 磨蹭-01
Oracle Span 3:  说道 => 说道-01
Oracle Span 4:  这么 => 这么
Spans:
Span 1-2:  又 => 又
Span 7-8:  磨蹭 => 磨蹭-01
Span 2-3:  说道 => 说道-01
Span 6-7:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  又 => 又
Oracle Span 7-8:  磨蹭 => 磨蹭-01
Oracle Span 2-3:  说道 => 说道-01
Oracle Span 6-7:  这么 => 这么

Dependencies:
1	随后	_	AD	AD	_	3	advmod	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	说道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	8	punct	_	_
6	别	_	DT	DT	_	8	nsubj	_	_
7	这么	_	AD	AD	_	8	advmod	_	_
8	磨蹭	_	VV	VV	_	3	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 说道-01, arg1, x4 / 磨蹭-01)
(x2 / 说道-01, manner, x3 / 又)
(x4 / 磨蹭-01, degree, x6 / 这么)

Input(Some(Graph((temporal :arg2 (说道-01 :arg1 (磨蹭-01 :polarity - :degree 这么) :manner 又)),ArrayBuffer(Span(2,3,List(0),说道,说道-01,false), Span(7,8,List(1),磨蹭,磨蹭-01,false), Span(6,7,List(2),这么,这么,false), Span(1,2,List(3),又,又,false)),Map(2 -> 这么, 1 -> 磨蹭-01, 0 -> 说道-01, 3 -> 又),Map(x2 -> 说道-01, x4 -> 磨蹭-01, x3 -> 又, x6 -> 这么))),[Ljava.lang.String;@43f82e78,Annotation([Ljava.lang.String;@e54303,[Ljava.lang.String;@e8df99a,[Ljava.lang.String;@2dc995f4),Annotation([Ljava.lang.String;@2f40e5db,[Ljava.lang.String;@517566b,[Ledu.cmu.lti.nlp.amr.Dependency;@64b73e7a),Annotation([Ljava.lang.String;@530712d,[Ljava.lang.String;@2df6226d,[Ljava.lang.String;@12ed9db6),Annotation([Ljava.lang.String;@4ff4357f,[Ljava.lang.String;@49cb9cb5,[Ledu.cmu.lti.nlp.amr.Entity;@55322aab))
AMR:
(x2 / 说道-01, manner, x3 / 又)
(x2 / 说道-01, op, x4 / 磨蹭-01)
(x4 / 磨蹭-01, degree, x6 / 这么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,974 microseconds
Sentence: 真 烦人 ！ 你 既然 决定 离开 这儿 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  决定 => 决定-01
Oracle Span 3:  真 => 真
Oracle Span 4:  离开 => 离开-01
Oracle Span 5:  这儿 => 这儿
Spans:
Span 3-4:  你 => 你
Span 5-6:  决定 => 决定-01
Span 0-1:  真 => 真
Span 6-7:  离开 => 离开-01
Span 7-8:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 5-6:  决定 => 决定-01
Oracle Span 0-1:  真 => 真
Oracle Span 6-7:  离开 => 离开-01
Oracle Span 7-8:  这儿 => 这儿

Dependencies:
1	真	_	AD	AD	_	2	advmod	_	_
2	烦人	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	7	nsubj	_	_
5	既然	_	CS	CS	_	7	advmod	_	_
6	决定	_	NN	NN	_	7	dobj	_	_
7	离开	_	VV	VV	_	2	dep	_	_
8	这儿	_	PN	PN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 离开-01, arg1, x12 / 这儿)
(x8 / 决定-01, arg0, x9 / 你)
(x8 / 决定-01, arg1, x10 / 离开-01)

Input(Some(Graph((multi-sentence :snt1 (烦-01 :arg1 人 :degree 真 :mode expressive) :snt2 (condition :arg1 (决定-01 :arg1 (离开-01 :arg1 这儿 :arg0 x9) :arg0 你))),ArrayBuffer(Span(0,1,List(0),真,真,false), Span(5,6,List(1),决定,决定-01,false), Span(6,7,List(2),离开,离开-01,false), Span(7,8,List(3),这儿,这儿,false), Span(3,4,List(4),你,你,false)),Map(2 -> 离开-01, 1 -> 决定-01, 4 -> 你, 0 -> 真, 3 -> 这儿),Map(x10 -> 离开-01, x5 -> 真, x8 -> 决定-01, x12 -> 这儿, x9 -> 你))),[Ljava.lang.String;@2b4c1d96,Annotation([Ljava.lang.String;@45fd9a4d,[Ljava.lang.String;@50468873,[Ljava.lang.String;@146587a2),Annotation([Ljava.lang.String;@5f0e9815,[Ljava.lang.String;@76884e4b,[Ledu.cmu.lti.nlp.amr.Dependency;@126945f9),Annotation([Ljava.lang.String;@2a898881,[Ljava.lang.String;@16c63f5,[Ljava.lang.String;@35229f85),Annotation([Ljava.lang.String;@6d3c5255,[Ljava.lang.String;@b1712f3,[Ledu.cmu.lti.nlp.amr.Entity;@6986bbaf))
AMR:
(x10 / 离开-01, op, x12 / 这儿)
(x8 / 决定-01, ARG0, x10 / 离开-01)
(x8 / 决定-01, prep-on-behalf, x9 / 你)
(x8 / 决定-01, purpose, x5 / 真)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 10,116 microseconds
Sentence: 那么 ， 快 走 吧 ！ ”

Oracle Span 1:  快 => 快-01
Oracle Span 2:  走 => 走-01
Spans:
Span 2-3:  快 => 快-01
Span 3-4:  走 => 走-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  快 => 快-01
Oracle Span 3-4:  走 => 走-01

Dependencies:
1	那么	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	快	_	VA	VA	_	4	dep	_	_
4	走	_	VV	VV	_	0	root	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	！	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 走-01, manner, x14 / 快-01)

Input(Some(Graph((say :arg1 (condition :arg2 (走-01 :mode expressive :manner 快-01))),ArrayBuffer(Span(3,4,List(0),走,走-01,false), Span(2,3,List(1),快,快-01,false)),Map(1 -> 快-01, 0 -> 走-01),Map(x13 -> 走-01, x14 -> 快-01))),[Ljava.lang.String;@4879dfad,Annotation([Ljava.lang.String;@4758820d,[Ljava.lang.String;@74eb909f,[Ljava.lang.String;@28ec166e),Annotation([Ljava.lang.String;@2eee3069,[Ljava.lang.String;@2da59753,[Ledu.cmu.lti.nlp.amr.Dependency;@5629510),Annotation([Ljava.lang.String;@4df5bcb4,[Ljava.lang.String;@12c7a01b,[Ljava.lang.String;@13d9b21f),Annotation([Ljava.lang.String;@2826f61,[Ljava.lang.String;@62727399,[Ledu.cmu.lti.nlp.amr.Entity;@4d9ac0b4))
AMR:
(x13 / 走-01, manner, x14 / 快-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 3,728 microseconds
Sentence: 她 是 怕 小 王子 看见 她 在 哭 。

Oracle Span 1:  哭 => 哭-01
Oracle Span 2:  她 => 她
Oracle Span 3:  小 => 小-01
Oracle Span 4:  怕 => 怕-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  看见 => 看见-01
Spans:
Span 8-9:  哭 => 哭-01
Span 0-1:  她 => 她
Span 3-4:  小 => 小-01
Span 2-3:  怕 => 怕-01
Span 4-5:  王子 => 王子
Span 5-6:  看见 => 看见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  哭 => 哭-01
Oracle Span 0-1:  她 => 她
Oracle Span 3-4:  小 => 小-01
Oracle Span 2-3:  怕 => 怕-01
Oracle Span 4-5:  王子 => 王子
Oracle Span 5-6:  看见 => 看见-01

Dependencies:
1	她	_	PN	PN	_	3	top	_	_
2	是	_	VC	VC	_	3	cop	_	_
3	怕	_	VV	VV	_	0	root	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	3	dobj	_	_
6	看见	_	VV	VV	_	3	dep	_	_
7	她	_	PN	PN	_	6	dobj	_	_
8	在	_	P	P	_	6	prep	_	_
9	哭	_	NR	NR	_	8	pobj	_	_
10	。	_	PU	PU	_	3	punct	_	_
11	是	_	VC	VC	_	3	conj	_	_

Oracle:
(x0 / 怕-01, arg0, x2 / 她)
(x0 / 怕-01, arg1, x3 / 看见-01)
(x3 / 看见-01, arg0, x4 / 王子)
(x3 / 看见-01, arg1, x6 / 哭-01)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((怕-01 :arg1 (看见-01 :arg1 (哭-01 :arg0 x2) :arg0 (王子 :mod 小-01)) :arg0 她),ArrayBuffer(Span(2,3,List(0),怕,怕-01,false), Span(5,6,List(1),看见,看见-01,false), Span(8,9,List(2),哭,哭-01,false), Span(4,5,List(3),王子,王子,false), Span(3,4,List(4),小,小-01,false), Span(0,1,List(5),她,她,false)),Map(2 -> 哭-01, 5 -> 她, 1 -> 看见-01, 4 -> 小-01, 0 -> 怕-01, 3 -> 王子),Map(x2 -> 她, x5 -> 小-01, x4 -> 王子, x3 -> 看见-01, x6 -> 哭-01, x0 -> 怕-01))),[Ljava.lang.String;@130dca52,Annotation([Ljava.lang.String;@2654635,[Ljava.lang.String;@737a135b,[Ljava.lang.String;@687ef2e0),Annotation([Ljava.lang.String;@15dcfae7,[Ljava.lang.String;@3da05287,[Ledu.cmu.lti.nlp.amr.Dependency;@1e636ea3),Annotation([Ljava.lang.String;@115667d,[Ljava.lang.String;@736caf7a,[Ljava.lang.String;@4ce7fffa),Annotation([Ljava.lang.String;@497486b3,[Ljava.lang.String;@63f8276e,[Ledu.cmu.lti.nlp.amr.Entity;@75f95314))
AMR:
(x0 / 怕-01, degree, x2 / 她)
(x0 / 怕-01, mode, x3 / 看见-01)
(x3 / 看见-01, ARG4, x4 / 王子)
(x3 / 看见-01, mode, x6 / 哭-01)
(x4 / 王子, mod, x5 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,968 microseconds
Sentence: 她 是 一 朵 非常 骄傲 的 花 …

Oracle Span 1:  她 => 她
Oracle Span 2:  花 => 花
Oracle Span 3:  非常 => 非常-01
Oracle Span 4:  骄傲 => 骄傲
Spans:
Span 0-1:  她 => 她
Span 7-8:  花 => 花
Span 4-5:  非常 => 非常-01
Span 5-6:  骄傲 => 骄傲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  她 => 她
Oracle Span 7-8:  花 => 花
Oracle Span 4-5:  非常 => 非常-01
Oracle Span 5-6:  骄傲 => 骄傲

Dependencies:
1	她	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	9	clf	_	_
5	非常	_	AD	AD	_	6	advmod	_	_
6	骄傲	_	VV	VV	_	9	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	花	_	NN	NN	_	9	nn	_	_
9	…	_	NN	NN	_	2	attr	_	_

Oracle:
(x0 / 花, domain, x5 / 她)
(x0 / 花, mod, x3 / 骄傲)
(x3 / 骄傲, degree, x4 / 非常-01)

Input(Some(Graph((花 :domain 她 :mod (骄傲 :degree 非常-01) :quant 1),ArrayBuffer(Span(7,8,List(0),花,花,false), Span(0,1,List(1),她,她,false), Span(5,6,List(2),骄傲,骄傲,false), Span(4,5,List(3),非常,非常-01,false)),Map(2 -> 骄傲, 1 -> 她, 0 -> 花, 3 -> 非常-01),Map(x5 -> 她, x4 -> 非常-01, x3 -> 骄傲, x0 -> 花))),[Ljava.lang.String;@6127a7e,Annotation([Ljava.lang.String;@6bbe2511,[Ljava.lang.String;@495fac5f,[Ljava.lang.String;@76012793),Annotation([Ljava.lang.String;@635572a7,[Ljava.lang.String;@79d94571,[Ledu.cmu.lti.nlp.amr.Dependency;@4dd02341),Annotation([Ljava.lang.String;@3212a8d7,[Ljava.lang.String;@7a1a3478,[Ljava.lang.String;@495b0487),Annotation([Ljava.lang.String;@55dfcc6,[Ljava.lang.String;@222eb8aa,[Ledu.cmu.lti.nlp.amr.Entity;@93cf163))
AMR:
(x0 / 花, domain, x5 / 她)
(x0 / 花, mod, x3 / 骄傲)
(x3 / 骄傲, degree, x4 / 非常-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 7,490 microseconds
Sentence: X 。

Oracle Span 1:  X => X
Spans:
Span 0-1:  X => X

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  X => X

Dependencies:
1	X	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(X,ArrayBuffer(Span(0,1,List(0),X,X,false)),Map(0 -> X),Map(x0 -> X))),[Ljava.lang.String;@1852a3ff,Annotation([Ljava.lang.String;@7203c7ff,[Ljava.lang.String;@25bfcafd,[Ljava.lang.String;@4b6690c0),Annotation([Ljava.lang.String;@46268f08,[Ljava.lang.String;@2a76840c,[Ledu.cmu.lti.nlp.amr.Dependency;@71454b9d),Annotation([Ljava.lang.String;@eda25e5,[Ljava.lang.String;@7cf6a5f9,[Ljava.lang.String;@623e088f),Annotation([Ljava.lang.String;@39fcbef6,[Ljava.lang.String;@66565121,[Ledu.cmu.lti.nlp.amr.Entity;@2fc6f97f))
AMR:


Decoded in 2,835 microseconds
Sentence: 在 附近 的 宇宙 中 ， 还 有 325 、 326 、 327 、 328 、 329 、 330 等 几 颗 小 行星 。

Oracle Span 1:  325 => 325
Oracle Span 2:  326 => 326
Oracle Span 3:  327 => 327
Oracle Span 4:  328 => 328
Oracle Span 5:  329 => 329
Oracle Span 6:  330 => 330
Oracle Span 7:  几 => 几
Oracle Span 8:  宇宙 => 宇宙
Oracle Span 9:  小 => 小-01
Oracle Span 10:  有 => 有-03
Oracle Span 11:  行星 => 行星
Oracle Span 12:  还 => 还
Oracle Span 13:  附近 => 附近-01
Spans:
Span 8-9:  325 => 325
Span 10-11:  326 => 326
Span 12-13:  327 => 327
Span 14-15:  328 => 328
Span 16-17:  329 => 329
Span 18-19:  330 => 330
Span 20-21:  几 => 几
Span 3-4:  宇宙 => 宇宙
Span 22-23:  小 => 小-01
Span 7-8:  有 => 有-03
Span 23-24:  行星 => 行星
Span 6-7:  还 => 还
Span 1-2:  附近 => 附近-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  325 => 325
Oracle Span 10-11:  326 => 326
Oracle Span 12-13:  327 => 327
Oracle Span 14-15:  328 => 328
Oracle Span 16-17:  329 => 329
Oracle Span 18-19:  330 => 330
Oracle Span 20-21:  几 => 几
Oracle Span 3-4:  宇宙 => 宇宙
Oracle Span 22-23:  小 => 小-01
Oracle Span 7-8:  有 => 有-03
Oracle Span 23-24:  行星 => 行星
Oracle Span 6-7:  还 => 还
Oracle Span 1-2:  附近 => 附近-01

Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	附近	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	宇宙	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	1	plmod	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	有	_	VE	VE	_	0	root	_	_
9	325	_	CD	CD	_	17	nummod	_	_
10	、	_	PU	PU	_	17	punct	_	_
11	326	_	CD	CD	_	17	nummod	_	_
12	、	_	PU	PU	_	17	punct	_	_
13	327	_	CD	CD	_	17	nummod	_	_
14	、	_	PU	PU	_	17	punct	_	_
15	328	_	CD	CD	_	17	nummod	_	_
16	、	_	PU	PU	_	17	punct	_	_
17	329	_	CD	CD	_	8	dep	_	_
18	、	_	PU	PU	_	8	punct	_	_
19	330	_	CD	CD	_	20	nummod	_	_
20	等	_	M	M	_	24	clf	_	_
21	几	_	CD	CD	_	22	nummod	_	_
22	颗	_	M	M	_	24	clf	_	_
23	小	_	JJ	JJ	_	24	amod	_	_
24	行星	_	NN	NN	_	8	dep	_	_
25	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 有-03, arg0, x3 / 宇宙)
(x0 / 有-03, arg1, x5 / 行星)
(x0 / 有-03, manner, x2 / 还)
(x3 / 宇宙, mod, x4 / 附近-01)
(x5 / 行星, mod, x6 / 小-01)
(x5 / 行星, quant, x7 / 几)

Input(Some(Graph((有-03 :arg1 (行星 :name (and :op 325 :op 326 :op 327 :op 328 :op 329 :op 330) :quant 几 :mod 小-01) :arg0 (宇宙 :mod 附近-01) :manner 还),ArrayBuffer(Span(7,8,List(0),有,有-03,false), Span(23,24,List(1),行星,行星,false), Span(8,9,List(2),325,325,false), Span(10,11,List(3),326,326,false), Span(12,13,List(4),327,327,false), Span(14,15,List(5),328,328,false), Span(16,17,List(6),329,329,false), Span(18,19,List(7),330,330,false), Span(20,21,List(8),几,几,false), Span(22,23,List(9),小,小-01,false), Span(3,4,List(10),宇宙,宇宙,false), Span(1,2,List(11),附近,附近-01,false), Span(6,7,List(12),还,还,false)),Map(2 -> 325, 5 -> 328, 12 -> 还, 8 -> 几, 7 -> 330, 1 -> 行星, 4 -> 327, 11 -> 附近-01, 6 -> 329, 9 -> 小-01, 0 -> 有-03, 10 -> 宇宙, 3 -> 326),Map(x10 -> 326, x2 -> 还, x5 -> 行星, x13 -> 329, x12 -> 328, x7 -> 几, x4 -> 附近-01, x3 -> 宇宙, x11 -> 327, x6 -> 小-01, x14 -> 330, x9 -> 325, x0 -> 有-03))),[Ljava.lang.String;@3d2ee678,Annotation([Ljava.lang.String;@6179e425,[Ljava.lang.String;@35f26e72,[Ljava.lang.String;@2d6764b2),Annotation([Ljava.lang.String;@67304a40,[Ljava.lang.String;@49c6c24f,[Ledu.cmu.lti.nlp.amr.Dependency;@6fe1b4fb),Annotation([Ljava.lang.String;@79351f41,[Ljava.lang.String;@1c32386d,[Ljava.lang.String;@6399551e),Annotation([Ljava.lang.String;@13d73fa,[Ljava.lang.String;@5023bb8b,[Ledu.cmu.lti.nlp.amr.Entity;@5d5f10b2))
AMR:
(x0 / 有-03, ARG6, x3 / 宇宙)
(x0 / 有-03, age, x9 / 325)
(x0 / 有-03, manner, x2 / 还)
(x10 / 326, mod, x9 / 325)
(x11 / 327, mod, x10 / 326)
(x12 / 328, mod, x11 / 327)
(x13 / 329, mod, x12 / 328)
(x14 / 330, mod, x13 / 329)
(x3 / 宇宙, mod, x4 / 附近-01)
(x5 / 行星, mod, x6 / 小-01)
(x5 / 行星, quant, x7 / 几)
(x7 / 几, mod, x14 / 330)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.2.2
WARNING: makeIds can't find span Id: 0.2.2.3
WARNING: makeIds can't find span Id: 0.2.2.4
WARNING: makeIds can't find span Id: 0.2.2.5
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 54,383 microseconds
Sentence: 他 就 开始 访问 这 几 颗 星球 ， 想 在 那里 找 点 事 干 ， 并且 学习 学习 。

Oracle Span 1:  事 => 事
Oracle Span 2:  他 => 他
Oracle Span 3:  几 => 几
Oracle Span 4:  学习 => 学习-01
Oracle Span 5:  就 => 就
Oracle Span 6:  干 => 干-01
Oracle Span 7:  开始 => 开始-01
Oracle Span 8:  想 => 想-02
Oracle Span 9:  找 => 找-01
Oracle Span 10:  星球 => 星球
Oracle Span 11:  访问 => 访问-01
Oracle Span 12:  这 => 这
Oracle Span 13:  那里 => 那里
Spans:
Span 14-15:  事 => 事
Span 0-1:  他 => 他
Span 5-6:  几 => 几
Span 18-19:  学习 => 学习-01
Span 1-2:  就 => 就
Span 15-16:  干 => 干-01
Span 2-3:  开始 => 开始-01
Span 9-10:  想 => 想-02
Span 12-13:  找 => 找-01
Span 7-8:  星球 => 星球
Span 3-4:  访问 => 访问-01
Span 4-5:  这 => 这
Span 11-12:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  事 => 事
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  几 => 几
Oracle Span 18-19:  学习 => 学习-01
Oracle Span 1-2:  就 => 就
Oracle Span 15-16:  干 => 干-01
Oracle Span 2-3:  开始 => 开始-01
Oracle Span 9-10:  想 => 想-02
Oracle Span 12-13:  找 => 找-01
Oracle Span 7-8:  星球 => 星球
Oracle Span 3-4:  访问 => 访问-01
Oracle Span 4-5:  这 => 这
Oracle Span 11-12:  那里 => 那里

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	开始	_	VV	VV	_	4	mmod	_	_
4	访问	_	VV	VV	_	0	root	_	_
5	这	_	DT	DT	_	8	det	_	_
6	几	_	CD	CD	_	7	nummod	_	_
7	颗	_	M	M	_	5	dep	_	_
8	星球	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	想	_	VV	VV	_	4	conj	_	_
11	在	_	P	P	_	13	prep	_	_
12	那里	_	PN	PN	_	11	pobj	_	_
13	找	_	VV	VV	_	10	ccomp	_	_
14	点	_	M	M	_	15	dep	_	_
15	事	_	NN	NN	_	13	dobj	_	_
16	干	_	VV	VV	_	10	dep	_	_
17	,	_	PU	PU	_	4	punct	_	_
18	并且	_	CC	CC	_	4	cc	_	_
19	学习	_	VV	VV	_	4	dep	_	_
20	学习	_	NN	NN	_	19	dobj	_	_
21	。	_	PU	PU	_	4	punct	_	_
22	他	_	PN	PN	_	13	xsubj	_	_

Oracle:
(x0 / 开始-01, arg0, x2 / 他)
(x0 / 开始-01, arg1, x4 / 访问-01)
(x0 / 开始-01, manner, x3 / 就)
(x18 / 想-02, arg1, x20 / 找-01)
(x20 / 找-01, arg1, x22 / 事)
(x20 / 找-01, arg2, x23 / 干-01)
(x20 / 找-01, location, x24 / 那里)
(x4 / 访问-01, arg1, x6 / 星球)
(x6 / 星球, mod, x8 / 这)
(x6 / 星球, quant, x7 / 几)

Input(Some(Graph((开始-01 :arg1 (访问-01 :purpose (and :op (想-02 :arg1 (找-01 :location 那里 :arg2 (干-01 :arg0 x2) :arg1 事 :arg0 x2) :arg0 x2) :op (学习-01 :arg0 x2)) :arg1 (星球 :mod 这 :quant 几) :arg0 x2) :manner 就 :arg0 他),ArrayBuffer(Span(2,3,List(0),开始,开始-01,false), Span(3,4,List(1),访问,访问-01,false), Span(9,10,List(2),想,想-02,false), Span(12,13,List(3),找,找-01,false), Span(11,12,List(4),那里,那里,false), Span(15,16,List(5),干,干-01,false), Span(14,15,List(6),事,事,false), Span(18,19,List(7),学习,学习-01,false), Span(7,8,List(8),星球,星球,false), Span(4,5,List(9),这,这,false), Span(5,6,List(10),几,几,false), Span(1,2,List(11),就,就,false), Span(0,1,List(12),他,他,false)),Map(2 -> 想-02, 5 -> 干-01, 12 -> 他, 8 -> 星球, 7 -> 学习-01, 1 -> 访问-01, 4 -> 那里, 11 -> 就, 6 -> 事, 9 -> 这, 0 -> 开始-01, 10 -> 几, 3 -> 找-01),Map(x22 -> 事, x25 -> 学习-01, x2 -> 他, x8 -> 这, x7 -> 几, x24 -> 那里, x18 -> 想-02, x4 -> 访问-01, x23 -> 干-01, x3 -> 就, x6 -> 星球, x20 -> 找-01, x0 -> 开始-01))),[Ljava.lang.String;@74c79fa2,Annotation([Ljava.lang.String;@1e0f9063,[Ljava.lang.String;@53bd8fca,[Ljava.lang.String;@7642df8f),Annotation([Ljava.lang.String;@3e30646a,[Ljava.lang.String;@5cde6747,[Ledu.cmu.lti.nlp.amr.Dependency;@63a270c9),Annotation([Ljava.lang.String;@37c7595,[Ljava.lang.String;@3ed242a4,[Ljava.lang.String;@1199fe66),Annotation([Ljava.lang.String;@614df0a4,[Ljava.lang.String;@1fdf1c5,[Ledu.cmu.lti.nlp.amr.Entity;@2d96543c))
AMR:
(x0 / 开始-01, manner, x3 / 就)
(x0 / 开始-01, manner, x4 / 访问-01)
(x0 / 开始-01, time, x2 / 他)
(x18 / 想-02, time, x6 / 星球)
(x20 / 找-01, location, x24 / 那里)
(x20 / 找-01, prep-following, x22 / 事)
(x20 / 找-01, time, x18 / 想-02)
(x22 / 事, topic, x23 / 干-01)
(x23 / 干-01, location, x25 / 学习-01)
(x4 / 访问-01, ARG3, x8 / 这)
(x4 / 访问-01, topic, x7 / 几)
(x6 / 星球, quant, x7 / 几)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.2.0.1
WARNING: makeIds can't find span Id: 0.2.2.0.1.3
WARNING: makeIds can't find span Id: 0.2.2.0.1.2
WARNING: makeIds can't find span Id: 0.2.2.0.1.1
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 49,706 microseconds
Sentence: 第一 颗 星球 上 住 着 一 个 国王 。

Oracle Span 1:  住 => 住-01
Oracle Span 2:  国王 => 国王
Oracle Span 3:  星球 => 星球
Spans:
Span 4-5:  住 => 住-01
Span 8-9:  国王 => 国王
Span 2-3:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  住 => 住-01
Oracle Span 8-9:  国王 => 国王
Oracle Span 2-3:  星球 => 星球

Dependencies:
1	第一	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	星球	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	5	loc	_	_
5	住	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	国王	_	NN	NN	_	5	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 住-01, arg0, x2 / 国王)
(x0 / 住-01, arg1, x5 / 星球)

Input(Some(Graph((住-01 :arg1 (星球 :ord 1) :arg0 (国王 :quant 1)),ArrayBuffer(Span(4,5,List(0),住,住-01,false), Span(2,3,List(1),星球,星球,false), Span(8,9,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 星球, 0 -> 住-01),Map(x2 -> 国王, x5 -> 星球, x0 -> 住-01))),[Ljava.lang.String;@73a2e526,Annotation([Ljava.lang.String;@7d64e326,[Ljava.lang.String;@13f95696,[Ljava.lang.String;@cd1d761),Annotation([Ljava.lang.String;@68be8808,[Ljava.lang.String;@32193bea,[Ledu.cmu.lti.nlp.amr.Dependency;@6b8d96d9),Annotation([Ljava.lang.String;@69653e16,[Ljava.lang.String;@758705fa,[Ljava.lang.String;@ebaa6cb),Annotation([Ljava.lang.String;@906d29b,[Ljava.lang.String;@49d3c823,[Ledu.cmu.lti.nlp.amr.Entity;@436bc36))
AMR:
(x0 / 住-01, op, x5 / 星球)
(x0 / 住-01, prep-for, x2 / 国王)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,557 microseconds
Sentence: 国王 穿 着 用 紫红色 和 白 底 黑 花 的 毛皮 做成 的 大 礼服 ， 坐 在 一 个 很 简单 却 又 十分 威严 的 宝座 上 。

Oracle Span 1:  做成 => 做成-02
Oracle Span 2:  十分 => 十分
Oracle Span 3:  国王 => 国王
Oracle Span 4:  坐 => 坐-01
Oracle Span 5:  大 => 大-01
Oracle Span 6:  威严 => 威严-01
Oracle Span 7:  宝座 => 宝座
Oracle Span 8:  很 => 很
Oracle Span 9:  毛皮 => 毛皮
Oracle Span 10:  礼服 => 礼服
Oracle Span 11:  穿 => 穿-01
Oracle Span 12:  简单 => 简单-01
Oracle Span 13:  紫红色 => 紫红色
Spans:
Span 12-13:  做成 => 做成-02
Span 25-26:  十分 => 十分
Span 0-1:  国王 => 国王
Span 17-18:  坐 => 坐-01
Span 14-15:  大 => 大-01
Span 26-27:  威严 => 威严-01
Span 28-29:  宝座 => 宝座
Span 21-22:  很 => 很
Span 11-12:  毛皮 => 毛皮
Span 15-16:  礼服 => 礼服
Span 1-2:  穿 => 穿-01
Span 22-23:  简单 => 简单-01
Span 4-5:  紫红色 => 紫红色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  做成 => 做成-02
Oracle Span 25-26:  十分 => 十分
Oracle Span 0-1:  国王 => 国王
Oracle Span 17-18:  坐 => 坐-01
Oracle Span 14-15:  大 => 大-01
Oracle Span 26-27:  威严 => 威严-01
Oracle Span 28-29:  宝座 => 宝座
Oracle Span 21-22:  很 => 很
Oracle Span 11-12:  毛皮 => 毛皮
Oracle Span 15-16:  礼服 => 礼服
Oracle Span 1-2:  穿 => 穿-01
Oracle Span 22-23:  简单 => 简单-01
Oracle Span 4-5:  紫红色 => 紫红色

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	穿	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	用	_	P	P	_	16	assmod	_	_
5	紫红色	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	白	_	NR	NR	_	8	lobj	_	_
8	底	_	LC	LC	_	10	dep	_	_
9	黑	_	JJ	JJ	_	10	amod	_	_
10	花	_	NN	NN	_	13	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	毛皮	_	NN	NN	_	13	nn	_	_
13	做成	_	NN	NN	_	4	pobj	_	_
14	的	_	DEG	DEG	_	4	assm	_	_
15	大	_	JJ	JJ	_	16	amod	_	_
16	礼服	_	NN	NN	_	2	dobj	_	_
17	,	_	PU	PU	_	2	punct	_	_
18	坐	_	VV	VV	_	2	conj	_	_
19	在	_	P	P	_	18	prep	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	个	_	M	M	_	29	clf	_	_
22	很	_	AD	AD	_	23	advmod	_	_
23	简单	_	VA	VA	_	29	rcmod	_	_
24	却	_	AD	AD	_	27	advmod	_	_
25	又	_	AD	AD	_	27	advmod	_	_
26	十分	_	AD	AD	_	27	advmod	_	_
27	威严	_	VA	VA	_	23	dep	_	_
28	的	_	DEC	DEC	_	23	cpm	_	_
29	宝座	_	NN	NN	_	30	lobj	_	_
30	上	_	LC	LC	_	19	plmod	_	_
31	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 毛皮, mod, x13 / 紫红色)
(x14 / 坐-01, arg1, x16 / 宝座)
(x16 / 宝座, mod, x17 / 简单-01)
(x16 / 宝座, mod, x19 / 威严-01)
(x17 / 简单-01, degree, x18 / 很)
(x19 / 威严-01, degree, x20 / 十分)
(x2 / 穿-01, arg0, x3 / 国王)
(x2 / 穿-01, arg1, x4 / 礼服)
(x4 / 礼服, mod, x5 / 大-01)
(x8 / 做成-02, arg1, x10 / 毛皮)
(x8 / 做成-02, arg2, x4 / 礼服)

Input(Some(Graph((and :op (穿-01 :arg1 (礼服 :arg2-of (做成-02 :arg1 (毛皮 :mod (and :op 白底 :op 黑花) :mod 紫红色)) :mod 大-01) :arg0 国王) :op (坐-01 :arg1 (宝座 :quant 1 :mod (威严-01 :degree 十分) :mod (简单-01 :degree 很)) :arg0 x3)),ArrayBuffer(Span(1,2,List(0),穿,穿-01,false), Span(15,16,List(1),礼服,礼服,false), Span(12,13,List(2),做成,做成-02,false), Span(11,12,List(3),毛皮,毛皮,false), Span(4,5,List(4),紫红色,紫红色,false), Span(14,15,List(5),大,大-01,false), Span(0,1,List(6),国王,国王,false), Span(17,18,List(7),坐,坐-01,false), Span(28,29,List(8),宝座,宝座,false), Span(26,27,List(9),威严,威严-01,false), Span(25,26,List(10),十分,十分,false), Span(22,23,List(11),简单,简单-01,false), Span(21,22,List(12),很,很,false)),Map(2 -> 做成-02, 5 -> 大-01, 12 -> 很, 8 -> 宝座, 7 -> 坐-01, 1 -> 礼服, 4 -> 紫红色, 11 -> 简单-01, 6 -> 国王, 9 -> 威严-01, 0 -> 穿-01, 10 -> 十分, 3 -> 毛皮),Map(x16 -> 宝座, x10 -> 毛皮, x19 -> 威严-01, x2 -> 穿-01, x5 -> 大-01, x13 -> 紫红色, x8 -> 做成-02, x18 -> 很, x4 -> 礼服, x3 -> 国王, x20 -> 十分, x14 -> 坐-01, x17 -> 简单-01))),[Ljava.lang.String;@5fe1ce85,Annotation([Ljava.lang.String;@604c5de8,[Ljava.lang.String;@37091312,[Ljava.lang.String;@66fdec9),Annotation([Ljava.lang.String;@57abad67,[Ljava.lang.String;@550a1967,[Ledu.cmu.lti.nlp.amr.Dependency;@2a640157),Annotation([Ljava.lang.String;@52851b44,[Ljava.lang.String;@584f54e6,[Ljava.lang.String;@5d8bafa9),Annotation([Ljava.lang.String;@576f63f6,[Ljava.lang.String;@2dca0d64,[Ledu.cmu.lti.nlp.amr.Entity;@f80945f))
AMR:
(x10 / 毛皮, mod, x13 / 紫红色)
(x14 / 坐-01, degree, x16 / 宝座)
(x16 / 宝座, mod, x17 / 简单-01)
(x16 / 宝座, mod, x19 / 威严-01)
(x17 / 简单-01, degree, x18 / 很)
(x19 / 威严-01, degree, x20 / 十分)
(x2 / 穿-01, manner, x3 / 国王)
(x2 / 穿-01, part, x4 / 礼服)
(x4 / 礼服, mod, x5 / 大-01)
(x8 / 做成-02, ARG0, x4 / 礼服)
(x8 / 做成-02, snt1, x10 / 毛皮)
(x8 / 做成-02, time, x14 / 坐-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
Decoded in 66,611 microseconds
Sentence: “ 啊 ，

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 啊),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x4 -> 啊))),[Ljava.lang.String;@ff684e1,Annotation([Ljava.lang.String;@23aa363a,[Ljava.lang.String;@5ef6ae06,[Ljava.lang.String;@55dfebeb),Annotation([Ljava.lang.String;@6e35bc3d,[Ljava.lang.String;@1cdc4c27,[Ledu.cmu.lti.nlp.amr.Dependency;@77b14724),Annotation([Ljava.lang.String;@5d9b7a8a,[Ljava.lang.String;@1e8ce150,[Ljava.lang.String;@604f2bd2),Annotation([Ljava.lang.String;@1d3ac898,[Ljava.lang.String;@1b73be9f,[Ledu.cmu.lti.nlp.amr.Entity;@628c4ac0))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,787 microseconds
Sentence: 来 了 一 个 臣民 。 ” 当 他 看见 小 王子 时 ， 喊 了 起来 ：

Oracle Span 1:  他 => 他
Oracle Span 2:  喊 => 喊-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  来 => 来-06
Oracle Span 5:  王子 => 王子
Oracle Span 6:  看见 => 看见-01
Oracle Span 7:  臣民 => 臣民
Spans:
Span 8-9:  他 => 他
Span 14-15:  喊 => 喊-01
Span 10-11:  小 => 小-01
Span 0-1:  来 => 来-06
Span 11-12:  王子 => 王子
Span 9-10:  看见 => 看见-01
Span 4-5:  臣民 => 臣民

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  他 => 他
Oracle Span 14-15:  喊 => 喊-01
Oracle Span 10-11:  小 => 小-01
Oracle Span 0-1:  来 => 来-06
Oracle Span 11-12:  王子 => 王子
Oracle Span 9-10:  看见 => 看见-01
Oracle Span 4-5:  臣民 => 臣民

Dependencies:
1	来	_	VV	VV	_	15	nsubj	_	_
2	了	_	VV	VV	_	5	nsubj	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	nsubj	_	_
5	臣民	_	VV	VV	_	1	dobj	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	1	punct	_	_
8	当	_	P	P	_	15	prep	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	看见	_	VV	VV	_	13	lccomp	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	10	dobj	_	_
13	时	_	LC	LC	_	8	plmod	_	_
14	,	_	PU	PU	_	15	punct	_	_
15	喊	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	起来	_	VV	VV	_	15	conj	_	_
18	：	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 喊-01, arg0, x2 / 他)
(x0 / 喊-01, arg1, x3 / 来-06)
(x0 / 喊-01, time, x6 / 看见-01)
(x3 / 来-06, arg0, x4 / 臣民)
(x6 / 看见-01, arg1, x8 / 王子)
(x8 / 王子, mod, x9 / 小-01)

Input(Some(Graph((喊-01 :time (看见-01 :arg1 (王子 :mod 小-01) :arg0 x2) :arg1 (来-06 :arg0 (臣民 :quant 1)) :arg0 他),ArrayBuffer(Span(14,15,List(0),喊,喊-01,false), Span(9,10,List(1),看见,看见-01,false), Span(11,12,List(2),王子,王子,false), Span(10,11,List(3),小,小-01,false), Span(0,1,List(4),来,来-06,false), Span(4,5,List(5),臣民,臣民,false), Span(8,9,List(6),他,他,false)),Map(2 -> 王子, 5 -> 臣民, 1 -> 看见-01, 4 -> 来-06, 6 -> 他, 0 -> 喊-01, 3 -> 小-01),Map(x2 -> 他, x8 -> 王子, x4 -> 臣民, x3 -> 来-06, x6 -> 看见-01, x9 -> 小-01, x0 -> 喊-01))),[Ljava.lang.String;@7b84fcf8,Annotation([Ljava.lang.String;@30b19518,[Ljava.lang.String;@363042d7,[Ljava.lang.String;@366ac49b),Annotation([Ljava.lang.String;@6ad59d92,[Ljava.lang.String;@56f0cc85,[Ledu.cmu.lti.nlp.amr.Dependency;@62e20a76),Annotation([Ljava.lang.String;@2cc44ad,[Ljava.lang.String;@44b3606b,[Ljava.lang.String;@1477089c),Annotation([Ljava.lang.String;@663411de,[Ljava.lang.String;@63dd899,[Ledu.cmu.lti.nlp.amr.Entity;@59d2400d))
AMR:
(x0 / 喊-01, time, x6 / 看见-01)
(x0 / 喊-01, time, x8 / 王子)
(x3 / 来-06, prep-through, x4 / 臣民)
(x6 / 看见-01, location, x4 / 臣民)
(x6 / 看见-01, time, x2 / 他)
(x8 / 王子, mod, x9 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 17,821 microseconds
Sentence: 小 王子 思量 着 ： “ 他 从来 也 没有 见 过 我 ， 怎么 会 认识 我 呢 ？ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  从来 => 从来
Oracle Span 3:  他 => 他
Oracle Span 4:  会 => 会-02
Oracle Span 5:  小 => 小-01
Oracle Span 6:  思量 => 思量
Oracle Span 7:  王子 => 王子
Oracle Span 8:  见 => 见-01
Oracle Span 9:  认识 => 认识-01
Spans:
Span 8-9:  也 => 也
Span 7-8:  从来 => 从来
Span 6-7:  他 => 他
Span 15-16:  会 => 会-02
Span 0-1:  小 => 小-01
Span 2-3:  思量 => 思量
Span 1-2:  王子 => 王子
Span 10-11:  见 => 见-01
Span 16-17:  认识 => 认识-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 7-8:  从来 => 从来
Oracle Span 6-7:  他 => 他
Oracle Span 15-16:  会 => 会-02
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  思量 => 思量
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  见 => 见-01
Oracle Span 16-17:  认识 => 认识-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	思量	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	：	_	PU	PU	_	3	punct	_	_
6	“	_	PU	PU	_	11	punct	_	_
7	他	_	PN	PN	_	11	nsubj	_	_
8	从来	_	AD	AD	_	11	advmod	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	没有	_	VV	VV	_	11	neg	_	_
11	见	_	VV	VV	_	3	dep	_	_
12	过	_	AS	AS	_	11	asp	_	_
13	我	_	PN	PN	_	11	dobj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	怎么	_	AD	AD	_	17	advmod	_	_
16	会	_	VV	VV	_	17	mmod	_	_
17	认识	_	VV	VV	_	3	conj	_	_
18	我	_	PN	PN	_	17	dobj	_	_
19	呢	_	SP	SP	_	3	dep	_	_
20	？	_	PU	PU	_	3	punct	_	_
21	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 思量, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x25 / 见-01, arg0, x27 / 他)
(x25 / 见-01, manner, x29 / 也)
(x25 / 见-01, manner, x30 / 从来)
(x32 / 会-02, arg0, x33 / 认识-01)

Input(Some(Graph((思量 :arg1 (causation :arg1 (见-01 :manner 从来 :manner 也 :arg1 x2 :arg0 他 :polarity -) :arg2 (会-02 :mode interrogative :arg1-of (cause-01 :arg0 amr-unknown) :arg0 (认识-01 :arg1 x2 :arg0 x27))) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),思量,思量,false), Span(10,11,List(1),见,见-01,false), Span(7,8,List(2),从来,从来,false), Span(8,9,List(3),也,也,false), Span(6,7,List(4),他,他,false), Span(15,16,List(5),会,会-02,false), Span(16,17,List(6),认识,认识-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小-01,false)),Map(2 -> 从来, 5 -> 会-02, 8 -> 小-01, 7 -> 王子, 1 -> 见-01, 4 -> 他, 6 -> 认识-01, 0 -> 思量, 3 -> 也),Map(x25 -> 见-01, x2 -> 王子, x30 -> 从来, x33 -> 认识-01, x27 -> 他, x32 -> 会-02, x3 -> 小-01, x29 -> 也, x0 -> 思量))),[Ljava.lang.String;@75cd8043,Annotation([Ljava.lang.String;@33b1c5c5,[Ljava.lang.String;@5b202a3a,[Ljava.lang.String;@10b9db7b),Annotation([Ljava.lang.String;@9ef8eb7,[Ljava.lang.String;@34cdeda2,[Ledu.cmu.lti.nlp.amr.Dependency;@6ee660fb),Annotation([Ljava.lang.String;@305a0c5f,[Ljava.lang.String;@4535b6d5,[Ljava.lang.String;@1ecee32c),Annotation([Ljava.lang.String;@4372b9b6,[Ljava.lang.String;@232a7d73,[Ledu.cmu.lti.nlp.amr.Entity;@4b41e4dd))
AMR:
(x0 / 思量, purpose, x27 / 他)
(x0 / 思量, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x25 / 见-01, manner, x29 / 也)
(x25 / 见-01, manner, x30 / 从来)
(x30 / 从来, poss, x27 / 他)
(x32 / 会-02, ARG6, x33 / 认识-01)
(x32 / 会-02, manner, x25 / 见-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.4
WARNING: makeIds can't find span Id: 0.1.0.3
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 26,733 microseconds
Sentence: 他 哪里 知道 ， 在 那些 国王 的 眼 里 ， 世界 是 非常 简单 的 ：

Oracle Span 1:  世界 => 世界
Oracle Span 2:  他 => 他
Oracle Span 3:  国王 => 国王
Oracle Span 4:  知道 => 知道-01
Oracle Span 5:  简单 => 简单-01
Oracle Span 6:  那些 => 那些
Oracle Span 7:  非常 => 非常-01
Spans:
Span 11-12:  世界 => 世界
Span 0-1:  他 => 他
Span 6-7:  国王 => 国王
Span 2-3:  知道 => 知道-01
Span 14-15:  简单 => 简单-01
Span 5-6:  那些 => 那些
Span 13-14:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  世界 => 世界
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  国王 => 国王
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 14-15:  简单 => 简单-01
Oracle Span 5-6:  那些 => 那些
Oracle Span 13-14:  非常 => 非常-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	哪里	_	AD	AD	_	3	advmod	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	在	_	P	P	_	13	prep	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	国王	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	眼	_	NN	NN	_	10	lobj	_	_
10	里	_	LC	LC	_	5	plmod	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	世界	_	NN	NN	_	13	top	_	_
13	是	_	VC	VC	_	3	ccomp	_	_
14	非常	_	AD	AD	_	15	advmod	_	_
15	简单	_	VA	VA	_	13	attr	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	：	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 他)
(x0 / 知道-01, arg1, x12 / 简单-01)
(x12 / 简单-01, arg0, x14 / 世界)
(x12 / 简单-01, beneficiary, x15 / 国王)
(x12 / 简单-01, degree, x13 / 非常-01)
(x15 / 国王, mod, x16 / 那些)

Input(Some(Graph((知道-01 :arg1 (简单-01 :beneficiary (国王 :mod 那些) :arg0 世界 :degree 非常-01) :polarity - :arg0 他),ArrayBuffer(Span(2,3,List(0),知道,知道-01,false), Span(14,15,List(1),简单,简单-01,false), Span(6,7,List(2),国王,国王,false), Span(5,6,List(3),那些,那些,false), Span(11,12,List(4),世界,世界,false), Span(13,14,List(5),非常,非常-01,false), Span(0,1,List(6),他,他,false)),Map(2 -> 国王, 5 -> 非常-01, 1 -> 简单-01, 4 -> 世界, 6 -> 他, 0 -> 知道-01, 3 -> 那些),Map(x16 -> 那些, x2 -> 他, x13 -> 非常-01, x12 -> 简单-01, x15 -> 国王, x14 -> 世界, x0 -> 知道-01))),[Ljava.lang.String;@22ffa91a,Annotation([Ljava.lang.String;@74960bfa,[Ljava.lang.String;@42721fe,[Ljava.lang.String;@40844aab),Annotation([Ljava.lang.String;@1f6c9cd8,[Ljava.lang.String;@5b619d14,[Ledu.cmu.lti.nlp.amr.Dependency;@66746f57),Annotation([Ljava.lang.String;@447a020,[Ljava.lang.String;@7f36662c,[Ljava.lang.String;@28e8dde3),Annotation([Ljava.lang.String;@6d23017e,[Ljava.lang.String;@54dcfa5a,[Ledu.cmu.lti.nlp.amr.Entity;@1817f1eb))
AMR:
(x0 / 知道-01, prep-following, x2 / 他)
(x12 / 简单-01, beneficiary, x15 / 国王)
(x12 / 简单-01, degree, x13 / 非常-01)
(x12 / 简单-01, quant, x14 / 世界)
(x15 / 国王, mod, x16 / 那些)
(x16 / 那些, quant, x0 / 知道-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 17,035 microseconds
Sentence: 所有 的 人 都 是 臣民 。

Oracle Span 1:  人 => 人
Oracle Span 2:  所有 => 所有
Oracle Span 3:  臣民 => 臣民
Oracle Span 4:  都 => 都
Spans:
Span 2-3:  人 => 人
Span 0-1:  所有 => 所有
Span 5-6:  臣民 => 臣民
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  人 => 人
Oracle Span 0-1:  所有 => 所有
Oracle Span 5-6:  臣民 => 臣民
Oracle Span 3-4:  都 => 都

Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	人	_	NN	NN	_	5	nsubj	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	臣民	_	NN	NN	_	5	attr	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 臣民, domain, x2 / 人)
(x0 / 臣民, manner, x4 / 都)
(x2 / 人, mod, x3 / 所有)

Input(Some(Graph((臣民 :manner 都 :domain (人 :mod 所有)),ArrayBuffer(Span(5,6,List(0),臣民,臣民,false), Span(3,4,List(1),都,都,false), Span(2,3,List(2),人,人,false), Span(0,1,List(3),所有,所有,false)),Map(2 -> 人, 1 -> 都, 0 -> 臣民, 3 -> 所有),Map(x2 -> 人, x4 -> 都, x3 -> 所有, x0 -> 臣民))),[Ljava.lang.String;@767e20cf,Annotation([Ljava.lang.String;@3a3e78f,[Ljava.lang.String;@301ec38b,[Ljava.lang.String;@17a1e4ca),Annotation([Ljava.lang.String;@10ded6a9,[Ljava.lang.String;@c5dc4a2,[Ledu.cmu.lti.nlp.amr.Dependency;@4a194c39),Annotation([Ljava.lang.String;@52066604,[Ljava.lang.String;@340b9973,[Ljava.lang.String;@56113384),Annotation([Ljava.lang.String;@5669c5fb,[Ljava.lang.String;@373ebf74,[Ledu.cmu.lti.nlp.amr.Entity;@5f9678e1))
AMR:
(x0 / 臣民, domain, x2 / 人)
(x0 / 臣民, manner, x4 / 都)
(x2 / 人, mod, x3 / 所有)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,049 microseconds
Sentence: 国王 十分 骄傲 ， 因为 他 终于 成 了 某个 人 的 国王 ， 他 对 小 王子 说道 ： “ 靠近 些 ， 好 让 我 好好 看看 你 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  十分 => 十分
Oracle Span 4:  国王 => 国王
Oracle Span 5:  国王 => 国王
Oracle Span 6:  好好 => 好好-01
Oracle Span 7:  小 => 小-01
Oracle Span 8:  成 => 成-01
Oracle Span 9:  某个 => 某个
Oracle Span 10:  王子 => 王子
Oracle Span 11:  终于 => 终于
Oracle Span 12:  让 => 让-02
Oracle Span 13:  说道 => 说道-01
Oracle Span 14:  靠近 => 靠近-02
Oracle Span 15:  骄傲 => 骄傲-01
Spans:
Span 10-11:  人 => 人
Span 5-6:  他 => 他
Span 1-2:  十分 => 十分
Span 0-1:  国王 => 国王
Span 12-13:  国王 => 国王
Span 27-28:  好好 => 好好-01
Span 16-17:  小 => 小-01
Span 7-8:  成 => 成-01
Span 9-10:  某个 => 某个
Span 17-18:  王子 => 王子
Span 6-7:  终于 => 终于
Span 25-26:  让 => 让-02
Span 18-19:  说道 => 说道-01
Span 21-22:  靠近 => 靠近-02
Span 2-3:  骄傲 => 骄傲-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  十分 => 十分
Oracle Span 0-1:  国王 => 国王
Oracle Span 12-13:  国王 => 国王
Oracle Span 27-28:  好好 => 好好-01
Oracle Span 16-17:  小 => 小-01
Oracle Span 7-8:  成 => 成-01
Oracle Span 9-10:  某个 => 某个
Oracle Span 17-18:  王子 => 王子
Oracle Span 6-7:  终于 => 终于
Oracle Span 25-26:  让 => 让-02
Oracle Span 18-19:  说道 => 说道-01
Oracle Span 21-22:  靠近 => 靠近-02
Oracle Span 2-3:  骄傲 => 骄傲-01

Dependencies:
1	国王	_	NN	NN	_	3	nsubj	_	_
2	十分	_	AD	AD	_	3	advmod	_	_
3	骄傲	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	因为	_	P	P	_	19	prep	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	终于	_	AD	AD	_	8	advmod	_	_
8	成	_	VV	VV	_	5	pccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	某个	_	CD	CD	_	11	nummod	_	_
11	人	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	国王	_	NN	NN	_	8	dobj	_	_
14	,	_	PU	PU	_	19	punct	_	_
15	他	_	PN	PN	_	19	nsubj	_	_
16	对	_	P	P	_	19	prep	_	_
17	小	_	JJ	JJ	_	18	amod	_	_
18	王子	_	NN	NN	_	16	pobj	_	_
19	说道	_	VV	VV	_	3	ccomp	_	_
20	：	_	PU	PU	_	19	punct	_	_
21	“	_	PU	PU	_	23	punct	_	_
22	靠近	_	CD	CD	_	23	nummod	_	_
23	些	_	M	M	_	19	ccomp	_	_
24	,	_	PU	PU	_	19	punct	_	_
25	好	_	VA	VA	_	19	conj	_	_
26	让	_	VV	VV	_	19	dep	_	_
27	我	_	PN	PN	_	26	dobj	_	_
28	好好	_	AD	AD	_	29	advmod	_	_
29	看看	_	VV	VV	_	26	dep	_	_
30	你	_	PN	PN	_	29	dobj	_	_
31	。	_	PU	PU	_	3	punct	_	_
32	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 说道-01, arg1, x15 / 靠近-02)
(x11 / 说道-01, arg2, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x15 / 靠近-02, purpose, x18 / 让-02)
(x2 / 骄傲-01, arg0, x4 / 国王)
(x2 / 骄傲-01, arg1, x5 / 成-01)
(x2 / 骄傲-01, degree, x3 / 十分)
(x5 / 成-01, arg0, x6 / 他)
(x5 / 成-01, arg1, x7 / 国王)
(x5 / 成-01, manner, x10 / 终于)
(x7 / 国王, poss, x8 / 人)
(x8 / 人, mod, x9 / 某个)

Input(Some(Graph((and :op (骄傲-01 :arg1 (成-01 :manner 终于 :arg1 (国王 :poss (人 :mod 某个)) :arg0 他) :arg0 国王 :degree 十分) :op (说道-01 :arg1 (靠近-02 :purpose (让-02 :arg2 (看-02 :arg0 x6 :arg1 x13 :manner 好好-01) :arg1 x6) :arg1 x6 :arg0 x13) :arg2 (王子 :mod 小-01) :arg0 x6)),ArrayBuffer(Span(2,3,List(0),骄傲,骄傲-01,false), Span(7,8,List(1),成,成-01,false), Span(6,7,List(2),终于,终于,false), Span(0,1,List(3),国王,国王,false), Span(10,11,List(4),人,人,false), Span(9,10,List(5),某个,某个,false), Span(5,6,List(6),他,他,false), Span(12,13,List(7),国王,国王,false), Span(1,2,List(8),十分,十分,false), Span(18,19,List(9),说道,说道-01,false), Span(21,22,List(10),靠近,靠近-02,false), Span(25,26,List(11),让,让-02,false), Span(27,28,List(12),好好,好好-01,false), Span(17,18,List(13),王子,王子,false), Span(16,17,List(14),小,小-01,false)),Map(2 -> 终于, 5 -> 某个, 12 -> 好好-01, 8 -> 十分, 7 -> 国王, 1 -> 成-01, 4 -> 人, 11 -> 让-02, 14 -> 小-01, 6 -> 他, 9 -> 说道-01, 0 -> 骄傲-01, 10 -> 靠近-02, 3 -> 国王, 13 -> 王子),Map(x10 -> 终于, x2 -> 骄傲-01, x5 -> 成-01, x13 -> 王子, x8 -> 人, x15 -> 靠近-02, x7 -> 国王, x18 -> 让-02, x4 -> 国王, x23 -> 好好-01, x11 -> 说道-01, x3 -> 十分, x6 -> 他, x14 -> 小-01, x9 -> 某个))),[Ljava.lang.String;@c4ed84,Annotation([Ljava.lang.String;@189aa67a,[Ljava.lang.String;@5a9d6f02,[Ljava.lang.String;@362045c0),Annotation([Ljava.lang.String;@112f364d,[Ljava.lang.String;@5ccbeb64,[Ledu.cmu.lti.nlp.amr.Dependency;@6d9f7a80),Annotation([Ljava.lang.String;@59252cb6,[Ljava.lang.String;@31d0e481,[Ljava.lang.String;@3243b914),Annotation([Ljava.lang.String;@241e8ea6,[Ljava.lang.String;@542e560f,[Ledu.cmu.lti.nlp.amr.Entity;@626c44e7))
AMR:
(x11 / 说道-01, conj-as-if, x13 / 王子)
(x11 / 说道-01, prep-against, x15 / 靠近-02)
(x13 / 王子, mod, x14 / 小-01)
(x15 / 靠近-02, purpose, x18 / 让-02)
(x18 / 让-02, prep-in, x23 / 好好-01)
(x2 / 骄傲-01, degree, x3 / 十分)
(x2 / 骄傲-01, name, x5 / 成-01)
(x2 / 骄傲-01, time, x7 / 国王)
(x4 / 国王, mod, x14 / 小-01)
(x4 / 国王, poss, x8 / 人)
(x5 / 成-01, manner, x10 / 终于)
(x5 / 成-01, topic, x6 / 他)
(x8 / 人, mod, x9 / 某个)
(x9 / 某个, domain, x5 / 成-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.1.0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.2.2.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 76,680 microseconds
Sentence: 小 王子 看看 四周 ， 想 找 个 地方 坐 下来 ， 可是 整个 星球 被 国王 华丽 的 白 底 黑 花 皮袍 占满 了 。

Oracle Span 1:  华丽 => 华丽-01
Oracle Span 2:  四周 => 四周
Oracle Span 3:  国王 => 国王
Oracle Span 4:  地方 => 地方
Oracle Span 5:  坐 => 坐-03
Oracle Span 6:  小 => 小
Oracle Span 7:  想 => 想-02
Oracle Span 8:  找 => 找-01
Oracle Span 9:  整个 => 整个
Oracle Span 10:  星球 => 星球
Oracle Span 11:  王子 => 王子
Oracle Span 12:  皮袍 => 皮袍
Spans:
Span 17-18:  华丽 => 华丽-01
Span 3-4:  四周 => 四周
Span 16-17:  国王 => 国王
Span 8-9:  地方 => 地方
Span 9-10:  坐 => 坐-03
Span 0-1:  小 => 小
Span 5-6:  想 => 想-02
Span 6-7:  找 => 找-01
Span 13-14:  整个 => 整个
Span 14-15:  星球 => 星球
Span 1-2:  王子 => 王子
Span 23-24:  皮袍 => 皮袍

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  华丽 => 华丽-01
Oracle Span 3-4:  四周 => 四周
Oracle Span 16-17:  国王 => 国王
Oracle Span 8-9:  地方 => 地方
Oracle Span 9-10:  坐 => 坐-03
Oracle Span 0-1:  小 => 小
Oracle Span 5-6:  想 => 想-02
Oracle Span 6-7:  找 => 找-01
Oracle Span 13-14:  整个 => 整个
Oracle Span 14-15:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 23-24:  皮袍 => 皮袍

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	看看	_	VV	VV	_	0	root	_	_
4	四周	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	想	_	VV	VV	_	3	conj	_	_
7	找	_	VV	VV	_	6	ccomp	_	_
8	个	_	M	M	_	9	dep	_	_
9	地方	_	NN	NN	_	7	dobj	_	_
10	坐	_	VV	VV	_	6	dep	_	_
11	下来	_	VV	VV	_	10	comod	_	_
12	,	_	PU	PU	_	3	punct	_	_
13	可是	_	AD	AD	_	25	advmod	_	_
14	整个	_	JJ	JJ	_	15	amod	_	_
15	星球	_	NN	NN	_	25	nsubjpass	_	_
16	被	_	LB	LB	_	25	pass	_	_
17	国王	_	NN	NN	_	18	nn	_	_
18	华丽	_	NN	NN	_	23	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	白	_	JJ	JJ	_	21	amod	_	_
21	底	_	NN	NN	_	23	nn	_	_
22	黑	_	JJ	JJ	_	23	amod	_	_
23	花	_	NN	NN	_	25	nsubj	_	_
24	皮袍	_	AD	AD	_	25	advmod	_	_
25	占满	_	VV	VV	_	3	conj	_	_
26	了	_	AS	AS	_	25	asp	_	_
27	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 皮袍, mod, x17 / 华丽-01)
(x15 / 皮袍, poss, x18 / 国王)
(x21 / 星球, mod, x22 / 整个)
(x4 / 王子, mod, x25 / 小)
(x6 / 想-02, arg1, x8 / 找-01)
(x8 / 找-01, arg1, x10 / 地方)
(x8 / 找-01, arg2, x11 / 坐-03)

Input(Some(Graph((contrast :arg1 (and :op (看-02 :arg0 (王子 :mod 小) :location 四周) :op (想-02 :arg1 (找-01 :arg2 (坐-03 :arg0 x4) :arg1 地方 :arg0 x4) :arg0 x4)) :arg2 (占-02 :arg0 (皮袍 :poss 国王 :mod (华丽-01 :arg0 x15) :mod 白底黑花) :arg1 (星球 :mod 整个) :manner (满-01 :arg0 x21))),ArrayBuffer(Span(1,2,List(0),王子,王子,false), Span(0,1,List(1),小,小,false), Span(3,4,List(2),四周,四周,false), Span(5,6,List(3),想,想-02,false), Span(6,7,List(4),找,找-01,false), Span(9,10,List(5),坐,坐-03,false), Span(8,9,List(6),地方,地方,false), Span(23,24,List(7),皮袍,皮袍,false), Span(16,17,List(8),国王,国王,false), Span(17,18,List(9),华丽,华丽-01,false), Span(14,15,List(10),星球,星球,false), Span(13,14,List(11),整个,整个,false)),Map(2 -> 四周, 5 -> 坐-03, 8 -> 国王, 7 -> 皮袍, 1 -> 小, 4 -> 找-01, 11 -> 整个, 6 -> 地方, 9 -> 华丽-01, 0 -> 王子, 10 -> 星球, 3 -> 想-02),Map(x22 -> 整个, x10 -> 地方, x25 -> 小, x5 -> 四周, x8 -> 找-01, x21 -> 星球, x15 -> 皮袍, x18 -> 国王, x4 -> 王子, x11 -> 坐-03, x6 -> 想-02, x17 -> 华丽-01))),[Ljava.lang.String;@4dc8caa7,Annotation([Ljava.lang.String;@1d730606,[Ljava.lang.String;@3bcbb589,[Ljava.lang.String;@3b00856b),Annotation([Ljava.lang.String;@3016fd5e,[Ljava.lang.String;@35d08e6c,[Ledu.cmu.lti.nlp.amr.Dependency;@53d102a2),Annotation([Ljava.lang.String;@6c45ee6e,[Ljava.lang.String;@6b3e12b5,[Ljava.lang.String;@5aac4250),Annotation([Ljava.lang.String;@1338fb5,[Ljava.lang.String;@42463763,[Ledu.cmu.lti.nlp.amr.Entity;@59f63e24))
AMR:
(x11 / 坐-03, time, x22 / 整个)
(x15 / 皮袍, mod, x17 / 华丽-01)
(x15 / 皮袍, poss, x18 / 国王)
(x17 / 华丽-01, degree, x21 / 星球)
(x21 / 星球, mod, x22 / 整个)
(x4 / 王子, mod, x25 / 小)
(x5 / 四周, quant, x4 / 王子)
(x6 / 想-02, ARG3, x4 / 王子)
(x6 / 想-02, prep-along-with, x8 / 找-01)
(x8 / 找-01, ARG0, x11 / 坐-03)
(x8 / 找-01, ARG4, x10 / 地方)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 50,610 microseconds
Sentence: 他 只好 站 在 那里 ， 但是 因为 疲倦 了 ， 他 打 起 哈欠 来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  只好 => 只好
Oracle Span 3:  疲倦 => 疲倦-01
Oracle Span 4:  站 => 站-01
Oracle Span 5:  那里 => 那里
Spans:
Span 0-1:  他 => 他
Span 1-2:  只好 => 只好
Span 8-9:  疲倦 => 疲倦-01
Span 2-3:  站 => 站-01
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  只好 => 只好
Oracle Span 8-9:  疲倦 => 疲倦-01
Oracle Span 2-3:  站 => 站-01
Oracle Span 4-5:  那里 => 那里

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	只好	_	AD	AD	_	3	advmod	_	_
3	站	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	那里	_	PN	PN	_	4	pobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	但是	_	AD	AD	_	13	advmod	_	_
8	因为	_	P	P	_	13	prep	_	_
9	疲倦	_	VV	VV	_	8	pccomp	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	他	_	PN	PN	_	13	nsubj	_	_
13	打	_	VV	VV	_	3	conj	_	_
14	起	_	VV	VV	_	13	dep	_	_
15	哈欠	_	NT	NT	_	16	lobj	_	_
16	来	_	LC	LC	_	14	loc	_	_
17	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 站-01, arg0, x4 / 他)
(x2 / 站-01, arg1, x5 / 那里)
(x2 / 站-01, manner, x3 / 只好)

Input(Some(Graph((contrast :arg1 (站-01 :arg1 那里 :arg0 他 :manner 只好) :arg2 (causation :arg1 (疲倦-01 :arg0 x4) :arg2 (打哈欠-01 :arg0 x4))),ArrayBuffer(Span(2,3,List(0),站,站-01,false), Span(4,5,List(1),那里,那里,false), Span(0,1,List(2),他,他,false), Span(1,2,List(3),只好,只好,false), Span(8,9,List(4),疲倦,疲倦-01,false)),Map(2 -> 他, 1 -> 那里, 4 -> 疲倦-01, 0 -> 站-01, 3 -> 只好),Map(x2 -> 站-01, x5 -> 那里, x7 -> 疲倦-01, x4 -> 他, x3 -> 只好))),[Ljava.lang.String;@61f05988,Annotation([Ljava.lang.String;@7ca33c24,[Ljava.lang.String;@fade1fc,[Ljava.lang.String;@67c2e933),Annotation([Ljava.lang.String;@41dd05a,[Ljava.lang.String;@613a8ee1,[Ledu.cmu.lti.nlp.amr.Dependency;@178213b),Annotation([Ljava.lang.String;@7103cb56,[Ljava.lang.String;@1b765a2c,[Ljava.lang.String;@2e8e8225),Annotation([Ljava.lang.String;@6ebf0f36,[Ljava.lang.String;@18920cc,[Ledu.cmu.lti.nlp.amr.Entity;@2807bdeb))
AMR:
(x2 / 站-01, ARG6, x4 / 他)
(x2 / 站-01, degree, x5 / 那里)
(x2 / 站-01, manner, x3 / 只好)
(x7 / 疲倦-01, time, x5 / 那里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 13,249 microseconds
Sentence: 君王 对 他 说 ： “ 在 一 个 国王 面前 打哈欠 是 违反 礼节 的 。

Oracle Span 1:  他 => 他
Oracle Span 2:  国王 => 国王
Oracle Span 3:  打哈欠 => 打哈欠-01
Oracle Span 4:  礼节 => 礼节
Oracle Span 5:  说 => 说-01
Oracle Span 6:  违反 => 违反-01
Oracle Span 7:  面前 => 面前
Spans:
Span 2-3:  他 => 他
Span 9-10:  国王 => 国王
Span 11-12:  打哈欠 => 打哈欠-01
Span 14-15:  礼节 => 礼节
Span 3-4:  说 => 说-01
Span 13-14:  违反 => 违反-01
Span 10-11:  面前 => 面前

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  国王 => 国王
Oracle Span 11-12:  打哈欠 => 打哈欠-01
Oracle Span 14-15:  礼节 => 礼节
Oracle Span 3-4:  说 => 说-01
Oracle Span 13-14:  违反 => 违反-01
Oracle Span 10-11:  面前 => 面前

Dependencies:
1	君王	_	NR	NR	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	13	punct	_	_
7	在	_	P	P	_	13	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	国王	_	NN	NN	_	11	lobj	_	_
11	面前	_	LC	LC	_	7	plmod	_	_
12	打哈欠	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	4	ccomp	_	_
14	违反	_	VV	VV	_	13	attr	_	_
15	礼节	_	NN	NN	_	14	dobj	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	4	punct	_	_
18	君王	_	NR	NR	_	13	xsubj	_	_

Oracle:
(x0 / 说-01, arg1, x4 / 违反-01)
(x0 / 说-01, arg3, x3 / 他)
(x4 / 违反-01, arg0, x5 / 打哈欠-01)
(x4 / 违反-01, arg1, x10 / 礼节)
(x5 / 打哈欠-01, location, x7 / 面前)
(x7 / 面前, location, x8 / 国王)

Input(Some(Graph((说-01 :arg1 (违反-01 :arg1 礼节 :arg0 (打哈欠-01 :arg0 x3 :location (面前 :location (国王 :quant 1)))) :arg3 他 :arg0 国王),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(13,14,List(1),违反,违反-01,false), Span(14,15,List(2),礼节,礼节,false), Span(11,12,List(3),打哈欠,打哈欠-01,false), Span(10,11,List(4),面前,面前,false), Span(9,10,List(5),国王,国王,false), Span(2,3,List(6),他,他,false)),Map(2 -> 礼节, 5 -> 国王, 1 -> 违反-01, 4 -> 面前, 6 -> 他, 0 -> 说-01, 3 -> 打哈欠-01),Map(x10 -> 礼节, x5 -> 打哈欠-01, x8 -> 国王, x7 -> 面前, x4 -> 违反-01, x3 -> 他, x0 -> 说-01))),[Ljava.lang.String;@72c28d64,Annotation([Ljava.lang.String;@6492fab5,[Ljava.lang.String;@2c5529ab,[Ljava.lang.String;@39a8312f),Annotation([Ljava.lang.String;@5f6722d3,[Ljava.lang.String;@2c532cd8,[Ledu.cmu.lti.nlp.amr.Dependency;@294e5088),Annotation([Ljava.lang.String;@51972dc7,[Ljava.lang.String;@3700ec9c,[Ljava.lang.String;@2002348),Annotation([Ljava.lang.String;@5911e990,[Ljava.lang.String;@31000e60,[Ledu.cmu.lti.nlp.amr.Entity;@1d470d0))
AMR:
(x0 / 说-01, prep-without, x3 / 他)
(x4 / 违反-01, day, x10 / 礼节)
(x4 / 违反-01, prep-on-behalf, x5 / 打哈欠-01)
(x5 / 打哈欠-01, location, x7 / 面前)
(x7 / 面前, location, x0 / 说-01)
(x7 / 面前, location, x8 / 国王)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 15,658 microseconds
Sentence: 我 禁止 你 打哈欠 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  打哈欠 => 打哈欠-01
Oracle Span 4:  禁止 => 禁止-01
Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 3-4:  打哈欠 => 打哈欠-01
Span 1-2:  禁止 => 禁止-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  打哈欠 => 打哈欠-01
Oracle Span 1-2:  禁止 => 禁止-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	禁止	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	4	nsubj	_	_
4	打哈欠	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 禁止-01, arg0, x8 / 我)
(x7 / 禁止-01, arg1, x9 / 打哈欠-01)
(x9 / 打哈欠-01, arg0, x10 / 你)

Input(Some(Graph((say :arg1 (禁止-01 :arg1 (打哈欠-01 :arg0 你) :arg0 我)),ArrayBuffer(Span(1,2,List(0),禁止,禁止-01,false), Span(3,4,List(1),打哈欠,打哈欠-01,false), Span(2,3,List(2),你,你,false), Span(0,1,List(3),我,我,false)),Map(2 -> 你, 1 -> 打哈欠-01, 0 -> 禁止-01, 3 -> 我),Map(x10 -> 你, x8 -> 我, x7 -> 禁止-01, x9 -> 打哈欠-01))),[Ljava.lang.String;@24d09c1,Annotation([Ljava.lang.String;@54c62d71,[Ljava.lang.String;@65045a87,[Ljava.lang.String;@47f4e407),Annotation([Ljava.lang.String;@2d1dee39,[Ljava.lang.String;@48d5f34e,[Ledu.cmu.lti.nlp.amr.Dependency;@fc258b1),Annotation([Ljava.lang.String;@6ff65192,[Ljava.lang.String;@2dd80673,[Ljava.lang.String;@4af0df05),Annotation([Ljava.lang.String;@57ea113a,[Ljava.lang.String;@acdb094,[Ledu.cmu.lti.nlp.amr.Entity;@674bd420))
AMR:
(x7 / 禁止-01, manner, x8 / 我)
(x7 / 禁止-01, scale, x9 / 打哈欠-01)
(x7 / 禁止-01, year, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,825 microseconds
Sentence: 我 实在 忍 不 住

Oracle Span 1:  实在 => 实在
Oracle Span 2:  我 => 我
Spans:
Span 1-2:  实在 => 实在
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  实在 => 实在
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	实在	_	AD	AD	_	5	advmod	_	_
3	忍	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	住	_	VV	VV	_	0	root	_	_

Oracle:
(x3 / 实在, arg0, x4 / 我)

Input(Some(Graph((忍住-01 :polarity - :manner (实在 :arg0 我) :arg0 x4),ArrayBuffer(Span(1,2,List(0),实在,实在,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 实在),Map(x4 -> 我, x3 -> 实在))),[Ljava.lang.String;@2b0f373b,Annotation([Ljava.lang.String;@2ceb80a1,[Ljava.lang.String;@4b45dcb8,[Ljava.lang.String;@7216fb24),Annotation([Ljava.lang.String;@2072acb2,[Ljava.lang.String;@50ecde95,[Ledu.cmu.lti.nlp.amr.Dependency;@35a9782c),Annotation([Ljava.lang.String;@70a36a66,[Ljava.lang.String;@45815ffc,[Ljava.lang.String;@732f29af),Annotation([Ljava.lang.String;@d3957fe,[Ljava.lang.String;@6622fc65,[Ledu.cmu.lti.nlp.amr.Entity;@299321e2))
AMR:
(x3 / 实在, instrument, x4 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 3,401 microseconds
Sentence: 小 王子 羞愧 地 说道 ： 我 实在 忍 不 住 ，

Oracle Span 1:  实在 => 实在
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  羞愧 => 羞愧-01
Oracle Span 5:  说道 => 说道-01
Spans:
Span 7-8:  实在 => 实在
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 2-3:  羞愧 => 羞愧-01
Span 4-5:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  实在 => 实在
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  羞愧 => 羞愧-01
Oracle Span 4-5:  说道 => 说道-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	羞愧	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	我	_	PN	PN	_	11	nsubj	_	_
8	实在	_	AD	AD	_	11	advmod	_	_
9	忍	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	住	_	VV	VV	_	5	ccomp	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说道-01, manner, x2 / 羞愧-01)
(x2 / 羞愧-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((说道-01 :arg1 (忍住-01 :polarity - :manner (实在 :arg0 x3) :arg0 x3) :arg0 x3 :manner (羞愧-01 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(4,5,List(0),说道,说道-01,false), Span(7,8,List(1),实在,实在,false), Span(2,3,List(2),羞愧,羞愧-01,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 羞愧-01, 1 -> 实在, 4 -> 小-01, 0 -> 说道-01, 3 -> 王子),Map(x2 -> 羞愧-01, x8 -> 实在, x4 -> 小-01, x3 -> 王子, x0 -> 说道-01))),[Ljava.lang.String;@23fb172e,Annotation([Ljava.lang.String;@64ba3208,[Ljava.lang.String;@158a3b2e,[Ljava.lang.String;@25a6944c),Annotation([Ljava.lang.String;@5e1fa5b1,[Ljava.lang.String;@6b00f608,[Ledu.cmu.lti.nlp.amr.Dependency;@2f17e30d),Annotation([Ljava.lang.String;@3e821657,[Ljava.lang.String;@1d131e1b,[Ljava.lang.String;@71cf1b07),Annotation([Ljava.lang.String;@615091b8,[Ljava.lang.String;@4fce136b,[Ledu.cmu.lti.nlp.amr.Entity;@4aa83f4f))
AMR:
(x0 / 说道-01, manner, x2 / 羞愧-01)
(x2 / 羞愧-01, poss, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 实在, mod, x2 / 羞愧-01)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 11,250 microseconds
Sentence: “ 我 长途跋涉 来到 这里 ， 还 没有 睡觉 呢 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  来到 => 来到-01
Oracle Span 3:  睡觉 => 睡觉-01
Oracle Span 4:  还 => 还
Oracle Span 5:  这里 => 这里
Spans:
Span 1-2:  我 => 我
Span 3-4:  来到 => 来到-01
Span 8-9:  睡觉 => 睡觉-01
Span 6-7:  还 => 还
Span 4-5:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  来到 => 来到-01
Oracle Span 8-9:  睡觉 => 睡觉-01
Oracle Span 6-7:  还 => 还
Oracle Span 4-5:  这里 => 这里

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	长途跋涉	_	AD	AD	_	4	advmod	_	_
4	来到	_	VV	VV	_	0	root	_	_
5	这里	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	没有	_	VE	VE	_	4	dep	_	_
9	睡觉	_	NN	NN	_	8	dobj	_	_
10	呢	_	SP	SP	_	4	dep	_	_
11	。	_	PU	PU	_	4	punct	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x31 / 来到-01, arg1, x33 / 这里)
(x34 / 睡觉-01, manner, x37 / 还)

Input(Some(Graph((say :arg1 (causation :arg1 (跋涉-01 :manner 长途 :arg0 我 :purpose (来到-01 :arg1 这里 :arg0 x30)) :arg2 (睡觉-01 :manner 还 :polarity - :arg0 x30))),ArrayBuffer(Span(1,2,List(0),我,我,false), Span(3,4,List(1),来到,来到-01,false), Span(4,5,List(2),这里,这里,false), Span(8,9,List(3),睡觉,睡觉-01,false), Span(6,7,List(4),还,还,false)),Map(2 -> 这里, 1 -> 来到-01, 4 -> 还, 0 -> 我, 3 -> 睡觉-01),Map(x34 -> 睡觉-01, x37 -> 还, x31 -> 来到-01, x30 -> 我, x33 -> 这里))),[Ljava.lang.String;@43b6123e,Annotation([Ljava.lang.String;@260e86a1,[Ljava.lang.String;@19648c40,[Ljava.lang.String;@12bd8a64),Annotation([Ljava.lang.String;@61e94def,[Ljava.lang.String;@3300f4fd,[Ledu.cmu.lti.nlp.amr.Dependency;@ebb6851),Annotation([Ljava.lang.String;@70ab2d48,[Ljava.lang.String;@5b068087,[Ljava.lang.String;@6f152006),Annotation([Ljava.lang.String;@3a393455,[Ljava.lang.String;@13518f37,[Ledu.cmu.lti.nlp.amr.Entity;@7cbc3762))
AMR:
(x31 / 来到-01, example, x30 / 我)
(x31 / 来到-01, purpose, x33 / 这里)
(x34 / 睡觉-01, manner, x37 / 还)
(x37 / 还, location, x33 / 这里)

WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
Decoded in 10,431 microseconds
Sentence: 国王 说 ： “ 那 好 吧 ，

Oracle Span 1:  国王 => 国王
Oracle Span 2:  好 => 好-02
Oracle Span 3:  说 => 说-01
Spans:
Span 0-1:  国王 => 国王
Span 5-6:  好 => 好-02
Span 1-2:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 5-6:  好 => 好-02
Oracle Span 1-2:  说 => 说-01

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	那	_	PN	PN	_	6	nsubj	_	_
6	好	_	VA	VA	_	2	ccomp	_	_
7	吧	_	SP	SP	_	6	dep	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x3 / 好-02)

Input(Some(Graph((说-01 :mode expressive :arg1 好-02 :arg0 国王),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(5,6,List(1),好,好-02,false), Span(0,1,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 好-02, 0 -> 说-01),Map(x2 -> 国王, x3 -> 好-02, x0 -> 说-01))),[Ljava.lang.String;@3a6f2de3,Annotation([Ljava.lang.String;@49872d67,[Ljava.lang.String;@56303b57,[Ljava.lang.String;@4b2a01d4),Annotation([Ljava.lang.String;@8692d67,[Ljava.lang.String;@78f5c518,[Ledu.cmu.lti.nlp.amr.Dependency;@2f48b3d2),Annotation([Ljava.lang.String;@34f7234e,[Ljava.lang.String;@753432a2,[Ljava.lang.String;@23bff419),Annotation([Ljava.lang.String;@4983159f,[Ljava.lang.String;@44e3a2b2,[Ledu.cmu.lti.nlp.amr.Entity;@101639ae))
AMR:
(x0 / 说-01, ARG5, x2 / 国王)
(x0 / 说-01, prep-against, x3 / 好-02)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,736 microseconds
Sentence: 我 命令 你 打哈欠 。

Oracle Span 1:  你 => 你
Oracle Span 2:  命令 => 命令-01
Oracle Span 3:  我 => 我
Oracle Span 4:  打哈欠 => 打哈欠-01
Spans:
Span 2-3:  你 => 你
Span 1-2:  命令 => 命令-01
Span 0-1:  我 => 我
Span 3-4:  打哈欠 => 打哈欠-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 1-2:  命令 => 命令-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  打哈欠 => 打哈欠-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	命令	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	打哈欠	_	VV	VV	_	2	dep	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 命令-01, arg0, x2 / 我)
(x0 / 命令-01, arg1, x3 / 你)
(x0 / 命令-01, arg2, x4 / 打哈欠-01)

Input(Some(Graph((命令-01 :arg2 (打哈欠-01 :arg0 x3) :arg1 你 :arg0 我),ArrayBuffer(Span(1,2,List(0),命令,命令-01,false), Span(3,4,List(1),打哈欠,打哈欠-01,false), Span(2,3,List(2),你,你,false), Span(0,1,List(3),我,我,false)),Map(2 -> 你, 1 -> 打哈欠-01, 0 -> 命令-01, 3 -> 我),Map(x2 -> 我, x4 -> 打哈欠-01, x3 -> 你, x0 -> 命令-01))),[Ljava.lang.String;@4c550889,Annotation([Ljava.lang.String;@1d2bd371,[Ljava.lang.String;@44040454,[Ljava.lang.String;@65fe9e33),Annotation([Ljava.lang.String;@18bc345,[Ljava.lang.String;@42f8285e,[Ledu.cmu.lti.nlp.amr.Dependency;@26bab2f1),Annotation([Ljava.lang.String;@3724af13,[Ljava.lang.String;@68ead359,[Ljava.lang.String;@6b53bcc2),Annotation([Ljava.lang.String;@180da663,[Ljava.lang.String;@a43ce46,[Ledu.cmu.lti.nlp.amr.Entity;@340da44c))
AMR:
(x0 / 命令-01, prep-on-behalf, x4 / 打哈欠-01)
(x0 / 命令-01, value, x2 / 我)
(x4 / 打哈欠-01, beneficiary, x3 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,421 microseconds
Sentence: 好些 年 来 我 没有 看见 过 任何 人 打哈欠 。

Oracle Span 1:  人 => 人
Oracle Span 2:  任何 => 任何
Oracle Span 3:  好些 => 好些
Oracle Span 4:  年 => 年
Oracle Span 5:  我 => 我
Oracle Span 6:  打哈欠 => 打哈欠-01
Oracle Span 7:  看见 => 看见-01
Spans:
Span 8-9:  人 => 人
Span 7-8:  任何 => 任何
Span 0-1:  好些 => 好些
Span 1-2:  年 => 年
Span 3-4:  我 => 我
Span 9-10:  打哈欠 => 打哈欠-01
Span 5-6:  看见 => 看见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 7-8:  任何 => 任何
Oracle Span 0-1:  好些 => 好些
Oracle Span 1-2:  年 => 年
Oracle Span 3-4:  我 => 我
Oracle Span 9-10:  打哈欠 => 打哈欠-01
Oracle Span 5-6:  看见 => 看见-01

Dependencies:
1	好些	_	CD	CD	_	2	nummod	_	_
2	年	_	M	M	_	3	lobj	_	_
3	来	_	LC	LC	_	6	loc	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	没有	_	VV	VV	_	6	neg	_	_
6	看见	_	VV	VV	_	0	root	_	_
7	过	_	AS	AS	_	6	asp	_	_
8	任何	_	DT	DT	_	9	det	_	_
9	人	_	NN	NN	_	10	nn	_	_
10	打哈欠	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 看见-01, arg0, x13 / 我)
(x10 / 看见-01, arg1, x14 / 打哈欠-01)
(x10 / 看见-01, duration, x17 / 年)
(x14 / 打哈欠-01, arg0, x15 / 人)
(x15 / 人, mod, x16 / 任何)
(x17 / 年, mod, x18 / 好些)

Input(Some(Graph((看见-01 :duration (年 :mod 好些) :arg1 (打哈欠-01 :arg0 (人 :mod 任何)) :arg0 我 :polarity -),ArrayBuffer(Span(5,6,List(0),看见,看见-01,false), Span(1,2,List(1),年,年,false), Span(0,1,List(2),好些,好些,false), Span(9,10,List(3),打哈欠,打哈欠-01,false), Span(8,9,List(4),人,人,false), Span(7,8,List(5),任何,任何,false), Span(3,4,List(6),我,我,false)),Map(2 -> 好些, 5 -> 任何, 1 -> 年, 4 -> 人, 6 -> 我, 0 -> 看见-01, 3 -> 打哈欠-01),Map(x16 -> 任何, x10 -> 看见-01, x13 -> 我, x15 -> 人, x18 -> 好些, x14 -> 打哈欠-01, x17 -> 年))),[Ljava.lang.String;@424ebba3,Annotation([Ljava.lang.String;@37052337,[Ljava.lang.String;@2320fa6f,[Ljava.lang.String;@7a560583),Annotation([Ljava.lang.String;@4d722ac9,[Ljava.lang.String;@53f0a4cb,[Ledu.cmu.lti.nlp.amr.Dependency;@77a7cf58),Annotation([Ljava.lang.String;@3d97a632,[Ljava.lang.String;@616fe72b,[Ljava.lang.String;@37efd131),Annotation([Ljava.lang.String;@7e7b159b,[Ljava.lang.String;@7e5d9a50,[Ledu.cmu.lti.nlp.amr.Entity;@60957c0f))
AMR:
(x10 / 看见-01, ARG4, x14 / 打哈欠-01)
(x10 / 看见-01, beneficiary, x13 / 我)
(x10 / 看见-01, duration, x17 / 年)
(x14 / 打哈欠-01, location, x15 / 人)
(x15 / 人, mod, x16 / 任何)
(x17 / 年, mod, x18 / 好些)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 16,669 microseconds
Sentence: 对 我 来说 ， 打哈欠 倒 是 新奇 的 事 。

Oracle Span 1:  事 => 事
Oracle Span 2:  我 => 我
Oracle Span 3:  打哈欠 => 打哈欠-01
Oracle Span 4:  新奇 => 新奇-01
Oracle Span 5:  来说 => 来说-01
Spans:
Span 9-10:  事 => 事
Span 1-2:  我 => 我
Span 4-5:  打哈欠 => 打哈欠-01
Span 7-8:  新奇 => 新奇-01
Span 2-3:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  事 => 事
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  打哈欠 => 打哈欠-01
Oracle Span 7-8:  新奇 => 新奇-01
Oracle Span 2-3:  来说 => 来说-01

Dependencies:
1	对	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	打哈欠	_	NN	NN	_	7	nsubj	_	_
6	倒	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	新奇	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	事	_	NN	NN	_	7	attr	_	_
11	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 打哈欠-01)
(x0 / 来说-01, arg1, x3 / 我)
(x0 / 来说-01, arg2, x8 / 事)
(x8 / 事, mod, x9 / 新奇-01)

Input(Some(Graph((来说-01 :arg2 (事 :mod 新奇-01) :arg1 我 :arg0 打哈欠-01),ArrayBuffer(Span(2,3,List(0),来说,来说-01,false), Span(9,10,List(1),事,事,false), Span(7,8,List(2),新奇,新奇-01,false), Span(1,2,List(3),我,我,false), Span(4,5,List(4),打哈欠,打哈欠-01,false)),Map(2 -> 新奇-01, 1 -> 事, 4 -> 打哈欠-01, 0 -> 来说-01, 3 -> 我),Map(x2 -> 打哈欠-01, x8 -> 事, x3 -> 我, x9 -> 新奇-01, x0 -> 来说-01))),[Ljava.lang.String;@293a5f75,Annotation([Ljava.lang.String;@fcb4004,[Ljava.lang.String;@1dd6d4b7,[Ljava.lang.String;@56e8b606),Annotation([Ljava.lang.String;@2dd29a59,[Ljava.lang.String;@784c3487,[Ledu.cmu.lti.nlp.amr.Dependency;@53142455),Annotation([Ljava.lang.String;@40dff0b7,[Ljava.lang.String;@7966baa7,[Ljava.lang.String;@60975100),Annotation([Ljava.lang.String;@1253e7cb,[Ljava.lang.String;@2d36e77e,[Ledu.cmu.lti.nlp.amr.Entity;@61c9c3fd))
AMR:
(x0 / 来说-01, ARG3, x2 / 打哈欠-01)
(x0 / 来说-01, decade, x3 / 我)
(x0 / 来说-01, location, x8 / 事)
(x8 / 事, mod, x9 / 新奇-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,854 microseconds
Sentence: 来 吧 ，

Oracle Span 1:  来 => 来-01
Spans:
Span 0-1:  来 => 来-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  来 => 来-01

Dependencies:
1	来	_	VV	VV	_	2	mmod	_	_
2	吧	_	CD	CD	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((来-01 :mode expressive),ArrayBuffer(Span(0,1,List(0),来,来-01,false)),Map(0 -> 来-01),Map(x0 -> 来-01))),[Ljava.lang.String;@3b0c9195,Annotation([Ljava.lang.String;@366c4480,[Ljava.lang.String;@2c7b5824,[Ljava.lang.String;@302a07d),Annotation([Ljava.lang.String;@5cdd09b1,[Ljava.lang.String;@8c11eee,[Ledu.cmu.lti.nlp.amr.Dependency;@7e8dcdaa),Annotation([Ljava.lang.String;@681a8b4e,[Ljava.lang.String;@5cbe877d,[Ljava.lang.String;@5c08c46a),Annotation([Ljava.lang.String;@4cf8b2dc,[Ljava.lang.String;@708400f6,[Ledu.cmu.lti.nlp.amr.Entity;@5829e4f4))
AMR:


Decoded in 1,824 microseconds
Sentence: 再 打 个 哈欠 ！

Oracle Span 1:  再 => 再-01
Spans:
Span 0-1:  再 => 再-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  再 => 再-01

Dependencies:
1	再	_	AD	AD	_	2	advmod	_	_
2	打	_	VV	VV	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	哈欠	_	NN	NN	_	2	dobj	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((打哈欠-01 :manner 再-01 :mode expressive),ArrayBuffer(Span(0,1,List(0),再,再-01,false)),Map(0 -> 再-01),Map(x2 -> 再-01))),[Ljava.lang.String;@4218500f,Annotation([Ljava.lang.String;@4bff64c2,[Ljava.lang.String;@1b2c4efb,[Ljava.lang.String;@c35172e),Annotation([Ljava.lang.String;@c2db68f,[Ljava.lang.String;@3cc41abc,[Ledu.cmu.lti.nlp.amr.Dependency;@4566d049),Annotation([Ljava.lang.String;@61ce23ac,[Ljava.lang.String;@3668d4,[Ljava.lang.String;@1c3b9394),Annotation([Ljava.lang.String;@6f2cfcc2,[Ljava.lang.String;@7f6f61c8,[Ledu.cmu.lti.nlp.amr.Entity;@4c2cc639))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,164 microseconds
Sentence: 这 是 命令 。 ”

Oracle Span 1:  命令 => 命令
Oracle Span 2:  这 => 这
Spans:
Span 2-3:  命令 => 命令
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  命令 => 命令
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	命令	_	NN	NN	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 命令, domain, x6 / 这)

Input(Some(Graph((say :arg1 (命令 :domain 这)),ArrayBuffer(Span(2,3,List(0),命令,命令,false), Span(0,1,List(1),这,这,false)),Map(1 -> 这, 0 -> 命令),Map(x5 -> 命令, x6 -> 这))),[Ljava.lang.String;@ccb4b1b,Annotation([Ljava.lang.String;@4097cac,[Ljava.lang.String;@ec2cc4,[Ljava.lang.String;@2a5b3fee),Annotation([Ljava.lang.String;@7c1e2a2d,[Ljava.lang.String;@333dd51e,[Ledu.cmu.lti.nlp.amr.Dependency;@52d645b1),Annotation([Ljava.lang.String;@2101b44a,[Ljava.lang.String;@2cc3ad05,[Ljava.lang.String;@710b18a6),Annotation([Ljava.lang.String;@119020fb,[Ljava.lang.String;@3d9f6567,[Ledu.cmu.lti.nlp.amr.Entity;@c055c54))
AMR:
(x5 / 命令, domain, x6 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,324 microseconds
Sentence: “ 这 倒 叫 我 有点 紧张 …

Oracle Span 1:  我 => 我
Oracle Span 2:  有点 => 有点
Oracle Span 3:  紧张 => 紧张-01
Oracle Span 4:  这 => 这
Spans:
Span 4-5:  我 => 我
Span 5-6:  有点 => 有点
Span 6-7:  紧张 => 紧张-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  有点 => 有点
Oracle Span 6-7:  紧张 => 紧张-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	倒	_	AD	AD	_	4	advmod	_	_
4	叫	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	6	nn	_	_
6	有点	_	NN	NN	_	4	dobj	_	_
7	紧张	_	PU	PU	_	4	punct	_	_
8	…	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 紧张-01, arg0, x12 / 我)
(x10 / 紧张-01, cause, x13 / 这)
(x10 / 紧张-01, degree, x11 / 有点)

Input(Some(Graph((say :arg1 (紧张-01 :cause 这 :arg0 我 :degree 有点)),ArrayBuffer(Span(6,7,List(0),紧张,紧张-01,false), Span(1,2,List(1),这,这,false), Span(4,5,List(2),我,我,false), Span(5,6,List(3),有点,有点,false)),Map(2 -> 我, 1 -> 这, 0 -> 紧张-01, 3 -> 有点),Map(x10 -> 紧张-01, x13 -> 这, x12 -> 我, x11 -> 有点))),[Ljava.lang.String;@25e2ab5a,Annotation([Ljava.lang.String;@35e5d0e5,[Ljava.lang.String;@73173f63,[Ljava.lang.String;@55562aa9),Annotation([Ljava.lang.String;@655ef322,[Ljava.lang.String;@7e276594,[Ledu.cmu.lti.nlp.amr.Dependency;@3401a114),Annotation([Ljava.lang.String;@5066d65f,[Ljava.lang.String;@4233e892,[Ljava.lang.String;@77d2e85),Annotation([Ljava.lang.String;@3ecd267f,[Ljava.lang.String;@58ffcbd7,[Ledu.cmu.lti.nlp.amr.Entity;@555cf22))
AMR:
(x10 / 紧张-01, degree, x11 / 有点)
(x10 / 紧张-01, example, x12 / 我)
(x10 / 紧张-01, location, x13 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,213 microseconds
Sentence: 我 打 不 出 哈欠 来 了 … ” 小 王子 红 着 脸 说 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Spans:
Span 9-10:  小 => 小-01
Span 0-1:  我 => 我
Span 10-11:  王子 => 王子
Span 14-15:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  王子 => 王子
Oracle Span 14-15:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	打	_	VV	VV	_	14	rcmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	出	_	VV	VV	_	6	lccomp	_	_
5	哈欠	_	NN	NN	_	4	dobj	_	_
6	来	_	LC	LC	_	2	loc	_	_
7	了	_	SP	SP	_	2	dep	_	_
8	…	_	PU	PU	_	12	punct	_	_
9	”	_	NR	NR	_	11	nn	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	红	_	VA	VA	_	2	dep	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	脸	_	NN	NN	_	15	nsubj	_	_
15	说	_	VV	VV	_	0	root	_	_
16	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 (打哈欠-01 :polarity - :arg0 我) :manner 红着脸 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(14,15,List(0),说,说-01,false), Span(0,1,List(1),我,我,false), Span(10,11,List(2),王子,王子,false), Span(9,10,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 我, 0 -> 说-01, 3 -> 小-01),Map(x2 -> 王子, x8 -> 我, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@6bb2d00b,Annotation([Ljava.lang.String;@3c9bfddc,[Ljava.lang.String;@1a9c38eb,[Ljava.lang.String;@319bc845),Annotation([Ljava.lang.String;@4c5474f5,[Ljava.lang.String;@2f4205be,[Ledu.cmu.lti.nlp.amr.Dependency;@54e22bdd),Annotation([Ljava.lang.String;@3bd418e4,[Ljava.lang.String;@544820b7,[Ljava.lang.String;@6b98a075),Annotation([Ljava.lang.String;@2e61d218,[Ljava.lang.String;@3569fc08,[Ledu.cmu.lti.nlp.amr.Entity;@20b12f8a))
AMR:
(x0 / 说-01, op, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x2 / 王子, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,924 microseconds
Sentence: “ 嗯 ！

Oracle Span 1:  嗯 => 嗯
Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (嗯 :mode expressive)),ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x5 -> 嗯))),[Ljava.lang.String;@e84a8e1,Annotation([Ljava.lang.String;@2e554a3b,[Ljava.lang.String;@54a67a45,[Ljava.lang.String;@7d42c224),Annotation([Ljava.lang.String;@56aaaecd,[Ljava.lang.String;@522a32b1,[Ledu.cmu.lti.nlp.amr.Dependency;@35390ee3),Annotation([Ljava.lang.String;@5e01a982,[Ljava.lang.String;@5ddea849,[Ljava.lang.String;@5ee2b6f9),Annotation([Ljava.lang.String;@23d1e5d0,[Ljava.lang.String;@704f1591,[Ledu.cmu.lti.nlp.amr.Entity;@58fb7731))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,465 microseconds
Sentence: 嗯 ！ ” 国王 回答 道 ：

Oracle Span 1:  嗯 => 嗯
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  国王 => 国王
Spans:
Span 0-1:  嗯 => 嗯
Span 4-5:  回答 => 回答-01
Span 3-4:  国王 => 国王

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  嗯 => 嗯
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 3-4:  国王 => 国王

Dependencies:
1	嗯	_	PU	PU	_	2	punct	_	_
2	！	_	NN	NN	_	4	nn	_	_
3	”	_	PU	PU	_	2	punct	_	_
4	国王	_	NN	NN	_	5	nsubj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	道	_	NN	NN	_	5	dobj	_	_
7	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 国王)
(x0 / 回答-01, arg2, x3 / 嗯)

Input(Some(Graph((回答-01 :mode expressive :arg2 嗯 :arg0 国王),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(0,1,List(1),嗯,嗯,false), Span(3,4,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 嗯, 0 -> 回答-01),Map(x2 -> 国王, x3 -> 嗯, x0 -> 回答-01))),[Ljava.lang.String;@13e547a9,Annotation([Ljava.lang.String;@3fb6cf60,[Ljava.lang.String;@37ddb69a,[Ljava.lang.String;@349c1daf),Annotation([Ljava.lang.String;@dfddc9a,[Ljava.lang.String;@4b9df8a,[Ledu.cmu.lti.nlp.amr.Dependency;@5e8ac0e1),Annotation([Ljava.lang.String;@aafcffa,[Ljava.lang.String;@6955cb39,[Ljava.lang.String;@235a0c16),Annotation([Ljava.lang.String;@2b5f4d54,[Ljava.lang.String;@5f7b97da,[Ledu.cmu.lti.nlp.amr.Entity;@18b0930f))
AMR:
(x0 / 回答-01, ARG4, x2 / 国王)
(x0 / 回答-01, time, x3 / 嗯)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,355 microseconds
Sentence: “ 那么 我 … 命令 你 忽而 打哈欠 ， 忽而 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  命令 => 命令-01
Oracle Span 3:  忽而 => 忽而
Oracle Span 4:  我 => 我
Oracle Span 5:  打哈欠 => 打哈欠-01
Spans:
Span 5-6:  你 => 你
Span 4-5:  命令 => 命令-01
Span 6-7:  忽而 => 忽而
Span 2-3:  我 => 我
Span 7-8:  打哈欠 => 打哈欠-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 4-5:  命令 => 命令-01
Oracle Span 6-7:  忽而 => 忽而
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  打哈欠 => 打哈欠-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	我	_	PN	PN	_	0	root	_	_
4	…	_	PU	PU	_	10	punct	_	_
5	命令	_	NN	NN	_	10	nn	_	_
6	你	_	PN	PN	_	10	nn	_	_
7	忽而	_	NN	NN	_	8	nn	_	_
8	打哈欠	_	NN	NN	_	10	dep	_	_
9	,	_	PU	PU	_	10	punct	_	_
10	忽而	_	NR	NR	_	3	prnmod	_	_
11	…	_	PU	PU	_	10	punct	_	_
12	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 命令-01, arg0, x14 / 我)
(x13 / 命令-01, arg1, x15 / 你)
(x13 / 命令-01, arg2, x16 / 打哈欠-01)
(x16 / 打哈欠-01, time, x18 / 忽而)

Input(Some(Graph((say :arg1 (causation :arg2 (命令-01 :arg2 (打哈欠-01 :time 忽而 :arg0 x15) :arg1 你 :arg0 我))),ArrayBuffer(Span(4,5,List(0),命令,命令-01,false), Span(7,8,List(1),打哈欠,打哈欠-01,false), Span(6,7,List(2),忽而,忽而,false), Span(5,6,List(3),你,你,false), Span(2,3,List(4),我,我,false)),Map(2 -> 忽而, 1 -> 打哈欠-01, 4 -> 我, 0 -> 命令-01, 3 -> 你),Map(x16 -> 打哈欠-01, x13 -> 命令-01, x15 -> 你, x18 -> 忽而, x14 -> 我))),[Ljava.lang.String;@6b7906b3,Annotation([Ljava.lang.String;@3a1dd365,[Ljava.lang.String;@395b56bb,[Ljava.lang.String;@256f8274),Annotation([Ljava.lang.String;@68044f4,[Ljava.lang.String;@52d239ba,[Ledu.cmu.lti.nlp.amr.Dependency;@315f43d5),Annotation([Ljava.lang.String;@68fa0ba8,[Ljava.lang.String;@6c5945a7,[Ljava.lang.String;@2f05be7f),Annotation([Ljava.lang.String;@640f11a1,[Ljava.lang.String;@5c10f1c3,[Ledu.cmu.lti.nlp.amr.Entity;@7ac2e39b))
AMR:
(x13 / 命令-01, example, x14 / 我)
(x13 / 命令-01, example, x16 / 打哈欠-01)
(x13 / 命令-01, prep-through, x15 / 你)
(x16 / 打哈欠-01, time, x18 / 忽而)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 9,152 microseconds
Sentence: 他 嘟嘟囔囔 ， 显出 有点 恼怒 。

Oracle Span 1:  他 => 他
Oracle Span 2:  嘟嘟囔囔 => 嘟嘟囔囔
Oracle Span 3:  恼怒 => 恼怒-01
Oracle Span 4:  显出 => 显出-01
Oracle Span 5:  有点 => 有点
Spans:
Span 0-1:  他 => 他
Span 1-2:  嘟嘟囔囔 => 嘟嘟囔囔
Span 5-6:  恼怒 => 恼怒-01
Span 3-4:  显出 => 显出-01
Span 4-5:  有点 => 有点

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  嘟嘟囔囔 => 嘟嘟囔囔
Oracle Span 5-6:  恼怒 => 恼怒-01
Oracle Span 3-4:  显出 => 显出-01
Oracle Span 4-5:  有点 => 有点

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	嘟嘟囔囔	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	显出	_	VV	VV	_	2	ccomp	_	_
5	有点	_	NN	NN	_	6	nn	_	_
6	恼怒	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 嘟嘟囔囔, arg0, x3 / 他)
(x4 / 显出-01, arg1, x6 / 恼怒-01)
(x6 / 恼怒-01, degree, x7 / 有点)

Input(Some(Graph((and :op (嘟嘟囔囔 :arg0 他) :op (显出-01 :arg1 (恼怒-01 :arg0 x3 :degree 有点) :arg0 x3)),ArrayBuffer(Span(1,2,List(0),嘟嘟囔囔,嘟嘟囔囔,false), Span(0,1,List(1),他,他,false), Span(3,4,List(2),显出,显出-01,false), Span(5,6,List(3),恼怒,恼怒-01,false), Span(4,5,List(4),有点,有点,false)),Map(2 -> 显出-01, 1 -> 他, 4 -> 有点, 0 -> 嘟嘟囔囔, 3 -> 恼怒-01),Map(x2 -> 嘟嘟囔囔, x7 -> 有点, x4 -> 显出-01, x3 -> 他, x6 -> 恼怒-01))),[Ljava.lang.String;@78365cfa,Annotation([Ljava.lang.String;@64a8c844,[Ljava.lang.String;@3f6db3fb,[Ljava.lang.String;@52de51b6),Annotation([Ljava.lang.String;@18c5069b,[Ljava.lang.String;@3a0d172f,[Ledu.cmu.lti.nlp.amr.Dependency;@68ad99fe),Annotation([Ljava.lang.String;@485e36bc,[Ljava.lang.String;@781f10f2,[Ljava.lang.String;@2a79d4b1),Annotation([Ljava.lang.String;@2e9fda69,[Ljava.lang.String;@17cdf2d0,[Ledu.cmu.lti.nlp.amr.Entity;@1755e85b))
AMR:
(x2 / 嘟嘟囔囔, mod, x4 / 显出-01)
(x2 / 嘟嘟囔囔, prep-from, x3 / 他)
(x4 / 显出-01, prep-on-behalf, x6 / 恼怒-01)
(x6 / 恼怒-01, degree, x7 / 有点)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 8,771 microseconds
Sentence: 因为 国王 所 要求 的 主要 是 保持 他 的 威严 受到 尊敬 。

Oracle Span 1:  主要 => 主要-01
Oracle Span 2:  保持 => 保持-01
Oracle Span 3:  受到 => 受到-01
Oracle Span 4:  国王 => 国王
Oracle Span 5:  威严 => 威严-01
Oracle Span 6:  尊敬 => 尊敬-01
Oracle Span 7:  要求 => 要求-03
Spans:
Span 5-6:  主要 => 主要-01
Span 7-8:  保持 => 保持-01
Span 11-12:  受到 => 受到-01
Span 1-2:  国王 => 国王
Span 10-11:  威严 => 威严-01
Span 12-13:  尊敬 => 尊敬-01
Span 3-4:  要求 => 要求-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  主要 => 主要-01
Oracle Span 7-8:  保持 => 保持-01
Oracle Span 11-12:  受到 => 受到-01
Oracle Span 1-2:  国王 => 国王
Oracle Span 10-11:  威严 => 威严-01
Oracle Span 12-13:  尊敬 => 尊敬-01
Oracle Span 3-4:  要求 => 要求-03

Dependencies:
1	因为	_	P	P	_	12	prep	_	_
2	国王	_	NN	NN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	要求	_	VV	VV	_	7	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	主要	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	1	pccomp	_	_
8	保持	_	VV	VV	_	7	attr	_	_
9	他	_	PN	PN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	威严	_	AD	AD	_	12	advmod	_	_
12	受到	_	VV	VV	_	0	root	_	_
13	尊敬	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x11 / 受到-01, arg1, x12 / 尊敬-01)
(x2 / 要求-03, arg0, x3 / 国王)
(x2 / 要求-03, arg1, x4 / 保持-01)
(x4 / 保持-01, arg1, x6 / 威严-01)
(x4 / 保持-01, arg2, x11 / 受到-01)
(x4 / 保持-01, manner, x10 / 主要-01)

Input(Some(Graph((cause-01 :arg0 (要求-03 :arg1 (保持-01 :arg2 (受到-01 :arg1 尊敬-01) :manner 主要-01 :arg1 (威严-01 :arg0 x3)) :arg0 国王)),ArrayBuffer(Span(3,4,List(0),要求,要求-03,false), Span(7,8,List(1),保持,保持-01,false), Span(11,12,List(2),受到,受到-01,false), Span(12,13,List(3),尊敬,尊敬-01,false), Span(5,6,List(4),主要,主要-01,false), Span(10,11,List(5),威严,威严-01,false), Span(1,2,List(6),国王,国王,false)),Map(2 -> 受到-01, 5 -> 威严-01, 1 -> 保持-01, 4 -> 主要-01, 6 -> 国王, 0 -> 要求-03, 3 -> 尊敬-01),Map(x10 -> 主要-01, x2 -> 要求-03, x12 -> 尊敬-01, x4 -> 保持-01, x3 -> 国王, x11 -> 受到-01, x6 -> 威严-01))),[Ljava.lang.String;@736d6a5c,Annotation([Ljava.lang.String;@2371aaca,[Ljava.lang.String;@5b529706,[Ljava.lang.String;@63fdab07),Annotation([Ljava.lang.String;@7b5a12ae,[Ljava.lang.String;@5553d0f5,[Ledu.cmu.lti.nlp.amr.Dependency;@1af687fe),Annotation([Ljava.lang.String;@14dda234,[Ljava.lang.String;@3f390d63,[Ljava.lang.String;@74a6a609),Annotation([Ljava.lang.String;@5a411614,[Ljava.lang.String;@2374d36a,[Ledu.cmu.lti.nlp.amr.Entity;@54d18072))
AMR:
(x11 / 受到-01, prep-within, x12 / 尊敬-01)
(x2 / 要求-03, ARG3, x4 / 保持-01)
(x2 / 要求-03, op, x3 / 国王)
(x4 / 保持-01, manner, x10 / 主要-01)
(x4 / 保持-01, manner, x6 / 威严-01)
(x4 / 保持-01, time, x11 / 受到-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,454 microseconds
Sentence: 他 不 能 容忍 不 听 他 的 命令 。

Oracle Span 1:  他 => 他
Oracle Span 2:  听 => 听-02
Oracle Span 3:  命令 => 命令-01
Oracle Span 4:  容忍 => 容忍-01
Oracle Span 5:  能 => 能-01
Spans:
Span 0-1:  他 => 他
Span 5-6:  听 => 听-02
Span 8-9:  命令 => 命令-01
Span 3-4:  容忍 => 容忍-01
Span 2-3:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  听 => 听-02
Oracle Span 8-9:  命令 => 命令-01
Oracle Span 3-4:  容忍 => 容忍-01
Oracle Span 2-3:  能 => 能-01

Dependencies:
1	他	_	PN	PN	_	6	nsubj	_	_
2	不	_	AD	AD	_	6	neg	_	_
3	能	_	VV	VV	_	6	mmod	_	_
4	容忍	_	VV	VV	_	6	mmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	听	_	VV	VV	_	0	root	_	_
7	他	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	命令	_	NN	NN	_	6	dobj	_	_
10	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 能-01, arg0, x2 / 容忍-01)
(x2 / 容忍-01, arg0, x4 / 他)
(x2 / 容忍-01, arg1, x5 / 听-02)
(x5 / 听-02, arg1, x7 / 命令-01)

Input(Some(Graph((能-01 :polarity - :arg0 (容忍-01 :arg1 (听-02 :arg1 (命令-01 :poss x4) :polarity -) :arg0 他)),ArrayBuffer(Span(2,3,List(0),能,能-01,false), Span(3,4,List(1),容忍,容忍-01,false), Span(5,6,List(2),听,听-02,false), Span(8,9,List(3),命令,命令-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 听-02, 1 -> 容忍-01, 4 -> 他, 0 -> 能-01, 3 -> 命令-01),Map(x2 -> 容忍-01, x5 -> 听-02, x7 -> 命令-01, x4 -> 他, x0 -> 能-01))),[Ljava.lang.String;@1506f20f,Annotation([Ljava.lang.String;@47a5b70d,[Ljava.lang.String;@424fd310,[Ljava.lang.String;@1a45193b),Annotation([Ljava.lang.String;@38f116f6,[Ljava.lang.String;@5286c33a,[Ledu.cmu.lti.nlp.amr.Dependency;@6e6d5d29),Annotation([Ljava.lang.String;@5c530d1e,[Ljava.lang.String;@6c25e6c4,[Ljava.lang.String;@85e6769),Annotation([Ljava.lang.String;@c5ee75e,[Ljava.lang.String;@48a12036,[Ledu.cmu.lti.nlp.amr.Entity;@bf1ec20))
AMR:
(x0 / 能-01, ARG0, x2 / 容忍-01)
(x2 / 容忍-01, example, x4 / 他)
(x2 / 容忍-01, snt5, x5 / 听-02)
(x5 / 听-02, snt3, x7 / 命令-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,882 microseconds
Sentence: 他 是 一 位 绝对 的 君主 。

Oracle Span 1:  他 => 他
Oracle Span 2:  君主 => 君主
Oracle Span 3:  绝对 => 绝对-01
Spans:
Span 0-1:  他 => 他
Span 6-7:  君主 => 君主
Span 4-5:  绝对 => 绝对-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  君主 => 君主
Oracle Span 4-5:  绝对 => 绝对-01

Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	位	_	M	M	_	7	clf	_	_
5	绝对	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	君主	_	NN	NN	_	2	attr	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 君主, domain, x4 / 他)
(x0 / 君主, mod, x2 / 绝对-01)

Input(Some(Graph((君主 :domain 他 :quant 1 :mod 绝对-01),ArrayBuffer(Span(6,7,List(0),君主,君主,false), Span(0,1,List(1),他,他,false), Span(4,5,List(2),绝对,绝对-01,false)),Map(2 -> 绝对-01, 1 -> 他, 0 -> 君主),Map(x2 -> 绝对-01, x4 -> 他, x0 -> 君主))),[Ljava.lang.String;@70efb718,Annotation([Ljava.lang.String;@b70da4c,[Ljava.lang.String;@4a11eb84,[Ljava.lang.String;@4e858e0a),Annotation([Ljava.lang.String;@435fb7b5,[Ljava.lang.String;@4e70a728,[Ledu.cmu.lti.nlp.amr.Dependency;@b7838a9),Annotation([Ljava.lang.String;@696f0212,[Ljava.lang.String;@5733f295,[Ljava.lang.String;@1c3146bc),Annotation([Ljava.lang.String;@56c698e3,[Ljava.lang.String;@47a86fbb,[Ledu.cmu.lti.nlp.amr.Entity;@f478a81))
AMR:
(x0 / 君主, domain, x4 / 他)
(x0 / 君主, mod, x2 / 绝对-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,452 microseconds
Sentence: 可是 ， 他 却 很 善良 ， 他 下 的 命令 都 是 有 理智 的 。

Oracle Span 1:  他 => 他
Oracle Span 2:  命令 => 命令-01
Oracle Span 3:  善良 => 善良-01
Oracle Span 4:  很 => 很
Oracle Span 5:  理智 => 理智-01
Oracle Span 6:  都 => 都
Spans:
Span 2-3:  他 => 他
Span 10-11:  命令 => 命令-01
Span 5-6:  善良 => 善良-01
Span 4-5:  很 => 很
Span 14-15:  理智 => 理智-01
Span 11-12:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 10-11:  命令 => 命令-01
Oracle Span 5-6:  善良 => 善良-01
Oracle Span 4-5:  很 => 很
Oracle Span 14-15:  理智 => 理智-01
Oracle Span 11-12:  都 => 都

Dependencies:
1	可是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	却	_	AD	AD	_	6	advmod	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	善良	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	他	_	PN	PN	_	9	lobj	_	_
9	下	_	LC	LC	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	命令	_	NN	NN	_	13	nsubj	_	_
12	都	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	6	ccomp	_	_
14	有	_	VE	VE	_	13	attr	_	_
15	理智	_	VA	VA	_	14	dep	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 善良-01, arg0, x14 / 他)
(x12 / 善良-01, degree, x13 / 很)
(x15 / 理智-01, arg0, x16 / 命令-01)
(x15 / 理智-01, manner, x18 / 都)

Input(Some(Graph((contrast :arg2 (and :op (善良-01 :arg0 他 :degree 很) :op (理智-01 :manner 都 :arg0 (命令-01 :arg0 x14)))),ArrayBuffer(Span(5,6,List(0),善良,善良-01,false), Span(2,3,List(1),他,他,false), Span(4,5,List(2),很,很,false), Span(14,15,List(3),理智,理智-01,false), Span(11,12,List(4),都,都,false), Span(10,11,List(5),命令,命令-01,false)),Map(2 -> 很, 5 -> 命令-01, 1 -> 他, 4 -> 都, 0 -> 善良-01, 3 -> 理智-01),Map(x16 -> 命令-01, x13 -> 很, x12 -> 善良-01, x15 -> 理智-01, x18 -> 都, x14 -> 他))),[Ljava.lang.String;@19553973,Annotation([Ljava.lang.String;@7bb6ab3a,[Ljava.lang.String;@7fe7c640,[Ljava.lang.String;@4c4748bf),Annotation([Ljava.lang.String;@7ce97ee5,[Ljava.lang.String;@32c8e539,[Ledu.cmu.lti.nlp.amr.Dependency;@73dce0e6),Annotation([Ljava.lang.String;@5a85c92,[Ljava.lang.String;@32811494,[Ljava.lang.String;@4795ded0),Annotation([Ljava.lang.String;@53dacd14,[Ljava.lang.String;@14d14731,[Ledu.cmu.lti.nlp.amr.Entity;@2eced48b))
AMR:
(x12 / 善良-01, degree, x13 / 很)
(x12 / 善良-01, mode, x14 / 他)
(x15 / 理智-01, manner, x18 / 都)
(x15 / 理智-01, time, x16 / 命令-01)
(x18 / 都, snt3, x12 / 善良-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 15,200 microseconds
Sentence: 他 常常 说 ： “ 如果 我 叫 一 位 将军 变成 一 只 海鸟 ， 而 这 位 将军 不 服从 我 的 命令 ， 那么 这 就 不 是 将军 的 过错 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  变成 => 变成-01
Oracle Span 3:  叫 => 叫-04
Oracle Span 4:  命令 => 命令-01
Oracle Span 5:  将军 => 将军
Oracle Span 6:  就 => 就
Oracle Span 7:  常常 => 常常
Oracle Span 8:  服从 => 服从-01
Oracle Span 9:  海鸟 => 海鸟
Oracle Span 10:  说 => 说-01
Oracle Span 11:  过错 => 过错
Oracle Span 12:  这 => 这
Spans:
Span 0-1:  他 => 他
Span 11-12:  变成 => 变成-01
Span 7-8:  叫 => 叫-04
Span 24-25:  命令 => 命令-01
Span 10-11:  将军 => 将军
Span 28-29:  就 => 就
Span 1-2:  常常 => 常常
Span 21-22:  服从 => 服从-01
Span 14-15:  海鸟 => 海鸟
Span 2-3:  说 => 说-01
Span 33-34:  过错 => 过错
Span 17-18:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 11-12:  变成 => 变成-01
Oracle Span 7-8:  叫 => 叫-04
Oracle Span 24-25:  命令 => 命令-01
Oracle Span 10-11:  将军 => 将军
Oracle Span 28-29:  就 => 就
Oracle Span 1-2:  常常 => 常常
Oracle Span 21-22:  服从 => 服从-01
Oracle Span 14-15:  海鸟 => 海鸟
Oracle Span 2-3:  说 => 说-01
Oracle Span 33-34:  过错 => 过错
Oracle Span 17-18:  这 => 这

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	常常	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	31	punct	_	_
6	如果	_	CS	CS	_	8	advmod	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	叫	_	VV	VV	_	31	pccomp	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	位	_	M	M	_	11	clf	_	_
11	将军	_	NN	NN	_	12	nsubj	_	_
12	变成	_	VV	VV	_	8	ccomp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	只	_	M	M	_	15	clf	_	_
15	海鸟	_	NN	NN	_	12	dobj	_	_
16	,	_	PU	PU	_	12	punct	_	_
17	而	_	AD	AD	_	22	advmod	_	_
18	这	_	DT	DT	_	20	det	_	_
19	位	_	M	M	_	18	clf	_	_
20	将军	_	NN	NN	_	22	nsubj	_	_
21	不	_	AD	AD	_	22	neg	_	_
22	服从	_	VV	VV	_	12	conj	_	_
23	我	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	命令	_	NN	NN	_	22	dobj	_	_
26	,	_	PU	PU	_	31	punct	_	_
27	那么	_	AD	AD	_	31	advmod	_	_
28	这	_	PN	PN	_	31	nsubj	_	_
29	就	_	AD	AD	_	31	advmod	_	_
30	不	_	AD	AD	_	31	neg	_	_
31	是	_	VC	VC	_	3	ccomp	_	_
32	将军	_	NN	NN	_	34	assmod	_	_
33	的	_	DEG	DEG	_	32	assm	_	_
34	过错	_	NN	NN	_	31	attr	_	_
35	,	_	PU	PU	_	31	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 他)
(x0 / 说-01, frequency, x2 / 常常)
(x21 / 过错, domain, x26 / 这)
(x28 / 叫-04, arg1, x32 / 将军)
(x28 / 叫-04, arg2, x34 / 变成-01)
(x34 / 变成-01, arg2, x35 / 海鸟)
(x37 / 服从-01, arg1, x40 / 命令-01)

Input(Some(Graph((说-01 :arg1 (condition :arg2 (过错 :poss x32 :domain 这 :polarity (- :manner 就)) :arg1 (contrast :arg1 (叫-04 :arg2 (变成-01 :arg2 (海鸟 :quant 1)) :arg1 (将军 :quant 1) :arg0 x3) :arg2 (服从-01 :arg1 (命令-01 :poss x3) :arg0 x32 :polarity -))) :arg0 他 :frequency 常常),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(33,34,List(1),过错,过错,false), Span(17,18,List(2),这,这,false), Span(28,29,List(3),就,就,false), Span(7,8,List(4),叫,叫-04,false), Span(11,12,List(5),变成,变成-01,false), Span(14,15,List(6),海鸟,海鸟,false), Span(10,11,List(7),将军,将军,false), Span(21,22,List(8),服从,服从-01,false), Span(24,25,List(9),命令,命令-01,false), Span(0,1,List(10),他,他,false), Span(1,2,List(11),常常,常常,false)),Map(2 -> 这, 5 -> 变成-01, 8 -> 服从-01, 7 -> 将军, 1 -> 过错, 4 -> 叫-04, 11 -> 常常, 6 -> 海鸟, 9 -> 命令-01, 0 -> 说-01, 10 -> 他, 3 -> 就),Map(x34 -> 变成-01, x28 -> 叫-04, x40 -> 命令-01, x37 -> 服从-01, x25 -> 就, x2 -> 常常, x21 -> 过错, x32 -> 将军, x26 -> 这, x3 -> 他, x35 -> 海鸟, x0 -> 说-01))),[Ljava.lang.String;@47c4ecdc,Annotation([Ljava.lang.String;@42f33b5d,[Ljava.lang.String;@5c8504fd,[Ljava.lang.String;@4b7e96a),Annotation([Ljava.lang.String;@6475472c,[Ljava.lang.String;@3f07b12c,[Ledu.cmu.lti.nlp.amr.Dependency;@4bd1f8dd),Annotation([Ljava.lang.String;@7096b474,[Ljava.lang.String;@3e14c16d,[Ljava.lang.String;@3c989952),Annotation([Ljava.lang.String;@784b990c,[Ljava.lang.String;@3d3ba765,[Ledu.cmu.lti.nlp.amr.Entity;@25bc0606))
AMR:
(x0 / 说-01, frequency, x2 / 常常)
(x2 / 常常, quant, x3 / 他)
(x28 / 叫-04, degree, x0 / 说-01)
(x28 / 叫-04, topic, x34 / 变成-01)
(x34 / 变成-01, degree, x32 / 将军)
(x34 / 变成-01, prep-following, x35 / 海鸟)
(x37 / 服从-01, degree, x34 / 变成-01)
(x37 / 服从-01, prep-following, x26 / 这)
(x40 / 命令-01, location, x21 / 过错)
(x40 / 命令-01, manner, x25 / 就)
(x40 / 命令-01, prep-following, x37 / 服从-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0.0
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.2
WARNING: makeIds can't find span Id: 0.2.1.0.2.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.1.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 46,440 microseconds
Sentence: 而 是 我 的 过错 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  过错 => 过错
Spans:
Span 2-3:  我 => 我
Span 4-5:  过错 => 过错

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  过错 => 过错

Dependencies:
1	而	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	过错	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 过错, poss, x8 / 我)

Input(Some(Graph((say :arg1 (contrast :arg2 (过错 :poss 我))),ArrayBuffer(Span(4,5,List(0),过错,过错,false), Span(2,3,List(1),我,我,false)),Map(1 -> 我, 0 -> 过错),Map(x8 -> 我, x7 -> 过错))),[Ljava.lang.String;@5d1659ea,Annotation([Ljava.lang.String;@793138bd,[Ljava.lang.String;@1951b871,[Ljava.lang.String;@5c18016b),Annotation([Ljava.lang.String;@33aeca0b,[Ljava.lang.String;@43aaf813,[Ledu.cmu.lti.nlp.amr.Dependency;@57ac5227),Annotation([Ljava.lang.String;@4ba302e0,[Ljava.lang.String;@e98770d,[Ljava.lang.String;@1ae67cad),Annotation([Ljava.lang.String;@2f6e28bc,[Ljava.lang.String;@7c098bb3,[Ledu.cmu.lti.nlp.amr.Entity;@31e4bb20))
AMR:
(x7 / 过错, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 3,091 microseconds
Sentence: 小 王子 腼腆 地 试探 道 ： “ 我 可以 坐下 吗 ？ ”

Oracle Span 1:  可以 => 可以-02
Oracle Span 2:  坐下 => 坐下-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  腼腆 => 腼腆-01
Oracle Span 6:  试探 => 试探-01
Oracle Span 7:  道 => 道-01
Spans:
Span 9-10:  可以 => 可以-02
Span 10-11:  坐下 => 坐下-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 2-3:  腼腆 => 腼腆-01
Span 4-5:  试探 => 试探-01
Span 5-6:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  可以 => 可以-02
Oracle Span 10-11:  坐下 => 坐下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  腼腆 => 腼腆-01
Oracle Span 4-5:  试探 => 试探-01
Oracle Span 5-6:  道 => 道-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	腼腆	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	试探	_	VV	VV	_	0	root	_	_
6	道	_	VV	VV	_	5	dep	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	可以	_	VV	VV	_	11	dep	_	_
11	坐下	_	VV	VV	_	6	ccomp	_	_
12	吗	_	SP	SP	_	5	dep	_	_
13	？	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x25 / 试探-01, arg0, x26 / 王子)
(x25 / 试探-01, manner, x28 / 腼腆-01)
(x26 / 王子, mod, x27 / 小-01)
(x29 / 道-01, arg1, x31 / 可以-02)
(x31 / 可以-02, arg0, x32 / 坐下-01)

Input(Some(Graph((and :op (试探-01 :manner 腼腆-01 :arg0 (王子 :mod 小-01)) :op (道-01 :arg1 (可以-02 :arg0 (坐下-01 :mode interrogative :arg0 x26)) :arg0 x26)),ArrayBuffer(Span(4,5,List(0),试探,试探-01,false), Span(2,3,List(1),腼腆,腼腆-01,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(5,6,List(4),道,道-01,false), Span(9,10,List(5),可以,可以-02,false), Span(10,11,List(6),坐下,坐下-01,false)),Map(2 -> 王子, 5 -> 可以-02, 1 -> 腼腆-01, 4 -> 道-01, 6 -> 坐下-01, 0 -> 试探-01, 3 -> 小-01),Map(x28 -> 腼腆-01, x31 -> 可以-02, x25 -> 试探-01, x27 -> 小-01, x32 -> 坐下-01, x26 -> 王子, x29 -> 道-01))),[Ljava.lang.String;@18cebaa5,Annotation([Ljava.lang.String;@463b4ac8,[Ljava.lang.String;@765f05af,[Ljava.lang.String;@62f68dff),Annotation([Ljava.lang.String;@f001896,[Ljava.lang.String;@13f17eb4,[Ledu.cmu.lti.nlp.amr.Dependency;@1d0d6318),Annotation([Ljava.lang.String;@4bc28c33,[Ljava.lang.String;@4409e975,[Ljava.lang.String;@5c153b9e),Annotation([Ljava.lang.String;@2a7686a7,[Ljava.lang.String;@758a34ce,[Ledu.cmu.lti.nlp.amr.Entity;@7ec3394b))
AMR:
(x25 / 试探-01, manner, x28 / 腼腆-01)
(x26 / 王子, mod, x27 / 小-01)
(x28 / 腼腆-01, value, x26 / 王子)
(x29 / 道-01, manner, x25 / 试探-01)
(x29 / 道-01, purpose, x31 / 可以-02)
(x31 / 可以-02, ARG6, x32 / 坐下-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 14,687 microseconds
Sentence: “ 我 命令 你 坐下 。 ” 国王 一边 回答 ， 一边 庄重 地 把 他 那 白 底 黑 花 皮袍 大襟 挪动 了 一下 。

Oracle Span 1:  你 => 你
Oracle Span 2:  命令 => 命令-01
Oracle Span 3:  回答 => 回答-01
Oracle Span 4:  国王 => 国王
Oracle Span 5:  坐下 => 坐下-01
Oracle Span 6:  大襟 => 大襟
Oracle Span 7:  庄重 => 庄重
Oracle Span 8:  挪动 => 挪动-01
Oracle Span 9:  皮袍 => 皮袍
Spans:
Span 3-4:  你 => 你
Span 2-3:  命令 => 命令-01
Span 9-10:  回答 => 回答-01
Span 7-8:  国王 => 国王
Span 4-5:  坐下 => 坐下-01
Span 22-23:  大襟 => 大襟
Span 12-13:  庄重 => 庄重
Span 23-24:  挪动 => 挪动-01
Span 21-22:  皮袍 => 皮袍

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 2-3:  命令 => 命令-01
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 7-8:  国王 => 国王
Oracle Span 4-5:  坐下 => 坐下-01
Oracle Span 22-23:  大襟 => 大襟
Oracle Span 12-13:  庄重 => 庄重
Oracle Span 23-24:  挪动 => 挪动-01
Oracle Span 21-22:  皮袍 => 皮袍

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	命令	_	NN	NN	_	5	dep	_	_
4	你	_	PN	PN	_	5	prep	_	_
5	坐下	_	VV	VV	_	8	vmod	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	国王	_	NN	NN	_	10	nsubj	_	_
9	一边	_	CD	CD	_	10	nsubj	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	一边	_	CD	CD	_	24	nsubj	_	_
13	庄重	_	VA	VA	_	24	dvpmod	_	_
14	地	_	DEV	DEV	_	13	dvpm	_	_
15	把	_	BA	BA	_	24	ba	_	_
16	他	_	PN	PN	_	19	nn	_	_
17	那	_	DT	DT	_	19	det	_	_
18	白	_	JJ	JJ	_	19	amod	_	_
19	底	_	NN	NN	_	21	nn	_	_
20	黑	_	JJ	JJ	_	21	amod	_	_
21	花	_	NN	NN	_	23	nn	_	_
22	皮袍	_	NN	NN	_	23	nn	_	_
23	大襟	_	NN	NN	_	24	nsubj	_	_
24	挪动	_	VV	VV	_	10	conj	_	_
25	了	_	AS	AS	_	24	asp	_	_
26	一下	_	AD	AD	_	24	advmod	_	_
27	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x26 / 回答-01, arg0, x27 / 国王)
(x26 / 回答-01, arg2, x28 / 命令-01)
(x28 / 命令-01, arg1, x30 / 你)
(x28 / 命令-01, arg1, x31 / 坐下-01)
(x32 / 挪动-01, arg1, x35 / 大襟)
(x32 / 挪动-01, manner, x34 / 庄重)
(x35 / 大襟, mod, x36 / 皮袍)

Input(Some(Graph((and :op (回答-01 :arg2 (命令-01 :arg1 坐下-01 :arg1 你 :arg0 x27) :arg0 国王) :op (挪动-01 :arg1 (大襟 :mod (皮袍 :poss x27 :mod (and :op 白底 :op 黑花))) :manner 庄重 :arg0 x27)),ArrayBuffer(Span(9,10,List(0),回答,回答-01,false), Span(2,3,List(1),命令,命令-01,false), Span(4,5,List(2),坐下,坐下-01,false), Span(3,4,List(3),你,你,false), Span(7,8,List(4),国王,国王,false), Span(23,24,List(5),挪动,挪动-01,false), Span(22,23,List(6),大襟,大襟,false), Span(21,22,List(7),皮袍,皮袍,false), Span(12,13,List(8),庄重,庄重,false)),Map(2 -> 坐下-01, 5 -> 挪动-01, 8 -> 庄重, 7 -> 皮袍, 1 -> 命令-01, 4 -> 国王, 6 -> 大襟, 0 -> 回答-01, 3 -> 你),Map(x34 -> 庄重, x28 -> 命令-01, x31 -> 坐下-01, x30 -> 你, x27 -> 国王, x36 -> 皮袍, x32 -> 挪动-01, x26 -> 回答-01, x35 -> 大襟))),[Ljava.lang.String;@bff34c6,Annotation([Ljava.lang.String;@1522d8a0,[Ljava.lang.String;@312ab28e,[Ljava.lang.String;@5644dc81),Annotation([Ljava.lang.String;@246f8b8b,[Ljava.lang.String;@278bb07e,[Ledu.cmu.lti.nlp.amr.Dependency;@4351c8c3),Annotation([Ljava.lang.String;@3381b4fc,[Ljava.lang.String;@6bea52d4,[Ljava.lang.String;@11981797),Annotation([Ljava.lang.String;@5c42d2b7,[Ljava.lang.String;@625abb97,[Ledu.cmu.lti.nlp.amr.Entity;@5b1f29fa))
AMR:
(x26 / 回答-01, location, x27 / 国王)
(x26 / 回答-01, manner, x34 / 庄重)
(x27 / 国王, mod, x31 / 坐下-01)
(x28 / 命令-01, prep-through, x31 / 坐下-01)
(x31 / 坐下-01, degree, x30 / 你)
(x32 / 挪动-01, location, x35 / 大襟)
(x32 / 挪动-01, manner, x34 / 庄重)
(x35 / 大襟, mod, x36 / 皮袍)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 39,347 microseconds
Sentence: 可是 小 王子 感到 很 奇怪 。

Oracle Span 1:  奇怪 => 奇怪-02
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  王子 => 王子
Spans:
Span 5-6:  奇怪 => 奇怪-02
Span 1-2:  小 => 小-01
Span 4-5:  很 => 很
Span 3-4:  感到 => 感到-01
Span 2-3:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  奇怪 => 奇怪-02
Oracle Span 1-2:  小 => 小-01
Oracle Span 4-5:  很 => 很
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 2-3:  王子 => 王子

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	4	nsubj	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	奇怪	_	VA	VA	_	4	ccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	王子	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x2 / 感到-01, arg0, x3 / 王子)
(x2 / 感到-01, arg1, x5 / 奇怪-02)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 奇怪-02, degree, x6 / 很)

Input(Some(Graph((contrast :arg2 (感到-01 :arg1 (奇怪-02 :degree 很) :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(3,4,List(0),感到,感到-01,false), Span(5,6,List(1),奇怪,奇怪-02,false), Span(4,5,List(2),很,很,false), Span(2,3,List(3),王子,王子,false), Span(1,2,List(4),小,小-01,false)),Map(2 -> 很, 1 -> 奇怪-02, 4 -> 小-01, 0 -> 感到-01, 3 -> 王子),Map(x2 -> 感到-01, x5 -> 奇怪-02, x4 -> 小-01, x3 -> 王子, x6 -> 很))),[Ljava.lang.String;@aeab9a1,Annotation([Ljava.lang.String;@40f70521,[Ljava.lang.String;@774698ab,[Ljava.lang.String;@55342f40),Annotation([Ljava.lang.String;@a4ca3f6,[Ljava.lang.String;@72ea6193,[Ledu.cmu.lti.nlp.amr.Dependency;@31aa3ca5),Annotation([Ljava.lang.String;@45905bff,[Ljava.lang.String;@2a2c13a8,[Ljava.lang.String;@b6b1987),Annotation([Ljava.lang.String;@6b44435b,[Ljava.lang.String;@2ccca26f,[Ledu.cmu.lti.nlp.amr.Entity;@66b7550d))
AMR:
(x2 / 感到-01, example, x3 / 王子)
(x2 / 感到-01, example, x5 / 奇怪-02)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 奇怪-02, degree, x6 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,277 microseconds
Sentence: 这么 小 的 行星 ，

Oracle Span 1:  小 => 小-01
Oracle Span 2:  行星 => 行星
Oracle Span 3:  这么 => 这么
Spans:
Span 1-2:  小 => 小-01
Span 3-4:  行星 => 行星
Span 0-1:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  行星 => 行星
Oracle Span 0-1:  这么 => 这么

Dependencies:
1	这么	_	AD	AD	_	2	advmod	_	_
2	小	_	VA	VA	_	4	nsubj	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	行星	_	NN	NN	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 行星, mod, x2 / 小-01)
(x2 / 小-01, degree, x3 / 这么)

Input(Some(Graph((行星 :mod (小-01 :degree 这么)),ArrayBuffer(Span(3,4,List(0),行星,行星,false), Span(1,2,List(1),小,小-01,false), Span(0,1,List(2),这么,这么,false)),Map(2 -> 这么, 1 -> 小-01, 0 -> 行星),Map(x2 -> 小-01, x3 -> 这么, x0 -> 行星))),[Ljava.lang.String;@3543df7d,Annotation([Ljava.lang.String;@7c541c15,[Ljava.lang.String;@3542162a,[Ljava.lang.String;@698122b2),Annotation([Ljava.lang.String;@4212a0c8,[Ljava.lang.String;@1e7aa82b,[Ledu.cmu.lti.nlp.amr.Dependency;@3b2c0e88),Annotation([Ljava.lang.String;@5bd82fed,[Ljava.lang.String;@c1bd0be,[Ljava.lang.String;@476b0ae6),Annotation([Ljava.lang.String;@1c6804cd,[Ljava.lang.String;@655f7ea,[Ledu.cmu.lti.nlp.amr.Entity;@549949be))
AMR:
(x0 / 行星, mod, x2 / 小-01)
(x2 / 小-01, degree, x3 / 这么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,511 microseconds
Sentence: 国王 他 对 什么 进行 统治 呢 ？

Oracle Span 1:  国王 => 国王
Oracle Span 2:  统治 => 统治-01
Oracle Span 3:  进行 => 进行-01
Spans:
Span 0-1:  国王 => 国王
Span 5-6:  统治 => 统治-01
Span 4-5:  进行 => 进行-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 5-6:  统治 => 统治-01
Oracle Span 4-5:  进行 => 进行-01

Dependencies:
1	国王	_	NN	NN	_	5	nsubj	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	什么	_	PN	PN	_	3	pobj	_	_
5	进行	_	VV	VV	_	0	root	_	_
6	统治	_	NN	NN	_	5	dobj	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x4 / 进行-01, arg0, x6 / 国王)
(x4 / 进行-01, arg1, x7 / 统治-01)

Input(Some(Graph((进行-01 :mode interrogative :arg1 (统治-01 :arg1 amr-unknown :arg0 x6) :arg0 国王),ArrayBuffer(Span(4,5,List(0),进行,进行-01,false), Span(5,6,List(1),统治,统治-01,false), Span(0,1,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 统治-01, 0 -> 进行-01),Map(x7 -> 统治-01, x4 -> 进行-01, x6 -> 国王))),[Ljava.lang.String;@4b3a45f1,Annotation([Ljava.lang.String;@17a87e37,[Ljava.lang.String;@3eeb318f,[Ljava.lang.String;@20a14b55),Annotation([Ljava.lang.String;@39ad977d,[Ljava.lang.String;@6da00fb9,[Ledu.cmu.lti.nlp.amr.Dependency;@a202ccb),Annotation([Ljava.lang.String;@20f12539,[Ljava.lang.String;@75b25825,[Ljava.lang.String;@18025ced),Annotation([Ljava.lang.String;@13cf7d52,[Ljava.lang.String;@3a3e4aff,[Ledu.cmu.lti.nlp.amr.Entity;@5d2a4eed))
AMR:
(x4 / 进行-01, name, x7 / 统治-01)
(x4 / 进行-01, time, x6 / 国王)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,841 microseconds
Sentence: 他 对 国王 说 ： “ 陛下 … 请 原谅 ， 我 想 问 您 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  原谅 => 原谅-01
Oracle Span 3:  国王 => 国王
Oracle Span 4:  想 => 想-02
Oracle Span 5:  说 => 说-02
Oracle Span 6:  请 => 请-03
Oracle Span 7:  问 => 问-01
Spans:
Span 0-1:  他 => 他
Span 9-10:  原谅 => 原谅-01
Span 2-3:  国王 => 国王
Span 12-13:  想 => 想-02
Span 3-4:  说 => 说-02
Span 8-9:  请 => 请-03
Span 13-14:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  原谅 => 原谅-01
Oracle Span 2-3:  国王 => 国王
Oracle Span 12-13:  想 => 想-02
Oracle Span 3-4:  说 => 说-02
Oracle Span 8-9:  请 => 请-03
Oracle Span 13-14:  问 => 问-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	国王	_	NN	NN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	7	punct	_	_
7	陛下	_	NN	NN	_	4	ccomp	_	_
8	…	_	PU	PU	_	15	punct	_	_
9	请	_	VV	VV	_	10	dep	_	_
10	原谅	_	VV	VV	_	13	dep	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	我	_	PN	PN	_	13	nsubj	_	_
13	想	_	VV	VV	_	14	rcmod	_	_
14	问	_	NN	NN	_	15	nn	_	_
15	您	_	PN	PN	_	7	prnmod	_	_
16	…	_	PU	PU	_	15	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-02, arg0, x3 / 他)
(x0 / 说-02, arg1, x16 / 请-03)
(x0 / 说-02, arg3, x4 / 国王)
(x16 / 请-03, arg0, x17 / 原谅-01)
(x17 / 原谅-01, arg1, x19 / 想-02)
(x19 / 想-02, arg1, x21 / 问-01)

Input(Some(Graph((说-02 :arg1 (请-03 :arg0 (原谅-01 :arg1 (想-02 :arg1 (问-01 :arg1 x4 :arg0 x3) :arg0 x3) :arg0 x4)) :arg3 国王 :arg0 他),ArrayBuffer(Span(3,4,List(0),说,说-02,false), Span(8,9,List(1),请,请-03,false), Span(9,10,List(2),原谅,原谅-01,false), Span(12,13,List(3),想,想-02,false), Span(13,14,List(4),问,问-01,false), Span(2,3,List(5),国王,国王,false), Span(0,1,List(6),他,他,false)),Map(2 -> 原谅-01, 5 -> 国王, 1 -> 请-03, 4 -> 问-01, 6 -> 他, 0 -> 说-02, 3 -> 想-02),Map(x16 -> 请-03, x19 -> 想-02, x21 -> 问-01, x4 -> 国王, x3 -> 他, x17 -> 原谅-01, x0 -> 说-02))),[Ljava.lang.String;@57459491,Annotation([Ljava.lang.String;@3f0846c6,[Ljava.lang.String;@77a98a6a,[Ljava.lang.String;@78fbff54),Annotation([Ljava.lang.String;@3e10dc6,[Ljava.lang.String;@7e22550a,[Ledu.cmu.lti.nlp.amr.Dependency;@45e37a7e),Annotation([Ljava.lang.String;@62452cc9,[Ljava.lang.String;@6941827a,[Ljava.lang.String;@5a7005d),Annotation([Ljava.lang.String;@5bc9ba1d,[Ljava.lang.String;@1021f6c9,[Ledu.cmu.lti.nlp.amr.Entity;@7516e4e5))
AMR:
(x0 / 说-02, direction, x4 / 国王)
(x0 / 说-02, prep-following, x3 / 他)
(x16 / 请-03, ARG3, x17 / 原谅-01)
(x16 / 请-03, time, x0 / 说-02)
(x19 / 想-02, prep-following, x21 / 问-01)
(x19 / 想-02, time, x17 / 原谅-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,807 microseconds
Sentence: 国王 急忙 抢 着 说道 ： “ 我 命令 你 问 我 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  命令 => 命令-01
Oracle Span 3:  国王 => 国王
Oracle Span 4:  急忙 => 急忙
Oracle Span 5:  抢 => 抢-02
Oracle Span 6:  说道 => 说道-01
Oracle Span 7:  问 => 问-01
Spans:
Span 9-10:  你 => 你
Span 8-9:  命令 => 命令-01
Span 0-1:  国王 => 国王
Span 1-2:  急忙 => 急忙
Span 2-3:  抢 => 抢-02
Span 4-5:  说道 => 说道-01
Span 10-11:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  你 => 你
Oracle Span 8-9:  命令 => 命令-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 1-2:  急忙 => 急忙
Oracle Span 2-3:  抢 => 抢-02
Oracle Span 4-5:  说道 => 说道-01
Oracle Span 10-11:  问 => 问-01

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	急忙	_	VV	VV	_	0	root	_	_
3	抢	_	VV	VV	_	2	ccomp	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	说道	_	NN	NN	_	3	dobj	_	_
6	：	_	PU	PU	_	2	punct	_	_
7	“	_	PU	PU	_	2	punct	_	_
8	我	_	PN	PN	_	9	nsubj	_	_
9	命令	_	VV	VV	_	2	conj	_	_
10	你	_	PN	PN	_	11	nsubj	_	_
11	问	_	VV	VV	_	9	ccomp	_	_
12	我	_	PN	PN	_	11	ccomp	_	_
13	。	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 抢-02, arg0, x4 / 国王)
(x2 / 抢-02, arg1, x6 / 说道-01)
(x2 / 抢-02, manner, x5 / 急忙)
(x6 / 说道-01, arg1, x8 / 命令-01)
(x8 / 命令-01, arg1, x10 / 你)
(x8 / 命令-01, arg2, x11 / 问-01)

Input(Some(Graph((抢-02 :arg1 (说道-01 :arg1 (命令-01 :arg2 (问-01 :arg0 x10 :arg2 x4) :arg1 你 :arg0 x4) :arg0 x4) :manner 急忙 :arg0 国王),ArrayBuffer(Span(2,3,List(0),抢,抢-02,false), Span(4,5,List(1),说道,说道-01,false), Span(8,9,List(2),命令,命令-01,false), Span(10,11,List(3),问,问-01,false), Span(9,10,List(4),你,你,false), Span(1,2,List(5),急忙,急忙,false), Span(0,1,List(6),国王,国王,false)),Map(2 -> 命令-01, 5 -> 急忙, 1 -> 说道-01, 4 -> 你, 6 -> 国王, 0 -> 抢-02, 3 -> 问-01),Map(x10 -> 你, x2 -> 抢-02, x5 -> 急忙, x8 -> 命令-01, x4 -> 国王, x11 -> 问-01, x6 -> 说道-01))),[Ljava.lang.String;@488eb7f2,Annotation([Ljava.lang.String;@5e81e5ac,[Ljava.lang.String;@4189d70b,[Ljava.lang.String;@3fa2213),Annotation([Ljava.lang.String;@3e7634b9,[Ljava.lang.String;@6f0b0a5e,[Ledu.cmu.lti.nlp.amr.Dependency;@6035b93b),Annotation([Ljava.lang.String;@320de594,[Ljava.lang.String;@3dd1dc90,[Ljava.lang.String;@abf688e),Annotation([Ljava.lang.String;@478ee483,[Ljava.lang.String;@1a7288a3,[Ledu.cmu.lti.nlp.amr.Entity;@2974f221))
AMR:
(x11 / 问-01, domain, x10 / 你)
(x2 / 抢-02, destination, x6 / 说道-01)
(x2 / 抢-02, manner, x5 / 急忙)
(x5 / 急忙, mod, x4 / 国王)
(x6 / 说道-01, conj-as-if, x8 / 命令-01)
(x8 / 命令-01, destination, x11 / 问-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,729 microseconds
Sentence: “ 陛下 … 你 统治 什么 呢 ？ ”

Oracle Span 1:  统治 => 统治-01
Oracle Span 2:  陛下 => 陛下
Spans:
Span 4-5:  统治 => 统治-01
Span 1-2:  陛下 => 陛下

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  统治 => 统治-01
Oracle Span 1-2:  陛下 => 陛下

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	陛下	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	5	punct	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	统治	_	NN	NN	_	2	dep	_	_
6	什么	_	PN	PN	_	2	dep	_	_
7	呢	_	SP	SP	_	2	dep	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 统治-01, arg0, x8 / 陛下)

Input(Some(Graph((say :arg1 (统治-01 :mode interrogative :arg1 amr-unknown :arg0 陛下)),ArrayBuffer(Span(4,5,List(0),统治,统治-01,false), Span(1,2,List(1),陛下,陛下,false)),Map(1 -> 陛下, 0 -> 统治-01),Map(x8 -> 陛下, x7 -> 统治-01))),[Ljava.lang.String;@58fe0499,Annotation([Ljava.lang.String;@686449f9,[Ljava.lang.String;@665df3c6,[Ljava.lang.String;@68b6f0d6),Annotation([Ljava.lang.String;@4044fb95,[Ljava.lang.String;@aa549e5,[Ledu.cmu.lti.nlp.amr.Dependency;@36f48b4),Annotation([Ljava.lang.String;@5c00384f,[Ljava.lang.String;@3b7ff809,[Ljava.lang.String;@1bb564e2),Annotation([Ljava.lang.String;@62e6b5c8,[Ljava.lang.String;@3f792b9b,[Ledu.cmu.lti.nlp.amr.Entity;@7b8233cd))
AMR:
(x7 / 统治-01, manner, x8 / 陛下)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,514 microseconds
Sentence: 国王 非常 简单 明了 地 说 ： “ 我 统治 一切 。 ”

Oracle Span 1:  一切 => 一切
Oracle Span 2:  国王 => 国王
Oracle Span 3:  统治 => 统治-01
Oracle Span 4:  说 => 说-01
Oracle Span 5:  非常 => 非常-01
Spans:
Span 10-11:  一切 => 一切
Span 0-1:  国王 => 国王
Span 9-10:  统治 => 统治-01
Span 5-6:  说 => 说-01
Span 1-2:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  一切 => 一切
Oracle Span 0-1:  国王 => 国王
Oracle Span 9-10:  统治 => 统治-01
Oracle Span 5-6:  说 => 说-01
Oracle Span 1-2:  非常 => 非常-01

Dependencies:
1	国王	_	NN	NN	_	6	nsubj	_	_
2	非常	_	AD	AD	_	3	advmod	_	_
3	简单	_	VA	VA	_	6	dvpmod	_	_
4	明了	_	VA	VA	_	3	comod	_	_
5	地	_	DEV	DEV	_	3	dvpm	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	10	punct	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	统治	_	NN	NN	_	6	ccomp	_	_
11	一切	_	PN	PN	_	10	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 国王)
(x0 / 说-01, arg1, x5 / 统治-01)
(x5 / 统治-01, arg1, x7 / 一切)

Input(Some(Graph((说-01 :arg1 (统治-01 :arg1 一切 :arg0 x4) :arg0 国王 :manner (简单明了 :degree 非常-01)),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(9,10,List(1),统治,统治-01,false), Span(10,11,List(2),一切,一切,false), Span(0,1,List(3),国王,国王,false), Span(1,2,List(4),非常,非常-01,false)),Map(2 -> 一切, 1 -> 统治-01, 4 -> 非常-01, 0 -> 说-01, 3 -> 国王),Map(x5 -> 统治-01, x7 -> 一切, x4 -> 国王, x3 -> 非常-01, x0 -> 说-01))),[Ljava.lang.String;@4b20ca2b,Annotation([Ljava.lang.String;@1cbf6e72,[Ljava.lang.String;@6aecbb8d,[Ljava.lang.String;@1af146),Annotation([Ljava.lang.String;@4da602fc,[Ljava.lang.String;@2a8d39c4,[Ledu.cmu.lti.nlp.amr.Dependency;@25b2cfcb),Annotation([Ljava.lang.String;@72758afa,[Ljava.lang.String;@fb9c7aa,[Ljava.lang.String;@4c398c80),Annotation([Ljava.lang.String;@7fc6de5b,[Ljava.lang.String;@21baa903,[Ledu.cmu.lti.nlp.amr.Entity;@607fbe09))
AMR:
(x0 / 说-01, prep-against, x5 / 统治-01)
(x0 / 说-01, topic, x3 / 非常-01)
(x4 / 国王, season, x3 / 非常-01)
(x5 / 统治-01, prep-in, x7 / 一切)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,085 microseconds
Sentence: “ 一切 ？ ”

Oracle Span 1:  一切 => 一切
Spans:
Span 1-2:  一切 => 一切

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一切 => 一切

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	一切	_	PN	PN	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (一切 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),一切,一切,false)),Map(0 -> 一切),Map(x5 -> 一切))),[Ljava.lang.String;@60a2630a,Annotation([Ljava.lang.String;@29df4d43,[Ljava.lang.String;@5dd91bca,[Ljava.lang.String;@40cb698e),Annotation([Ljava.lang.String;@3382f8ae,[Ljava.lang.String;@60641ec8,[Ledu.cmu.lti.nlp.amr.Dependency;@75f65e45),Annotation([Ljava.lang.String;@6eeade6c,[Ljava.lang.String;@4a891c97,[Ljava.lang.String;@a5bd950),Annotation([Ljava.lang.String;@4d18aa28,[Ljava.lang.String;@75390459,[Ledu.cmu.lti.nlp.amr.Entity;@7756c3cd))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,458 microseconds
Sentence: 国王 轻轻 地 用 手 指 着 他 的 行星 和 其他 的 行星 ， 以及 所有 的 星星 。

Oracle Span 1:  他 => 他
Oracle Span 2:  其他 => 其他
Oracle Span 3:  国王 => 国王
Oracle Span 4:  所有 => 所有
Oracle Span 5:  手 => 手
Oracle Span 6:  指 => 指-02
Oracle Span 7:  星星 => 星星
Oracle Span 8:  用 => 用-01
Oracle Span 9:  行星 => 行星
Oracle Span 10:  行星 => 行星
Oracle Span 11:  轻轻 => 轻轻-01
Spans:
Span 7-8:  他 => 他
Span 11-12:  其他 => 其他
Span 0-1:  国王 => 国王
Span 16-17:  所有 => 所有
Span 4-5:  手 => 手
Span 5-6:  指 => 指-02
Span 18-19:  星星 => 星星
Span 3-4:  用 => 用-01
Span 9-10:  行星 => 行星
Span 13-14:  行星 => 行星
Span 1-2:  轻轻 => 轻轻-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 11-12:  其他 => 其他
Oracle Span 0-1:  国王 => 国王
Oracle Span 16-17:  所有 => 所有
Oracle Span 4-5:  手 => 手
Oracle Span 5-6:  指 => 指-02
Oracle Span 18-19:  星星 => 星星
Oracle Span 3-4:  用 => 用-01
Oracle Span 9-10:  行星 => 行星
Oracle Span 13-14:  行星 => 行星
Oracle Span 1-2:  轻轻 => 轻轻-01

Dependencies:
1	国王	_	NN	NN	_	6	nsubj	_	_
2	轻轻	_	VA	VA	_	6	dep	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	用	_	P	P	_	6	prep	_	_
5	手	_	NN	NN	_	4	pobj	_	_
6	指	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	行星	_	NN	NN	_	19	conj	_	_
11	和	_	CC	CC	_	19	cc	_	_
12	其他	_	DT	DT	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	行星	_	NN	NN	_	19	dep	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	以及	_	CC	CC	_	19	cc	_	_
17	所有	_	DT	DT	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	星星	_	NN	NN	_	6	dobj	_	_
20	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 用-01, arg0, x2 / 国王)
(x0 / 用-01, arg1, x3 / 手)
(x0 / 用-01, arg2, x5 / 指-02)
(x0 / 用-01, manner, x4 / 轻轻-01)
(x10 / 行星, mod, x11 / 其他)
(x12 / 星星, mod, x13 / 所有)
(x8 / 行星, poss, x9 / 他)

Input(Some(Graph((用-01 :arg2 (指-02 :arg1 (and :op (行星 :poss 他) :op (行星 :mod 其他) :op (星星 :mod 所有)) :arg0 x2) :manner 轻轻-01 :arg1 手 :arg0 国王),ArrayBuffer(Span(3,4,List(0),用,用-01,false), Span(5,6,List(1),指,指-02,false), Span(9,10,List(2),行星,行星,false), Span(7,8,List(3),他,他,false), Span(13,14,List(4),行星,行星,false), Span(11,12,List(5),其他,其他,false), Span(18,19,List(6),星星,星星,false), Span(16,17,List(7),所有,所有,false), Span(1,2,List(8),轻轻,轻轻-01,false), Span(4,5,List(9),手,手,false), Span(0,1,List(10),国王,国王,false)),Map(2 -> 行星, 5 -> 其他, 8 -> 轻轻-01, 7 -> 所有, 1 -> 指-02, 4 -> 行星, 6 -> 星星, 9 -> 手, 0 -> 用-01, 10 -> 国王, 3 -> 他),Map(x10 -> 行星, x2 -> 国王, x5 -> 指-02, x13 -> 所有, x8 -> 行星, x12 -> 星星, x4 -> 轻轻-01, x3 -> 手, x11 -> 其他, x9 -> 他, x0 -> 用-01))),[Ljava.lang.String;@2313052e,Annotation([Ljava.lang.String;@2bd2b28e,[Ljava.lang.String;@16746061,[Ljava.lang.String;@57fd91c9),Annotation([Ljava.lang.String;@6cfcd46d,[Ljava.lang.String;@52045dbe,[Ledu.cmu.lti.nlp.amr.Dependency;@674658f7),Annotation([Ljava.lang.String;@5c8eee0f,[Ljava.lang.String;@565b064f,[Ljava.lang.String;@26425897),Annotation([Ljava.lang.String;@73163d48,[Ljava.lang.String;@58c34bb3,[Ledu.cmu.lti.nlp.amr.Entity;@56a4479a))
AMR:
(x0 / 用-01, ARG4, x2 / 国王)
(x0 / 用-01, degree, x5 / 指-02)
(x0 / 用-01, instrument, x3 / 手)
(x0 / 用-01, manner, x4 / 轻轻-01)
(x10 / 行星, mod, x11 / 其他)
(x12 / 星星, domain, x11 / 其他)
(x12 / 星星, mod, x13 / 所有)
(x5 / 指-02, age, x13 / 所有)
(x8 / 行星, poss, x9 / 他)
(x9 / 他, timezone, x5 / 指-02)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.3.1.0.0
WARNING: makeIds can't find span Id: 0.3.1.1
WARNING: makeIds can't find span Id: 0.3.1.1.0
WARNING: makeIds can't find span Id: 0.3.1.2
WARNING: makeIds can't find span Id: 0.3.1.2.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 39,625 microseconds
Sentence: 小 王子 说 ： “ 统治 这 一切 ？ ”

Oracle Span 1:  一切 => 一切
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  统治 => 统治-01
Oracle Span 5:  说 => 说-01
Oracle Span 6:  这 => 这
Spans:
Span 7-8:  一切 => 一切
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 5-6:  统治 => 统治-01
Span 2-3:  说 => 说-01
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  一切 => 一切
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  统治 => 统治-01
Oracle Span 2-3:  说 => 说-01
Oracle Span 6-7:  这 => 这

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	6	punct	_	_
6	统治	_	NN	NN	_	3	ccomp	_	_
7	这	_	DT	DT	_	8	det	_	_
8	一切	_	PN	PN	_	6	dobj	_	_
9	？	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 统治-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 统治-01, arg1, x5 / 一切)
(x5 / 一切, mod, x6 / 这)

Input(Some(Graph((说-01 :mode interrogative :arg1 (统治-01 :arg1 (一切 :mod 这)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(5,6,List(1),统治,统治-01,false), Span(7,8,List(2),一切,一切,false), Span(6,7,List(3),这,这,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false)),Map(2 -> 一切, 5 -> 小-01, 1 -> 统治-01, 4 -> 王子, 0 -> 说-01, 3 -> 这),Map(x2 -> 王子, x5 -> 一切, x4 -> 统治-01, x3 -> 小-01, x6 -> 这, x0 -> 说-01))),[Ljava.lang.String;@62163b39,Annotation([Ljava.lang.String;@20a8a64e,[Ljava.lang.String;@62f4ff3b,[Ljava.lang.String;@1698fc68),Annotation([Ljava.lang.String;@4504d271,[Ljava.lang.String;@207b8649,[Ledu.cmu.lti.nlp.amr.Dependency;@65b3a85a),Annotation([Ljava.lang.String;@34997338,[Ljava.lang.String;@57eda880,[Ljava.lang.String;@2b5825fa),Annotation([Ljava.lang.String;@53d1b9b3,[Ljava.lang.String;@2cae1042,[Ledu.cmu.lti.nlp.amr.Entity;@163d04ff))
AMR:
(x0 / 说-01, ARG6, x4 / 统治-01)
(x0 / 说-01, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 统治-01, ARG6, x5 / 一切)
(x5 / 一切, mod, x6 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,052 microseconds
Sentence: “ 统治 这 一切 。 ”

Oracle Span 1:  一切 => 一切
Oracle Span 2:  统治 => 统治-01
Oracle Span 3:  这 => 这
Spans:
Span 3-4:  一切 => 一切
Span 1-2:  统治 => 统治-01
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  一切 => 一切
Oracle Span 1-2:  统治 => 统治-01
Oracle Span 2-3:  这 => 这

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	统治	_	NN	NN	_	0	root	_	_
3	这	_	DT	DT	_	4	det	_	_
4	一切	_	PN	PN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 统治-01, arg1, x7 / 一切)
(x7 / 一切, mod, x8 / 这)

Input(Some(Graph((say :arg1 (统治-01 :arg1 (一切 :mod 这))),ArrayBuffer(Span(1,2,List(0),统治,统治-01,false), Span(3,4,List(1),一切,一切,false), Span(2,3,List(2),这,这,false)),Map(2 -> 这, 1 -> 一切, 0 -> 统治-01),Map(x8 -> 这, x7 -> 一切, x6 -> 统治-01))),[Ljava.lang.String;@7c209437,Annotation([Ljava.lang.String;@2262b621,[Ljava.lang.String;@7e928e2f,[Ljava.lang.String;@f667fe),Annotation([Ljava.lang.String;@788fcafb,[Ljava.lang.String;@4febb875,[Ledu.cmu.lti.nlp.amr.Dependency;@25e2a451),Annotation([Ljava.lang.String;@1698ee84,[Ljava.lang.String;@10c626be,[Ljava.lang.String;@2fc0cc3),Annotation([Ljava.lang.String;@328cf0e1,[Ljava.lang.String;@63b1d4fa,[Ledu.cmu.lti.nlp.amr.Entity;@42e3ede4))
AMR:
(x6 / 统治-01, location, x7 / 一切)
(x7 / 一切, mod, x8 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,248 microseconds
Sentence: 原来 他 不仅 是 一 个 绝对 的 君主 ， 而且 是 整个 宇宙 的 君主 。

Oracle Span 1:  他 => 他
Oracle Span 2:  君主 => 君主
Oracle Span 3:  君主 => 君主
Oracle Span 4:  宇宙 => 宇宙
Oracle Span 5:  整个 => 整个
Oracle Span 6:  绝对 => 绝对-01
Spans:
Span 1-2:  他 => 他
Span 8-9:  君主 => 君主
Span 15-16:  君主 => 君主
Span 13-14:  宇宙 => 宇宙
Span 12-13:  整个 => 整个
Span 6-7:  绝对 => 绝对-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他 => 他
Oracle Span 8-9:  君主 => 君主
Oracle Span 15-16:  君主 => 君主
Oracle Span 13-14:  宇宙 => 宇宙
Oracle Span 12-13:  整个 => 整个
Oracle Span 6-7:  绝对 => 绝对-01

Dependencies:
1	原来	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	不仅	_	CC	CC	_	4	cc	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	9	clf	_	_
7	绝对	_	JJ	JJ	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	君主	_	NN	NN	_	4	attr	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	而且	_	CC	CC	_	4	cc	_	_
12	是	_	VC	VC	_	4	conj	_	_
13	整个	_	JJ	JJ	_	14	amod	_	_
14	宇宙	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	君主	_	NN	NN	_	12	attr	_	_
17	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x4 / 君主, domain, x7 / 他)
(x4 / 君主, mod, x5 / 绝对-01)
(x9 / 宇宙, mod, x10 / 整个)
(x9 / 宇宙, poss, x8 / 君主)

Input(Some(Graph((progression :arg1 (君主 :domain 他 :quant 1 :mod 绝对-01) :arg2 (君主 :domain x7 :poss-of (宇宙 :mod 整个))),ArrayBuffer(Span(8,9,List(0),君主,君主,false), Span(1,2,List(1),他,他,false), Span(6,7,List(2),绝对,绝对-01,false), Span(15,16,List(3),君主,君主,false), Span(13,14,List(4),宇宙,宇宙,false), Span(12,13,List(5),整个,整个,false)),Map(2 -> 绝对-01, 5 -> 整个, 1 -> 他, 4 -> 宇宙, 0 -> 君主, 3 -> 君主),Map(x10 -> 整个, x5 -> 绝对-01, x8 -> 君主, x7 -> 他, x4 -> 君主, x9 -> 宇宙))),[Ljava.lang.String;@201b6b6f,Annotation([Ljava.lang.String;@75459c75,[Ljava.lang.String;@183e8023,[Ljava.lang.String;@45efc20d),Annotation([Ljava.lang.String;@3e5499cc,[Ljava.lang.String;@67ab1c47,[Ledu.cmu.lti.nlp.amr.Dependency;@b78a709),Annotation([Ljava.lang.String;@30bcf3c1,[Ljava.lang.String;@2a3c96e3,[Ljava.lang.String;@15cafec7),Annotation([Ljava.lang.String;@5b444398,[Ljava.lang.String;@cb191ca,[Ledu.cmu.lti.nlp.amr.Entity;@42f48531))
AMR:
(x4 / 君主, domain, x7 / 他)
(x4 / 君主, mod, x5 / 绝对-01)
(x4 / 君主, mod, x9 / 宇宙)
(x9 / 宇宙, mod, x10 / 整个)
(x9 / 宇宙, poss, x8 / 君主)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 15,422 microseconds
Sentence: “ 那么 ， 星星 都 服从 您 吗 ？ ”

Oracle Span 1:  您 => 您
Oracle Span 2:  星星 => 星星
Oracle Span 3:  服从 => 服从-01
Oracle Span 4:  都 => 都
Spans:
Span 6-7:  您 => 您
Span 3-4:  星星 => 星星
Span 5-6:  服从 => 服从-01
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  您 => 您
Oracle Span 3-4:  星星 => 星星
Oracle Span 5-6:  服从 => 服从-01
Oracle Span 4-5:  都 => 都

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	星星	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	服从	_	VV	VV	_	0	root	_	_
7	您	_	PN	PN	_	6	dobj	_	_
8	吗	_	SP	SP	_	6	dep	_	_
9	？	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 服从-01, arg0, x10 / 星星)
(x9 / 服从-01, arg1, x12 / 您)
(x9 / 服从-01, manner, x11 / 都)

Input(Some(Graph((say :arg1 (服从-01 :mode interrogative :arg1 您 :manner 都 :arg0 星星)),ArrayBuffer(Span(5,6,List(0),服从,服从-01,false), Span(6,7,List(1),您,您,false), Span(4,5,List(2),都,都,false), Span(3,4,List(3),星星,星星,false)),Map(2 -> 都, 1 -> 您, 0 -> 服从-01, 3 -> 星星),Map(x10 -> 星星, x12 -> 您, x11 -> 都, x9 -> 服从-01))),[Ljava.lang.String;@a776e,Annotation([Ljava.lang.String;@792bbc74,[Ljava.lang.String;@79145d5a,[Ljava.lang.String;@1f2f9244),Annotation([Ljava.lang.String;@4c4d27c8,[Ljava.lang.String;@6821ea29,[Ledu.cmu.lti.nlp.amr.Dependency;@338494fa),Annotation([Ljava.lang.String;@505a9d7c,[Ljava.lang.String;@758c83d8,[Ljava.lang.String;@129b4fe2),Annotation([Ljava.lang.String;@5af3a0f,[Ljava.lang.String;@19ae6bb,[Ledu.cmu.lti.nlp.amr.Entity;@10993713))
AMR:
(x9 / 服从-01, location, x10 / 星星)
(x9 / 服从-01, manner, x11 / 都)
(x9 / 服从-01, prep-through, x12 / 您)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,872 microseconds
Sentence: “ 那 当然 ！ ” 国王 对 他 说 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  国王 => 国王
Oracle Span 3:  当然 => 当然
Oracle Span 4:  说 => 说-01
Oracle Span 5:  那 => 那
Spans:
Span 7-8:  他 => 他
Span 5-6:  国王 => 国王
Span 2-3:  当然 => 当然
Span 8-9:  说 => 说-01
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 5-6:  国王 => 国王
Oracle Span 2-3:  当然 => 当然
Oracle Span 8-9:  说 => 说-01
Oracle Span 1-2:  那 => 那

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那	_	PN	PN	_	4	nsubj	_	_
3	当然	_	AD	AD	_	4	advmod	_	_
4	！	_	VV	VV	_	0	root	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	国王	_	NN	NN	_	9	nsubj	_	_
7	对	_	P	P	_	9	prep	_	_
8	他	_	PN	PN	_	7	pobj	_	_
9	说	_	VV	VV	_	4	conj	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x3 / 当然)
(x0 / 说-01, arg3, x5 / 他)
(x3 / 当然, mod, x4 / 那)

Input(Some(Graph((说-01 :mode expressive :arg3 他 :arg1 (当然 :mod 那) :arg0 国王),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(7,8,List(1),他,他,false), Span(2,3,List(2),当然,当然,false), Span(1,2,List(3),那,那,false), Span(5,6,List(4),国王,国王,false)),Map(2 -> 当然, 1 -> 他, 4 -> 国王, 0 -> 说-01, 3 -> 那),Map(x2 -> 国王, x5 -> 他, x4 -> 那, x3 -> 当然, x0 -> 说-01))),[Ljava.lang.String;@58359ebd,Annotation([Ljava.lang.String;@24b6b8f6,[Ljava.lang.String;@72cf2de5,[Ljava.lang.String;@2bb7bd00),Annotation([Ljava.lang.String;@5f031ebd,[Ljava.lang.String;@4ee37ca3,[Ledu.cmu.lti.nlp.amr.Dependency;@45c8d09f),Annotation([Ljava.lang.String;@53812a9b,[Ljava.lang.String;@14b030a0,[Ljava.lang.String;@41e350f1),Annotation([Ljava.lang.String;@422c3c7a,[Ljava.lang.String;@18230356,[Ledu.cmu.lti.nlp.amr.Entity;@d8305c2))
AMR:
(x0 / 说-01, conj-as-if, x5 / 他)
(x0 / 说-01, location, x2 / 国王)
(x2 / 国王, unit, x3 / 当然)
(x3 / 当然, mod, x4 / 那)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,569 microseconds
Sentence: “ 它们 立即 就 得 服从 。

Oracle Span 1:  它们 => 它们
Oracle Span 2:  就 => 就
Oracle Span 3:  服从 => 服从-01
Oracle Span 4:  立即 => 立即
Spans:
Span 1-2:  它们 => 它们
Span 3-4:  就 => 就
Span 5-6:  服从 => 服从-01
Span 2-3:  立即 => 立即

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  它们 => 它们
Oracle Span 3-4:  就 => 就
Oracle Span 5-6:  服从 => 服从-01
Oracle Span 2-3:  立即 => 立即

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它们	_	PN	PN	_	5	nsubj	_	_
3	立即	_	AD	AD	_	5	advmod	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	得	_	VV	VV	_	6	dep	_	_
6	服从	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 服从-01, arg0, x10 / 它们)
(x7 / 服从-01, manner, x8 / 就)
(x7 / 服从-01, manner, x9 / 立即)

Input(Some(Graph((say :arg1 (服从-01 :arg0 它们 :manner 立即 :manner 就)),ArrayBuffer(Span(5,6,List(0),服从,服从-01,false), Span(1,2,List(1),它们,它们,false), Span(2,3,List(2),立即,立即,false), Span(3,4,List(3),就,就,false)),Map(2 -> 立即, 1 -> 它们, 0 -> 服从-01, 3 -> 就),Map(x10 -> 它们, x8 -> 就, x7 -> 服从-01, x9 -> 立即))),[Ljava.lang.String;@56bca85b,Annotation([Ljava.lang.String;@75d0911a,[Ljava.lang.String;@75e91545,[Ljava.lang.String;@60d1a32f),Annotation([Ljava.lang.String;@531c311e,[Ljava.lang.String;@22b53226,[Ledu.cmu.lti.nlp.amr.Dependency;@1fcb4808),Annotation([Ljava.lang.String;@726e5805,[Ljava.lang.String;@40c80397,[Ljava.lang.String;@4b672daa),Annotation([Ljava.lang.String;@ea9b7c6,[Ljava.lang.String;@e077866,[Ledu.cmu.lti.nlp.amr.Entity;@ed3068a))
AMR:
(x10 / 它们, location, x9 / 立即)
(x7 / 服从-01, manner, x8 / 就)
(x7 / 服从-01, manner, x9 / 立即)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,114 microseconds
Sentence: 我 是 不 允许 无 纪律 的 。 ”

Oracle Span 1:  允许 => 允许-01
Oracle Span 2:  我 => 我
Oracle Span 3:  无 => 无-02
Oracle Span 4:  纪律 => 纪律
Spans:
Span 3-4:  允许 => 允许-01
Span 0-1:  我 => 我
Span 4-5:  无 => 无-02
Span 5-6:  纪律 => 纪律

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  允许 => 允许-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  无 => 无-02
Oracle Span 5-6:  纪律 => 纪律

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	允许	_	VV	VV	_	2	attr	_	_
5	无	_	VE	VE	_	4	ccomp	_	_
6	纪律	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 允许-01, arg0, x12 / 我)
(x10 / 允许-01, arg2, x13 / 无-02)
(x13 / 无-02, arg1, x14 / 纪律)

Input(Some(Graph((say :arg1 (允许-01 :arg2 (无-02 :arg1 纪律) :arg0 我 :polarity -)),ArrayBuffer(Span(3,4,List(0),允许,允许-01,false), Span(4,5,List(1),无,无-02,false), Span(5,6,List(2),纪律,纪律,false), Span(0,1,List(3),我,我,false)),Map(2 -> 纪律, 1 -> 无-02, 0 -> 允许-01, 3 -> 我),Map(x10 -> 允许-01, x13 -> 无-02, x12 -> 我, x14 -> 纪律))),[Ljava.lang.String;@7c2b6087,Annotation([Ljava.lang.String;@3fffff43,[Ljava.lang.String;@a8e6492,[Ljava.lang.String;@1c7fd41f),Annotation([Ljava.lang.String;@3b77a04f,[Ljava.lang.String;@7b324585,[Ledu.cmu.lti.nlp.amr.Dependency;@2e11485),Annotation([Ljava.lang.String;@60dce7ea,[Ljava.lang.String;@662f5666,[Ljava.lang.String;@fd8294b),Annotation([Ljava.lang.String;@5974109,[Ljava.lang.String;@27305e6,[Ledu.cmu.lti.nlp.amr.Entity;@1ef3efa8))
AMR:
(x10 / 允许-01, domain, x12 / 我)
(x10 / 允许-01, snt11, x13 / 无-02)
(x13 / 无-02, snt11, x14 / 纪律)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 10,839 microseconds
Sentence: 这样 的 权力 使 小 王子 惊叹 不已 。

Oracle Span 1:  小 => 小
Oracle Span 2:  权力 => 权力
Oracle Span 3:  王子 => 王子
Oracle Span 4:  这样 => 这样
Spans:
Span 4-5:  小 => 小
Span 2-3:  权力 => 权力
Span 5-6:  王子 => 王子
Span 0-1:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  小 => 小
Oracle Span 2-3:  权力 => 权力
Oracle Span 5-6:  王子 => 王子
Oracle Span 0-1:  这样 => 这样

Dependencies:
1	这样	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	权力	_	NN	NN	_	4	nsubj	_	_
4	使	_	VV	VV	_	0	root	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	4	dobj	_	_
7	惊叹	_	VV	VV	_	4	dep	_	_
8	不已	_	AD	AD	_	7	advmod	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 权力, mod, x13 / 这样)
(x9 / 王子, mod, x10 / 小)

Input(Some(Graph((惊叹不已 :arg0 (王子 :mod 小) :cause (权力 :mod 这样)),ArrayBuffer(Span(5,6,List(0),王子,王子,false), Span(4,5,List(1),小,小,false), Span(2,3,List(2),权力,权力,false), Span(0,1,List(3),这样,这样,false)),Map(2 -> 权力, 1 -> 小, 0 -> 王子, 3 -> 这样),Map(x10 -> 小, x13 -> 这样, x12 -> 权力, x9 -> 王子))),[Ljava.lang.String;@502f1f4c,Annotation([Ljava.lang.String;@6f8f9349,[Ljava.lang.String;@75c9e76b,[Ljava.lang.String;@7446d8d5),Annotation([Ljava.lang.String;@5c3b6c6e,[Ljava.lang.String;@4fbda97b,[Ledu.cmu.lti.nlp.amr.Dependency;@75f5fd58),Annotation([Ljava.lang.String;@37b70343,[Ljava.lang.String;@306851c7,[Ljava.lang.String;@12bcd0c0),Annotation([Ljava.lang.String;@4879f0f2,[Ljava.lang.String;@47db5fa5,[Ledu.cmu.lti.nlp.amr.Entity;@354fc8f0))
AMR:
(x12 / 权力, location, x10 / 小)
(x12 / 权力, mod, x13 / 这样)
(x9 / 王子, mod, x10 / 小)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 11,493 microseconds
Sentence: 如果 掌握 了 这样 的 权力 ， 那么 ， 他 一 天 就 不 只 是 看到 四十三 次 日落 ， 而 可以 看到 七十二 次 ， 甚至 一百 次 ， 或是 二百 次 日落 ， 也 不 必 要 去 挪动 椅子 了 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  去 => 去-01
Oracle Span 3:  只 => 只
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  天 => 天
Oracle Span 6:  就 => 就
Oracle Span 7:  挪动 => 挪动-01
Oracle Span 8:  掌握 => 掌握-01
Oracle Span 9:  日落 => 日落-01
Oracle Span 10:  权力 => 权力
Oracle Span 11:  椅子 => 椅子
Oracle Span 12:  甚至 => 甚至
Oracle Span 13:  看到 => 看到
Oracle Span 14:  看到 => 看到-01
Oracle Span 15:  要 => 要-03
Oracle Span 16:  这样 => 这样-01
Spans:
Span 9-10:  他 => 他
Span 40-41:  去 => 去-01
Span 14-15:  只 => 只
Span 22-23:  可以 => 可以-01
Span 11-12:  天 => 天
Span 12-13:  就 => 就
Span 41-42:  挪动 => 挪动-01
Span 1-2:  掌握 => 掌握-01
Span 19-20:  日落 => 日落-01
Span 5-6:  权力 => 权力
Span 42-43:  椅子 => 椅子
Span 27-28:  甚至 => 甚至
Span 16-17:  看到 => 看到
Span 23-24:  看到 => 看到-01
Span 39-40:  要 => 要-03
Span 3-4:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 40-41:  去 => 去-01
Oracle Span 14-15:  只 => 只
Oracle Span 22-23:  可以 => 可以-01
Oracle Span 11-12:  天 => 天
Oracle Span 12-13:  就 => 就
Oracle Span 41-42:  挪动 => 挪动-01
Oracle Span 1-2:  掌握 => 掌握-01
Oracle Span 19-20:  日落 => 日落-01
Oracle Span 5-6:  权力 => 权力
Oracle Span 42-43:  椅子 => 椅子
Oracle Span 27-28:  甚至 => 甚至
Oracle Span 16-17:  看到 => 看到
Oracle Span 23-24:  看到 => 看到-01
Oracle Span 39-40:  要 => 要-03
Oracle Span 3-4:  这样 => 这样-01

Dependencies:
1	如果	_	CS	CS	_	2	advmod	_	_
2	掌握	_	VV	VV	_	17	pccomp	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	这样	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	权力	_	NN	NN	_	2	dobj	_	_
7	,	_	PU	PU	_	17	punct	_	_
8	那么	_	AD	AD	_	17	advmod	_	_
9	,	_	PU	PU	_	17	punct	_	_
10	他	_	PN	PN	_	17	nsubj	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	天	_	M	M	_	17	nsubj	_	_
13	就	_	AD	AD	_	17	advmod	_	_
14	不	_	AD	AD	_	17	neg	_	_
15	只	_	AD	AD	_	17	advmod	_	_
16	是	_	VC	VC	_	17	cop	_	_
17	看到	_	VV	VV	_	0	root	_	_
18	四十三	_	CD	CD	_	19	nummod	_	_
19	次	_	M	M	_	20	clf	_	_
20	日落	_	NN	NN	_	17	dobj	_	_
21	,	_	PU	PU	_	17	punct	_	_
22	而	_	CC	CC	_	17	cc	_	_
23	可以	_	VV	VV	_	24	mmod	_	_
24	看到	_	VV	VV	_	17	conj	_	_
25	七十二	_	CD	CD	_	26	nummod	_	_
26	次	_	M	M	_	24	range	_	_
27	,	_	PU	PU	_	17	punct	_	_
28	甚至	_	AD	AD	_	32	advmod	_	_
29	一百	_	CD	CD	_	30	nummod	_	_
30	次	_	M	M	_	32	dep	_	_
31	,	_	PU	PU	_	32	punct	_	_
32	或是	_	VV	VV	_	17	conj	_	_
33	二百	_	CD	CD	_	34	nummod	_	_
34	次	_	M	M	_	35	clf	_	_
35	日落	_	NN	NN	_	32	dobj	_	_
36	,	_	PU	PU	_	32	punct	_	_
37	也	_	AD	AD	_	41	advmod	_	_
38	不	_	AD	AD	_	41	neg	_	_
39	必	_	AD	AD	_	41	advmod	_	_
40	要	_	VV	VV	_	41	mmod	_	_
41	去	_	VV	VV	_	32	conj	_	_
42	挪动	_	NN	NN	_	41	dobj	_	_
43	椅子	_	VV	VV	_	41	dep	_	_
44	了	_	AS	AS	_	43	asp	_	_
45	！	_	PU	PU	_	17	punct	_	_

Oracle:
(x2 / 掌握-01, arg1, x3 / 权力)
(x27 / 看到, arg0, x28 / 他)
(x27 / 看到, arg1, x32 / 日落-01)
(x27 / 看到, duration, x34 / 天)
(x27 / 看到, manner, x29 / 只)
(x3 / 权力, mod, x4 / 这样-01)
(x37 / 可以-01, arg0, x38 / 看到-01)
(x47 / 要-03, arg0, x48 / 去-01)
(x48 / 去-01, arg1, x50 / 挪动-01)
(x50 / 挪动-01, arg1, x52 / 椅子)

Input(Some(Graph((condition :arg1 (掌握-01 :arg1 (权力 :mod 这样-01)) :arg2 (and :op (progression :arg1 (看到 :duration (天 :quant 1) :arg1 (日落-01 :quant 43) :manner (只 :polarity (- :manner 就)) :arg0 他) :arg2 (可以-01 :arg0 (看到-01 :arg1 (x32 :quant (or :op 72 :op (100 :mod 甚至) :op 200)) :arg0 x28))) :op (不必-01 :arg0 (要-03 :arg0 (去-01 :arg1 (挪动-01 :arg1 椅子 :arg0 x28) :arg0 x28)))) :mode expressive),ArrayBuffer(Span(1,2,List(0),掌握,掌握-01,false), Span(5,6,List(1),权力,权力,false), Span(3,4,List(2),这样,这样-01,false), Span(16,17,List(3),看到,看到,false), Span(11,12,List(4),天,天,false), Span(19,20,List(5),日落,日落-01,false), Span(14,15,List(6),只,只,false), Span(12,13,List(7),就,就,false), Span(9,10,List(8),他,他,false), Span(22,23,List(9),可以,可以-01,false), Span(23,24,List(10),看到,看到-01,false), Span(27,28,List(11),甚至,甚至,false), Span(39,40,List(12),要,要-03,false), Span(40,41,List(13),去,去-01,false), Span(41,42,List(14),挪动,挪动-01,false), Span(42,43,List(15),椅子,椅子,false)),Map(2 -> 这样-01, 5 -> 日落-01, 12 -> 要-03, 15 -> 椅子, 8 -> 他, 7 -> 就, 1 -> 权力, 4 -> 天, 11 -> 甚至, 14 -> 挪动-01, 6 -> 只, 9 -> 可以-01, 0 -> 掌握-01, 10 -> 看到-01, 3 -> 看到, 13 -> 去-01),Map(x52 -> 椅子, x28 -> 他, x34 -> 天, x37 -> 可以-01, x31 -> 就, x2 -> 掌握-01, x48 -> 去-01, x27 -> 看到, x4 -> 这样-01, x50 -> 挪动-01, x44 -> 甚至, x38 -> 看到-01, x32 -> 日落-01, x3 -> 权力, x47 -> 要-03, x29 -> 只))),[Ljava.lang.String;@41813449,Annotation([Ljava.lang.String;@4678a2eb,[Ljava.lang.String;@5b43fbf6,[Ljava.lang.String;@1080b026),Annotation([Ljava.lang.String;@58ebfd03,[Ljava.lang.String;@5b07730f,[Ledu.cmu.lti.nlp.amr.Dependency;@1fdfafd2),Annotation([Ljava.lang.String;@a4b2d8f,[Ljava.lang.String;@dcfda20,[Ljava.lang.String;@6d304f9d),Annotation([Ljava.lang.String;@f73dcd6,[Ljava.lang.String;@5c87bfe2,[Ledu.cmu.lti.nlp.amr.Entity;@2fea7088))
AMR:
(x2 / 掌握-01, snt5, x4 / 这样-01)
(x27 / 看到, duration, x34 / 天)
(x27 / 看到, manner, x29 / 只)
(x27 / 看到, prep-on-behalf, x32 / 日落-01)
(x3 / 权力, mod, x4 / 这样-01)
(x32 / 日落-01, snt2, x38 / 看到-01)
(x34 / 天, mod, x28 / 他)
(x34 / 天, mod, x3 / 权力)
(x34 / 天, snt2, x31 / 就)
(x37 / 可以-01, snt5, x38 / 看到-01)
(x38 / 看到-01, prep-as, x44 / 甚至)
(x47 / 要-03, decade, x48 / 去-01)
(x47 / 要-03, time, x44 / 甚至)
(x48 / 去-01, snt5, x50 / 挪动-01)
(x50 / 挪动-01, snt2, x52 / 椅子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.3
WARNING: makeIds can't find span Id: 0.1.0.0.2
WARNING: makeIds can't find span Id: 0.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0.1.1
Decoded in 107,071 microseconds
Sentence: 由于 他 想起 了 他 那 被 遗弃 的 小 星球 ， 心里 有点 难过 ， 他 大胆 地 向 国王 提出 了 一 个 请求 ： “ 我 想 看 日落 ， 请求 您 …

Oracle Span 1:  他 => 他
Oracle Span 2:  他 => 他
Oracle Span 3:  国王 => 国王
Oracle Span 4:  大胆 => 大胆-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  想 => 想-01
Oracle Span 7:  想起 => 想起-01
Oracle Span 8:  我 => 我
Oracle Span 9:  提出 => 提出-01
Oracle Span 10:  日落 => 日落-01
Oracle Span 11:  星球 => 星球
Oracle Span 12:  有点 => 有点
Oracle Span 13:  看 => 看-02
Oracle Span 14:  请求 => 请求-02
Oracle Span 15:  遗弃 => 遗弃-01
Oracle Span 16:  那 => 那
Oracle Span 17:  难过 => 难过-01
Spans:
Span 1-2:  他 => 他
Span 4-5:  他 => 他
Span 20-21:  国王 => 国王
Span 17-18:  大胆 => 大胆-01
Span 9-10:  小 => 小-01
Span 29-30:  想 => 想-01
Span 2-3:  想起 => 想起-01
Span 28-29:  我 => 我
Span 21-22:  提出 => 提出-01
Span 31-32:  日落 => 日落-01
Span 10-11:  星球 => 星球
Span 13-14:  有点 => 有点
Span 30-31:  看 => 看-02
Span 25-26:  请求 => 请求-02
Span 7-8:  遗弃 => 遗弃-01
Span 5-6:  那 => 那
Span 14-15:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  他 => 他
Oracle Span 20-21:  国王 => 国王
Oracle Span 17-18:  大胆 => 大胆-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 29-30:  想 => 想-01
Oracle Span 2-3:  想起 => 想起-01
Oracle Span 28-29:  我 => 我
Oracle Span 21-22:  提出 => 提出-01
Oracle Span 31-32:  日落 => 日落-01
Oracle Span 10-11:  星球 => 星球
Oracle Span 13-14:  有点 => 有点
Oracle Span 30-31:  看 => 看-02
Oracle Span 25-26:  请求 => 请求-02
Oracle Span 7-8:  遗弃 => 遗弃-01
Oracle Span 5-6:  那 => 那
Oracle Span 14-15:  难过 => 难过-01

Dependencies:
1	由于	_	P	P	_	15	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	想起	_	VV	VV	_	1	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	6	dep	_	_
6	那	_	PN	PN	_	8	nsubjpass	_	_
7	被	_	SB	SB	_	8	pass	_	_
8	遗弃	_	VV	VV	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	星球	_	NN	NN	_	3	dobj	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	心里	_	NN	NN	_	15	nsubj	_	_
14	有点	_	AD	AD	_	15	advmod	_	_
15	难过	_	VV	VV	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	他	_	PN	PN	_	22	nsubj	_	_
18	大胆	_	VA	VA	_	22	dep	_	_
19	地	_	DEV	DEV	_	18	dvpm	_	_
20	向	_	P	P	_	22	prep	_	_
21	国王	_	NN	NN	_	20	pobj	_	_
22	提出	_	VV	VV	_	15	conj	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	一	_	CD	CD	_	25	nummod	_	_
25	个	_	M	M	_	26	clf	_	_
26	请求	_	NN	NN	_	22	dobj	_	_
27	：	_	PU	PU	_	15	punct	_	_
28	“	_	PU	PU	_	15	punct	_	_
29	我	_	PN	PN	_	30	nsubj	_	_
30	想	_	VV	VV	_	15	conj	_	_
31	看	_	VV	VV	_	30	ccomp	_	_
32	日落	_	NN	NN	_	31	dobj	_	_
33	,	_	PU	PU	_	31	punct	_	_
34	请求	_	VV	VV	_	31	conj	_	_
35	您	_	PU	PU	_	15	punct	_	_
36	…	_	PU	PU	_	15	punct	_	_
37	我	_	PN	PN	_	31	xsubj	_	_

Oracle:
(x14 / 难过-01, degree, x15 / 有点)
(x19 / 提出-01, arg1, x22 / 请求-02)
(x19 / 提出-01, manner, x21 / 大胆-01)
(x22 / 请求-02, arg1, x25 / 国王)
(x22 / 请求-02, arg2, x26 / 想-01)
(x26 / 想-01, arg0, x27 / 我)
(x26 / 想-01, arg1, x28 / 看-02)
(x28 / 看-02, arg1, x30 / 日落-01)
(x7 / 想起-01, arg0, x8 / 他)
(x7 / 想起-01, arg1, x9 / 星球)
(x9 / 星球, arg1, x12 / 遗弃-01)
(x9 / 星球, mod, x10 / 小-01)
(x9 / 星球, mod, x11 / 那)
(x9 / 星球, poss, x13 / 他)

Input(Some(Graph((causation :arg1 (and :op (想起-01 :arg1 (星球 :poss 他 :arg1 遗弃-01 :mod 那 :mod 小-01) :arg0 他) :op (难过-01 :arg0 (心 :part-of x8) :degree 有点)) :arg2 (提出-01 :arg1 (请求-02 :arg2 (想-01 :arg1 (看-02 :arg1 日落-01 :arg0 x27) :arg0 我) :arg1 国王 :arg0 x8) :manner (大胆-01 :arg0 x8) :arg0 x8)),ArrayBuffer(Span(2,3,List(0),想起,想起-01,false), Span(10,11,List(1),星球,星球,false), Span(1,2,List(2),他,他,false), Span(7,8,List(3),遗弃,遗弃-01,false), Span(5,6,List(4),那,那,false), Span(9,10,List(5),小,小-01,false), Span(4,5,List(6),他,他,false), Span(14,15,List(7),难过,难过-01,false), Span(13,14,List(8),有点,有点,false), Span(21,22,List(9),提出,提出-01,false), Span(25,26,List(10),请求,请求-02,false), Span(29,30,List(11),想,想-01,false), Span(30,31,List(12),看,看-02,false), Span(31,32,List(13),日落,日落-01,false), Span(28,29,List(14),我,我,false), Span(20,21,List(15),国王,国王,false), Span(17,18,List(16),大胆,大胆-01,false)),Map(2 -> 他, 5 -> 小-01, 12 -> 看-02, 15 -> 国王, 8 -> 有点, 7 -> 难过-01, 1 -> 星球, 4 -> 那, 11 -> 想-01, 14 -> 我, 6 -> 他, 9 -> 提出-01, 0 -> 想起-01, 16 -> 大胆-01, 10 -> 请求-02, 3 -> 遗弃-01, 13 -> 日落-01),Map(x28 -> 看-02, x22 -> 请求-02, x25 -> 国王, x10 -> 小-01, x19 -> 提出-01, x13 -> 他, x8 -> 他, x30 -> 日落-01, x12 -> 遗弃-01, x27 -> 我, x21 -> 大胆-01, x15 -> 有点, x7 -> 想起-01, x26 -> 想-01, x11 -> 那, x14 -> 难过-01, x9 -> 星球))),[Ljava.lang.String;@40499e4f,Annotation([Ljava.lang.String;@51cd7ffc,[Ljava.lang.String;@30d4b288,[Ljava.lang.String;@4cc6fa2a),Annotation([Ljava.lang.String;@40f1be1b,[Ljava.lang.String;@7a791b66,[Ledu.cmu.lti.nlp.amr.Dependency;@6f2cb653),Annotation([Ljava.lang.String;@14c01636,[Ljava.lang.String;@590c73d3,[Ljava.lang.String;@6b9ce1bf),Annotation([Ljava.lang.String;@61884cb1,[Ljava.lang.String;@75ed9710,[Ledu.cmu.lti.nlp.amr.Entity;@4fc5e095))
AMR:
(x11 / 那, degree, x12 / 遗弃-01)
(x14 / 难过-01, degree, x12 / 遗弃-01)
(x14 / 难过-01, degree, x15 / 有点)
(x14 / 难过-01, degree, x21 / 大胆-01)
(x19 / 提出-01, degree, x22 / 请求-02)
(x19 / 提出-01, manner, x21 / 大胆-01)
(x19 / 提出-01, mode, x25 / 国王)
(x22 / 请求-02, century, x26 / 想-01)
(x26 / 想-01, prep-along-with, x27 / 我)
(x28 / 看-02, degree, x30 / 日落-01)
(x28 / 看-02, prep-along-with, x26 / 想-01)
(x7 / 想起-01, century, x8 / 他)
(x7 / 想起-01, degree, x12 / 遗弃-01)
(x7 / 想起-01, prep-along-with, x13 / 他)
(x9 / 星球, mod, x10 / 小-01)
(x9 / 星球, quant, x12 / 遗弃-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.3
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.2.2.1
WARNING: makeIds can't find span Id: 0.1.2.2.1.1
WARNING: makeIds can't find span Id: 0.1.2.2.0
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 93,792 microseconds
Sentence: 命令 太阳 落山 吧 … ”

Oracle Span 1:  命令 => 命令-01
Oracle Span 2:  太阳 => 太阳
Oracle Span 3:  落山 => 落山
NER Entity: (country :name (name :op "命令"))
Spans:
Span 0-1:  命令 => 命令-01
Span 1-2:  太阳 => 太阳
Span 2-3:  落山 => 落山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  命令 => 命令-01
Oracle Span 1-2:  太阳 => 太阳
Oracle Span 2-3:  落山 => 落山

Dependencies:
1	命令	_	NN	NN	_	2	nsubj	_	_
2	太阳	_	VV	VV	_	0	root	_	_
3	落山	_	NN	NN	_	5	nn	_	_
4	吧	_	NN	NN	_	5	nn	_	_
5	…	_	NN	NN	_	2	dobj	_	_
6	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 命令-01, arg1, x5 / 太阳)
(x2 / 命令-01, arg2, x6 / 落山)

Input(Some(Graph((say :arg1 (命令-01 :arg2 (落山 :arg0 x5) :arg1 太阳)),ArrayBuffer(Span(0,1,List(0),命令,命令-01,false), Span(2,3,List(1),落山,落山,false), Span(1,2,List(2),太阳,太阳,false)),Map(2 -> 太阳, 1 -> 落山, 0 -> 命令-01),Map(x2 -> 命令-01, x5 -> 太阳, x6 -> 落山))),[Ljava.lang.String;@79da1ec0,Annotation([Ljava.lang.String;@19fb8826,[Ljava.lang.String;@192d74fb,[Ljava.lang.String;@4bef0fe3),Annotation([Ljava.lang.String;@62ea3440,[Ljava.lang.String;@27953a83,[Ledu.cmu.lti.nlp.amr.Dependency;@556d0826),Annotation([Ljava.lang.String;@66ce957f,[Ljava.lang.String;@55b5f5d2,[Ljava.lang.String;@5bfa8cc5),Annotation([Ljava.lang.String;@666b83a4,[Ljava.lang.String;@749c877b,[Ledu.cmu.lti.nlp.amr.Entity;@efde75f))
AMR:
(x2 / 命令-01, prep-in, x5 / 太阳)
(x5 / 太阳, manner, x6 / 落山)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,172 microseconds
Sentence: 国王 说道 ： “ 如果 我 命令 一 个 将军 象 一 只 蝴蝶 那样 从 这 朵 花 飞到 那 朵 花 ， 或者 命令 他 写作 一 个 悲剧 剧本 或者 变 一 只 海鸟 ， 而 如果 这 位 将军 接到 命令 不 执行 的话 ， 那么 ， 我们 中 的 谁 是 错误 的 呢

Oracle Span 1:  写作 => 写作-01
Oracle Span 2:  剧本 => 剧本
Oracle Span 3:  变 => 变-01
Oracle Span 4:  命令 => 命令-01
Oracle Span 5:  命令 => 命令-01
Oracle Span 6:  命令 => 命令
Oracle Span 7:  国王 => 国王
Oracle Span 8:  将军 => 将军
Oracle Span 9:  悲剧 => 悲剧
Oracle Span 10:  我 => 我
Oracle Span 11:  我们 => 我们
Oracle Span 12:  执行 => 执行-01
Oracle Span 13:  接到 => 接到-01
Oracle Span 14:  海鸟 => 海鸟
Oracle Span 15:  花 => 花
Oracle Span 16:  花 => 花
Oracle Span 17:  蝴蝶 => 蝴蝶
Oracle Span 18:  说道 => 说道-01
Oracle Span 19:  这 => 这
Oracle Span 20:  那 => 那
Oracle Span 21:  错误 => 错误-01
Oracle Span 22:  飞到 => 飞到-01
Spans:
Span 27-28:  写作 => 写作-01
Span 31-32:  剧本 => 剧本
Span 33-34:  变 => 变-01
Span 6-7:  命令 => 命令-01
Span 25-26:  命令 => 命令-01
Span 44-45:  命令 => 命令
Span 0-1:  国王 => 国王
Span 9-10:  将军 => 将军
Span 30-31:  悲剧 => 悲剧
Span 5-6:  我 => 我
Span 51-52:  我们 => 我们
Span 46-47:  执行 => 执行-01
Span 43-44:  接到 => 接到-01
Span 36-37:  海鸟 => 海鸟
Span 18-19:  花 => 花
Span 22-23:  花 => 花
Span 13-14:  蝴蝶 => 蝴蝶
Span 1-2:  说道 => 说道-01
Span 16-17:  这 => 这
Span 20-21:  那 => 那
Span 56-57:  错误 => 错误-01
Span 19-20:  飞到 => 飞到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 27-28:  写作 => 写作-01
Oracle Span 31-32:  剧本 => 剧本
Oracle Span 33-34:  变 => 变-01
Oracle Span 6-7:  命令 => 命令-01
Oracle Span 25-26:  命令 => 命令-01
Oracle Span 44-45:  命令 => 命令
Oracle Span 0-1:  国王 => 国王
Oracle Span 9-10:  将军 => 将军
Oracle Span 30-31:  悲剧 => 悲剧
Oracle Span 5-6:  我 => 我
Oracle Span 51-52:  我们 => 我们
Oracle Span 46-47:  执行 => 执行-01
Oracle Span 43-44:  接到 => 接到-01
Oracle Span 36-37:  海鸟 => 海鸟
Oracle Span 18-19:  花 => 花
Oracle Span 22-23:  花 => 花
Oracle Span 13-14:  蝴蝶 => 蝴蝶
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 16-17:  这 => 这
Oracle Span 20-21:  那 => 那
Oracle Span 56-57:  错误 => 错误-01
Oracle Span 19-20:  飞到 => 飞到-01

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	如果	_	CS	CS	_	7	advmod	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	命令	_	VV	VV	_	56	dep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	将军	_	NN	NN	_	7	dobj	_	_
11	象	_	P	P	_	15	dep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	蝴蝶	_	NN	NN	_	11	pobj	_	_
15	那样	_	AD	AD	_	20	advmod	_	_
16	从	_	P	P	_	20	prep	_	_
17	这	_	DT	DT	_	19	det	_	_
18	朵	_	M	M	_	17	clf	_	_
19	花	_	NN	NN	_	16	pobj	_	_
20	飞到	_	VV	VV	_	7	dep	_	_
21	那	_	DT	DT	_	23	det	_	_
22	朵	_	M	M	_	21	clf	_	_
23	花	_	NN	NN	_	20	dobj	_	_
24	,	_	PU	PU	_	20	punct	_	_
25	或者	_	CC	CC	_	20	cc	_	_
26	命令	_	VV	VV	_	20	dep	_	_
27	他	_	PN	PN	_	28	nsubj	_	_
28	写作	_	VV	VV	_	26	ccomp	_	_
29	一	_	CD	CD	_	30	nummod	_	_
30	个	_	M	M	_	32	clf	_	_
31	悲剧	_	NN	NN	_	32	nn	_	_
32	剧本	_	NN	NN	_	28	dobj	_	_
33	或者	_	CC	CC	_	28	cc	_	_
34	变	_	VV	VV	_	28	conj	_	_
35	一	_	CD	CD	_	36	nummod	_	_
36	只	_	M	M	_	37	clf	_	_
37	海鸟	_	NN	NN	_	34	dobj	_	_
38	,	_	PU	PU	_	56	punct	_	_
39	而	_	AD	AD	_	56	advmod	_	_
40	如果	_	CS	CS	_	45	advmod	_	_
41	这	_	DT	DT	_	43	det	_	_
42	位	_	M	M	_	41	clf	_	_
43	将军	_	NN	NN	_	45	nsubj	_	_
44	接到	_	VV	VV	_	45	mmod	_	_
45	命令	_	VV	VV	_	56	pccomp	_	_
46	不	_	AD	AD	_	47	neg	_	_
47	执行	_	VV	VV	_	45	ccomp	_	_
48	的话	_	SP	SP	_	45	dep	_	_
49	,	_	PU	PU	_	56	punct	_	_
50	那么	_	AD	AD	_	56	advmod	_	_
51	,	_	PU	PU	_	56	punct	_	_
52	我们	_	PN	PN	_	53	lobj	_	_
53	中	_	LC	LC	_	55	assmod	_	_
54	的	_	DEG	DEG	_	53	assm	_	_
55	谁	_	PN	PN	_	56	top	_	_
56	是	_	VC	VC	_	2	ccomp	_	_
57	错误	_	VA	VA	_	56	attr	_	_
58	的	_	DEC	DEC	_	57	cpm	_	_
59	呢	_	SP	SP	_	56	dep	_	_
60	将军	_	NN	NN	_	47	xsubj	_	_

Oracle:
(x45 / 说道-01, arg0, x47 / 国王)
(x51 / 命令-01, arg0, x52 / 我)
(x51 / 命令-01, arg1, x53 / 将军)
(x59 / 飞到-01, arg1, x61 / 花)
(x59 / 飞到-01, arg2, x63 / 花)
(x61 / 花, mod, x62 / 那)
(x63 / 花, mod, x64 / 这)
(x69 / 写作-01, arg1, x71 / 剧本)
(x71 / 剧本, topic, x73 / 悲剧)
(x75 / 变-01, arg2, x76 / 海鸟)
(x84 / 接到-01, arg1, x86 / 命令)

Input(Some(Graph((说道-01 :mode interrogative :arg1 (condition :arg1 (and :op (or :op (命令-01 :arg2 (像-01 :arg0 x53 :arg1 (蝴蝶 :quant 1) :arg2 (飞到-01 :arg2 (花 :mod 这) :arg1 (花 :mod 那) :arg0 x57)) :arg1 (将军 :quant 1) :arg0 我) :op (命令-01 :arg2 (or :op (写作-01 :arg1 (剧本 :topic 悲剧 :quant 1) :arg0 x53) :op (变-01 :arg2 (海鸟 :quant 1))) :arg1 x53 :arg0 x52)) :op (contrast :arg2 (temporal :arg1 (condition :arg1 (接到-01 :arg1 命令 :arg0 x53)) :arg2 (执行-01 :arg1 x86 :polarity - :arg0 x53)))) :arg2 (错误-01 :arg0 (amr-unknown :prep-among 我们))) :arg0 国王),ArrayBuffer(Span(1,2,List(0),说道,说道-01,false), Span(6,7,List(1),命令,命令-01,false), Span(13,14,List(2),蝴蝶,蝴蝶,false), Span(19,20,List(3),飞到,飞到-01,false), Span(18,19,List(4),花,花,false), Span(16,17,List(5),这,这,false), Span(22,23,List(6),花,花,false), Span(20,21,List(7),那,那,false), Span(9,10,List(8),将军,将军,false), Span(5,6,List(9),我,我,false), Span(25,26,List(10),命令,命令-01,false), Span(27,28,List(11),写作,写作-01,false), Span(31,32,List(12),剧本,剧本,false), Span(30,31,List(13),悲剧,悲剧,false), Span(33,34,List(14),变,变-01,false), Span(36,37,List(15),海鸟,海鸟,false), Span(43,44,List(16),接到,接到-01,false), Span(44,45,List(17),命令,命令,false), Span(46,47,List(18),执行,执行-01,false), Span(56,57,List(19),错误,错误-01,false), Span(51,52,List(20),我们,我们,false), Span(0,1,List(21),国王,国王,false)),Map(2 -> 蝴蝶, 5 -> 这, 12 -> 剧本, 15 -> 海鸟, 8 -> 将军, 21 -> 国王, 18 -> 执行-01, 7 -> 那, 17 -> 命令, 1 -> 命令-01, 4 -> 花, 11 -> 写作-01, 14 -> 变-01, 20 -> 我们, 6 -> 花, 9 -> 我, 0 -> 说道-01, 16 -> 接到-01, 19 -> 错误-01, 10 -> 命令-01, 3 -> 飞到-01, 13 -> 悲剧),Map(x52 -> 我, x73 -> 悲剧, x61 -> 花, x76 -> 海鸟, x93 -> 我们, x75 -> 变-01, x63 -> 花, x57 -> 蝴蝶, x84 -> 接到-01, x87 -> 执行-01, x51 -> 命令-01, x45 -> 说道-01, x69 -> 写作-01, x86 -> 命令, x62 -> 那, x59 -> 飞到-01, x71 -> 剧本, x65 -> 命令-01, x47 -> 国王, x53 -> 将军, x91 -> 错误-01, x64 -> 这))),[Ljava.lang.String;@16ecee1,Annotation([Ljava.lang.String;@3b220bcb,[Ljava.lang.String;@2b95e48b,[Ljava.lang.String;@4a3329b9),Annotation([Ljava.lang.String;@3dddefd8,[Ljava.lang.String;@160ac7fb,[Ledu.cmu.lti.nlp.amr.Dependency;@12bfd80d),Annotation([Ljava.lang.String;@41925502,[Ljava.lang.String;@13e3c1c7,[Ljava.lang.String;@5316e95f),Annotation([Ljava.lang.String;@3f053c80,[Ljava.lang.String;@6c6c5427,[Ledu.cmu.lti.nlp.amr.Entity;@618c5d94))
AMR:
(x45 / 说道-01, conj-as-if, x47 / 国王)
(x45 / 说道-01, conj-as-if, x51 / 命令-01)
(x51 / 命令-01, domain, x52 / 我)
(x51 / 命令-01, prep-in, x53 / 将军)
(x57 / 蝴蝶, mod, x53 / 将军)
(x59 / 飞到-01, domain, x63 / 花)
(x59 / 飞到-01, mod, x62 / 那)
(x61 / 花, mod, x62 / 那)
(x63 / 花, domain, x57 / 蝴蝶)
(x63 / 花, mod, x64 / 这)
(x65 / 命令-01, destination, x69 / 写作-01)
(x65 / 命令-01, domain, x61 / 花)
(x71 / 剧本, topic, x73 / 悲剧)
(x73 / 悲剧, mod, x69 / 写作-01)
(x75 / 变-01, time, x71 / 剧本)
(x76 / 海鸟, mod, x75 / 变-01)
(x84 / 接到-01, domain, x76 / 海鸟)
(x84 / 接到-01, prep-in, x86 / 命令)
(x86 / 命令, domain, x93 / 我们)
(x87 / 执行-01, domain, x86 / 命令)
(x91 / 错误-01, domain, x93 / 我们)

WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.1
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.2
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.2.2
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.2.2.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.2.1
WARNING: makeIds can't find span Id: 0.1.0.0.0.2.2.1.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.1.0.0.1.2.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.2.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.2.1
WARNING: makeIds can't find span Id: 0.1.0.0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.1.0.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 185,260 microseconds
Sentence: 将军 还是 我 自己 ？ ”

Oracle Span 1:  将军 => 将军
Oracle Span 2:  我 => 我
Spans:
Span 0-1:  将军 => 将军
Span 2-3:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  将军 => 将军
Oracle Span 2-3:  我 => 我

Dependencies:
1	将军	_	NN	NN	_	4	nsubj	_	_
2	还是	_	AD	AD	_	4	advmod	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	自己	_	PN	PN	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (or :op 将军 :op 我) :mode interrogative),ArrayBuffer(Span(0,1,List(0),将军,将军,false), Span(2,3,List(1),我,我,false)),Map(1 -> 我, 0 -> 将军),Map(x11 -> 我, x9 -> 将军))),[Ljava.lang.String;@5b40ceb,Annotation([Ljava.lang.String;@13c3c1e1,[Ljava.lang.String;@1d8062d2,[Ljava.lang.String;@1e63ec0b),Annotation([Ljava.lang.String;@3b956878,[Ljava.lang.String;@36546a22,[Ledu.cmu.lti.nlp.amr.Dependency;@285c08c8),Annotation([Ljava.lang.String;@295eaa7c,[Ljava.lang.String;@3918c187,[Ljava.lang.String;@2c88b9fc),Annotation([Ljava.lang.String;@64dafeed,[Ljava.lang.String;@388ba540,[Ledu.cmu.lti.nlp.amr.Entity;@47605f2f))
AMR:
(x9 / 将军, destination, x11 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 3,104 microseconds
Sentence: “ 那 当然 是 您 的 不对 。 ” 小 王子 肯定 地 回答 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  当然 => 当然
Oracle Span 4:  您 => 您
Oracle Span 5:  王子 => 王子
Oracle Span 6:  肯定 => 肯定-02
Spans:
Span 13-14:  回答 => 回答-01
Span 9-10:  小 => 小-01
Span 2-3:  当然 => 当然
Span 4-5:  您 => 您
Span 10-11:  王子 => 王子
Span 11-12:  肯定 => 肯定-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  回答 => 回答-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 2-3:  当然 => 当然
Oracle Span 4-5:  您 => 您
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  肯定 => 肯定-02

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那	_	PN	PN	_	4	nsubj	_	_
3	当然	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	您	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	不对	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	14	nsubj	_	_
12	肯定	_	VA	VA	_	14	dvpmod	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	回答	_	VV	VV	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x3 / 王子)
(x0 / 回答-01, manner, x2 / 肯定-02)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 您, manner, x9 / 当然)

Input(Some(Graph((回答-01 :arg2 (对-02 :polarity - :arg0 (您 :manner 当然)) :arg0 (王子 :mod 小-01) :manner 肯定-02),ArrayBuffer(Span(13,14,List(0),回答,回答-01,false), Span(4,5,List(1),您,您,false), Span(2,3,List(2),当然,当然,false), Span(10,11,List(3),王子,王子,false), Span(9,10,List(4),小,小-01,false), Span(11,12,List(5),肯定,肯定-02,false)),Map(2 -> 当然, 5 -> 肯定-02, 1 -> 您, 4 -> 小-01, 0 -> 回答-01, 3 -> 王子),Map(x2 -> 肯定-02, x8 -> 您, x4 -> 小-01, x3 -> 王子, x9 -> 当然, x0 -> 回答-01))),[Ljava.lang.String;@2ece4966,Annotation([Ljava.lang.String;@1dd0e7c4,[Ljava.lang.String;@7894f09b,[Ljava.lang.String;@3d484181),Annotation([Ljava.lang.String;@6111ba37,[Ljava.lang.String;@7be58f16,[Ledu.cmu.lti.nlp.amr.Dependency;@242aa8d9),Annotation([Ljava.lang.String;@5b11a194,[Ljava.lang.String;@37bd68c3,[Ljava.lang.String;@60f7cc1d),Annotation([Ljava.lang.String;@11eadcba,[Ljava.lang.String;@4721d212,[Ledu.cmu.lti.nlp.amr.Entity;@1b065145))
AMR:
(x0 / 回答-01, manner, x2 / 肯定-02)
(x0 / 回答-01, manner, x9 / 当然)
(x2 / 肯定-02, direction, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 您, manner, x9 / 当然)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,998 microseconds
Sentence: “ 一点 也 不错 ， ”

Oracle Span 1:  一点 => 一点
Oracle Span 2:  不错 => 不错-01
Oracle Span 3:  也 => 也
Spans:
Span 1-2:  一点 => 一点
Span 3-4:  不错 => 不错-01
Span 2-3:  也 => 也

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点
Oracle Span 3-4:  不错 => 不错-01
Oracle Span 2-3:  也 => 也

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一点	_	CD	CD	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	不错	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 不错-01, degree, x9 / 一点)
(x8 / 不错-01, manner, x10 / 也)

Input(Some(Graph((say :arg1 (不错-01 :manner 也 :degree 一点)),ArrayBuffer(Span(3,4,List(0),不错,不错-01,false), Span(2,3,List(1),也,也,false), Span(1,2,List(2),一点,一点,false)),Map(2 -> 一点, 1 -> 也, 0 -> 不错-01),Map(x10 -> 也, x8 -> 不错-01, x9 -> 一点))),[Ljava.lang.String;@45cff11c,Annotation([Ljava.lang.String;@207ea13,[Ljava.lang.String;@4bff1903,[Ljava.lang.String;@62dae540),Annotation([Ljava.lang.String;@5827af16,[Ljava.lang.String;@654d8173,[Ledu.cmu.lti.nlp.amr.Dependency;@56c9bbd8),Annotation([Ljava.lang.String;@630cb4a4,[Ljava.lang.String;@636e8cc,[Ljava.lang.String;@f79a760),Annotation([Ljava.lang.String;@14f5da2c,[Ljava.lang.String;@12dae582,[Ledu.cmu.lti.nlp.amr.Entity;@239b0f9d))
AMR:
(x8 / 不错-01, degree, x9 / 一点)
(x8 / 不错-01, manner, x10 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,490 microseconds
Sentence: 国王 接着 说 ， “ 向 每 个 人 提出 的 要求 应该 是 他们 所 能 做到 的 。

Oracle Span 1:  人 => 人
Oracle Span 2:  做到 => 做到-01
Oracle Span 3:  国王 => 国王
Oracle Span 4:  应该 => 应该-02
Oracle Span 5:  提出 => 提出-01
Oracle Span 6:  每 => 每
Oracle Span 7:  能 => 能-01
Oracle Span 8:  要求 => 要求-02
Oracle Span 9:  说 => 说-01
Spans:
Span 8-9:  人 => 人
Span 17-18:  做到 => 做到-01
Span 0-1:  国王 => 国王
Span 12-13:  应该 => 应该-02
Span 9-10:  提出 => 提出-01
Span 6-7:  每 => 每
Span 16-17:  能 => 能-01
Span 11-12:  要求 => 要求-02
Span 2-3:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 17-18:  做到 => 做到-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 12-13:  应该 => 应该-02
Oracle Span 9-10:  提出 => 提出-01
Oracle Span 6-7:  每 => 每
Oracle Span 16-17:  能 => 能-01
Oracle Span 11-12:  要求 => 要求-02
Oracle Span 2-3:  说 => 说-01

Dependencies:
1	国王	_	NN	NN	_	2	nn	_	_
2	接着	_	NN	NN	_	3	nsubj	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	14	punct	_	_
6	向	_	P	P	_	10	prep	_	_
7	每	_	DT	DT	_	9	det	_	_
8	个	_	M	M	_	7	clf	_	_
9	人	_	NN	NN	_	6	pobj	_	_
10	提出	_	VV	VV	_	12	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	要求	_	NN	NN	_	14	nsubj	_	_
13	应该	_	VV	VV	_	14	mmod	_	_
14	是	_	VC	VC	_	3	ccomp	_	_
15	他们	_	PN	PN	_	18	nsubj	_	_
16	所	_	MSP	MSP	_	18	prtmod	_	_
17	能	_	VV	VV	_	18	dep	_	_
18	做到	_	VV	VV	_	14	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 提出-01, arg0, x12 / 人)
(x11 / 提出-01, arg1, x14 / 要求-02)
(x12 / 人, mod, x13 / 每)
(x2 / 说-01, arg0, x3 / 国王)
(x2 / 说-01, arg1, x4 / 应该-02)
(x4 / 应该-02, arg0, x5 / 能-01)
(x5 / 能-01, arg0, x6 / 做到-01)
(x5 / 能-01, domain, x11 / 提出-01)

Input(Some(Graph((temporal :arg2 (说-01 :arg1 (应该-02 :arg0 (能-01 :domain (提出-01 :arg1 要求-02 :arg0 (人 :mod 每)) :arg0 (做到-01 :arg0 x12))) :arg0 国王)),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(12,13,List(1),应该,应该-02,false), Span(16,17,List(2),能,能-01,false), Span(9,10,List(3),提出,提出-01,false), Span(11,12,List(4),要求,要求-02,false), Span(8,9,List(5),人,人,false), Span(6,7,List(6),每,每,false), Span(17,18,List(7),做到,做到-01,false), Span(0,1,List(8),国王,国王,false)),Map(2 -> 能-01, 5 -> 人, 8 -> 国王, 7 -> 做到-01, 1 -> 应该-02, 4 -> 要求-02, 6 -> 每, 0 -> 说-01, 3 -> 提出-01),Map(x2 -> 说-01, x13 -> 每, x5 -> 能-01, x12 -> 人, x4 -> 应该-02, x3 -> 国王, x11 -> 提出-01, x6 -> 做到-01, x14 -> 要求-02))),[Ljava.lang.String;@619bfe29,Annotation([Ljava.lang.String;@5b057c8c,[Ljava.lang.String;@1eb6749b,[Ljava.lang.String;@652a7737),Annotation([Ljava.lang.String;@5b7ea70d,[Ljava.lang.String;@2bef51f2,[Ledu.cmu.lti.nlp.amr.Dependency;@650eab8),Annotation([Ljava.lang.String;@30f5a68a,[Ljava.lang.String;@1e1d3956,[Ljava.lang.String;@4f2c9ba6),Annotation([Ljava.lang.String;@4e28bdd1,[Ljava.lang.String;@53f48368,[Ledu.cmu.lti.nlp.amr.Entity;@24d4d7c9))
AMR:
(x11 / 提出-01, destination, x14 / 要求-02)
(x11 / 提出-01, manner, x12 / 人)
(x12 / 人, mod, x13 / 每)
(x13 / 每, topic, x2 / 说-01)
(x2 / 说-01, conj-as-if, x3 / 国王)
(x4 / 应该-02, time, x14 / 要求-02)
(x5 / 能-01, domain, x11 / 提出-01)
(x5 / 能-01, name, x6 / 做到-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 27,195 microseconds
Sentence: 权威 首先 应该 建立 在 理性 的 基础 上 。

Oracle Span 1:  应该 => 应该-02
Oracle Span 2:  建立 => 建立-01
Oracle Span 3:  权威 => 权威
Oracle Span 4:  理性 => 理性
Oracle Span 5:  首先 => 首先
Spans:
Span 2-3:  应该 => 应该-02
Span 3-4:  建立 => 建立-01
Span 0-1:  权威 => 权威
Span 5-6:  理性 => 理性
Span 1-2:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  应该 => 应该-02
Oracle Span 3-4:  建立 => 建立-01
Oracle Span 0-1:  权威 => 权威
Oracle Span 5-6:  理性 => 理性
Oracle Span 1-2:  首先 => 首先

Dependencies:
1	权威	_	NN	NN	_	4	nsubj	_	_
2	首先	_	AD	AD	_	4	advmod	_	_
3	应该	_	VV	VV	_	4	mmod	_	_
4	建立	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	4	prep	_	_
6	理性	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	基础	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	5	plmod	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 建立-01, arg1, x11 / 权威)
(x10 / 建立-01, arg2, x12 / 理性)
(x8 / 应该-02, arg0, x10 / 建立-01)
(x8 / 应该-02, manner, x13 / 首先)

Input(Some(Graph((应该-02 :manner 首先 :arg0 (建立-01 :arg2 理性 :arg1 权威)),ArrayBuffer(Span(2,3,List(0),应该,应该-02,false), Span(1,2,List(1),首先,首先,false), Span(3,4,List(2),建立,建立-01,false), Span(5,6,List(3),理性,理性,false), Span(0,1,List(4),权威,权威,false)),Map(2 -> 建立-01, 1 -> 首先, 4 -> 权威, 0 -> 应该-02, 3 -> 理性),Map(x10 -> 建立-01, x13 -> 首先, x8 -> 应该-02, x12 -> 理性, x11 -> 权威))),[Ljava.lang.String;@f0e995e,Annotation([Ljava.lang.String;@4c37b5b,[Ljava.lang.String;@73db4768,[Ljava.lang.String;@71b3bc45),Annotation([Ljava.lang.String;@a8c1f44,[Ljava.lang.String;@150ab4ed,[Ledu.cmu.lti.nlp.amr.Dependency;@3c435123),Annotation([Ljava.lang.String;@50fe837a,[Ljava.lang.String;@3a62c01e,[Ljava.lang.String;@7a8fa663),Annotation([Ljava.lang.String;@5ce33a58,[Ljava.lang.String;@78a287ed,[Ledu.cmu.lti.nlp.amr.Entity;@546ccad7))
AMR:
(x10 / 建立-01, ARG4, x12 / 理性)
(x10 / 建立-01, prep-on-behalf, x11 / 权威)
(x8 / 应该-02, manner, x13 / 首先)
(x8 / 应该-02, op, x10 / 建立-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,048 microseconds
Sentence: 如果 命令 你 的 老百姓 去 投 海 ， 他们 非 起来 革命 不 可 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  你 => 你
Oracle Span 3:  去 => 去-01
Oracle Span 4:  命令 => 命令-01
Oracle Span 5:  投 => 投-01
Oracle Span 6:  海 => 海
Oracle Span 7:  老百姓 => 老百姓
Oracle Span 8:  革命 => 革命-01
Spans:
Span 9-10:  他们 => 他们
Span 2-3:  你 => 你
Span 5-6:  去 => 去-01
Span 1-2:  命令 => 命令-01
Span 6-7:  投 => 投-01
Span 7-8:  海 => 海
Span 4-5:  老百姓 => 老百姓
Span 12-13:  革命 => 革命-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  他们 => 他们
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  去 => 去-01
Oracle Span 1-2:  命令 => 命令-01
Oracle Span 6-7:  投 => 投-01
Oracle Span 7-8:  海 => 海
Oracle Span 4-5:  老百姓 => 老百姓
Oracle Span 12-13:  革命 => 革命-01

Dependencies:
1	如果	_	CS	CS	_	2	advmod	_	_
2	命令	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	老百姓	_	NN	NN	_	7	nsubj	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	投	_	VV	VV	_	2	ccomp	_	_
8	海	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	他们	_	PN	PN	_	12	nsubj	_	_
11	非	_	AD	AD	_	12	advmod	_	_
12	起来	_	VV	VV	_	7	conj	_	_
13	革命	_	NN	NN	_	12	dobj	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	可	_	VV	VV	_	2	ccomp	_	_
16	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 革命-01, arg0, x12 / 他们)
(x2 / 命令-01, arg1, x3 / 老百姓)
(x2 / 命令-01, arg2, x5 / 去-01)
(x3 / 老百姓, poss, x4 / 你)
(x5 / 去-01, arg1, x7 / 投-01)
(x7 / 投-01, arg1, x9 / 海)

Input(Some(Graph((condition :arg1 (命令-01 :arg2 (去-01 :arg1 (投-01 :arg1 海 :arg0 x3) :arg0 x3) :arg1 (老百姓 :poss 你)) :arg2 (obligate :arg1 (革命-01 :arg0 他们))),ArrayBuffer(Span(1,2,List(0),命令,命令-01,false), Span(5,6,List(1),去,去-01,false), Span(6,7,List(2),投,投-01,false), Span(7,8,List(3),海,海,false), Span(4,5,List(4),老百姓,老百姓,false), Span(2,3,List(5),你,你,false), Span(12,13,List(6),革命,革命-01,false), Span(9,10,List(7),他们,他们,false)),Map(2 -> 投-01, 5 -> 你, 7 -> 他们, 1 -> 去-01, 4 -> 老百姓, 6 -> 革命-01, 0 -> 命令-01, 3 -> 海),Map(x2 -> 命令-01, x5 -> 去-01, x12 -> 他们, x7 -> 投-01, x4 -> 你, x11 -> 革命-01, x3 -> 老百姓, x9 -> 海))),[Ljava.lang.String;@5357c287,Annotation([Ljava.lang.String;@1623134f,[Ljava.lang.String;@7a527389,[Ljava.lang.String;@485a3466),Annotation([Ljava.lang.String;@25748410,[Ljava.lang.String;@2b43529a,[Ledu.cmu.lti.nlp.amr.Dependency;@4264b240),Annotation([Ljava.lang.String;@5b04476e,[Ljava.lang.String;@5ad10c1a,[Ljava.lang.String;@6bb75258),Annotation([Ljava.lang.String;@c260bdc,[Ljava.lang.String;@75e01201,[Ledu.cmu.lti.nlp.amr.Entity;@2783717b))
AMR:
(x11 / 革命-01, ARG3, x12 / 他们)
(x2 / 命令-01, ARG4, x5 / 去-01)
(x2 / 命令-01, op, x3 / 老百姓)
(x3 / 老百姓, poss, x4 / 你)
(x5 / 去-01, prep-through, x7 / 投-01)
(x7 / 投-01, ARG3, x11 / 革命-01)
(x7 / 投-01, quant, x9 / 海)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 24,636 microseconds
Sentence: 我 的 命令 是 合理 的 ， 所以 我 有 权 要 别人 服从 。 ”

Oracle Span 1:  别人 => 别人
Oracle Span 2:  合理 => 合理-01
Oracle Span 3:  命令 => 命令
Oracle Span 4:  我 => 我
Oracle Span 5:  服从 => 服从-01
Oracle Span 6:  要 => 要-03
Spans:
Span 12-13:  别人 => 别人
Span 4-5:  合理 => 合理-01
Span 2-3:  命令 => 命令
Span 0-1:  我 => 我
Span 13-14:  服从 => 服从-01
Span 11-12:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  别人 => 别人
Oracle Span 4-5:  合理 => 合理-01
Oracle Span 2-3:  命令 => 命令
Oracle Span 0-1:  我 => 我
Oracle Span 13-14:  服从 => 服从-01
Oracle Span 11-12:  要 => 要-03

Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	命令	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	合理	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	所以	_	AD	AD	_	10	advmod	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	有	_	VE	VE	_	4	conj	_	_
11	权	_	NN	NN	_	10	dobj	_	_
12	要	_	VV	VV	_	10	conj	_	_
13	别人	_	NN	NN	_	12	dobj	_	_
14	服从	_	VV	VV	_	12	conj	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x17 / 合理-01, arg0, x18 / 命令)
(x18 / 命令, poss, x19 / 我)
(x22 / 要-03, arg0, x23 / 服从-01)
(x23 / 服从-01, arg0, x24 / 别人)

Input(Some(Graph((say :arg1 (causation :arg1 (合理-01 :arg0 (命令 :poss 我)) :arg2 (有权-01 :arg0 x19 :arg1 (要-03 :arg0 (服从-01 :arg1 x19 :arg0 别人))))),ArrayBuffer(Span(4,5,List(0),合理,合理-01,false), Span(2,3,List(1),命令,命令,false), Span(0,1,List(2),我,我,false), Span(11,12,List(3),要,要-03,false), Span(13,14,List(4),服从,服从-01,false), Span(12,13,List(5),别人,别人,false)),Map(2 -> 我, 5 -> 别人, 1 -> 命令, 4 -> 服从-01, 0 -> 合理-01, 3 -> 要-03),Map(x22 -> 要-03, x19 -> 我, x24 -> 别人, x18 -> 命令, x23 -> 服从-01, x17 -> 合理-01))),[Ljava.lang.String;@76f7d241,Annotation([Ljava.lang.String;@4a335fa8,[Ljava.lang.String;@3f363cf5,[Ljava.lang.String;@3829ac1),Annotation([Ljava.lang.String;@4baf352a,[Ljava.lang.String;@1bb1fde8,[Ledu.cmu.lti.nlp.amr.Dependency;@15eebbff),Annotation([Ljava.lang.String;@22d6f11,[Ljava.lang.String;@30990c1b,[Ljava.lang.String;@2453f95d),Annotation([Ljava.lang.String;@44828f6b,[Ljava.lang.String;@2dbe250d,[Ledu.cmu.lti.nlp.amr.Entity;@553f1d75))
AMR:
(x17 / 合理-01, polite, x18 / 命令)
(x18 / 命令, poss, x19 / 我)
(x22 / 要-03, prep-along-with, x23 / 服从-01)
(x23 / 服从-01, beneficiary, x24 / 别人)
(x23 / 服从-01, degree, x18 / 命令)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.0
Decoded in 14,743 microseconds
Sentence: “ 那么 我 提出 的 日落 呢 ？ ” 小 王子 一旦 提出 一 个 问题 ， 他 是 不 会 忘记 这 个 问题 的 。

Oracle Span 1:  他 => 他
Oracle Span 2:  会 => 会-02
Oracle Span 3:  小 => 小-01
Oracle Span 4:  忘记 => 忘记-01
Oracle Span 5:  我 => 我
Oracle Span 6:  提出 => 提出-01
Oracle Span 7:  提出 => 提出-01
Oracle Span 8:  日落 => 日落
Oracle Span 9:  王子 => 王子
Oracle Span 10:  这 => 这
Oracle Span 11:  问题 => 问题
Oracle Span 12:  问题 => 问题
Spans:
Span 17-18:  他 => 他
Span 20-21:  会 => 会-02
Span 9-10:  小 => 小-01
Span 21-22:  忘记 => 忘记-01
Span 2-3:  我 => 我
Span 3-4:  提出 => 提出-01
Span 12-13:  提出 => 提出-01
Span 5-6:  日落 => 日落
Span 10-11:  王子 => 王子
Span 22-23:  这 => 这
Span 15-16:  问题 => 问题
Span 24-25:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  他 => 他
Oracle Span 20-21:  会 => 会-02
Oracle Span 9-10:  小 => 小-01
Oracle Span 21-22:  忘记 => 忘记-01
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 12-13:  提出 => 提出-01
Oracle Span 5-6:  日落 => 日落
Oracle Span 10-11:  王子 => 王子
Oracle Span 22-23:  这 => 这
Oracle Span 15-16:  问题 => 问题
Oracle Span 24-25:  问题 => 问题

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	我	_	PN	PN	_	11	rcmod	_	_
4	提出	_	VV	VV	_	6	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	日落	_	VA	VA	_	3	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	13	nsubj	_	_
12	一旦	_	CS	CS	_	13	advmod	_	_
13	提出	_	VV	VV	_	0	root	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	个	_	M	M	_	16	clf	_	_
16	问题	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_
18	他	_	PN	PN	_	19	top	_	_
19	是	_	VC	VC	_	13	conj	_	_
20	不	_	AD	AD	_	22	neg	_	_
21	会	_	VV	VV	_	22	mmod	_	_
22	忘记	_	VV	VV	_	19	attr	_	_
23	这	_	DT	DT	_	25	det	_	_
24	个	_	M	M	_	23	clf	_	_
25	问题	_	NN	NN	_	22	dobj	_	_
26	的	_	DEC	DEC	_	22	cpm	_	_
27	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 会-02, arg0, x15 / 忘记-01)
(x15 / 忘记-01, arg0, x16 / 他)
(x15 / 忘记-01, arg1, x17 / 问题)
(x17 / 问题, mod, x18 / 这)
(x3 / 提出-01, arg0, x4 / 我)
(x3 / 提出-01, arg1, x5 / 日落)
(x8 / 提出-01, arg0, x9 / 王子)
(x8 / 提出-01, arg1, x11 / 问题)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (temporal :arg2 (提出-01 :mode interrogative :arg1 日落 :arg0 我)) :snt2 (condition :arg1 (提出-01 :arg1 (问题 :quant 1) :arg0 (王子 :mod 小-01)) :arg2 (会-02 :arg0 (忘记-01 :arg1 (问题 :mod 这) :arg0 他) :polarity -))),ArrayBuffer(Span(3,4,List(0),提出,提出-01,false), Span(5,6,List(1),日落,日落,false), Span(2,3,List(2),我,我,false), Span(12,13,List(3),提出,提出-01,false), Span(15,16,List(4),问题,问题,false), Span(10,11,List(5),王子,王子,false), Span(9,10,List(6),小,小-01,false), Span(20,21,List(7),会,会-02,false), Span(21,22,List(8),忘记,忘记-01,false), Span(24,25,List(9),问题,问题,false), Span(22,23,List(10),这,这,false), Span(17,18,List(11),他,他,false)),Map(2 -> 我, 5 -> 王子, 8 -> 忘记-01, 7 -> 会-02, 1 -> 日落, 4 -> 问题, 11 -> 他, 6 -> 小-01, 9 -> 问题, 0 -> 提出-01, 10 -> 这, 3 -> 提出-01),Map(x16 -> 他, x10 -> 小-01, x5 -> 日落, x13 -> 会-02, x8 -> 提出-01, x15 -> 忘记-01, x18 -> 这, x4 -> 我, x11 -> 问题, x3 -> 提出-01, x9 -> 王子, x17 -> 问题))),[Ljava.lang.String;@6e1d8f9e,Annotation([Ljava.lang.String;@3e34ace1,[Ljava.lang.String;@62fe6067,[Ljava.lang.String;@4f071df8),Annotation([Ljava.lang.String;@4de41af9,[Ljava.lang.String;@56ace400,[Ledu.cmu.lti.nlp.amr.Dependency;@47404bea),Annotation([Ljava.lang.String;@305f7627,[Ljava.lang.String;@5d018107,[Ljava.lang.String;@6cbcf243),Annotation([Ljava.lang.String;@29e6eb25,[Ljava.lang.String;@62435e70,[Ledu.cmu.lti.nlp.amr.Entity;@339bf286))
AMR:
(x13 / 会-02, prep-through, x15 / 忘记-01)
(x15 / 忘记-01, location, x16 / 他)
(x15 / 忘记-01, prep-through, x18 / 这)
(x17 / 问题, mod, x18 / 这)
(x3 / 提出-01, example, x4 / 我)
(x3 / 提出-01, prep-through, x5 / 日落)
(x8 / 提出-01, prep-through, x11 / 问题)
(x8 / 提出-01, prep-through, x15 / 忘记-01)
(x8 / 提出-01, prep-through, x5 / 日落)
(x8 / 提出-01, prep-through, x9 / 王子)
(x9 / 王子, mod, x10 / 小-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.0
Decoded in 49,929 microseconds
Sentence: “ 日落 么 ， 你 会 看到 的 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  日落 => 日落
Oracle Span 4:  看到 => 看到-01
Spans:
Span 5-6:  会 => 会-02
Span 4-5:  你 => 你
Span 1-2:  日落 => 日落
Span 6-7:  看到 => 看到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  日落 => 日落
Oracle Span 6-7:  看到 => 看到-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	日落	_	VV	VV	_	7	dep	_	_
3	么	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	你	_	PN	PN	_	7	nsubj	_	_
6	会	_	VV	VV	_	7	dep	_	_
7	看到	_	VV	VV	_	0	root	_	_
8	的	_	SP	SP	_	7	dep	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x7 / 会-02, arg0, x9 / 看到-01)
(x9 / 看到-01, arg0, x10 / 你)
(x9 / 看到-01, arg1, x11 / 日落)

Input(Some(Graph((say :arg1 (会-02 :arg0 (看到-01 :arg1 日落 :arg0 你))),ArrayBuffer(Span(5,6,List(0),会,会-02,false), Span(6,7,List(1),看到,看到-01,false), Span(1,2,List(2),日落,日落,false), Span(4,5,List(3),你,你,false)),Map(2 -> 日落, 1 -> 看到-01, 0 -> 会-02, 3 -> 你),Map(x10 -> 你, x7 -> 会-02, x11 -> 日落, x9 -> 看到-01))),[Ljava.lang.String;@38be305c,Annotation([Ljava.lang.String;@269f4bad,[Ljava.lang.String;@5ed731d0,[Ljava.lang.String;@3234f74e),Annotation([Ljava.lang.String;@7bc10d84,[Ljava.lang.String;@275fe372,[Ledu.cmu.lti.nlp.amr.Dependency;@40e10ff8),Annotation([Ljava.lang.String;@557a1e2d,[Ljava.lang.String;@26a4842b,[Ljava.lang.String;@7e38a7fe),Annotation([Ljava.lang.String;@366ef90e,[Ljava.lang.String;@33e01298,[Ledu.cmu.lti.nlp.amr.Entity;@31e75d13))
AMR:
(x7 / 会-02, conj-as-if, x10 / 你)
(x7 / 会-02, prep-through, x9 / 看到-01)
(x7 / 会-02, topic, x11 / 日落)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,421 microseconds
Sentence: 我 一定 要 太阳 落山 ，

Oracle Span 1:  一定 => 一定
Oracle Span 2:  太阳 => 太阳
Oracle Span 3:  我 => 我
Oracle Span 4:  落山 => 落山
Oracle Span 5:  要 => 要-04
Spans:
Span 1-2:  一定 => 一定
Span 3-4:  太阳 => 太阳
Span 0-1:  我 => 我
Span 4-5:  落山 => 落山
Span 2-3:  要 => 要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一定 => 一定
Oracle Span 3-4:  太阳 => 太阳
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  落山 => 落山
Oracle Span 2-3:  要 => 要-04

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	一定	_	AD	AD	_	5	advmod	_	_
3	要	_	VV	VV	_	5	mmod	_	_
4	太阳	_	NN	NN	_	5	dep	_	_
5	落山	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 一定, arg0, x15 / 要-04)
(x15 / 要-04, arg0, x16 / 我)
(x15 / 要-04, arg1, x17 / 太阳)
(x15 / 要-04, arg2, x18 / 落山)

Input(Some(Graph((一定 :arg0 (要-04 :arg2 落山 :arg1 太阳 :arg0 我)),ArrayBuffer(Span(1,2,List(0),一定,一定,false), Span(2,3,List(1),要,要-04,false), Span(4,5,List(2),落山,落山,false), Span(3,4,List(3),太阳,太阳,false), Span(0,1,List(4),我,我,false)),Map(2 -> 落山, 1 -> 要-04, 4 -> 我, 0 -> 一定, 3 -> 太阳),Map(x16 -> 我, x13 -> 一定, x15 -> 要-04, x18 -> 落山, x17 -> 太阳))),[Ljava.lang.String;@a5b0b86,Annotation([Ljava.lang.String;@4b3c354a,[Ljava.lang.String;@78fb9a67,[Ljava.lang.String;@73ff4fae),Annotation([Ljava.lang.String;@21aa6d6c,[Ljava.lang.String;@b968a76,[Ledu.cmu.lti.nlp.amr.Dependency;@2f9a01c1),Annotation([Ljava.lang.String;@2611b9a3,[Ljava.lang.String;@54227100,[Ljava.lang.String;@6b5894c8),Annotation([Ljava.lang.String;@1433046b,[Ljava.lang.String;@3f446bef,[Ledu.cmu.lti.nlp.amr.Entity;@7829b776))
AMR:
(x13 / 一定, degree, x15 / 要-04)
(x15 / 要-04, ARG5, x17 / 太阳)
(x15 / 要-04, medium, x16 / 我)
(x15 / 要-04, op, x18 / 落山)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,345 microseconds
Sentence: 不过 按照 我 的 统治 科学 ， 我 得 等到 条件 成熟 的 时候 。 ”

Oracle Span 1:  得 => 得-02
Oracle Span 2:  成熟 => 成熟-01
Oracle Span 3:  我 => 我
Oracle Span 4:  按照 => 按照-01
Oracle Span 5:  条件 => 条件
Oracle Span 6:  科学 => 科学
Oracle Span 7:  等到 => 等到-01
Oracle Span 8:  统治 => 统治-01
Spans:
Span 8-9:  得 => 得-02
Span 11-12:  成熟 => 成熟-01
Span 2-3:  我 => 我
Span 1-2:  按照 => 按照-01
Span 10-11:  条件 => 条件
Span 5-6:  科学 => 科学
Span 9-10:  等到 => 等到-01
Span 4-5:  统治 => 统治-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  得 => 得-02
Oracle Span 11-12:  成熟 => 成熟-01
Oracle Span 2-3:  我 => 我
Oracle Span 1-2:  按照 => 按照-01
Oracle Span 10-11:  条件 => 条件
Oracle Span 5-6:  科学 => 科学
Oracle Span 9-10:  等到 => 等到-01
Oracle Span 4-5:  统治 => 统治-01

Dependencies:
1	不过	_	AD	AD	_	10	advmod	_	_
2	按照	_	P	P	_	10	prep	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	统治	_	NN	NN	_	6	nn	_	_
6	科学	_	NN	NN	_	2	pobj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	得	_	VV	VV	_	10	mmod	_	_
10	等到	_	VV	VV	_	0	root	_	_
11	条件	_	NN	NN	_	12	nsubj	_	_
12	成熟	_	VA	VA	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	时候	_	NN	NN	_	10	dobj	_	_
15	。	_	PU	PU	_	10	punct	_	_
16	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x17 / 得-02, arg0, x18 / 我)
(x17 / 得-02, arg1, x19 / 等到-01)
(x17 / 得-02, cause, x23 / 按照-01)
(x19 / 等到-01, arg1, x21 / 成熟-01)
(x21 / 成熟-01, arg0, x22 / 条件)
(x23 / 按照-01, arg1, x24 / 科学)
(x24 / 科学, mod, x25 / 统治-01)

Input(Some(Graph((say :arg1 (contrast :arg2 (得-02 :cause (按照-01 :arg1 (科学 :poss x18 :mod 统治-01)) :arg1 (等到-01 :arg1 (成熟-01 :arg0 条件) :arg0 x18) :arg0 我))),ArrayBuffer(Span(8,9,List(0),得,得-02,false), Span(1,2,List(1),按照,按照-01,false), Span(5,6,List(2),科学,科学,false), Span(4,5,List(3),统治,统治-01,false), Span(9,10,List(4),等到,等到-01,false), Span(11,12,List(5),成熟,成熟-01,false), Span(10,11,List(6),条件,条件,false), Span(2,3,List(7),我,我,false)),Map(2 -> 科学, 5 -> 成熟-01, 7 -> 我, 1 -> 按照-01, 4 -> 等到-01, 6 -> 条件, 0 -> 得-02, 3 -> 统治-01),Map(x22 -> 条件, x19 -> 等到-01, x25 -> 统治-01, x21 -> 成熟-01, x18 -> 我, x24 -> 科学, x23 -> 按照-01, x17 -> 得-02))),[Ljava.lang.String;@5778826f,Annotation([Ljava.lang.String;@5b64c4b7,[Ljava.lang.String;@4763c727,[Ljava.lang.String;@72445aba),Annotation([Ljava.lang.String;@61bcd567,[Ljava.lang.String;@1c80e49b,[Ledu.cmu.lti.nlp.amr.Dependency;@458342d3),Annotation([Ljava.lang.String;@15c25153,[Ljava.lang.String;@1252b961,[Ljava.lang.String;@9ed238c),Annotation([Ljava.lang.String;@56276db8,[Ljava.lang.String;@51e8e6e6,[Ledu.cmu.lti.nlp.amr.Entity;@56f6d40b))
AMR:
(x17 / 得-02, ARG5, x19 / 等到-01)
(x17 / 得-02, location, x24 / 科学)
(x19 / 等到-01, snt1, x21 / 成熟-01)
(x21 / 成熟-01, location, x22 / 条件)
(x23 / 按照-01, subset, x18 / 我)
(x24 / 科学, mod, x25 / 统治-01)
(x25 / 统治-01, prep-on-behalf, x23 / 按照-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 18,952 microseconds
Sentence: 小 王子 问道 ： “ 这 要 等到 什么 时候 呢 ？ ”

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  等到 => 等到-01
Oracle Span 4:  要 => 要-03
Oracle Span 5:  这 => 这
Oracle Span 6:  问道 => 问道-01
Spans:
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 7-8:  等到 => 等到-01
Span 6-7:  要 => 要-03
Span 5-6:  这 => 这
Span 2-3:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  等到 => 等到-01
Oracle Span 6-7:  要 => 要-03
Oracle Span 5-6:  这 => 这
Oracle Span 2-3:  问道 => 问道-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	问道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	这	_	PN	PN	_	8	nsubj	_	_
7	要	_	VV	VV	_	8	mmod	_	_
8	等到	_	VV	VV	_	3	ccomp	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	时候	_	NN	NN	_	8	dobj	_	_
11	呢	_	SP	SP	_	3	dep	_	_
12	？	_	PU	PU	_	3	punct	_	_
13	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 要-03)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, arg0, x5 / 等到-01)
(x5 / 等到-01, arg0, x6 / 这)

Input(Some(Graph((问道-01 :mode interrogative :arg1 (要-03 :arg0 (等到-01 :arg1 amr-unknown :arg0 这)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),问道,问道-01,false), Span(6,7,List(1),要,要-03,false), Span(7,8,List(2),等到,等到-01,false), Span(5,6,List(3),这,这,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false)),Map(2 -> 等到-01, 5 -> 小-01, 1 -> 要-03, 4 -> 王子, 0 -> 问道-01, 3 -> 这),Map(x2 -> 王子, x5 -> 等到-01, x4 -> 要-03, x3 -> 小-01, x6 -> 这, x0 -> 问道-01))),[Ljava.lang.String;@36676c1a,Annotation([Ljava.lang.String;@5b408dc3,[Ljava.lang.String;@4d098f9b,[Ljava.lang.String;@2dbf4cbd),Annotation([Ljava.lang.String;@20b5f2ac,[Ljava.lang.String;@7fc44dec,[Ledu.cmu.lti.nlp.amr.Dependency;@7e3060d8),Annotation([Ljava.lang.String;@293d0107,[Ljava.lang.String;@2692b61e,[Ljava.lang.String;@7b64240d),Annotation([Ljava.lang.String;@62fad19,[Ljava.lang.String;@47dbb1e2,[Ledu.cmu.lti.nlp.amr.Entity;@74cadd41))
AMR:
(x0 / 问道-01, purpose, x5 / 等到-01)
(x0 / 问道-01, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, value, x5 / 等到-01)
(x4 / 要-03, value, x6 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,091 microseconds
Sentence: 嗯 ！

Oracle Span 1:  嗯 => 嗯
Spans:
Span 0-1:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  嗯 => 嗯

Dependencies:
1	嗯	_	VV	VV	_	0	root	_	_
2	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((嗯 :mode expressive),ArrayBuffer(Span(0,1,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x5 -> 嗯))),[Ljava.lang.String;@2e54db99,Annotation([Ljava.lang.String;@55e8ec2f,[Ljava.lang.String;@4f2613d1,[Ljava.lang.String;@6d24ffa1),Annotation([Ljava.lang.String;@65a4798f,[Ljava.lang.String;@773f7880,[Ledu.cmu.lti.nlp.amr.Dependency;@878452d),Annotation([Ljava.lang.String;@426b6a74,[Ljava.lang.String;@4c51bb7,[Ljava.lang.String;@83298d7),Annotation([Ljava.lang.String;@42a9e5d1,[Ljava.lang.String;@5b080f3a,[Ledu.cmu.lti.nlp.amr.Entity;@773cbf4f))
AMR:


Decoded in 1,409 microseconds
Sentence: 国王 在 回答 之前 ， 首先 翻阅 了 一 本 厚厚 的 日历 ， 嘴里 慢慢 说道 ：

Oracle Span 1:  之前 => 之前
Oracle Span 2:  厚厚 => 厚厚-01
Oracle Span 3:  回答 => 回答-01
Oracle Span 4:  国王 => 国王
Oracle Span 5:  慢慢 => 慢慢-01
Oracle Span 6:  日历 => 日历
Oracle Span 7:  翻阅 => 翻阅-01
Oracle Span 8:  说道 => 说道-01
Spans:
Span 3-4:  之前 => 之前
Span 10-11:  厚厚 => 厚厚-01
Span 2-3:  回答 => 回答-01
Span 0-1:  国王 => 国王
Span 15-16:  慢慢 => 慢慢-01
Span 12-13:  日历 => 日历
Span 6-7:  翻阅 => 翻阅-01
Span 16-17:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  之前 => 之前
Oracle Span 10-11:  厚厚 => 厚厚-01
Oracle Span 2-3:  回答 => 回答-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 15-16:  慢慢 => 慢慢-01
Oracle Span 12-13:  日历 => 日历
Oracle Span 6-7:  翻阅 => 翻阅-01
Oracle Span 16-17:  说道 => 说道-01

Dependencies:
1	国王	_	NN	NN	_	7	nsubj	_	_
2	在	_	P	P	_	7	prep	_	_
3	回答	_	VV	VV	_	4	lccomp	_	_
4	之前	_	LC	LC	_	2	plmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	首先	_	AD	AD	_	7	advmod	_	_
7	翻阅	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	一	_	CD	CD	_	13	nummod	_	_
10	本	_	DT	DT	_	11	det	_	_
11	厚厚	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	日历	_	NN	NN	_	7	dobj	_	_
14	,	_	PU	PU	_	7	punct	_	_
15	嘴里	_	NN	NN	_	17	nsubj	_	_
16	慢慢	_	AD	AD	_	17	advmod	_	_
17	说道	_	VV	VV	_	7	conj	_	_
18	：	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 说道-01, manner, x11 / 慢慢-01)
(x2 / 翻阅-01, arg0, x3 / 国王)
(x2 / 翻阅-01, arg1, x4 / 日历)
(x2 / 翻阅-01, time, x7 / 之前)
(x4 / 日历, mod, x5 / 厚厚-01)
(x7 / 之前, mod, x8 / 回答-01)

Input(Some(Graph((temporal :arg1 (翻阅-01 :time (之前 :mod (回答-01 :arg0 x3)) :arg1 (日历 :quant 1 :mod 厚厚-01) :arg0 国王) :arg2 (说道-01 :instrument 嘴 :manner 慢慢-01)),ArrayBuffer(Span(6,7,List(0),翻阅,翻阅-01,false), Span(3,4,List(1),之前,之前,false), Span(2,3,List(2),回答,回答-01,false), Span(12,13,List(3),日历,日历,false), Span(10,11,List(4),厚厚,厚厚-01,false), Span(0,1,List(5),国王,国王,false), Span(16,17,List(6),说道,说道-01,false), Span(15,16,List(7),慢慢,慢慢-01,false)),Map(2 -> 回答-01, 5 -> 国王, 7 -> 慢慢-01, 1 -> 之前, 4 -> 厚厚-01, 6 -> 说道-01, 0 -> 翻阅-01, 3 -> 日历),Map(x10 -> 说道-01, x2 -> 翻阅-01, x5 -> 厚厚-01, x8 -> 回答-01, x7 -> 之前, x4 -> 日历, x11 -> 慢慢-01, x3 -> 国王))),[Ljava.lang.String;@6b54655f,Annotation([Ljava.lang.String;@665e9289,[Ljava.lang.String;@7d3430a7,[Ljava.lang.String;@6f603e89),Annotation([Ljava.lang.String;@2756c0a7,[Ljava.lang.String;@350ec41e,[Ledu.cmu.lti.nlp.amr.Dependency;@69637b10),Annotation([Ljava.lang.String;@71984c3,[Ljava.lang.String;@165b2f7f,[Ljava.lang.String;@5536379e),Annotation([Ljava.lang.String;@277f7dd3,[Ljava.lang.String;@6c8bca63,[Ledu.cmu.lti.nlp.amr.Entity;@2364305a))
AMR:
(x10 / 说道-01, manner, x11 / 慢慢-01)
(x11 / 慢慢-01, domain, x4 / 日历)
(x2 / 翻阅-01, prep-against, x5 / 厚厚-01)
(x2 / 翻阅-01, time, x7 / 之前)
(x4 / 日历, mod, x5 / 厚厚-01)
(x7 / 之前, mod, x3 / 国王)
(x7 / 之前, mod, x8 / 回答-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 20,982 microseconds
Sentence: “ 嗯 ！

Oracle Span 1:  嗯 => 嗯
Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (嗯 :mode expressive)),ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x5 -> 嗯))),[Ljava.lang.String;@470a696f,Annotation([Ljava.lang.String;@1bc715b8,[Ljava.lang.String;@292d1c71,[Ljava.lang.String;@2b491fee),Annotation([Ljava.lang.String;@3f1c5af9,[Ljava.lang.String;@1c55f277,[Ledu.cmu.lti.nlp.amr.Dependency;@5ddabb18),Annotation([Ljava.lang.String;@3e8f7922,[Ljava.lang.String;@63192798,[Ljava.lang.String;@50eca7c6),Annotation([Ljava.lang.String;@58e6d4b8,[Ljava.lang.String;@1de5f0ef,[Ledu.cmu.lti.nlp.amr.Entity;@376a312c))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,684 microseconds
Sentence: 嗯 ！

Oracle Span 1:  嗯 => 嗯
Spans:
Span 0-1:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  嗯 => 嗯

Dependencies:
1	嗯	_	VV	VV	_	0	root	_	_
2	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (嗯 :mode expressive)),ArrayBuffer(Span(0,1,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x5 -> 嗯))),[Ljava.lang.String;@28d6290,Annotation([Ljava.lang.String;@6ca0256d,[Ljava.lang.String;@5ef0d29e,[Ljava.lang.String;@38f57b3d),Annotation([Ljava.lang.String;@51850751,[Ljava.lang.String;@3ce3db41,[Ledu.cmu.lti.nlp.amr.Dependency;@64df9a61),Annotation([Ljava.lang.String;@77602954,[Ljava.lang.String;@e260766,[Ljava.lang.String;@2c3dec30),Annotation([Ljava.lang.String;@34a97744,[Ljava.lang.String;@4275c20c,[Ledu.cmu.lti.nlp.amr.Entity;@7c56e013))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,447 microseconds
Sentence: 日落 大约 … 大约 … 在 今晚 七时 四十分 的 时候 ！

Oracle Span 1:  今晚 => 今晚
Oracle Span 2:  大约 => 大约
Oracle Span 3:  日落 => 日落-01
Spans:
Span 6-7:  今晚 => 今晚
Span 1-2:  大约 => 大约
Span 0-1:  日落 => 日落-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  今晚 => 今晚
Oracle Span 1-2:  大约 => 大约
Oracle Span 0-1:  日落 => 日落-01

Dependencies:
1	日落	_	VV	VV	_	0	root	_	_
2	大约	_	AD	AD	_	11	advmod	_	_
3	…	_	PU	PU	_	6	dep	_	_
4	大约	_	AD	AD	_	6	advmod	_	_
5	…	_	PU	PU	_	6	dep	_	_
6	在	_	VV	VV	_	11	rcmod	_	_
7	今晚	_	NT	NT	_	8	dep	_	_
8	七时	_	CD	CD	_	6	range	_	_
9	四十分	_	CD	CD	_	6	nummod	_	_
10	的	_	DEC	DEC	_	6	cpm	_	_
11	时候	_	NN	NN	_	1	dobj	_	_
12	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 日落-01, manner, x5 / 大约)

Input(Some(Graph((日落-01 :time (date-entity :dayperiod 今晚 :time (name :op "7:40")) :mode expressive :manner 大约),ArrayBuffer(Span(0,1,List(0),日落,日落-01,false), Span(6,7,List(1),今晚,今晚,false), Span(1,2,List(2),大约,大约,false)),Map(2 -> 大约, 1 -> 今晚, 0 -> 日落-01),Map(x5 -> 大约, x8 -> 今晚, x0 -> 日落-01))),[Ljava.lang.String;@3fc9dfc5,Annotation([Ljava.lang.String;@40258c2f,[Ljava.lang.String;@2cac4385,[Ljava.lang.String;@6731787b),Annotation([Ljava.lang.String;@16f7b4af,[Ljava.lang.String;@7adf16aa,[Ledu.cmu.lti.nlp.amr.Dependency;@34a1d21f),Annotation([Ljava.lang.String;@58bf8650,[Ljava.lang.String;@73c60324,[Ljava.lang.String;@71ae31b0),Annotation([Ljava.lang.String;@4ba534b0,[Ljava.lang.String;@6f0ca692,[Ledu.cmu.lti.nlp.amr.Entity;@2c104774))
AMR:
(x0 / 日落-01, manner, x5 / 大约)
(x8 / 今晚, manner, x5 / 大约)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,995 microseconds
Sentence: 你 将 看到 我 的 命令 一定 会 被 服从 的 。 ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  命令 => 命令
Oracle Span 4:  将 => 将
Oracle Span 5:  我 => 我
Oracle Span 6:  服从 => 服从-01
Oracle Span 7:  看到 => 看到-01
Spans:
Span 7-8:  会 => 会-02
Span 0-1:  你 => 你
Span 5-6:  命令 => 命令
Span 1-2:  将 => 将
Span 3-4:  我 => 我
Span 9-10:  服从 => 服从-01
Span 2-3:  看到 => 看到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  会 => 会-02
Oracle Span 0-1:  你 => 你
Oracle Span 5-6:  命令 => 命令
Oracle Span 1-2:  将 => 将
Oracle Span 3-4:  我 => 我
Oracle Span 9-10:  服从 => 服从-01
Oracle Span 2-3:  看到 => 看到-01

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	将	_	AD	AD	_	3	advmod	_	_
3	看到	_	VV	VV	_	6	rcmod	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	的	_	DEC	DEC	_	3	cpm	_	_
6	命令	_	NN	NN	_	10	nsubj	_	_
7	一定	_	AD	AD	_	10	advmod	_	_
8	会	_	VV	VV	_	10	mmod	_	_
9	被	_	SB	SB	_	10	pass	_	_
10	服从	_	VV	VV	_	0	root	_	_
11	的	_	SP	SP	_	10	dep	_	_
12	。	_	PU	PU	_	10	punct	_	_
13	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x12 / 看到-01, arg0, x13 / 你)
(x12 / 看到-01, arg1, x15 / 会-02)
(x12 / 看到-01, time, x14 / 将)
(x15 / 会-02, arg0, x16 / 服从-01)
(x16 / 服从-01, arg1, x17 / 命令)
(x17 / 命令, poss, x18 / 我)

Input(Some(Graph((say :arg1 (看到-01 :arg1 (会-02 :arg0 (服从-01 :arg1 (命令 :poss 我))) :time 将 :arg0 你)),ArrayBuffer(Span(2,3,List(0),看到,看到-01,false), Span(7,8,List(1),会,会-02,false), Span(9,10,List(2),服从,服从-01,false), Span(5,6,List(3),命令,命令,false), Span(3,4,List(4),我,我,false), Span(1,2,List(5),将,将,false), Span(0,1,List(6),你,你,false)),Map(2 -> 服从-01, 5 -> 将, 1 -> 会-02, 4 -> 我, 6 -> 你, 0 -> 看到-01, 3 -> 命令),Map(x16 -> 服从-01, x13 -> 你, x12 -> 看到-01, x15 -> 会-02, x18 -> 我, x14 -> 将, x17 -> 命令))),[Ljava.lang.String;@2cb3d0f7,Annotation([Ljava.lang.String;@4e517165,[Ljava.lang.String;@44e3760b,[Ljava.lang.String;@6a66a204),Annotation([Ljava.lang.String;@5860f3d7,[Ljava.lang.String;@1d7f7be7,[Ledu.cmu.lti.nlp.amr.Dependency;@42f3156d),Annotation([Ljava.lang.String;@1ddae9b5,[Ljava.lang.String;@427b5f92,[Ljava.lang.String;@24bdb479),Annotation([Ljava.lang.String;@7e3f95fe,[Ljava.lang.String;@34625ccd,[Ledu.cmu.lti.nlp.amr.Entity;@2c7d121c))
AMR:
(x12 / 看到-01, accompanier, x17 / 命令)
(x12 / 看到-01, time, x14 / 将)
(x13 / 你, time, x14 / 将)
(x15 / 会-02, accompanier, x16 / 服从-01)
(x15 / 会-02, quant, x17 / 命令)
(x17 / 命令, poss, x18 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 16,601 microseconds
Sentence: 小 王子 又 打 起 哈欠 来 了 。

Oracle Span 1:  又 => 又
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Spans:
Span 2-3:  又 => 又
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	打	_	VV	VV	_	5	lccomp	_	_
5	起	_	LC	LC	_	7	loc	_	_
6	哈欠	_	AD	AD	_	7	advmod	_	_
7	来	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph((打哈欠-01 :manner 又 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),又,又,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 又),Map(x5 -> 王子, x4 -> 又, x6 -> 小-01))),[Ljava.lang.String;@65aa6596,Annotation([Ljava.lang.String;@67389cb8,[Ljava.lang.String;@419a20a6,[Ljava.lang.String;@533377b),Annotation([Ljava.lang.String;@3383649e,[Ljava.lang.String;@10fde30a,[Ledu.cmu.lti.nlp.amr.Dependency;@f27ea3),Annotation([Ljava.lang.String;@1ce61929,[Ljava.lang.String;@346939bf,[Ljava.lang.String;@4bf3798b),Annotation([Ljava.lang.String;@58670130,[Ljava.lang.String;@74e47444,[Ledu.cmu.lti.nlp.amr.Entity;@9bd0fa6))
AMR:
(x4 / 又, destination, x6 / 小-01)
(x5 / 王子, mod, x6 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 6,298 microseconds
Sentence: 他 遗憾 没有 看到 日落 。

Oracle Span 1:  他 => 他
Oracle Span 2:  日落 => 日落-01
Oracle Span 3:  看到 => 看到
Oracle Span 4:  遗憾 => 遗憾-01
Spans:
Span 0-1:  他 => 他
Span 4-5:  日落 => 日落-01
Span 3-4:  看到 => 看到
Span 1-2:  遗憾 => 遗憾-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  日落 => 日落-01
Oracle Span 3-4:  看到 => 看到
Oracle Span 1-2:  遗憾 => 遗憾-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	遗憾	_	NN	NN	_	4	dep	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	看到	_	VV	VV	_	0	root	_	_
5	日落	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 遗憾-01, arg0, x2 / 他)
(x0 / 遗憾-01, arg1, x3 / 看到)
(x3 / 看到, arg1, x6 / 日落-01)

Input(Some(Graph((遗憾-01 :arg1 (看到 :arg1 日落-01 :arg0 x2 :polarity -) :arg0 他),ArrayBuffer(Span(1,2,List(0),遗憾,遗憾-01,false), Span(3,4,List(1),看到,看到,false), Span(4,5,List(2),日落,日落-01,false), Span(0,1,List(3),他,他,false)),Map(2 -> 日落-01, 1 -> 看到, 0 -> 遗憾-01, 3 -> 他),Map(x2 -> 他, x3 -> 看到, x6 -> 日落-01, x0 -> 遗憾-01))),[Ljava.lang.String;@59d2103b,Annotation([Ljava.lang.String;@39dcf4b0,[Ljava.lang.String;@6e4de19b,[Ljava.lang.String;@f6c03cb),Annotation([Ljava.lang.String;@46f699d5,[Ljava.lang.String;@18518ccf,[Ledu.cmu.lti.nlp.amr.Dependency;@1991f767),Annotation([Ljava.lang.String;@768ccdc5,[Ljava.lang.String;@4c6daf0,[Ljava.lang.String;@10650953),Annotation([Ljava.lang.String;@659eef7,[Ljava.lang.String;@162be91c,[Ledu.cmu.lti.nlp.amr.Entity;@2488b073))
AMR:
(x0 / 遗憾-01, ARG3, x2 / 他)
(x0 / 遗憾-01, ARG5, x3 / 看到)
(x3 / 看到, conj-as-if, x6 / 日落-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,490 microseconds
Sentence: 他 有点 厌烦 了 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  厌烦 => 厌烦-01
Oracle Span 3:  有点 => 有点
Spans:
Span 0-1:  他 => 他
Span 2-3:  厌烦 => 厌烦-01
Span 1-2:  有点 => 有点

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  厌烦 => 厌烦-01
Oracle Span 1-2:  有点 => 有点

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	有点	_	AD	AD	_	3	advmod	_	_
3	厌烦	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 厌烦-01, arg0, x2 / 他)
(x0 / 厌烦-01, degree, x3 / 有点)

Input(Some(Graph((厌烦-01 :degree 有点 :arg0 他),ArrayBuffer(Span(2,3,List(0),厌烦,厌烦-01,false), Span(1,2,List(1),有点,有点,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 有点, 0 -> 厌烦-01),Map(x2 -> 他, x3 -> 有点, x0 -> 厌烦-01))),[Ljava.lang.String;@1c9f0a20,Annotation([Ljava.lang.String;@55787112,[Ljava.lang.String;@1cd201a8,[Ljava.lang.String;@7db82169),Annotation([Ljava.lang.String;@1992eaf4,[Ljava.lang.String;@f74e835,[Ledu.cmu.lti.nlp.amr.Dependency;@3276732),Annotation([Ljava.lang.String;@3f28bd56,[Ljava.lang.String;@31e3250d,[Ljava.lang.String;@19fe4644),Annotation([Ljava.lang.String;@21d8bcbe,[Ljava.lang.String;@5be067de,[Ledu.cmu.lti.nlp.amr.Entity;@7383eae2))
AMR:
(x0 / 厌烦-01, ARG6, x2 / 他)
(x0 / 厌烦-01, degree, x3 / 有点)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,882 microseconds
Sentence: 他 对 国王 说 ： “ 我 没有 必要 再 呆 在 这儿 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再 => 再
Oracle Span 3:  呆 => 呆-02
Oracle Span 4:  国王 => 国王
Oracle Span 5:  必要 => 必要-01
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这儿 => 这儿
Spans:
Span 0-1:  他 => 他
Span 9-10:  再 => 再
Span 10-11:  呆 => 呆-02
Span 2-3:  国王 => 国王
Span 8-9:  必要 => 必要-01
Span 3-4:  说 => 说-01
Span 12-13:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  再 => 再
Oracle Span 10-11:  呆 => 呆-02
Oracle Span 2-3:  国王 => 国王
Oracle Span 8-9:  必要 => 必要-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 12-13:  这儿 => 这儿

Dependencies:
1	他	_	PN	PN	_	4	xsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	国王	_	NN	NN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	没有	_	VV	VV	_	9	dep	_	_
9	必要	_	VV	VV	_	4	dep	_	_
10	再	_	AD	AD	_	9	advmod	_	_
11	呆	_	JJ	JJ	_	4	dep	_	_
12	在	_	P	P	_	4	prep	_	_
13	这儿	_	PN	PN	_	12	pobj	_	_
14	了	_	AS	AS	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	他	_	PN	PN	_	4	nsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x11 / 必要-01)
(x0 / 说-01, arg3, x3 / 国王)
(x11 / 必要-01, arg0, x14 / 呆-02)
(x14 / 呆-02, arg1, x17 / 这儿)
(x14 / 呆-02, manner, x15 / 再)

Input(Some(Graph((说-01 :arg1 (必要-01 :arg0 (呆-02 :arg1 这儿 :arg0 x2 :manner 再) :polarity -) :arg3 国王 :arg0 他),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(8,9,List(1),必要,必要-01,false), Span(10,11,List(2),呆,呆-02,false), Span(12,13,List(3),这儿,这儿,false), Span(9,10,List(4),再,再,false), Span(2,3,List(5),国王,国王,false), Span(0,1,List(6),他,他,false)),Map(2 -> 呆-02, 5 -> 国王, 1 -> 必要-01, 4 -> 再, 6 -> 他, 0 -> 说-01, 3 -> 这儿),Map(x2 -> 他, x15 -> 再, x3 -> 国王, x11 -> 必要-01, x14 -> 呆-02, x17 -> 这儿, x0 -> 说-01))),[Ljava.lang.String;@18245eb0,Annotation([Ljava.lang.String;@7c7d3c46,[Ljava.lang.String;@24fb6a80,[Ljava.lang.String;@48c35007),Annotation([Ljava.lang.String;@72a85671,[Ljava.lang.String;@6722db6e,[Ledu.cmu.lti.nlp.amr.Dependency;@18f20260),Annotation([Ljava.lang.String;@4ae33a11,[Ljava.lang.String;@7a48e6e2,[Ljava.lang.String;@b40bb6e),Annotation([Ljava.lang.String;@3a94964,[Ljava.lang.String;@5049d8b2,[Ledu.cmu.lti.nlp.amr.Entity;@6d0b5baf))
AMR:
(x0 / 说-01, location, x3 / 国王)
(x0 / 说-01, quant, x2 / 他)
(x0 / 说-01, subevent, x11 / 必要-01)
(x14 / 呆-02, manner, x11 / 必要-01)
(x14 / 呆-02, manner, x15 / 再)
(x14 / 呆-02, time, x17 / 这儿)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,280 microseconds
Sentence: 我 要 走 了 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  要 => 要-03
Oracle Span 3:  走 => 走-07
Spans:
Span 0-1:  我 => 我
Span 1-2:  要 => 要-03
Span 2-3:  走 => 走-07

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  要 => 要-03
Oracle Span 2-3:  走 => 走-07

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	走	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 要-03, arg0, x7 / 走-07)
(x7 / 走-07, arg0, x8 / 我)

Input(Some(Graph((say :arg1 (要-03 :arg0 (走-07 :arg0 我))),ArrayBuffer(Span(1,2,List(0),要,要-03,false), Span(2,3,List(1),走,走-07,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 走-07, 0 -> 要-03),Map(x8 -> 我, x7 -> 走-07, x6 -> 要-03))),[Ljava.lang.String;@631e06ab,Annotation([Ljava.lang.String;@2a3591c5,[Ljava.lang.String;@34a75079,[Ljava.lang.String;@346a361),Annotation([Ljava.lang.String;@107ed6fc,[Ljava.lang.String;@1643d68f,[Ledu.cmu.lti.nlp.amr.Dependency;@186978a6),Annotation([Ljava.lang.String;@2e029d61,[Ljava.lang.String;@482d776b,[Ljava.lang.String;@4052274f),Annotation([Ljava.lang.String;@132ddbab,[Ljava.lang.String;@297ea53a,[Ledu.cmu.lti.nlp.amr.Entity;@acb0951))
AMR:
(x6 / 要-03, prep-along-with, x7 / 走-07)
(x7 / 走-07, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,181 microseconds
Sentence: 这 位 因为 刚刚 有 了 一 个 臣民 而 十分 骄傲 自得 的 国王 说道 ： “ 别 走 ，

Oracle Span 1:  刚刚 => 刚刚
Oracle Span 2:  十分 => 十分
Oracle Span 3:  国王 => 国王
Oracle Span 4:  有 => 有-01
Oracle Span 5:  臣民 => 臣民
Oracle Span 6:  自得 => 自得
Oracle Span 7:  说道 => 说道-01
Oracle Span 8:  走 => 走-02
Oracle Span 9:  这 => 这
Oracle Span 10:  骄傲 => 骄傲-01
Spans:
Span 3-4:  刚刚 => 刚刚
Span 10-11:  十分 => 十分
Span 14-15:  国王 => 国王
Span 4-5:  有 => 有-01
Span 8-9:  臣民 => 臣民
Span 12-13:  自得 => 自得
Span 15-16:  说道 => 说道-01
Span 19-20:  走 => 走-02
Span 0-1:  这 => 这
Span 11-12:  骄傲 => 骄傲-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  刚刚 => 刚刚
Oracle Span 10-11:  十分 => 十分
Oracle Span 14-15:  国王 => 国王
Oracle Span 4-5:  有 => 有-01
Oracle Span 8-9:  臣民 => 臣民
Oracle Span 12-13:  自得 => 自得
Oracle Span 15-16:  说道 => 说道-01
Oracle Span 19-20:  走 => 走-02
Oracle Span 0-1:  这 => 这
Oracle Span 11-12:  骄傲 => 骄傲-01

Dependencies:
1	这	_	DT	DT	_	16	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	因为	_	P	P	_	12	prep	_	_
4	刚刚	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	3	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	臣民	_	NN	NN	_	5	dobj	_	_
10	而	_	MSP	MSP	_	12	prtmod	_	_
11	十分	_	AD	AD	_	12	advmod	_	_
12	骄傲	_	VV	VV	_	16	rcmod	_	_
13	自得	_	NN	NN	_	12	dobj	_	_
14	的	_	DEC	DEC	_	12	cpm	_	_
15	国王	_	NN	NN	_	16	nn	_	_
16	说道	_	NN	NN	_	20	nsubj	_	_
17	：	_	PU	PU	_	20	punct	_	_
18	“	_	PU	PU	_	20	punct	_	_
19	别	_	DT	DT	_	20	nsubj	_	_
20	走	_	VV	VV	_	0	root	_	_
21	,	_	PU	PU	_	20	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 国王)
(x0 / 说道-01, arg1, x4 / 走-02)
(x2 / 国王, mod, x3 / 这)
(x36 / 有-01, arg1, x38 / 臣民)
(x36 / 有-01, time, x40 / 刚刚)

Input(Some(Graph((说道-01 :arg1 (走-02 :mode imperative :polarity -) :arg0 (国王 :mod (and :op 骄傲-01 :op 自得 :degree 十分 :cause (有-01 :time 刚刚 :arg1 (臣民 :quant 1) :arg0 x2)) :mod 这)),ArrayBuffer(Span(15,16,List(0),说道,说道-01,false), Span(19,20,List(1),走,走-02,false), Span(14,15,List(2),国王,国王,false), Span(11,12,List(3),骄傲,骄傲-01,false), Span(12,13,List(4),自得,自得,false), Span(10,11,List(5),十分,十分,false), Span(4,5,List(6),有,有-01,false), Span(3,4,List(7),刚刚,刚刚,false), Span(8,9,List(8),臣民,臣民,false), Span(0,1,List(9),这,这,false)),Map(2 -> 国王, 5 -> 十分, 8 -> 臣民, 7 -> 刚刚, 1 -> 走-02, 4 -> 自得, 6 -> 有-01, 9 -> 这, 0 -> 说道-01, 3 -> 骄傲-01),Map(x34 -> 自得, x40 -> 刚刚, x2 -> 国王, x33 -> 骄傲-01, x36 -> 有-01, x4 -> 走-02, x38 -> 臣民, x3 -> 这, x35 -> 十分, x0 -> 说道-01))),[Ljava.lang.String;@5bf22f18,Annotation([Ljava.lang.String;@267f474e,[Ljava.lang.String;@7a7471ce,[Ljava.lang.String;@28276e50),Annotation([Ljava.lang.String;@62e70ea3,[Ljava.lang.String;@3efe7086,[Ledu.cmu.lti.nlp.amr.Dependency;@675d8c96),Annotation([Ljava.lang.String;@741b3bc3,[Ljava.lang.String;@2ed3b1f5,[Ljava.lang.String;@63648ee9),Annotation([Ljava.lang.String;@68d6972f,[Ljava.lang.String;@45be7cd5,[Ledu.cmu.lti.nlp.amr.Entity;@7651218e))
AMR:
(x0 / 说道-01, manner, x4 / 走-02)
(x0 / 说道-01, time, x2 / 国王)
(x33 / 骄傲-01, degree, x35 / 十分)
(x33 / 骄傲-01, direction, x2 / 国王)
(x33 / 骄傲-01, direction, x34 / 自得)
(x33 / 骄傲-01, manner, x38 / 臣民)
(x36 / 有-01, source, x38 / 臣民)
(x36 / 有-01, time, x40 / 刚刚)
(x40 / 刚刚, mod, x3 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.2
WARNING: makeIds can't find span Id: 0.0.1.3.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 38,913 microseconds
Sentence: 别 走 。

Oracle Span 1:  走 => 走-07
Spans:
Span 1-2:  走 => 走-07

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  走 => 走-07

Dependencies:
1	别	_	DT	DT	_	2	nsubj	_	_
2	走	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((走-07 :mode imperative :polarity -),ArrayBuffer(Span(1,2,List(0),走,走-07,false)),Map(0 -> 走-07),Map(x0 -> 走-07))),[Ljava.lang.String;@3185fa6b,Annotation([Ljava.lang.String;@6d366c9b,[Ljava.lang.String;@5b58ed3c,[Ljava.lang.String;@24faea88),Annotation([Ljava.lang.String;@3a320ade,[Ljava.lang.String;@64beebb7,[Ledu.cmu.lti.nlp.amr.Dependency;@7813cb11),Annotation([Ljava.lang.String;@bcec031,[Ljava.lang.String;@21005f6c,[Ljava.lang.String;@32f0fba8),Annotation([Ljava.lang.String;@545de5a4,[Ljava.lang.String;@29ef6856,[Ledu.cmu.lti.nlp.amr.Entity;@ab7a938))
AMR:


Decoded in 1,955 microseconds
Sentence: 我 任命 你 当 大臣 。 ”

Oracle Span 1:  任命 => 任命-01
Oracle Span 2:  你 => 你
Oracle Span 3:  大臣 => 大臣
Oracle Span 4:  我 => 我
Spans:
Span 1-2:  任命 => 任命-01
Span 2-3:  你 => 你
Span 4-5:  大臣 => 大臣
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  任命 => 任命-01
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  大臣 => 大臣
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	任命	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	当	_	VV	VV	_	2	dep	_	_
5	大臣	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 任命-01, arg0, x8 / 我)
(x7 / 任命-01, arg1, x9 / 你)
(x7 / 任命-01, arg2, x13 / 大臣)

Input(Some(Graph((say :arg1 (任命-01 :arg2 大臣 :arg1 你 :arg0 我)),ArrayBuffer(Span(1,2,List(0),任命,任命-01,false), Span(4,5,List(1),大臣,大臣,false), Span(2,3,List(2),你,你,false), Span(0,1,List(3),我,我,false)),Map(2 -> 你, 1 -> 大臣, 0 -> 任命-01, 3 -> 我),Map(x13 -> 大臣, x8 -> 我, x7 -> 任命-01, x9 -> 你))),[Ljava.lang.String;@3faf2e7d,Annotation([Ljava.lang.String;@4648ce9,[Ljava.lang.String;@569bf9eb,[Ljava.lang.String;@61526469),Annotation([Ljava.lang.String;@274872f8,[Ljava.lang.String;@76ba13c,[Ledu.cmu.lti.nlp.amr.Dependency;@eb6449b),Annotation([Ljava.lang.String;@7c351808,[Ljava.lang.String;@180e6ac4,[Ljava.lang.String;@42b64ab8),Annotation([Ljava.lang.String;@7e985ce9,[Ljava.lang.String;@2a39fe6a,[Ledu.cmu.lti.nlp.amr.Entity;@410ae9a3))
AMR:
(x7 / 任命-01, manner, x8 / 我)
(x7 / 任命-01, snt1, x13 / 大臣)
(x7 / 任命-01, snt11, x9 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,519 microseconds
Sentence: “ 什么 大臣 ”

Oracle Span 1:  大臣 => 大臣
Spans:
Span 2-3:  大臣 => 大臣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  大臣 => 大臣

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	DT	DT	_	3	det	_	_
3	大臣	_	NN	NN	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (大臣 :topic amr-unknown)),ArrayBuffer(Span(2,3,List(0),大臣,大臣,false)),Map(0 -> 大臣),Map(x6 -> 大臣))),[Ljava.lang.String;@319988b0,Annotation([Ljava.lang.String;@d5ae57e,[Ljava.lang.String;@68759011,[Ljava.lang.String;@7e242b4d),Annotation([Ljava.lang.String;@305f031,[Ljava.lang.String;@592e843a,[Ledu.cmu.lti.nlp.amr.Dependency;@1d1f7216),Annotation([Ljava.lang.String;@423e4cbb,[Ljava.lang.String;@6e16b8b5,[Ljava.lang.String;@43b4fe19),Annotation([Ljava.lang.String;@25ddbbbb,[Ljava.lang.String;@1536602f,[Ledu.cmu.lti.nlp.amr.Entity;@4ebea12c))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,549 microseconds
Sentence: “ 嗯 … … 司法 大臣 ！ ”

Oracle Span 1:  司法 => 司法-01
Oracle Span 2:  大臣 => 大臣
Spans:
Span 4-5:  司法 => 司法-01
Span 5-6:  大臣 => 大臣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  司法 => 司法-01
Oracle Span 5-6:  大臣 => 大臣

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	6	punct	_	_
4	…	_	PU	PU	_	5	dep	_	_
5	司法	_	NN	NN	_	6	nsubj	_	_
6	大臣	_	NN	NN	_	2	dep	_	_
7	！	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 大臣, topic, x7 / 司法-01)

Input(Some(Graph((say :arg1 (大臣 :mode expressive :topic 司法-01)),ArrayBuffer(Span(5,6,List(0),大臣,大臣,false), Span(4,5,List(1),司法,司法-01,false)),Map(1 -> 司法-01, 0 -> 大臣),Map(x7 -> 司法-01, x6 -> 大臣))),[Ljava.lang.String;@2a1edad4,Annotation([Ljava.lang.String;@6256ac4f,[Ljava.lang.String;@44c79f32,[Ljava.lang.String;@7fcbe147),Annotation([Ljava.lang.String;@235f4c10,[Ljava.lang.String;@743cb8e0,[Ledu.cmu.lti.nlp.amr.Dependency;@c7a975a),Annotation([Ljava.lang.String;@2c1b9e4b,[Ljava.lang.String;@757d6814,[Ljava.lang.String;@649725e3),Annotation([Ljava.lang.String;@3c0fae6c,[Ljava.lang.String;@4c168660,[Ledu.cmu.lti.nlp.amr.Entity;@52b56a3e))
AMR:
(x6 / 大臣, topic, x7 / 司法-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,206 microseconds
Sentence: “ 可是 ， 这儿 没有 一 个 要 审判 的 人 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  审判 => 审判-01
Oracle Span 3:  要 => 要-03
Oracle Span 4:  这儿 => 这儿
Spans:
Span 10-11:  人 => 人
Span 8-9:  审判 => 审判-01
Span 7-8:  要 => 要-03
Span 3-4:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 8-9:  审判 => 审判-01
Oracle Span 7-8:  要 => 要-03
Oracle Span 3-4:  这儿 => 这儿

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	这儿	_	PN	PN	_	5	nsubj	_	_
5	没有	_	VE	VE	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	5	dep	_	_
8	要	_	VV	VV	_	5	conj	_	_
9	审判	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	人	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x21 / 审判-01, arg1, x20 / 人)
(x22 / 要-03, arg0, x21 / 审判-01)

Input(Some(Graph((say :arg1 (contrast :arg2 (有-03 :polarity - :arg0 这儿 :arg1 (人 :quant 1 :arg1-of (审判-01 :arg0-of 要-03))))),ArrayBuffer(Span(3,4,List(0),这儿,这儿,false), Span(10,11,List(1),人,人,false), Span(8,9,List(2),审判,审判-01,false), Span(7,8,List(3),要,要-03,false)),Map(2 -> 审判-01, 1 -> 人, 0 -> 这儿, 3 -> 要-03),Map(x22 -> 要-03, x19 -> 这儿, x21 -> 审判-01, x20 -> 人))),[Ljava.lang.String;@fd0e5b6,Annotation([Ljava.lang.String;@4eed46ee,[Ljava.lang.String;@36b0fcd5,[Ljava.lang.String;@4fad94a7),Annotation([Ljava.lang.String;@475835b1,[Ljava.lang.String;@6326d182,[Ledu.cmu.lti.nlp.amr.Dependency;@5241cf67),Annotation([Ljava.lang.String;@716a7124,[Ljava.lang.String;@77192705,[Ljava.lang.String;@226642a5),Annotation([Ljava.lang.String;@7e809b79,[Ljava.lang.String;@5cc126dc,[Ledu.cmu.lti.nlp.amr.Entity;@625e134e))
AMR:
(x20 / 人, location, x21 / 审判-01)
(x21 / 审判-01, domain, x19 / 这儿)
(x22 / 要-03, compared-to, x21 / 审判-01)

WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.0
Decoded in 7,064 microseconds
Sentence: “ 很 难 说 呀 ， ” 国王 说道 。

Oracle Span 1:  国王 => 国王
Oracle Span 2:  很 => 很
Oracle Span 3:  说道 => 说道-01
Spans:
Span 7-8:  国王 => 国王
Span 1-2:  很 => 很
Span 8-9:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  国王 => 国王
Oracle Span 1-2:  很 => 很
Oracle Span 8-9:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	很	_	AD	AD	_	4	advmod	_	_
3	难	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	9	pccomp	_	_
5	呀	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	”	_	PU	PU	_	9	punct	_	_
8	国王	_	NN	NN	_	9	nsubj	_	_
9	说道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 国王)

Input(Some(Graph((说道-01 :arg1 (难说-01 :degree 很) :arg0 国王),ArrayBuffer(Span(8,9,List(0),说道,说道-01,false), Span(1,2,List(1),很,很,false), Span(7,8,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 很, 0 -> 说道-01),Map(x2 -> 国王, x7 -> 很, x0 -> 说道-01))),[Ljava.lang.String;@72bd06ca,Annotation([Ljava.lang.String;@89c10b7,[Ljava.lang.String;@5dbe30be,[Ljava.lang.String;@4fe89c24),Annotation([Ljava.lang.String;@55795845,[Ljava.lang.String;@3d08f3f5,[Ledu.cmu.lti.nlp.amr.Dependency;@119f1f2a),Annotation([Ljava.lang.String;@1a1da881,[Ljava.lang.String;@5b970f7,[Ljava.lang.String;@7fd4acee),Annotation([Ljava.lang.String;@165b8a71,[Ljava.lang.String;@6175619b,[Ledu.cmu.lti.nlp.amr.Entity;@2f058b8a))
AMR:
(x0 / 说道-01, degree, x7 / 很)
(x0 / 说道-01, direction, x2 / 国王)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,394 microseconds
Sentence: 因此 我 还 没有 巡视 过 我 的 王国 呢 ！ ”

Oracle Span 1:  巡视 => 巡视-01
Oracle Span 2:  我 => 我
Oracle Span 3:  王国 => 王国
Oracle Span 4:  还 => 还
Spans:
Span 4-5:  巡视 => 巡视-01
Span 1-2:  我 => 我
Span 8-9:  王国 => 王国
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  巡视 => 巡视-01
Oracle Span 1-2:  我 => 我
Oracle Span 8-9:  王国 => 王国
Oracle Span 2-3:  还 => 还

Dependencies:
1	因此	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	还	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	巡视	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	王国	_	NN	NN	_	5	dobj	_	_
10	呢	_	SP	SP	_	5	dep	_	_
11	！	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x12 / 巡视-01, arg0, x14 / 我)
(x12 / 巡视-01, arg1, x16 / 王国)
(x12 / 巡视-01, manner, x15 / 还)

Input(Some(Graph((say :arg1 (causation :arg2 (巡视-01 :mode expressive :arg1 (王国 :poss x14) :manner 还 :arg0 我 :polarity -))),ArrayBuffer(Span(4,5,List(0),巡视,巡视-01,false), Span(8,9,List(1),王国,王国,false), Span(2,3,List(2),还,还,false), Span(1,2,List(3),我,我,false)),Map(2 -> 还, 1 -> 王国, 0 -> 巡视-01, 3 -> 我),Map(x16 -> 王国, x12 -> 巡视-01, x15 -> 还, x14 -> 我))),[Ljava.lang.String;@756cf158,Annotation([Ljava.lang.String;@3f2ef586,[Ljava.lang.String;@751d3241,[Ljava.lang.String;@76c7beb3),Annotation([Ljava.lang.String;@64337702,[Ljava.lang.String;@2cf92cc7,[Ledu.cmu.lti.nlp.amr.Dependency;@30ea8c23),Annotation([Ljava.lang.String;@7b139eab,[Ljava.lang.String;@4e76dac,[Ljava.lang.String;@611df6e3),Annotation([Ljava.lang.String;@5f2f577,[Ljava.lang.String;@6273c5a4,[Ledu.cmu.lti.nlp.amr.Entity;@5d465e4b))
AMR:
(x12 / 巡视-01, manner, x14 / 我)
(x12 / 巡视-01, manner, x15 / 还)
(x12 / 巡视-01, part, x16 / 王国)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 7,655 microseconds
Sentence: “ 我 很 老 了 ，

Oracle Span 1:  很 => 很
Oracle Span 2:  我 => 我
Oracle Span 3:  老 => 老-01
Spans:
Span 2-3:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  老 => 老-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  老 => 老-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	dep	_	_
4	老	_	NR	NR	_	0	root	_	_
5	了	_	VV	VV	_	4	conj	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x6 / 老-01, arg0, x8 / 我)
(x6 / 老-01, degree, x7 / 很)

Input(Some(Graph((say :arg1 (老-01 :arg0 我 :degree 很)),ArrayBuffer(Span(3,4,List(0),老,老-01,false), Span(1,2,List(1),我,我,false), Span(2,3,List(2),很,很,false)),Map(2 -> 很, 1 -> 我, 0 -> 老-01),Map(x8 -> 我, x7 -> 很, x6 -> 老-01))),[Ljava.lang.String;@53e211ee,Annotation([Ljava.lang.String;@41a90fa8,[Ljava.lang.String;@3d8bbcdc,[Ljava.lang.String;@52500920),Annotation([Ljava.lang.String;@117e0fe5,[Ljava.lang.String;@18a3962d,[Ledu.cmu.lti.nlp.amr.Dependency;@78aea4b9),Annotation([Ljava.lang.String;@2a65bb85,[Ljava.lang.String;@4b85880b,[Ljava.lang.String;@4f936da8),Annotation([Ljava.lang.String;@4215838f,[Ljava.lang.String;@452ba1db,[Ledu.cmu.lti.nlp.amr.Entity;@2289aca5))
AMR:
(x6 / 老-01, degree, x7 / 很)
(x6 / 老-01, example, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,603 microseconds
Sentence: 我 这 地方 又 小 ， 没有 放 銮驾 的 地方 ，

Oracle Span 1:  又 => 又
Oracle Span 2:  地方 => 地方
Oracle Span 3:  地方 => 地方
Oracle Span 4:  小 => 小-01
Oracle Span 5:  我 => 我
Oracle Span 6:  放 => 放-03
Oracle Span 7:  这 => 这
Oracle Span 8:  銮驾 => 銮驾
Spans:
Span 3-4:  又 => 又
Span 2-3:  地方 => 地方
Span 10-11:  地方 => 地方
Span 4-5:  小 => 小-01
Span 0-1:  我 => 我
Span 7-8:  放 => 放-03
Span 1-2:  这 => 这
Span 8-9:  銮驾 => 銮驾

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 2-3:  地方 => 地方
Oracle Span 10-11:  地方 => 地方
Oracle Span 4-5:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  放 => 放-03
Oracle Span 1-2:  这 => 这
Oracle Span 8-9:  銮驾 => 銮驾

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	这	_	DT	DT	_	3	det	_	_
3	地方	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	小	_	VA	VA	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	没有	_	VE	VE	_	5	dep	_	_
8	放	_	VV	VV	_	11	rcmod	_	_
9	銮驾	_	NN	NN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x34 / 小-01, arg0, x36 / 地方)
(x34 / 小-01, manner, x35 / 又)
(x36 / 地方, mod, x37 / 这)
(x36 / 地方, poss, x38 / 我)
(x39 / 放-03, arg1, x40 / 銮驾)

Input(Some(Graph((有-03 :polarity - :arg1 地方 :cause (小-01 :arg0 (地方 :poss 我 :mod 这) :manner 又) :purpose (放-03 :arg1 銮驾)),ArrayBuffer(Span(2,3,List(0),地方,地方,false), Span(4,5,List(1),小,小-01,false), Span(10,11,List(2),地方,地方,false), Span(0,1,List(3),我,我,false), Span(1,2,List(4),这,这,false), Span(3,4,List(5),又,又,false), Span(7,8,List(6),放,放-03,false), Span(8,9,List(7),銮驾,銮驾,false)),Map(2 -> 地方, 5 -> 又, 7 -> 銮驾, 1 -> 小-01, 4 -> 这, 6 -> 放-03, 0 -> 地方, 3 -> 我),Map(x40 -> 銮驾, x34 -> 小-01, x37 -> 这, x31 -> 地方, x39 -> 放-03, x36 -> 地方, x38 -> 我, x35 -> 又))),[Ljava.lang.String;@76a36b71,Annotation([Ljava.lang.String;@184497d1,[Ljava.lang.String;@f9d87b,[Ljava.lang.String;@6ffab045),Annotation([Ljava.lang.String;@26fb628,[Ljava.lang.String;@3e2943ab,[Ledu.cmu.lti.nlp.amr.Dependency;@70dd7e15),Annotation([Ljava.lang.String;@4a9f80d3,[Ljava.lang.String;@35beb15e,[Ljava.lang.String;@41fe9859),Annotation([Ljava.lang.String;@5ac86ba5,[Ljava.lang.String;@6c67e137,[Ledu.cmu.lti.nlp.amr.Entity;@2c9399a4))
AMR:
(x34 / 小-01, ARG3, x36 / 地方)
(x34 / 小-01, location, x31 / 地方)
(x34 / 小-01, manner, x35 / 又)
(x36 / 地方, ARG4, x40 / 銮驾)
(x36 / 地方, mod, x37 / 这)
(x36 / 地方, poss, x38 / 我)
(x39 / 放-03, quant, x40 / 銮驾)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
Decoded in 18,391 microseconds
Sentence: 另外 ， 一 走路 我 就 累 。

Oracle Span 1:  就 => 就
Oracle Span 2:  我 => 我
Oracle Span 3:  累 => 累-02
Oracle Span 4:  走路 => 走路-01
Spans:
Span 5-6:  就 => 就
Span 4-5:  我 => 我
Span 6-7:  累 => 累-02
Span 3-4:  走路 => 走路-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  就 => 就
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  累 => 累-02
Oracle Span 3-4:  走路 => 走路-01

Dependencies:
1	另外	_	AD	AD	_	7	advmod	_	_
2	,	_	PU	PU	_	7	punct	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	走路	_	NN	NN	_	7	nsubj	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	累	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x22 / 走路-01, arg0, x23 / 我)
(x24 / 累-02, manner, x25 / 就)

Input(Some(Graph((progression :arg2 (condition :arg1 (走路-01 :arg0 我) :arg2 (累-02 :arg0 我 :manner 就))),ArrayBuffer(Span(3,4,List(0),走路,走路-01,false), Span(4,5,List(1),我,我,false), Span(6,7,List(2),累,累-02,false), Span(5,6,List(3),就,就,false)),Map(2 -> 累-02, 1 -> 我, 0 -> 走路-01, 3 -> 就),Map(x22 -> 走路-01, x25 -> 就, x24 -> 累-02, x23 -> 我))),[Ljava.lang.String;@191ae03f,Annotation([Ljava.lang.String;@9635fa,[Ljava.lang.String;@53ab0286,[Ljava.lang.String;@63c5efee),Annotation([Ljava.lang.String;@2d10e0b1,[Ljava.lang.String;@1c98290c,[Ledu.cmu.lti.nlp.amr.Dependency;@172ca72b),Annotation([Ljava.lang.String;@5bda80bf,[Ljava.lang.String;@71e5f61d,[Ljava.lang.String;@2ce86164),Annotation([Ljava.lang.String;@5e8f9e2d,[Ljava.lang.String;@51df223b,[Ledu.cmu.lti.nlp.amr.Entity;@fd46303))
AMR:
(x22 / 走路-01, ARG0, x25 / 就)
(x22 / 走路-01, ARG4, x23 / 我)
(x24 / 累-02, manner, x25 / 就)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 7,452 microseconds
Sentence: “ 噢 ！ 可是 我 已经 看 过 了 。 ” 小 王子 说道 ， 并 探身 朝 星球 的 那 一 侧 看 了 看 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  已经 => 已经
Oracle Span 3:  我 => 我
Oracle Span 4:  探身 => 探身
Oracle Span 5:  星球 => 星球
Oracle Span 6:  王子 => 王子
Oracle Span 7:  看 => 看-02
Oracle Span 8:  看 => 看-02
Oracle Span 9:  说道 => 说道-01
Spans:
Span 11-12:  小 => 小-01
Span 5-6:  已经 => 已经
Span 4-5:  我 => 我
Span 16-17:  探身 => 探身
Span 18-19:  星球 => 星球
Span 12-13:  王子 => 王子
Span 6-7:  看 => 看-02
Span 23-24:  看 => 看-02
Span 13-14:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  小 => 小-01
Oracle Span 5-6:  已经 => 已经
Oracle Span 4-5:  我 => 我
Oracle Span 16-17:  探身 => 探身
Oracle Span 18-19:  星球 => 星球
Oracle Span 12-13:  王子 => 王子
Oracle Span 6-7:  看 => 看-02
Oracle Span 23-24:  看 => 看-02
Oracle Span 13-14:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	噢	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	可是	_	AD	AD	_	7	advmod	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	已经	_	AD	AD	_	7	advmod	_	_
7	看	_	VV	VV	_	2	dep	_	_
8	过	_	VV	VV	_	7	rcomp	_	_
9	了	_	AS	AS	_	7	asp	_	_
10	。	_	PU	PU	_	7	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	说道	_	VV	VV	_	7	conj	_	_
15	,	_	PU	PU	_	7	punct	_	_
16	并	_	CC	CC	_	7	cc	_	_
17	探身	_	NN	NN	_	24	nsubj	_	_
18	朝	_	P	P	_	24	prep	_	_
19	星球	_	NN	NN	_	21	dep	_	_
20	的	_	DEG	DEG	_	19	assm	_	_
21	那	_	DT	DT	_	23	lobj	_	_
22	一	_	CD	CD	_	21	dep	_	_
23	侧	_	LC	LC	_	18	plmod	_	_
24	看	_	VV	VV	_	7	dep	_	_
25	了	_	AS	AS	_	24	asp	_	_
26	看	_	VV	VV	_	24	dep	_	_
27	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 看-02, arg0, x14 / 我)
(x12 / 看-02, time, x13 / 已经)
(x17 / 看-02, manner, x21 / 探身)
(x8 / 说道-01, arg0, x9 / 王子)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph((temporal :arg1 (说道-01 :arg1 (contrast :arg2 (看-02 :arg0 我 :time 已经)) :arg0 (王子 :mod 小-01)) :arg2 (看-02 :manner 探身 :direction (那一侧 :mod 星球) :arg0 x9)),ArrayBuffer(Span(13,14,List(0),说道,说道-01,false), Span(6,7,List(1),看,看-02,false), Span(4,5,List(2),我,我,false), Span(5,6,List(3),已经,已经,false), Span(12,13,List(4),王子,王子,false), Span(11,12,List(5),小,小-01,false), Span(23,24,List(6),看,看-02,false), Span(16,17,List(7),探身,探身,false), Span(18,19,List(8),星球,星球,false)),Map(2 -> 我, 5 -> 小-01, 8 -> 星球, 7 -> 探身, 1 -> 看-02, 4 -> 王子, 6 -> 看-02, 0 -> 说道-01, 3 -> 已经),Map(x10 -> 小-01, x13 -> 已经, x8 -> 说道-01, x12 -> 看-02, x21 -> 探身, x20 -> 星球, x14 -> 我, x9 -> 王子, x17 -> 看-02))),[Ljava.lang.String;@60d8c0dc,Annotation([Ljava.lang.String;@4204541c,[Ljava.lang.String;@6a62689d,[Ljava.lang.String;@4602c2a9),Annotation([Ljava.lang.String;@60fa3495,[Ljava.lang.String;@3e2822,[Ledu.cmu.lti.nlp.amr.Dependency;@79e18e38),Annotation([Ljava.lang.String;@29a60c27,[Ljava.lang.String;@1849db1a,[Ljava.lang.String;@69c79f09),Annotation([Ljava.lang.String;@1ca25c47,[Ljava.lang.String;@5fcacc0,[Ledu.cmu.lti.nlp.amr.Entity;@533b266e))
AMR:
(x12 / 看-02, example, x14 / 我)
(x12 / 看-02, time, x13 / 已经)
(x17 / 看-02, manner, x21 / 探身)
(x21 / 探身, location, x20 / 星球)
(x8 / 说道-01, conj-as-if, x9 / 王子)
(x8 / 说道-01, op, x21 / 探身)
(x8 / 说道-01, time, x13 / 已经)
(x9 / 王子, mod, x10 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 26,467 microseconds
Sentence: 那边 也 没有 一 个 人 …

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  那边 => 那边
Spans:
Span 1-2:  也 => 也
Span 5-6:  人 => 人
Span 0-1:  那边 => 那边

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  也 => 也
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  那边 => 那边

Dependencies:
1	那边	_	NR	NR	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	7	clf	_	_
6	人	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	3	dobj	_	_

Oracle:


Input(Some(Graph((有-03 :polarity - :arg0 那边 :manner 也 :arg1 (人 :quant 1)),ArrayBuffer(Span(0,1,List(0),那边,那边,false), Span(1,2,List(1),也,也,false), Span(5,6,List(2),人,人,false)),Map(2 -> 人, 1 -> 也, 0 -> 那边),Map(x19 -> 人, x18 -> 也, x17 -> 那边))),[Ljava.lang.String;@6d1d4d7,Annotation([Ljava.lang.String;@89ff02e,[Ljava.lang.String;@6865c751,[Ljava.lang.String;@62679465),Annotation([Ljava.lang.String;@6a988392,[Ljava.lang.String;@1d71006f,[Ledu.cmu.lti.nlp.amr.Dependency;@5b6813df),Annotation([Ljava.lang.String;@5f2606b,[Ljava.lang.String;@2b58f754,[Ljava.lang.String;@3ebff828),Annotation([Ljava.lang.String;@2552f2cb,[Ljava.lang.String;@33352f32,[Ledu.cmu.lti.nlp.amr.Entity;@5f3b9c57))
AMR:
(x17 / 那边, day, x18 / 也)
(x19 / 人, location, x17 / 那边)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.3
Decoded in 3,960 microseconds
Sentence: “ 那么 你 就 审判 你 自己 呀 ！ ” 国王 回答 他 说 。

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  你 => 你
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  国王 => 国王
Oracle Span 6:  审判 => 审判-01
Oracle Span 7:  就 => 就
Oracle Span 8:  自己 => 自己
Spans:
Span 12-13:  他 => 他
Span 2-3:  你 => 你
Span 5-6:  你 => 你
Span 11-12:  回答 => 回答-01
Span 10-11:  国王 => 国王
Span 4-5:  审判 => 审判-01
Span 3-4:  就 => 就
Span 6-7:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  他 => 他
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  你 => 你
Oracle Span 11-12:  回答 => 回答-01
Oracle Span 10-11:  国王 => 国王
Oracle Span 4-5:  审判 => 审判-01
Oracle Span 3-4:  就 => 就
Oracle Span 6-7:  自己 => 自己

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	那么	_	AD	AD	_	5	advmod	_	_
3	你	_	PN	PN	_	5	prep	_	_
4	就	_	AD	AD	_	3	advmod	_	_
5	审判	_	VV	VV	_	11	vmod	_	_
6	你	_	PN	PN	_	7	nsubj	_	_
7	自己	_	PN	PN	_	5	dobj	_	_
8	呀	_	SP	SP	_	7	dep	_	_
9	！	_	PU	PU	_	5	punct	_	_
10	”	_	PU	PU	_	5	punct	_	_
11	国王	_	NN	NN	_	12	nsubj	_	_
12	回答	_	VV	VV	_	0	root	_	_
13	他	_	PN	PN	_	12	dobj	_	_
14	说	_	VV	VV	_	12	conj	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 国王)
(x0 / 回答-01, arg3, x3 / 他)
(x5 / 审判-01, arg0, x6 / 你)
(x5 / 审判-01, arg1, x7 / 自己)
(x5 / 审判-01, manner, x9 / 就)
(x7 / 自己, mod, x8 / 你)

Input(Some(Graph((回答-01 :arg2 (temporal :arg2 (审判-01 :mode expressive :manner 就 :arg1 (自己 :mod 你) :arg0 你)) :arg3 他 :arg0 国王),ArrayBuffer(Span(11,12,List(0),回答,回答-01,false), Span(4,5,List(1),审判,审判-01,false), Span(3,4,List(2),就,就,false), Span(6,7,List(3),自己,自己,false), Span(2,3,List(4),你,你,false), Span(5,6,List(5),你,你,false), Span(12,13,List(6),他,他,false), Span(10,11,List(7),国王,国王,false)),Map(2 -> 就, 5 -> 你, 7 -> 国王, 1 -> 审判-01, 4 -> 你, 6 -> 他, 0 -> 回答-01, 3 -> 自己),Map(x2 -> 国王, x5 -> 审判-01, x8 -> 你, x7 -> 自己, x3 -> 他, x6 -> 你, x9 -> 就, x0 -> 回答-01))),[Ljava.lang.String;@1e044120,Annotation([Ljava.lang.String;@2cf23c81,[Ljava.lang.String;@3624da92,[Ljava.lang.String;@35fe2125),Annotation([Ljava.lang.String;@94f6bfb,[Ljava.lang.String;@34645867,[Ledu.cmu.lti.nlp.amr.Dependency;@2484f433),Annotation([Ljava.lang.String;@60b71e8f,[Ljava.lang.String;@1255b1d1,[Ljava.lang.String;@464649c),Annotation([Ljava.lang.String;@7c22d4f,[Ljava.lang.String;@5f59185e,[Ledu.cmu.lti.nlp.amr.Entity;@60bdf15d))
AMR:
(x0 / 回答-01, location, x2 / 国王)
(x0 / 回答-01, location, x5 / 审判-01)
(x0 / 回答-01, prep-with, x3 / 他)
(x5 / 审判-01, domain, x8 / 你)
(x5 / 审判-01, manner, x9 / 就)
(x5 / 审判-01, prep-through, x7 / 自己)
(x7 / 自己, mod, x6 / 你)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.2
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,813 microseconds
Sentence: “ 这 可是 最 难 的 了 。

Oracle Span 1:  最 => 最
Oracle Span 2:  这 => 这
Oracle Span 3:  难 => 难-01
Spans:
Span 3-4:  最 => 最
Span 1-2:  这 => 这
Span 4-5:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  最 => 最
Oracle Span 1-2:  这 => 这
Oracle Span 4-5:  难 => 难-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	这	_	PN	PN	_	7	nsubj	_	_
3	可是	_	AD	AD	_	7	advmod	_	_
4	最	_	AD	AD	_	5	advmod	_	_
5	难	_	VA	VA	_	7	nsubj	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	了	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 难-01, arg0, x11 / 这)
(x8 / 难-01, degree, x9 / 最)

Input(Some(Graph((say :arg1 (难-01 :arg0 这 :degree 最)),ArrayBuffer(Span(4,5,List(0),难,难-01,false), Span(1,2,List(1),这,这,false), Span(3,4,List(2),最,最,false)),Map(2 -> 最, 1 -> 这, 0 -> 难-01),Map(x8 -> 难-01, x11 -> 这, x9 -> 最))),[Ljava.lang.String;@47da3952,Annotation([Ljava.lang.String;@51e4ccb3,[Ljava.lang.String;@46e8a539,[Ljava.lang.String;@495083a0),Annotation([Ljava.lang.String;@5fd62371,[Ljava.lang.String;@28a0fd6c,[Ledu.cmu.lti.nlp.amr.Dependency;@2b62442c),Annotation([Ljava.lang.String;@66629f63,[Ljava.lang.String;@841e575,[Ljava.lang.String;@27a5328c),Annotation([Ljava.lang.String;@1e5f4170,[Ljava.lang.String;@6c345c5f,[Ledu.cmu.lti.nlp.amr.Entity;@6b5966e1))
AMR:
(x8 / 难-01, degree, x9 / 最)
(x9 / 最, mod, x11 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,460 microseconds
Sentence: 审判 自己 比 审判 别人 要 难 得 多 啊 ！

Oracle Span 1:  别人 => 别人
Oracle Span 2:  多 => 多
Oracle Span 3:  审判 => 审判-01
Oracle Span 4:  审判 => 审判-01
Oracle Span 5:  自己 => 自己
Oracle Span 6:  难 => 难-01
Spans:
Span 4-5:  别人 => 别人
Span 8-9:  多 => 多
Span 0-1:  审判 => 审判-01
Span 3-4:  审判 => 审判-01
Span 1-2:  自己 => 自己
Span 6-7:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  别人 => 别人
Oracle Span 8-9:  多 => 多
Oracle Span 0-1:  审判 => 审判-01
Oracle Span 3-4:  审判 => 审判-01
Oracle Span 1-2:  自己 => 自己
Oracle Span 6-7:  难 => 难-01

Dependencies:
1	审判	_	NN	NN	_	9	nsubj	_	_
2	自己	_	PN	PN	_	9	nsubj	_	_
3	比	_	P	P	_	9	prep	_	_
4	审判	_	NN	NN	_	5	nn	_	_
5	别人	_	NN	NN	_	3	pobj	_	_
6	要	_	AD	AD	_	9	advmod	_	_
7	难	_	VA	VA	_	9	dep	_	_
8	得	_	DER	DER	_	9	dep	_	_
9	多	_	VA	VA	_	0	root	_	_
10	啊	_	SP	SP	_	9	dep	_	_
11	！	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 审判-01, arg1, x12 / 自己)
(x11 / 审判-01, compared-to, x14 / 审判-01)
(x14 / 审判-01, arg1, x15 / 别人)
(x9 / 难-01, arg0, x11 / 审判-01)
(x9 / 难-01, degree, x16 / 多)

Input(Some(Graph((难-01 :mode expressive :degree 多 :arg0 (审判-01 :compared-to (审判-01 :arg1 别人) :arg1 自己)),ArrayBuffer(Span(6,7,List(0),难,难-01,false), Span(8,9,List(1),多,多,false), Span(0,1,List(2),审判,审判-01,false), Span(3,4,List(3),审判,审判-01,false), Span(4,5,List(4),别人,别人,false), Span(1,2,List(5),自己,自己,false)),Map(2 -> 审判-01, 5 -> 自己, 1 -> 多, 4 -> 别人, 0 -> 难-01, 3 -> 审判-01),Map(x16 -> 多, x12 -> 自己, x15 -> 别人, x11 -> 审判-01, x14 -> 审判-01, x9 -> 难-01))),[Ljava.lang.String;@65e61854,Annotation([Ljava.lang.String;@1568159,[Ljava.lang.String;@4fcee388,[Ljava.lang.String;@6f80fafe),Annotation([Ljava.lang.String;@3af17be2,[Ljava.lang.String;@f9879ac,[Ledu.cmu.lti.nlp.amr.Dependency;@37f21974),Annotation([Ljava.lang.String;@5f4d427e,[Ljava.lang.String;@6e521c1e,[Ljava.lang.String;@224b4d61),Annotation([Ljava.lang.String;@5d5d9e5,[Ljava.lang.String;@303e3593,[Ledu.cmu.lti.nlp.amr.Entity;@4ef27d66))
AMR:
(x11 / 审判-01, compared-to, x14 / 审判-01)
(x11 / 审判-01, prep-following, x12 / 自己)
(x15 / 别人, topic, x14 / 审判-01)
(x9 / 难-01, degree, x16 / 多)
(x9 / 难-01, topic, x14 / 审判-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,109 microseconds
Sentence: 你 要是 能 审判 好 自己 ， 你 就 是 一 个 真正 有 才智 的 人 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  你 => 你
Oracle Span 3:  好 => 好-01
Oracle Span 4:  审判 => 审判-01
Oracle Span 5:  就 => 就
Oracle Span 6:  才智 => 才智
Oracle Span 7:  有 => 有-01
Oracle Span 8:  真正 => 真正
Oracle Span 9:  能 => 能-01
Oracle Span 10:  自己 => 自己
Spans:
Span 16-17:  人 => 人
Span 0-1:  你 => 你
Span 4-5:  好 => 好-01
Span 3-4:  审判 => 审判-01
Span 8-9:  就 => 就
Span 14-15:  才智 => 才智
Span 13-14:  有 => 有-01
Span 12-13:  真正 => 真正
Span 2-3:  能 => 能-01
Span 5-6:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  人 => 人
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  好 => 好-01
Oracle Span 3-4:  审判 => 审判-01
Oracle Span 8-9:  就 => 就
Oracle Span 14-15:  才智 => 才智
Oracle Span 13-14:  有 => 有-01
Oracle Span 12-13:  真正 => 真正
Oracle Span 2-3:  能 => 能-01
Oracle Span 5-6:  自己 => 自己

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	要是	_	VV	VV	_	10	dep	_	_
3	能	_	VV	VV	_	2	ccomp	_	_
4	审判	_	NN	NN	_	3	dobj	_	_
5	好	_	VA	VA	_	2	dep	_	_
6	自己	_	PN	PN	_	10	nsubj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	你	_	PN	PN	_	10	nsubj	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	0	root	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	个	_	M	M	_	17	clf	_	_
13	真正	_	AD	AD	_	14	advmod	_	_
14	有	_	VE	VE	_	17	rcmod	_	_
15	才智	_	NN	NN	_	14	dobj	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	人	_	NN	NN	_	10	attr	_	_
18	。	_	PU	PU	_	10	punct	_	_
19	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x19 / 能-01, arg0, x20 / 审判-01)
(x20 / 审判-01, arg0, x21 / 你)
(x20 / 审判-01, arg1, x22 / 自己)
(x20 / 审判-01, manner, x23 / 好-01)
(x24 / 人, manner, x30 / 就)
(x25 / 有-01, arg0, x24 / 人)
(x25 / 有-01, arg1, x26 / 才智)
(x25 / 有-01, manner, x27 / 真正)

Input(Some(Graph((say :arg1 (condition :arg1 (能-01 :arg0 (审判-01 :manner 好-01 :arg1 自己 :arg0 你)) :arg2 (人 :manner 就 :domain x21 :quant 1 :arg0-of (有-01 :manner 真正 :arg1 才智)))),ArrayBuffer(Span(2,3,List(0),能,能-01,false), Span(3,4,List(1),审判,审判-01,false), Span(4,5,List(2),好,好-01,false), Span(5,6,List(3),自己,自己,false), Span(0,1,List(4),你,你,false), Span(16,17,List(5),人,人,false), Span(8,9,List(6),就,就,false), Span(13,14,List(7),有,有-01,false), Span(12,13,List(8),真正,真正,false), Span(14,15,List(9),才智,才智,false)),Map(2 -> 好-01, 5 -> 人, 8 -> 真正, 7 -> 有-01, 1 -> 审判-01, 4 -> 你, 6 -> 就, 9 -> 才智, 0 -> 能-01, 3 -> 自己),Map(x22 -> 自己, x25 -> 有-01, x19 -> 能-01, x30 -> 就, x27 -> 真正, x21 -> 你, x24 -> 人, x23 -> 好-01, x26 -> 才智, x20 -> 审判-01))),[Ljava.lang.String;@362a019c,Annotation([Ljava.lang.String;@1d9bec4d,[Ljava.lang.String;@5c48c0c0,[Ljava.lang.String;@10c8f62),Annotation([Ljava.lang.String;@674c583e,[Ljava.lang.String;@25f7391e,[Ledu.cmu.lti.nlp.amr.Dependency;@3f23a3a0),Annotation([Ljava.lang.String;@5ab14cb9,[Ljava.lang.String;@5fb97279,[Ljava.lang.String;@439a8f59),Annotation([Ljava.lang.String;@61861a29,[Ljava.lang.String;@31024624,[Ledu.cmu.lti.nlp.amr.Entity;@25bcd0c7))
AMR:
(x19 / 能-01, prep-on, x20 / 审判-01)
(x20 / 审判-01, manner, x23 / 好-01)
(x20 / 审判-01, quant, x21 / 你)
(x22 / 自己, mod, x23 / 好-01)
(x24 / 人, mod, x26 / 才智)
(x25 / 有-01, accompanier, x26 / 才智)
(x25 / 有-01, manner, x27 / 真正)
(x25 / 有-01, manner, x30 / 就)
(x27 / 真正, mod, x23 / 好-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 30,830 microseconds
Sentence: “ 我 吗 ， 随便 在 什么 地方 我 都 可以 审度 自己 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  审度 => 审度-01
Oracle Span 5:  我 => 我
Oracle Span 6:  自己 => 自己
Oracle Span 7:  都 => 都
Oracle Span 8:  随便 => 随便-01
Spans:
Span 6-7:  什么 => 什么
Span 10-11:  可以 => 可以-01
Span 7-8:  地方 => 地方
Span 11-12:  审度 => 审度-01
Span 1-2:  我 => 我
Span 12-13:  自己 => 自己
Span 9-10:  都 => 都
Span 4-5:  随便 => 随便-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  什么 => 什么
Oracle Span 10-11:  可以 => 可以-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 11-12:  审度 => 审度-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  自己 => 自己
Oracle Span 9-10:  都 => 都
Oracle Span 4-5:  随便 => 随便-01

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	我	_	PN	PN	_	11	pccomp	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	随便	_	NR	NR	_	8	nn	_	_
6	在	_	P	P	_	8	prep	_	_
7	什么	_	PN	PN	_	6	pobj	_	_
8	地方	_	NN	NN	_	11	nsubj	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	都	_	AD	AD	_	11	advmod	_	_
11	可以	_	VV	VV	_	12	conj	_	_
12	审度	_	VV	VV	_	0	root	_	_
13	自己	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x12 / 可以-01, arg0, x13 / 审度-01)
(x12 / 可以-01, manner, x14 / 都)
(x13 / 审度-01, arg0, x15 / 我)
(x13 / 审度-01, arg1, x16 / 自己)
(x13 / 审度-01, location, x17 / 地方)
(x17 / 地方, mod, x18 / 什么)
(x17 / 地方, mod, x19 / 随便-01)

Input(Some(Graph((say :arg1 (可以-01 :manner 都 :arg0 (审度-01 :location (地方 :mod 随便-01 :mod 什么) :arg1 自己 :arg0 我))),ArrayBuffer(Span(10,11,List(0),可以,可以-01,false), Span(9,10,List(1),都,都,false), Span(11,12,List(2),审度,审度-01,false), Span(7,8,List(3),地方,地方,false), Span(4,5,List(4),随便,随便-01,false), Span(6,7,List(5),什么,什么,false), Span(12,13,List(6),自己,自己,false), Span(1,2,List(7),我,我,false)),Map(2 -> 审度-01, 5 -> 什么, 7 -> 我, 1 -> 都, 4 -> 随便-01, 6 -> 自己, 0 -> 可以-01, 3 -> 地方),Map(x16 -> 自己, x19 -> 随便-01, x13 -> 审度-01, x12 -> 可以-01, x15 -> 我, x18 -> 什么, x14 -> 都, x17 -> 地方))),[Ljava.lang.String;@32cb636e,Annotation([Ljava.lang.String;@63cd604c,[Ljava.lang.String;@40dd3977,[Ljava.lang.String;@3a4e343),Annotation([Ljava.lang.String;@6a1d204a,[Ljava.lang.String;@62dae245,[Ledu.cmu.lti.nlp.amr.Dependency;@4b6579e8),Annotation([Ljava.lang.String;@6fff253c,[Ljava.lang.String;@6c6357f9,[Ljava.lang.String;@591e58fa),Annotation([Ljava.lang.String;@3954d008,[Ljava.lang.String;@2f94c4db,[Ledu.cmu.lti.nlp.amr.Entity;@593e824f))
AMR:
(x12 / 可以-01, manner, x14 / 都)
(x13 / 审度-01, location, x12 / 可以-01)
(x13 / 审度-01, location, x16 / 自己)
(x13 / 审度-01, location, x17 / 地方)
(x17 / 地方, mod, x18 / 什么)
(x17 / 地方, mod, x19 / 随便-01)
(x19 / 随便-01, snt3, x15 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 17,846 microseconds
Sentence: 我 没有 必要 留 在 这里 。 ”

Oracle Span 1:  必要 => 必要-01
Oracle Span 2:  我 => 我
Oracle Span 3:  留 => 留-01
Oracle Span 4:  这里 => 这里
Spans:
Span 2-3:  必要 => 必要-01
Span 0-1:  我 => 我
Span 3-4:  留 => 留-01
Span 5-6:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  必要 => 必要-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  留 => 留-01
Oracle Span 5-6:  这里 => 这里

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	必要	_	NN	NN	_	2	dobj	_	_
4	留	_	VV	VV	_	2	dep	_	_
5	在	_	P	P	_	4	prep	_	_
6	这里	_	PN	PN	_	5	pobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 留-01, arg0, x12 / 我)
(x11 / 留-01, arg1, x13 / 这里)
(x9 / 必要-01, arg0, x11 / 留-01)

Input(Some(Graph((say :arg1 (必要-01 :arg0 (留-01 :arg1 这里 :arg0 我) :polarity -)),ArrayBuffer(Span(2,3,List(0),必要,必要-01,false), Span(3,4,List(1),留,留-01,false), Span(5,6,List(2),这里,这里,false), Span(0,1,List(3),我,我,false)),Map(2 -> 这里, 1 -> 留-01, 0 -> 必要-01, 3 -> 我),Map(x13 -> 这里, x12 -> 我, x11 -> 留-01, x9 -> 必要-01))),[Ljava.lang.String;@72ccd81a,Annotation([Ljava.lang.String;@6d8792db,[Ljava.lang.String;@64bc21ac,[Ljava.lang.String;@493dfb8e),Annotation([Ljava.lang.String;@5d25e6bb,[Ljava.lang.String;@ce5a68e,[Ledu.cmu.lti.nlp.amr.Dependency;@9d157ff),Annotation([Ljava.lang.String;@2f162cc0,[Ljava.lang.String;@5df417a7,[Ljava.lang.String;@7c041b41),Annotation([Ljava.lang.String;@7f69d591,[Ljava.lang.String;@61078690,[Ledu.cmu.lti.nlp.amr.Entity;@1cb3ec38))
AMR:
(x11 / 留-01, degree, x9 / 必要-01)
(x11 / 留-01, poss, x12 / 我)
(x11 / 留-01, prep-along-with, x13 / 这里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 6,426 microseconds
Sentence: “ 嗯

Oracle Span 1:  嗯 => 嗯
Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 嗯),ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x4 -> 嗯))),[Ljava.lang.String;@403132fc,Annotation([Ljava.lang.String;@71c5b236,[Ljava.lang.String;@2cab9998,[Ljava.lang.String;@2f7a7219),Annotation([Ljava.lang.String;@669513d8,[Ljava.lang.String;@3a1d593e,[Ledu.cmu.lti.nlp.amr.Dependency;@4a8a60bc),Annotation([Ljava.lang.String;@361c294e,[Ljava.lang.String;@7859e786,[Ljava.lang.String;@285d851a),Annotation([Ljava.lang.String;@314b8f2d,[Ljava.lang.String;@664a9613,[Ledu.cmu.lti.nlp.amr.Entity;@5118388b))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,447 microseconds
Sentence: 国王 又 说 ： “ 嗯 …

Oracle Span 1:  又 => 又
Oracle Span 2:  嗯 => 嗯
Oracle Span 3:  国王 => 国王
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  又 => 又
Span 5-6:  嗯 => 嗯
Span 0-1:  国王 => 国王
Span 2-3:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  又 => 又
Oracle Span 5-6:  嗯 => 嗯
Oracle Span 0-1:  国王 => 国王
Oracle Span 2-3:  说 => 说-01

Dependencies:
1	国王	_	NN	NN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	嗯	_	NR	NR	_	7	nsubj	_	_
7	…	_	VA	VA	_	3	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 国王)
(x0 / 说-01, arg1, x4 / 嗯)
(x0 / 说-01, manner, x2 / 又)

Input(Some(Graph((说-01 :arg1 嗯 :arg0 国王 :manner 又),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(5,6,List(1),嗯,嗯,false), Span(0,1,List(2),国王,国王,false), Span(1,2,List(3),又,又,false)),Map(2 -> 国王, 1 -> 嗯, 0 -> 说-01, 3 -> 又),Map(x2 -> 又, x4 -> 嗯, x3 -> 国王, x0 -> 说-01))),[Ljava.lang.String;@15a902e7,Annotation([Ljava.lang.String;@7876d598,[Ljava.lang.String;@4a3e3e8b,[Ljava.lang.String;@5af28b27),Annotation([Ljava.lang.String;@71104a4,[Ljava.lang.String;@4985cbcb,[Ledu.cmu.lti.nlp.amr.Dependency;@72f46e16),Annotation([Ljava.lang.String;@3c9168dc,[Ljava.lang.String;@332a7fce,[Ljava.lang.String;@549621f3),Annotation([Ljava.lang.String;@54361a9,[Ljava.lang.String;@32232e55,[Ledu.cmu.lti.nlp.amr.Entity;@5217f3d0))
AMR:
(x0 / 说-01, conj-as-if, x3 / 国王)
(x0 / 说-01, manner, x2 / 又)
(x0 / 说-01, prep-against, x4 / 嗯)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,591 microseconds
Sentence: 我 想 ， 在 我 的 星球 上 有 一 只 老 耗子 。

Oracle Span 1:  想 => 想-01
Oracle Span 2:  我 => 我
Oracle Span 3:  我 => 我
Oracle Span 4:  星球 => 星球
Oracle Span 5:  有 => 有-03
Oracle Span 6:  老 => 老-01
Oracle Span 7:  耗子 => 耗子
Spans:
Span 1-2:  想 => 想-01
Span 0-1:  我 => 我
Span 4-5:  我 => 我
Span 6-7:  星球 => 星球
Span 8-9:  有 => 有-03
Span 11-12:  老 => 老-01
Span 12-13:  耗子 => 耗子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  星球 => 星球
Oracle Span 8-9:  有 => 有-03
Oracle Span 11-12:  老 => 老-01
Oracle Span 12-13:  耗子 => 耗子

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	在	_	P	P	_	9	prep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	plmod	_	_
9	有	_	VE	VE	_	2	ccomp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	只	_	M	M	_	13	clf	_	_
12	老	_	JJ	JJ	_	13	amod	_	_
13	耗子	_	NN	NN	_	9	dobj	_	_
14	。	_	PU	PU	_	2	punct	_	_
15	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 有-03)
(x3 / 有-03, arg0, x4 / 星球)
(x3 / 有-03, arg1, x6 / 耗子)
(x4 / 星球, poss, x5 / 我)
(x6 / 耗子, mod, x7 / 老-01)

Input(Some(Graph((想-01 :arg1 (有-03 :arg1 (耗子 :quant 1 :mod 老-01) :arg0 (星球 :poss 我)) :arg0 我),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(8,9,List(1),有,有-03,false), Span(12,13,List(2),耗子,耗子,false), Span(11,12,List(3),老,老-01,false), Span(6,7,List(4),星球,星球,false), Span(0,1,List(5),我,我,false), Span(4,5,List(6),我,我,false)),Map(2 -> 耗子, 5 -> 我, 1 -> 有-03, 4 -> 星球, 6 -> 我, 0 -> 想-01, 3 -> 老-01),Map(x2 -> 我, x5 -> 我, x7 -> 老-01, x4 -> 星球, x3 -> 有-03, x6 -> 耗子, x0 -> 想-01))),[Ljava.lang.String;@37ebc9d8,Annotation([Ljava.lang.String;@293bb8a5,[Ljava.lang.String;@2416a51,[Ljava.lang.String;@6fa590ba),Annotation([Ljava.lang.String;@6e9319f,[Ljava.lang.String;@72e34f77,[Ledu.cmu.lti.nlp.amr.Dependency;@7bf9b098),Annotation([Ljava.lang.String;@389adf1d,[Ljava.lang.String;@77307458,[Ljava.lang.String;@1fc0053e),Annotation([Ljava.lang.String;@290b1b2e,[Ljava.lang.String;@47874b25,[Ledu.cmu.lti.nlp.amr.Entity;@33617539))
AMR:
(x0 / 想-01, decade, x5 / 我)
(x0 / 想-01, location, x4 / 星球)
(x3 / 有-03, extent, x6 / 耗子)
(x3 / 有-03, snt3, x4 / 星球)
(x4 / 星球, poss, x2 / 我)
(x6 / 耗子, mod, x7 / 老-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,931 microseconds
Sentence: 夜里 ， 我 听见 它 的 声音 。

Oracle Span 1:  听见 => 听见-01
Oracle Span 2:  声音 => 声音
Oracle Span 3:  夜里 => 夜里
Oracle Span 4:  它 => 它
Oracle Span 5:  我 => 我
Spans:
Span 3-4:  听见 => 听见-01
Span 6-7:  声音 => 声音
Span 0-1:  夜里 => 夜里
Span 4-5:  它 => 它
Span 2-3:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  听见 => 听见-01
Oracle Span 6-7:  声音 => 声音
Oracle Span 0-1:  夜里 => 夜里
Oracle Span 4-5:  它 => 它
Oracle Span 2-3:  我 => 我

Dependencies:
1	夜里	_	NN	NN	_	4	nsubj	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	听见	_	VV	VV	_	0	root	_	_
5	它	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	声音	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 听见-01, arg0, x2 / 我)
(x0 / 听见-01, arg1, x3 / 声音)
(x0 / 听见-01, time, x5 / 夜里)
(x3 / 声音, poss, x4 / 它)

Input(Some(Graph((听见-01 :time 夜里 :arg1 (声音 :poss 它) :arg0 我),ArrayBuffer(Span(3,4,List(0),听见,听见-01,false), Span(0,1,List(1),夜里,夜里,false), Span(6,7,List(2),声音,声音,false), Span(4,5,List(3),它,它,false), Span(2,3,List(4),我,我,false)),Map(2 -> 声音, 1 -> 夜里, 4 -> 我, 0 -> 听见-01, 3 -> 它),Map(x2 -> 我, x5 -> 夜里, x4 -> 它, x3 -> 声音, x0 -> 听见-01))),[Ljava.lang.String;@2c177f9e,Annotation([Ljava.lang.String;@5db4c359,[Ljava.lang.String;@209775a9,[Ljava.lang.String;@18e7143f),Annotation([Ljava.lang.String;@f9b7332,[Ljava.lang.String;@74cec793,[Ledu.cmu.lti.nlp.amr.Dependency;@6fefce9e),Annotation([Ljava.lang.String;@4f8969b0,[Ljava.lang.String;@1bdf8190,[Ljava.lang.String;@192f2f27),Annotation([Ljava.lang.String;@8a589a2,[Ljava.lang.String;@c65a5ef,[Ledu.cmu.lti.nlp.amr.Entity;@6b5176f2))
AMR:
(x0 / 听见-01, snt3, x3 / 声音)
(x0 / 听见-01, time, x5 / 夜里)
(x0 / 听见-01, value, x2 / 我)
(x3 / 声音, poss, x4 / 它)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,946 microseconds
Sentence: 你 可以 审判 它 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  可以 => 可以-02
Oracle Span 3:  它 => 它
Oracle Span 4:  审判 => 审判-01
Spans:
Span 0-1:  你 => 你
Span 1-2:  可以 => 可以-02
Span 3-4:  它 => 它
Span 2-3:  审判 => 审判-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 3-4:  它 => 它
Oracle Span 2-3:  审判 => 审判-01

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	advmod	_	_
3	审判	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 审判-01)
(x2 / 审判-01, arg0, x3 / 你)
(x2 / 审判-01, arg1, x4 / 它)

Input(Some(Graph((可以-02 :arg0 (审判-01 :arg1 它 :arg0 你)),ArrayBuffer(Span(1,2,List(0),可以,可以-02,false), Span(2,3,List(1),审判,审判-01,false), Span(3,4,List(2),它,它,false), Span(0,1,List(3),你,你,false)),Map(2 -> 它, 1 -> 审判-01, 0 -> 可以-02, 3 -> 你),Map(x2 -> 审判-01, x4 -> 它, x3 -> 你, x0 -> 可以-02))),[Ljava.lang.String;@b672aa8,Annotation([Ljava.lang.String;@2fab4aff,[Ljava.lang.String;@ec0c838,[Ljava.lang.String;@6e46d9f4),Annotation([Ljava.lang.String;@5cc69cfe,[Ljava.lang.String;@29cfd92b,[Ledu.cmu.lti.nlp.amr.Dependency;@21c64522),Annotation([Ljava.lang.String;@7997b197,[Ljava.lang.String;@11dee337,[Ljava.lang.String;@460f76a6),Annotation([Ljava.lang.String;@55f3c410,[Ljava.lang.String;@11acdc30,[Ledu.cmu.lti.nlp.amr.Entity;@770d4269))
AMR:
(x0 / 可以-02, ARG4, x2 / 审判-01)
(x2 / 审判-01, mode, x3 / 你)
(x2 / 审判-01, purpose, x4 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,142 microseconds
Sentence: 不时 地 判处 它 死刑 。

Oracle Span 1:  不时 => 不时
Oracle Span 2:  判处 => 判处-01
Oracle Span 3:  它 => 它
Oracle Span 4:  死刑 => 死刑
Spans:
Span 0-1:  不时 => 不时
Span 2-3:  判处 => 判处-01
Span 3-4:  它 => 它
Span 4-5:  死刑 => 死刑

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  不时 => 不时
Oracle Span 2-3:  判处 => 判处-01
Oracle Span 3-4:  它 => 它
Oracle Span 4-5:  死刑 => 死刑

Dependencies:
1	不时	_	AD	AD	_	3	advmod	_	_
2	地	_	NN	NN	_	3	prep	_	_
3	判处	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	3	dobj	_	_
5	死刑	_	NN	NN	_	3	dobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	死刑	_	NN	NN	_	3	range	_	_

Oracle:
(x0 / 判处-01, arg1, x2 / 它)
(x0 / 判处-01, arg2, x3 / 死刑)
(x0 / 判处-01, time, x4 / 不时)

Input(Some(Graph((判处-01 :time 不时 :arg2 死刑 :arg1 它),ArrayBuffer(Span(2,3,List(0),判处,判处-01,false), Span(0,1,List(1),不时,不时,false), Span(4,5,List(2),死刑,死刑,false), Span(3,4,List(3),它,它,false)),Map(2 -> 死刑, 1 -> 不时, 0 -> 判处-01, 3 -> 它),Map(x2 -> 它, x4 -> 不时, x3 -> 死刑, x0 -> 判处-01))),[Ljava.lang.String;@4a8ab068,Annotation([Ljava.lang.String;@1922e6d,[Ljava.lang.String;@76a82f33,[Ljava.lang.String;@6bab2585),Annotation([Ljava.lang.String;@74bdc168,[Ljava.lang.String;@644c78d4,[Ledu.cmu.lti.nlp.amr.Dependency;@532a02d9),Annotation([Ljava.lang.String;@611f8234,[Ljava.lang.String;@7bb3a9fe,[Ljava.lang.String;@7cbee484),Annotation([Ljava.lang.String;@7f811d00,[Ljava.lang.String;@62923ee6,[Ledu.cmu.lti.nlp.amr.Entity;@4089713))
AMR:
(x0 / 判处-01, op, x3 / 死刑)
(x0 / 判处-01, subset, x2 / 它)
(x0 / 判处-01, time, x4 / 不时)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,817 microseconds
Sentence: 因此 它 的 生命 取决 于 你 的 判决 。

Oracle Span 1:  你 => 你
Oracle Span 2:  判决 => 判决-01
Oracle Span 3:  取决 => 取决-01
Oracle Span 4:  它 => 它
Oracle Span 5:  生命 => 生命
Spans:
Span 6-7:  你 => 你
Span 8-9:  判决 => 判决-01
Span 4-5:  取决 => 取决-01
Span 1-2:  它 => 它
Span 3-4:  生命 => 生命

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 8-9:  判决 => 判决-01
Oracle Span 4-5:  取决 => 取决-01
Oracle Span 1-2:  它 => 它
Oracle Span 3-4:  生命 => 生命

Dependencies:
1	因此	_	AD	AD	_	5	advmod	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	生命	_	NN	NN	_	5	nsubj	_	_
5	取决	_	VV	VV	_	0	root	_	_
6	于	_	P	P	_	5	prep	_	_
7	你	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	判决	_	NN	NN	_	6	pobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 取决-01, arg0, x3 / 判决-01)
(x2 / 取决-01, arg1, x7 / 生命)
(x3 / 判决-01, poss, x4 / 你)
(x7 / 生命, poss, x8 / 它)

Input(Some(Graph((causation :arg2 (取决-01 :arg1 (生命 :poss 它) :arg0 (判决-01 :arg1 它 :arg0 x4 :poss 你))),ArrayBuffer(Span(4,5,List(0),取决,取决-01,false), Span(3,4,List(1),生命,生命,false), Span(1,2,List(2),它,它,false), Span(8,9,List(3),判决,判决-01,false), Span(6,7,List(4),你,你,false)),Map(2 -> 它, 1 -> 生命, 4 -> 你, 0 -> 取决-01, 3 -> 判决-01),Map(x2 -> 取决-01, x8 -> 它, x7 -> 生命, x4 -> 你, x3 -> 判决-01))),[Ljava.lang.String;@f19c9d2,Annotation([Ljava.lang.String;@7807ac2c,[Ljava.lang.String;@b91d8c4,[Ljava.lang.String;@4b6166aa),Annotation([Ljava.lang.String;@a77614d,[Ljava.lang.String;@4fd4cae3,[Ledu.cmu.lti.nlp.amr.Dependency;@4a067c25),Annotation([Ljava.lang.String;@a1217f9,[Ljava.lang.String;@3bde62ff,[Ljava.lang.String;@523424b5),Annotation([Ljava.lang.String;@2baa8d82,[Ljava.lang.String;@319dead1,[Ledu.cmu.lti.nlp.amr.Entity;@791cbf87))
AMR:
(x2 / 取决-01, ARG1, x3 / 判决-01)
(x3 / 判决-01, poss, x4 / 你)
(x7 / 生命, poss, x8 / 它)
(x8 / 它, ARG3, x2 / 取决-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 10,784 microseconds
Sentence: 可是 ， 你 要 有 节制 地 使用 这 只 耗子 ， 每 次 判刑 后 都 要 赦免 它 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  使用 => 使用-01
Oracle Span 3:  判刑 => 判刑-01
Oracle Span 4:  后 => 后
Oracle Span 5:  有 => 有-04
Oracle Span 6:  耗子 => 耗子
Oracle Span 7:  节制 => 节制-01
Oracle Span 8:  要 => 要-03
Oracle Span 9:  要 => 要-03
Oracle Span 10:  赦免 => 赦免-01
Oracle Span 11:  这 => 这
Oracle Span 12:  都 => 都
Spans:
Span 2-3:  你 => 你
Span 7-8:  使用 => 使用-01
Span 14-15:  判刑 => 判刑-01
Span 15-16:  后 => 后
Span 4-5:  有 => 有-04
Span 10-11:  耗子 => 耗子
Span 5-6:  节制 => 节制-01
Span 3-4:  要 => 要-03
Span 17-18:  要 => 要-03
Span 18-19:  赦免 => 赦免-01
Span 8-9:  这 => 这
Span 16-17:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 7-8:  使用 => 使用-01
Oracle Span 14-15:  判刑 => 判刑-01
Oracle Span 15-16:  后 => 后
Oracle Span 4-5:  有 => 有-04
Oracle Span 10-11:  耗子 => 耗子
Oracle Span 5-6:  节制 => 节制-01
Oracle Span 3-4:  要 => 要-03
Oracle Span 17-18:  要 => 要-03
Oracle Span 18-19:  赦免 => 赦免-01
Oracle Span 8-9:  这 => 这
Oracle Span 16-17:  都 => 都

Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	要	_	VV	VV	_	8	mmod	_	_
5	有	_	VE	VE	_	8	dvpmod	_	_
6	节制	_	NN	NN	_	5	dobj	_	_
7	地	_	DEV	DEV	_	5	dvpm	_	_
8	使用	_	VV	VV	_	0	root	_	_
9	这	_	DT	DT	_	11	det	_	_
10	只	_	M	M	_	9	clf	_	_
11	耗子	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	每	_	DT	DT	_	15	det	_	_
14	次	_	M	M	_	13	clf	_	_
15	判刑	_	NN	NN	_	16	lobj	_	_
16	后	_	LC	LC	_	19	loc	_	_
17	都	_	AD	AD	_	19	advmod	_	_
18	要	_	VV	VV	_	19	mmod	_	_
19	赦免	_	VV	VV	_	8	conj	_	_
20	它	_	PN	PN	_	19	dobj	_	_
21	,	_	PU	PU	_	19	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 有-04)
(x12 / 有-04, arg0, x13 / 节制-01)
(x13 / 节制-01, arg0, x14 / 你)
(x13 / 节制-01, arg1, x15 / 使用-01)
(x15 / 使用-01, arg1, x17 / 耗子)
(x17 / 耗子, mod, x18 / 这)
(x40 / 要-03, arg0, x41 / 赦免-01)
(x40 / 要-03, manner, x44 / 都)
(x41 / 赦免-01, time, x45 / 后)
(x45 / 后, arg0, x46 / 判刑-01)

Input(Some(Graph((contrast :arg2 (and :op (要-03 :arg0 (有-04 :arg0 (节制-01 :arg1 (使用-01 :arg1 (耗子 :mod 这) :arg0 x14) :arg0 你))) :op (要-03 :manner 都 :arg0 (赦免-01 :time (后 :arg0 (判刑-01 :frequency 每次)) :arg1 x17 :arg0 x14)))),ArrayBuffer(Span(3,4,List(0),要,要-03,false), Span(4,5,List(1),有,有-04,false), Span(5,6,List(2),节制,节制-01,false), Span(7,8,List(3),使用,使用-01,false), Span(10,11,List(4),耗子,耗子,false), Span(8,9,List(5),这,这,false), Span(2,3,List(6),你,你,false), Span(17,18,List(7),要,要-03,false), Span(16,17,List(8),都,都,false), Span(18,19,List(9),赦免,赦免-01,false), Span(15,16,List(10),后,后,false), Span(14,15,List(11),判刑,判刑-01,false)),Map(2 -> 节制-01, 5 -> 这, 8 -> 都, 7 -> 要-03, 1 -> 有-04, 4 -> 耗子, 11 -> 判刑-01, 6 -> 你, 9 -> 赦免-01, 0 -> 要-03, 10 -> 后, 3 -> 使用-01),Map(x46 -> 判刑-01, x40 -> 要-03, x13 -> 节制-01, x45 -> 后, x12 -> 有-04, x15 -> 使用-01, x18 -> 这, x41 -> 赦免-01, x44 -> 都, x11 -> 要-03, x14 -> 你, x17 -> 耗子))),[Ljava.lang.String;@a7e2d9d,Annotation([Ljava.lang.String;@754777cd,[Ljava.lang.String;@2b52c0d6,[Ljava.lang.String;@372ea2bc),Annotation([Ljava.lang.String;@4cc76301,[Ljava.lang.String;@2f08c4b,[Ledu.cmu.lti.nlp.amr.Dependency;@3f19b8b3),Annotation([Ljava.lang.String;@7de0c6ae,[Ljava.lang.String;@a486d78,[Ljava.lang.String;@cdc3aae),Annotation([Ljava.lang.String;@7ef2d7a6,[Ljava.lang.String;@5dcbb60,[Ledu.cmu.lti.nlp.amr.Entity;@4c36250e))
AMR:
(x11 / 要-03, ARG0, x12 / 有-04)
(x12 / 有-04, year, x13 / 节制-01)
(x13 / 节制-01, ARG0, x15 / 使用-01)
(x13 / 节制-01, time, x14 / 你)
(x15 / 使用-01, snt3, x17 / 耗子)
(x15 / 使用-01, unit, x41 / 赦免-01)
(x17 / 耗子, mod, x18 / 这)
(x40 / 要-03, manner, x44 / 都)
(x40 / 要-03, op, x41 / 赦免-01)
(x41 / 赦免-01, time, x45 / 后)
(x45 / 后, ARG4, x46 / 判刑-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.2.0
Decoded in 44,013 microseconds
Sentence: 因为 只有 这 一 只 耗子 。 ”

Oracle Span 1:  只有 => 只有-01
Oracle Span 2:  耗子 => 耗子
Oracle Span 3:  这 => 这
Spans:
Span 1-2:  只有 => 只有-01
Span 5-6:  耗子 => 耗子
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  只有 => 只有-01
Oracle Span 5-6:  耗子 => 耗子
Oracle Span 2-3:  这 => 这

Dependencies:
1	因为	_	CS	CS	_	2	advmod	_	_
2	只有	_	VV	VV	_	0	root	_	_
3	这	_	DT	DT	_	6	det	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	只	_	M	M	_	3	dep	_	_
6	耗子	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 耗子, mod, x12 / 这)
(x9 / 只有-01, arg0, x10 / 耗子)

Input(Some(Graph((say :arg1 (cause-01 :arg0 (只有-01 :arg0 (耗子 :mod 这 :quant 1)))),ArrayBuffer(Span(1,2,List(0),只有,只有-01,false), Span(5,6,List(1),耗子,耗子,false), Span(2,3,List(2),这,这,false)),Map(2 -> 这, 1 -> 耗子, 0 -> 只有-01),Map(x10 -> 耗子, x12 -> 这, x9 -> 只有-01))),[Ljava.lang.String;@21526f6c,Annotation([Ljava.lang.String;@49f5c307,[Ljava.lang.String;@299266e2,[Ljava.lang.String;@5471388b),Annotation([Ljava.lang.String;@66ea1466,[Ljava.lang.String;@1601e47,[Ledu.cmu.lti.nlp.amr.Dependency;@3bffddff),Annotation([Ljava.lang.String;@66971f6b,[Ljava.lang.String;@50687efb,[Ljava.lang.String;@517bd097),Annotation([Ljava.lang.String;@142eef62,[Ljava.lang.String;@4a9cc6cb,[Ledu.cmu.lti.nlp.amr.Entity;@5990e6c5))
AMR:
(x10 / 耗子, mod, x12 / 这)
(x9 / 只有-01, prep-as, x10 / 耗子)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
Decoded in 4,570 microseconds
Sentence: “ 可是 我 不 愿 判 死刑 ， ” 小 王子 回答 道 。

Oracle Span 1:  判 => 判-01
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  愿 => 愿-01
Oracle Span 5:  我 => 我
Oracle Span 6:  死刑 => 死刑
Oracle Span 7:  王子 => 王子
Spans:
Span 5-6:  判 => 判-01
Span 11-12:  回答 => 回答-01
Span 9-10:  小 => 小-01
Span 4-5:  愿 => 愿-01
Span 2-3:  我 => 我
Span 6-7:  死刑 => 死刑
Span 10-11:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  判 => 判-01
Oracle Span 11-12:  回答 => 回答-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 4-5:  愿 => 愿-01
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  死刑 => 死刑
Oracle Span 10-11:  王子 => 王子

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	可是	_	AD	AD	_	6	advmod	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	愿	_	VV	VV	_	6	mmod	_	_
6	判	_	VV	VV	_	0	root	_	_
7	死刑	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	回答	_	VV	VV	_	6	conj	_	_
13	道	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 愿-01, arg0, x7 / 我)
(x5 / 愿-01, arg1, x8 / 判-01)
(x8 / 判-01, arg3, x10 / 死刑)

Input(Some(Graph((回答-01 :arg2 (contrast :arg2 (愿-01 :arg1 (判-01 :arg3 死刑) :arg0 我 :polarity -)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),回答,回答-01,false), Span(4,5,List(1),愿,愿-01,false), Span(5,6,List(2),判,判-01,false), Span(6,7,List(3),死刑,死刑,false), Span(2,3,List(4),我,我,false), Span(10,11,List(5),王子,王子,false), Span(9,10,List(6),小,小-01,false)),Map(2 -> 判-01, 5 -> 王子, 1 -> 愿-01, 4 -> 我, 6 -> 小-01, 0 -> 回答-01, 3 -> 死刑),Map(x2 -> 王子, x10 -> 死刑, x5 -> 愿-01, x8 -> 判-01, x7 -> 我, x3 -> 小-01, x0 -> 回答-01))),[Ljava.lang.String;@56e07a08,Annotation([Ljava.lang.String;@35d6ca49,[Ljava.lang.String;@1950e8a6,[Ljava.lang.String;@47289387),Annotation([Ljava.lang.String;@12cd9150,[Ljava.lang.String;@114a85c2,[Ledu.cmu.lti.nlp.amr.Dependency;@f415a95),Annotation([Ljava.lang.String;@cf65451,[Ljava.lang.String;@724f138e,[Ljava.lang.String;@37eeec90),Annotation([Ljava.lang.String;@32fe9d0a,[Ljava.lang.String;@c9413d8,[Ledu.cmu.lti.nlp.amr.Entity;@64da2a7))
AMR:
(x0 / 回答-01, ARG1, x2 / 王子)
(x0 / 回答-01, location, x10 / 死刑)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 愿-01, example, x7 / 我)
(x5 / 愿-01, purpose, x8 / 判-01)
(x8 / 判-01, prep-through, x10 / 死刑)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,391 microseconds
Sentence: 我 想 我 还是 应该 走 。 ”

Oracle Span 1:  应该 => 应该-02
Oracle Span 2:  想 => 想-01
Oracle Span 3:  我 => 我
Oracle Span 4:  走 => 走-07
Oracle Span 5:  还是 => 还是
Spans:
Span 4-5:  应该 => 应该-02
Span 1-2:  想 => 想-01
Span 0-1:  我 => 我
Span 5-6:  走 => 走-07
Span 3-4:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  应该 => 应该-02
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  走 => 走-07
Oracle Span 3-4:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	还是	_	AD	AD	_	6	advmod	_	_
5	应该	_	VV	VV	_	6	dep	_	_
6	走	_	VV	VV	_	2	ccomp	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 应该-02, arg1, x14 / 走-07)
(x11 / 应该-02, manner, x12 / 还是)
(x9 / 想-01, arg0, x10 / 我)
(x9 / 想-01, arg1, x11 / 应该-02)

Input(Some(Graph((say :arg1 (想-01 :arg1 (应该-02 :arg1 (走-07 :arg0 x10) :arg0 x10 :manner 还是) :arg0 我)),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(4,5,List(1),应该,应该-02,false), Span(5,6,List(2),走,走-07,false), Span(3,4,List(3),还是,还是,false), Span(0,1,List(4),我,我,false)),Map(2 -> 走-07, 1 -> 应该-02, 4 -> 我, 0 -> 想-01, 3 -> 还是),Map(x10 -> 我, x12 -> 还是, x11 -> 应该-02, x14 -> 走-07, x9 -> 想-01))),[Ljava.lang.String;@46074492,Annotation([Ljava.lang.String;@d78795,[Ljava.lang.String;@2c715e84,[Ljava.lang.String;@47428937),Annotation([Ljava.lang.String;@3b9d6699,[Ljava.lang.String;@7caa550,[Ledu.cmu.lti.nlp.amr.Dependency;@21694e53),Annotation([Ljava.lang.String;@72b16078,[Ljava.lang.String;@22c86919,[Ljava.lang.String;@70fab835),Annotation([Ljava.lang.String;@1b0a7baf,[Ljava.lang.String;@62417a16,[Ledu.cmu.lti.nlp.amr.Entity;@32057e6))
AMR:
(x11 / 应该-02, manner, x12 / 还是)
(x11 / 应该-02, manner, x9 / 想-01)
(x11 / 应该-02, snt11, x14 / 走-07)
(x9 / 想-01, decade, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,219 microseconds
Sentence: “ 不 行 。 ” 国王 说 。

Oracle Span 1:  国王 => 国王
Oracle Span 2:  行 => 行-04
Oracle Span 3:  说 => 说-01
Spans:
Span 5-6:  国王 => 国王
Span 2-3:  行 => 行-04
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  国王 => 国王
Oracle Span 2-3:  行 => 行-04
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	行	_	VV	VV	_	6	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	国王	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x4 / 行-04)

Input(Some(Graph((说-01 :arg1 (行-04 :polarity -) :arg0 国王),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(2,3,List(1),行,行-04,false), Span(5,6,List(2),国王,国王,false)),Map(2 -> 国王, 1 -> 行-04, 0 -> 说-01),Map(x2 -> 国王, x4 -> 行-04, x0 -> 说-01))),[Ljava.lang.String;@26be6ca7,Annotation([Ljava.lang.String;@6ea1bcdc,[Ljava.lang.String;@759fad4,[Ljava.lang.String;@64712be),Annotation([Ljava.lang.String;@53499d85,[Ljava.lang.String;@30ed9c6c,[Ledu.cmu.lti.nlp.amr.Dependency;@782a4fff),Annotation([Ljava.lang.String;@46c670a6,[Ljava.lang.String;@59fc684e,[Ljava.lang.String;@5ae81e1),Annotation([Ljava.lang.String;@2fd1731c,[Ljava.lang.String;@5ae76500,[Ledu.cmu.lti.nlp.amr.Entity;@6063d80a))
AMR:
(x0 / 说-01, direction, x2 / 国王)
(x4 / 行-04, location, x2 / 国王)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,524 microseconds
Sentence: 但是 小 王子 ， 准备 完毕 之后 ， 不 想 使 老 君主 难过 ，

Oracle Span 1:  之后 => 之后-01
Oracle Span 2:  准备 => 准备
Oracle Span 3:  君主 => 君主
Oracle Span 4:  完毕 => 完毕-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  想 => 想-02
Oracle Span 7:  王子 => 王子
Oracle Span 8:  老 => 老
Oracle Span 9:  难过 => 难过-01
Spans:
Span 6-7:  之后 => 之后-01
Span 4-5:  准备 => 准备
Span 12-13:  君主 => 君主
Span 5-6:  完毕 => 完毕-01
Span 1-2:  小 => 小-01
Span 9-10:  想 => 想-02
Span 2-3:  王子 => 王子
Span 11-12:  老 => 老
Span 13-14:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  之后 => 之后-01
Oracle Span 4-5:  准备 => 准备
Oracle Span 12-13:  君主 => 君主
Oracle Span 5-6:  完毕 => 完毕-01
Oracle Span 1-2:  小 => 小-01
Oracle Span 9-10:  想 => 想-02
Oracle Span 2-3:  王子 => 王子
Oracle Span 11-12:  老 => 老
Oracle Span 13-14:  难过 => 难过-01

Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	,	_	PU	PU	_	5	punct	_	_
5	准备	_	VV	VV	_	0	root	_	_
6	完毕	_	VV	VV	_	5	ccomp	_	_
7	之后	_	AD	AD	_	10	advmod	_	_
8	,	_	PU	PU	_	10	punct	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	想	_	VV	VV	_	5	conj	_	_
11	使	_	VV	VV	_	10	ccomp	_	_
12	老	_	JJ	JJ	_	13	amod	_	_
13	君主	_	NN	NN	_	11	dobj	_	_
14	难过	_	VV	VV	_	11	dep	_	_
15	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x12 / 之后-01, op, x19 / 完毕-01)
(x16 / 难过-01, arg0, x17 / 君主)
(x17 / 君主, mod, x18 / 老)
(x19 / 完毕-01, arg0, x20 / 准备)
(x3 / 想-02, arg0, x6 / 王子)
(x3 / 想-02, arg1, x16 / 难过-01)
(x3 / 想-02, time, x12 / 之后-01)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph((contrast :arg2 (想-02 :arg1 (难过-01 :arg0 (君主 :mod 老)) :time (之后-01 :op (完毕-01 :arg0 准备)) :arg0 (王子 :mod 小-01) :polarity -)),ArrayBuffer(Span(9,10,List(0),想,想-02,false), Span(13,14,List(1),难过,难过-01,false), Span(12,13,List(2),君主,君主,false), Span(11,12,List(3),老,老,false), Span(6,7,List(4),之后,之后-01,false), Span(5,6,List(5),完毕,完毕-01,false), Span(4,5,List(6),准备,准备,false), Span(2,3,List(7),王子,王子,false), Span(1,2,List(8),小,小-01,false)),Map(2 -> 君主, 5 -> 完毕-01, 8 -> 小-01, 7 -> 王子, 1 -> 难过-01, 4 -> 之后-01, 6 -> 准备, 0 -> 想-02, 3 -> 老),Map(x16 -> 难过-01, x19 -> 完毕-01, x12 -> 之后-01, x7 -> 小-01, x18 -> 老, x3 -> 想-02, x6 -> 王子, x20 -> 准备, x17 -> 君主))),[Ljava.lang.String;@1133ec6e,Annotation([Ljava.lang.String;@355e34c7,[Ljava.lang.String;@54709809,[Ljava.lang.String;@2a2da905),Annotation([Ljava.lang.String;@24f360b2,[Ljava.lang.String;@60cf80e7,[Ledu.cmu.lti.nlp.amr.Dependency;@302fec27),Annotation([Ljava.lang.String;@770d0ea6,[Ljava.lang.String;@48c40605,[Ljava.lang.String;@54107f42),Annotation([Ljava.lang.String;@1b11ef33,[Ljava.lang.String;@476aac9,[Ledu.cmu.lti.nlp.amr.Entity;@6cea706c))
AMR:
(x12 / 之后-01, op, x19 / 完毕-01)
(x16 / 难过-01, manner, x17 / 君主)
(x17 / 君主, mod, x18 / 老)
(x19 / 完毕-01, ARG0, x20 / 准备)
(x3 / 想-02, ARG5, x16 / 难过-01)
(x3 / 想-02, location, x6 / 王子)
(x3 / 想-02, time, x12 / 之后-01)
(x6 / 王子, mod, x7 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.3.0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 24,135 microseconds
Sentence: 说道 ： “ 如果 国王 陛下 想要 不折不扣 地 得到 服从 ， 你 可以 给 我 下 一 个 合理 的 命令 。

Oracle Span 1:  下 => 下-07
Oracle Span 2:  不折不扣 => 不折不扣
Oracle Span 3:  你 => 你
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  合理 => 合理-01
Oracle Span 6:  命令 => 命令
Oracle Span 7:  国王 => 国王
Oracle Span 8:  得到 => 得到-01
Oracle Span 9:  想要 => 想要-01
Oracle Span 10:  我 => 我
Oracle Span 11:  服从 => 服从-01
Oracle Span 12:  说道 => 说道-01
Spans:
Span 16-17:  下 => 下-07
Span 7-8:  不折不扣 => 不折不扣
Span 12-13:  你 => 你
Span 13-14:  可以 => 可以-01
Span 19-20:  合理 => 合理-01
Span 21-22:  命令 => 命令
Span 4-5:  国王 => 国王
Span 9-10:  得到 => 得到-01
Span 6-7:  想要 => 想要-01
Span 15-16:  我 => 我
Span 10-11:  服从 => 服从-01
Span 0-1:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  下 => 下-07
Oracle Span 7-8:  不折不扣 => 不折不扣
Oracle Span 12-13:  你 => 你
Oracle Span 13-14:  可以 => 可以-01
Oracle Span 19-20:  合理 => 合理-01
Oracle Span 21-22:  命令 => 命令
Oracle Span 4-5:  国王 => 国王
Oracle Span 9-10:  得到 => 得到-01
Oracle Span 6-7:  想要 => 想要-01
Oracle Span 15-16:  我 => 我
Oracle Span 10-11:  服从 => 服从-01
Oracle Span 0-1:  说道 => 说道-01

Dependencies:
1	说道	_	VV	VV	_	0	root	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	1	punct	_	_
4	如果	_	CS	CS	_	10	advmod	_	_
5	国王	_	NN	NN	_	7	nn	_	_
6	陛下	_	NN	NN	_	7	nn	_	_
7	想要	_	NN	NN	_	10	nsubj	_	_
8	不折不扣	_	AD	AD	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	得到	_	VV	VV	_	17	pccomp	_	_
11	服从	_	VV	VV	_	10	comod	_	_
12	,	_	PU	PU	_	17	punct	_	_
13	你	_	PN	PN	_	17	nsubj	_	_
14	可以	_	VV	VV	_	17	mmod	_	_
15	给	_	P	P	_	17	prep	_	_
16	我	_	PN	PN	_	15	pobj	_	_
17	下	_	VV	VV	_	1	ccomp	_	_
18	一	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	22	clf	_	_
20	合理	_	VA	VA	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	命令	_	NN	NN	_	17	dobj	_	_
23	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x20 / 下-07, arg0, x21 / 你)
(x20 / 下-07, arg1, x22 / 命令)
(x20 / 下-07, beneficiary, x25 / 我)
(x22 / 命令, mod, x23 / 合理-01)
(x3 / 想要-01, arg0, x4 / 国王)
(x3 / 想要-01, arg1, x5 / 得到-01)
(x5 / 得到-01, arg1, x8 / 服从-01)
(x5 / 得到-01, manner, x6 / 不折不扣)
(x9 / 可以-01, arg0, x20 / 下-07)

Input(Some(Graph((说道-01 :arg1 (condition :arg1 (想要-01 :arg1 (得到-01 :arg1 服从-01 :arg0 x4 :manner 不折不扣) :arg0 国王) :arg2 (可以-01 :arg0 (下-07 :beneficiary 我 :arg1 (命令 :quant 1 :mod 合理-01) :arg0 你)))),ArrayBuffer(Span(0,1,List(0),说道,说道-01,false), Span(6,7,List(1),想要,想要-01,false), Span(9,10,List(2),得到,得到-01,false), Span(10,11,List(3),服从,服从-01,false), Span(7,8,List(4),不折不扣,不折不扣,false), Span(4,5,List(5),国王,国王,false), Span(13,14,List(6),可以,可以-01,false), Span(16,17,List(7),下,下-07,false), Span(15,16,List(8),我,我,false), Span(21,22,List(9),命令,命令,false), Span(19,20,List(10),合理,合理-01,false), Span(12,13,List(11),你,你,false)),Map(2 -> 得到-01, 5 -> 国王, 8 -> 我, 7 -> 下-07, 1 -> 想要-01, 4 -> 不折不扣, 11 -> 你, 6 -> 可以-01, 9 -> 命令, 0 -> 说道-01, 10 -> 合理-01, 3 -> 服从-01),Map(x22 -> 命令, x25 -> 我, x5 -> 得到-01, x8 -> 服从-01, x21 -> 你, x4 -> 国王, x23 -> 合理-01, x3 -> 想要-01, x6 -> 不折不扣, x20 -> 下-07, x9 -> 可以-01, x0 -> 说道-01))),[Ljava.lang.String;@3bd7f8dc,Annotation([Ljava.lang.String;@2f2bf0e2,[Ljava.lang.String;@1eba372c,[Ljava.lang.String;@21ec5d87),Annotation([Ljava.lang.String;@25f9407e,[Ljava.lang.String;@552518c3,[Ledu.cmu.lti.nlp.amr.Dependency;@1a69561c),Annotation([Ljava.lang.String;@59aa20b3,[Ljava.lang.String;@363f6148,[Ljava.lang.String;@4b21844c),Annotation([Ljava.lang.String;@1b28f282,[Ljava.lang.String;@138fe6ec,[Ledu.cmu.lti.nlp.amr.Entity;@5e77f0f4))
AMR:
(x0 / 说道-01, source, x4 / 国王)
(x20 / 下-07, beneficiary, x21 / 你)
(x20 / 下-07, beneficiary, x23 / 合理-01)
(x20 / 下-07, beneficiary, x25 / 我)
(x20 / 下-07, beneficiary, x5 / 得到-01)
(x20 / 下-07, beneficiary, x9 / 可以-01)
(x22 / 命令, mod, x23 / 合理-01)
(x3 / 想要-01, beneficiary, x4 / 国王)
(x3 / 想要-01, manner, x6 / 不折不扣)
(x5 / 得到-01, manner, x6 / 不折不扣)
(x8 / 服从-01, beneficiary, x5 / 得到-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 39,843 microseconds
Sentence: 比如 说 ， 你 可以 命令 我 ， 一 分钟 之内 必须 离开 。

Oracle Span 1:  你 => 你
Oracle Span 2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3:  可以 => 可以-01
Oracle Span 4:  命令 => 命令-01
Oracle Span 5:  必须 => 必须-02
Oracle Span 6:  我 => 我
Oracle Span 7:  比如 => 比如-01
Oracle Span 8:  离开 => 离开-01
Spans:
Span 3-4:  你 => 你
Span 9-10:  分钟 => (temporal-quantity :unit 分钟)
Span 4-5:  可以 => 可以-01
Span 5-6:  命令 => 命令-01
Span 11-12:  必须 => 必须-02
Span 6-7:  我 => 我
Span 0-1:  比如 => 比如-01
Span 12-13:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 9-10:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 5-6:  命令 => 命令-01
Oracle Span 11-12:  必须 => 必须-02
Oracle Span 6-7:  我 => 我
Oracle Span 0-1:  比如 => 比如-01
Oracle Span 12-13:  离开 => 离开-01

Dependencies:
1	比如	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	可以	_	VV	VV	_	6	mmod	_	_
6	命令	_	VV	VV	_	2	ccomp	_	_
7	我	_	PN	PN	_	13	nsubj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	分钟	_	M	M	_	11	lobj	_	_
11	之内	_	LC	LC	_	13	loc	_	_
12	必须	_	VV	VV	_	13	dep	_	_
13	离开	_	VV	VV	_	6	ccomp	_	_
14	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x20 / 比如-01, arg0, x22 / 可以-01)
(x22 / 可以-01, arg0, x23 / 命令-01)
(x23 / 命令-01, arg0, x24 / 你)
(x23 / 命令-01, arg1, x25 / 我)
(x23 / 命令-01, arg2, x26 / 必须-02)
(x26 / 必须-02, arg0, x27 / 离开-01)
(x31 / temporal-quantity, unit, x33 / 分钟)

Input(Some(Graph((比如-01 :arg0 (可以-01 :arg0 (命令-01 :arg2 (必须-02 :arg0 (离开-01 :time (内 :time (temporal-quantity :unit 分钟 :quant 1)) :arg0 x25)) :arg1 我 :arg0 你))),ArrayBuffer(Span(0,1,List(0),比如,比如-01,false), Span(4,5,List(1),可以,可以-01,false), Span(5,6,List(2),命令,命令-01,false), Span(11,12,List(3),必须,必须-02,false), Span(12,13,List(4),离开,离开-01,false), Span(9,10,List(5, 6),分钟,(temporal-quantity :unit 分钟),false), Span(6,7,List(7),我,我,false), Span(3,4,List(8),你,你,false)),Map(2 -> 命令-01, 5 -> temporal-quantity, 8 -> 你, 7 -> 我, 1 -> 可以-01, 4 -> 离开-01, 6 -> 分钟, 0 -> 比如-01, 3 -> 必须-02),Map(x22 -> 可以-01, x25 -> 我, x31 -> temporal-quantity, x33 -> 分钟, x27 -> 离开-01, x24 -> 你, x23 -> 命令-01, x26 -> 必须-02, x20 -> 比如-01))),[Ljava.lang.String;@19b30c92,Annotation([Ljava.lang.String;@455351c4,[Ljava.lang.String;@29876704,[Ljava.lang.String;@4816c290),Annotation([Ljava.lang.String;@4940809c,[Ljava.lang.String;@16423501,[Ledu.cmu.lti.nlp.amr.Dependency;@4efcf8a),Annotation([Ljava.lang.String;@7a138fc5,[Ljava.lang.String;@379ab47b,[Ljava.lang.String;@307765b4),Annotation([Ljava.lang.String;@4a9e6faf,[Ljava.lang.String;@2c95ac9e,[Ledu.cmu.lti.nlp.amr.Entity;@4e4efc1b))
AMR:
(x20 / 比如-01, time, x22 / 可以-01)
(x22 / 可以-01, op, x23 / 命令-01)
(x23 / 命令-01, direction, x25 / 我)
(x23 / 命令-01, direction, x26 / 必须-02)
(x23 / 命令-01, prep-on, x24 / 你)
(x26 / 必须-02, compared-to, x27 / 离开-01)
(x27 / 离开-01, ARG3, x31 / temporal-quantity)
(x31 / temporal-quantity, unit, x33 / 分钟)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 23,287 microseconds
Sentence: 我 认为 这个 条件 是 成熟 的 … ”

Oracle Span 1:  成熟 => 成熟-01
Oracle Span 2:  条件 => 条件
Oracle Span 3:  认为 => 认为-02
Spans:
Span 5-6:  成熟 => 成熟-01
Span 3-4:  条件 => 条件
Span 1-2:  认为 => 认为-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  成熟 => 成熟-01
Oracle Span 3-4:  条件 => 条件
Oracle Span 1-2:  认为 => 认为-02

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	认为	_	VV	VV	_	0	root	_	_
3	这个	_	NR	NR	_	5	dep	_	_
4	条件	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	2	ccomp	_	_
6	成熟	_	VA	VA	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	…	_	NN	NN	_	5	attr	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 认为-02, arg0, x9 / 条件)
(x8 / 认为-02, arg1, x12 / 成熟-01)

Input(Some(Graph((say :arg1 (认为-02 :arg1 (成熟-01 :arg0 x9) :arg0 (条件 :mod 这))),ArrayBuffer(Span(1,2,List(0),认为,认为-02,false), Span(5,6,List(1),成熟,成熟-01,false), Span(3,4,List(2),条件,条件,false)),Map(2 -> 条件, 1 -> 成熟-01, 0 -> 认为-02),Map(x8 -> 认为-02, x12 -> 成熟-01, x9 -> 条件))),[Ljava.lang.String;@459f7aa3,Annotation([Ljava.lang.String;@7cc586a8,[Ljava.lang.String;@7db534f2,[Ljava.lang.String;@44a2b17b),Annotation([Ljava.lang.String;@7a56812e,[Ljava.lang.String;@2a76b80a,[Ledu.cmu.lti.nlp.amr.Dependency;@7eb01b12),Annotation([Ljava.lang.String;@2f4854d6,[Ljava.lang.String;@61d9efe0,[Ljava.lang.String;@7e70bd39),Annotation([Ljava.lang.String;@e6516e,[Ljava.lang.String;@6de54b40,[Ledu.cmu.lti.nlp.amr.Entity;@43ed0ff3))
AMR:
(x8 / 认为-02, mode, x12 / 成熟-01)
(x8 / 认为-02, prep-along-with, x9 / 条件)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,814 microseconds
Sentence: 国王 什么 也 没有 回答 。 起初 ， 小 王子 有些 犹疑不决 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  国王 => 国王
Oracle Span 4:  小 => 小-01
Oracle Span 5:  有些 => 有些
Oracle Span 6:  犹疑不决 => 犹疑不决
Oracle Span 7:  王子 => 王子
Oracle Span 8:  起初 => 起初
Spans:
Span 2-3:  也 => 也
Span 4-5:  回答 => 回答-01
Span 0-1:  国王 => 国王
Span 8-9:  小 => 小-01
Span 10-11:  有些 => 有些
Span 11-12:  犹疑不决 => 犹疑不决
Span 9-10:  王子 => 王子
Span 6-7:  起初 => 起初

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 8-9:  小 => 小-01
Oracle Span 10-11:  有些 => 有些
Oracle Span 11-12:  犹疑不决 => 犹疑不决
Oracle Span 9-10:  王子 => 王子
Oracle Span 6-7:  起初 => 起初

Dependencies:
1	国王	_	NN	NN	_	5	nsubj	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	起初	_	NN	NN	_	12	nsubj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	有些	_	AD	AD	_	12	advmod	_	_
12	犹疑不决	_	VA	VA	_	5	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x4 / 国王)
(x2 / 回答-01, manner, x6 / 也)
(x7 / 犹疑不决, arg0, x9 / 王子)
(x7 / 犹疑不决, degree, x8 / 有些)
(x7 / 犹疑不决, time, x11 / 起初)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (回答-01 :manner 也 :arg2 anything :arg0 国王 :polarity -) :snt2 (犹疑不决 :time 起初 :arg0 (王子 :mod 小-01) :degree 有些)),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(2,3,List(1),也,也,false), Span(0,1,List(2),国王,国王,false), Span(11,12,List(3),犹疑不决,犹疑不决,false), Span(6,7,List(4),起初,起初,false), Span(9,10,List(5),王子,王子,false), Span(8,9,List(6),小,小-01,false), Span(10,11,List(7),有些,有些,false)),Map(2 -> 国王, 5 -> 王子, 7 -> 有些, 1 -> 也, 4 -> 起初, 6 -> 小-01, 0 -> 回答-01, 3 -> 犹疑不决),Map(x10 -> 小-01, x2 -> 回答-01, x8 -> 有些, x7 -> 犹疑不决, x4 -> 国王, x11 -> 起初, x6 -> 也, x9 -> 王子))),[Ljava.lang.String;@388ffbc2,Annotation([Ljava.lang.String;@a50b09c,[Ljava.lang.String;@4da855dd,[Ljava.lang.String;@6691490c),Annotation([Ljava.lang.String;@2187fff7,[Ljava.lang.String;@2e5c7f0b,[Ledu.cmu.lti.nlp.amr.Dependency;@21d5c1a0),Annotation([Ljava.lang.String;@4de025bf,[Ljava.lang.String;@538613b3,[Ljava.lang.String;@1eef9aef),Annotation([Ljava.lang.String;@11389053,[Ljava.lang.String;@5db99216,[Ledu.cmu.lti.nlp.amr.Entity;@3ec11999))
AMR:
(x2 / 回答-01, ARG1, x4 / 国王)
(x2 / 回答-01, manner, x6 / 也)
(x7 / 犹疑不决, degree, x8 / 有些)
(x7 / 犹疑不决, prep-on-behalf, x2 / 回答-01)
(x7 / 犹疑不决, snt3, x9 / 王子)
(x7 / 犹疑不决, time, x11 / 起初)
(x9 / 王子, mod, x10 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 21,317 microseconds
Sentence: 随后 叹 了 口气 ， 就 离开 了 …

Oracle Span 1:  就 => 就
Oracle Span 2:  离开 => 离开-01
Spans:
Span 5-6:  就 => 就
Span 6-7:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  就 => 就
Oracle Span 6-7:  离开 => 离开-01

Dependencies:
1	随后	_	AD	AD	_	2	advmod	_	_
2	叹	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	口气	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	离开	_	VV	VV	_	2	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	…	_	NN	NN	_	7	dobj	_	_

Oracle:
(x3 / 离开-01, manner, x4 / 就)

Input(Some(Graph((temporal :arg2 叹气-01 :arg3 (离开-01 :manner 就)),ArrayBuffer(Span(6,7,List(0),离开,离开-01,false), Span(5,6,List(1),就,就,false)),Map(1 -> 就, 0 -> 离开-01),Map(x4 -> 就, x3 -> 离开-01))),[Ljava.lang.String;@5c1bd44c,Annotation([Ljava.lang.String;@9f46d94,[Ljava.lang.String;@18cc679e,[Ljava.lang.String;@2e77b8cf),Annotation([Ljava.lang.String;@2c4ca0f9,[Ljava.lang.String;@67ef029,[Ledu.cmu.lti.nlp.amr.Dependency;@7df587ef),Annotation([Ljava.lang.String;@6e57e95e,[Ljava.lang.String;@2755d705,[Ljava.lang.String;@56db847e),Annotation([Ljava.lang.String;@740abb5,[Ljava.lang.String;@560cbf1a,[Ledu.cmu.lti.nlp.amr.Entity;@5fe8b721))
AMR:
(x3 / 离开-01, manner, x4 / 就)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 4,043 microseconds
Sentence: “ 我 派 你 当 我 的 大使 。 ” 国王 匆忙 地 喊道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  匆忙 => 匆忙-01
Oracle Span 3:  喊道 => 喊道-01
Oracle Span 4:  国王 => 国王
Oracle Span 5:  大使 => 大使
Oracle Span 6:  当 => 当-04
Oracle Span 7:  我 => 我
Oracle Span 8:  派 => 派-01
Spans:
Span 3-4:  你 => 你
Span 11-12:  匆忙 => 匆忙-01
Span 13-14:  喊道 => 喊道-01
Span 10-11:  国王 => 国王
Span 7-8:  大使 => 大使
Span 4-5:  当 => 当-04
Span 1-2:  我 => 我
Span 2-3:  派 => 派-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 11-12:  匆忙 => 匆忙-01
Oracle Span 13-14:  喊道 => 喊道-01
Oracle Span 10-11:  国王 => 国王
Oracle Span 7-8:  大使 => 大使
Oracle Span 4-5:  当 => 当-04
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  派 => 派-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	派	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	8	nsubj	_	_
5	当	_	P	P	_	8	nsubj	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	的	_	DEG	DEG	_	5	assm	_	_
8	大使	_	NN	NN	_	3	ccomp	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	国王	_	NN	NN	_	14	nsubj	_	_
12	匆忙	_	VA	VA	_	14	dvpmod	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	喊道	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 喊道-01, arg0, x2 / 国王)
(x0 / 喊道-01, arg1, x5 / 派-01)
(x0 / 喊道-01, manner, x3 / 匆忙-01)
(x5 / 派-01, arg0, x6 / 我)
(x5 / 派-01, arg1, x7 / 你)
(x5 / 派-01, arg2, x9 / 当-04)
(x9 / 当-04, arg1, x11 / 大使)

Input(Some(Graph((喊道-01 :arg1 (派-01 :arg2 (当-04 :arg1 (大使 :poss x6) :arg0 x7) :arg1 你 :arg0 我) :manner (匆忙-01 :arg0 x2) :arg0 国王),ArrayBuffer(Span(13,14,List(0),喊道,喊道-01,false), Span(2,3,List(1),派,派-01,false), Span(4,5,List(2),当,当-04,false), Span(7,8,List(3),大使,大使,false), Span(3,4,List(4),你,你,false), Span(1,2,List(5),我,我,false), Span(11,12,List(6),匆忙,匆忙-01,false), Span(10,11,List(7),国王,国王,false)),Map(2 -> 当-04, 5 -> 我, 7 -> 国王, 1 -> 派-01, 4 -> 你, 6 -> 匆忙-01, 0 -> 喊道-01, 3 -> 大使),Map(x2 -> 国王, x5 -> 派-01, x7 -> 你, x3 -> 匆忙-01, x11 -> 大使, x6 -> 我, x9 -> 当-04, x0 -> 喊道-01))),[Ljava.lang.String;@551a20d6,Annotation([Ljava.lang.String;@578524c3,[Ljava.lang.String;@64c2b546,[Ljava.lang.String;@7e094740),Annotation([Ljava.lang.String;@7a11c4c7,[Ljava.lang.String;@4cc547a,[Ledu.cmu.lti.nlp.amr.Dependency;@7555b920),Annotation([Ljava.lang.String;@4152d38d,[Ljava.lang.String;@3591009c,[Ljava.lang.String;@5398edd0),Annotation([Ljava.lang.String;@b5cc23a,[Ljava.lang.String;@5cc5b667,[Ledu.cmu.lti.nlp.amr.Entity;@61edc883))
AMR:
(x0 / 喊道-01, manner, x3 / 匆忙-01)
(x3 / 匆忙-01, location, x2 / 国王)
(x3 / 匆忙-01, time, x11 / 大使)
(x5 / 派-01, beneficiary, x6 / 我)
(x5 / 派-01, prep-through, x7 / 你)
(x5 / 派-01, purpose, x9 / 当-04)
(x9 / 当-04, location, x11 / 大使)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,203 microseconds
Sentence: 国王 显出 非常 有 权威 的 样子 。

Oracle Span 1:  国王 => 国王
Oracle Span 2:  显出 => 显出-01
Oracle Span 3:  有 => 有-06
Oracle Span 4:  权威 => 权威-01
Oracle Span 5:  样子 => 样子
Oracle Span 6:  非常 => 非常
Spans:
Span 0-1:  国王 => 国王
Span 1-2:  显出 => 显出-01
Span 3-4:  有 => 有-06
Span 4-5:  权威 => 权威-01
Span 6-7:  样子 => 样子
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 1-2:  显出 => 显出-01
Oracle Span 3-4:  有 => 有-06
Oracle Span 4-5:  权威 => 权威-01
Oracle Span 6-7:  样子 => 样子
Oracle Span 2-3:  非常 => 非常

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	显出	_	VV	VV	_	0	root	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	7	rcmod	_	_
5	权威	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	样子	_	NN	NN	_	2	dobj	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 显出-01, arg0, x2 / 国王)
(x0 / 显出-01, arg1, x3 / 样子)
(x3 / 样子, mod, x4 / 权威-01)
(x4 / 权威-01, degree, x7 / 非常)
(x5 / 有-06, arg1, x4 / 权威-01)

Input(Some(Graph((显出-01 :arg1 (样子 :mod (权威-01 :degree 非常 :arg1-of (有-06 :arg0 x2))) :arg0 国王),ArrayBuffer(Span(1,2,List(0),显出,显出-01,false), Span(6,7,List(1),样子,样子,false), Span(4,5,List(2),权威,权威-01,false), Span(2,3,List(3),非常,非常,false), Span(3,4,List(4),有,有-06,false), Span(0,1,List(5),国王,国王,false)),Map(2 -> 权威-01, 5 -> 国王, 1 -> 样子, 4 -> 有-06, 0 -> 显出-01, 3 -> 非常),Map(x2 -> 国王, x5 -> 有-06, x7 -> 非常, x4 -> 权威-01, x3 -> 样子, x0 -> 显出-01))),[Ljava.lang.String;@758f4f03,Annotation([Ljava.lang.String;@182f1e9a,[Ljava.lang.String;@6928f576,[Ljava.lang.String;@660e9100),Annotation([Ljava.lang.String;@69f63d95,[Ljava.lang.String;@9cd25ff,[Ledu.cmu.lti.nlp.amr.Dependency;@27e0f2f5),Annotation([Ljava.lang.String;@3574e198,[Ljava.lang.String;@6db66836,[Ljava.lang.String;@db44aa2),Annotation([Ljava.lang.String;@2de366bb,[Ljava.lang.String;@3f093abe,[Ledu.cmu.lti.nlp.amr.Entity;@61a002b1))
AMR:
(x0 / 显出-01, manner, x2 / 国王)
(x0 / 显出-01, subset, x3 / 样子)
(x3 / 样子, mod, x4 / 权威-01)
(x4 / 权威-01, degree, x7 / 非常)
(x5 / 有-06, year, x4 / 权威-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,015 microseconds
Sentence: 小 王子 在 旅途 中 自言自语 地 说 ： “ 这些 大人 真 奇怪 。 ”

Oracle Span 1:  大人 => 大人
Oracle Span 2:  奇怪 => 奇怪-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  旅途 => 旅途
Oracle Span 5:  王子 => 王子
Oracle Span 6:  真 => 真
Oracle Span 7:  自言自语 => 自言自语
Oracle Span 8:  说 => 说-01
Oracle Span 9:  这些 => 这些
Spans:
Span 11-12:  大人 => 大人
Span 13-14:  奇怪 => 奇怪-01
Span 0-1:  小 => 小-01
Span 3-4:  旅途 => 旅途
Span 1-2:  王子 => 王子
Span 12-13:  真 => 真
Span 5-6:  自言自语 => 自言自语
Span 7-8:  说 => 说-01
Span 10-11:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  大人 => 大人
Oracle Span 13-14:  奇怪 => 奇怪-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  旅途 => 旅途
Oracle Span 1-2:  王子 => 王子
Oracle Span 12-13:  真 => 真
Oracle Span 5-6:  自言自语 => 自言自语
Oracle Span 7-8:  说 => 说-01
Oracle Span 10-11:  这些 => 这些

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	8	nsubj	_	_
3	在	_	P	P	_	8	prep	_	_
4	旅途	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	3	plmod	_	_
6	自言自语	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	14	punct	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	大人	_	NN	NN	_	14	nsubj	_	_
13	真	_	AD	AD	_	14	advmod	_	_
14	奇怪	_	VA	VA	_	8	ccomp	_	_
15	。	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x6 / 奇怪-01)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, time, x3 / 旅途)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, arg0, x8 / 大人)
(x6 / 奇怪-01, degree, x7 / 真)
(x8 / 大人, mod, x9 / 这些)

Input(Some(Graph((说-01 :arg1 (奇怪-01 :arg0 (大人 :mod 这些) :degree 真) :arg0 (王子 :mod 小-01) :time 旅途 :manner 自言自语),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(13,14,List(1),奇怪,奇怪-01,false), Span(11,12,List(2),大人,大人,false), Span(10,11,List(3),这些,这些,false), Span(12,13,List(4),真,真,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小-01,false), Span(3,4,List(7),旅途,旅途,false), Span(5,6,List(8),自言自语,自言自语,false)),Map(2 -> 大人, 5 -> 王子, 8 -> 自言自语, 7 -> 旅途, 1 -> 奇怪-01, 4 -> 真, 6 -> 小-01, 0 -> 说-01, 3 -> 这些),Map(x2 -> 自言自语, x5 -> 小-01, x8 -> 大人, x7 -> 真, x4 -> 王子, x3 -> 旅途, x6 -> 奇怪-01, x9 -> 这些, x0 -> 说-01))),[Ljava.lang.String;@4eeea57d,Annotation([Ljava.lang.String;@780ec4a5,[Ljava.lang.String;@e24ddd0,[Ljava.lang.String;@6f70f32f),Annotation([Ljava.lang.String;@548e76f1,[Ljava.lang.String;@5aabbb29,[Ledu.cmu.lti.nlp.amr.Dependency;@72c927f1),Annotation([Ljava.lang.String;@1ac85b0c,[Ljava.lang.String;@3dd69f5a,[Ljava.lang.String;@3aa3193a),Annotation([Ljava.lang.String;@1ee4730,[Ljava.lang.String;@59a67c3a,[Ledu.cmu.lti.nlp.amr.Entity;@5003041b))
AMR:
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, purpose, x6 / 奇怪-01)
(x0 / 说-01, time, x3 / 旅途)
(x3 / 旅途, poss, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, degree, x7 / 真)
(x6 / 奇怪-01, value, x8 / 大人)
(x8 / 大人, mod, x9 / 这些)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 22,471 microseconds
Sentence: XI 。

Oracle Span 1:  XI => XI
Spans:
Span 0-1:  XI => XI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XI => XI

Dependencies:
1	XI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XI,ArrayBuffer(Span(0,1,List(0),XI,XI,false)),Map(0 -> XI),Map(x0 -> XI))),[Ljava.lang.String;@724bade8,Annotation([Ljava.lang.String;@16fb356,[Ljava.lang.String;@6bc248ed,[Ljava.lang.String;@23a9ba52),Annotation([Ljava.lang.String;@ca27722,[Ljava.lang.String;@70ab80e3,[Ledu.cmu.lti.nlp.amr.Dependency;@9573b3b),Annotation([Ljava.lang.String;@67427b69,[Ljava.lang.String;@78461bc4,[Ljava.lang.String;@544630b7),Annotation([Ljava.lang.String;@64f857e7,[Ljava.lang.String;@1095f122,[Ledu.cmu.lti.nlp.amr.Entity;@58c540cf))
AMR:


Decoded in 1,466 microseconds
Sentence: 第二 个 行星 上 住 着 一 个 爱 虚荣 的 人 。

Oracle Span 1:  人 => 人
Oracle Span 2:  住 => 住-01
Oracle Span 3:  爱 => 爱-01
Oracle Span 4:  虚荣 => 虚荣-01
Oracle Span 5:  行星 => 行星
Spans:
Span 11-12:  人 => 人
Span 4-5:  住 => 住-01
Span 8-9:  爱 => 爱-01
Span 9-10:  虚荣 => 虚荣-01
Span 2-3:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  人 => 人
Oracle Span 4-5:  住 => 住-01
Oracle Span 8-9:  爱 => 爱-01
Oracle Span 9-10:  虚荣 => 虚荣-01
Oracle Span 2-3:  行星 => 行星

Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	个	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	5	loc	_	_
5	住	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	12	clf	_	_
9	爱	_	VV	VV	_	12	rcmod	_	_
10	虚荣	_	NN	NN	_	9	dobj	_	_
11	的	_	DEC	DEC	_	9	cpm	_	_
12	人	_	NN	NN	_	5	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 住-01, arg0, x2 / 人)
(x0 / 住-01, arg1, x6 / 行星)
(x3 / 爱-01, arg0, x2 / 人)
(x3 / 爱-01, arg1, x4 / 虚荣-01)

Input(Some(Graph((住-01 :arg1 (行星 :ord (ordinal-entity :value 2)) :arg0 (人 :quant 1 :arg0-of (爱-01 :arg1 虚荣-01))),ArrayBuffer(Span(4,5,List(0),住,住-01,false), Span(2,3,List(1),行星,行星,false), Span(11,12,List(2),人,人,false), Span(8,9,List(3),爱,爱-01,false), Span(9,10,List(4),虚荣,虚荣-01,false)),Map(2 -> 人, 1 -> 行星, 4 -> 虚荣-01, 0 -> 住-01, 3 -> 爱-01),Map(x2 -> 人, x4 -> 虚荣-01, x3 -> 爱-01, x6 -> 行星, x0 -> 住-01))),[Ljava.lang.String;@3d6300e8,Annotation([Ljava.lang.String;@1b822fcc,[Ljava.lang.String;@24a1c17f,[Ljava.lang.String;@56102e1c),Annotation([Ljava.lang.String;@73511076,[Ljava.lang.String;@7927bd9f,[Ledu.cmu.lti.nlp.amr.Dependency;@532721fd),Annotation([Ljava.lang.String;@410954b,[Ljava.lang.String;@7fb9f71f,[Ljava.lang.String;@3b366632),Annotation([Ljava.lang.String;@51f49060,[Ljava.lang.String;@514eedd8,[Ledu.cmu.lti.nlp.amr.Entity;@617fe9e1))
AMR:
(x0 / 住-01, op, x6 / 行星)
(x0 / 住-01, prep-from, x2 / 人)
(x3 / 爱-01, extent, x4 / 虚荣-01)
(x3 / 爱-01, value, x2 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 11,775 microseconds
Sentence: “ 喔唷 ！

Oracle Span 1:  喔唷 => 喔唷
Spans:
Span 1-2:  喔唷 => 喔唷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  喔唷 => 喔唷

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	喔唷	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (喔唷 :mode expressive)),ArrayBuffer(Span(1,2,List(0),喔唷,喔唷,false)),Map(0 -> 喔唷),Map(x5 -> 喔唷))),[Ljava.lang.String;@6970140a,Annotation([Ljava.lang.String;@1cf2fed4,[Ljava.lang.String;@3af4e0bf,[Ljava.lang.String;@245a26e1),Annotation([Ljava.lang.String;@4d63b624,[Ljava.lang.String;@466cf502,[Ledu.cmu.lti.nlp.amr.Dependency;@5b800468),Annotation([Ljava.lang.String;@2e185cd7,[Ljava.lang.String;@7e1a1da6,[Ljava.lang.String;@5f7f2382),Annotation([Ljava.lang.String;@407cf41,[Ljava.lang.String;@6815c5f2,[Ledu.cmu.lti.nlp.amr.Entity;@46cc127b))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,481 microseconds
Sentence: “ 喔唷 ！

Oracle Span 1:  喔唷 => 喔唷
Spans:
Span 1-2:  喔唷 => 喔唷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  喔唷 => 喔唷

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	喔唷	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (喔唷 :mode expressive)),ArrayBuffer(Span(1,2,List(0),喔唷,喔唷,false)),Map(0 -> 喔唷),Map(x5 -> 喔唷))),[Ljava.lang.String;@60094a13,Annotation([Ljava.lang.String;@5aceec94,[Ljava.lang.String;@1c32886a,[Ljava.lang.String;@3a4b0e5d),Annotation([Ljava.lang.String;@10b892d5,[Ljava.lang.String;@3d3f761a,[Ledu.cmu.lti.nlp.amr.Dependency;@3546d80f),Annotation([Ljava.lang.String;@579d011c,[Ljava.lang.String;@3670f00,[Ljava.lang.String;@452e26d0),Annotation([Ljava.lang.String;@46ab18da,[Ljava.lang.String;@790174f2,[Ledu.cmu.lti.nlp.amr.Entity;@42257bdd))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,499 microseconds
Sentence: 一 个 崇拜 我 的 人 来 拜访 了 ！ ” 这个 爱 虚荣 的 人 一 见到 小 王子 ， 老远 就 叫喊 起来 。

Oracle Span 1:  人 => 人
Oracle Span 2:  人 => 人
Oracle Span 3:  叫喊 => 叫喊-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  就 => 就
Oracle Span 6:  崇拜 => 崇拜-01
Oracle Span 7:  拜访 => 拜访-01
Oracle Span 8:  来 => 来-05
Oracle Span 9:  爱 => 爱-01
Oracle Span 10:  王子 => 王子
Oracle Span 11:  老远 => 老远
Oracle Span 12:  虚荣 => 虚荣-01
Oracle Span 13:  见到 => 见到-01
Spans:
Span 5-6:  人 => 人
Span 15-16:  人 => 人
Span 23-24:  叫喊 => 叫喊-01
Span 18-19:  小 => 小-01
Span 22-23:  就 => 就
Span 2-3:  崇拜 => 崇拜-01
Span 7-8:  拜访 => 拜访-01
Span 6-7:  来 => 来-05
Span 12-13:  爱 => 爱-01
Span 19-20:  王子 => 王子
Span 21-22:  老远 => 老远
Span 13-14:  虚荣 => 虚荣-01
Span 17-18:  见到 => 见到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 15-16:  人 => 人
Oracle Span 23-24:  叫喊 => 叫喊-01
Oracle Span 18-19:  小 => 小-01
Oracle Span 22-23:  就 => 就
Oracle Span 2-3:  崇拜 => 崇拜-01
Oracle Span 7-8:  拜访 => 拜访-01
Oracle Span 6-7:  来 => 来-05
Oracle Span 12-13:  爱 => 爱-01
Oracle Span 19-20:  王子 => 王子
Oracle Span 21-22:  老远 => 老远
Oracle Span 13-14:  虚荣 => 虚荣-01
Oracle Span 17-18:  见到 => 见到-01

Dependencies:
1	一	_	CD	CD	_	2	nummod	_	_
2	个	_	M	M	_	3	clf	_	_
3	崇拜	_	NN	NN	_	6	nn	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	来	_	MSP	MSP	_	8	prtmod	_	_
8	拜访	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	！	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	12	punct	_	_
12	这个	_	NT	NT	_	20	nn	_	_
13	爱	_	VV	VV	_	16	rcmod	_	_
14	虚荣	_	NN	NN	_	13	dobj	_	_
15	的	_	DEC	DEC	_	13	cpm	_	_
16	人	_	NN	NN	_	18	nn	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	见到	_	NN	NN	_	20	nn	_	_
19	小	_	JJ	JJ	_	20	amod	_	_
20	王子	_	NN	NN	_	24	nsubj	_	_
21	,	_	PU	PU	_	24	punct	_	_
22	老远	_	NN	NN	_	24	nsubj	_	_
23	就	_	AD	AD	_	24	advmod	_	_
24	叫喊	_	VV	VV	_	8	conj	_	_
25	起来	_	VV	VV	_	24	comod	_	_
26	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x23 / 叫喊-01, arg0, x27 / 人)
(x23 / 叫喊-01, arg1, x35 / 来-05)
(x23 / 叫喊-01, manner, x25 / 就)
(x23 / 叫喊-01, manner, x26 / 老远)
(x23 / 叫喊-01, time, x31 / 见到-01)
(x28 / 爱-01, arg0, x27 / 人)
(x28 / 爱-01, arg1, x29 / 虚荣-01)
(x31 / 见到-01, arg1, x33 / 王子)
(x33 / 王子, mod, x34 / 小-01)
(x35 / 来-05, arg0, x36 / 人)
(x35 / 来-05, arg1, x40 / 拜访-01)
(x38 / 崇拜-01, arg0, x36 / 人)

Input(Some(Graph((叫喊-01 :mode expressive :arg1 (来-05 :arg1 拜访-01 :arg0 (人 :arg0-of (崇拜-01 :arg1 x27) :quant 1)) :time (见到-01 :arg1 (王子 :mod 小-01) :arg0 x27) :arg0 (人 :mod 这 :arg0-of (爱-01 :arg1 虚荣-01)) :manner 老远 :manner 就),ArrayBuffer(Span(23,24,List(0),叫喊,叫喊-01,false), Span(6,7,List(1),来,来-05,false), Span(7,8,List(2),拜访,拜访-01,false), Span(5,6,List(3),人,人,false), Span(2,3,List(4),崇拜,崇拜-01,false), Span(17,18,List(5),见到,见到-01,false), Span(19,20,List(6),王子,王子,false), Span(18,19,List(7),小,小-01,false), Span(15,16,List(8),人,人,false), Span(12,13,List(9),爱,爱-01,false), Span(13,14,List(10),虚荣,虚荣-01,false), Span(21,22,List(11),老远,老远,false), Span(22,23,List(12),就,就,false)),Map(2 -> 拜访-01, 5 -> 见到-01, 12 -> 就, 8 -> 人, 7 -> 小-01, 1 -> 来-05, 4 -> 崇拜-01, 11 -> 老远, 6 -> 王子, 9 -> 爱-01, 0 -> 叫喊-01, 10 -> 虚荣-01, 3 -> 人),Map(x28 -> 爱-01, x34 -> 小-01, x40 -> 拜访-01, x25 -> 就, x31 -> 见到-01, x27 -> 人, x33 -> 王子, x36 -> 人, x23 -> 叫喊-01, x38 -> 崇拜-01, x26 -> 老远, x29 -> 虚荣-01, x35 -> 来-05))),[Ljava.lang.String;@7689ddef,Annotation([Ljava.lang.String;@687a762c,[Ljava.lang.String;@1a2e2935,[Ljava.lang.String;@733c423e),Annotation([Ljava.lang.String;@4b629f13,[Ljava.lang.String;@70925b45,[Ledu.cmu.lti.nlp.amr.Dependency;@1b9ea3e3),Annotation([Ljava.lang.String;@aa22f1c,[Ljava.lang.String;@55e7a35c,[Ljava.lang.String;@37cd92d6),Annotation([Ljava.lang.String;@5922ae77,[Ljava.lang.String;@4263b080,[Ledu.cmu.lti.nlp.amr.Entity;@2af616d3))
AMR:
(x23 / 叫喊-01, manner, x25 / 就)
(x23 / 叫喊-01, manner, x26 / 老远)
(x23 / 叫喊-01, time, x31 / 见到-01)
(x28 / 爱-01, scale, x29 / 虚荣-01)
(x28 / 爱-01, scale, x40 / 拜访-01)
(x31 / 见到-01, instrument, x27 / 人)
(x31 / 见到-01, topic, x29 / 虚荣-01)
(x33 / 王子, mod, x34 / 小-01)
(x34 / 小-01, year, x31 / 见到-01)
(x35 / 来-05, year, x36 / 人)
(x35 / 来-05, year, x40 / 拜访-01)
(x38 / 崇拜-01, year, x35 / 来-05)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.1
WARNING: makeIds can't find span Id: 0.4.0
WARNING: makeIds can't find span Id: 0.4.0.1
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 47,131 microseconds
Sentence: 在 那些 爱 虚荣 的 人 眼 里 ， 别人 都 成 了 他们 的 崇拜者 。

Oracle Span 1:  人 => 人
Oracle Span 2:  他们 => 他们
Oracle Span 3:  别人 => 别人
Oracle Span 4:  崇拜者 => 崇拜者
Oracle Span 5:  成 => 成-01
Oracle Span 6:  爱 => 爱-01
Oracle Span 7:  眼 => 眼
Oracle Span 8:  虚荣 => 虚荣
Oracle Span 9:  那些 => 那些
Oracle Span 10:  都 => 都
Spans:
Span 5-6:  人 => 人
Span 13-14:  他们 => 他们
Span 9-10:  别人 => 别人
Span 15-16:  崇拜者 => 崇拜者
Span 11-12:  成 => 成-01
Span 2-3:  爱 => 爱-01
Span 6-7:  眼 => 眼
Span 3-4:  虚荣 => 虚荣
Span 1-2:  那些 => 那些
Span 10-11:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 13-14:  他们 => 他们
Oracle Span 9-10:  别人 => 别人
Oracle Span 15-16:  崇拜者 => 崇拜者
Oracle Span 11-12:  成 => 成-01
Oracle Span 2-3:  爱 => 爱-01
Oracle Span 6-7:  眼 => 眼
Oracle Span 3-4:  虚荣 => 虚荣
Oracle Span 1-2:  那些 => 那些
Oracle Span 10-11:  都 => 都

Dependencies:
1	在	_	P	P	_	12	prep	_	_
2	那些	_	DT	DT	_	6	det	_	_
3	爱	_	VV	VV	_	6	rcmod	_	_
4	虚荣	_	NN	NN	_	3	dobj	_	_
5	的	_	DEC	DEC	_	3	cpm	_	_
6	人	_	NN	NN	_	7	nn	_	_
7	眼	_	NN	NN	_	8	lobj	_	_
8	里	_	LC	LC	_	1	plmod	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	别人	_	NN	NN	_	12	nsubj	_	_
11	都	_	AD	AD	_	12	advmod	_	_
12	成	_	VV	VV	_	0	root	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	他们	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	崇拜者	_	NN	NN	_	12	dobj	_	_
17	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 成-01, arg0, x2 / 别人)
(x0 / 成-01, arg1, x4 / 崇拜者)
(x0 / 成-01, condition, x6 / 眼)
(x0 / 成-01, manner, x3 / 都)
(x4 / 崇拜者, poss, x5 / 他们)
(x7 / 人, mod, x10 / 那些)
(x7 / 人, part, x6 / 眼)
(x8 / 爱-01, arg0, x7 / 人)
(x8 / 爱-01, arg1, x9 / 虚荣)

Input(Some(Graph((成-01 :condition (眼 :part-of (人 :mod 那些 :arg0-of (爱-01 :arg1 虚荣))) :arg1 (崇拜者 :poss 他们) :manner 都 :arg0 别人),ArrayBuffer(Span(11,12,List(0),成,成-01,false), Span(6,7,List(1),眼,眼,false), Span(5,6,List(2),人,人,false), Span(1,2,List(3),那些,那些,false), Span(2,3,List(4),爱,爱-01,false), Span(3,4,List(5),虚荣,虚荣,false), Span(15,16,List(6),崇拜者,崇拜者,false), Span(13,14,List(7),他们,他们,false), Span(10,11,List(8),都,都,false), Span(9,10,List(9),别人,别人,false)),Map(2 -> 人, 5 -> 虚荣, 8 -> 都, 7 -> 他们, 1 -> 眼, 4 -> 爱-01, 6 -> 崇拜者, 9 -> 别人, 0 -> 成-01, 3 -> 那些),Map(x2 -> 别人, x10 -> 那些, x5 -> 他们, x8 -> 爱-01, x7 -> 人, x4 -> 崇拜者, x3 -> 都, x6 -> 眼, x9 -> 虚荣, x0 -> 成-01))),[Ljava.lang.String;@71f67a79,Annotation([Ljava.lang.String;@3deb2326,[Ljava.lang.String;@62d363ab,[Ljava.lang.String;@7889a1ac),Annotation([Ljava.lang.String;@3aee3976,[Ljava.lang.String;@5ef8df1e,[Ledu.cmu.lti.nlp.amr.Dependency;@27cf3151),Annotation([Ljava.lang.String;@127e70c5,[Ljava.lang.String;@5910de75,[Ljava.lang.String;@4108fa66),Annotation([Ljava.lang.String;@1f130eaf,[Ljava.lang.String;@7e0aadd0,[Ledu.cmu.lti.nlp.amr.Entity;@21362712))
AMR:
(x0 / 成-01, condition, x6 / 眼)
(x0 / 成-01, manner, x3 / 都)
(x0 / 成-01, mode, x2 / 别人)
(x0 / 成-01, snt1, x4 / 崇拜者)
(x4 / 崇拜者, poss, x5 / 他们)
(x7 / 人, mod, x10 / 那些)
(x7 / 人, part, x6 / 眼)
(x8 / 爱-01, quant, x9 / 虚荣)
(x8 / 爱-01, value, x7 / 人)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.3.0.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 30,910 microseconds
Sentence: “ 你 好 ！ ” 小 王子 说道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  好 => 好-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说道 => 说道-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-01
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	！	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x0 / 说道-01, arg1, x4 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好-01, arg0, x5 / 你)

Input(Some(Graph((说道-01 :arg1 (好-01 :mode expressive :arg0 你) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(2,3,List(1),好,好-01,false), Span(1,2,List(2),你,你,false), Span(6,7,List(3),王子,王子,false), Span(5,6,List(4),小,小-01,false)),Map(2 -> 你, 1 -> 好-01, 4 -> 小-01, 0 -> 说道-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 你, x4 -> 好-01, x3 -> 小-01, x0 -> 说道-01))),[Ljava.lang.String;@27eb3298,Annotation([Ljava.lang.String;@200a26bc,[Ljava.lang.String;@bc57b40,[Ljava.lang.String;@1b5bc39d),Annotation([Ljava.lang.String;@655a5d9c,[Ljava.lang.String;@1494b84d,[Ledu.cmu.lti.nlp.amr.Dependency;@34abdee4),Annotation([Ljava.lang.String;@71a9b4c7,[Ljava.lang.String;@4628b1d3,[Ljava.lang.String;@77cf3f8b),Annotation([Ljava.lang.String;@1df98368,[Ljava.lang.String;@21ca139c,[Ledu.cmu.lti.nlp.amr.Entity;@226f885f))
AMR:
(x0 / 说道-01, conj-as-if, x2 / 王子)
(x0 / 说道-01, manner, x4 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好-01, beneficiary, x5 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,042 microseconds
Sentence: “ 你 的 帽子 很 奇怪 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  奇怪 => 奇怪-01
Oracle Span 3:  帽子 => 帽子
Oracle Span 4:  很 => 很
Spans:
Span 1-2:  你 => 你
Span 5-6:  奇怪 => 奇怪-01
Span 3-4:  帽子 => 帽子
Span 4-5:  很 => 很

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  奇怪 => 奇怪-01
Oracle Span 3-4:  帽子 => 帽子
Oracle Span 4-5:  很 => 很

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	帽子	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	奇怪	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 奇怪-01, arg0, x9 / 帽子)
(x7 / 奇怪-01, degree, x8 / 很)
(x9 / 帽子, poss, x10 / 你)

Input(Some(Graph((say :arg1 (奇怪-01 :arg0 (帽子 :poss 你) :degree 很)),ArrayBuffer(Span(5,6,List(0),奇怪,奇怪-01,false), Span(3,4,List(1),帽子,帽子,false), Span(1,2,List(2),你,你,false), Span(4,5,List(3),很,很,false)),Map(2 -> 你, 1 -> 帽子, 0 -> 奇怪-01, 3 -> 很),Map(x10 -> 你, x8 -> 很, x7 -> 奇怪-01, x9 -> 帽子))),[Ljava.lang.String;@2cd2c8fe,Annotation([Ljava.lang.String;@7d61eccf,[Ljava.lang.String;@cc6460c,[Ljava.lang.String;@52350abb),Annotation([Ljava.lang.String;@681aad3b,[Ljava.lang.String;@1a6f2363,[Ledu.cmu.lti.nlp.amr.Dependency;@2427e004),Annotation([Ljava.lang.String;@5ebd56e9,[Ljava.lang.String;@63f34b70,[Ljava.lang.String;@641856),Annotation([Ljava.lang.String;@1b58ff9e,[Ljava.lang.String;@2f66e802,[Ledu.cmu.lti.nlp.amr.Entity;@56b78e55))
AMR:
(x7 / 奇怪-01, degree, x8 / 很)
(x7 / 奇怪-01, instrument, x9 / 帽子)
(x9 / 帽子, poss, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,476 microseconds
Sentence: “ 这 是 为了 向 人 致意 用 的 。 ” 爱 虚荣 的 人 回答 道 ，

Oracle Span 1:  为了 => 为了-01
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  爱 => 爱-01
Oracle Span 6:  致意 => 致意-01
Oracle Span 7:  虚荣 => 虚荣-01
Oracle Span 8:  这 => 这
Spans:
Span 3-4:  为了 => 为了-01
Span 5-6:  人 => 人
Span 14-15:  人 => 人
Span 15-16:  回答 => 回答-01
Span 11-12:  爱 => 爱-01
Span 6-7:  致意 => 致意-01
Span 12-13:  虚荣 => 虚荣-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  为了 => 为了-01
Oracle Span 5-6:  人 => 人
Oracle Span 14-15:  人 => 人
Oracle Span 15-16:  回答 => 回答-01
Oracle Span 11-12:  爱 => 爱-01
Oracle Span 6-7:  致意 => 致意-01
Oracle Span 12-13:  虚荣 => 虚荣-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	为了	_	P	P	_	8	prep	_	_
5	向	_	P	P	_	7	prep	_	_
6	人	_	NN	NN	_	5	pobj	_	_
7	致意	_	VV	VV	_	4	pccomp	_	_
8	用	_	VV	VV	_	3	attr	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	。	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_
12	爱	_	VV	VV	_	3	dep	_	_
13	虚荣	_	NN	NN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	人	_	NN	NN	_	12	dobj	_	_
16	回答	_	VV	VV	_	12	conj	_	_
17	道	_	NN	NN	_	16	dobj	_	_
18	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 人)
(x0 / 回答-01, arg2, x5 / 为了-01)
(x3 / 爱-01, arg0, x2 / 人)
(x3 / 爱-01, arg1, x4 / 虚荣-01)
(x5 / 为了-01, arg0, x6 / 这)
(x5 / 为了-01, arg1, x7 / 致意-01)
(x7 / 致意-01, arg1, x8 / 人)

Input(Some(Graph((回答-01 :arg2 (为了-01 :arg1 (致意-01 :arg1 人) :arg0 这) :arg0 (人 :arg0-of (爱-01 :arg1 虚荣-01))),ArrayBuffer(Span(15,16,List(0),回答,回答-01,false), Span(3,4,List(1),为了,为了-01,false), Span(6,7,List(2),致意,致意-01,false), Span(5,6,List(3),人,人,false), Span(1,2,List(4),这,这,false), Span(14,15,List(5),人,人,false), Span(11,12,List(6),爱,爱-01,false), Span(12,13,List(7),虚荣,虚荣-01,false)),Map(2 -> 致意-01, 5 -> 人, 7 -> 虚荣-01, 1 -> 为了-01, 4 -> 这, 6 -> 爱-01, 0 -> 回答-01, 3 -> 人),Map(x2 -> 人, x5 -> 为了-01, x8 -> 人, x7 -> 致意-01, x4 -> 虚荣-01, x3 -> 爱-01, x6 -> 这, x0 -> 回答-01))),[Ljava.lang.String;@76318a7d,Annotation([Ljava.lang.String;@2a492f2a,[Ljava.lang.String;@3277e499,[Ljava.lang.String;@585811a4),Annotation([Ljava.lang.String;@22c01ab0,[Ljava.lang.String;@411341bd,[Ledu.cmu.lti.nlp.amr.Dependency;@4c4d362a),Annotation([Ljava.lang.String;@5400db36,[Ljava.lang.String;@76b74e9c,[Ljava.lang.String;@2d72f75e),Annotation([Ljava.lang.String;@8ab78bc,[Ljava.lang.String;@5aa0dbf4,[Ledu.cmu.lti.nlp.amr.Entity;@16afbd92))
AMR:
(x0 / 回答-01, ARG3, x2 / 人)
(x2 / 人, location, x4 / 虚荣-01)
(x3 / 爱-01, degree, x7 / 致意-01)
(x3 / 爱-01, extent, x4 / 虚荣-01)
(x5 / 为了-01, mod, x6 / 这)
(x5 / 为了-01, purpose, x7 / 致意-01)
(x7 / 致意-01, instrument, x8 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 19,506 microseconds
Sentence: “ 当 人们 向 我 欢呼 的 时候 ， 我 就 用 帽子 向 他们 致意 。

Oracle Span 1:  人们 => 人们
Oracle Span 2:  他们 => 他们
Oracle Span 3:  帽子 => 帽子
Oracle Span 4:  我 => 我
Oracle Span 5:  欢呼 => 欢呼-01
Oracle Span 6:  致意 => 致意-01
Spans:
Span 2-3:  人们 => 人们
Span 14-15:  他们 => 他们
Span 12-13:  帽子 => 帽子
Span 4-5:  我 => 我
Span 5-6:  欢呼 => 欢呼-01
Span 15-16:  致意 => 致意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人们 => 人们
Oracle Span 14-15:  他们 => 他们
Oracle Span 12-13:  帽子 => 帽子
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  欢呼 => 欢呼-01
Oracle Span 15-16:  致意 => 致意-01

Dependencies:
1	“	_	PU	PU	_	16	punct	_	_
2	当	_	P	P	_	16	prep	_	_
3	人们	_	NN	NN	_	6	nsubj	_	_
4	向	_	P	P	_	6	prep	_	_
5	我	_	PN	PN	_	4	pobj	_	_
6	欢呼	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	时候	_	NN	NN	_	2	pobj	_	_
9	,	_	PU	PU	_	16	punct	_	_
10	我	_	PN	PN	_	16	nsubj	_	_
11	就	_	AD	AD	_	16	advmod	_	_
12	用	_	P	P	_	16	prep	_	_
13	帽子	_	NN	NN	_	12	pobj	_	_
14	向	_	P	P	_	16	prep	_	_
15	他们	_	PN	PN	_	14	pobj	_	_
16	致意	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x25 / 致意-01, arg0, x26 / 我)
(x25 / 致意-01, arg1, x27 / 他们)
(x25 / 致意-01, instrument, x28 / 帽子)
(x25 / 致意-01, time, x29 / 欢呼-01)
(x29 / 欢呼-01, arg0, x30 / 人们)

Input(Some(Graph((say :arg1 (致意-01 :time (欢呼-01 :arg1 x26 :arg0 人们) :instrument 帽子 :arg1 他们 :arg0 我)),ArrayBuffer(Span(15,16,List(0),致意,致意-01,false), Span(5,6,List(1),欢呼,欢呼-01,false), Span(2,3,List(2),人们,人们,false), Span(12,13,List(3),帽子,帽子,false), Span(14,15,List(4),他们,他们,false), Span(4,5,List(5),我,我,false)),Map(2 -> 人们, 5 -> 我, 1 -> 欢呼-01, 4 -> 他们, 0 -> 致意-01, 3 -> 帽子),Map(x28 -> 帽子, x25 -> 致意-01, x30 -> 人们, x27 -> 他们, x26 -> 我, x29 -> 欢呼-01))),[Ljava.lang.String;@2c5d601e,Annotation([Ljava.lang.String;@7fe083b1,[Ljava.lang.String;@23c388c2,[Ljava.lang.String;@486be205),Annotation([Ljava.lang.String;@f713686,[Ljava.lang.String;@74f7d1d2,[Ledu.cmu.lti.nlp.amr.Dependency;@4b4dd216),Annotation([Ljava.lang.String;@5ca17ab0,[Ljava.lang.String;@5a62b2a4,[Ljava.lang.String;@1051817b),Annotation([Ljava.lang.String;@35293c05,[Ljava.lang.String;@620aa4ea,[Ledu.cmu.lti.nlp.amr.Entity;@2db2dd9d))
AMR:
(x25 / 致意-01, degree, x27 / 他们)
(x25 / 致意-01, instrument, x28 / 帽子)
(x25 / 致意-01, time, x29 / 欢呼-01)
(x29 / 欢呼-01, beneficiary, x26 / 我)
(x29 / 欢呼-01, degree, x30 / 人们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,849 microseconds
Sentence: 可惜 ， 没有 一 个 人 经过 这里 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  经过 => 经过-01
Oracle Span 3:  这里 => 这里
Spans:
Span 5-6:  人 => 人
Span 6-7:  经过 => 经过-01
Span 7-8:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  经过 => 经过-01
Oracle Span 7-8:  这里 => 这里

Dependencies:
1	可惜	_	VA	VA	_	3	dep	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	7	nsubj	_	_
7	经过	_	VV	VV	_	3	dep	_	_
8	这里	_	PN	PN	_	7	dobj	_	_
9	。	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 经过-01, arg0, x13 / 人)
(x12 / 经过-01, arg1, x15 / 这里)

Input(Some(Graph((say :arg1 (contrast :arg2 (有-04 :polarity - :arg0 (经过-01 :arg1 这里 :arg0 (人 :quant 1))))),ArrayBuffer(Span(6,7,List(0),经过,经过-01,false), Span(7,8,List(1),这里,这里,false), Span(5,6,List(2),人,人,false)),Map(2 -> 人, 1 -> 这里, 0 -> 经过-01),Map(x13 -> 人, x12 -> 经过-01, x15 -> 这里))),[Ljava.lang.String;@3174cb09,Annotation([Ljava.lang.String;@4d411036,[Ljava.lang.String;@7adbd080,[Ljava.lang.String;@41beb473),Annotation([Ljava.lang.String;@560513ce,[Ljava.lang.String;@13006998,[Ledu.cmu.lti.nlp.amr.Dependency;@37fbe4a8),Annotation([Ljava.lang.String;@352c308,[Ljava.lang.String;@7d373bcf,[Ljava.lang.String;@6d6bc158),Annotation([Ljava.lang.String;@5dda6f9,[Ljava.lang.String;@10027fc9,[Ledu.cmu.lti.nlp.amr.Entity;@54afd745))
AMR:
(x12 / 经过-01, prep-through, x13 / 人)
(x12 / 经过-01, time, x15 / 这里)

WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 11,083 microseconds
Sentence: 小 王子 不 解 其 意 。 说道 ： “ 啊 ？ 是 吗 ？ ”

Oracle Span 1:  其 => 其
Oracle Span 2:  啊 => 啊
Oracle Span 3:  小 => 小-01
Oracle Span 4:  意 => 意
Oracle Span 5:  是 => 是-03
Oracle Span 6:  王子 => 王子
Oracle Span 7:  解 => 解-02
Oracle Span 8:  说道 => 说道-01
Spans:
Span 4-5:  其 => 其
Span 10-11:  啊 => 啊
Span 0-1:  小 => 小-01
Span 5-6:  意 => 意
Span 12-13:  是 => 是-03
Span 1-2:  王子 => 王子
Span 3-4:  解 => 解-02
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  其 => 其
Oracle Span 10-11:  啊 => 啊
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  意 => 意
Oracle Span 12-13:  是 => 是-03
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  解 => 解-02
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	解	_	VV	VV	_	8	dep	_	_
5	其	_	PN	PN	_	6	nn	_	_
6	意	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	13	punct	_	_
11	啊	_	NN	NN	_	12	nn	_	_
12	？	_	NN	NN	_	13	top	_	_
13	是	_	VC	VC	_	8	dep	_	_
14	吗	_	SP	SP	_	13	dep	_	_
15	？	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 解-02, arg0, x4 / 王子)
(x2 / 解-02, arg1, x6 / 意)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 意, poss, x7 / 其)

Input(Some(Graph((multi-sentence :snt1 (解-02 :arg1 (意 :poss 其) :arg0 (王子 :mod 小-01) :polarity -) :snt2 (说道-01 :arg1 (multi-sentence :snt1 (啊 :mode interrogative) :snt2 (是-03 :mode interrogative)) :arg0 x4)),ArrayBuffer(Span(3,4,List(0),解,解-02,false), Span(5,6,List(1),意,意,false), Span(4,5,List(2),其,其,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false), Span(7,8,List(5),说道,说道-01,false), Span(10,11,List(6),啊,啊,false), Span(12,13,List(7),是,是-03,false)),Map(2 -> 其, 5 -> 说道-01, 7 -> 是-03, 1 -> 意, 4 -> 小-01, 6 -> 啊, 0 -> 解-02, 3 -> 王子),Map(x2 -> 解-02, x5 -> 小-01, x13 -> 是-03, x8 -> 说道-01, x7 -> 其, x4 -> 王子, x11 -> 啊, x6 -> 意))),[Ljava.lang.String;@677dbd89,Annotation([Ljava.lang.String;@fff25f1,[Ljava.lang.String;@c00fff0,[Ljava.lang.String;@263f04ca),Annotation([Ljava.lang.String;@2ca47471,[Ljava.lang.String;@5a021cb9,[Ledu.cmu.lti.nlp.amr.Dependency;@51768776),Annotation([Ljava.lang.String;@f31c0c6,[Ljava.lang.String;@b93aad,[Ljava.lang.String;@4a9419d7),Annotation([Ljava.lang.String;@2f3c6ac4,[Ljava.lang.String;@2e8ab815,[Ledu.cmu.lti.nlp.amr.Entity;@67af833b))
AMR:
(x11 / 啊, purpose, x13 / 是-03)
(x2 / 解-02, ARG6, x7 / 其)
(x2 / 解-02, value, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 意, poss, x7 / 其)
(x6 / 意, purpose, x13 / 是-03)
(x8 / 说道-01, time, x6 / 意)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 22,002 microseconds
Sentence: 爱 虚荣 的 人 向 小 王子 建议 道 ： “ 你 用 一 只 手 去 拍 另 一 只 手 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  你 => 你
Oracle Span 3:  另 => 另
Oracle Span 4:  小 => 小-01
Oracle Span 5:  建议 => 建议-01
Oracle Span 6:  手 => 手
Oracle Span 7:  手 => 手
Oracle Span 8:  拍 => 拍-02
Oracle Span 9:  爱 => 爱-01
Oracle Span 10:  王子 => 王子
Oracle Span 11:  用 => 用-01
Oracle Span 12:  虚荣 => 虚荣-01
NER Entity: (person :name (name :op "爱"))
Spans:
Span 3-4:  人 => 人
Span 11-12:  你 => 你
Span 18-19:  另 => 另
Span 5-6:  小 => 小-01
Span 7-8:  建议 => 建议-01
Span 15-16:  手 => 手
Span 21-22:  手 => 手
Span 17-18:  拍 => 拍-02
Span 0-1:  爱 => 爱-01
Span 6-7:  王子 => 王子
Span 12-13:  用 => 用-01
Span 1-2:  虚荣 => 虚荣-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 11-12:  你 => 你
Oracle Span 18-19:  另 => 另
Oracle Span 5-6:  小 => 小-01
Oracle Span 7-8:  建议 => 建议-01
Oracle Span 15-16:  手 => 手
Oracle Span 21-22:  手 => 手
Oracle Span 17-18:  拍 => 拍-02
Oracle Span 0-1:  爱 => 爱-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 12-13:  用 => 用-01
Oracle Span 1-2:  虚荣 => 虚荣-01

Dependencies:
1	爱	_	VV	VV	_	4	rcmod	_	_
2	虚荣	_	NN	NN	_	1	dobj	_	_
3	的	_	DEC	DEC	_	1	cpm	_	_
4	人	_	NN	NN	_	8	nsubj	_	_
5	向	_	P	P	_	8	prep	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	5	pobj	_	_
8	建议	_	VV	VV	_	0	root	_	_
9	道	_	VV	VV	_	8	ccomp	_	_
10	：	_	PU	PU	_	9	punct	_	_
11	“	_	PU	PU	_	17	punct	_	_
12	你	_	PN	PN	_	17	nsubj	_	_
13	用	_	P	P	_	17	prep	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	只	_	M	M	_	16	clf	_	_
16	手	_	NN	NN	_	13	pobj	_	_
17	去	_	VV	VV	_	9	ccomp	_	_
18	拍	_	NN	NN	_	22	nn	_	_
19	另	_	DT	DT	_	22	det	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	只	_	M	M	_	19	dep	_	_
22	手	_	NN	NN	_	17	dobj	_	_
23	。	_	PU	PU	_	8	punct	_	_
24	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 建议-01, arg0, x5 / 人)
(x0 / 建议-01, arg1, x10 / 用-01)
(x0 / 建议-01, arg2, x8 / 王子)
(x10 / 用-01, arg0, x11 / 你)
(x10 / 用-01, arg1, x12 / 手)
(x10 / 用-01, arg2, x15 / 拍-02)
(x15 / 拍-02, arg1, x17 / 手)
(x17 / 手, mod, x19 / 另)
(x6 / 爱-01, arg0, x5 / 人)
(x6 / 爱-01, arg1, x7 / 虚荣-01)
(x8 / 王子, mod, x9 / 小-01)

Input(Some(Graph((建议-01 :arg1 (用-01 :arg2 (拍-02 :arg1 (手 :quant 1 :mod 另) :arg0 x12) :arg1 (手 :quant 1) :arg0 你) :arg2 (王子 :mod 小-01) :arg0 (人 :arg0-of (爱-01 :arg1 虚荣-01))),ArrayBuffer(Span(7,8,List(0),建议,建议-01,false), Span(12,13,List(1),用,用-01,false), Span(17,18,List(2),拍,拍-02,false), Span(15,16,List(3),手,手,false), Span(18,19,List(4),另,另,false), Span(21,22,List(5),手,手,false), Span(11,12,List(6),你,你,false), Span(6,7,List(7),王子,王子,false), Span(5,6,List(8),小,小-01,false), Span(3,4,List(9),人,人,false), Span(0,1,List(10),爱,爱-01,false), Span(1,2,List(11),虚荣,虚荣-01,false)),Map(2 -> 拍-02, 5 -> 手, 8 -> 小-01, 7 -> 王子, 1 -> 用-01, 4 -> 另, 11 -> 虚荣-01, 6 -> 你, 9 -> 人, 0 -> 建议-01, 10 -> 爱-01, 3 -> 手),Map(x10 -> 用-01, x19 -> 另, x5 -> 人, x8 -> 王子, x12 -> 手, x15 -> 拍-02, x7 -> 虚荣-01, x11 -> 你, x6 -> 爱-01, x9 -> 小-01, x17 -> 手, x0 -> 建议-01))),[Ljava.lang.String;@d1f74b8,Annotation([Ljava.lang.String;@41394595,[Ljava.lang.String;@3a0807b7,[Ljava.lang.String;@21a5fd96),Annotation([Ljava.lang.String;@5769e7ae,[Ljava.lang.String;@5c77053b,[Ledu.cmu.lti.nlp.amr.Dependency;@26b894bd),Annotation([Ljava.lang.String;@287f94b1,[Ljava.lang.String;@30b34287,[Ljava.lang.String;@5489c777),Annotation([Ljava.lang.String;@3676ac27,[Ljava.lang.String;@62f87c44,[Ledu.cmu.lti.nlp.amr.Entity;@48f5bde6))
AMR:
(x0 / 建议-01, location, x5 / 人)
(x0 / 建议-01, location, x8 / 王子)
(x10 / 用-01, ARG3, x11 / 你)
(x10 / 用-01, prep-within, x0 / 建议-01)
(x10 / 用-01, quant, x17 / 手)
(x12 / 手, mod, x19 / 另)
(x15 / 拍-02, location, x17 / 手)
(x19 / 另, location, x15 / 拍-02)
(x5 / 人, location, x7 / 虚荣-01)
(x6 / 爱-01, prep-out, x7 / 虚荣-01)
(x8 / 王子, mod, x9 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.2.1.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 43,859 microseconds
Sentence: 小 王子 就 拍 起 巴掌 来 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  就 => 就
Oracle Span 3:  巴掌 => 巴掌
Oracle Span 4:  拍 => 拍-02
Oracle Span 5:  王子 => 王子
Spans:
Span 0-1:  小 => 小-01
Span 2-3:  就 => 就
Span 5-6:  巴掌 => 巴掌
Span 3-4:  拍 => 拍-02
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  就 => 就
Oracle Span 5-6:  巴掌 => 巴掌
Oracle Span 3-4:  拍 => 拍-02
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	就	_	P	P	_	6	prep	_	_
4	拍	_	NN	NN	_	5	lobj	_	_
5	起	_	LC	LC	_	3	plmod	_	_
6	巴掌	_	VV	VV	_	0	root	_	_
7	来	_	VV	VV	_	6	comod	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 拍-02, arg0, x3 / 王子)
(x0 / 拍-02, arg1, x5 / 巴掌)
(x0 / 拍-02, manner, x2 / 就)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((拍-02 :arg1 巴掌 :arg0 (王子 :mod 小-01) :manner 就),ArrayBuffer(Span(3,4,List(0),拍,拍-02,false), Span(5,6,List(1),巴掌,巴掌,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(2,3,List(4),就,就,false)),Map(2 -> 王子, 1 -> 巴掌, 4 -> 就, 0 -> 拍-02, 3 -> 小-01),Map(x2 -> 就, x5 -> 巴掌, x4 -> 小-01, x3 -> 王子, x0 -> 拍-02))),[Ljava.lang.String;@525d79f0,Annotation([Ljava.lang.String;@5149f008,[Ljava.lang.String;@7072bc39,[Ljava.lang.String;@158d255c),Annotation([Ljava.lang.String;@2ca65ce4,[Ljava.lang.String;@327120c8,[Ledu.cmu.lti.nlp.amr.Dependency;@5707c1cb),Annotation([Ljava.lang.String;@2b5cb9b2,[Ljava.lang.String;@35038141,[Ljava.lang.String;@ecf9049),Annotation([Ljava.lang.String;@672f11c2,[Ljava.lang.String;@2970a5bc,[Ledu.cmu.lti.nlp.amr.Entity;@50305a))
AMR:
(x0 / 拍-02, ARG0, x3 / 王子)
(x0 / 拍-02, manner, x2 / 就)
(x0 / 拍-02, time, x5 / 巴掌)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,670 microseconds
Sentence: 这 位 爱 虚荣 者 就 谦逊 地 举起 帽子 向 小 王子 致意 。

Oracle Span 1:  举起 => 举起-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  就 => 就
Oracle Span 4:  帽子 => 帽子
Oracle Span 5:  爱 => (person :arg0-of 爱-01)
Oracle Span 6:  王子 => 王子
Oracle Span 7:  致意 => 致意-01
Oracle Span 8:  虚荣 => 虚荣
Oracle Span 9:  谦逊 => 谦逊
Oracle Span 10:  这 => 这
Spans:
Span 8-9:  举起 => 举起-01
Span 11-12:  小 => 小-01
Span 5-6:  就 => 就
Span 9-10:  帽子 => 帽子
Span 2-3:  爱 => (person :arg0-of 爱-01)
Span 12-13:  王子 => 王子
Span 13-14:  致意 => 致意-01
Span 3-4:  虚荣 => 虚荣
Span 6-7:  谦逊 => 谦逊
Span 0-1:  这 => 这

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 心想 ： “ 这 比 访问 那 位 国王 有趣 。 ”

Oracle Span 1:  国王 => 国王
Oracle Span 2:  小 => 小-01
Oracle Span 3:  有趣 => 有趣-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  访问 => 访问-01
Oracle Span 6:  这 => 这
Oracle Span 7:  那 => 那
Spans:
Span 10-11:  国王 => 国王
Span 0-1:  小 => 小-01
Span 11-12:  有趣 => 有趣-01
Span 1-2:  王子 => 王子
Span 7-8:  访问 => 访问-01
Span 5-6:  这 => 这
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  国王 => 国王
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  有趣 => 有趣-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  访问 => 访问-01
Oracle Span 5-6:  这 => 这
Oracle Span 8-9:  那 => 那

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	心想	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	12	punct	_	_
6	这	_	PN	PN	_	12	nsubj	_	_
7	比	_	P	P	_	12	prep	_	_
8	访问	_	NN	NN	_	11	nn	_	_
9	那	_	DT	DT	_	11	det	_	_
10	位	_	M	M	_	9	clf	_	_
11	国王	_	NN	NN	_	7	pobj	_	_
12	有趣	_	VV	VV	_	3	ccomp	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 有趣-01, arg0, x12 / 这)
(x12 / 这, compared-to, x23 / 访问-01)
(x2 / 王子, mod, x3 / 小-01)
(x23 / 访问-01, arg1, x24 / 国王)
(x24 / 国王, mod, x25 / 那)

Input(Some(Graph((想-01 :arg0 (王子 :mod 小-01) :arg1 (有趣-01 :arg0 (这 :compared-to (访问-01 :arg1 (国王 :mod 那))))),ArrayBuffer(Span(1,2,List(0),王子,王子,false), Span(0,1,List(1),小,小-01,false), Span(11,12,List(2),有趣,有趣-01,false), Span(5,6,List(3),这,这,false), Span(7,8,List(4),访问,访问-01,false), Span(10,11,List(5),国王,国王,false), Span(8,9,List(6),那,那,false)),Map(2 -> 有趣-01, 5 -> 国王, 1 -> 小-01, 4 -> 访问-01, 6 -> 那, 0 -> 王子, 3 -> 这),Map(x25 -> 那, x2 -> 王子, x12 -> 这, x24 -> 国王, x23 -> 访问-01, x11 -> 有趣-01, x3 -> 小-01))),[Ljava.lang.String;@6d511b5f,Annotation([Ljava.lang.String;@41200e0c,[Ljava.lang.String;@40f33492,[Ljava.lang.String;@4fbdc0f0),Annotation([Ljava.lang.String;@2ad3a1bb,[Ljava.lang.String;@6bc28a83,[Ledu.cmu.lti.nlp.amr.Dependency;@324c64cd),Annotation([Ljava.lang.String;@13579834,[Ljava.lang.String;@24be2d9c,[Ljava.lang.String;@5bd73d1a),Annotation([Ljava.lang.String;@aec50a1,[Ljava.lang.String;@2555fff0,[Ledu.cmu.lti.nlp.amr.Entity;@70d2e40b))
AMR:
(x11 / 有趣-01, value, x24 / 国王)
(x2 / 王子, mod, x3 / 小-01)
(x23 / 访问-01, ARG6, x25 / 那)
(x23 / 访问-01, mod, x12 / 这)
(x23 / 访问-01, purpose, x2 / 王子)
(x24 / 国王, mod, x25 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
Decoded in 14,392 microseconds
Sentence: 于是 他 又 拍 起 巴掌 来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  巴掌 => 巴掌
Oracle Span 4:  拍 => 拍-02
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 5-6:  巴掌 => 巴掌
Span 3-4:  拍 => 拍-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 5-6:  巴掌 => 巴掌
Oracle Span 3-4:  拍 => 拍-02

Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	拍	_	NN	NN	_	5	lobj	_	_
5	起	_	LC	LC	_	6	loc	_	_
6	巴掌	_	VV	VV	_	0	root	_	_
7	来	_	VV	VV	_	6	ccomp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 拍-02, arg0, x4 / 他)
(x2 / 拍-02, arg1, x5 / 巴掌)
(x2 / 拍-02, manner, x3 / 又)

Input(Some(Graph((temporal :arg2 (拍-02 :arg1 巴掌 :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),拍,拍-02,false), Span(5,6,List(1),巴掌,巴掌,false), Span(1,2,List(2),他,他,false), Span(2,3,List(3),又,又,false)),Map(2 -> 他, 1 -> 巴掌, 0 -> 拍-02, 3 -> 又),Map(x2 -> 拍-02, x5 -> 巴掌, x4 -> 他, x3 -> 又))),[Ljava.lang.String;@120f38e6,Annotation([Ljava.lang.String;@7a0e1b5e,[Ljava.lang.String;@702ed190,[Ljava.lang.String;@173b9122),Annotation([Ljava.lang.String;@7c18432b,[Ljava.lang.String;@7646731d,[Ledu.cmu.lti.nlp.amr.Dependency;@70e29e14),Annotation([Ljava.lang.String;@3b1bb3ab,[Ljava.lang.String;@5a4bef8,[Ljava.lang.String;@40bffbca),Annotation([Ljava.lang.String;@2449cff7,[Ljava.lang.String;@42a9a63e,[Ledu.cmu.lti.nlp.amr.Entity;@62da83ed))
AMR:
(x2 / 拍-02, ARG5, x5 / 巴掌)
(x2 / 拍-02, manner, x3 / 又)
(x2 / 拍-02, time, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,320 microseconds
Sentence: 爱 虚荣者 又 举起 帽子 来 向 他 致意 。

Oracle Span 1:  举起 => 举起-01
Oracle Span 2:  他 => 他
Oracle Span 3:  又 => 又
Oracle Span 4:  帽子 => 帽子
Oracle Span 5:  来 => 来-05
Oracle Span 6:  爱 => (person :arg0-of 爱-01)
Oracle Span 7:  致意 => 致意-01
Spans:
Span 3-4:  举起 => 举起-01
Span 7-8:  他 => 他
Span 2-3:  又 => 又
Span 4-5:  帽子 => 帽子
Span 5-6:  来 => 来-05
Span 0-1:  爱 => (person :arg0-of 爱-01)
Span 8-9:  致意 => 致意-01

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 这样 做 了 五 分钟 ， 之后 对 这 种 单调 的 把戏 有点 厌倦 了 ，

Oracle Span 1:  做 => 做-01
Oracle Span 2:  分钟 => 分钟
Oracle Span 3:  单调 => 单调-01
Oracle Span 4:  厌倦 => 厌倦-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  把戏 => 把戏
Oracle Span 7:  有点 => 有点
Oracle Span 8:  王子 => 王子
Oracle Span 9:  这 => 这
Oracle Span 10:  这样 => 这样
Spans:
Span 3-4:  做 => 做-01
Span 6-7:  分钟 => 分钟
Span 12-13:  单调 => 单调-01
Span 16-17:  厌倦 => 厌倦-01
Span 0-1:  小 => 小-01
Span 14-15:  把戏 => 把戏
Span 15-16:  有点 => 有点
Span 1-2:  王子 => 王子
Span 10-11:  这 => 这
Span 2-3:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  做 => 做-01
Oracle Span 6-7:  分钟 => 分钟
Oracle Span 12-13:  单调 => 单调-01
Oracle Span 16-17:  厌倦 => 厌倦-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 14-15:  把戏 => 把戏
Oracle Span 15-16:  有点 => 有点
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  这 => 这
Oracle Span 2-3:  这样 => 这样

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	这样	_	AD	AD	_	4	advmod	_	_
4	做	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	五	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	4	dep	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	之后	_	AD	AD	_	17	advmod	_	_
10	对	_	P	P	_	15	assmod	_	_
11	这	_	DT	DT	_	13	det	_	_
12	种	_	M	M	_	11	clf	_	_
13	单调	_	NN	NN	_	10	pobj	_	_
14	的	_	DEG	DEG	_	10	assm	_	_
15	把戏	_	NN	NN	_	17	nsubj	_	_
16	有点	_	AD	AD	_	17	advmod	_	_
17	厌倦	_	VV	VV	_	4	conj	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x11 / 把戏, mod, x12 / 这)
(x11 / 把戏, mod, x13 / 单调-01)
(x2 / 做-01, arg0, x3 / 王子)
(x2 / 做-01, manner, x5 / 这样)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 厌倦-01, arg1, x11 / 把戏)
(x8 / 厌倦-01, degree, x9 / 有点)

Input(Some(Graph((temporal :arg1 (做-01 :duration (temporal-entity :quant 5 :unit 分钟) :manner 这样 :arg0 (王子 :mod 小-01)) :arg2 (厌倦-01 :arg1 (把戏 :mod 单调-01 :mod 这) :arg0 x3 :degree 有点)),ArrayBuffer(Span(3,4,List(0),做,做-01,false), Span(6,7,List(1),分钟,分钟,false), Span(2,3,List(2),这样,这样,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false), Span(16,17,List(5),厌倦,厌倦-01,false), Span(14,15,List(6),把戏,把戏,false), Span(12,13,List(7),单调,单调-01,false), Span(10,11,List(8),这,这,false), Span(15,16,List(9),有点,有点,false)),Map(2 -> 这样, 5 -> 厌倦-01, 8 -> 这, 7 -> 单调-01, 1 -> 分钟, 4 -> 小-01, 6 -> 把戏, 9 -> 有点, 0 -> 做-01, 3 -> 王子),Map(x2 -> 做-01, x5 -> 这样, x13 -> 单调-01, x8 -> 厌倦-01, x12 -> 这, x18 -> 分钟, x4 -> 小-01, x11 -> 把戏, x3 -> 王子, x9 -> 有点))),[Ljava.lang.String;@37d80fe7,Annotation([Ljava.lang.String;@384fc774,[Ljava.lang.String;@e3cee7b,[Ljava.lang.String;@71e9a896),Annotation([Ljava.lang.String;@6b9267b,[Ljava.lang.String;@408b35bf,[Ledu.cmu.lti.nlp.amr.Dependency;@29ad44e3),Annotation([Ljava.lang.String;@15bcf458,[Ljava.lang.String;@5af9926a,[Ljava.lang.String;@43c67247),Annotation([Ljava.lang.String;@fac80,[Ljava.lang.String;@726386ed,[Ledu.cmu.lti.nlp.amr.Entity;@649f2009))
AMR:
(x11 / 把戏, mod, x12 / 这)
(x11 / 把戏, mod, x13 / 单调-01)
(x18 / 分钟, age, x5 / 这样)
(x2 / 做-01, ARG3, x4 / 小-01)
(x2 / 做-01, domain, x8 / 厌倦-01)
(x2 / 做-01, manner, x5 / 这样)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 厌倦-01, degree, x9 / 有点)
(x8 / 厌倦-01, mode, x11 / 把戏)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 32,607 microseconds
Sentence: 说道 ： “ 要 想 叫 你 的 帽子 掉 下来 ， 该 怎么 做 呢 ？ ”

Oracle Span 1:  下来 => 下来-01
Oracle Span 2:  你 => 你
Oracle Span 3:  做 => 做-01
Oracle Span 4:  叫 => 叫-06
Oracle Span 5:  帽子 => 帽子
Oracle Span 6:  想 => 想-02
Oracle Span 7:  掉 => 掉-01
Oracle Span 8:  要 => 要-02
Oracle Span 9:  该 => 该-01
Oracle Span 10:  说道 => 说道-01
Spans:
Span 10-11:  下来 => 下来-01
Span 6-7:  你 => 你
Span 14-15:  做 => 做-01
Span 5-6:  叫 => 叫-06
Span 8-9:  帽子 => 帽子
Span 4-5:  想 => 想-02
Span 9-10:  掉 => 掉-01
Span 3-4:  要 => 要-02
Span 12-13:  该 => 该-01
Span 0-1:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  下来 => 下来-01
Oracle Span 6-7:  你 => 你
Oracle Span 14-15:  做 => 做-01
Oracle Span 5-6:  叫 => 叫-06
Oracle Span 8-9:  帽子 => 帽子
Oracle Span 4-5:  想 => 想-02
Oracle Span 9-10:  掉 => 掉-01
Oracle Span 3-4:  要 => 要-02
Oracle Span 12-13:  该 => 该-01
Oracle Span 0-1:  说道 => 说道-01

Dependencies:
1	说道	_	VV	VV	_	15	dep	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	5	punct	_	_
4	要	_	VV	VV	_	5	dep	_	_
5	想	_	VV	VV	_	1	ccomp	_	_
6	叫	_	VV	VV	_	5	ccomp	_	_
7	你	_	PN	PN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	帽子	_	NN	NN	_	10	nn	_	_
10	掉	_	NN	NN	_	6	dobj	_	_
11	下来	_	VV	VV	_	5	dep	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	该	_	DT	DT	_	15	dep	_	_
14	怎么	_	AD	AD	_	15	advmod	_	_
15	做	_	VV	VV	_	0	root	_	_
16	呢	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	15	punct	_	_
18	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg2, x12 / 该-01)
(x12 / 该-01, arg0, x13 / 做-01)
(x3 / 要-02, arg0, x4 / 想-02)
(x4 / 想-02, arg1, x5 / 叫-06)
(x5 / 叫-06, arg1, x6 / 帽子)
(x6 / 帽子, poss, x7 / 你)
(x9 / 掉-01, arg1, x6 / 帽子)
(x9 / 掉-01, direction, x11 / 下来-01)

Input(Some(Graph((说道-01 :mode interrogative :arg2 (该-01 :arg0 (做-01 :manner amr-unknown)) :arg1 (condition :arg1 (要-02 :arg0 (想-02 :arg1 (叫-06 :arg1 (帽子 :arg1-of (掉-01 :direction 下来-01) :poss 你)))))),ArrayBuffer(Span(0,1,List(0),说道,说道-01,false), Span(12,13,List(1),该,该-01,false), Span(14,15,List(2),做,做-01,false), Span(3,4,List(3),要,要-02,false), Span(4,5,List(4),想,想-02,false), Span(5,6,List(5),叫,叫-06,false), Span(8,9,List(6),帽子,帽子,false), Span(9,10,List(7),掉,掉-01,false), Span(10,11,List(8),下来,下来-01,false), Span(6,7,List(9),你,你,false)),Map(2 -> 做-01, 5 -> 叫-06, 8 -> 下来-01, 7 -> 掉-01, 1 -> 该-01, 4 -> 想-02, 6 -> 帽子, 9 -> 你, 0 -> 说道-01, 3 -> 要-02),Map(x5 -> 叫-06, x13 -> 做-01, x12 -> 该-01, x7 -> 你, x4 -> 想-02, x11 -> 下来-01, x3 -> 要-02, x6 -> 帽子, x9 -> 掉-01, x0 -> 说道-01))),[Ljava.lang.String;@14bb2297,Annotation([Ljava.lang.String;@69adf72c,[Ljava.lang.String;@797501a,[Ljava.lang.String;@1a15b789),Annotation([Ljava.lang.String;@57f791c6,[Ljava.lang.String;@51650883,[Ledu.cmu.lti.nlp.amr.Dependency;@6c4f9535),Annotation([Ljava.lang.String;@5bd1ceca,[Ljava.lang.String;@30c31dd7,[Ljava.lang.String;@499b2a5c),Annotation([Ljava.lang.String;@596df867,[Ljava.lang.String;@c1fca1e,[Ledu.cmu.lti.nlp.amr.Entity;@241a53ef))
AMR:
(x0 / 说道-01, manner, x3 / 要-02)
(x12 / 该-01, conj-as-if, x11 / 下来-01)
(x12 / 该-01, source, x13 / 做-01)
(x4 / 想-02, manner, x3 / 要-02)
(x4 / 想-02, manner, x5 / 叫-06)
(x5 / 叫-06, source, x6 / 帽子)
(x6 / 帽子, poss, x7 / 你)
(x9 / 掉-01, direction, x11 / 下来-01)
(x9 / 掉-01, manner, x6 / 帽子)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.0
Decoded in 28,162 microseconds
Sentence: 可 这 回 爱 虚荣 者 听 不 进 他 的 话 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  听 => 听-01
Oracle Span 3:  爱 => 爱-01
Oracle Span 4:  者 => 者
Oracle Span 5:  虚荣 => 虚荣
Oracle Span 6:  话 => 话
Spans:
Span 9-10:  他 => 他
Span 6-7:  听 => 听-01
Span 3-4:  爱 => 爱-01
Span 5-6:  者 => 者
Span 4-5:  虚荣 => 虚荣
Span 11-12:  话 => 话

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 6-7:  听 => 听-01
Oracle Span 3-4:  爱 => 爱-01
Oracle Span 5-6:  者 => 者
Oracle Span 4-5:  虚荣 => 虚荣
Oracle Span 11-12:  话 => 话

Dependencies:
1	可	_	VV	VV	_	4	mmod	_	_
2	这	_	DT	DT	_	4	dep	_	_
3	回	_	M	M	_	2	clf	_	_
4	爱	_	VV	VV	_	0	root	_	_
5	虚荣	_	NN	NN	_	6	nn	_	_
6	者	_	NN	NN	_	4	dobj	_	_
7	听	_	VV	VV	_	4	conj	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	进	_	VV	VV	_	4	dep	_	_
10	他	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	话	_	NN	NN	_	9	dobj	_	_
13	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x12 / 听-01, arg0, x15 / 者)
(x12 / 听-01, arg1, x18 / 话)
(x16 / 爱-01, arg0, x15 / 者)
(x16 / 爱-01, arg1, x17 / 虚荣)
(x18 / 话, poss, x19 / 他)

Input(Some(Graph((contrast :arg2 (possible :arg0 (听-01 :time 这回 :arg1 (话 :poss 他) :arg0 (者 :arg0-of (爱-01 :arg1 虚荣))) :polarity -)),ArrayBuffer(Span(6,7,List(0),听,听-01,false), Span(11,12,List(1),话,话,false), Span(9,10,List(2),他,他,false), Span(5,6,List(3),者,者,false), Span(3,4,List(4),爱,爱-01,false), Span(4,5,List(5),虚荣,虚荣,false)),Map(2 -> 他, 5 -> 虚荣, 1 -> 话, 4 -> 爱-01, 0 -> 听-01, 3 -> 者),Map(x16 -> 爱-01, x19 -> 他, x12 -> 听-01, x15 -> 者, x18 -> 话, x17 -> 虚荣))),[Ljava.lang.String;@344344fa,Annotation([Ljava.lang.String;@2db2cd5,[Ljava.lang.String;@70e659aa,[Ljava.lang.String;@615f972),Annotation([Ljava.lang.String;@285f09de,[Ljava.lang.String;@73393584,[Ledu.cmu.lti.nlp.amr.Dependency;@31500940),Annotation([Ljava.lang.String;@1827a871,[Ljava.lang.String;@48e64352,[Ljava.lang.String;@7249dadf),Annotation([Ljava.lang.String;@4362d7df,[Ljava.lang.String;@66238be2,[Ledu.cmu.lti.nlp.amr.Entity;@1c25b8a7))
AMR:
(x12 / 听-01, manner, x15 / 者)
(x12 / 听-01, manner, x18 / 话)
(x16 / 爱-01, op, x15 / 者)
(x16 / 爱-01, snt3, x17 / 虚荣)
(x18 / 话, poss, x19 / 他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
Decoded in 13,734 microseconds
Sentence: 因为 凡是 爱 虚荣 的 人 只 听 得 进 赞美 的 话 。

Oracle Span 1:  人 => 人
Oracle Span 2:  凡是 => 凡是
Oracle Span 3:  只 => 只
Oracle Span 4:  听 => 听-01
Oracle Span 5:  爱 => 爱-01
Oracle Span 6:  虚荣 => 虚荣
Oracle Span 7:  话 => 话
Oracle Span 8:  赞美 => 赞美
Spans:
Span 5-6:  人 => 人
Span 1-2:  凡是 => 凡是
Span 6-7:  只 => 只
Span 7-8:  听 => 听-01
Span 2-3:  爱 => 爱-01
Span 3-4:  虚荣 => 虚荣
Span 12-13:  话 => 话
Span 10-11:  赞美 => 赞美

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 1-2:  凡是 => 凡是
Oracle Span 6-7:  只 => 只
Oracle Span 7-8:  听 => 听-01
Oracle Span 2-3:  爱 => 爱-01
Oracle Span 3-4:  虚荣 => 虚荣
Oracle Span 12-13:  话 => 话
Oracle Span 10-11:  赞美 => 赞美

Dependencies:
1	因为	_	P	P	_	0	root	_	_
2	凡是	_	AD	AD	_	6	advmod	_	_
3	爱	_	VV	VV	_	6	rcmod	_	_
4	虚荣	_	NN	NN	_	3	dobj	_	_
5	的	_	DEC	DEC	_	3	cpm	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	听	_	VV	VV	_	1	pccomp	_	_
9	得	_	VV	VV	_	10	mmod	_	_
10	进	_	VV	VV	_	13	rcmod	_	_
11	赞美	_	NN	NN	_	10	dobj	_	_
12	的	_	DEC	DEC	_	10	cpm	_	_
13	话	_	NN	NN	_	8	dobj	_	_
14	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x3 / 听-01, arg0, x4 / 人)
(x3 / 听-01, arg1, x9 / 话)
(x3 / 听-01, manner, x7 / 只)
(x4 / 人, mod, x11 / 凡是)
(x5 / 爱-01, arg0, x4 / 人)
(x5 / 爱-01, arg1, x6 / 虚荣)
(x9 / 话, mod, x10 / 赞美)

Input(Some(Graph((cause-01 :arg0 (听-01 :arg1 (话 :mod 赞美) :manner 只 :arg0 (人 :mod 凡是 :arg0-of (爱-01 :arg1 虚荣)))),ArrayBuffer(Span(7,8,List(0),听,听-01,false), Span(12,13,List(1),话,话,false), Span(10,11,List(2),赞美,赞美,false), Span(6,7,List(3),只,只,false), Span(5,6,List(4),人,人,false), Span(1,2,List(5),凡是,凡是,false), Span(2,3,List(6),爱,爱-01,false), Span(3,4,List(7),虚荣,虚荣,false)),Map(2 -> 赞美, 5 -> 凡是, 7 -> 虚荣, 1 -> 话, 4 -> 人, 6 -> 爱-01, 0 -> 听-01, 3 -> 只),Map(x10 -> 赞美, x5 -> 爱-01, x7 -> 只, x4 -> 人, x11 -> 凡是, x3 -> 听-01, x6 -> 虚荣, x9 -> 话))),[Ljava.lang.String;@200606de,Annotation([Ljava.lang.String;@750fe12e,[Ljava.lang.String;@f8908f6,[Ljava.lang.String;@3e587920),Annotation([Ljava.lang.String;@2ef8a8c3,[Ljava.lang.String;@24f43aa3,[Ledu.cmu.lti.nlp.amr.Dependency;@63fd4873),Annotation([Ljava.lang.String;@1e11bc55,[Ljava.lang.String;@7544a1e4,[Ljava.lang.String;@70e0accd),Annotation([Ljava.lang.String;@7957dc72,[Ljava.lang.String;@6ab72419,[Ledu.cmu.lti.nlp.amr.Entity;@3aacf32a))
AMR:
(x3 / 听-01, location, x4 / 人)
(x3 / 听-01, manner, x7 / 只)
(x3 / 听-01, subset, x9 / 话)
(x4 / 人, mod, x11 / 凡是)
(x5 / 爱-01, quant, x6 / 虚荣)
(x5 / 爱-01, value, x4 / 人)
(x9 / 话, mod, x10 / 赞美)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 20,154 microseconds
Sentence: 他 问 小 王子 道 ： “ 你 真的 钦佩 我 吗 ？ ”

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  小 => 小-01
Oracle Span 4:  我 => 我
Oracle Span 5:  王子 => 王子
Oracle Span 6:  真的 => 真的-01
Oracle Span 7:  钦佩 => 钦佩-01
Oracle Span 8:  问 => 问-01
Spans:
Span 0-1:  他 => 他
Span 7-8:  你 => 你
Span 2-3:  小 => 小-01
Span 10-11:  我 => 我
Span 3-4:  王子 => 王子
Span 8-9:  真的 => 真的-01
Span 9-10:  钦佩 => 钦佩-01
Span 1-2:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  你 => 你
Oracle Span 2-3:  小 => 小-01
Oracle Span 10-11:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 8-9:  真的 => 真的-01
Oracle Span 9-10:  钦佩 => 钦佩-01
Oracle Span 1-2:  问 => 问-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	问	_	VV	VV	_	0	root	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	dobj	_	_
5	道	_	VV	VV	_	2	dep	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	你	_	PN	PN	_	10	nsubj	_	_
9	真的	_	NN	NN	_	10	dep	_	_
10	钦佩	_	VV	VV	_	5	ccomp	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	吗	_	SP	SP	_	2	dep	_	_
13	？	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 他)
(x0 / 问-01, arg1, x3 / 钦佩-01)
(x0 / 问-01, arg2, x7 / 王子)
(x3 / 钦佩-01, arg0, x4 / 你)
(x3 / 钦佩-01, arg1, x5 / 我)
(x3 / 钦佩-01, manner, x6 / 真的-01)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((问-01 :arg2 (王子 :mod 小-01) :arg1 (钦佩-01 :mode interrogative :manner 真的-01 :arg1 我 :arg0 你) :arg0 他),ArrayBuffer(Span(1,2,List(0),问,问-01,false), Span(3,4,List(1),王子,王子,false), Span(2,3,List(2),小,小-01,false), Span(9,10,List(3),钦佩,钦佩-01,false), Span(8,9,List(4),真的,真的-01,false), Span(10,11,List(5),我,我,false), Span(7,8,List(6),你,你,false), Span(0,1,List(7),他,他,false)),Map(2 -> 小-01, 5 -> 我, 7 -> 他, 1 -> 王子, 4 -> 真的-01, 6 -> 你, 0 -> 问-01, 3 -> 钦佩-01),Map(x2 -> 他, x5 -> 我, x8 -> 小-01, x7 -> 王子, x4 -> 你, x3 -> 钦佩-01, x6 -> 真的-01, x0 -> 问-01))),[Ljava.lang.String;@4fdfa676,Annotation([Ljava.lang.String;@82c57b3,[Ljava.lang.String;@5be82d43,[Ljava.lang.String;@600b0b7),Annotation([Ljava.lang.String;@345e5a17,[Ljava.lang.String;@5ea502e0,[Ledu.cmu.lti.nlp.amr.Dependency;@443dbe42),Annotation([Ljava.lang.String;@473b3b7a,[Ljava.lang.String;@1734f68,[Ljava.lang.String;@77b7ffa4),Annotation([Ljava.lang.String;@5ed190be,[Ljava.lang.String;@402f80f5,[Ledu.cmu.lti.nlp.amr.Entity;@5bbc9f97))
AMR:
(x0 / 问-01, manner, x2 / 他)
(x0 / 问-01, prep-along-with, x8 / 小-01)
(x3 / 钦佩-01, ARG3, x5 / 我)
(x3 / 钦佩-01, manner, x0 / 问-01)
(x3 / 钦佩-01, manner, x6 / 真的-01)
(x6 / 真的-01, manner, x4 / 你)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 21,674 microseconds
Sentence: “ 钦佩 是 什么 意思 ？ ”

Oracle Span 1:  钦佩 => 钦佩
Spans:
Span 1-2:  钦佩 => 钦佩

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  钦佩 => 钦佩

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	钦佩	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	意思	_	NN	NN	_	3	attr	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 钦佩 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(1,2,List(0),钦佩,钦佩,false)),Map(0 -> 钦佩),Map(x8 -> 钦佩))),[Ljava.lang.String;@133e019b,Annotation([Ljava.lang.String;@41382722,[Ljava.lang.String;@7dac3fd8,[Ljava.lang.String;@425357dd),Annotation([Ljava.lang.String;@2102a4d5,[Ljava.lang.String;@210386e0,[Ledu.cmu.lti.nlp.amr.Dependency;@3d4d3fe7),Annotation([Ljava.lang.String;@65f87a2c,[Ljava.lang.String;@51684e4a,[Ljava.lang.String;@6ce1f601),Annotation([Ljava.lang.String;@38875e7d,[Ljava.lang.String;@1e886a5b,[Ledu.cmu.lti.nlp.amr.Entity;@d816dde))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,901 microseconds
Sentence: “ 钦佩 么 ， 就 是 承认 我 是 星球 上 最 美 的 人 ， 服饰 最 好 的 人 ， 最 富有 的 人 ， 最 聪明 的 人 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  人 => 人
Oracle Span 5:  好 => 好-01
Oracle Span 6:  富有 => 富有
Oracle Span 7:  就 => 就
Oracle Span 8:  我 => 我
Oracle Span 9:  承认 => 承认-02
Oracle Span 10:  星球 => 星球
Oracle Span 11:  最 => 最
Oracle Span 12:  最 => 最
Oracle Span 13:  最 => 最
Oracle Span 14:  最 => 最
Oracle Span 15:  服饰 => 服饰
Oracle Span 16:  美 => 美-01
Oracle Span 17:  聪明 => 聪明-01
Oracle Span 18:  钦佩 => 钦佩
Spans:
Span 14-15:  人 => 人
Span 20-21:  人 => 人
Span 25-26:  人 => 人
Span 30-31:  人 => 人
Span 18-19:  好 => 好-01
Span 23-24:  富有 => 富有
Span 4-5:  就 => 就
Span 7-8:  我 => 我
Span 6-7:  承认 => 承认-02
Span 9-10:  星球 => 星球
Span 11-12:  最 => 最
Span 17-18:  最 => 最
Span 22-23:  最 => 最
Span 27-28:  最 => 最
Span 16-17:  服饰 => 服饰
Span 12-13:  美 => 美-01
Span 28-29:  聪明 => 聪明-01
Span 1-2:  钦佩 => 钦佩

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 14-15:  人 => 人
Oracle Span 20-21:  人 => 人
Oracle Span 25-26:  人 => 人
Oracle Span 30-31:  人 => 人
Oracle Span 18-19:  好 => 好-01
Oracle Span 23-24:  富有 => 富有
Oracle Span 4-5:  就 => 就
Oracle Span 7-8:  我 => 我
Oracle Span 6-7:  承认 => 承认-02
Oracle Span 9-10:  星球 => 星球
Oracle Span 11-12:  最 => 最
Oracle Span 17-18:  最 => 最
Oracle Span 22-23:  最 => 最
Oracle Span 27-28:  最 => 最
Oracle Span 16-17:  服饰 => 服饰
Oracle Span 12-13:  美 => 美-01
Oracle Span 28-29:  聪明 => 聪明-01
Oracle Span 1-2:  钦佩 => 钦佩

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	钦佩	_	AD	AD	_	3	advmod	_	_
3	么	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	3	ccomp	_	_
7	承认	_	VV	VV	_	31	rcmod	_	_
8	我	_	PN	PN	_	9	top	_	_
9	是	_	VC	VC	_	7	ccomp	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	15	dep	_	_
12	最	_	AD	AD	_	13	advmod	_	_
13	美	_	JJ	JJ	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	人	_	NN	NN	_	9	attr	_	_
16	,	_	PU	PU	_	9	punct	_	_
17	服饰	_	NN	NN	_	19	nsubj	_	_
18	最	_	AD	AD	_	19	advmod	_	_
19	好	_	VA	VA	_	21	rcmod	_	_
20	的	_	DEC	DEC	_	19	cpm	_	_
21	人	_	NN	NN	_	29	nsubj	_	_
22	,	_	PU	PU	_	29	punct	_	_
23	最	_	AD	AD	_	24	advmod	_	_
24	富有	_	VV	VV	_	26	rcmod	_	_
25	的	_	DEC	DEC	_	24	cpm	_	_
26	人	_	NN	NN	_	29	nsubj	_	_
27	,	_	PU	PU	_	29	punct	_	_
28	最	_	AD	AD	_	29	advmod	_	_
29	聪明	_	VV	VV	_	9	conj	_	_
30	的	_	DEC	DEC	_	7	cpm	_	_
31	人	_	NN	NN	_	6	attr	_	_
32	。	_	PU	PU	_	3	punct	_	_
33	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x42 / 承认-02, domain, x62 / 钦佩)
(x42 / 承认-02, manner, x63 / 就)
(x44 / 人, domain, x48 / 我)
(x44 / 人, location, x47 / 星球)
(x44 / 人, mod, x45 / 美-01)
(x45 / 美-01, degree, x46 / 最)
(x50 / 服饰, mod, x51 / 好-01)
(x50 / 服饰, poss, x49 / 人)
(x51 / 好-01, degree, x52 / 最)
(x54 / 人, mod, x55 / 富有)
(x55 / 富有, degree, x56 / 最)
(x58 / 人, mod, x59 / 聪明-01)
(x59 / 聪明-01, degree, x60 / 最)

Input(Some(Graph((say :arg1 (承认-02 :manner 就 :domain 钦佩 :arg1 (and :op (人 :domain 我 :location 星球 :mod (美-01 :degree 最)) :op (人 :domain x48 :poss-of (服饰 :mod (好-01 :degree 最))) :op (人 :domain x48 :mod (富有 :degree 最)) :op (人 :domain x48 :mod (聪明-01 :degree 最))))),ArrayBuffer(Span(6,7,List(0),承认,承认-02,false), Span(4,5,List(1),就,就,false), Span(1,2,List(2),钦佩,钦佩,false), Span(14,15,List(3),人,人,false), Span(7,8,List(4),我,我,false), Span(9,10,List(5),星球,星球,false), Span(12,13,List(6),美,美-01,false), Span(11,12,List(7),最,最,false), Span(20,21,List(8),人,人,false), Span(16,17,List(9),服饰,服饰,false), Span(18,19,List(10),好,好-01,false), Span(17,18,List(11),最,最,false), Span(25,26,List(12),人,人,false), Span(23,24,List(13),富有,富有,false), Span(22,23,List(14),最,最,false), Span(30,31,List(15),人,人,false), Span(28,29,List(16),聪明,聪明-01,false), Span(27,28,List(17),最,最,false)),Map(2 -> 钦佩, 5 -> 星球, 12 -> 人, 15 -> 人, 8 -> 人, 7 -> 最, 17 -> 最, 1 -> 就, 4 -> 我, 11 -> 最, 14 -> 最, 6 -> 美-01, 9 -> 服饰, 0 -> 承认-02, 16 -> 聪明-01, 10 -> 好-01, 3 -> 人, 13 -> 富有),Map(x52 -> 最, x46 -> 最, x55 -> 富有, x49 -> 人, x58 -> 人, x63 -> 就, x51 -> 好-01, x45 -> 美-01, x60 -> 最, x54 -> 人, x48 -> 我, x42 -> 承认-02, x56 -> 最, x62 -> 钦佩, x59 -> 聪明-01, x50 -> 服饰, x44 -> 人, x47 -> 星球))),[Ljava.lang.String;@6e33c391,Annotation([Ljava.lang.String;@6c451c9c,[Ljava.lang.String;@31c269fd,[Ljava.lang.String;@372b0d86),Annotation([Ljava.lang.String;@47747fb9,[Ljava.lang.String;@3113a37,[Ledu.cmu.lti.nlp.amr.Dependency;@213e3629),Annotation([Ljava.lang.String;@4e9658b5,[Ljava.lang.String;@2a7b6f69,[Ljava.lang.String;@20312893),Annotation([Ljava.lang.String;@70eecdc2,[Ljava.lang.String;@c41709a,[Ledu.cmu.lti.nlp.amr.Entity;@7db0565c))
AMR:
(x42 / 承认-02, domain, x62 / 钦佩)
(x42 / 承认-02, location, x47 / 星球)
(x42 / 承认-02, manner, x63 / 就)
(x42 / 承认-02, subset, x48 / 我)
(x44 / 人, mod, x45 / 美-01)
(x45 / 美-01, degree, x46 / 最)
(x45 / 美-01, snt3, x47 / 星球)
(x49 / 人, mod, x51 / 好-01)
(x49 / 人, mod, x55 / 富有)
(x50 / 服饰, mod, x51 / 好-01)
(x50 / 服饰, poss, x44 / 人)
(x51 / 好-01, degree, x52 / 最)
(x54 / 人, mod, x55 / 富有)
(x54 / 人, mod, x59 / 聪明-01)
(x55 / 富有, degree, x56 / 最)
(x58 / 人, mod, x59 / 聪明-01)
(x59 / 聪明-01, degree, x60 / 最)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.0
WARNING: makeIds can't find span Id: 0.0.0.3.0.0
Decoded in 92,777 microseconds
Sentence: “ 可 您 是 您 的 星球 上 唯一 的 人 呀 ！ ”

Oracle Span 1:  人 => 人
Oracle Span 2:  唯一 => 唯一
Oracle Span 3:  您 => 您
Oracle Span 4:  您 => 您
Oracle Span 5:  星球 => 星球
Spans:
Span 10-11:  人 => 人
Span 8-9:  唯一 => 唯一
Span 2-3:  您 => 您
Span 4-5:  您 => 您
Span 6-7:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 10-11:  人 => 人
Oracle Span 8-9:  唯一 => 唯一
Oracle Span 2-3:  您 => 您
Oracle Span 4-5:  您 => 您
Oracle Span 6-7:  星球 => 星球

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	可	_	VV	VV	_	4	mmod	_	_
3	您	_	PN	PN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	您	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	11	dep	_	_
9	唯一	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	人	_	NN	NN	_	4	attr	_	_
12	呀	_	SP	SP	_	4	dep	_	_
13	！	_	PU	PU	_	4	punct	_	_
14	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 人, domain, x15 / 您)
(x11 / 人, location, x13 / 星球)
(x11 / 人, mod, x12 / 唯一)
(x13 / 星球, poss, x14 / 您)

Input(Some(Graph((say :arg1 (contrast :arg2 (人 :mode expressive :domain 您 :location (星球 :poss 您) :mod 唯一))),ArrayBuffer(Span(10,11,List(0),人,人,false), Span(2,3,List(1),您,您,false), Span(6,7,List(2),星球,星球,false), Span(4,5,List(3),您,您,false), Span(8,9,List(4),唯一,唯一,false)),Map(2 -> 星球, 1 -> 您, 4 -> 唯一, 0 -> 人, 3 -> 您),Map(x13 -> 星球, x12 -> 唯一, x15 -> 您, x11 -> 人, x14 -> 您))),[Ljava.lang.String;@54ec8cc9,Annotation([Ljava.lang.String;@52eacb4b,[Ljava.lang.String;@5528a42c,[Ljava.lang.String;@2a551a63),Annotation([Ljava.lang.String;@1a6f5124,[Ljava.lang.String;@1edb61b1,[Ledu.cmu.lti.nlp.amr.Dependency;@ec2bf82),Annotation([Ljava.lang.String;@cc62a3b,[Ljava.lang.String;@6cc0bcf6,[Ljava.lang.String;@29539e36),Annotation([Ljava.lang.String;@32f61a31,[Ljava.lang.String;@f5c79a6,[Ledu.cmu.lti.nlp.amr.Entity;@669253b7))
AMR:
(x11 / 人, mod, x12 / 唯一)
(x12 / 唯一, location, x13 / 星球)
(x13 / 星球, poss, x14 / 您)
(x13 / 星球, poss, x15 / 您)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 9,145 microseconds
Sentence: “ 让 我 高兴 吧 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  让 => 让-02
Oracle Span 3:  高兴 => 高兴-01
Spans:
Span 2-3:  我 => 我
Span 1-2:  让 => 让-02
Span 3-4:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 1-2:  让 => 让-02
Oracle Span 3-4:  高兴 => 高兴-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	让	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	高兴	_	VA	VA	_	2	dep	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 让-02, arg1, x8 / 我)
(x7 / 让-02, arg2, x9 / 高兴-01)

Input(Some(Graph((say :arg1 (让-02 :mode imperative :arg2 高兴-01 :arg1 我)),ArrayBuffer(Span(1,2,List(0),让,让-02,false), Span(3,4,List(1),高兴,高兴-01,false), Span(2,3,List(2),我,我,false)),Map(2 -> 我, 1 -> 高兴-01, 0 -> 让-02),Map(x8 -> 我, x7 -> 让-02, x9 -> 高兴-01))),[Ljava.lang.String;@5305c37d,Annotation([Ljava.lang.String;@51a06cbe,[Ljava.lang.String;@3dddbe65,[Ljava.lang.String;@49a64d82),Annotation([Ljava.lang.String;@344561e0,[Ljava.lang.String;@66d23e4a,[Ledu.cmu.lti.nlp.amr.Dependency;@36ac8a63),Annotation([Ljava.lang.String;@4d9d1b69,[Ljava.lang.String;@52c8295b,[Ljava.lang.String;@251f7d26),Annotation([Ljava.lang.String;@77b21474,[Ljava.lang.String;@52d10fb8,[Ledu.cmu.lti.nlp.amr.Entity;@41c07648))
AMR:
(x7 / 让-02, prep-for, x8 / 我)
(x7 / 让-02, prep-under, x9 / 高兴-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,185 microseconds
Sentence: 请 你 还是 来 钦佩 我 吧 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  来 => 来-05
Oracle Span 4:  请 => 请-01
Oracle Span 5:  还是 => 还是
Oracle Span 6:  钦佩 => 钦佩-01
Spans:
Span 1-2:  你 => 你
Span 5-6:  我 => 我
Span 3-4:  来 => 来-05
Span 0-1:  请 => 请-01
Span 2-3:  还是 => 还是
Span 4-5:  钦佩 => 钦佩-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  来 => 来-05
Oracle Span 0-1:  请 => 请-01
Oracle Span 2-3:  还是 => 还是
Oracle Span 4-5:  钦佩 => 钦佩-01

Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	dobj	_	_
3	还是	_	AD	AD	_	5	advmod	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	钦佩	_	VV	VV	_	1	dep	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	吧	_	SP	SP	_	1	dep	_	_
8	！	_	PU	PU	_	1	punct	_	_
9	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x12 / 请-01, arg1, x13 / 你)
(x12 / 请-01, arg2, x14 / 来-05)
(x14 / 来-05, arg1, x17 / 钦佩-01)
(x14 / 来-05, manner, x15 / 还是)
(x17 / 钦佩-01, arg1, x19 / 我)

Input(Some(Graph((say :arg1 (请-01 :mode expressive :arg2 (来-05 :arg1 (钦佩-01 :arg1 我 :arg0 x13) :arg0 x13 :manner 还是) :arg1 你)),ArrayBuffer(Span(0,1,List(0),请,请-01,false), Span(3,4,List(1),来,来-05,false), Span(4,5,List(2),钦佩,钦佩-01,false), Span(5,6,List(3),我,我,false), Span(2,3,List(4),还是,还是,false), Span(1,2,List(5),你,你,false)),Map(2 -> 钦佩-01, 5 -> 你, 1 -> 来-05, 4 -> 还是, 0 -> 请-01, 3 -> 我),Map(x19 -> 我, x13 -> 你, x12 -> 请-01, x15 -> 还是, x14 -> 来-05, x17 -> 钦佩-01))),[Ljava.lang.String;@1fe8d51b,Annotation([Ljava.lang.String;@781e7326,[Ljava.lang.String;@22680f52,[Ljava.lang.String;@60d84f61),Annotation([Ljava.lang.String;@39c11e6c,[Ljava.lang.String;@324dcd31,[Ledu.cmu.lti.nlp.amr.Dependency;@503d56b5),Annotation([Ljava.lang.String;@72bca894,[Ljava.lang.String;@433ffad1,[Ljava.lang.String;@1fc793c2),Annotation([Ljava.lang.String;@2575f671,[Ljava.lang.String;@329a1243,[Ledu.cmu.lti.nlp.amr.Entity;@ecf9fb3))
AMR:
(x12 / 请-01, ord, x13 / 你)
(x12 / 请-01, prep-on-behalf, x14 / 来-05)
(x14 / 来-05, manner, x15 / 还是)
(x17 / 钦佩-01, manner, x19 / 我)
(x17 / 钦佩-01, mod, x14 / 来-05)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,441 microseconds
Sentence: 小 王子 轻轻 地 耸了耸 肩膀 ， 说道 ： “ 我 钦佩 你 ， 可是 ， 这 有 什么 能 使 你 这样 感 兴趣 的 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  能 => 能-01
Oracle Span 5:  说道 => 说道-01
Oracle Span 6:  轻轻 => 轻轻-01
Oracle Span 7:  这样 => 这样
Oracle Span 8:  钦佩 => 钦佩-01
Spans:
Span 12-13:  你 => 你
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 19-20:  能 => 能-01
Span 7-8:  说道 => 说道-01
Span 2-3:  轻轻 => 轻轻-01
Span 22-23:  这样 => 这样
Span 11-12:  钦佩 => 钦佩-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  你 => 你
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 19-20:  能 => 能-01
Oracle Span 7-8:  说道 => 说道-01
Oracle Span 2-3:  轻轻 => 轻轻-01
Oracle Span 22-23:  这样 => 这样
Oracle Span 11-12:  钦佩 => 钦佩-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	轻轻	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	耸了耸	_	VV	VV	_	0	root	_	_
6	肩膀	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	说道	_	VV	VV	_	5	conj	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	12	punct	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	钦佩	_	VV	VV	_	8	ccomp	_	_
13	你	_	PN	PN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	可是	_	AD	AD	_	18	advmod	_	_
16	,	_	PU	PU	_	18	punct	_	_
17	这	_	PN	PN	_	18	top	_	_
18	有	_	VE	VE	_	12	conj	_	_
19	什么	_	PN	PN	_	21	nsubj	_	_
20	能	_	VV	VV	_	21	mmod	_	_
21	使	_	VV	VV	_	18	dep	_	_
22	你	_	PN	PN	_	21	dobj	_	_
23	这样	_	AD	AD	_	24	advmod	_	_
24	感	_	VV	VV	_	21	dep	_	_
25	兴趣	_	NN	NN	_	24	dobj	_	_
26	的	_	SP	SP	_	5	dep	_	_
27	？	_	PU	PU	_	5	punct	_	_
28	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x30 / 王子, mod, x31 / 小-01)
(x35 / 钦佩-01, arg1, x37 / 你)

Input(Some(Graph((and :op (耸肩-01 :manner 轻轻-01 :arg0 (王子 :mod 小-01)) :op (说道-01 :arg1 (contrast :arg1 (钦佩-01 :arg1 你 :arg0 x30) :arg2 (能-01 :mode interrogative :arg0 (感兴趣-01 :degree 这样 :arg0 x37 :arg1 amr-unknown))) :arg0 x30)),ArrayBuffer(Span(2,3,List(0),轻轻,轻轻-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false), Span(7,8,List(3),说道,说道-01,false), Span(11,12,List(4),钦佩,钦佩-01,false), Span(12,13,List(5),你,你,false), Span(19,20,List(6),能,能-01,false), Span(22,23,List(7),这样,这样,false)),Map(2 -> 小-01, 5 -> 你, 7 -> 这样, 1 -> 王子, 4 -> 钦佩-01, 6 -> 能-01, 0 -> 轻轻-01, 3 -> 说道-01),Map(x37 -> 你, x31 -> 小-01, x45 -> 能-01, x30 -> 王子, x32 -> 说道-01, x47 -> 这样, x35 -> 钦佩-01, x29 -> 轻轻-01))),[Ljava.lang.String;@2d35442b,Annotation([Ljava.lang.String;@27f9e982,[Ljava.lang.String;@4593ff34,[Ljava.lang.String;@37d3d232),Annotation([Ljava.lang.String;@30c0ccff,[Ljava.lang.String;@581d969c,[Ledu.cmu.lti.nlp.amr.Dependency;@22db8f4),Annotation([Ljava.lang.String;@2b46a8c1,[Ljava.lang.String;@1d572e62,[Ljava.lang.String;@29caf222),Annotation([Ljava.lang.String;@46cf05f7,[Ljava.lang.String;@5851bd4f,[Ledu.cmu.lti.nlp.amr.Entity;@7cd1ac19))
AMR:
(x29 / 轻轻-01, value, x30 / 王子)
(x30 / 王子, mod, x31 / 小-01)
(x32 / 说道-01, manner, x29 / 轻轻-01)
(x32 / 说道-01, value, x35 / 钦佩-01)
(x35 / 钦佩-01, ARG6, x37 / 你)
(x45 / 能-01, manner, x35 / 钦佩-01)
(x45 / 能-01, unit, x47 / 这样)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0.0
Decoded in 22,861 microseconds
Sentence: 于是 小 王子 就 走开 了 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  就 => 就
Oracle Span 3:  王子 => 王子
Oracle Span 4:  走开 => 走开-01
Spans:
Span 1-2:  小 => 小-01
Span 3-4:  就 => 就
Span 2-3:  王子 => 王子
Span 4-5:  走开 => 走开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  王子 => 王子
Oracle Span 4-5:  走开 => 走开-01

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走开	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 走开-01, arg0, x4 / 王子)
(x2 / 走开-01, manner, x3 / 就)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((temporal :arg2 (走开-01 :arg0 (王子 :mod 小-01) :manner 就)),ArrayBuffer(Span(4,5,List(0),走开,走开-01,false), Span(2,3,List(1),王子,王子,false), Span(1,2,List(2),小,小-01,false), Span(3,4,List(3),就,就,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 走开-01, 3 -> 就),Map(x2 -> 走开-01, x5 -> 小-01, x4 -> 王子, x3 -> 就))),[Ljava.lang.String;@2f40a43,Annotation([Ljava.lang.String;@3caa4757,[Ljava.lang.String;@69c43e48,[Ljava.lang.String;@1804f60d),Annotation([Ljava.lang.String;@3a80515c,[Ljava.lang.String;@547e29a4,[Ledu.cmu.lti.nlp.amr.Dependency;@1c807b1d),Annotation([Ljava.lang.String;@238b521e,[Ljava.lang.String;@1b39fd82,[Ljava.lang.String;@3e2fc448),Annotation([Ljava.lang.String;@21680803,[Ljava.lang.String;@588ab592,[Ledu.cmu.lti.nlp.amr.Entity;@c8b96ec))
AMR:
(x2 / 走开-01, manner, x3 / 就)
(x2 / 走开-01, value, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,743 microseconds
Sentence: 小 王子 在 路上 自言自语 地 说 了 一 句 ： “ 这些 大人 ， 肯定 是 十分 古怪 的 。 ”

Oracle Span 1:  十分 => 十分
Oracle Span 2:  古怪 => 古怪-01
Oracle Span 3:  大人 => 大人
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  肯定 => 肯定-02
Oracle Span 7:  自言自语 => 自言自语
Oracle Span 8:  说 => 说-01
Oracle Span 9:  路上 => 路上
Oracle Span 10:  这些 => 这些
Spans:
Span 17-18:  十分 => 十分
Span 18-19:  古怪 => 古怪-01
Span 13-14:  大人 => 大人
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 15-16:  肯定 => 肯定-02
Span 4-5:  自言自语 => 自言自语
Span 6-7:  说 => 说-01
Span 3-4:  路上 => 路上
Span 12-13:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  十分 => 十分
Oracle Span 18-19:  古怪 => 古怪-01
Oracle Span 13-14:  大人 => 大人
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  肯定 => 肯定-02
Oracle Span 4-5:  自言自语 => 自言自语
Oracle Span 6-7:  说 => 说-01
Oracle Span 3-4:  路上 => 路上
Oracle Span 12-13:  这些 => 这些

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	在	_	P	P	_	7	prep	_	_
4	路上	_	NR	NR	_	3	pobj	_	_
5	自言自语	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	说	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	一	_	NT	NT	_	10	dep	_	_
10	句	_	VV	VV	_	7	ccomp	_	_
11	：	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	17	punct	_	_
13	这些	_	DT	DT	_	14	det	_	_
14	大人	_	NN	NN	_	17	nsubj	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	肯定	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	10	ccomp	_	_
18	十分	_	AD	AD	_	19	advmod	_	_
19	古怪	_	VA	VA	_	17	attr	_	_
20	的	_	DEC	DEC	_	19	cpm	_	_
21	。	_	PU	PU	_	7	punct	_	_
22	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x11 / 肯定-02)
(x0 / 说-01, location, x3 / 路上)
(x0 / 说-01, manner, x2 / 自言自语)
(x11 / 肯定-02, arg0, x12 / 古怪-01)
(x12 / 古怪-01, arg0, x14 / 大人)
(x12 / 古怪-01, degree, x13 / 十分)
(x14 / 大人, mod, x15 / 这些)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((说-01 :arg1 (肯定-02 :arg0 (古怪-01 :arg0 (大人 :mod 这些) :degree 十分)) :arg0 (王子 :mod 小-01) :location 路上 :manner 自言自语),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(15,16,List(1),肯定,肯定-02,false), Span(18,19,List(2),古怪,古怪-01,false), Span(13,14,List(3),大人,大人,false), Span(12,13,List(4),这些,这些,false), Span(17,18,List(5),十分,十分,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小-01,false), Span(3,4,List(8),路上,路上,false), Span(4,5,List(9),自言自语,自言自语,false)),Map(2 -> 古怪-01, 5 -> 十分, 8 -> 路上, 7 -> 小-01, 1 -> 肯定-02, 4 -> 这些, 6 -> 王子, 9 -> 自言自语, 0 -> 说-01, 3 -> 大人),Map(x2 -> 自言自语, x5 -> 小-01, x13 -> 十分, x12 -> 古怪-01, x15 -> 这些, x4 -> 王子, x3 -> 路上, x11 -> 肯定-02, x14 -> 大人, x0 -> 说-01))),[Ljava.lang.String;@4cc61eb1,Annotation([Ljava.lang.String;@2d8f2f3a,[Ljava.lang.String;@2024293c,[Ljava.lang.String;@7048f722),Annotation([Ljava.lang.String;@c074c0c,[Ljava.lang.String;@58a55449,[Ledu.cmu.lti.nlp.amr.Dependency;@5949eba8),Annotation([Ljava.lang.String;@6e0ff644,[Ljava.lang.String;@58dea0a5,[Ljava.lang.String;@2a2bb0eb),Annotation([Ljava.lang.String;@3c291aad,[Ljava.lang.String;@2d0566ba,[Ledu.cmu.lti.nlp.amr.Entity;@733037))
AMR:
(x0 / 说-01, location, x3 / 路上)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, purpose, x14 / 大人)
(x12 / 古怪-01, degree, x13 / 十分)
(x12 / 古怪-01, value, x11 / 肯定-02)
(x14 / 大人, mod, x15 / 这些)
(x14 / 大人, purpose, x11 / 肯定-02)
(x3 / 路上, poss, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.3.0.1.0
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 28,842 microseconds
Sentence: XII 。

Oracle Span 1:  XII => XII
Spans:
Span 0-1:  XII => XII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XII => XII

Dependencies:
1	XII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XII,ArrayBuffer(Span(0,1,List(0),XII,XII,false)),Map(0 -> XII),Map(x0 -> XII))),[Ljava.lang.String;@7728643a,Annotation([Ljava.lang.String;@320e400,[Ljava.lang.String;@5167268,[Ljava.lang.String;@1cfd1875),Annotation([Ljava.lang.String;@28c0b664,[Ljava.lang.String;@2c444798,[Ledu.cmu.lti.nlp.amr.Dependency;@1af7f54a),Annotation([Ljava.lang.String;@6ebd78d1,[Ljava.lang.String;@436390f4,[Ljava.lang.String;@4d157787),Annotation([Ljava.lang.String;@68ed96ca,[Ljava.lang.String;@6d1310f6,[Ledu.cmu.lti.nlp.amr.Entity;@3228d990))
AMR:


Decoded in 1,329 microseconds
Sentence: 小 王子 所 访问 的 下 一 个 星球 上 住 着 一 个 酒鬼 。

Oracle Span 1:  住 => 住-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  星球 => 星球
Oracle Span 4:  王子 => 王子
Oracle Span 5:  访问 => 访问-01
Oracle Span 6:  酒鬼 => 酒鬼
Spans:
Span 10-11:  住 => 住-01
Span 0-1:  小 => 小-01
Span 8-9:  星球 => 星球
Span 1-2:  王子 => 王子
Span 3-4:  访问 => 访问-01
Span 14-15:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  住 => 住-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 8-9:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  访问 => 访问-01
Oracle Span 14-15:  酒鬼 => 酒鬼

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	11	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	访问	_	VV	VV	_	9	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	下	_	DT	DT	_	9	det	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	6	dep	_	_
9	星球	_	NN	NN	_	10	lobj	_	_
10	上	_	LC	LC	_	11	loc	_	_
11	住	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	个	_	M	M	_	15	clf	_	_
15	酒鬼	_	NN	NN	_	11	dobj	_	_
16	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 住-01, arg0, x2 / 酒鬼)
(x0 / 住-01, arg1, x4 / 星球)
(x6 / 访问-01, arg0, x7 / 王子)
(x6 / 访问-01, arg1, x4 / 星球)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((住-01 :arg1 (星球 :arg1-of (访问-01 :arg0 (王子 :mod 小-01)) :mod 下一个) :arg0 (酒鬼 :quant 1)),ArrayBuffer(Span(10,11,List(0),住,住-01,false), Span(8,9,List(1),星球,星球,false), Span(3,4,List(2),访问,访问-01,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false), Span(14,15,List(5),酒鬼,酒鬼,false)),Map(2 -> 访问-01, 5 -> 酒鬼, 1 -> 星球, 4 -> 小-01, 0 -> 住-01, 3 -> 王子),Map(x2 -> 酒鬼, x8 -> 小-01, x7 -> 王子, x4 -> 星球, x6 -> 访问-01, x0 -> 住-01))),[Ljava.lang.String;@54e7391d,Annotation([Ljava.lang.String;@50b8ae8d,[Ljava.lang.String;@255990cc,[Ljava.lang.String;@51c929ae),Annotation([Ljava.lang.String;@3c8bdd5b,[Ljava.lang.String;@29d2d081,[Ledu.cmu.lti.nlp.amr.Dependency;@40e4ea87),Annotation([Ljava.lang.String;@58783f6c,[Ljava.lang.String;@3a7b503d,[Ljava.lang.String;@512d92b),Annotation([Ljava.lang.String;@62c5bbdc,[Ljava.lang.String;@7bdf6bb7,[Ledu.cmu.lti.nlp.amr.Entity;@1bc53649))
AMR:
(x0 / 住-01, op, x4 / 星球)
(x0 / 住-01, prep-for, x2 / 酒鬼)
(x6 / 访问-01, direction, x7 / 王子)
(x6 / 访问-01, value, x4 / 星球)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,166 microseconds
Sentence: 访问 时间 非常 短 ， 可是 它 却 使 小 王子 非常 忧伤 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  忧伤 => 忧伤
Oracle Span 3:  时间 => 时间
Oracle Span 4:  王子 => 王子
Oracle Span 5:  短 => 短-01
Oracle Span 6:  访问 => 访问
Oracle Span 7:  非常 => 非常
Oracle Span 8:  非常 => 非常
Spans:
Span 9-10:  小 => 小-01
Span 12-13:  忧伤 => 忧伤
Span 1-2:  时间 => 时间
Span 10-11:  王子 => 王子
Span 3-4:  短 => 短-01
Span 0-1:  访问 => 访问
Span 2-3:  非常 => 非常
Span 11-12:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 12-13:  忧伤 => 忧伤
Oracle Span 1-2:  时间 => 时间
Oracle Span 10-11:  王子 => 王子
Oracle Span 3-4:  短 => 短-01
Oracle Span 0-1:  访问 => 访问
Oracle Span 2-3:  非常 => 非常
Oracle Span 11-12:  非常 => 非常

Dependencies:
1	访问	_	NN	NN	_	2	nn	_	_
2	时间	_	NN	NN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	短	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	可是	_	AD	AD	_	9	advmod	_	_
7	它	_	PN	PN	_	9	nsubj	_	_
8	却	_	AD	AD	_	9	advmod	_	_
9	使	_	VV	VV	_	4	conj	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	9	dobj	_	_
12	非常	_	AD	AD	_	13	advmod	_	_
13	忧伤	_	VV	VV	_	9	dep	_	_
14	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x15 / 忧伤, arg0, x17 / 王子)
(x15 / 忧伤, degree, x16 / 非常)
(x17 / 王子, mod, x18 / 小-01)
(x4 / 短-01, arg0, x6 / 时间)
(x4 / 短-01, degree, x5 / 非常)
(x6 / 时间, mod, x14 / 访问)

Input(Some(Graph((contrast :arg1 (短-01 :arg0 (时间 :mod 访问) :degree 非常) :arg2 (忧伤 :cause x14 :arg0 (王子 :mod 小-01) :degree 非常)),ArrayBuffer(Span(3,4,List(0),短,短-01,false), Span(1,2,List(1),时间,时间,false), Span(0,1,List(2),访问,访问,false), Span(2,3,List(3),非常,非常,false), Span(12,13,List(4),忧伤,忧伤,false), Span(10,11,List(5),王子,王子,false), Span(9,10,List(6),小,小-01,false), Span(11,12,List(7),非常,非常,false)),Map(2 -> 访问, 5 -> 王子, 7 -> 非常, 1 -> 时间, 4 -> 忧伤, 6 -> 小-01, 0 -> 短-01, 3 -> 非常),Map(x16 -> 非常, x5 -> 非常, x15 -> 忧伤, x18 -> 小-01, x4 -> 短-01, x14 -> 访问, x6 -> 时间, x17 -> 王子))),[Ljava.lang.String;@88d6f9b,Annotation([Ljava.lang.String;@47d93e0d,[Ljava.lang.String;@475b7792,[Ljava.lang.String;@751e664e),Annotation([Ljava.lang.String;@160c3ec1,[Ljava.lang.String;@182b435b,[Ledu.cmu.lti.nlp.amr.Dependency;@4d0402b),Annotation([Ljava.lang.String;@2fa7ae9,[Ljava.lang.String;@7577b641,[Ljava.lang.String;@3704122f),Annotation([Ljava.lang.String;@3153ddfc,[Ljava.lang.String;@60afd40d,[Ledu.cmu.lti.nlp.amr.Entity;@28a2a3e7))
AMR:
(x15 / 忧伤, degree, x16 / 非常)
(x15 / 忧伤, domain, x17 / 王子)
(x17 / 王子, mod, x18 / 小-01)
(x4 / 短-01, degree, x5 / 非常)
(x4 / 短-01, direction, x18 / 小-01)
(x4 / 短-01, op, x6 / 时间)
(x6 / 时间, mod, x14 / 访问)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 19,608 microseconds
Sentence: “ 你 在 干 什么 ？ ” 小 王子 问 酒鬼 ， 这个 酒鬼 默默 地 坐 在 那里 ， 面前 有 一 堆 酒瓶子 ， 有的 装 着 酒 ， 有的 是 空 的 。

Oracle Span 1:  你 => 你
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  堆 => 堆
Oracle Span 4:  小 => 小-01
Oracle Span 5:  干 => 干-01
Oracle Span 6:  有 => 有-03
Oracle Span 7:  王子 => 王子
Oracle Span 8:  空 => 空-01
Oracle Span 9:  装 => 装-01
Oracle Span 10:  这个 => 这个
Oracle Span 11:  那里 => 那里
Oracle Span 12:  酒 => 酒
Oracle Span 13:  酒瓶子 => 酒瓶子
Oracle Span 14:  酒鬼 => 酒鬼
Oracle Span 15:  问 => 问-01
Oracle Span 16:  面前 => 面前
Oracle Span 17:  默默 => 默默
Spans:
Span 1-2:  你 => 你
Span 16-17:  坐 => 坐-01
Span 23-24:  堆 => 堆
Span 7-8:  小 => 小-01
Span 3-4:  干 => 干-01
Span 21-22:  有 => 有-03
Span 8-9:  王子 => 王子
Span 33-34:  空 => 空-01
Span 27-28:  装 => 装-01
Span 12-13:  这个 => 这个
Span 18-19:  那里 => 那里
Span 29-30:  酒 => 酒
Span 24-25:  酒瓶子 => 酒瓶子
Span 10-11:  酒鬼 => 酒鬼
Span 9-10:  问 => 问-01
Span 20-21:  面前 => 面前
Span 14-15:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 16-17:  坐 => 坐-01
Oracle Span 23-24:  堆 => 堆
Oracle Span 7-8:  小 => 小-01
Oracle Span 3-4:  干 => 干-01
Oracle Span 21-22:  有 => 有-03
Oracle Span 8-9:  王子 => 王子
Oracle Span 33-34:  空 => 空-01
Oracle Span 27-28:  装 => 装-01
Oracle Span 12-13:  这个 => 这个
Oracle Span 18-19:  那里 => 那里
Oracle Span 29-30:  酒 => 酒
Oracle Span 24-25:  酒瓶子 => 酒瓶子
Oracle Span 10-11:  酒鬼 => 酒鬼
Oracle Span 9-10:  问 => 问-01
Oracle Span 20-21:  面前 => 面前
Oracle Span 14-15:  默默 => 默默

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	dep	_	_
3	在	_	P	P	_	4	prep	_	_
4	干	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	nsubj	_	_
10	问	_	VV	VV	_	4	dep	_	_
11	酒鬼	_	NN	NN	_	10	dobj	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	这个	_	NN	NN	_	14	nn	_	_
14	酒鬼	_	NN	NN	_	17	nsubj	_	_
15	默默	_	VA	VA	_	17	dvpmod	_	_
16	地	_	DEV	DEV	_	15	dvpm	_	_
17	坐	_	VV	VV	_	10	dep	_	_
18	在	_	P	P	_	17	prep	_	_
19	那里	_	PN	PN	_	18	pobj	_	_
20	,	_	PU	PU	_	4	punct	_	_
21	面前	_	NN	NN	_	22	top	_	_
22	有	_	VE	VE	_	4	conj	_	_
23	一	_	CD	CD	_	24	nsubj	_	_
24	堆	_	VV	VV	_	22	dep	_	_
25	酒瓶子	_	NN	NN	_	24	dobj	_	_
26	,	_	PU	PU	_	4	punct	_	_
27	有的	_	PN	PN	_	28	nsubj	_	_
28	装	_	VV	VV	_	4	conj	_	_
29	着	_	AS	AS	_	28	asp	_	_
30	酒	_	NN	NN	_	28	dobj	_	_
31	,	_	PU	PU	_	4	punct	_	_
32	有的	_	PN	PN	_	33	top	_	_
33	是	_	VC	VC	_	4	conj	_	_
34	空	_	NN	NN	_	33	attr	_	_
35	的	_	DEG	DEG	_	34	assm	_	_
36	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 王子)
(x0 / 问-01, arg1, x5 / 干-01)
(x0 / 问-01, arg2, x4 / 酒鬼)
(x16 / 有-03, arg0, x14 / 面前)
(x16 / 有-03, arg1, x17 / 酒瓶子)
(x17 / 酒瓶子, unit, x25 / 堆)
(x2 / 王子, mod, x3 / 小-01)
(x20 / 装-01, arg1, x21 / 酒)
(x4 / 酒鬼, location, x14 / 面前)
(x4 / 酒鬼, mod, x11 / 这个)
(x5 / 干-01, arg0, x6 / 你)
(x9 / 坐-01, arg0, x4 / 酒鬼)
(x9 / 坐-01, arg1, x10 / 那里)
(x9 / 坐-01, manner, x12 / 默默)

Input(Some(Graph((问-01 :arg1 (干-01 :mode interrogative :arg1 amr-unknown :arg0 你) :arg2 (酒鬼 :location (面前 :arg0-of (有-03 :arg1 (酒瓶子 :unit 堆 :quant 1 :mod (and :op (装-01 :arg2 x17 :arg1 酒) :op 空-01)))) :mod 这个 :arg0-of (坐-01 :manner 默默 :arg1 那里)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),问,问-01,false), Span(3,4,List(1),干,干-01,false), Span(1,2,List(2),你,你,false), Span(10,11,List(3),酒鬼,酒鬼,false), Span(20,21,List(4),面前,面前,false), Span(21,22,List(5),有,有-03,false), Span(24,25,List(6),酒瓶子,酒瓶子,false), Span(23,24,List(7),堆,堆,false), Span(27,28,List(8),装,装-01,false), Span(29,30,List(9),酒,酒,false), Span(33,34,List(10),空,空-01,false), Span(12,13,List(11),这个,这个,false), Span(16,17,List(12),坐,坐-01,false), Span(14,15,List(13),默默,默默,false), Span(18,19,List(14),那里,那里,false), Span(8,9,List(15),王子,王子,false), Span(7,8,List(16),小,小-01,false)),Map(2 -> 你, 5 -> 有-03, 12 -> 坐-01, 15 -> 王子, 8 -> 装-01, 7 -> 堆, 1 -> 干-01, 4 -> 面前, 11 -> 这个, 14 -> 那里, 6 -> 酒瓶子, 9 -> 酒, 0 -> 问-01, 16 -> 小-01, 10 -> 空-01, 3 -> 酒鬼, 13 -> 默默),Map(x16 -> 有-03, x10 -> 那里, x25 -> 堆, x2 -> 王子, x5 -> 干-01, x12 -> 默默, x21 -> 酒, x4 -> 酒鬼, x23 -> 空-01, x3 -> 小-01, x11 -> 这个, x6 -> 你, x20 -> 装-01, x14 -> 面前, x9 -> 坐-01, x17 -> 酒瓶子, x0 -> 问-01))),[Ljava.lang.String;@3f2049b6,Annotation([Ljava.lang.String;@10b3df93,[Ljava.lang.String;@ea27e34,[Ljava.lang.String;@33a2499c),Annotation([Ljava.lang.String;@e72dba7,[Ljava.lang.String;@33c2bd,[Ledu.cmu.lti.nlp.amr.Dependency;@1dfd5f51),Annotation([Ljava.lang.String;@3c321bdb,[Ljava.lang.String;@24855019,[Ljava.lang.String;@3abd581e),Annotation([Ljava.lang.String;@4d4d8fcf,[Ljava.lang.String;@610db97e,[Ledu.cmu.lti.nlp.amr.Entity;@6f0628de))
AMR:
(x0 / 问-01, ARG1, x2 / 王子)
(x0 / 问-01, degree, x5 / 干-01)
(x16 / 有-03, degree, x14 / 面前)
(x17 / 酒瓶子, unit, x20 / 装-01)
(x17 / 酒瓶子, unit, x25 / 堆)
(x2 / 王子, mod, x3 / 小-01)
(x20 / 装-01, prep-through, x21 / 酒)
(x23 / 空-01, time, x21 / 酒)
(x25 / 堆, location, x14 / 面前)
(x4 / 酒鬼, mod, x0 / 问-01)
(x4 / 酒鬼, mod, x11 / 这个)
(x5 / 干-01, location, x6 / 你)
(x9 / 坐-01, location, x10 / 那里)
(x9 / 坐-01, location, x14 / 面前)
(x9 / 坐-01, manner, x12 / 默默)
(x9 / 坐-01, time, x11 / 这个)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.0.0
WARNING: makeIds can't find span Id: 0.1.2.0.0.2
WARNING: makeIds can't find span Id: 0.1.2.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.2.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.2.0.0.0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 93,723 microseconds
Sentence: “ 我 喝酒 。 ” 他 阴沉 忧郁 地 回答 道 。

Oracle Span 1:  他 => 他
Oracle Span 2:  喝酒 => 喝酒-01
Oracle Span 3:  回答 => 回答-01
Oracle Span 4:  忧郁 => 忧郁-01
Oracle Span 5:  我 => 我
Oracle Span 6:  阴沉 => 阴沉-01
Spans:
Span 5-6:  他 => 他
Span 2-3:  喝酒 => 喝酒-01
Span 9-10:  回答 => 回答-01
Span 7-8:  忧郁 => 忧郁-01
Span 1-2:  我 => 我
Span 6-7:  阴沉 => 阴沉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 2-3:  喝酒 => 喝酒-01
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 7-8:  忧郁 => 忧郁-01
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  阴沉 => 阴沉-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	喝酒	_	NN	NN	_	4	nn	_	_
4	。	_	NN	NN	_	10	nsubj	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	他	_	PN	PN	_	10	nsubj	_	_
7	阴沉	_	VA	VA	_	10	dvpmod	_	_
8	忧郁	_	VA	VA	_	7	comod	_	_
9	地	_	DEV	DEV	_	7	dvpm	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	道	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 他)
(x0 / 回答-01, arg2, x5 / 喝酒-01)
(x0 / 回答-01, manner, x3 / 阴沉-01)
(x0 / 回答-01, manner, x4 / 忧郁-01)
(x5 / 喝酒-01, arg0, x6 / 我)

Input(Some(Graph((回答-01 :arg2 (喝酒-01 :arg0 我) :manner 忧郁-01 :manner 阴沉-01 :arg0 他),ArrayBuffer(Span(9,10,List(0),回答,回答-01,false), Span(2,3,List(1),喝酒,喝酒-01,false), Span(1,2,List(2),我,我,false), Span(7,8,List(3),忧郁,忧郁-01,false), Span(6,7,List(4),阴沉,阴沉-01,false), Span(5,6,List(5),他,他,false)),Map(2 -> 我, 5 -> 他, 1 -> 喝酒-01, 4 -> 阴沉-01, 0 -> 回答-01, 3 -> 忧郁-01),Map(x2 -> 他, x5 -> 喝酒-01, x4 -> 忧郁-01, x3 -> 阴沉-01, x6 -> 我, x0 -> 回答-01))),[Ljava.lang.String;@3fabf088,Annotation([Ljava.lang.String;@1e392345,[Ljava.lang.String;@12f3afb5,[Ljava.lang.String;@4ced35ed),Annotation([Ljava.lang.String;@2c22a348,[Ljava.lang.String;@7bd69e82,[Ledu.cmu.lti.nlp.amr.Dependency;@74d7184a),Annotation([Ljava.lang.String;@51b01960,[Ljava.lang.String;@6831d8fd,[Ljava.lang.String;@27dc79f7),Annotation([Ljava.lang.String;@6b85300e,[Ljava.lang.String;@3aaf4f07,[Ledu.cmu.lti.nlp.amr.Entity;@5cbf9e9f))
AMR:
(x0 / 回答-01, manner, x3 / 阴沉-01)
(x3 / 阴沉-01, location, x2 / 他)
(x4 / 忧郁-01, manner, x3 / 阴沉-01)
(x5 / 喝酒-01, beneficiary, x6 / 我)
(x5 / 喝酒-01, purpose, x3 / 阴沉-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,434 microseconds
Sentence: “ 你 为什么 喝酒 ？ ” 小 王子 问道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  喝酒 => 喝酒-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  问道 => 问道-01
Spans:
Span 1-2:  你 => 你
Span 3-4:  喝酒 => 喝酒-01
Span 6-7:  小 => 小-01
Span 7-8:  王子 => 王子
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  喝酒 => 喝酒-01
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	为什么	_	AD	AD	_	4	advmod	_	_
4	喝酒	_	VV	VV	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	问道	_	VV	VV	_	4	dep	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 喝酒-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 喝酒-01, arg0, x5 / 你)

Input(Some(Graph((问道-01 :arg1 (喝酒-01 :mode interrogative :cause amr-unknown :arg0 你) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),问道,问道-01,false), Span(3,4,List(1),喝酒,喝酒-01,false), Span(1,2,List(2),你,你,false), Span(7,8,List(3),王子,王子,false), Span(6,7,List(4),小,小-01,false)),Map(2 -> 你, 1 -> 喝酒-01, 4 -> 小-01, 0 -> 问道-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 你, x4 -> 喝酒-01, x3 -> 小-01, x0 -> 问道-01))),[Ljava.lang.String;@18e8473e,Annotation([Ljava.lang.String;@5a2f016d,[Ljava.lang.String;@1a38ba58,[Ljava.lang.String;@3ad394e6),Annotation([Ljava.lang.String;@6058e535,[Ljava.lang.String;@42deb43a,[Ledu.cmu.lti.nlp.amr.Dependency;@1deb2c43),Annotation([Ljava.lang.String;@3bb9efbc,[Ljava.lang.String;@1cefc4b3,[Ljava.lang.String;@2b27cc70),Annotation([Ljava.lang.String;@6f6a7463,[Ljava.lang.String;@1bdaa23d,[Ledu.cmu.lti.nlp.amr.Entity;@79f227a9))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, example, x4 / 喝酒-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 喝酒-01, location, x5 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,275 microseconds
Sentence: “ 为了 忘却 。 ” 酒鬼 回答 。

Oracle Span 1:  为了 => 为了-01
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  忘却 => 忘却-01
Oracle Span 4:  酒鬼 => 酒鬼
Spans:
Span 1-2:  为了 => 为了-01
Span 6-7:  回答 => 回答-01
Span 2-3:  忘却 => 忘却-01
Span 5-6:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  为了 => 为了-01
Oracle Span 6-7:  回答 => 回答-01
Oracle Span 2-3:  忘却 => 忘却-01
Oracle Span 5-6:  酒鬼 => 酒鬼

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	为了	_	P	P	_	6	prep	_	_
3	忘却	_	NN	NN	_	4	nn	_	_
4	。	_	NN	NN	_	2	pobj	_	_
5	”	_	PU	PU	_	2	punct	_	_
6	酒鬼	_	NN	NN	_	7	nsubj	_	_
7	回答	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 酒鬼)
(x0 / 回答-01, arg2, x3 / 为了-01)
(x3 / 为了-01, arg1, x4 / 忘却-01)

Input(Some(Graph((回答-01 :arg2 (为了-01 :arg1 忘却-01) :arg0 酒鬼),ArrayBuffer(Span(6,7,List(0),回答,回答-01,false), Span(1,2,List(1),为了,为了-01,false), Span(2,3,List(2),忘却,忘却-01,false), Span(5,6,List(3),酒鬼,酒鬼,false)),Map(2 -> 忘却-01, 1 -> 为了-01, 0 -> 回答-01, 3 -> 酒鬼),Map(x2 -> 酒鬼, x4 -> 忘却-01, x3 -> 为了-01, x0 -> 回答-01))),[Ljava.lang.String;@6ca320ab,Annotation([Ljava.lang.String;@50d68830,[Ljava.lang.String;@1e53135d,[Ljava.lang.String;@7674a051),Annotation([Ljava.lang.String;@3a7704c,[Ljava.lang.String;@6754ef00,[Ledu.cmu.lti.nlp.amr.Dependency;@619bd14c),Annotation([Ljava.lang.String;@323e8306,[Ljava.lang.String;@a23a01d,[Ljava.lang.String;@4acf72b6),Annotation([Ljava.lang.String;@7561db12,[Ljava.lang.String;@3301500b,[Ledu.cmu.lti.nlp.amr.Entity;@24b52d3e))
AMR:
(x0 / 回答-01, location, x2 / 酒鬼)
(x3 / 为了-01, example, x4 / 忘却-01)
(x3 / 为了-01, location, x2 / 酒鬼)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,106 microseconds
Sentence: 小 王子 已经 有些 可怜 酒鬼 。 他 问道 ： “ 忘却 什么 呢 ？ ”

Oracle Span 1:  他 => 他
Oracle Span 2:  可怜 => 可怜-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  已经 => 已经
Oracle Span 5:  忘却 => 忘却-01
Oracle Span 6:  有些 => 有些
Oracle Span 7:  王子 => 王子
Oracle Span 8:  酒鬼 => 酒鬼
Oracle Span 9:  问道 => 问道-01
Spans:
Span 7-8:  他 => 他
Span 4-5:  可怜 => 可怜-01
Span 0-1:  小 => 小-01
Span 2-3:  已经 => 已经
Span 11-12:  忘却 => 忘却-01
Span 3-4:  有些 => 有些
Span 1-2:  王子 => 王子
Span 5-6:  酒鬼 => 酒鬼
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 4-5:  可怜 => 可怜-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  已经 => 已经
Oracle Span 11-12:  忘却 => 忘却-01
Oracle Span 3-4:  有些 => 有些
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  酒鬼 => 酒鬼
Oracle Span 8-9:  问道 => 问道-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	已经	_	AD	AD	_	5	advmod	_	_
4	有些	_	AD	AD	_	5	advmod	_	_
5	可怜	_	VV	VV	_	0	root	_	_
6	酒鬼	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	问道	_	VV	VV	_	5	conj	_	_
10	：	_	PU	PU	_	5	punct	_	_
11	“	_	PU	PU	_	12	punct	_	_
12	忘却	_	VV	VV	_	5	dep	_	_
13	什么	_	PN	PN	_	12	dobj	_	_
14	呢	_	SP	SP	_	12	dep	_	_
15	？	_	PU	PU	_	5	punct	_	_
16	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 可怜-01, arg0, x3 / 王子)
(x2 / 可怜-01, arg1, x7 / 酒鬼)
(x2 / 可怜-01, degree, x5 / 有些)
(x2 / 可怜-01, time, x6 / 已经)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 问道-01, arg0, x9 / 他)
(x8 / 问道-01, arg1, x10 / 忘却-01)

Input(Some(Graph((multi-sentence :snt1 (可怜-01 :arg1 酒鬼 :time 已经 :degree 有些 :arg0 (王子 :mod 小-01)) :snt2 (问道-01 :mode interrogative :arg1 (忘却-01 :arg1 amr-unknown) :arg0 他)),ArrayBuffer(Span(4,5,List(0),可怜,可怜-01,false), Span(5,6,List(1),酒鬼,酒鬼,false), Span(2,3,List(2),已经,已经,false), Span(3,4,List(3),有些,有些,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false), Span(8,9,List(6),问道,问道-01,false), Span(11,12,List(7),忘却,忘却-01,false), Span(7,8,List(8),他,他,false)),Map(2 -> 已经, 5 -> 小-01, 8 -> 他, 7 -> 忘却-01, 1 -> 酒鬼, 4 -> 王子, 6 -> 问道-01, 0 -> 可怜-01, 3 -> 有些),Map(x10 -> 忘却-01, x2 -> 可怜-01, x5 -> 有些, x8 -> 问道-01, x7 -> 酒鬼, x4 -> 小-01, x3 -> 王子, x6 -> 已经, x9 -> 他))),[Ljava.lang.String;@15deb1dc,Annotation([Ljava.lang.String;@6e9c413e,[Ljava.lang.String;@57a4d5ee,[Ljava.lang.String;@5af5def9),Annotation([Ljava.lang.String;@3a45c42a,[Ljava.lang.String;@36dce7ed,[Ledu.cmu.lti.nlp.amr.Dependency;@47a64f7d),Annotation([Ljava.lang.String;@33d05366,[Ljava.lang.String;@27a0a5a2,[Ljava.lang.String;@7692cd34),Annotation([Ljava.lang.String;@33aa93c,[Ljava.lang.String;@32c0915e,[Ledu.cmu.lti.nlp.amr.Entity;@106faf11))
AMR:
(x2 / 可怜-01, degree, x5 / 有些)
(x2 / 可怜-01, time, x6 / 已经)
(x2 / 可怜-01, value, x7 / 酒鬼)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 已经, value, x3 / 王子)
(x8 / 问道-01, ARG6, x10 / 忘却-01)
(x8 / 问道-01, poss, x9 / 他)
(x8 / 问道-01, purpose, x2 / 可怜-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 24,596 microseconds
Sentence: 酒鬼 垂下 脑袋 坦白 道 ： “ 为了 忘却 我 的 羞愧 。 ”

Oracle Span 1:  为了 => 为了-01
Oracle Span 2:  坦白 => 坦白-01
Oracle Span 3:  垂下 => 垂下-01
Oracle Span 4:  忘却 => 忘却-01
Oracle Span 5:  我 => 我
Oracle Span 6:  羞愧 => 羞愧-01
Oracle Span 7:  脑袋 => 脑袋
Oracle Span 8:  酒鬼 => 酒鬼
Spans:
Span 7-8:  为了 => 为了-01
Span 3-4:  坦白 => 坦白-01
Span 1-2:  垂下 => 垂下-01
Span 8-9:  忘却 => 忘却-01
Span 9-10:  我 => 我
Span 11-12:  羞愧 => 羞愧-01
Span 2-3:  脑袋 => 脑袋
Span 0-1:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  为了 => 为了-01
Oracle Span 3-4:  坦白 => 坦白-01
Oracle Span 1-2:  垂下 => 垂下-01
Oracle Span 8-9:  忘却 => 忘却-01
Oracle Span 9-10:  我 => 我
Oracle Span 11-12:  羞愧 => 羞愧-01
Oracle Span 2-3:  脑袋 => 脑袋
Oracle Span 0-1:  酒鬼 => 酒鬼

Dependencies:
1	酒鬼	_	NN	NN	_	4	nn	_	_
2	垂下	_	NN	NN	_	4	nn	_	_
3	脑袋	_	NN	NN	_	4	nn	_	_
4	坦白	_	NN	NN	_	5	nsubj	_	_
5	道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	5	punct	_	_
8	为了	_	P	P	_	5	ccomp	_	_
9	忘却	_	VV	VV	_	8	pccomp	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	羞愧	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x16 / 为了-01, arg1, x17 / 忘却-01)
(x17 / 忘却-01, arg1, x18 / 羞愧-01)
(x18 / 羞愧-01, poss, x19 / 我)
(x4 / 坦白-01, arg0, x6 / 酒鬼)
(x4 / 坦白-01, arg1, x16 / 为了-01)
(x4 / 坦白-01, manner, x7 / 垂下-01)
(x7 / 垂下-01, arg1, x9 / 脑袋)

Input(Some(Graph((坦白-01 :arg1 (为了-01 :arg1 (忘却-01 :arg1 (羞愧-01 :poss 我))) :manner (垂下-01 :arg1 (脑袋 :part-of x6) :arg0 x6) :arg0 酒鬼),ArrayBuffer(Span(3,4,List(0),坦白,坦白-01,false), Span(7,8,List(1),为了,为了-01,false), Span(8,9,List(2),忘却,忘却-01,false), Span(11,12,List(3),羞愧,羞愧-01,false), Span(9,10,List(4),我,我,false), Span(1,2,List(5),垂下,垂下-01,false), Span(2,3,List(6),脑袋,脑袋,false), Span(0,1,List(7),酒鬼,酒鬼,false)),Map(2 -> 忘却-01, 5 -> 垂下-01, 7 -> 酒鬼, 1 -> 为了-01, 4 -> 我, 6 -> 脑袋, 0 -> 坦白-01, 3 -> 羞愧-01),Map(x16 -> 为了-01, x19 -> 我, x7 -> 垂下-01, x18 -> 羞愧-01, x4 -> 坦白-01, x6 -> 酒鬼, x9 -> 脑袋, x17 -> 忘却-01))),[Ljava.lang.String;@70f43b45,Annotation([Ljava.lang.String;@26d10f2e,[Ljava.lang.String;@10ad20cb,[Ljava.lang.String;@7dd712e8),Annotation([Ljava.lang.String;@2c282004,[Ljava.lang.String;@22ee2d0,[Ledu.cmu.lti.nlp.amr.Dependency;@7bfc3126),Annotation([Ljava.lang.String;@3e792ce3,[Ljava.lang.String;@53bc1328,[Ljava.lang.String;@26f143ed),Annotation([Ljava.lang.String;@3c1e3314,[Ljava.lang.String;@4b770e40,[Ledu.cmu.lti.nlp.amr.Entity;@78e16155))
AMR:
(x16 / 为了-01, manner, x18 / 羞愧-01)
(x16 / 为了-01, manner, x4 / 坦白-01)
(x16 / 为了-01, season, x17 / 忘却-01)
(x18 / 羞愧-01, poss, x19 / 我)
(x4 / 坦白-01, manner, x7 / 垂下-01)
(x4 / 坦白-01, manner, x9 / 脑袋)
(x6 / 酒鬼, season, x7 / 垂下-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,152 microseconds
Sentence: “ 你 羞愧 什么 呢 ？ ” 小 王子 很 想 救助 他 。

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  小 => 小-01
Oracle Span 4:  很 => 很
Oracle Span 5:  想 => 想-02
Oracle Span 6:  救助 => 救助-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  羞愧 => 羞愧-01
Spans:
Span 12-13:  他 => 他
Span 1-2:  你 => 你
Span 7-8:  小 => 小-01
Span 9-10:  很 => 很
Span 10-11:  想 => 想-02
Span 11-12:  救助 => 救助-01
Span 8-9:  王子 => 王子
Span 2-3:  羞愧 => 羞愧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  他 => 他
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  很 => 很
Oracle Span 10-11:  想 => 想-02
Oracle Span 11-12:  救助 => 救助-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 2-3:  羞愧 => 羞愧-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	羞愧	_	NR	NR	_	4	nsubj	_	_
4	什么	_	PN	PN	_	9	vmod	_	_
5	呢	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	11	nsubj	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	想	_	VV	VV	_	0	root	_	_
12	救助	_	VV	VV	_	11	ccomp	_	_
13	他	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x29 / 羞愧-01, arg0, x30 / 你)
(x33 / 想-02, arg0, x35 / 王子)
(x33 / 想-02, arg1, x37 / 救助-01)
(x33 / 想-02, degree, x34 / 很)
(x35 / 王子, mod, x36 / 小-01)
(x37 / 救助-01, arg1, x39 / 他)

Input(Some(Graph((and :op (say :arg1 (羞愧-01 :mode interrogative :cause amr-unknown :arg0 你)) :op (想-02 :arg1 (救助-01 :arg1 他 :arg0 x35) :arg0 (王子 :mod 小-01) :degree 很)),ArrayBuffer(Span(2,3,List(0),羞愧,羞愧-01,false), Span(1,2,List(1),你,你,false), Span(10,11,List(2),想,想-02,false), Span(11,12,List(3),救助,救助-01,false), Span(12,13,List(4),他,他,false), Span(8,9,List(5),王子,王子,false), Span(7,8,List(6),小,小-01,false), Span(9,10,List(7),很,很,false)),Map(2 -> 想-02, 5 -> 王子, 7 -> 很, 1 -> 你, 4 -> 他, 6 -> 小-01, 0 -> 羞愧-01, 3 -> 救助-01),Map(x34 -> 很, x37 -> 救助-01, x39 -> 他, x30 -> 你, x33 -> 想-02, x36 -> 小-01, x35 -> 王子, x29 -> 羞愧-01))),[Ljava.lang.String;@54a3ab8f,Annotation([Ljava.lang.String;@1968a49c,[Ljava.lang.String;@6a1ebcff,[Ljava.lang.String;@19868320),Annotation([Ljava.lang.String;@50b0bc4c,[Ljava.lang.String;@c20be82,[Ledu.cmu.lti.nlp.amr.Dependency;@13c612bd),Annotation([Ljava.lang.String;@3ef41c66,[Ljava.lang.String;@6b739528,[Ljava.lang.String;@622ef26a),Annotation([Ljava.lang.String;@41de5768,[Ljava.lang.String;@5f577419,[Ledu.cmu.lti.nlp.amr.Entity;@28fa700e))
AMR:
(x29 / 羞愧-01, location, x30 / 你)
(x33 / 想-02, degree, x34 / 很)
(x33 / 想-02, manner, x29 / 羞愧-01)
(x33 / 想-02, prep-through, x37 / 救助-01)
(x33 / 想-02, unit, x35 / 王子)
(x35 / 王子, mod, x36 / 小-01)
(x37 / 救助-01, purpose, x39 / 他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 21,070 microseconds
Sentence: “ 我 羞愧 我 喝酒 。 ”

Oracle Span 1:  喝酒 => 喝酒-01
Oracle Span 2:  我 => 我
Oracle Span 3:  羞愧 => 羞愧-01
Spans:
Span 4-5:  喝酒 => 喝酒-01
Span 1-2:  我 => 我
Span 2-3:  羞愧 => 羞愧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  喝酒 => 喝酒-01
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  羞愧 => 羞愧-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	羞愧	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	喝酒	_	VV	VV	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 羞愧-01, arg0, x8 / 我)
(x7 / 羞愧-01, cause, x9 / 喝酒-01)

Input(Some(Graph((say :arg1 (羞愧-01 :cause (喝酒-01 :arg0 x8) :arg0 我)),ArrayBuffer(Span(2,3,List(0),羞愧,羞愧-01,false), Span(4,5,List(1),喝酒,喝酒-01,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 喝酒-01, 0 -> 羞愧-01),Map(x8 -> 我, x7 -> 羞愧-01, x9 -> 喝酒-01))),[Ljava.lang.String;@3d526ad9,Annotation([Ljava.lang.String;@e041f0c,[Ljava.lang.String;@6a175569,[Ljava.lang.String;@11963225),Annotation([Ljava.lang.String;@3f3c966c,[Ljava.lang.String;@11ee02f8,[Ledu.cmu.lti.nlp.amr.Dependency;@4102b1b1),Annotation([Ljava.lang.String;@61a5b4ae,[Ljava.lang.String;@3a71c100,[Ljava.lang.String;@5b69fd74),Annotation([Ljava.lang.String;@f325091,[Ljava.lang.String;@437e951d,[Ledu.cmu.lti.nlp.amr.Entity;@77b325b3))
AMR:
(x7 / 羞愧-01, example, x9 / 喝酒-01)
(x7 / 羞愧-01, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,461 microseconds
Sentence: 酒鬼 说完 以后 就 再 也 不 开口 了 。

Oracle Span 1:  也 => 也
Oracle Span 2:  再 => 再-01
Oracle Span 3:  就 => 就
Oracle Span 4:  开口 => 开口-01
Oracle Span 5:  说完 => 说完-01
Oracle Span 6:  酒鬼 => 酒鬼
Spans:
Span 5-6:  也 => 也
Span 4-5:  再 => 再-01
Span 3-4:  就 => 就
Span 7-8:  开口 => 开口-01
Span 1-2:  说完 => 说完-01
Span 0-1:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 4-5:  再 => 再-01
Oracle Span 3-4:  就 => 就
Oracle Span 7-8:  开口 => 开口-01
Oracle Span 1-2:  说完 => 说完-01
Oracle Span 0-1:  酒鬼 => 酒鬼

Dependencies:
1	酒鬼	_	NN	NN	_	2	nn	_	_
2	说完	_	NN	NN	_	3	lobj	_	_
3	以后	_	LC	LC	_	8	loc	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	再	_	AD	AD	_	8	advmod	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	不	_	AD	AD	_	8	neg	_	_
8	开口	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 说完-01, arg0, x3 / 酒鬼)
(x4 / 开口-01, manner, x6 / 也)
(x4 / 开口-01, manner, x7 / 再-01)
(x4 / 开口-01, manner, x8 / 就)

Input(Some(Graph((temporal :arg1 (说完-01 :arg0 酒鬼) :arg2 (开口-01 :arg0 x3 :manner 就 :manner 再-01 :manner 也 :polarity -)),ArrayBuffer(Span(1,2,List(0),说完,说完-01,false), Span(0,1,List(1),酒鬼,酒鬼,false), Span(7,8,List(2),开口,开口-01,false), Span(3,4,List(3),就,就,false), Span(4,5,List(4),再,再-01,false), Span(5,6,List(5),也,也,false)),Map(2 -> 开口-01, 5 -> 也, 1 -> 酒鬼, 4 -> 再-01, 0 -> 说完-01, 3 -> 就),Map(x2 -> 说完-01, x8 -> 就, x7 -> 再-01, x4 -> 开口-01, x3 -> 酒鬼, x6 -> 也))),[Ljava.lang.String;@63a5e46c,Annotation([Ljava.lang.String;@7e8e8651,[Ljava.lang.String;@49ef32e0,[Ljava.lang.String;@271f18d3),Annotation([Ljava.lang.String;@6bd51ed8,[Ljava.lang.String;@61e3a1fd,[Ledu.cmu.lti.nlp.amr.Dependency;@51abf713),Annotation([Ljava.lang.String;@eadb475,[Ljava.lang.String;@4d4d48a6,[Ljava.lang.String;@315df4bb),Annotation([Ljava.lang.String;@3fc08eec,[Ljava.lang.String;@5cad8b7d,[Ledu.cmu.lti.nlp.amr.Entity;@7b02e036))
AMR:
(x2 / 说完-01, ARG0, x7 / 再-01)
(x2 / 说完-01, location, x3 / 酒鬼)
(x4 / 开口-01, manner, x6 / 也)
(x4 / 开口-01, manner, x7 / 再-01)
(x4 / 开口-01, manner, x8 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 11,946 microseconds
Sentence: 小 王子 迷惑不解 地 离开 了 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  离开 => 离开-01
Oracle Span 4:  迷惑不解 => 迷惑不解-01
Spans:
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 4-5:  离开 => 离开-01
Span 2-3:  迷惑不解 => 迷惑不解-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  离开 => 离开-01
Oracle Span 2-3:  迷惑不解 => 迷惑不解-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	迷惑不解	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	离开	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 离开-01, arg0, x2 / 王子)
(x0 / 离开-01, manner, x4 / 迷惑不解-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((离开-01 :manner (迷惑不解-01 :arg0 x2) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),离开,离开-01,false), Span(2,3,List(1),迷惑不解,迷惑不解-01,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 迷惑不解-01, 0 -> 离开-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 迷惑不解-01, x3 -> 小-01, x0 -> 离开-01))),[Ljava.lang.String;@25243bc1,Annotation([Ljava.lang.String;@1e287667,[Ljava.lang.String;@2e6ee0bc,[Ljava.lang.String;@4201a617),Annotation([Ljava.lang.String;@467f77a5,[Ljava.lang.String;@1bb9aa43,[Ledu.cmu.lti.nlp.amr.Dependency;@420bc288),Annotation([Ljava.lang.String;@df5f5c0,[Ljava.lang.String;@308a6984,[Ljava.lang.String;@66b72664),Annotation([Ljava.lang.String;@7a34b7b8,[Ljava.lang.String;@58cd06cb,[Ledu.cmu.lti.nlp.amr.Entity;@3be8821f))
AMR:
(x0 / 离开-01, manner, x4 / 迷惑不解-01)
(x0 / 离开-01, prep-on-behalf, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,811 microseconds
Sentence: 在 旅途 中 ， 他 自言自语 地 说道 ： “ 这些 大人 确实 真 叫 怪 。 ”

Oracle Span 1:  他 => 他
Oracle Span 2:  大人 => 大人
Oracle Span 3:  怪 => 怪-02
Oracle Span 4:  旅途 => 旅途
Oracle Span 5:  真 => 真
Oracle Span 6:  确实 => 确实
Oracle Span 7:  自言自语 => 自言自语
Oracle Span 8:  说道 => 说道-01
Oracle Span 9:  这些 => 这些
Spans:
Span 4-5:  他 => 他
Span 11-12:  大人 => 大人
Span 15-16:  怪 => 怪-02
Span 1-2:  旅途 => 旅途
Span 13-14:  真 => 真
Span 12-13:  确实 => 确实
Span 5-6:  自言自语 => 自言自语
Span 7-8:  说道 => 说道-01
Span 10-11:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 11-12:  大人 => 大人
Oracle Span 15-16:  怪 => 怪-02
Oracle Span 1-2:  旅途 => 旅途
Oracle Span 13-14:  真 => 真
Oracle Span 12-13:  确实 => 确实
Oracle Span 5-6:  自言自语 => 自言自语
Oracle Span 7-8:  说道 => 说道-01
Oracle Span 10-11:  这些 => 这些

Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	旅途	_	NN	NN	_	3	lobj	_	_
3	中	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	他	_	PN	PN	_	8	nsubj	_	_
6	自言自语	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	15	punct	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	大人	_	NN	NN	_	15	nsubj	_	_
13	确实	_	AD	AD	_	15	advmod	_	_
14	真	_	AD	AD	_	15	advmod	_	_
15	叫	_	VV	VV	_	8	ccomp	_	_
16	怪	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	8	punct	_	_
18	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x0 / 说道-01, arg1, x4 / 怪-02)
(x0 / 说道-01, manner, x3 / 自言自语)
(x0 / 说道-01, time, x9 / 旅途)
(x4 / 怪-02, arg0, x7 / 大人)
(x4 / 怪-02, degree, x5 / 真)
(x4 / 怪-02, degree, x6 / 确实)
(x7 / 大人, mod, x8 / 这些)

Input(Some(Graph((说道-01 :time 旅途 :arg1 (怪-02 :arg0 (大人 :mod 这些) :degree 确实 :degree 真) :manner 自言自语 :arg0 他),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(1,2,List(1),旅途,旅途,false), Span(15,16,List(2),怪,怪-02,false), Span(11,12,List(3),大人,大人,false), Span(10,11,List(4),这些,这些,false), Span(12,13,List(5),确实,确实,false), Span(13,14,List(6),真,真,false), Span(5,6,List(7),自言自语,自言自语,false), Span(4,5,List(8),他,他,false)),Map(2 -> 怪-02, 5 -> 确实, 8 -> 他, 7 -> 自言自语, 1 -> 旅途, 4 -> 这些, 6 -> 真, 0 -> 说道-01, 3 -> 大人),Map(x2 -> 他, x5 -> 真, x8 -> 这些, x7 -> 大人, x4 -> 怪-02, x3 -> 自言自语, x6 -> 确实, x9 -> 旅途, x0 -> 说道-01))),[Ljava.lang.String;@64b31700,Annotation([Ljava.lang.String;@3b65e559,[Ljava.lang.String;@bae47a0,[Ljava.lang.String;@74a9c4b0),Annotation([Ljava.lang.String;@85ec632,[Ljava.lang.String;@1c05a54d,[Ledu.cmu.lti.nlp.amr.Dependency;@65ef722a),Annotation([Ljava.lang.String;@5fd9b663,[Ljava.lang.String;@214894fc,[Ljava.lang.String;@10567255),Annotation([Ljava.lang.String;@e362c57,[Ljava.lang.String;@1c4ee95c,[Ledu.cmu.lti.nlp.amr.Entity;@79c4715d))
AMR:
(x0 / 说道-01, manner, x3 / 自言自语)
(x0 / 说道-01, snt5, x7 / 大人)
(x0 / 说道-01, time, x9 / 旅途)
(x2 / 他, time, x9 / 旅途)
(x4 / 怪-02, degree, x5 / 真)
(x4 / 怪-02, degree, x6 / 确实)
(x4 / 怪-02, time, x7 / 大人)
(x7 / 大人, mod, x8 / 这些)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 22,749 microseconds
Sentence: XIII 。

Oracle Span 1:  XIII => XIII
Spans:
Span 0-1:  XIII => XIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIII => XIII

Dependencies:
1	XIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XIII,ArrayBuffer(Span(0,1,List(0),XIII,XIII,false)),Map(0 -> XIII),Map(x0 -> XIII))),[Ljava.lang.String;@5aa360ea,Annotation([Ljava.lang.String;@6548bb7d,[Ljava.lang.String;@e27ba81,[Ljava.lang.String;@54336c81),Annotation([Ljava.lang.String;@1556f2dd,[Ljava.lang.String;@35e52059,[Ledu.cmu.lti.nlp.amr.Dependency;@62577d6),Annotation([Ljava.lang.String;@49bd54f7,[Ljava.lang.String;@6b5f8707,[Ljava.lang.String;@772485dd),Annotation([Ljava.lang.String;@5a12c728,[Ljava.lang.String;@79ab3a71,[Ledu.cmu.lti.nlp.amr.Entity;@6e5bfdfc))
AMR:


Decoded in 1,340 microseconds
Sentence: 第四 个 行星 是 一 个 实业家 的 星球 。

Oracle Span 1:  实业家 => 实业家
Oracle Span 2:  星球 => 星球
Oracle Span 3:  行星 => 行星
Spans:
Span 6-7:  实业家 => 实业家
Span 8-9:  星球 => 星球
Span 2-3:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  实业家 => 实业家
Oracle Span 8-9:  星球 => 星球
Oracle Span 2-3:  行星 => 行星

Dependencies:
1	第四	_	OD	OD	_	2	ordmod	_	_
2	个	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	实业家	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 星球, domain, x4 / 行星)
(x0 / 星球, poss, x2 / 实业家)

Input(Some(Graph((星球 :domain (行星 :ord (ordinal-entity :value 4)) :poss (实业家 :quant 1)),ArrayBuffer(Span(8,9,List(0),星球,星球,false), Span(2,3,List(1),行星,行星,false), Span(6,7,List(2),实业家,实业家,false)),Map(2 -> 实业家, 1 -> 行星, 0 -> 星球),Map(x2 -> 实业家, x4 -> 行星, x0 -> 星球))),[Ljava.lang.String;@3d829787,Annotation([Ljava.lang.String;@71652c98,[Ljava.lang.String;@51bde877,[Ljava.lang.String;@60b85ba1),Annotation([Ljava.lang.String;@492fc69e,[Ljava.lang.String;@117632cf,[Ledu.cmu.lti.nlp.amr.Dependency;@2fb68ec6),Annotation([Ljava.lang.String;@d71adc2,[Ljava.lang.String;@3add81c4,[Ljava.lang.String;@1a1d3c1a),Annotation([Ljava.lang.String;@1c65121,[Ljava.lang.String;@159e366,[Ledu.cmu.lti.nlp.amr.Entity;@57dc9128))
AMR:
(x0 / 星球, domain, x4 / 行星)
(x0 / 星球, poss, x2 / 实业家)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,281 microseconds
Sentence: 这个 人 忙 得 不可开交 ， 小 王子 到来 的 时候 ， 他 甚至 连 头 都 没有 抬 一下 。

Oracle Span 1:  不可开交 => 不可开交-01
Oracle Span 2:  人 => 人
Oracle Span 3:  他 => 他
Oracle Span 4:  到来 => 到来-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  忙 => 忙-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  甚至 => 甚至
Oracle Span 9:  都 => 都
Spans:
Span 4-5:  不可开交 => 不可开交-01
Span 1-2:  人 => 人
Span 12-13:  他 => 他
Span 8-9:  到来 => 到来-01
Span 6-7:  小 => 小-01
Span 2-3:  忙 => 忙-01
Span 7-8:  王子 => 王子
Span 13-14:  甚至 => 甚至
Span 16-17:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  不可开交 => 不可开交-01
Oracle Span 1-2:  人 => 人
Oracle Span 12-13:  他 => 他
Oracle Span 8-9:  到来 => 到来-01
Oracle Span 6-7:  小 => 小-01
Oracle Span 2-3:  忙 => 忙-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 13-14:  甚至 => 甚至
Oracle Span 16-17:  都 => 都

Dependencies:
1	这个	_	CD	CD	_	2	nummod	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	忙	_	VV	VV	_	0	root	_	_
4	得	_	VV	VV	_	3	ccomp	_	_
5	不可开交	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	到来	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	时候	_	NN	NN	_	19	nsubj	_	_
12	,	_	PU	PU	_	19	punct	_	_
13	他	_	PN	PN	_	19	nsubj	_	_
14	甚至	_	AD	AD	_	19	advmod	_	_
15	连	_	AD	AD	_	16	advmod	_	_
16	头	_	NN	NN	_	19	dobj	_	_
17	都	_	AD	AD	_	19	advmod	_	_
18	没有	_	VV	VV	_	19	neg	_	_
19	抬	_	VV	VV	_	3	conj	_	_
20	一下	_	AD	AD	_	19	advmod	_	_
21	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 到来-01, arg0, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x3 / 忙-01, arg0, x5 / 人)
(x3 / 忙-01, degree, x7 / 不可开交-01)

Input(Some(Graph((忙-01 :cause (抬头-01 :arg0 他 :manner 都 :manner 甚至 :time (到来-01 :arg0 (王子 :mod 小-01)) :polarity -) :degree 不可开交-01 :arg0 (人 :mod 这)),ArrayBuffer(Span(2,3,List(0),忙,忙-01,false), Span(12,13,List(1),他,他,false), Span(16,17,List(2),都,都,false), Span(13,14,List(3),甚至,甚至,false), Span(8,9,List(4),到来,到来-01,false), Span(7,8,List(5),王子,王子,false), Span(6,7,List(6),小,小-01,false), Span(4,5,List(7),不可开交,不可开交-01,false), Span(1,2,List(8),人,人,false)),Map(2 -> 都, 5 -> 王子, 8 -> 人, 7 -> 不可开交-01, 1 -> 他, 4 -> 到来-01, 6 -> 小-01, 0 -> 忙-01, 3 -> 甚至),Map(x10 -> 都, x5 -> 人, x13 -> 王子, x12 -> 到来-01, x7 -> 不可开交-01, x11 -> 甚至, x3 -> 忙-01, x14 -> 小-01, x9 -> 他))),[Ljava.lang.String;@24528a25,Annotation([Ljava.lang.String;@17ae98d7,[Ljava.lang.String;@59221b97,[Ljava.lang.String;@6ac4944a),Annotation([Ljava.lang.String;@5a772895,[Ljava.lang.String;@39fc6b2c,[Ledu.cmu.lti.nlp.amr.Dependency;@704b2127),Annotation([Ljava.lang.String;@3ee39da0,[Ljava.lang.String;@5d332969,[Ljava.lang.String;@7cc9ce8),Annotation([Ljava.lang.String;@2e27d72f,[Ljava.lang.String;@c0b41d6,[Ledu.cmu.lti.nlp.amr.Entity;@4837595f))
AMR:
(x10 / 都, location, x11 / 甚至)
(x11 / 甚至, instrument, x9 / 他)
(x12 / 到来-01, consist, x13 / 王子)
(x12 / 到来-01, time, x11 / 甚至)
(x13 / 王子, mod, x14 / 小-01)
(x3 / 忙-01, degree, x7 / 不可开交-01)
(x3 / 忙-01, prep-from, x5 / 人)
(x7 / 不可开交-01, ARG4, x14 / 小-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.3
WARNING: makeIds can't find span Id: 0.2.3.0
WARNING: makeIds can't find span Id: 0.2.3.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 36,128 microseconds
Sentence: 小 王子 对 他 说 ： “ 您 好 。

Oracle Span 1:  他 => 他
Oracle Span 2:  好 => 好-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 3-4:  他 => 他
Span 8-9:  好 => 好-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 8-9:  好 => 好-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	他	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	9	punct	_	_
8	您	_	PN	PN	_	9	nsubj	_	_
9	好	_	VA	VA	_	5	ccomp	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 好-01)
(x0 / 说-01, arg3, x4 / 他)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 (好-01 :arg0 x4) :arg3 他 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(8,9,List(1),好,好-01,false), Span(3,4,List(2),他,他,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 他, 1 -> 好-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 好-01, x4 -> 他, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@2bffa76d,Annotation([Ljava.lang.String;@3b718392,[Ljava.lang.String;@6d2260db,[Ljava.lang.String;@1f2d2181),Annotation([Ljava.lang.String;@49bf29c6,[Ljava.lang.String;@7ee55e70,[Ledu.cmu.lti.nlp.amr.Dependency;@3fcdcf),Annotation([Ljava.lang.String;@7668d560,[Ljava.lang.String;@46292372,[Ljava.lang.String;@126be319),Annotation([Ljava.lang.String;@6c44052e,[Ljava.lang.String;@5c371e13,[Ledu.cmu.lti.nlp.amr.Entity;@530a8454))
AMR:
(x0 / 说-01, ARG6, x5 / 好-01)
(x0 / 说-01, op, x2 / 王子)
(x0 / 说-01, purpose, x4 / 他)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,395 microseconds
Sentence: 您 的 烟卷 灭 了 。 ”

Oracle Span 1:  您 => 您
Oracle Span 2:  灭 => 灭-01
Oracle Span 3:  烟卷 => 烟卷
Spans:
Span 0-1:  您 => 您
Span 3-4:  灭 => 灭-01
Span 2-3:  烟卷 => 烟卷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  您 => 您
Oracle Span 3-4:  灭 => 灭-01
Oracle Span 2-3:  烟卷 => 烟卷

Dependencies:
1	您	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	烟卷	_	NN	NN	_	4	nsubj	_	_
4	灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 灭-01, arg1, x7 / 烟卷)
(x7 / 烟卷, poss, x8 / 您)

Input(Some(Graph((say :arg1 (灭-01 :arg1 (烟卷 :poss 您))),ArrayBuffer(Span(3,4,List(0),灭,灭-01,false), Span(2,3,List(1),烟卷,烟卷,false), Span(0,1,List(2),您,您,false)),Map(2 -> 您, 1 -> 烟卷, 0 -> 灭-01),Map(x8 -> 您, x7 -> 烟卷, x6 -> 灭-01))),[Ljava.lang.String;@1e34c607,Annotation([Ljava.lang.String;@5215cd9a,[Ljava.lang.String;@36b6964d,[Ljava.lang.String;@31198ceb),Annotation([Ljava.lang.String;@9257031,[Ljava.lang.String;@75201592,[Ledu.cmu.lti.nlp.amr.Dependency;@7726e185),Annotation([Ljava.lang.String;@aa5455e,[Ljava.lang.String;@282308c3,[Ljava.lang.String;@5dda14d0),Annotation([Ljava.lang.String;@1db0ec27,[Ljava.lang.String;@3d9fc57a,[Ledu.cmu.lti.nlp.amr.Entity;@d4ab71a))
AMR:
(x6 / 灭-01, location, x7 / 烟卷)
(x7 / 烟卷, poss, x8 / 您)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 7,357 microseconds
Sentence: “ 三 加 二 等于 五 。

Oracle Span 1:  加 => 加-02
Oracle Span 2:  等于 => 等于-01
Spans:
Span 2-3:  加 => 加-02
Span 4-5:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  加 => 加-02
Oracle Span 4-5:  等于 => 等于-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	三	_	CD	CD	_	4	nummod	_	_
3	加	_	CC	CC	_	4	cc	_	_
4	二	_	CD	CD	_	5	conj	_	_
5	等于	_	VV	VV	_	0	root	_	_
6	五	_	CD	CD	_	5	range	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 等于-01, arg0, x12 / 加-02)

Input(Some(Graph((say :arg1 (等于-01 :arg1 5 :arg0 (加-02 :arg1 2 :arg0 3))),ArrayBuffer(Span(4,5,List(0),等于,等于-01,false), Span(2,3,List(1),加,加-02,false)),Map(1 -> 加-02, 0 -> 等于-01),Map(x8 -> 等于-01, x12 -> 加-02))),[Ljava.lang.String;@3b4ef7,Annotation([Ljava.lang.String;@1af05b03,[Ljava.lang.String;@5987e932,[Ljava.lang.String;@1ad777f),Annotation([Ljava.lang.String;@5bbbdd4b,[Ljava.lang.String;@438bad7c,[Ledu.cmu.lti.nlp.amr.Dependency;@25230246),Annotation([Ljava.lang.String;@4fdf8f12,[Ljava.lang.String;@4a8b5227,[Ljava.lang.String;@54f5f647),Annotation([Ljava.lang.String;@6979efad,[Ljava.lang.String;@5a6d5a8f,[Ledu.cmu.lti.nlp.amr.Entity;@4a67318f))
AMR:
(x8 / 等于-01, degree, x12 / 加-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,871 microseconds
Sentence: 五 加 七 等于 十二 。

Oracle Span 1:  加 => 加-01
Oracle Span 2:  等于 => 等于-01
Spans:
Span 1-2:  加 => 加-01
Span 3-4:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  等于 => 等于-01

Dependencies:
1	五	_	CD	CD	_	3	nummod	_	_
2	加	_	CC	CC	_	3	cc	_	_
3	七	_	CD	CD	_	4	conj	_	_
4	等于	_	VV	VV	_	0	root	_	_
5	十二	_	CD	CD	_	4	range	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 等于-01, arg0, x8 / 加-01)

Input(Some(Graph((等于-01 :arg1 12 :arg0 (加-01 :arg1 7 :arg0 5)),ArrayBuffer(Span(3,4,List(0),等于,等于-01,false), Span(1,2,List(1),加,加-01,false)),Map(1 -> 加-01, 0 -> 等于-01),Map(x8 -> 加-01, x6 -> 等于-01))),[Ljava.lang.String;@315ba14a,Annotation([Ljava.lang.String;@17f9344b,[Ljava.lang.String;@27f0ad19,[Ljava.lang.String;@54e81b21),Annotation([Ljava.lang.String;@38d5b107,[Ljava.lang.String;@6650813a,[Ledu.cmu.lti.nlp.amr.Dependency;@44ea608c),Annotation([Ljava.lang.String;@50cf5a23,[Ljava.lang.String;@450794b4,[Ljava.lang.String;@273c947f),Annotation([Ljava.lang.String;@30457e14,[Ljava.lang.String;@1af1347d,[Ledu.cmu.lti.nlp.amr.Entity;@632aa1a3))
AMR:
(x6 / 等于-01, degree, x8 / 加-01)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,654 microseconds
Sentence: 十二 加 三 等于 十五 。

Oracle Span 1:  加 => 加-01
Oracle Span 2:  等于 => 等于-01
Spans:
Span 1-2:  加 => 加-01
Span 3-4:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  等于 => 等于-01

Dependencies:
1	十二	_	CD	CD	_	3	nummod	_	_
2	加	_	CC	CC	_	3	cc	_	_
3	三	_	CD	CD	_	4	conj	_	_
4	等于	_	VV	VV	_	0	root	_	_
5	十五	_	CD	CD	_	4	range	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 等于-01, arg0, x8 / 加-01)

Input(Some(Graph((等于-01 :arg1 15 :arg0 (加-01 :arg1 3 :arg0 12)),ArrayBuffer(Span(3,4,List(0),等于,等于-01,false), Span(1,2,List(1),加,加-01,false)),Map(1 -> 加-01, 0 -> 等于-01),Map(x8 -> 加-01, x6 -> 等于-01))),[Ljava.lang.String;@20765ed5,Annotation([Ljava.lang.String;@3b582111,[Ljava.lang.String;@2899a8db,[Ljava.lang.String;@1e8823d2),Annotation([Ljava.lang.String;@c1a4620,[Ljava.lang.String;@76b0ae1b,[Ledu.cmu.lti.nlp.amr.Dependency;@130a0f66),Annotation([Ljava.lang.String;@4c432866,[Ljava.lang.String;@12365c88,[Ljava.lang.String;@6105f8a3),Annotation([Ljava.lang.String;@2237bada,[Ljava.lang.String;@77e2a6e2,[Ledu.cmu.lti.nlp.amr.Entity;@5710768a))
AMR:
(x6 / 等于-01, degree, x8 / 加-01)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,892 microseconds
Sentence: 你 好 。

Oracle Span 1:  你 => 你
Oracle Span 2:  好 => 好-01
Spans:
Span 0-1:  你 => 你
Span 1-2:  好 => 好-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  好 => 好-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	好	_	VA	VA	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 好-01, arg0, x2 / 你)

Input(Some(Graph((好-01 :arg0 你),ArrayBuffer(Span(1,2,List(0),好,好-01,false), Span(0,1,List(1),你,你,false)),Map(1 -> 你, 0 -> 好-01),Map(x2 -> 你, x0 -> 好-01))),[Ljava.lang.String;@199e4c2b,Annotation([Ljava.lang.String;@6e0d4a8,[Ljava.lang.String;@64d7b720,[Ljava.lang.String;@30272916),Annotation([Ljava.lang.String;@5bb3d42d,[Ljava.lang.String;@5bf61e67,[Ledu.cmu.lti.nlp.amr.Dependency;@2c1dc8e),Annotation([Ljava.lang.String;@b273a59,[Ljava.lang.String;@4e7095ac,[Ljava.lang.String;@251ebf23),Annotation([Ljava.lang.String;@29b732a2,[Ljava.lang.String;@1b70203f,[Ledu.cmu.lti.nlp.amr.Entity;@51671b08))
AMR:
(x0 / 好-01, ARG0, x2 / 你)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,657 microseconds
Sentence: 十五 加 七 ， 二十二 。

Oracle Span 1:  加 => 加-01
Spans:
Span 1-2:  加 => 加-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Dependencies:
1	十五	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	七	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	二十二	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((equal :arg1 (加-01 :arg1 7 :arg0 15) :arg2 22),ArrayBuffer(Span(1,2,List(0),加,加-01,false)),Map(0 -> 加-01),Map(x13 -> 加-01))),[Ljava.lang.String;@15051a0,Annotation([Ljava.lang.String;@1162410a,[Ljava.lang.String;@b09fac1,[Ljava.lang.String;@62df0ff3),Annotation([Ljava.lang.String;@61019f59,[Ljava.lang.String;@62e8f862,[Ledu.cmu.lti.nlp.amr.Dependency;@26f3d90c),Annotation([Ljava.lang.String;@3c49fab6,[Ljava.lang.String;@515f4131,[Ljava.lang.String;@74518890),Annotation([Ljava.lang.String;@4c5204af,[Ljava.lang.String;@3f3ddbd9,[Ledu.cmu.lti.nlp.amr.Entity;@14c053c6))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,430 microseconds
Sentence: 二十二 加 六 ， 二十八 。

Oracle Span 1:  加 => 加-01
Spans:
Span 1-2:  加 => 加-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Dependencies:
1	二十二	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	六	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	二十八	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((equal :arg1 (加-01 :arg1 6 :arg0 22) :arg2 28),ArrayBuffer(Span(1,2,List(0),加,加-01,false)),Map(0 -> 加-01),Map(x19 -> 加-01))),[Ljava.lang.String;@6c2d4cc6,Annotation([Ljava.lang.String;@30865a90,[Ljava.lang.String;@6134ac4a,[Ljava.lang.String;@777c9dc9),Annotation([Ljava.lang.String;@71b1a49c,[Ljava.lang.String;@73e132e0,[Ledu.cmu.lti.nlp.amr.Dependency;@3773862a),Annotation([Ljava.lang.String;@2472c7d8,[Ljava.lang.String;@589b028e,[Ljava.lang.String;@22175d4f),Annotation([Ljava.lang.String;@9fecdf1,[Ljava.lang.String;@3b809711,[Ledu.cmu.lti.nlp.amr.Entity;@3b0f7d9d))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,414 microseconds
Sentence: 没有 时间 去 再 点 着 它 。

Oracle Span 1:  再 => 再
Oracle Span 2:  去 => 去-01
Oracle Span 3:  它 => 它
Oracle Span 4:  时间 => 时间
Oracle Span 5:  点 => 点-01
Spans:
Span 3-4:  再 => 再
Span 2-3:  去 => 去-01
Span 6-7:  它 => 它
Span 1-2:  时间 => 时间
Span 4-5:  点 => 点-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  再 => 再
Oracle Span 2-3:  去 => 去-01
Oracle Span 6-7:  它 => 它
Oracle Span 1-2:  时间 => 时间
Oracle Span 4-5:  点 => 点-01

Dependencies:
1	没有	_	VE	VE	_	0	root	_	_
2	时间	_	NN	NN	_	1	dobj	_	_
3	去	_	MSP	MSP	_	6	prtmod	_	_
4	再	_	AD	AD	_	6	advmod	_	_
5	点	_	NN	NN	_	6	prep	_	_
6	着	_	VV	VV	_	1	conj	_	_
7	它	_	PN	PN	_	6	dobj	_	_
8	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x11 / 去-01, arg1, x12 / 点-01)
(x12 / 点-01, arg1, x13 / 它)
(x12 / 点-01, manner, x14 / 再)

Input(Some(Graph((有-01 :polarity - :arg1 时间 :purpose (去-01 :arg1 (点-01 :manner 再 :arg1 它))),ArrayBuffer(Span(1,2,List(0),时间,时间,false), Span(2,3,List(1),去,去-01,false), Span(4,5,List(2),点,点-01,false), Span(3,4,List(3),再,再,false), Span(6,7,List(4),它,它,false)),Map(2 -> 点-01, 1 -> 去-01, 4 -> 它, 0 -> 时间, 3 -> 再),Map(x10 -> 时间, x13 -> 它, x12 -> 点-01, x11 -> 去-01, x14 -> 再))),[Ljava.lang.String;@236ab296,Annotation([Ljava.lang.String;@5c84624f,[Ljava.lang.String;@63034ed1,[Ljava.lang.String;@232024b9),Annotation([Ljava.lang.String;@55a8dc49,[Ljava.lang.String;@2a415aa9,[Ledu.cmu.lti.nlp.amr.Dependency;@53cdecf6),Annotation([Ljava.lang.String;@71ea1fda,[Ljava.lang.String;@62b3df3a,[Ljava.lang.String;@420745d7),Annotation([Ljava.lang.String;@7e11ab3d,[Ljava.lang.String;@5fa47fea,[Ledu.cmu.lti.nlp.amr.Entity;@2392212b))
AMR:
(x11 / 去-01, ARG3, x12 / 点-01)
(x12 / 点-01, ARG3, x13 / 它)
(x12 / 点-01, manner, x14 / 再)
(x14 / 再, location, x10 / 时间)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
Decoded in 8,996 microseconds
Sentence: 二十六 加 五 ， 三十一 。

Oracle Span 1:  加 => 加-01
Spans:
Span 1-2:  加 => 加-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Dependencies:
1	二十六	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	五	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	三十一	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((equal :arg1 (加-01 :arg1 5 :arg0 26) :arg2 31),ArrayBuffer(Span(1,2,List(0),加,加-01,false)),Map(0 -> 加-01),Map(x19 -> 加-01))),[Ljava.lang.String;@5b43e173,Annotation([Ljava.lang.String;@28f8e165,[Ljava.lang.String;@545f80bf,[Ljava.lang.String;@66f66866),Annotation([Ljava.lang.String;@22fa55b2,[Ljava.lang.String;@4d666b41,[Ledu.cmu.lti.nlp.amr.Dependency;@6594402a),Annotation([Ljava.lang.String;@30f4b1a6,[Ljava.lang.String;@405325cf,[Ljava.lang.String;@3e1162e7),Annotation([Ljava.lang.String;@79c3f01f,[Ljava.lang.String;@6c2f1700,[Ledu.cmu.lti.nlp.amr.Entity;@350b3a17))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,886 microseconds
Sentence: 哎哟！

Oracle Span 1:  哎哟 => 哎哟
NER Entity: (person :name (name :op "哎哟"))
Spans:
Span 0-1:  哎哟 => 哎哟

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  哎哟 => 哎哟

Dependencies:
1	哎哟！	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph((哎哟 :mode expressive),ArrayBuffer(Span(0,1,List(0),哎哟,哎哟,false)),Map(0 -> 哎哟),Map(x0 -> 哎哟))),[Ljava.lang.String;@38600b,Annotation([Ljava.lang.String;@669d2b1b,[Ljava.lang.String;@721eb7df,[Ljava.lang.String;@1ea9f009),Annotation([Ljava.lang.String;@5d52e3ef,[Ljava.lang.String;@5298dead,[Ledu.cmu.lti.nlp.amr.Dependency;@553f3b6e),Annotation([Ljava.lang.String;@4c7a078,[Ljava.lang.String;@4e406694,[Ljava.lang.String;@5ab9b447),Annotation([Ljava.lang.String;@76f10035,[Ljava.lang.String;@4f8caaf3,[Ledu.cmu.lti.nlp.amr.Entity;@2b50150))
AMR:


Decoded in 1,392 microseconds
Sentence: 一共 是 五亿一百六十二万二千七百三十一 。 ”

Oracle Span 1:  一共 => 一共
Spans:
Span 0-1:  一共 => 一共

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  一共 => 一共

Dependencies:
1	一共	_	CD	CD	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	五亿一百六十二万二千七百三十一	_	CD	CD	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (501622731 :manner 一共)),ArrayBuffer(Span(0,1,List(0),一共,一共,false)),Map(0 -> 一共),Map(x11 -> 一共))),[Ljava.lang.String;@15b986cd,Annotation([Ljava.lang.String;@6bb7cce7,[Ljava.lang.String;@41c62850,[Ljava.lang.String;@6b530eb9),Annotation([Ljava.lang.String;@328572f0,[Ljava.lang.String;@678040b3,[Ledu.cmu.lti.nlp.amr.Dependency;@17f460bb),Annotation([Ljava.lang.String;@64a1923a,[Ljava.lang.String;@7d2a6eac,[Ljava.lang.String;@18ca3c62),Annotation([Ljava.lang.String;@2c0f7678,[Ljava.lang.String;@44d70181,[Ledu.cmu.lti.nlp.amr.Entity;@6aa648b9))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,817 microseconds
Sentence: “ 五亿 什么 呀 ？ ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	五亿	_	CD	CD	_	3	nummod	_	_
3	什么	_	PN	PN	_	0	root	_	_
4	呀	_	SP	SP	_	3	dep	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (amr-unknown :quant 500000000 :mode interrogative)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@23c650a3,Annotation([Ljava.lang.String;@742d4e15,[Ljava.lang.String;@88a8218,[Ljava.lang.String;@50b1f030),Annotation([Ljava.lang.String;@4163f1cd,[Ljava.lang.String;@5fa05212,[Ledu.cmu.lti.nlp.amr.Dependency;@3e681bc),Annotation([Ljava.lang.String;@5c09d180,[Ljava.lang.String;@23aae55,[Ljava.lang.String;@5f574cc2),Annotation([Ljava.lang.String;@680bddf5,[Ljava.lang.String;@7a9c84a5,[Ledu.cmu.lti.nlp.amr.Entity;@2d83c5a5))
AMR:


Decoded in 1,716 microseconds
Sentence: “ 嗯 ？

Oracle Span 1:  嗯 => 嗯
Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (嗯 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(x5 -> 嗯))),[Ljava.lang.String;@48d7ad8b,Annotation([Ljava.lang.String;@7e053511,[Ljava.lang.String;@60222fd8,[Ljava.lang.String;@53bf7094),Annotation([Ljava.lang.String;@26f1249d,[Ljava.lang.String;@710b30ef,[Ledu.cmu.lti.nlp.amr.Dependency;@a68df9),Annotation([Ljava.lang.String;@28b576a9,[Ljava.lang.String;@7cf7aee,[Ljava.lang.String;@2f6bbeb0),Annotation([Ljava.lang.String;@1b1637e1,[Ljava.lang.String;@18151a14,[Ledu.cmu.lti.nlp.amr.Entity;@64711bf2))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,421 microseconds
Sentence: 你 还 待 在 这儿 那 ？

Oracle Span 1:  你 => 你
Oracle Span 2:  待 => 待-01
Oracle Span 3:  还 => 还
Oracle Span 4:  这儿 => 这儿
Spans:
Span 0-1:  你 => 你
Span 2-3:  待 => 待-01
Span 1-2:  还 => 还
Span 4-5:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  待 => 待-01
Oracle Span 1-2:  还 => 还
Oracle Span 4-5:  这儿 => 这儿

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	待	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这儿	_	PN	PN	_	6	dep	_	_
6	那	_	PN	PN	_	4	pobj	_	_
7	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 待-01, arg0, x3 / 你)
(x0 / 待-01, arg1, x4 / 这儿)
(x0 / 待-01, manner, x2 / 还)

Input(Some(Graph((待-01 :mode interrogative :arg1 这儿 :arg0 你 :manner 还),ArrayBuffer(Span(2,3,List(0),待,待-01,false), Span(4,5,List(1),这儿,这儿,false), Span(0,1,List(2),你,你,false), Span(1,2,List(3),还,还,false)),Map(2 -> 你, 1 -> 这儿, 0 -> 待-01, 3 -> 还),Map(x2 -> 还, x4 -> 这儿, x3 -> 你, x0 -> 待-01))),[Ljava.lang.String;@169da7f2,Annotation([Ljava.lang.String;@3c1e23ff,[Ljava.lang.String;@ceb4bd2,[Ljava.lang.String;@60297f36),Annotation([Ljava.lang.String;@1bf0f6f6,[Ljava.lang.String;@56bc3fac,[Ledu.cmu.lti.nlp.amr.Dependency;@df4b72),Annotation([Ljava.lang.String;@2ba45490,[Ljava.lang.String;@37ff4054,[Ljava.lang.String;@894858),Annotation([Ljava.lang.String;@7af707e0,[Ljava.lang.String;@737edcfa,[Ledu.cmu.lti.nlp.amr.Entity;@3ecedf21))
AMR:
(x0 / 待-01, accompanier, x4 / 这儿)
(x0 / 待-01, manner, x2 / 还)
(x0 / 待-01, poss, x3 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,120 microseconds
Sentence: 五亿一百万 … 我 也 不 知道 是 什么 了 。

Oracle Span 1:  也 => 也
Oracle Span 2:  我 => 我
Oracle Span 3:  知道 => 知道-01
Spans:
Span 3-4:  也 => 也
Span 2-3:  我 => 我
Span 5-6:  知道 => 知道-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  我 => 我
Oracle Span 5-6:  知道 => 知道-01

Dependencies:
1	五亿一百万	_	CD	CD	_	6	dep	_	_
2	…	_	PU	PU	_	6	dep	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	知道	_	VV	VV	_	0	root	_	_
7	是	_	VC	VC	_	6	dobj	_	_
8	什么	_	PN	PN	_	7	attr	_	_
9	了	_	SP	SP	_	7	dep	_	_
10	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x3 / 知道-01, arg0, x6 / 我)
(x3 / 知道-01, manner, x5 / 也)

Input(Some(Graph((multi-sentence :snt2 (知道-01 :arg1 (amr-unknown :domain thing) :arg0 我 :manner 也 :polarity -) :snt1 501000000),ArrayBuffer(Span(5,6,List(0),知道,知道-01,false), Span(2,3,List(1),我,我,false), Span(3,4,List(2),也,也,false)),Map(2 -> 也, 1 -> 我, 0 -> 知道-01),Map(x5 -> 也, x3 -> 知道-01, x6 -> 我))),[Ljava.lang.String;@74cf8b28,Annotation([Ljava.lang.String;@36c54a56,[Ljava.lang.String;@3359c978,[Ljava.lang.String;@7ba63fe5),Annotation([Ljava.lang.String;@73386d72,[Ljava.lang.String;@6f330eb9,[Ledu.cmu.lti.nlp.amr.Dependency;@125c082e),Annotation([Ljava.lang.String;@584f5497,[Ljava.lang.String;@68ace111,[Ljava.lang.String;@1f9d6c7b),Annotation([Ljava.lang.String;@6df20ade,[Ljava.lang.String;@4fbb001b,[Ledu.cmu.lti.nlp.amr.Entity;@4010d494))
AMR:
(x3 / 知道-01, ARG4, x5 / 也)
(x3 / 知道-01, year, x6 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 6,071 microseconds
Sentence: 我 的 工作 很多 …

Oracle Span 1:  工作 => 工作
Oracle Span 2:  我 => 我
Spans:
Span 2-3:  工作 => 工作
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  工作 => 工作
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	工作	_	NN	NN	_	5	nsubj	_	_
4	很多	_	CD	CD	_	5	nummod	_	_
5	…	_	M	M	_	0	root	_	_

Oracle:
(x5 / 工作, poss, x6 / 我)

Input(Some(Graph((多-03 :degree 很 :arg0 (工作 :poss 我)),ArrayBuffer(Span(2,3,List(0),工作,工作,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 工作),Map(x5 -> 工作, x6 -> 我))),[Ljava.lang.String;@341a8659,Annotation([Ljava.lang.String;@4943defe,[Ljava.lang.String;@5eefa415,[Ljava.lang.String;@181d7f28),Annotation([Ljava.lang.String;@78d50a3c,[Ljava.lang.String;@2fb69ff6,[Ledu.cmu.lti.nlp.amr.Dependency;@cda4919),Annotation([Ljava.lang.String;@7f4d9395,[Ljava.lang.String;@2f19f2aa,[Ljava.lang.String;@344b8190),Annotation([Ljava.lang.String;@6a078481,[Ljava.lang.String;@79c5636f,[Ledu.cmu.lti.nlp.amr.Entity;@1929425f))
AMR:
(x5 / 工作, poss, x6 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 2,970 microseconds
Sentence: 我 是 很 严肃 的 ，

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  很 => 很
Oracle Span 3:  我 => 我
Spans:
Span 3-4:  严肃 => 严肃-01
Span 2-3:  很 => 很
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	严肃	_	JJ	JJ	_	2	attr	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 严肃-01, arg0, x3 / 我)
(x0 / 严肃-01, degree, x2 / 很)

Input(Some(Graph((严肃-01 :arg0 我 :degree 很),ArrayBuffer(Span(3,4,List(0),严肃,严肃-01,false), Span(0,1,List(1),我,我,false), Span(2,3,List(2),很,很,false)),Map(2 -> 很, 1 -> 我, 0 -> 严肃-01),Map(x2 -> 很, x3 -> 我, x0 -> 严肃-01))),[Ljava.lang.String;@718607eb,Annotation([Ljava.lang.String;@27f3b6d6,[Ljava.lang.String;@757f675c,[Ljava.lang.String;@2617f816),Annotation([Ljava.lang.String;@676f0a60,[Ljava.lang.String;@5d10455d,[Ledu.cmu.lti.nlp.amr.Dependency;@535b8c24),Annotation([Ljava.lang.String;@4a951911,[Ljava.lang.String;@55b62629,[Ljava.lang.String;@a53bb6f),Annotation([Ljava.lang.String;@5e63cad,[Ljava.lang.String;@6759f091,[Ledu.cmu.lti.nlp.amr.Entity;@33a053d))
AMR:
(x0 / 严肃-01, ARG3, x3 / 我)
(x0 / 严肃-01, degree, x2 / 很)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,662 microseconds
Sentence: 我 可是 从来 也 没有 功夫 去 闲聊 ！

Oracle Span 1:  也 => 也
Oracle Span 2:  从来 => 从来
Oracle Span 3:  功夫 => 功夫
Oracle Span 4:  去 => 去-01
Oracle Span 5:  我 => 我
Oracle Span 6:  闲聊 => 闲聊-01
Spans:
Span 3-4:  也 => 也
Span 2-3:  从来 => 从来
Span 5-6:  功夫 => 功夫
Span 6-7:  去 => 去-01
Span 0-1:  我 => 我
Span 7-8:  闲聊 => 闲聊-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  从来 => 从来
Oracle Span 5-6:  功夫 => 功夫
Oracle Span 6-7:  去 => 去-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  闲聊 => 闲聊-01

Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	7	conj	_	_
6	功夫	_	NN	NN	_	5	dobj	_	_
7	去	_	VV	VV	_	0	root	_	_
8	闲聊	_	NN	NN	_	7	dobj	_	_
9	！	_	PU	PU	_	7	punct	_	_

Oracle:
(x17 / 去-01, arg1, x19 / 闲聊-01)

Input(Some(Graph((有-01 :arg0 我 :polarity - :time 从来 :manner 也 :arg1 功夫 :purpose (去-01 :arg1 (闲聊-01 :arg0 x12) :arg0 x12) :mode expressive),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),从来,从来,false), Span(3,4,List(2),也,也,false), Span(5,6,List(3),功夫,功夫,false), Span(6,7,List(4),去,去-01,false), Span(7,8,List(5),闲聊,闲聊-01,false)),Map(2 -> 也, 5 -> 闲聊-01, 1 -> 从来, 4 -> 去-01, 0 -> 我, 3 -> 功夫),Map(x16 -> 功夫, x19 -> 闲聊-01, x12 -> 我, x15 -> 也, x14 -> 从来, x17 -> 去-01))),[Ljava.lang.String;@14a54ef6,Annotation([Ljava.lang.String;@20921b9b,[Ljava.lang.String;@867ba60,[Ljava.lang.String;@5ba745bc),Annotation([Ljava.lang.String;@654b72c0,[Ljava.lang.String;@55b5e331,[Ledu.cmu.lti.nlp.amr.Dependency;@6034e75d),Annotation([Ljava.lang.String;@15fc442,[Ljava.lang.String;@3f3c7bdb,[Ljava.lang.String;@456abb66),Annotation([Ljava.lang.String;@2a3a299,[Ljava.lang.String;@7da10b5b,[Ledu.cmu.lti.nlp.amr.Entity;@219f4597))
AMR:
(x14 / 从来, domain, x12 / 我)
(x17 / 去-01, manner, x14 / 从来)
(x17 / 去-01, manner, x15 / 也)
(x17 / 去-01, manner, x16 / 功夫)
(x17 / 去-01, snt11, x19 / 闲聊-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.5
WARNING: makeIds can't find span Id: 0.5.1
Decoded in 10,114 microseconds
Sentence: 二 加 五 得 七 … ”

Oracle Span 1:  加 => 加-01
Oracle Span 2:  得 => 得-06
Spans:
Span 1-2:  加 => 加-01
Span 3-4:  得 => 得-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  得 => 得-06

Dependencies:
1	二	_	CD	CD	_	2	nummod	_	_
2	加	_	NR	NR	_	4	nsubj	_	_
3	五	_	CD	CD	_	4	nsubj	_	_
4	得	_	VV	VV	_	0	root	_	_
5	七	_	CD	CD	_	7	nummod	_	_
6	…	_	PU	PU	_	7	punct	_	_
7	”	_	CD	CD	_	4	range	_	_

Oracle:
(x13 / 得-06, arg0, x17 / 加-01)

Input(Some(Graph((say :arg1 (得-06 :arg1 7 :arg0 (加-01 :arg1 5 :arg0 2))),ArrayBuffer(Span(3,4,List(0),得,得-06,false), Span(1,2,List(1),加,加-01,false)),Map(1 -> 加-01, 0 -> 得-06),Map(x13 -> 得-06, x17 -> 加-01))),[Ljava.lang.String;@31be6b49,Annotation([Ljava.lang.String;@2e16b08d,[Ljava.lang.String;@5b989dc7,[Ljava.lang.String;@70d8de),Annotation([Ljava.lang.String;@42561fba,[Ljava.lang.String;@595f4da5,[Ledu.cmu.lti.nlp.amr.Dependency;@46b695ec),Annotation([Ljava.lang.String;@408613cc,[Ljava.lang.String;@325f7fa9,[Ljava.lang.String;@11ce2e22),Annotation([Ljava.lang.String;@63a5d002,[Ljava.lang.String;@13cda7c9,[Ledu.cmu.lti.nlp.amr.Entity;@5aa6202e))
AMR:
(x13 / 得-06, ARG4, x17 / 加-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,084 microseconds
Sentence: “ 五亿一百万 什么 呀 ？ ” 小 王子 重复 问道 。 一旦 他 提出 了 一 个 问题 ， 是 从来 也 不 会 放弃 的 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  他 => 他
Oracle Span 3:  会 => 会-02
Oracle Span 4:  小 => 小-01
Oracle Span 5:  提出 => 提出-01
Oracle Span 6:  放弃 => 放弃-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  重复 => 重复-01
Oracle Span 9:  问道 => 问道-01
Oracle Span 10:  问题 => 问题
Spans:
Span 20-21:  从来 => 从来
Span 12-13:  他 => 他
Span 23-24:  会 => 会-02
Span 6-7:  小 => 小-01
Span 13-14:  提出 => 提出-01
Span 24-25:  放弃 => 放弃-01
Span 7-8:  王子 => 王子
Span 8-9:  重复 => 重复-01
Span 9-10:  问道 => 问道-01
Span 17-18:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 20-21:  从来 => 从来
Oracle Span 12-13:  他 => 他
Oracle Span 23-24:  会 => 会-02
Oracle Span 6-7:  小 => 小-01
Oracle Span 13-14:  提出 => 提出-01
Oracle Span 24-25:  放弃 => 放弃-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  重复 => 重复-01
Oracle Span 9-10:  问道 => 问道-01
Oracle Span 17-18:  问题 => 问题

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	五亿一百万	_	CD	CD	_	5	nummod	_	_
3	什么	_	DT	DT	_	4	det	_	_
4	呀	_	NN	NN	_	5	nn	_	_
5	？	_	NN	NN	_	8	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	重复	_	VV	VV	_	0	root	_	_
10	问道	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	一旦	_	CD	CD	_	14	nsubj	_	_
13	他	_	PN	PN	_	14	nsubj	_	_
14	提出	_	VV	VV	_	9	conj	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	18	clf	_	_
18	问题	_	NN	NN	_	14	dobj	_	_
19	,	_	PU	PU	_	9	punct	_	_
20	是	_	VC	VC	_	9	conj	_	_
21	从来	_	AD	AD	_	24	advmod	_	_
22	也	_	AD	AD	_	24	advmod	_	_
23	不	_	AD	AD	_	24	neg	_	_
24	会	_	VV	VV	_	20	attr	_	_
25	放弃	_	VV	VV	_	24	comod	_	_
26	的	_	DEC	DEC	_	24	cpm	_	_
27	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 提出-01, arg0, x12 / 他)
(x11 / 提出-01, arg1, x13 / 问题)
(x15 / 会-02, arg0, x16 / 放弃-01)
(x15 / 会-02, manner, x18 / 从来)
(x2 / 问道-01, manner, x3 / 重复-01)
(x3 / 重复-01, arg0, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (问道-01 :mode interrogative :arg1 (amr-unknown :quant 501000000) :arg0 x4 :manner (重复-01 :arg0 (王子 :mod 小-01))) :snt2 (condition :arg1 (提出-01 :arg1 (问题 :quant 1) :arg0 他) :arg2 (会-02 :manner 从来 :polarity - :arg0 (放弃-01 :arg0 x12)))),ArrayBuffer(Span(9,10,List(0),问道,问道-01,false), Span(8,9,List(1),重复,重复-01,false), Span(7,8,List(2),王子,王子,false), Span(6,7,List(3),小,小-01,false), Span(13,14,List(4),提出,提出-01,false), Span(17,18,List(5),问题,问题,false), Span(12,13,List(6),他,他,false), Span(23,24,List(7),会,会-02,false), Span(20,21,List(8),从来,从来,false), Span(24,25,List(9),放弃,放弃-01,false)),Map(2 -> 王子, 5 -> 问题, 8 -> 从来, 7 -> 会-02, 1 -> 重复-01, 4 -> 提出-01, 6 -> 他, 9 -> 放弃-01, 0 -> 问道-01, 3 -> 小-01),Map(x16 -> 放弃-01, x2 -> 问道-01, x5 -> 小-01, x13 -> 问题, x12 -> 他, x15 -> 会-02, x18 -> 从来, x4 -> 王子, x11 -> 提出-01, x3 -> 重复-01))),[Ljava.lang.String;@3af9aa66,Annotation([Ljava.lang.String;@771158fb,[Ljava.lang.String;@91c4a3f,[Ljava.lang.String;@62d0ac62),Annotation([Ljava.lang.String;@150d80c4,[Ljava.lang.String;@6826c41e,[Ledu.cmu.lti.nlp.amr.Dependency;@3003697),Annotation([Ljava.lang.String;@64d43929,[Ljava.lang.String;@1d269ed7,[Ljava.lang.String;@437ebf59),Annotation([Ljava.lang.String;@41c89d2f,[Ljava.lang.String;@410e94e,[Ledu.cmu.lti.nlp.amr.Entity;@2d691f3d))
AMR:
(x11 / 提出-01, ARG4, x12 / 他)
(x11 / 提出-01, manner, x2 / 问道-01)
(x11 / 提出-01, prep-through, x13 / 问题)
(x13 / 问题, location, x18 / 从来)
(x15 / 会-02, manner, x18 / 从来)
(x15 / 会-02, prep-through, x16 / 放弃-01)
(x2 / 问道-01, manner, x3 / 重复-01)
(x3 / 重复-01, topic, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 32,701 microseconds
Sentence: 这 位 实业家 抬 起 头 ， 说 ：

Oracle Span 1:  实业家 => 实业家
Oracle Span 2:  说 => 说-01
Oracle Span 3:  这 => 这
Spans:
Span 2-3:  实业家 => 实业家
Span 7-8:  说 => 说-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  实业家 => 实业家
Oracle Span 7-8:  说 => 说-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	实业家	_	NN	NN	_	5	nsubj	_	_
4	抬	_	AD	AD	_	5	advmod	_	_
5	起	_	VV	VV	_	0	root	_	_
6	头	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	说	_	VV	VV	_	5	conj	_	_
9	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 实业家, mod, x12 / 这)

Input(Some(Graph((temporal :arg1 (抬头-01 :arg0 (实业家 :mod 这)) :arg2 (说-01 :arg0 x11)),ArrayBuffer(Span(2,3,List(0),实业家,实业家,false), Span(0,1,List(1),这,这,false), Span(7,8,List(2),说,说-01,false)),Map(2 -> 说-01, 1 -> 这, 0 -> 实业家),Map(x13 -> 说-01, x12 -> 这, x11 -> 实业家))),[Ljava.lang.String;@1bdbf9be,Annotation([Ljava.lang.String;@1e7f2e0f,[Ljava.lang.String;@1da6ee17,[Ljava.lang.String;@78d39a69),Annotation([Ljava.lang.String;@3c818ac4,[Ljava.lang.String;@5b69d40d,[Ledu.cmu.lti.nlp.amr.Dependency;@71154f21),Annotation([Ljava.lang.String;@15f193b8,[Ljava.lang.String;@2516fc68,[Ljava.lang.String;@304a9d7b),Annotation([Ljava.lang.String;@6bfdb014,[Ljava.lang.String;@72889280,[Ledu.cmu.lti.nlp.amr.Entity;@606fc505))
AMR:
(x11 / 实业家, mod, x12 / 这)
(x13 / 说-01, time, x11 / 实业家)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 5,637 microseconds
Sentence: “ 我 住 在 这个 星球 上 五十四 年 以来 ， 只 被 打搅 过 三 次 。

Oracle Span 1:  住 => 住-01
Oracle Span 2:  只 => 只
Oracle Span 3:  年 => (temporal-quantity :unit 年)
Oracle Span 4:  我 => 我
Oracle Span 5:  打搅 => 打搅-01
Oracle Span 6:  星球 => 星球
Spans:
Span 2-3:  住 => 住-01
Span 11-12:  只 => 只
Span 8-9:  年 => (temporal-quantity :unit 年)
Span 1-2:  我 => 我
Span 13-14:  打搅 => 打搅-01
Span 5-6:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  住 => 住-01
Oracle Span 11-12:  只 => 只
Oracle Span 8-9:  年 => (temporal-quantity :unit 年)
Oracle Span 1-2:  我 => 我
Oracle Span 13-14:  打搅 => 打搅-01
Oracle Span 5-6:  星球 => 星球

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	住	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这个	_	NN	NN	_	6	nn	_	_
6	星球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	4	plmod	_	_
8	五十四	_	CD	CD	_	9	nummod	_	_
9	年	_	M	M	_	10	lobj	_	_
10	以来	_	LC	LC	_	14	loc	_	_
11	,	_	PU	PU	_	14	punct	_	_
12	只	_	AD	AD	_	14	advmod	_	_
13	被	_	SB	SB	_	14	pass	_	_
14	打搅	_	VV	VV	_	3	conj	_	_
15	过	_	AS	AS	_	14	asp	_	_
16	三	_	CD	CD	_	17	nummod	_	_
17	次	_	M	M	_	14	dep	_	_
18	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x19 / 打搅-01, arg1, x20 / 我)
(x19 / 打搅-01, duration, x24 / temporal-quantity)
(x19 / 打搅-01, manner, x22 / 只)
(x24 / temporal-quantity, unit, x31 / 年)
(x27 / 住-01, arg1, x29 / 星球)
(x27 / 住-01, duration, x24 / temporal-quantity)

Input(Some(Graph((say :arg1 (打搅-01 :duration (temporal-quantity :unit 年 :duration-of (住-01 :arg1 (星球 :mod 这) :arg0 x20) :quant 54) :frequency 3 :manner 只 :arg1 我)),ArrayBuffer(Span(13,14,List(0),打搅,打搅-01,false), Span(2,3,List(1),住,住-01,false), Span(5,6,List(2),星球,星球,false), Span(8,9,List(3, 4),年,(temporal-quantity :unit 年),false), Span(11,12,List(5),只,只,false), Span(1,2,List(6),我,我,false)),Map(2 -> 星球, 5 -> 只, 1 -> 住-01, 4 -> 年, 6 -> 我, 0 -> 打搅-01, 3 -> temporal-quantity),Map(x22 -> 只, x31 -> 年, x19 -> 打搅-01, x27 -> 住-01, x24 -> temporal-quantity, x20 -> 我, x29 -> 星球))),[Ljava.lang.String;@4aa3d36,Annotation([Ljava.lang.String;@2d140a7,[Ljava.lang.String;@347bdeef,[Ljava.lang.String;@2aa27288),Annotation([Ljava.lang.String;@7f34a967,[Ljava.lang.String;@77e80a5e,[Ledu.cmu.lti.nlp.amr.Dependency;@1d8e2eea),Annotation([Ljava.lang.String;@240139e1,[Ljava.lang.String;@7ea4d397,[Ljava.lang.String;@49298ce7),Annotation([Ljava.lang.String;@253c1256,[Ljava.lang.String;@8dfe921,[Ledu.cmu.lti.nlp.amr.Entity;@503fbbc6))
AMR:
(x19 / 打搅-01, duration, x24 / temporal-quantity)
(x19 / 打搅-01, manner, x22 / 只)
(x24 / temporal-quantity, unit, x31 / 年)
(x27 / 住-01, degree, x20 / 我)
(x27 / 住-01, duration, x24 / temporal-quantity)
(x27 / 住-01, prep-through, x29 / 星球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.1.1
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,550 microseconds
Sentence: 第一 次 是 二十二 年 前 ， 不 知 从 哪里 跑来 了 一 只 金龟子 来 打搅 我 。

Oracle Span 1:  前 => 前
Oracle Span 2:  年 => (temporal-quantity :unit 年)
Oracle Span 3:  我 => 我
Oracle Span 4:  打搅 => 打搅-01
Oracle Span 5:  知 => 知-01
Oracle Span 6:  跑来 => 跑来-01
Oracle Span 7:  金龟子 => 金龟子
Spans:
Span 5-6:  前 => 前
Span 4-5:  年 => (temporal-quantity :unit 年)
Span 18-19:  我 => 我
Span 17-18:  打搅 => 打搅-01
Span 8-9:  知 => 知-01
Span 11-12:  跑来 => 跑来-01
Span 15-16:  金龟子 => 金龟子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  前 => 前
Oracle Span 4-5:  年 => (temporal-quantity :unit 年)
Oracle Span 18-19:  我 => 我
Oracle Span 17-18:  打搅 => 打搅-01
Oracle Span 8-9:  知 => 知-01
Oracle Span 11-12:  跑来 => 跑来-01
Oracle Span 15-16:  金龟子 => 金龟子

Dependencies:
1	第一	_	OD	OD	_	2	ordmod	_	_
2	次	_	M	M	_	3	dep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	二十二	_	CD	CD	_	5	nummod	_	_
5	年	_	M	M	_	6	lobj	_	_
6	前	_	LC	LC	_	9	loc	_	_
7	,	_	PU	PU	_	9	punct	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	知	_	VV	VV	_	3	ccomp	_	_
10	从	_	P	P	_	18	prep	_	_
11	哪里	_	AD	AD	_	12	advmod	_	_
12	跑来	_	VV	VV	_	17	lccomp	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	只	_	M	M	_	16	clf	_	_
16	金龟子	_	NN	NN	_	12	dobj	_	_
17	来	_	LC	LC	_	10	plmod	_	_
18	打搅	_	VV	VV	_	9	ccomp	_	_
19	我	_	PN	PN	_	18	dobj	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x25 / 打搅-01, arg0, x27 / 金龟子)
(x25 / 打搅-01, arg1, x32 / 我)
(x25 / 打搅-01, time, x33 / 前)
(x28 / 跑来-01, arg0, x27 / 金龟子)
(x33 / 前, quant, x35 / temporal-quantity)
(x35 / temporal-quantity, unit, x37 / 年)

Input(Some(Graph((打搅-01 :ord (ordinal-entity :value 1) :time (前 :quant (temporal-quantity :unit 年 :quant 22) :op now) :arg1 我 :arg0 (金龟子 :quant 1 :arg0-of (跑来-01 :location (amr-unknown :arg1-of (知-01 :polarity -))))),ArrayBuffer(Span(17,18,List(0),打搅,打搅-01,false), Span(5,6,List(1),前,前,false), Span(4,5,List(2, 3),年,(temporal-quantity :unit 年),false), Span(18,19,List(4),我,我,false), Span(15,16,List(5),金龟子,金龟子,false), Span(11,12,List(6),跑来,跑来-01,false), Span(8,9,List(7),知,知-01,false)),Map(2 -> temporal-quantity, 5 -> 金龟子, 7 -> 知-01, 1 -> 前, 4 -> 我, 6 -> 跑来-01, 0 -> 打搅-01, 3 -> 年),Map(x28 -> 跑来-01, x37 -> 年, x25 -> 打搅-01, x30 -> 知-01, x27 -> 金龟子, x33 -> 前, x32 -> 我, x35 -> temporal-quantity))),[Ljava.lang.String;@55f45b92,Annotation([Ljava.lang.String;@109f5dd8,[Ljava.lang.String;@67fe380b,[Ljava.lang.String;@4a325eb9),Annotation([Ljava.lang.String;@3dedb4a6,[Ljava.lang.String;@57f64f5e,[Ledu.cmu.lti.nlp.amr.Dependency;@415e0bcb),Annotation([Ljava.lang.String;@194152cf,[Ljava.lang.String;@49d98dc5,[Ljava.lang.String;@2c30b71f),Annotation([Ljava.lang.String;@1d81e101,[Ljava.lang.String;@ec50f54,[Ledu.cmu.lti.nlp.amr.Entity;@bf71cec))
AMR:
(x25 / 打搅-01, prep-following, x27 / 金龟子)
(x25 / 打搅-01, time, x33 / 前)
(x25 / 打搅-01, value, x32 / 我)
(x28 / 跑来-01, prep-for, x27 / 金龟子)
(x30 / 知-01, degree, x32 / 我)
(x33 / 前, quant, x35 / temporal-quantity)
(x35 / temporal-quantity, unit, x37 / 年)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 25,693 microseconds
Sentence: 它 发出 一 种 可怕 的 噪音 ， 使 我 在 一 笔 帐目 中 出 了 四 个 差错 。

Oracle Span 1:  出 => 出-01
Oracle Span 2:  发出 => 发出-02
Oracle Span 3:  可怕 => 可怕
Oracle Span 4:  噪音 => 噪音
Oracle Span 5:  它 => 它
Oracle Span 6:  差错 => 差错
Oracle Span 7:  我 => 我
Oracle Span 8:  种 => 种
Oracle Span 9:  笔 => 笔
Spans:
Span 15-16:  出 => 出-01
Span 1-2:  发出 => 发出-02
Span 4-5:  可怕 => 可怕
Span 6-7:  噪音 => 噪音
Span 0-1:  它 => 它
Span 19-20:  差错 => 差错
Span 9-10:  我 => 我
Span 3-4:  种 => 种
Span 12-13:  笔 => 笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  出 => 出-01
Oracle Span 1-2:  发出 => 发出-02
Oracle Span 4-5:  可怕 => 可怕
Oracle Span 6-7:  噪音 => 噪音
Oracle Span 0-1:  它 => 它
Oracle Span 19-20:  差错 => 差错
Oracle Span 9-10:  我 => 我
Oracle Span 3-4:  种 => 种
Oracle Span 12-13:  笔 => 笔

Dependencies:
1	它	_	PN	PN	_	2	nsubj	_	_
2	发出	_	VV	VV	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	种	_	M	M	_	5	clf	_	_
5	可怕	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	噪音	_	NN	NN	_	2	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	使	_	VV	VV	_	2	conj	_	_
10	我	_	PN	PN	_	9	dobj	_	_
11	在	_	P	P	_	16	prep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	笔	_	M	M	_	14	clf	_	_
14	帐目	_	NN	NN	_	15	lobj	_	_
15	中	_	LC	LC	_	11	plmod	_	_
16	出	_	VV	VV	_	9	dep	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	四	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	20	clf	_	_
20	差错	_	NN	NN	_	16	dobj	_	_
21	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x16 / 出-01, arg0, x18 / 我)
(x16 / 出-01, arg1, x19 / 差错)
(x16 / 出-01, cause, x24 / 发出-02)
(x24 / 发出-02, arg0, x25 / 它)
(x24 / 发出-02, arg1, x26 / 噪音)
(x26 / 噪音, mod, x27 / 可怕)
(x26 / 噪音, unit, x29 / 种)

Input(Some(Graph((出-01 :cause (发出-02 :arg1 (噪音 :unit 种 :quant 1 :mod 可怕) :arg0 它) :arg1 (差错 :quant 4 :arg0 (账目 :quant 1 :unit 笔)) :arg0 我),ArrayBuffer(Span(15,16,List(0),出,出-01,false), Span(1,2,List(1),发出,发出-02,false), Span(6,7,List(2),噪音,噪音,false), Span(3,4,List(3),种,种,false), Span(4,5,List(4),可怕,可怕,false), Span(0,1,List(5),它,它,false), Span(19,20,List(6),差错,差错,false), Span(12,13,List(7),笔,笔,false), Span(9,10,List(8),我,我,false)),Map(2 -> 噪音, 5 -> 它, 8 -> 我, 7 -> 笔, 1 -> 发出-02, 4 -> 可怕, 6 -> 差错, 0 -> 出-01, 3 -> 种),Map(x22 -> 笔, x16 -> 出-01, x25 -> 它, x19 -> 差错, x27 -> 可怕, x24 -> 发出-02, x18 -> 我, x26 -> 噪音, x29 -> 种))),[Ljava.lang.String;@22d6cac2,Annotation([Ljava.lang.String;@30cdae70,[Ljava.lang.String;@1654a892,[Ljava.lang.String;@2577d6c8),Annotation([Ljava.lang.String;@3163987e,[Ljava.lang.String;@6c000e0c,[Ledu.cmu.lti.nlp.amr.Dependency;@5f233b26),Annotation([Ljava.lang.String;@44f9779c,[Ljava.lang.String;@6974a715,[Ljava.lang.String;@5e8a459),Annotation([Ljava.lang.String;@43d455c9,[Ljava.lang.String;@4c9e9fb8,[Ledu.cmu.lti.nlp.amr.Entity;@9ec531))
AMR:
(x16 / 出-01, domain, x18 / 我)
(x16 / 出-01, prep-for, x19 / 差错)
(x16 / 出-01, time, x24 / 发出-02)
(x22 / 笔, part, x18 / 我)
(x24 / 发出-02, subset, x26 / 噪音)
(x24 / 发出-02, value, x25 / 它)
(x26 / 噪音, mod, x27 / 可怕)
(x26 / 噪音, unit, x29 / 种)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 29,379 microseconds
Sentence: 第二 次 ， 在 十一 年 前 ， 是 风湿病 发作 ， 因为 我 缺乏 锻炼 所 致 。

Oracle Span 1:  前 => 前
Oracle Span 2:  发作 => 发作-01
Oracle Span 3:  年 => (temporal-quantity :unit 年)
Oracle Span 4:  我 => 我
Oracle Span 5:  缺乏 => 缺乏-01
Oracle Span 6:  锻炼 => 锻炼-01
Oracle Span 7:  风湿病 => 风湿病
Spans:
Span 6-7:  前 => 前
Span 10-11:  发作 => 发作-01
Span 5-6:  年 => (temporal-quantity :unit 年)
Span 13-14:  我 => 我
Span 14-15:  缺乏 => 缺乏-01
Span 15-16:  锻炼 => 锻炼-01
Span 9-10:  风湿病 => 风湿病

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  前 => 前
Oracle Span 10-11:  发作 => 发作-01
Oracle Span 5-6:  年 => (temporal-quantity :unit 年)
Oracle Span 13-14:  我 => 我
Oracle Span 14-15:  缺乏 => 缺乏-01
Oracle Span 15-16:  锻炼 => 锻炼-01
Oracle Span 9-10:  风湿病 => 风湿病

Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	次	_	M	M	_	9	nsubj	_	_
3	,	_	PU	PU	_	9	punct	_	_
4	在	_	P	P	_	9	prep	_	_
5	十一	_	CD	CD	_	6	nummod	_	_
6	年	_	M	M	_	7	lobj	_	_
7	前	_	LC	LC	_	4	plmod	_	_
8	,	_	PU	PU	_	9	punct	_	_
9	是	_	VC	VC	_	0	root	_	_
10	风湿病	_	NN	NN	_	9	attr	_	_
11	发作	_	VV	VV	_	9	conj	_	_
12	,	_	PU	PU	_	9	punct	_	_
13	因为	_	P	P	_	18	prep	_	_
14	我	_	PN	PN	_	15	nsubj	_	_
15	缺乏	_	VV	VV	_	13	pccomp	_	_
16	锻炼	_	NN	NN	_	15	dobj	_	_
17	所	_	MSP	MSP	_	18	prtmod	_	_
18	致	_	VV	VV	_	9	dep	_	_
19	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 发作-01, arg0, x2 / 风湿病)
(x0 / 发作-01, cause, x3 / 缺乏-01)
(x0 / 发作-01, time, x15 / 前)
(x15 / 前, quant, x18 / temporal-quantity)
(x18 / temporal-quantity, unit, x20 / 年)
(x3 / 缺乏-01, arg0, x4 / 我)
(x3 / 缺乏-01, arg1, x5 / 锻炼-01)

Input(Some(Graph((发作-01 :ord (ordinal-entity :value 2) :time (前 :quant (temporal-quantity :unit 年 :quant 11) :op now) :cause (缺乏-01 :arg1 锻炼-01 :arg0 我) :arg0 风湿病),ArrayBuffer(Span(10,11,List(0),发作,发作-01,false), Span(6,7,List(1),前,前,false), Span(5,6,List(2, 3),年,(temporal-quantity :unit 年),false), Span(14,15,List(4),缺乏,缺乏-01,false), Span(15,16,List(5),锻炼,锻炼-01,false), Span(13,14,List(6),我,我,false), Span(9,10,List(7),风湿病,风湿病,false)),Map(2 -> temporal-quantity, 5 -> 锻炼-01, 7 -> 风湿病, 1 -> 前, 4 -> 缺乏-01, 6 -> 我, 0 -> 发作-01, 3 -> 年),Map(x2 -> 风湿病, x5 -> 锻炼-01, x15 -> 前, x18 -> temporal-quantity, x4 -> 我, x3 -> 缺乏-01, x20 -> 年, x0 -> 发作-01))),[Ljava.lang.String;@40147317,Annotation([Ljava.lang.String;@210f0cc1,[Ljava.lang.String;@19542407,[Ljava.lang.String;@6f95cd51),Annotation([Ljava.lang.String;@c7a977f,[Ljava.lang.String;@55caeb35,[Ledu.cmu.lti.nlp.amr.Dependency;@6d868997),Annotation([Ljava.lang.String;@2c383e33,[Ljava.lang.String;@74a195a4,[Ljava.lang.String;@76304b46),Annotation([Ljava.lang.String;@2fa3be26,[Ljava.lang.String;@4287d447,[Ledu.cmu.lti.nlp.amr.Entity;@3af37506))
AMR:
(x0 / 发作-01, ARG3, x2 / 风湿病)
(x0 / 发作-01, time, x15 / 前)
(x0 / 发作-01, time, x3 / 缺乏-01)
(x15 / 前, quant, x18 / temporal-quantity)
(x18 / temporal-quantity, unit, x20 / 年)
(x3 / 缺乏-01, extent, x5 / 锻炼-01)
(x3 / 缺乏-01, value, x4 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 24,583 microseconds
Sentence: 我 没有 功夫 闲逛 。

Oracle Span 1:  功夫 => 功夫
Oracle Span 2:  我 => 我
Oracle Span 3:  闲逛 => 闲逛-01
Spans:
Span 2-3:  功夫 => 功夫
Span 0-1:  我 => 我
Span 3-4:  闲逛 => 闲逛-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  功夫 => 功夫
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  闲逛 => 闲逛-01

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	功夫	_	NN	NN	_	4	nn	_	_
4	闲逛	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((有-01 :polarity - :arg0 我 :arg1 功夫 :purpose (闲逛-01 :arg0 x9)),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),功夫,功夫,false), Span(3,4,List(2),闲逛,闲逛-01,false)),Map(2 -> 闲逛-01, 1 -> 功夫, 0 -> 我),Map(x10 -> 功夫, x11 -> 闲逛-01, x9 -> 我))),[Ljava.lang.String;@4e6d7365,Annotation([Ljava.lang.String;@7c0da600,[Ljava.lang.String;@d4602a,[Ljava.lang.String;@21ae6e73),Annotation([Ljava.lang.String;@47dd778,[Ljava.lang.String;@15515c51,[Ledu.cmu.lti.nlp.amr.Dependency;@36a7abe1),Annotation([Ljava.lang.String;@64a896b0,[Ljava.lang.String;@e044b4a,[Ljava.lang.String;@11a82d0f),Annotation([Ljava.lang.String;@1adb7478,[Ljava.lang.String;@3ae66c85,[Ledu.cmu.lti.nlp.amr.Entity;@16943e88))
AMR:
(x10 / 功夫, ARG5, x11 / 闲逛-01)
(x9 / 我, location, x10 / 功夫)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.3
Decoded in 4,270 microseconds
Sentence: 我 可 是 个 严肃 的 人 。

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  人 => 人
Oracle Span 3:  可 => 可-01
Oracle Span 4:  我 => 我
Spans:
Span 4-5:  严肃 => 严肃-01
Span 6-7:  人 => 人
Span 1-2:  可 => 可-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  严肃 => 严肃-01
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  可 => 可-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	可	_	VV	VV	_	3	mmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	个	_	M	M	_	7	clf	_	_
5	严肃	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	人	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 人, domain, x5 / 我)
(x2 / 人, manner, x6 / 可-01)
(x2 / 人, mod, x4 / 严肃-01)

Input(Some(Graph((人 :manner 可-01 :domain 我 :mod 严肃-01),ArrayBuffer(Span(6,7,List(0),人,人,false), Span(1,2,List(1),可,可-01,false), Span(0,1,List(2),我,我,false), Span(4,5,List(3),严肃,严肃-01,false)),Map(2 -> 我, 1 -> 可-01, 0 -> 人, 3 -> 严肃-01),Map(x2 -> 人, x5 -> 我, x4 -> 严肃-01, x6 -> 可-01))),[Ljava.lang.String;@4604b900,Annotation([Ljava.lang.String;@73d6d0c,[Ljava.lang.String;@e36bb2a,[Ljava.lang.String;@3961a41a),Annotation([Ljava.lang.String;@5a4ed68f,[Ljava.lang.String;@367795c7,[Ledu.cmu.lti.nlp.amr.Dependency;@d2387c8),Annotation([Ljava.lang.String;@3956b302,[Ljava.lang.String;@1500e009,[Ljava.lang.String;@1fd386c3),Annotation([Ljava.lang.String;@edf4f36,[Ljava.lang.String;@29d334c,[Ledu.cmu.lti.nlp.amr.Entity;@100f9bbe))
AMR:
(x2 / 人, domain, x5 / 我)
(x2 / 人, manner, x6 / 可-01)
(x2 / 人, mod, x4 / 严肃-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,941 microseconds
Sentence: 现在 … 这 是 第三 次 ！

Oracle Span 1:  现在 => 现在
Oracle Span 2:  这 => 这
Spans:
Span 0-1:  现在 => 现在
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  现在 => 现在
Oracle Span 2-3:  这 => 这

Dependencies:
1	现在	_	NT	NT	_	4	dep	_	_
2	…	_	PU	PU	_	4	dep	_	_
3	这	_	PN	PN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	第三	_	OD	OD	_	6	ordmod	_	_
6	次	_	M	M	_	4	attr	_	_
7	！	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((ordinal-entity :value 3 :domain 这 :time 现在 :mode expressive),ArrayBuffer(Span(2,3,List(0),这,这,false), Span(0,1,List(1),现在,现在,false)),Map(1 -> 现在, 0 -> 这),Map(x22 -> 现在, x21 -> 这))),[Ljava.lang.String;@13e9f2e2,Annotation([Ljava.lang.String;@673bb956,[Ljava.lang.String;@cd7f1ae,[Ljava.lang.String;@60e949e1),Annotation([Ljava.lang.String;@3c4bc9fc,[Ljava.lang.String;@680362a,[Ledu.cmu.lti.nlp.amr.Dependency;@3569edd5),Annotation([Ljava.lang.String;@1f651cd8,[Ljava.lang.String;@7d0332e1,[Ljava.lang.String;@7a356a0d),Annotation([Ljava.lang.String;@c827db,[Ljava.lang.String;@377c68c6,[Ledu.cmu.lti.nlp.amr.Entity;@538cd0f2))
AMR:
(x21 / 这, polite, x22 / 现在)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
Decoded in 2,979 microseconds
Sentence: 我 计算 的 结果 是 五亿一百万 … ”

Oracle Span 1:  我 => 我
Oracle Span 2:  结果 => 结果
Oracle Span 3:  计算 => 计算-01
Spans:
Span 0-1:  我 => 我
Span 3-4:  结果 => 结果
Span 1-2:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  结果 => 结果
Oracle Span 1-2:  计算 => 计算-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	计算	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	结果	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	五亿一百万	_	CD	CD	_	8	nummod	_	_
7	…	_	PU	PU	_	8	punct	_	_
8	”	_	CD	CD	_	5	attr	_	_

Oracle:
(x14 / 计算-01, arg0, x15 / 我)
(x14 / 计算-01, arg1, x13 / 结果)

Input(Some(Graph((say :arg1 (501000000 :domain (结果 :arg1-of (计算-01 :arg0 我)))),ArrayBuffer(Span(3,4,List(0),结果,结果,false), Span(1,2,List(1),计算,计算-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 计算-01, 0 -> 结果),Map(x13 -> 结果, x15 -> 我, x14 -> 计算-01))),[Ljava.lang.String;@238ad8c,Annotation([Ljava.lang.String;@430fa4ef,[Ljava.lang.String;@1761de10,[Ljava.lang.String;@22df874e),Annotation([Ljava.lang.String;@654c1a54,[Ljava.lang.String;@5bdaf2ce,[Ledu.cmu.lti.nlp.amr.Dependency;@42d236fb),Annotation([Ljava.lang.String;@1ce93c18,[Ljava.lang.String;@19f21b6b,[Ljava.lang.String;@1532c619),Annotation([Ljava.lang.String;@46044faa,[Ljava.lang.String;@1358b28e,[Ledu.cmu.lti.nlp.amr.Entity;@1a78dacd))
AMR:
(x14 / 计算-01, beneficiary, x15 / 我)
(x14 / 计算-01, prep-along-with, x13 / 结果)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 4,643 microseconds
Sentence: “ 几百万 什么 ？ ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	几百万	_	CD	CD	_	3	nummod	_	_
3	什么	_	PN	PN	_	0	root	_	_
4	？	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (amr-unknown :quant (multiple :op 1000000) :mode interrogative)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@19f9d595,Annotation([Ljava.lang.String;@7de4a01f,[Ljava.lang.String;@2bfeb1ef,[Ljava.lang.String;@778ca8ef),Annotation([Ljava.lang.String;@208e9ef6,[Ljava.lang.String;@78b236a0,[Ledu.cmu.lti.nlp.amr.Dependency;@261d8190),Annotation([Ljava.lang.String;@34448e6c,[Ljava.lang.String;@60e9df3c,[Ljava.lang.String;@907f2b7),Annotation([Ljava.lang.String;@435ce306,[Ljava.lang.String;@537b32ef,[Ledu.cmu.lti.nlp.amr.Entity;@7dc51783))
AMR:


Decoded in 1,423 microseconds
Sentence: 这 位 实业家 知道 要 想 安宁 是 无望 的 了 ，

Oracle Span 1:  安宁 => 安宁
Oracle Span 2:  实业家 => 实业家
Oracle Span 3:  想 => 想-02
Oracle Span 4:  无望 => 无望-01
Oracle Span 5:  知道 => 知道-01
Oracle Span 6:  要 => 要-03
Oracle Span 7:  这 => 这
Spans:
Span 6-7:  安宁 => 安宁
Span 2-3:  实业家 => 实业家
Span 5-6:  想 => 想-02
Span 8-9:  无望 => 无望-01
Span 3-4:  知道 => 知道-01
Span 4-5:  要 => 要-03
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  安宁 => 安宁
Oracle Span 2-3:  实业家 => 实业家
Oracle Span 5-6:  想 => 想-02
Oracle Span 8-9:  无望 => 无望-01
Oracle Span 3-4:  知道 => 知道-01
Oracle Span 4-5:  要 => 要-03
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	实业家	_	NN	NN	_	4	nsubj	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	想	_	VV	VV	_	4	ccomp	_	_
7	安宁	_	NN	NN	_	6	dobj	_	_
8	是	_	VC	VC	_	6	dobj	_	_
9	无望	_	VV	VV	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	了	_	SP	SP	_	8	dep	_	_
12	,	_	PU	PU	_	6	punct	_	_
13	是	_	VC	VC	_	6	range	_	_
14	实业家	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 实业家)
(x0 / 知道-01, arg1, x11 / 无望-01)
(x11 / 无望-01, arg1, x12 / 要-03)
(x12 / 要-03, arg0, x13 / 想-02)
(x13 / 想-02, arg1, x14 / 安宁)
(x2 / 实业家, mod, x3 / 这)

Input(Some(Graph((知道-01 :arg1 (无望-01 :arg1 (要-03 :arg0 (想-02 :arg1 安宁))) :arg0 (实业家 :mod 这)),ArrayBuffer(Span(3,4,List(0),知道,知道-01,false), Span(8,9,List(1),无望,无望-01,false), Span(4,5,List(2),要,要-03,false), Span(5,6,List(3),想,想-02,false), Span(6,7,List(4),安宁,安宁,false), Span(2,3,List(5),实业家,实业家,false), Span(0,1,List(6),这,这,false)),Map(2 -> 要-03, 5 -> 实业家, 1 -> 无望-01, 4 -> 安宁, 6 -> 这, 0 -> 知道-01, 3 -> 想-02),Map(x2 -> 实业家, x13 -> 想-02, x12 -> 要-03, x3 -> 这, x11 -> 无望-01, x14 -> 安宁, x0 -> 知道-01))),[Ljava.lang.String;@4b61d0c6,Annotation([Ljava.lang.String;@6f815e7f,[Ljava.lang.String;@65e7f52a,[Ljava.lang.String;@304b9f1a),Annotation([Ljava.lang.String;@75699e35,[Ljava.lang.String;@107e5441,[Ledu.cmu.lti.nlp.amr.Dependency;@4aeaadc1),Annotation([Ljava.lang.String;@263558c9,[Ljava.lang.String;@1f14f20c,[Ljava.lang.String;@7daa61f3),Annotation([Ljava.lang.String;@62315f22,[Ljava.lang.String;@6e4ea0bd,[Ledu.cmu.lti.nlp.amr.Entity;@56f2bbea))
AMR:
(x0 / 知道-01, degree, x2 / 实业家)
(x0 / 知道-01, snt2, x12 / 要-03)
(x12 / 要-03, prep-into, x13 / 想-02)
(x13 / 想-02, manner, x11 / 无望-01)
(x13 / 想-02, manner, x14 / 安宁)
(x2 / 实业家, mod, x3 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,561 microseconds
Sentence: 就 说道 ： “ 几百万 个 小 东西 ， 这些 小 东西 有时 出现 在 天空 中 。 ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  出现 => 出现-01
Oracle Span 3:  天空 => 天空
Oracle Span 4:  小 => 小-01
Oracle Span 5:  就 => 就-01
Oracle Span 6:  有时 => 有时
Oracle Span 7:  说道 => 说道-01
Oracle Span 8:  这些 => 这些
Spans:
Span 7-8:  东西 => 东西
Span 13-14:  出现 => 出现-01
Span 15-16:  天空 => 天空
Span 6-7:  小 => 小-01
Span 0-1:  就 => 就-01
Span 12-13:  有时 => 有时
Span 1-2:  说道 => 说道-01
Span 9-10:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  东西 => 东西
Oracle Span 13-14:  出现 => 出现-01
Oracle Span 15-16:  天空 => 天空
Oracle Span 6-7:  小 => 小-01
Oracle Span 0-1:  就 => 就-01
Oracle Span 12-13:  有时 => 有时
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 9-10:  这些 => 这些

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	14	punct	_	_
5	几百万	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	东西	_	NN	NN	_	14	nsubj	_	_
9	,	_	PU	PU	_	14	punct	_	_
10	这些	_	DT	DT	_	12	det	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	东西	_	NN	NN	_	14	nsubj	_	_
13	有时	_	AD	AD	_	14	advmod	_	_
14	出现	_	VV	VV	_	2	ccomp	_	_
15	在	_	P	P	_	14	prep	_	_
16	天空	_	NN	NN	_	17	lobj	_	_
17	中	_	LC	LC	_	15	plmod	_	_
18	。	_	PU	PU	_	2	punct	_	_
19	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说道-01, manner, x2 / 就-01)
(x4 / 东西, mod, x5 / 小-01)
(x7 / 出现-01, arg0, x8 / 天空)
(x7 / 出现-01, time, x11 / 有时)

Input(Some(Graph((说道-01 :arg1 (and :op (东西 :quant (几 :op 1000000) :mod 小-01) :op (出现-01 :time 有时 :arg1 (x4 :mod 这些) :arg0 天空)) :manner 就-01),ArrayBuffer(Span(1,2,List(0),说道,说道-01,false), Span(7,8,List(1),东西,东西,false), Span(6,7,List(2),小,小-01,false), Span(13,14,List(3),出现,出现-01,false), Span(12,13,List(4),有时,有时,false), Span(9,10,List(5),这些,这些,false), Span(15,16,List(6),天空,天空,false), Span(0,1,List(7),就,就-01,false)),Map(2 -> 小-01, 5 -> 这些, 7 -> 就-01, 1 -> 东西, 4 -> 有时, 6 -> 天空, 0 -> 说道-01, 3 -> 出现-01),Map(x2 -> 就-01, x10 -> 这些, x5 -> 小-01, x8 -> 天空, x7 -> 出现-01, x4 -> 东西, x11 -> 有时, x0 -> 说道-01))),[Ljava.lang.String;@78f9ed3e,Annotation([Ljava.lang.String;@1059754c,[Ljava.lang.String;@b0964b2,[Ljava.lang.String;@48e7b3d2),Annotation([Ljava.lang.String;@7f4037ed,[Ljava.lang.String;@24e8de5c,[Ledu.cmu.lti.nlp.amr.Dependency;@64040287),Annotation([Ljava.lang.String;@110844f6,[Ljava.lang.String;@6f89f665,[Ljava.lang.String;@df1cff6),Annotation([Ljava.lang.String;@4925f4f5,[Ljava.lang.String;@1ad926d3,[Ledu.cmu.lti.nlp.amr.Entity;@3a43d133))
AMR:
(x0 / 说道-01, manner, x2 / 就-01)
(x0 / 说道-01, op, x4 / 东西)
(x4 / 东西, mod, x10 / 这些)
(x4 / 东西, mod, x5 / 小-01)
(x7 / 出现-01, prep-on-behalf, x4 / 东西)
(x7 / 出现-01, time, x11 / 有时)
(x8 / 天空, manner, x7 / 出现-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,971 microseconds
Sentence: “ 苍蝇 吗 ？ ”

Oracle Span 1:  苍蝇 => 苍蝇
Spans:
Span 1-2:  苍蝇 => 苍蝇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  苍蝇 => 苍蝇

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	苍蝇	_	VV	VV	_	0	root	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (苍蝇 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),苍蝇,苍蝇,false)),Map(0 -> 苍蝇),Map(x5 -> 苍蝇))),[Ljava.lang.String;@39ce27f2,Annotation([Ljava.lang.String;@5f2afe62,[Ljava.lang.String;@c96a4ea,[Ljava.lang.String;@28782602),Annotation([Ljava.lang.String;@60c16548,[Ljava.lang.String;@68105edc,[Ledu.cmu.lti.nlp.amr.Dependency;@511816c0),Annotation([Ljava.lang.String;@38b972d7,[Ljava.lang.String;@5339bbad,[Ljava.lang.String;@3935e9a8),Annotation([Ljava.lang.String;@288a4658,[Ljava.lang.String;@5b56b654,[Ledu.cmu.lti.nlp.amr.Entity;@452c8a40))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,762 microseconds
Sentence: “ 不 是 ，

Oracle Span 1:  是 => 是-03
Spans:
Span 2-3:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  是 => 是-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (是-03 :polarity -)),ArrayBuffer(Span(2,3,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x5 -> 是-03))),[Ljava.lang.String;@534243e4,Annotation([Ljava.lang.String;@29006752,[Ljava.lang.String;@470a9030,[Ljava.lang.String;@66d57c1b),Annotation([Ljava.lang.String;@27494e46,[Ljava.lang.String;@d59970a,[Ledu.cmu.lti.nlp.amr.Dependency;@1e411d81),Annotation([Ljava.lang.String;@53b98ff6,[Ljava.lang.String;@3e6fd0b9,[Ljava.lang.String;@7fcff1b9),Annotation([Ljava.lang.String;@697446d4,[Ljava.lang.String;@76adb233,[Ledu.cmu.lti.nlp.amr.Entity;@36074e47))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,444 microseconds
Sentence: 是 些 闪闪发亮 的 小 东西 。 ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  些 => 些
Oracle Span 3:  小 => 小-01
Oracle Span 4:  闪闪发亮 => 闪闪发亮
Spans:
Span 5-6:  东西 => 东西
Span 1-2:  些 => 些
Span 4-5:  小 => 小-01
Span 2-3:  闪闪发亮 => 闪闪发亮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  东西 => 东西
Oracle Span 1-2:  些 => 些
Oracle Span 4-5:  小 => 小-01
Oracle Span 2-3:  闪闪发亮 => 闪闪发亮

Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	些	_	CD	CD	_	3	nummod	_	_
3	闪闪发亮	_	NN	NN	_	6	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	东西	_	NN	NN	_	1	attr	_	_
7	。	_	PU	PU	_	1	punct	_	_
8	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x8 / 东西, mod, x10 / 闪闪发亮)
(x8 / 东西, mod, x9 / 小-01)
(x8 / 东西, quant, x11 / 些)

Input(Some(Graph((say :arg1 (东西 :quant 些 :mod 闪闪发亮 :mod 小-01)),ArrayBuffer(Span(5,6,List(0),东西,东西,false), Span(1,2,List(1),些,些,false), Span(2,3,List(2),闪闪发亮,闪闪发亮,false), Span(4,5,List(3),小,小-01,false)),Map(2 -> 闪闪发亮, 1 -> 些, 0 -> 东西, 3 -> 小-01),Map(x10 -> 闪闪发亮, x8 -> 东西, x11 -> 些, x9 -> 小-01))),[Ljava.lang.String;@36453307,Annotation([Ljava.lang.String;@7dcc91fd,[Ljava.lang.String;@66eb985d,[Ljava.lang.String;@6a9287b1),Annotation([Ljava.lang.String;@75504cef,[Ljava.lang.String;@6c8a68c1,[Ledu.cmu.lti.nlp.amr.Dependency;@56193c7d),Annotation([Ljava.lang.String;@28c88600,[Ljava.lang.String;@5f8890c2,[Ljava.lang.String;@607b2792),Annotation([Ljava.lang.String;@7f9e1534,[Ljava.lang.String;@138a7441,[Ledu.cmu.lti.nlp.amr.Entity;@81ff872))
AMR:
(x10 / 闪闪发亮, quant, x11 / 些)
(x8 / 东西, mod, x10 / 闪闪发亮)
(x8 / 东西, mod, x9 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,205 microseconds
Sentence: “ 是 蜜蜂 吗 ？ ”

Oracle Span 1:  蜜蜂 => 蜜蜂
Spans:
Span 2-3:  蜜蜂 => 蜜蜂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  蜜蜂 => 蜜蜂

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	蜜蜂	_	NN	NN	_	2	attr	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (蜜蜂 :mode interrogative)),ArrayBuffer(Span(2,3,List(0),蜜蜂,蜜蜂,false)),Map(0 -> 蜜蜂),Map(x5 -> 蜜蜂))),[Ljava.lang.String;@31611954,Annotation([Ljava.lang.String;@3e598df9,[Ljava.lang.String;@7e31ce0f,[Ljava.lang.String;@99a65d3),Annotation([Ljava.lang.String;@3088660d,[Ljava.lang.String;@42cc13a0,[Ledu.cmu.lti.nlp.amr.Dependency;@32fdec40),Annotation([Ljava.lang.String;@6813a331,[Ljava.lang.String;@1bd81830,[Ljava.lang.String;@39ab59f8),Annotation([Ljava.lang.String;@64e92d61,[Ljava.lang.String;@111610e6,[Ledu.cmu.lti.nlp.amr.Entity;@4ad4936c))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,653 microseconds
Sentence: “ 不 是 ，

Oracle Span 1:  是 => 是-03
Spans:
Span 2-3:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  是 => 是-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (是-03 :polarity -)),ArrayBuffer(Span(2,3,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x5 -> 是-03))),[Ljava.lang.String;@29d37757,Annotation([Ljava.lang.String;@4fcc529,[Ljava.lang.String;@25cc7470,[Ljava.lang.String;@4beddc56),Annotation([Ljava.lang.String;@79b663b3,[Ljava.lang.String;@1b812421,[Ledu.cmu.lti.nlp.amr.Dependency;@5d28bcd5),Annotation([Ljava.lang.String;@7882c44a,[Ljava.lang.String;@32639b12,[Ljava.lang.String;@20d11153),Annotation([Ljava.lang.String;@3887cf88,[Ljava.lang.String;@5649ec46,[Ledu.cmu.lti.nlp.amr.Entity;@78dc4696))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,447 microseconds
Sentence: 是 金黄色 的 小 东西 ， 这些 小 东西 叫 那些 懒汉们 胡思乱想 。

Oracle Span 1:  东西 => 东西
Oracle Span 2:  叫 => 叫-04
Oracle Span 3:  小 => 小-01
Oracle Span 4:  懒汉们 => 懒汉们
Oracle Span 5:  胡思乱想 => 胡思乱想
Oracle Span 6:  这些 => 这些
Oracle Span 7:  那些 => 那些
Oracle Span 8:  金黄色 => 金黄色
Spans:
Span 4-5:  东西 => 东西
Span 9-10:  叫 => 叫-04
Span 3-4:  小 => 小-01
Span 11-12:  懒汉们 => 懒汉们
Span 12-13:  胡思乱想 => 胡思乱想
Span 6-7:  这些 => 这些
Span 10-11:  那些 => 那些
Span 1-2:  金黄色 => 金黄色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  东西 => 东西
Oracle Span 9-10:  叫 => 叫-04
Oracle Span 3-4:  小 => 小-01
Oracle Span 11-12:  懒汉们 => 懒汉们
Oracle Span 12-13:  胡思乱想 => 胡思乱想
Oracle Span 6-7:  这些 => 这些
Oracle Span 10-11:  那些 => 那些
Oracle Span 1-2:  金黄色 => 金黄色

Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	金黄色	_	JJ	JJ	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	东西	_	NN	NN	_	1	attr	_	_
6	,	_	PU	PU	_	1	punct	_	_
7	这些	_	DT	DT	_	9	det	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	东西	_	NN	NN	_	10	nsubj	_	_
10	叫	_	VV	VV	_	1	dep	_	_
11	那些	_	DT	DT	_	13	det	_	_
12	懒汉们	_	NN	NN	_	13	nn	_	_
13	胡思乱想	_	NN	NN	_	10	dobj	_	_
14	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x10 / 懒汉们, mod, x11 / 那些)
(x3 / 东西, mod, x4 / 小-01)
(x3 / 东西, mod, x5 / 金黄色)
(x7 / 叫-04, arg1, x10 / 懒汉们)
(x7 / 叫-04, arg2, x12 / 胡思乱想)

Input(Some(Graph((and :op (东西 :domain thing :mod 金黄色 :mod 小-01) :op (叫-04 :arg2 胡思乱想 :arg1 (懒汉们 :mod 那些) :arg0 (x3 :mod 这些))),ArrayBuffer(Span(4,5,List(0),东西,东西,false), Span(1,2,List(1),金黄色,金黄色,false), Span(3,4,List(2),小,小-01,false), Span(9,10,List(3),叫,叫-04,false), Span(12,13,List(4),胡思乱想,胡思乱想,false), Span(11,12,List(5),懒汉们,懒汉们,false), Span(10,11,List(6),那些,那些,false), Span(6,7,List(7),这些,这些,false)),Map(2 -> 小-01, 5 -> 懒汉们, 7 -> 这些, 1 -> 金黄色, 4 -> 胡思乱想, 6 -> 那些, 0 -> 东西, 3 -> 叫-04),Map(x10 -> 懒汉们, x5 -> 金黄色, x12 -> 胡思乱想, x7 -> 叫-04, x4 -> 小-01, x11 -> 那些, x3 -> 东西, x9 -> 这些))),[Ljava.lang.String;@502f8b57,Annotation([Ljava.lang.String;@5652f555,[Ljava.lang.String;@4fe01805,[Ljava.lang.String;@55120f99),Annotation([Ljava.lang.String;@794b435f,[Ljava.lang.String;@38f2e97e,[Ledu.cmu.lti.nlp.amr.Dependency;@779dfe55),Annotation([Ljava.lang.String;@323659f8,[Ljava.lang.String;@1144a55a,[Ljava.lang.String;@3e521715),Annotation([Ljava.lang.String;@26a529dc,[Ljava.lang.String;@265c5d69,[Ledu.cmu.lti.nlp.amr.Entity;@1286528d))
AMR:
(x10 / 懒汉们, mod, x11 / 那些)
(x3 / 东西, mod, x4 / 小-01)
(x3 / 东西, mod, x5 / 金黄色)
(x7 / 叫-04, ARG6, x10 / 懒汉们)
(x7 / 叫-04, direction, x4 / 小-01)
(x7 / 叫-04, snt3, x12 / 胡思乱想)
(x9 / 这些, ARG0, x7 / 叫-04)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 20,286 microseconds
Sentence: 我 是 个 严肃 的 人 。

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  人 => 人
Oracle Span 3:  我 => 我
Spans:
Span 3-4:  严肃 => 严肃-01
Span 5-6:  人 => 人
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	6	clf	_	_
4	严肃	_	JJ	JJ	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	人	_	NN	NN	_	2	attr	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 人, domain, x3 / 我)
(x0 / 人, mod, x2 / 严肃-01)

Input(Some(Graph((人 :domain 我 :mod 严肃-01),ArrayBuffer(Span(5,6,List(0),人,人,false), Span(0,1,List(1),我,我,false), Span(3,4,List(2),严肃,严肃-01,false)),Map(2 -> 严肃-01, 1 -> 我, 0 -> 人),Map(x2 -> 严肃-01, x3 -> 我, x0 -> 人))),[Ljava.lang.String;@3cc20577,Annotation([Ljava.lang.String;@33a630fa,[Ljava.lang.String;@775594f2,[Ljava.lang.String;@5767b2af),Annotation([Ljava.lang.String;@7b22ec89,[Ljava.lang.String;@790132f7,[Ledu.cmu.lti.nlp.amr.Dependency;@2228db21),Annotation([Ljava.lang.String;@48b0e701,[Ljava.lang.String;@241a0c3a,[Ljava.lang.String;@547c04c4),Annotation([Ljava.lang.String;@30e92cb9,[Ljava.lang.String;@7fae4d4a,[Ledu.cmu.lti.nlp.amr.Entity;@ba1f559))
AMR:
(x0 / 人, domain, x3 / 我)
(x0 / 人, mod, x2 / 严肃-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,981 microseconds
Sentence: 我 没有 时间 胡思乱想 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  时间 => 时间
Oracle Span 3:  胡思乱想 => 胡思乱想
Spans:
Span 0-1:  我 => 我
Span 2-3:  时间 => 时间
Span 3-4:  胡思乱想 => 胡思乱想

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  时间 => 时间
Oracle Span 3-4:  胡思乱想 => 胡思乱想

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	时间	_	NN	NN	_	4	nn	_	_
4	胡思乱想	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有-01 :polarity - :arg0 我 :arg1 时间 :purpose 胡思乱想)),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),时间,时间,false), Span(3,4,List(2),胡思乱想,胡思乱想,false)),Map(2 -> 胡思乱想, 1 -> 时间, 0 -> 我),Map(x10 -> 我, x12 -> 胡思乱想, x11 -> 时间))),[Ljava.lang.String;@3f4f9acd,Annotation([Ljava.lang.String;@46baf579,[Ljava.lang.String;@4bf324f9,[Ljava.lang.String;@4f7c0be3),Annotation([Ljava.lang.String;@ca66933,[Ljava.lang.String;@1d2644e3,[Ledu.cmu.lti.nlp.amr.Dependency;@4fa06f52),Annotation([Ljava.lang.String;@602c4656,[Ljava.lang.String;@5ffc5491,[Ljava.lang.String;@705202d1),Annotation([Ljava.lang.String;@3c443976,[Ljava.lang.String;@3e58d65e,[Ledu.cmu.lti.nlp.amr.Entity;@3bd55d8))
AMR:
(x11 / 时间, poss, x10 / 我)
(x12 / 胡思乱想, poss, x11 / 时间)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.3
Decoded in 3,754 microseconds
Sentence: “ 啊 ，

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 啊),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x4 -> 啊))),[Ljava.lang.String;@63998bf4,Annotation([Ljava.lang.String;@7e0b9178,[Ljava.lang.String;@61942c1,[Ljava.lang.String;@6f63c44f),Annotation([Ljava.lang.String;@408a247c,[Ljava.lang.String;@62a8fd44,[Ledu.cmu.lti.nlp.amr.Dependency;@2e6ba49a),Annotation([Ljava.lang.String;@5f5b5ca4,[Ljava.lang.String;@4ee33af7,[Ljava.lang.String;@6b04acb2),Annotation([Ljava.lang.String;@18388a3c,[Ljava.lang.String;@1d035be3,[Ledu.cmu.lti.nlp.amr.Entity;@4a60ee36))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,250 microseconds
Sentence: 是 星星 吗 ？ ”

Oracle Span 1:  星星 => 星星
Spans:
Span 1-2:  星星 => 星星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  星星 => 星星

Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	星星	_	NN	NN	_	1	attr	_	_
3	吗	_	SP	SP	_	1	dep	_	_
4	？	_	PU	PU	_	1	punct	_	_
5	”	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (星星 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),星星,星星,false)),Map(0 -> 星星),Map(x5 -> 星星))),[Ljava.lang.String;@4cfbaf4,Annotation([Ljava.lang.String;@58faa93b,[Ljava.lang.String;@5f212d84,[Ljava.lang.String;@127d7908),Annotation([Ljava.lang.String;@6b9c69a9,[Ljava.lang.String;@6622a690,[Ledu.cmu.lti.nlp.amr.Dependency;@30b9eadd),Annotation([Ljava.lang.String;@497570fb,[Ljava.lang.String;@412c995d,[Ljava.lang.String;@3249a1ce),Annotation([Ljava.lang.String;@4dd94a58,[Ljava.lang.String;@2f4919b0,[Ledu.cmu.lti.nlp.amr.Entity;@a8a8b75))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,594 microseconds
Sentence: “ 对 了 ，

Oracle Span 1:  对 => 对-02
Spans:
Span 1-2:  对 => 对-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对 => 对-02

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	对	_	VV	VV	_	0	root	_	_
3	了	_	VV	VV	_	2	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 对-02),ArrayBuffer(Span(1,2,List(0),对,对-02,false)),Map(0 -> 对-02),Map(x4 -> 对-02))),[Ljava.lang.String;@75b21c3b,Annotation([Ljava.lang.String;@72be135f,[Ljava.lang.String;@155d1021,[Ljava.lang.String;@4bd2f0dc),Annotation([Ljava.lang.String;@2e647e59,[Ljava.lang.String;@2c42b421,[Ledu.cmu.lti.nlp.amr.Dependency;@51e37590),Annotation([Ljava.lang.String;@deb3b60,[Ljava.lang.String;@701a32,[Ljava.lang.String;@39aa45a1),Annotation([Ljava.lang.String;@73aff8f1,[Ljava.lang.String;@27cbfddf,[Ledu.cmu.lti.nlp.amr.Entity;@27ead29e))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,398 microseconds
Sentence: 就 是 星星 。 ”

Oracle Span 1:  就 => 就
Oracle Span 2:  星星 => 星星
Spans:
Span 0-1:  就 => 就
Span 2-3:  星星 => 星星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 2-3:  星星 => 星星

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	星星	_	NN	NN	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 星星, manner, x6 / 就)

Input(Some(Graph((say :arg1 (星星 :manner 就)),ArrayBuffer(Span(2,3,List(0),星星,星星,false), Span(0,1,List(1),就,就,false)),Map(1 -> 就, 0 -> 星星),Map(x5 -> 星星, x6 -> 就))),[Ljava.lang.String;@4c060c8f,Annotation([Ljava.lang.String;@40620d8e,[Ljava.lang.String;@383f3558,[Ljava.lang.String;@49b07ee3),Annotation([Ljava.lang.String;@352e612e,[Ljava.lang.String;@65f00478,[Ledu.cmu.lti.nlp.amr.Dependency;@2424686b),Annotation([Ljava.lang.String;@6ea94d6a,[Ljava.lang.String;@28486680,[Ljava.lang.String;@4d7e7435),Annotation([Ljava.lang.String;@4a1e3ac1,[Ljava.lang.String;@6e78fcf5,[Ledu.cmu.lti.nlp.amr.Entity;@56febdc))
AMR:
(x5 / 星星, manner, x6 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,799 microseconds
Sentence: “ 你 要 拿 这 五亿 星星 做 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  做 => 做-01
Oracle Span 3:  拿 => 拿-07
Oracle Span 4:  星星 => 星星
Oracle Span 5:  要 => 要-03
Oracle Span 6:  这 => 这
Spans:
Span 1-2:  你 => 你
Span 7-8:  做 => 做-01
Span 3-4:  拿 => 拿-07
Span 6-7:  星星 => 星星
Span 2-3:  要 => 要-03
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  做 => 做-01
Oracle Span 3-4:  拿 => 拿-07
Oracle Span 6-7:  星星 => 星星
Oracle Span 2-3:  要 => 要-03
Oracle Span 4-5:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	拿	_	VV	VV	_	0	root	_	_
5	这	_	DT	DT	_	7	det	_	_
6	五亿	_	CD	CD	_	5	dep	_	_
7	星星	_	NN	NN	_	4	dobj	_	_
8	做	_	VV	VV	_	4	dep	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	？	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 要-03, arg0, x14 / 拿-07)
(x14 / 拿-07, arg0, x15 / 你)
(x14 / 拿-07, arg1, x16 / 星星)
(x14 / 拿-07, purpose, x19 / 做-01)
(x16 / 星星, mod, x17 / 这)

Input(Some(Graph((say :arg1 (要-03 :arg0 (拿-07 :purpose (做-01 :mode interrogative :arg1 amr-unknown :arg0 x15) :arg1 (星星 :quant 500000000 :mod 这) :arg0 你))),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(3,4,List(1),拿,拿-07,false), Span(7,8,List(2),做,做-01,false), Span(6,7,List(3),星星,星星,false), Span(4,5,List(4),这,这,false), Span(1,2,List(5),你,你,false)),Map(2 -> 做-01, 5 -> 你, 1 -> 拿-07, 4 -> 这, 0 -> 要-03, 3 -> 星星),Map(x16 -> 星星, x19 -> 做-01, x13 -> 要-03, x15 -> 你, x14 -> 拿-07, x17 -> 这))),[Ljava.lang.String;@3b8ee898,Annotation([Ljava.lang.String;@7d151a,[Ljava.lang.String;@294bdeb4,[Ljava.lang.String;@5300f14a),Annotation([Ljava.lang.String;@1f86099a,[Ljava.lang.String;@77bb0ab5,[Ledu.cmu.lti.nlp.amr.Dependency;@f2c488),Annotation([Ljava.lang.String;@54acff7d,[Ljava.lang.String;@7bc9e6ab,[Ljava.lang.String;@5488b5c5),Annotation([Ljava.lang.String;@4248ed58,[Ljava.lang.String;@712ca57b,[Ledu.cmu.lti.nlp.amr.Entity;@4564e94b))
AMR:
(x13 / 要-03, prep-through, x14 / 拿-07)
(x14 / 拿-07, location, x15 / 你)
(x14 / 拿-07, purpose, x19 / 做-01)
(x14 / 拿-07, subset, x17 / 这)
(x19 / 做-01, time, x16 / 星星)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 12,132 microseconds
Sentence: “ 五亿一百六十二万七百三十一 颗 星星 。

Oracle Span 1:  星星 => 星星
Spans:
Span 3-4:  星星 => 星星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  星星 => 星星

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	五亿一百六十二万七百三十一	_	CD	CD	_	3	nummod	_	_
3	颗	_	M	M	_	4	dep	_	_
4	星星	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (星星 :quant 501622731)),ArrayBuffer(Span(3,4,List(0),星星,星星,false)),Map(0 -> 星星),Map(x6 -> 星星))),[Ljava.lang.String;@54534abf,Annotation([Ljava.lang.String;@51745f40,[Ljava.lang.String;@45673f68,[Ljava.lang.String;@27abb83e),Annotation([Ljava.lang.String;@69e308c6,[Ljava.lang.String;@1a1ed4e5,[Ledu.cmu.lti.nlp.amr.Dependency;@667e34b1),Annotation([Ljava.lang.String;@1c6e0a08,[Ljava.lang.String;@6dba847b,[Ljava.lang.String;@1efdcd5),Annotation([Ljava.lang.String;@1623bbe5,[Ljava.lang.String;@7af1cd63,[Ledu.cmu.lti.nlp.amr.Entity;@4351171a))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,664 microseconds
Sentence: 我 是 严肃 的 人 ， 我 是 非常 精确 的 。 ”

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  人 => 人
Oracle Span 3:  我 => 我
Oracle Span 4:  精确 => 精确-01
Oracle Span 5:  非常 => 非常
Spans:
Span 2-3:  严肃 => 严肃-01
Span 4-5:  人 => 人
Span 0-1:  我 => 我
Span 9-10:  精确 => 精确-01
Span 8-9:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  严肃 => 严肃-01
Oracle Span 4-5:  人 => 人
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  精确 => 精确-01
Oracle Span 8-9:  非常 => 非常

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	严肃	_	JJ	JJ	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	人	_	NN	NN	_	2	attr	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	我	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	2	conj	_	_
9	非常	_	AD	AD	_	10	advmod	_	_
10	精确	_	VA	VA	_	8	attr	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	。	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 人, domain, x23 / 我)
(x21 / 人, mod, x22 / 严肃-01)
(x24 / 精确-01, degree, x25 / 非常)

Input(Some(Graph((say :arg1 (and :op (人 :domain 我 :mod 严肃-01) :op (精确-01 :arg0 x23 :degree 非常))),ArrayBuffer(Span(4,5,List(0),人,人,false), Span(0,1,List(1),我,我,false), Span(2,3,List(2),严肃,严肃-01,false), Span(9,10,List(3),精确,精确-01,false), Span(8,9,List(4),非常,非常,false)),Map(2 -> 严肃-01, 1 -> 我, 4 -> 非常, 0 -> 人, 3 -> 精确-01),Map(x22 -> 严肃-01, x25 -> 非常, x21 -> 人, x24 -> 精确-01, x23 -> 我))),[Ljava.lang.String;@3c2772d1,Annotation([Ljava.lang.String;@37d00a23,[Ljava.lang.String;@433e536f,[Ljava.lang.String;@89c65d5),Annotation([Ljava.lang.String;@faa3fed,[Ljava.lang.String;@381cad29,[Ledu.cmu.lti.nlp.amr.Dependency;@988246e),Annotation([Ljava.lang.String;@62515a47,[Ljava.lang.String;@3c5a54b7,[Ljava.lang.String;@61f2c3f0),Annotation([Ljava.lang.String;@291120f4,[Ljava.lang.String;@417ad4f3,[Ledu.cmu.lti.nlp.amr.Entity;@2f6bcf87))
AMR:
(x21 / 人, domain, x23 / 我)
(x21 / 人, mod, x22 / 严肃-01)
(x24 / 精确-01, degree, x25 / 非常)
(x24 / 精确-01, mod, x22 / 严肃-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 10,815 microseconds
Sentence: “ 你 拿 这些 星星 做 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  做 => 做-01
Oracle Span 3:  拿 => 拿-07
Oracle Span 4:  星星 => 星星
Oracle Span 5:  这些 => 这些
Spans:
Span 1-2:  你 => 你
Span 5-6:  做 => 做-01
Span 2-3:  拿 => 拿-07
Span 4-5:  星星 => 星星
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  做 => 做-01
Oracle Span 2-3:  拿 => 拿-07
Oracle Span 4-5:  星星 => 星星
Oracle Span 3-4:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	拿	_	VV	VV	_	0	root	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	星星	_	NN	NN	_	3	dobj	_	_
6	做	_	VV	VV	_	3	conj	_	_
7	什么	_	PN	PN	_	6	dobj	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 拿-07, arg0, x12 / 你)
(x11 / 拿-07, arg1, x13 / 星星)
(x11 / 拿-07, purpose, x15 / 做-01)
(x13 / 星星, mod, x14 / 这些)

Input(Some(Graph((say :arg1 (拿-07 :purpose (做-01 :mode interrogative :arg1 amr-unknown :arg0 x12) :arg1 (星星 :mod 这些) :arg0 你)),ArrayBuffer(Span(2,3,List(0),拿,拿-07,false), Span(5,6,List(1),做,做-01,false), Span(4,5,List(2),星星,星星,false), Span(3,4,List(3),这些,这些,false), Span(1,2,List(4),你,你,false)),Map(2 -> 星星, 1 -> 做-01, 4 -> 你, 0 -> 拿-07, 3 -> 这些),Map(x13 -> 星星, x12 -> 你, x15 -> 做-01, x11 -> 拿-07, x14 -> 这些))),[Ljava.lang.String;@58f174d9,Annotation([Ljava.lang.String;@78c7f9b3,[Ljava.lang.String;@6f8d7714,[Ljava.lang.String;@1e6b9a95),Annotation([Ljava.lang.String;@4d6f623d,[Ljava.lang.String;@aa21042,[Ledu.cmu.lti.nlp.amr.Dependency;@e93f3d5),Annotation([Ljava.lang.String;@4cee7fa0,[Ljava.lang.String;@7a26928a,[Ljava.lang.String;@601cbd8c),Annotation([Ljava.lang.String;@7180e701,[Ljava.lang.String;@4e2c95ee,[Ledu.cmu.lti.nlp.amr.Entity;@d0ec63))
AMR:
(x11 / 拿-07, location, x12 / 你)
(x11 / 拿-07, location, x13 / 星星)
(x11 / 拿-07, purpose, x15 / 做-01)
(x13 / 星星, mod, x14 / 这些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,597 microseconds
Sentence: “ 我 要 它 做 什么 ？ ”

Oracle Span 1:  做 => 做-01
Oracle Span 2:  它 => 它
Oracle Span 3:  我 => 我
Oracle Span 4:  要 => 要-04
Spans:
Span 4-5:  做 => 做-01
Span 3-4:  它 => 它
Span 1-2:  我 => 我
Span 2-3:  要 => 要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  做 => 做-01
Oracle Span 3-4:  它 => 它
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  要 => 要-04

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	要	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	做	_	VV	VV	_	3	ccomp	_	_
6	什么	_	PN	PN	_	5	dobj	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x9 / 要-04, arg0, x10 / 我)
(x9 / 要-04, arg1, x11 / 它)
(x9 / 要-04, arg2, x12 / 做-01)

Input(Some(Graph((say :arg1 (要-04 :mode interrogative :arg2 (做-01 :arg1 amr-unknown :arg0 x11) :arg1 它 :arg0 我)),ArrayBuffer(Span(2,3,List(0),要,要-04,false), Span(4,5,List(1),做,做-01,false), Span(3,4,List(2),它,它,false), Span(1,2,List(3),我,我,false)),Map(2 -> 它, 1 -> 做-01, 0 -> 要-04, 3 -> 我),Map(x10 -> 我, x12 -> 做-01, x11 -> 它, x9 -> 要-04))),[Ljava.lang.String;@5a5c128,Annotation([Ljava.lang.String;@73eb8672,[Ljava.lang.String;@5942ee04,[Ljava.lang.String;@5e76a2bb),Annotation([Ljava.lang.String;@757194dc,[Ljava.lang.String;@5a865416,[Ledu.cmu.lti.nlp.amr.Dependency;@14faa38c),Annotation([Ljava.lang.String;@7ff2b8d2,[Ljava.lang.String;@6dc1484,[Ljava.lang.String;@6e92c6ad),Annotation([Ljava.lang.String;@2fb5fe30,[Ljava.lang.String;@456be73c,[Ledu.cmu.lti.nlp.amr.Entity;@2375b321))
AMR:
(x9 / 要-04, beneficiary, x10 / 我)
(x9 / 要-04, example, x12 / 做-01)
(x9 / 要-04, subset, x11 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,125 microseconds
Sentence: “ 是 呀 。 ”

Oracle Span 1:  是 => 是-03
Spans:
Span 1-2:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	呀	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 是-03),ArrayBuffer(Span(1,2,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x5 -> 是-03))),[Ljava.lang.String;@5baaae4c,Annotation([Ljava.lang.String;@5b6e8f77,[Ljava.lang.String;@41a6d121,[Ljava.lang.String;@4f449e8f),Annotation([Ljava.lang.String;@411291e5,[Ljava.lang.String;@6e28bb87,[Ledu.cmu.lti.nlp.amr.Dependency;@19f040ba),Annotation([Ljava.lang.String;@72ab05ed,[Ljava.lang.String;@27e32fe4,[Ljava.lang.String;@c3c4c1c),Annotation([Ljava.lang.String;@17d238b1,[Ljava.lang.String;@3d7cc3cb,[Ledu.cmu.lti.nlp.amr.Entity;@35e478f))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,467 microseconds
Sentence: “ 什么 也 不 做 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  做 => 做-04
Spans:
Span 2-3:  也 => 也
Span 1-2:  什么 => 什么
Span 4-5:  做 => 做-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  什么 => 什么
Oracle Span 4-5:  做 => 做-04

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	做	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 做-04, arg1, x9 / 什么)
(x7 / 做-04, manner, x10 / 也)

Input(Some(Graph((say :arg1 (做-04 :manner 也 :arg1 什么 :polarity -)),ArrayBuffer(Span(4,5,List(0),做,做-04,false), Span(2,3,List(1),也,也,false), Span(1,2,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 也, 0 -> 做-04),Map(x10 -> 也, x7 -> 做-04, x9 -> 什么))),[Ljava.lang.String;@6d6cb754,Annotation([Ljava.lang.String;@6b7d1df8,[Ljava.lang.String;@3044e9c7,[Ljava.lang.String;@41d7b27f),Annotation([Ljava.lang.String;@49096b06,[Ljava.lang.String;@4a183d02,[Ledu.cmu.lti.nlp.amr.Dependency;@5d05ef57),Annotation([Ljava.lang.String;@213deac2,[Ljava.lang.String;@23eee4b8,[Ljava.lang.String;@28952dea),Annotation([Ljava.lang.String;@5a9800f8,[Ljava.lang.String;@143d9a93,[Ledu.cmu.lti.nlp.amr.Entity;@40226788))
AMR:
(x7 / 做-04, manner, x10 / 也)
(x7 / 做-04, snt3, x9 / 什么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 4,049 microseconds
Sentence: 它们 都 是 属于 我 的 。 ”

Oracle Span 1:  它们 => 它们
Oracle Span 2:  属于 => 属于-01
Oracle Span 3:  我 => 我
Oracle Span 4:  都 => 都
Spans:
Span 0-1:  它们 => 它们
Span 3-4:  属于 => 属于-01
Span 4-5:  我 => 我
Span 1-2:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它们 => 它们
Oracle Span 3-4:  属于 => 属于-01
Oracle Span 4-5:  我 => 我
Oracle Span 1-2:  都 => 都

Dependencies:
1	它们	_	PN	PN	_	3	nsubj	_	_
2	都	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	属于	_	VV	VV	_	3	attr	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 属于-01, arg0, x9 / 它们)
(x7 / 属于-01, arg1, x10 / 我)
(x7 / 属于-01, manner, x8 / 都)

Input(Some(Graph((say :arg1 (属于-01 :arg1 我 :arg0 它们 :manner 都)),ArrayBuffer(Span(3,4,List(0),属于,属于-01,false), Span(4,5,List(1),我,我,false), Span(0,1,List(2),它们,它们,false), Span(1,2,List(3),都,都,false)),Map(2 -> 它们, 1 -> 我, 0 -> 属于-01, 3 -> 都),Map(x10 -> 我, x8 -> 都, x7 -> 属于-01, x9 -> 它们))),[Ljava.lang.String;@4159e81b,Annotation([Ljava.lang.String;@5b5caf08,[Ljava.lang.String;@23cd4ff2,[Ljava.lang.String;@70807224),Annotation([Ljava.lang.String;@7e97551f,[Ljava.lang.String;@400d912a,[Ledu.cmu.lti.nlp.amr.Dependency;@9f6e406),Annotation([Ljava.lang.String;@7a94b64e,[Ljava.lang.String;@3e6f3bae,[Ljava.lang.String;@12477988),Annotation([Ljava.lang.String;@2caf6912,[Ljava.lang.String;@73d69c0f,[Ledu.cmu.lti.nlp.amr.Entity;@34237b90))
AMR:
(x7 / 属于-01, manner, x8 / 都)
(x7 / 属于-01, quant, x9 / 它们)
(x7 / 属于-01, year, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,156 microseconds
Sentence: “ 星星 是 属于 你 的 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  属于 => 属于-01
Oracle Span 3:  星星 => 星星
Spans:
Span 4-5:  你 => 你
Span 3-4:  属于 => 属于-01
Span 1-2:  星星 => 星星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 3-4:  属于 => 属于-01
Oracle Span 1-2:  星星 => 星星

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	星星	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	属于	_	VV	VV	_	3	attr	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 属于-01, arg0, x8 / 星星)
(x7 / 属于-01, arg1, x9 / 你)

Input(Some(Graph((say :arg1 (属于-01 :mode interrogative :arg1 你 :arg0 星星)),ArrayBuffer(Span(3,4,List(0),属于,属于-01,false), Span(4,5,List(1),你,你,false), Span(1,2,List(2),星星,星星,false)),Map(2 -> 星星, 1 -> 你, 0 -> 属于-01),Map(x8 -> 星星, x7 -> 属于-01, x9 -> 你))),[Ljava.lang.String;@1d01dfa5,Annotation([Ljava.lang.String;@4a31c2ee,[Ljava.lang.String;@d400943,[Ljava.lang.String;@22101c80),Annotation([Ljava.lang.String;@31ff1390,[Ljava.lang.String;@759d81f3,[Ledu.cmu.lti.nlp.amr.Dependency;@781a9412),Annotation([Ljava.lang.String;@5a4c638d,[Ljava.lang.String;@13e698c7,[Ljava.lang.String;@aed0151),Annotation([Ljava.lang.String;@267bbe1a,[Ljava.lang.String;@1f12e153,[Ledu.cmu.lti.nlp.amr.Entity;@389562d6))
AMR:
(x7 / 属于-01, instrument, x8 / 星星)
(x7 / 属于-01, prep-through, x9 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,664 microseconds
Sentence: “ 是 的 。 ”

Oracle Span 1:  是 => 是-03
Spans:
Span 1-2:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	的	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 是-03),ArrayBuffer(Span(1,2,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x4 -> 是-03))),[Ljava.lang.String;@5a101b1c,Annotation([Ljava.lang.String;@2160e52a,[Ljava.lang.String;@29f0802c,[Ljava.lang.String;@3a60c416),Annotation([Ljava.lang.String;@60f2e0bd,[Ljava.lang.String;@469d003c,[Ledu.cmu.lti.nlp.amr.Dependency;@6b410923),Annotation([Ljava.lang.String;@57bd2029,[Ljava.lang.String;@203dd56b,[Ljava.lang.String;@e8fadb0),Annotation([Ljava.lang.String;@6d64b553,[Ljava.lang.String;@53667cbe,[Ledu.cmu.lti.nlp.amr.Entity;@1d3e6d34))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,581 microseconds
Sentence: “ 可是 我 已经 见到 过 一 个 国王 ， 他 … ”

Oracle Span 1:  国王 => 国王
Oracle Span 2:  我 => 我
Oracle Span 3:  见到 => 见到-01
Spans:
Span 8-9:  国王 => 国王
Span 2-3:  我 => 我
Span 4-5:  见到 => 见到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  国王 => 国王
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  见到 => 见到-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	已经	_	AD	AD	_	5	advmod	_	_
5	见到	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	国王	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	5	punct	_	_
11	他	_	PN	PN	_	12	dep	_	_
12	…	_	VV	VV	_	5	conj	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x17 / 见到-01, arg0, x18 / 我)
(x17 / 见到-01, arg1, x19 / 国王)

Input(Some(Graph((say :arg1 (contrast :arg2 (and :op (见到-01 :arg1 (国王 :quant 1) :arg0 我) :op x19))),ArrayBuffer(Span(4,5,List(0),见到,见到-01,false), Span(8,9,List(1),国王,国王,false), Span(2,3,List(2),我,我,false)),Map(2 -> 我, 1 -> 国王, 0 -> 见到-01),Map(x19 -> 国王, x18 -> 我, x17 -> 见到-01))),[Ljava.lang.String;@6eafb10e,Annotation([Ljava.lang.String;@26a94fa5,[Ljava.lang.String;@464a4442,[Ljava.lang.String;@2873d672),Annotation([Ljava.lang.String;@3bc735b3,[Ljava.lang.String;@577f9109,[Ledu.cmu.lti.nlp.amr.Dependency;@4303b7f0),Annotation([Ljava.lang.String;@757529a4,[Ljava.lang.String;@779de014,[Ljava.lang.String;@5c41d037),Annotation([Ljava.lang.String;@2234078,[Ljava.lang.String;@5ec77191,[Ledu.cmu.lti.nlp.amr.Entity;@4642b71d))
AMR:
(x17 / 见到-01, example, x18 / 我)
(x19 / 国王, time, x17 / 见到-01)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 5,689 microseconds
Sentence: “ 国王 并不 占有 ， 他们 只是 进行 ‘ 统治 ’ 。

Oracle Span 1:  占有 => 占有-01
Oracle Span 2:  国王 => 国王
Oracle Span 3:  统治 => 统治-01
Spans:
Span 3-4:  占有 => 占有-01
Span 1-2:  国王 => 国王
Span 9-10:  统治 => 统治-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  占有 => 占有-01
Oracle Span 1-2:  国王 => 国王
Oracle Span 9-10:  统治 => 统治-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	国王	_	NN	NN	_	3	nsubj	_	_
3	并不	_	VV	VV	_	0	root	_	_
4	占有	_	VV	VV	_	3	ccomp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	他们	_	PN	PN	_	8	nsubj	_	_
7	只是	_	AD	AD	_	8	advmod	_	_
8	进行	_	VV	VV	_	3	conj	_	_
9	‘	_	PU	PU	_	10	punct	_	_
10	统治	_	NN	NN	_	8	dobj	_	_
11	’	_	PU	PU	_	10	punct	_	_
12	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x23 / 占有-01, arg0, x25 / 国王)

Input(Some(Graph((say :arg1 (contrast :arg1 (占有-01 :arg0 国王 :polarity -) :arg2 (统治-01 :arg0 x25))),ArrayBuffer(Span(3,4,List(0),占有,占有-01,false), Span(1,2,List(1),国王,国王,false), Span(9,10,List(2),统治,统治-01,false)),Map(2 -> 统治-01, 1 -> 国王, 0 -> 占有-01),Map(x25 -> 国王, x23 -> 占有-01, x26 -> 统治-01))),[Ljava.lang.String;@1450078a,Annotation([Ljava.lang.String;@c68a5f8,[Ljava.lang.String;@69c6161d,[Ljava.lang.String;@3aefae67),Annotation([Ljava.lang.String;@2e1792e7,[Ljava.lang.String;@6719a5b8,[Ledu.cmu.lti.nlp.amr.Dependency;@3eb631b8),Annotation([Ljava.lang.String;@796d3c9f,[Ljava.lang.String;@6bff19ff,[Ljava.lang.String;@41e1455d),Annotation([Ljava.lang.String;@4e558728,[Ljava.lang.String;@5eccd3b9,[Ledu.cmu.lti.nlp.amr.Entity;@4d6f197e))
AMR:
(x23 / 占有-01, location, x25 / 国王)
(x26 / 统治-01, manner, x23 / 占有-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 5,311 microseconds
Sentence: 这 不 是 一码 事 。 ”

Oracle Span 1:  事 => 事
Oracle Span 2:  这 => 这
Spans:
Span 4-5:  事 => 事
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  事 => 事
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一码	_	CD	CD	_	5	nummod	_	_
5	事	_	NN	NN	_	3	attr	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 事, domain, x10 / 这)

Input(Some(Graph((say :arg1 (事 :domain 这 :polarity - :quant 1)),ArrayBuffer(Span(4,5,List(0),事,事,false), Span(0,1,List(1),这,这,false)),Map(1 -> 这, 0 -> 事),Map(x10 -> 这, x7 -> 事))),[Ljava.lang.String;@6ef7623,Annotation([Ljava.lang.String;@64e1dd11,[Ljava.lang.String;@5c089b2f,[Ljava.lang.String;@6999cd39),Annotation([Ljava.lang.String;@14bae047,[Ljava.lang.String;@7ed9ae94,[Ledu.cmu.lti.nlp.amr.Dependency;@66908383),Annotation([Ljava.lang.String;@41477a6d,[Ljava.lang.String;@2bc12da,[Ljava.lang.String;@3122b117),Annotation([Ljava.lang.String;@534ca02b,[Ljava.lang.String;@29a23c3d,[Ledu.cmu.lti.nlp.amr.Entity;@4b6ac111))
AMR:
(x7 / 事, domain, x10 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
Decoded in 3,206 microseconds
Sentence: “ 你 拥有 这 许多 星星 有 什么 用 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  拥有 => 拥有-01
Oracle Span 3:  星星 => 星星
Oracle Span 4:  许多 => 许多
Oracle Span 5:  这 => 这
Spans:
Span 1-2:  你 => 你
Span 2-3:  拥有 => 拥有-01
Span 5-6:  星星 => 星星
Span 4-5:  许多 => 许多
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  拥有 => 拥有-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 4-5:  许多 => 许多
Oracle Span 3-4:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	拥有	_	VV	VV	_	0	root	_	_
4	这	_	DT	DT	_	6	det	_	_
5	许多	_	CD	CD	_	4	dep	_	_
6	星星	_	NN	NN	_	3	dobj	_	_
7	有	_	VE	VE	_	3	conj	_	_
8	什么	_	PN	PN	_	9	nsubj	_	_
9	用	_	VV	VV	_	7	dep	_	_
10	？	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 拥有-01, arg0, x13 / 你)
(x12 / 拥有-01, arg1, x14 / 星星)
(x14 / 星星, mod, x15 / 许多)
(x14 / 星星, mod, x16 / 这)

Input(Some(Graph((say :arg1 (拥有-01 :mode interrogative :purpose amr-unknown :arg1 (星星 :mod 这 :mod 许多) :arg0 你)),ArrayBuffer(Span(2,3,List(0),拥有,拥有-01,false), Span(5,6,List(1),星星,星星,false), Span(3,4,List(2),这,这,false), Span(4,5,List(3),许多,许多,false), Span(1,2,List(4),你,你,false)),Map(2 -> 这, 1 -> 星星, 4 -> 你, 0 -> 拥有-01, 3 -> 许多),Map(x16 -> 这, x13 -> 你, x12 -> 拥有-01, x15 -> 许多, x14 -> 星星))),[Ljava.lang.String;@6fe46b62,Annotation([Ljava.lang.String;@591fd34d,[Ljava.lang.String;@61e45f87,[Ljava.lang.String;@7c9b78e3),Annotation([Ljava.lang.String;@3068b369,[Ljava.lang.String;@17ca8b92,[Ledu.cmu.lti.nlp.amr.Dependency;@5491f68b),Annotation([Ljava.lang.String;@736ac09a,[Ljava.lang.String;@6ecd665,[Ljava.lang.String;@45394b31),Annotation([Ljava.lang.String;@1ec7d8b3,[Ljava.lang.String;@3b0ca5e1,[Ledu.cmu.lti.nlp.amr.Entity;@5bb3131b))
AMR:
(x12 / 拥有-01, location, x13 / 你)
(x14 / 星星, mod, x15 / 许多)
(x14 / 星星, mod, x16 / 这)
(x15 / 许多, conj-as-if, x12 / 拥有-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,427 microseconds
Sentence: 它 能 让 我 变得 富有 。

Oracle Span 1:  它 => 它
Oracle Span 2:  富有 => 富有-01
Oracle Span 3:  我 => 我
Oracle Span 4:  能 => 能-01
Oracle Span 5:  让 => 让-02
Spans:
Span 0-1:  它 => 它
Span 5-6:  富有 => 富有-01
Span 3-4:  我 => 我
Span 1-2:  能 => 能-01
Span 2-3:  让 => 让-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它 => 它
Oracle Span 5-6:  富有 => 富有-01
Oracle Span 3-4:  我 => 我
Oracle Span 1-2:  能 => 能-01
Oracle Span 2-3:  让 => 让-02

Dependencies:
1	它	_	PN	PN	_	3	nsubj	_	_
2	能	_	VV	VV	_	3	mmod	_	_
3	让	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	变得	_	VV	VV	_	3	dep	_	_
6	富有	_	VV	VV	_	3	dep	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 能-01, arg0, x2 / 让-02)
(x2 / 让-02, arg0, x3 / 它)
(x2 / 让-02, arg1, x4 / 我)

Input(Some(Graph((能-01 :arg0 (让-02 :arg2 (变-01 :arg0 x4 :arg1 (富有-01 :arg0 x4)) :arg1 我 :arg0 它)),ArrayBuffer(Span(1,2,List(0),能,能-01,false), Span(2,3,List(1),让,让-02,false), Span(5,6,List(2),富有,富有-01,false), Span(3,4,List(3),我,我,false), Span(0,1,List(4),它,它,false)),Map(2 -> 富有-01, 1 -> 让-02, 4 -> 它, 0 -> 能-01, 3 -> 我),Map(x2 -> 让-02, x7 -> 富有-01, x4 -> 我, x3 -> 它, x0 -> 能-01))),[Ljava.lang.String;@54dcbb9f,Annotation([Ljava.lang.String;@74fef3f7,[Ljava.lang.String;@2a037324,[Ljava.lang.String;@69eb86b4),Annotation([Ljava.lang.String;@585ac855,[Ljava.lang.String;@5bb8f9e2,[Ledu.cmu.lti.nlp.amr.Dependency;@6a933be2),Annotation([Ljava.lang.String;@5f78de22,[Ljava.lang.String;@516ebdf8,[Ljava.lang.String;@4d8539de),Annotation([Ljava.lang.String;@3eba57a7,[Ljava.lang.String;@272a179c,[Ledu.cmu.lti.nlp.amr.Entity;@30feffc))
AMR:
(x0 / 能-01, op, x2 / 让-02)
(x2 / 让-02, snt1, x3 / 它)
(x2 / 让-02, value, x4 / 我)
(x4 / 我, ARG6, x7 / 富有-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,495 microseconds
Sentence: 富 了 有 什么 好处 呢 ？

Oracle Span 1:  好处 => 好处
Oracle Span 2:  富 => 富-02
Oracle Span 3:  有 => 有-01
Spans:
Span 4-5:  好处 => 好处
Span 0-1:  富 => 富-02
Span 2-3:  有 => 有-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  好处 => 好处
Oracle Span 0-1:  富 => 富-02
Oracle Span 2-3:  有 => 有-01

Dependencies:
1	富	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	有	_	VE	VE	_	1	dep	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	好处	_	NN	NN	_	3	dobj	_	_
6	呢	_	SP	SP	_	1	dep	_	_
7	？	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 富-02)
(x0 / 有-01, arg1, x3 / 好处)

Input(Some(Graph((有-01 :mode interrogative :arg1 (好处 :mod amr-unknown) :arg0 富-02),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(4,5,List(1),好处,好处,false), Span(0,1,List(2),富,富-02,false)),Map(2 -> 富-02, 1 -> 好处, 0 -> 有-01),Map(x2 -> 富-02, x3 -> 好处, x0 -> 有-01))),[Ljava.lang.String;@67207d8a,Annotation([Ljava.lang.String;@bcb09a6,[Ljava.lang.String;@7c2a69b4,[Ljava.lang.String;@a619c2),Annotation([Ljava.lang.String;@648ee871,[Ljava.lang.String;@375b5b7f,[Ledu.cmu.lti.nlp.amr.Dependency;@1813f3e9),Annotation([Ljava.lang.String;@28cb9120,[Ljava.lang.String;@3b152928,[Ljava.lang.String;@56781d96),Annotation([Ljava.lang.String;@5173200b,[Ljava.lang.String;@25c5e994,[Ledu.cmu.lti.nlp.amr.Entity;@378bd86d))
AMR:
(x0 / 有-01, degree, x2 / 富-02)
(x0 / 有-01, ord, x3 / 好处)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,547 microseconds
Sentence: “ 富 了 就 可以 去 买 别的 星星 ， 如果 有 人 发现 了 别的 星星 的话 。 ”

Oracle Span 1:  买 => 买-01
Oracle Span 2:  人 => 人
Oracle Span 3:  别的 => 别的
Oracle Span 4:  别的 => 别的
Oracle Span 5:  去 => 去-01
Oracle Span 6:  发现 => 发现-01
Oracle Span 7:  可以 => 可以-01
Oracle Span 8:  富 => 富
Oracle Span 9:  就 => 就
Oracle Span 10:  星星 => 星星
Oracle Span 11:  星星 => 星星
Oracle Span 12:  有 => 有-03
Spans:
Span 6-7:  买 => 买-01
Span 12-13:  人 => 人
Span 7-8:  别的 => 别的
Span 15-16:  别的 => 别的
Span 5-6:  去 => 去-01
Span 13-14:  发现 => 发现-01
Span 4-5:  可以 => 可以-01
Span 1-2:  富 => 富
Span 3-4:  就 => 就
Span 8-9:  星星 => 星星
Span 16-17:  星星 => 星星
Span 11-12:  有 => 有-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  买 => 买-01
Oracle Span 12-13:  人 => 人
Oracle Span 7-8:  别的 => 别的
Oracle Span 15-16:  别的 => 别的
Oracle Span 5-6:  去 => 去-01
Oracle Span 13-14:  发现 => 发现-01
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 1-2:  富 => 富
Oracle Span 3-4:  就 => 就
Oracle Span 8-9:  星星 => 星星
Oracle Span 16-17:  星星 => 星星
Oracle Span 11-12:  有 => 有-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	富	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	就	_	AD	AD	_	7	advmod	_	_
5	可以	_	VV	VV	_	7	mmod	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	买	_	VV	VV	_	2	dep	_	_
8	别的	_	NN	NN	_	9	nn	_	_
9	星星	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	7	punct	_	_
11	如果	_	CS	CS	_	12	advmod	_	_
12	有	_	VE	VE	_	7	dep	_	_
13	人	_	NN	NN	_	14	nsubj	_	_
14	发现	_	VV	VV	_	12	dep	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	别的	_	NN	NN	_	17	nn	_	_
17	星星	_	NN	NN	_	14	dobj	_	_
18	的话	_	SP	SP	_	14	dep	_	_
19	。	_	PU	PU	_	2	punct	_	_
20	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x18 / 发现-01, arg0, x19 / 人)
(x18 / 发现-01, arg1, x21 / 星星)
(x20 / 有-03, arg1, x19 / 人)
(x21 / 星星, mod, x22 / 别的)
(x25 / 可以-01, arg0, x26 / 去-01)
(x25 / 可以-01, manner, x27 / 就)
(x26 / 去-01, arg1, x28 / 买-01)
(x28 / 买-01, arg1, x29 / 星星)
(x29 / 星星, mod, x30 / 别的)

Input(Some(Graph((say :arg1 (condition :arg1 (发现-01 :arg1 (星星 :mod 别的) :arg0 (人 :arg1-of 有-03)) :arg2 (condition :arg1 富 :arg2 (可以-01 :manner 就 :arg0 (去-01 :arg1 (买-01 :arg1 (星星 :mod 别的))))))),ArrayBuffer(Span(13,14,List(0),发现,发现-01,false), Span(8,9,List(1),星星,星星,false), Span(7,8,List(2),别的,别的,false), Span(12,13,List(3),人,人,false), Span(11,12,List(4),有,有-03,false), Span(1,2,List(5),富,富,false), Span(4,5,List(6),可以,可以-01,false), Span(3,4,List(7),就,就,false), Span(5,6,List(8),去,去-01,false), Span(6,7,List(9),买,买-01,false), Span(16,17,List(10),星星,星星,false), Span(15,16,List(11),别的,别的,false)),Map(2 -> 别的, 5 -> 富, 8 -> 去-01, 7 -> 就, 1 -> 星星, 4 -> 有-03, 11 -> 别的, 6 -> 可以-01, 9 -> 买-01, 0 -> 发现-01, 10 -> 星星, 3 -> 人),Map(x28 -> 买-01, x22 -> 别的, x25 -> 可以-01, x19 -> 人, x30 -> 别的, x27 -> 就, x21 -> 星星, x24 -> 富, x18 -> 发现-01, x26 -> 去-01, x29 -> 星星, x20 -> 有-03))),[Ljava.lang.String;@2189e7a7,Annotation([Ljava.lang.String;@69b2f8e5,[Ljava.lang.String;@6331250e,[Ljava.lang.String;@a10c1b5),Annotation([Ljava.lang.String;@644abb8f,[Ljava.lang.String;@1a411233,[Ledu.cmu.lti.nlp.amr.Dependency;@70325d20),Annotation([Ljava.lang.String;@7c2327fa,[Ljava.lang.String;@4d847d32,[Ljava.lang.String;@5f462e3b),Annotation([Ljava.lang.String;@3d7fa3ae,[Ljava.lang.String;@58065f0c,[Ledu.cmu.lti.nlp.amr.Entity;@3605c4d3))
AMR:
(x18 / 发现-01, direction, x19 / 人)
(x20 / 有-03, extent, x21 / 星星)
(x20 / 有-03, purpose, x18 / 发现-01)
(x21 / 星星, mod, x22 / 别的)
(x22 / 别的, degree, x28 / 买-01)
(x24 / 富, purpose, x26 / 去-01)
(x25 / 可以-01, manner, x27 / 就)
(x25 / 可以-01, prep-as, x26 / 去-01)
(x28 / 买-01, direction, x26 / 去-01)
(x29 / 星星, mod, x30 / 别的)
(x30 / 别的, conj-as-if, x18 / 发现-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1.0.0.0.0
Decoded in 42,016 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 这个 人 想 问题 有点 象 那个 酒鬼 一样 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  小 => 小-01
Oracle Span 3:  想 => 想-01
Oracle Span 4:  有点 => 有点
Oracle Span 5:  王子 => 王子
Oracle Span 6:  自言自语 => 自言自语
Oracle Span 7:  说 => 说-01
Oracle Span 8:  这个 => 这个
Oracle Span 9:  那个 => 那个
Oracle Span 10:  酒鬼 => 酒鬼
Oracle Span 11:  问题 => 问题
Spans:
Span 8-9:  人 => 人
Span 0-1:  小 => 小-01
Span 9-10:  想 => 想-01
Span 11-12:  有点 => 有点
Span 1-2:  王子 => 王子
Span 2-3:  自言自语 => 自言自语
Span 4-5:  说 => 说-01
Span 7-8:  这个 => 这个
Span 13-14:  那个 => 那个
Span 14-15:  酒鬼 => 酒鬼
Span 10-11:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  想 => 想-01
Oracle Span 11-12:  有点 => 有点
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 4-5:  说 => 说-01
Oracle Span 7-8:  这个 => 这个
Oracle Span 13-14:  那个 => 那个
Oracle Span 14-15:  酒鬼 => 酒鬼
Oracle Span 10-11:  问题 => 问题

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	这个	_	CD	CD	_	9	nummod	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	想	_	VV	VV	_	5	ccomp	_	_
11	问题	_	NN	NN	_	12	nn	_	_
12	有点	_	NN	NN	_	16	nsubj	_	_
13	象	_	P	P	_	16	prep	_	_
14	那个	_	NN	NN	_	15	nn	_	_
15	酒鬼	_	NN	NN	_	13	pobj	_	_
16	一样	_	VA	VA	_	10	ccomp	_	_
17	。	_	PU	PU	_	5	punct	_	_
18	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 王子)
(x0 / 说-01, manner, x2 / 自言自语)
(x11 / 酒鬼, mod, x12 / 那个)
(x3 / 王子, mod, x4 / 小-01)
(x7 / 想-01, arg0, x8 / 人)
(x7 / 想-01, arg1, x10 / 问题)
(x8 / 人, mod, x9 / 这个)

Input(Some(Graph((说-01 :arg1 (像-01 :degree 有点 :arg0 (想-01 :arg1 问题 :arg0 (人 :mod 这个)) :arg1 (酒鬼 :mod 那个)) :arg0 (王子 :mod 小-01) :manner 自言自语),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(11,12,List(1),有点,有点,false), Span(9,10,List(2),想,想-01,false), Span(10,11,List(3),问题,问题,false), Span(8,9,List(4),人,人,false), Span(7,8,List(5),这个,这个,false), Span(14,15,List(6),酒鬼,酒鬼,false), Span(13,14,List(7),那个,那个,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小-01,false), Span(2,3,List(10),自言自语,自言自语,false)),Map(2 -> 想-01, 5 -> 这个, 8 -> 王子, 7 -> 那个, 1 -> 有点, 4 -> 人, 6 -> 酒鬼, 9 -> 小-01, 0 -> 说-01, 10 -> 自言自语, 3 -> 问题),Map(x2 -> 自言自语, x10 -> 问题, x8 -> 人, x12 -> 那个, x7 -> 想-01, x4 -> 小-01, x3 -> 王子, x11 -> 酒鬼, x6 -> 有点, x9 -> 这个, x0 -> 说-01))),[Ljava.lang.String;@585c13de,Annotation([Ljava.lang.String;@187eb9a8,[Ljava.lang.String;@726a6b94,[Ljava.lang.String;@6ad11a56),Annotation([Ljava.lang.String;@522b2631,[Ljava.lang.String;@3ff57625,[Ledu.cmu.lti.nlp.amr.Dependency;@1ee29c84),Annotation([Ljava.lang.String;@7c8326a4,[Ljava.lang.String;@77128dab,[Ljava.lang.String;@63429932),Annotation([Ljava.lang.String;@69ce2f62,[Ljava.lang.String;@c9d82f9,[Ledu.cmu.lti.nlp.amr.Entity;@6f012914))
AMR:
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, purpose, x7 / 想-01)
(x11 / 酒鬼, mod, x12 / 那个)
(x2 / 自言自语, value, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 有点, value, x10 / 问题)
(x7 / 想-01, ARG6, x10 / 问题)
(x7 / 想-01, prep-into, x8 / 人)
(x7 / 想-01, time, x12 / 那个)
(x8 / 人, mod, x9 / 这个)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.0
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 39,001 microseconds
Sentence: 可是 他 又 提 了 一些 问题 ：

Oracle Span 1:  一些 => 一些
Oracle Span 2:  他 => 他
Oracle Span 3:  又 => 又
Oracle Span 4:  提 => 提-01
Oracle Span 5:  问题 => 问题
Spans:
Span 5-6:  一些 => 一些
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  提 => 提-01
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一些 => 一些
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  提 => 提-01
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	提	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一些	_	CD	CD	_	7	nummod	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 提-01, arg0, x4 / 他)
(x2 / 提-01, arg1, x5 / 问题)
(x2 / 提-01, manner, x3 / 又)
(x5 / 问题, quant, x6 / 一些)

Input(Some(Graph((contrast :arg2 (提-01 :arg1 (问题 :quant 一些) :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),提,提-01,false), Span(6,7,List(1),问题,问题,false), Span(5,6,List(2),一些,一些,false), Span(1,2,List(3),他,他,false), Span(2,3,List(4),又,又,false)),Map(2 -> 一些, 1 -> 问题, 4 -> 又, 0 -> 提-01, 3 -> 他),Map(x2 -> 提-01, x5 -> 问题, x4 -> 他, x3 -> 又, x6 -> 一些))),[Ljava.lang.String;@18fdb6cf,Annotation([Ljava.lang.String;@d02f8d,[Ljava.lang.String;@60baef24,[Ljava.lang.String;@61533ae),Annotation([Ljava.lang.String;@732bb66d,[Ljava.lang.String;@720653c2,[Ledu.cmu.lti.nlp.amr.Dependency;@45f24169),Annotation([Ljava.lang.String;@6ad5923a,[Ljava.lang.String;@4463d9d3,[Ljava.lang.String;@43b0ade),Annotation([Ljava.lang.String;@5395ea39,[Ljava.lang.String;@1517f633,[Ledu.cmu.lti.nlp.amr.Entity;@4fe01803))
AMR:
(x2 / 提-01, manner, x3 / 又)
(x2 / 提-01, prep-on-behalf, x4 / 他)
(x2 / 提-01, quant, x6 / 一些)
(x5 / 问题, quant, x6 / 一些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,099 microseconds
Sentence: “ 你 怎么 能 占有 星星 呢 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  占有 => 占有-01
Oracle Span 3:  星星 => 星星
Oracle Span 4:  能 => 能-01
Spans:
Span 1-2:  你 => 你
Span 4-5:  占有 => 占有-01
Span 5-6:  星星 => 星星
Span 3-4:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  占有 => 占有-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  能 => 能-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	占有	_	VV	VV	_	0	root	_	_
6	星星	_	NN	NN	_	5	dobj	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 占有-01, arg0, x11 / 你)
(x10 / 占有-01, arg1, x12 / 星星)
(x9 / 能-01, arg0, x10 / 占有-01)

Input(Some(Graph((say :arg1 (能-01 :mode interrogative :arg0 (占有-01 :cause amr-unknown :arg1 星星 :arg0 你))),ArrayBuffer(Span(3,4,List(0),能,能-01,false), Span(4,5,List(1),占有,占有-01,false), Span(5,6,List(2),星星,星星,false), Span(1,2,List(3),你,你,false)),Map(2 -> 星星, 1 -> 占有-01, 0 -> 能-01, 3 -> 你),Map(x10 -> 占有-01, x12 -> 星星, x11 -> 你, x9 -> 能-01))),[Ljava.lang.String;@13d186db,Annotation([Ljava.lang.String;@6f6962ba,[Ljava.lang.String;@4565a70a,[Ljava.lang.String;@a0a9fa5),Annotation([Ljava.lang.String;@15723761,[Ljava.lang.String;@312afbc7,[Ledu.cmu.lti.nlp.amr.Dependency;@599f571f),Annotation([Ljava.lang.String;@7b60c3e,[Ljava.lang.String;@3fbfa96,[Ljava.lang.String;@6569dded),Annotation([Ljava.lang.String;@466d49f0,[Ljava.lang.String;@710d7aff,[Ledu.cmu.lti.nlp.amr.Entity;@2d7e1102))
AMR:
(x10 / 占有-01, direction, x12 / 星星)
(x10 / 占有-01, direction, x9 / 能-01)
(x9 / 能-01, domain, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,929 microseconds
Sentence: “ 那么 你 说 星星 是 谁 的 呀 ？ ” 实业家 不 高兴 地 顶 了 小 王子 一 句 。

Oracle Span 1:  实业家 => 实业家
Oracle Span 2:  小 => 小-01
Oracle Span 3:  星星 => 星星
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Oracle Span 6:  顶 => 顶-02
Oracle Span 7:  高兴 => 高兴
Spans:
Span 11-12:  实业家 => 实业家
Span 17-18:  小 => 小-01
Span 4-5:  星星 => 星星
Span 18-19:  王子 => 王子
Span 3-4:  说 => 说-01
Span 15-16:  顶 => 顶-02
Span 13-14:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  实业家 => 实业家
Oracle Span 17-18:  小 => 小-01
Oracle Span 4-5:  星星 => 星星
Oracle Span 18-19:  王子 => 王子
Oracle Span 3-4:  说 => 说-01
Oracle Span 15-16:  顶 => 顶-02
Oracle Span 13-14:  高兴 => 高兴

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	你	_	PN	PN	_	4	prep	_	_
4	说	_	VV	VV	_	0	root	_	_
5	星星	_	NN	NN	_	6	top	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	谁	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	呀	_	SP	SP	_	6	dep	_	_
10	？	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_
12	实业家	_	NN	NN	_	16	nsubj	_	_
13	不	_	AD	AD	_	16	neg	_	_
14	高兴	_	VA	VA	_	16	dvpmod	_	_
15	地	_	DEV	DEV	_	14	dvpm	_	_
16	顶	_	VV	VV	_	4	dep	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	小	_	JJ	JJ	_	19	amod	_	_
19	王子	_	NN	NN	_	21	nn	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	句	_	NN	NN	_	16	dobj	_	_
22	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x16 / 顶-02, arg0, x19 / 实业家)
(x16 / 顶-02, arg1, x20 / 王子)
(x16 / 顶-02, manner, x17 / 高兴)
(x20 / 王子, mod, x21 / 小-01)
(x24 / 说-01, arg1, x26 / 星星)

Input(Some(Graph((and :op (顶-02 :arg1 (王子 :mod 小-01) :arg0 实业家 :manner (高兴 :polarity -)) :op (say :arg0 x19 :arg1 (说-01 :arg1 (星星 :poss amr-unknown) :arg0 x20) :mode interrogative)),ArrayBuffer(Span(15,16,List(0),顶,顶-02,false), Span(18,19,List(1),王子,王子,false), Span(17,18,List(2),小,小-01,false), Span(11,12,List(3),实业家,实业家,false), Span(13,14,List(4),高兴,高兴,false), Span(3,4,List(5),说,说-01,false), Span(4,5,List(6),星星,星星,false)),Map(2 -> 小-01, 5 -> 说-01, 1 -> 王子, 4 -> 高兴, 6 -> 星星, 0 -> 顶-02, 3 -> 实业家),Map(x16 -> 顶-02, x19 -> 实业家, x21 -> 小-01, x24 -> 说-01, x26 -> 星星, x20 -> 王子, x17 -> 高兴))),[Ljava.lang.String;@65327f5,Annotation([Ljava.lang.String;@2adddc06,[Ljava.lang.String;@301d8120,[Ljava.lang.String;@6d367020),Annotation([Ljava.lang.String;@72458efc,[Ljava.lang.String;@36bc415e,[Ledu.cmu.lti.nlp.amr.Dependency;@6a74d228),Annotation([Ljava.lang.String;@349d0836,[Ljava.lang.String;@6a714237,[Ljava.lang.String;@3e134896),Annotation([Ljava.lang.String;@72ba28ee,[Ljava.lang.String;@2e3a5237,[Ledu.cmu.lti.nlp.amr.Entity;@4ebadd3d))
AMR:
(x16 / 顶-02, degree, x24 / 说-01)
(x16 / 顶-02, manner, x17 / 高兴)
(x16 / 顶-02, prep-through, x21 / 小-01)
(x17 / 高兴, unit, x19 / 实业家)
(x20 / 王子, mod, x21 / 小-01)
(x24 / 说-01, location, x26 / 星星)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 18,023 microseconds
Sentence: “ 我 不 知道 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  知道 => 知道-01
Spans:
Span 1-2:  我 => 我
Span 3-4:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  知道 => 知道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	不	_	NN	NN	_	0	root	_	_
4	知道	_	VV	VV	_	3	conj	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 知道-01, arg0, x8 / 我)

Input(Some(Graph((say :arg1 (知道-01 :arg0 我 :polarity -)),ArrayBuffer(Span(3,4,List(0),知道,知道-01,false), Span(1,2,List(1),我,我,false)),Map(1 -> 我, 0 -> 知道-01),Map(x8 -> 我, x6 -> 知道-01))),[Ljava.lang.String;@6ac97b84,Annotation([Ljava.lang.String;@4917d36b,[Ljava.lang.String;@35c09b94,[Ljava.lang.String;@2d0bfb24),Annotation([Ljava.lang.String;@c3fa05a,[Ljava.lang.String;@7b44b63d,[Ledu.cmu.lti.nlp.amr.Dependency;@4a699efa),Annotation([Ljava.lang.String;@38499e48,[Ljava.lang.String;@4905c46b,[Ljava.lang.String;@17ae7628),Annotation([Ljava.lang.String;@1136b469,[Ljava.lang.String;@6579c3d9,[Ledu.cmu.lti.nlp.amr.Entity;@2b87581))
AMR:
(x6 / 知道-01, prep-by, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 2,884 microseconds
Sentence: 不 属于 任何 人 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  任何 => 任何
Oracle Span 3:  属于 => 属于-01
Spans:
Span 3-4:  人 => 人
Span 2-3:  任何 => 任何
Span 1-2:  属于 => 属于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 2-3:  任何 => 任何
Oracle Span 1-2:  属于 => 属于-01

Dependencies:
1	不	_	AD	AD	_	2	neg	_	_
2	属于	_	VV	VV	_	0	root	_	_
3	任何	_	DT	DT	_	4	det	_	_
4	人	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 属于-01, arg1, x9 / 人)
(x9 / 人, mod, x10 / 任何)

Input(Some(Graph((say :arg1 (属于-01 :arg1 (人 :mod 任何) :polarity -)),ArrayBuffer(Span(1,2,List(0),属于,属于-01,false), Span(3,4,List(1),人,人,false), Span(2,3,List(2),任何,任何,false)),Map(2 -> 任何, 1 -> 人, 0 -> 属于-01),Map(x10 -> 任何, x7 -> 属于-01, x9 -> 人))),[Ljava.lang.String;@66434cc8,Annotation([Ljava.lang.String;@42f22995,[Ljava.lang.String;@693e4d19,[Ljava.lang.String;@286b39c2),Annotation([Ljava.lang.String;@5432050b,[Ljava.lang.String;@75f2099,[Ledu.cmu.lti.nlp.amr.Dependency;@1c12f3ee),Annotation([Ljava.lang.String;@6d467c87,[Ljava.lang.String;@29182679,[Ljava.lang.String;@57bd802b),Annotation([Ljava.lang.String;@5cbb84b1,[Ljava.lang.String;@2c779e5,[Ledu.cmu.lti.nlp.amr.Entity;@6a84bc2a))
AMR:
(x7 / 属于-01, direction, x10 / 任何)
(x9 / 人, mod, x10 / 任何)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 4,232 microseconds
Sentence: “ 那么 ， 它们 就 是 我 的 ， 因为 是 我 第一 个 想到 了 这 件 事情 的 。 ”

Oracle Span 1:  事情 => 事情
Oracle Span 2:  它们 => 它们
Oracle Span 3:  想到 => 想到-01
Oracle Span 4:  我 => 我
Oracle Span 5:  这 => 这
Spans:
Span 18-19:  事情 => 事情
Span 3-4:  它们 => 它们
Span 14-15:  想到 => 想到-01
Span 6-7:  我 => 我
Span 16-17:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  事情 => 事情
Oracle Span 3-4:  它们 => 它们
Oracle Span 14-15:  想到 => 想到-01
Oracle Span 6-7:  我 => 我
Oracle Span 16-17:  这 => 这

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	它们	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	我	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	,	_	PU	PU	_	6	punct	_	_
10	因为	_	P	P	_	6	conj	_	_
11	是	_	VC	VC	_	10	pccomp	_	_
12	我	_	PN	PN	_	15	nsubj	_	_
13	第一	_	OD	OD	_	14	ordmod	_	_
14	个	_	M	M	_	15	dep	_	_
15	想到	_	VV	VV	_	11	attr	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	这	_	DT	DT	_	19	det	_	_
18	件	_	M	M	_	17	clf	_	_
19	事情	_	NN	NN	_	15	ccomp	_	_
20	的	_	DEC	DEC	_	15	cpm	_	_
21	。	_	PU	PU	_	6	punct	_	_
22	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x15 / 想到-01, arg0, x16 / 我)
(x15 / 想到-01, arg1, x17 / 事情)
(x17 / 事情, mod, x18 / 这)

Input(Some(Graph((say :arg1 (causation :arg1 (想到-01 :ord (ordinal-entity :value 1) :arg1 (事情 :mod 这) :arg0 我) :arg2 (它们 :poss x16))),ArrayBuffer(Span(14,15,List(0),想到,想到-01,false), Span(18,19,List(1),事情,事情,false), Span(16,17,List(2),这,这,false), Span(6,7,List(3),我,我,false), Span(3,4,List(4),它们,它们,false)),Map(2 -> 这, 1 -> 事情, 4 -> 它们, 0 -> 想到-01, 3 -> 我),Map(x16 -> 我, x21 -> 它们, x15 -> 想到-01, x18 -> 这, x17 -> 事情))),[Ljava.lang.String;@5183d589,Annotation([Ljava.lang.String;@511d5d04,[Ljava.lang.String;@682c1e93,[Ljava.lang.String;@27068a50),Annotation([Ljava.lang.String;@68e62ca4,[Ljava.lang.String;@5328a9c1,[Ledu.cmu.lti.nlp.amr.Dependency;@5b78fdb1),Annotation([Ljava.lang.String;@48bfb884,[Ljava.lang.String;@11653e3b,[Ljava.lang.String;@715fb77),Annotation([Ljava.lang.String;@1b9c1b51,[Ljava.lang.String;@2e52fb3e,[Ledu.cmu.lti.nlp.amr.Entity;@16fe9c29))
AMR:
(x15 / 想到-01, degree, x21 / 它们)
(x15 / 想到-01, duration, x17 / 事情)
(x17 / 事情, mod, x18 / 这)
(x21 / 它们, poss, x16 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 11,045 microseconds
Sentence: “ 这 就 行 了 吗 ？ ”

Oracle Span 1:  就 => 就
Oracle Span 2:  行 => 行-04
Oracle Span 3:  这 => 这
Spans:
Span 2-3:  就 => 就
Span 3-4:  行 => 行-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  行 => 行-04
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	行	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	吗	_	SP	SP	_	4	dep	_	_
7	？	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 行-04, arg0, x9 / 这)
(x7 / 行-04, manner, x8 / 就)

Input(Some(Graph((say :arg1 (行-04 :mode interrogative :arg0 这 :manner 就)),ArrayBuffer(Span(3,4,List(0),行,行-04,false), Span(1,2,List(1),这,这,false), Span(2,3,List(2),就,就,false)),Map(2 -> 就, 1 -> 这, 0 -> 行-04),Map(x8 -> 就, x7 -> 行-04, x9 -> 这))),[Ljava.lang.String;@3e9803c2,Annotation([Ljava.lang.String;@4525d1d3,[Ljava.lang.String;@7c974942,[Ljava.lang.String;@1eea9d2d),Annotation([Ljava.lang.String;@60921b21,[Ljava.lang.String;@bd2f5a9,[Ledu.cmu.lti.nlp.amr.Dependency;@4d4960c8),Annotation([Ljava.lang.String;@7808fb9,[Ljava.lang.String;@773bd77b,[Ljava.lang.String;@6b580b88),Annotation([Ljava.lang.String;@6d91790b,[Ljava.lang.String;@6e6fce47,[Ledu.cmu.lti.nlp.amr.Entity;@47c64cfe))
AMR:
(x7 / 行-04, example, x9 / 这)
(x7 / 行-04, manner, x8 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,550 microseconds
Sentence: “ 那 当然 。

Oracle Span 1:  当然 => 当然
Oracle Span 2:  那 => 那
Spans:
Span 2-3:  当然 => 当然
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  当然 => 当然
Oracle Span 1-2:  那 => 那

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那	_	PN	PN	_	3	nsubj	_	_
3	当然	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 当然, mod, x6 / 那)

Input(Some(Graph((say :arg1 (当然 :mod 那)),ArrayBuffer(Span(2,3,List(0),当然,当然,false), Span(1,2,List(1),那,那,false)),Map(1 -> 那, 0 -> 当然),Map(x5 -> 当然, x6 -> 那))),[Ljava.lang.String;@6ce90bc5,Annotation([Ljava.lang.String;@a567e72,[Ljava.lang.String;@1a5b8489,[Ljava.lang.String;@6f8f8a80),Annotation([Ljava.lang.String;@4b1c0397,[Ljava.lang.String;@72805168,[Ledu.cmu.lti.nlp.amr.Dependency;@34b9fc7d),Annotation([Ljava.lang.String;@27f1bbe0,[Ljava.lang.String;@cda0432,[Ljava.lang.String;@7c211fd0),Annotation([Ljava.lang.String;@7004e3d,[Ljava.lang.String;@2d84cb86,[Ledu.cmu.lti.nlp.amr.Entity;@71a3a190))
AMR:
(x5 / 当然, mod, x6 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,035 microseconds
Sentence: 如果 你 发现 了 一 颗 没有 主人 的 钻石 ， 那么 这 颗 钻石 就 是 属于 你 的 。

Oracle Span 1:  主人 => 主人
Oracle Span 2:  你 => 你
Oracle Span 3:  你 => 你
Oracle Span 4:  发现 => 发现-01
Oracle Span 5:  就 => 就
Oracle Span 6:  属于 => 属于-01
Oracle Span 7:  这 => 这
Oracle Span 8:  钻石 => 钻石
Oracle Span 9:  钻石 => 钻石
Spans:
Span 7-8:  主人 => 主人
Span 1-2:  你 => 你
Span 18-19:  你 => 你
Span 2-3:  发现 => 发现-01
Span 15-16:  就 => 就
Span 17-18:  属于 => 属于-01
Span 12-13:  这 => 这
Span 9-10:  钻石 => 钻石
Span 14-15:  钻石 => 钻石

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  主人 => 主人
Oracle Span 1-2:  你 => 你
Oracle Span 18-19:  你 => 你
Oracle Span 2-3:  发现 => 发现-01
Oracle Span 15-16:  就 => 就
Oracle Span 17-18:  属于 => 属于-01
Oracle Span 12-13:  这 => 这
Oracle Span 9-10:  钻石 => 钻石
Oracle Span 14-15:  钻石 => 钻石

Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	发现	_	VV	VV	_	17	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	10	clf	_	_
7	没有	_	VE	VE	_	10	rcmod	_	_
8	主人	_	NN	NN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	钻石	_	NN	NN	_	3	dobj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	那么	_	AD	AD	_	17	advmod	_	_
13	这	_	DT	DT	_	15	det	_	_
14	颗	_	M	M	_	13	clf	_	_
15	钻石	_	NN	NN	_	17	nsubj	_	_
16	就	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	0	root	_	_
18	属于	_	VV	VV	_	17	attr	_	_
19	你	_	PN	PN	_	18	dobj	_	_
20	的	_	DEC	DEC	_	18	cpm	_	_
21	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x2 / 发现-01, arg0, x3 / 你)
(x2 / 发现-01, arg1, x4 / 钻石)
(x8 / 属于-01, arg0, x9 / 钻石)
(x8 / 属于-01, arg1, x11 / 你)
(x8 / 属于-01, manner, x14 / 就)
(x9 / 钻石, mod, x10 / 这)

Input(Some(Graph((condition :arg1 (发现-01 :arg1 (钻石 :quant 1 :arg0-of (有-01 :polarity - :arg1 主人)) :arg0 你) :arg2 (属于-01 :manner 就 :arg1 你 :arg0 (钻石 :mod 这))),ArrayBuffer(Span(2,3,List(0),发现,发现-01,false), Span(9,10,List(1),钻石,钻石,false), Span(7,8,List(2),主人,主人,false), Span(1,2,List(3),你,你,false), Span(17,18,List(4),属于,属于-01,false), Span(15,16,List(5),就,就,false), Span(18,19,List(6),你,你,false), Span(14,15,List(7),钻石,钻石,false), Span(12,13,List(8),这,这,false)),Map(2 -> 主人, 5 -> 就, 8 -> 这, 7 -> 钻石, 1 -> 钻石, 4 -> 属于-01, 6 -> 你, 0 -> 发现-01, 3 -> 你),Map(x10 -> 这, x2 -> 发现-01, x8 -> 属于-01, x4 -> 钻石, x11 -> 你, x3 -> 你, x14 -> 就, x9 -> 钻石, x17 -> 主人))),[Ljava.lang.String;@588ffeb,Annotation([Ljava.lang.String;@7c28c1,[Ljava.lang.String;@baf1bb3,[Ljava.lang.String;@67ec8477),Annotation([Ljava.lang.String;@25d958c6,[Ljava.lang.String;@4482469c,[Ledu.cmu.lti.nlp.amr.Dependency;@3703bf3c),Annotation([Ljava.lang.String;@34cf5a97,[Ljava.lang.String;@5b3f3ba0,[Ljava.lang.String;@ddf20fd),Annotation([Ljava.lang.String;@278f8425,[Ljava.lang.String;@695a69a1,[Ledu.cmu.lti.nlp.amr.Entity;@4b1abd11))
AMR:
(x2 / 发现-01, compared-to, x3 / 你)
(x2 / 发现-01, degree, x8 / 属于-01)
(x2 / 发现-01, prep-from, x4 / 钻石)
(x4 / 钻石, ARG4, x17 / 主人)
(x8 / 属于-01, dayperiod, x11 / 你)
(x8 / 属于-01, manner, x14 / 就)
(x8 / 属于-01, time, x9 / 钻石)
(x9 / 钻石, mod, x10 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 32,247 microseconds
Sentence: 当 你 发现 一 个 岛 是 没有 主 的 ， 那么 这个 岛 就 是 你 的 。

Oracle Span 1:  主 => 主
Oracle Span 2:  你 => 你
Oracle Span 3:  发现 => 发现-01
Oracle Span 4:  就 => 就
Oracle Span 5:  岛 => 岛
Oracle Span 6:  岛 => 岛
Spans:
Span 8-9:  主 => 主
Span 1-2:  你 => 你
Span 2-3:  发现 => 发现-01
Span 14-15:  就 => 就
Span 5-6:  岛 => 岛
Span 13-14:  岛 => 岛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  主 => 主
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  发现 => 发现-01
Oracle Span 14-15:  就 => 就
Oracle Span 5-6:  岛 => 岛
Oracle Span 13-14:  岛 => 岛

Dependencies:
1	当	_	P	P	_	3	prep	_	_
2	你	_	PN	PN	_	1	pobj	_	_
3	发现	_	VV	VV	_	7	conj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	岛	_	NN	NN	_	3	dobj	_	_
7	是	_	VC	VC	_	0	root	_	_
8	没有	_	VE	VE	_	7	attr	_	_
9	主	_	NN	NN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	,	_	PU	PU	_	7	punct	_	_
12	那么	_	AD	AD	_	16	advmod	_	_
13	这个	_	NN	NN	_	14	nn	_	_
14	岛	_	NN	NN	_	16	nsubj	_	_
15	就	_	AD	AD	_	16	advmod	_	_
16	是	_	VC	VC	_	7	dep	_	_
17	你	_	PN	PN	_	16	attr	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	。	_	PU	PU	_	7	punct	_	_
20	发现	_	VV	VV	_	7	top	_	_

Oracle:
(x15 / 岛, manner, x17 / 就)
(x2 / 发现-01, arg0, x3 / 你)
(x2 / 发现-01, arg1, x4 / 岛)

Input(Some(Graph((condition :arg1 (发现-01 :arg1 (岛 :quant 1 :arg0-of (有-01 :polarity - :arg1 主)) :arg0 你) :arg2 (岛 :poss x3 :manner 就 :mod 这)),ArrayBuffer(Span(2,3,List(0),发现,发现-01,false), Span(5,6,List(1),岛,岛,false), Span(8,9,List(2),主,主,false), Span(1,2,List(3),你,你,false), Span(13,14,List(4),岛,岛,false), Span(14,15,List(5),就,就,false)),Map(2 -> 主, 5 -> 就, 1 -> 岛, 4 -> 岛, 0 -> 发现-01, 3 -> 你),Map(x2 -> 发现-01, x15 -> 岛, x4 -> 岛, x3 -> 你, x14 -> 主, x17 -> 就))),[Ljava.lang.String;@3f36b447,Annotation([Ljava.lang.String;@6443b128,[Ljava.lang.String;@5eeedb60,[Ljava.lang.String;@40021799),Annotation([Ljava.lang.String;@4a1c0752,[Ljava.lang.String;@332f25c8,[Ledu.cmu.lti.nlp.amr.Dependency;@1b32cd16),Annotation([Ljava.lang.String;@4bdcaf36,[Ljava.lang.String;@61d01788,[Ljava.lang.String;@2b9b7f1f),Annotation([Ljava.lang.String;@264c5d07,[Ljava.lang.String;@847f3e7,[Ledu.cmu.lti.nlp.amr.Entity;@69cac930))
AMR:
(x14 / 主, time, x4 / 岛)
(x15 / 岛, manner, x17 / 就)
(x15 / 岛, poss, x14 / 主)
(x2 / 发现-01, age, x4 / 岛)
(x2 / 发现-01, poss, x3 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 13,781 microseconds
Sentence: 当 你 首先 想出 了 一 个 办法 ， 你 就 去 领 一 个 专利证 ， 这个 办法 就 是 属于 你 的 。

Oracle Span 1:  专利证 => 专利证
Oracle Span 2:  你 => 你
Oracle Span 3:  办法 => 办法
Oracle Span 4:  属于 => 属于-01
Oracle Span 5:  想出 => 想出-01
Oracle Span 6:  领 => 领-01
Oracle Span 7:  首先 => 首先
Spans:
Span 15-16:  专利证 => 专利证
Span 1-2:  你 => 你
Span 7-8:  办法 => 办法
Span 21-22:  属于 => 属于-01
Span 3-4:  想出 => 想出-01
Span 12-13:  领 => 领-01
Span 2-3:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  专利证 => 专利证
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  办法 => 办法
Oracle Span 21-22:  属于 => 属于-01
Oracle Span 3-4:  想出 => 想出-01
Oracle Span 12-13:  领 => 领-01
Oracle Span 2-3:  首先 => 首先

Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	首先	_	AD	AD	_	4	advmod	_	_
4	想出	_	VV	VV	_	1	pccomp	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	8	clf	_	_
8	办法	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	你	_	PN	PN	_	13	nsubj	_	_
11	就	_	AD	AD	_	13	advmod	_	_
12	去	_	MSP	MSP	_	13	prtmod	_	_
13	领	_	VV	VV	_	0	root	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	个	_	M	M	_	16	clf	_	_
16	专利证	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_
18	这个	_	NN	NN	_	19	nn	_	_
19	办法	_	NN	NN	_	21	nsubj	_	_
20	就	_	AD	AD	_	21	advmod	_	_
21	是	_	VC	VC	_	13	conj	_	_
22	属于	_	VV	VV	_	21	attr	_	_
23	你	_	PN	PN	_	22	dobj	_	_
24	的	_	DEC	DEC	_	22	cpm	_	_
25	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x21 / 想出-01, arg0, x22 / 你)
(x21 / 想出-01, arg1, x23 / 办法)
(x21 / 想出-01, manner, x25 / 首先)
(x28 / 领-01, arg1, x30 / 专利证)

Input(Some(Graph((condition :arg1 (condition :arg1 (想出-01 :manner 首先 :arg1 (办法 :quant 1) :arg0 你) :arg2 (领-01 :arg1 (专利证 :quant 1) :arg0 x22)) :arg2 (属于-01 :arg1 x22 :arg0 x23)),ArrayBuffer(Span(3,4,List(0),想出,想出-01,false), Span(2,3,List(1),首先,首先,false), Span(7,8,List(2),办法,办法,false), Span(1,2,List(3),你,你,false), Span(12,13,List(4),领,领-01,false), Span(15,16,List(5),专利证,专利证,false), Span(21,22,List(6),属于,属于-01,false)),Map(2 -> 办法, 5 -> 专利证, 1 -> 首先, 4 -> 领-01, 6 -> 属于-01, 0 -> 想出-01, 3 -> 你),Map(x28 -> 领-01, x22 -> 你, x25 -> 首先, x30 -> 专利证, x21 -> 想出-01, x23 -> 办法, x32 -> 属于-01))),[Ljava.lang.String;@19593091,Annotation([Ljava.lang.String;@5d39f2d8,[Ljava.lang.String;@6ad6fa53,[Ljava.lang.String;@55ea2d70),Annotation([Ljava.lang.String;@5e742e4,[Ljava.lang.String;@175acfb2,[Ledu.cmu.lti.nlp.amr.Dependency;@4a03bb68),Annotation([Ljava.lang.String;@4e868ef5,[Ljava.lang.String;@71c905a3,[Ljava.lang.String;@30af7377),Annotation([Ljava.lang.String;@67a056f1,[Ljava.lang.String;@1dab9dd6,[Ledu.cmu.lti.nlp.amr.Entity;@247667dd))
AMR:
(x21 / 想出-01, manner, x25 / 首先)
(x21 / 想出-01, mode, x22 / 你)
(x21 / 想出-01, prep-for, x23 / 办法)
(x23 / 办法, domain, x30 / 专利证)
(x30 / 专利证, mod, x28 / 领-01)
(x32 / 属于-01, time, x28 / 领-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.1
Decoded in 24,689 microseconds
Sentence: 既然 在 我 之前 不 曾 有 任何 人 想到 要 占有 这些 星星 ， 那 我 就 占有 这些 星星 。 ”

Oracle Span 1:  之前 => 之前
Oracle Span 2:  人 => 人
Oracle Span 3:  任何 => 任何
Oracle Span 4:  占有 => 占有-01
Oracle Span 5:  占有 => 占有-01
Oracle Span 6:  就 => 就
Oracle Span 7:  想到 => 想到-01
Oracle Span 8:  我 => 我
Oracle Span 9:  星星 => 星星
Oracle Span 10:  星星 => 星星
Oracle Span 11:  有 => 有-04
Oracle Span 12:  要 => 要-03
Oracle Span 13:  这些 => 这些
Oracle Span 14:  这些 => 这些
Spans:
Span 3-4:  之前 => 之前
Span 8-9:  人 => 人
Span 7-8:  任何 => 任何
Span 11-12:  占有 => 占有-01
Span 18-19:  占有 => 占有-01
Span 17-18:  就 => 就
Span 9-10:  想到 => 想到-01
Span 2-3:  我 => 我
Span 13-14:  星星 => 星星
Span 20-21:  星星 => 星星
Span 6-7:  有 => 有-04
Span 10-11:  要 => 要-03
Span 12-13:  这些 => 这些
Span 19-20:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  之前 => 之前
Oracle Span 8-9:  人 => 人
Oracle Span 7-8:  任何 => 任何
Oracle Span 11-12:  占有 => 占有-01
Oracle Span 18-19:  占有 => 占有-01
Oracle Span 17-18:  就 => 就
Oracle Span 9-10:  想到 => 想到-01
Oracle Span 2-3:  我 => 我
Oracle Span 13-14:  星星 => 星星
Oracle Span 20-21:  星星 => 星星
Oracle Span 6-7:  有 => 有-04
Oracle Span 10-11:  要 => 要-03
Oracle Span 12-13:  这些 => 这些
Oracle Span 19-20:  这些 => 这些

Dependencies:
1	既然	_	CS	CS	_	7	advmod	_	_
2	在	_	P	P	_	7	prep	_	_
3	我	_	PN	PN	_	4	lobj	_	_
4	之前	_	LC	LC	_	2	plmod	_	_
5	不	_	AD	AD	_	7	neg	_	_
6	曾	_	AD	AD	_	7	advmod	_	_
7	有	_	VE	VE	_	0	root	_	_
8	任何	_	DT	DT	_	9	det	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	想到	_	VV	VV	_	7	dep	_	_
11	要	_	VV	VV	_	12	mmod	_	_
12	占有	_	VV	VV	_	10	ccomp	_	_
13	这些	_	DT	DT	_	14	det	_	_
14	星星	_	NN	NN	_	12	dobj	_	_
15	,	_	PU	PU	_	12	punct	_	_
16	那	_	AD	AD	_	19	advmod	_	_
17	我	_	PN	PN	_	19	nsubj	_	_
18	就	_	AD	AD	_	19	advmod	_	_
19	占有	_	VV	VV	_	12	dep	_	_
20	这些	_	DT	DT	_	21	det	_	_
21	星星	_	NN	NN	_	19	dobj	_	_
22	。	_	PU	PU	_	7	punct	_	_
23	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x27 / 有-04, arg0, x30 / 想到-01)
(x27 / 有-04, time, x38 / 之前)
(x30 / 想到-01, arg0, x31 / 人)
(x30 / 想到-01, arg1, x33 / 要-03)
(x31 / 人, mod, x32 / 任何)
(x33 / 要-03, arg0, x34 / 占有-01)
(x34 / 占有-01, arg1, x36 / 星星)
(x36 / 星星, mod, x37 / 这些)
(x38 / 之前, mod, x39 / 我)
(x40 / 占有-01, arg1, x43 / 星星)
(x40 / 占有-01, manner, x42 / 就)
(x43 / 星星, mod, x44 / 这些)

Input(Some(Graph((say :arg1 (causation :arg1 (有-04 :time (之前 :mod 我) :arg0 (想到-01 :arg1 (要-03 :arg0 (占有-01 :arg1 (星星 :mod 这些) :arg0 x31)) :arg0 (人 :mod 任何)) :polarity -) :arg2 (占有-01 :arg1 (星星 :mod 这些) :manner 就 :arg0 x39))),ArrayBuffer(Span(6,7,List(0),有,有-04,false), Span(3,4,List(1),之前,之前,false), Span(2,3,List(2),我,我,false), Span(9,10,List(3),想到,想到-01,false), Span(10,11,List(4),要,要-03,false), Span(11,12,List(5),占有,占有-01,false), Span(13,14,List(6),星星,星星,false), Span(12,13,List(7),这些,这些,false), Span(8,9,List(8),人,人,false), Span(7,8,List(9),任何,任何,false), Span(18,19,List(10),占有,占有-01,false), Span(20,21,List(11),星星,星星,false), Span(19,20,List(12),这些,这些,false), Span(17,18,List(13),就,就,false)),Map(2 -> 我, 5 -> 占有-01, 12 -> 这些, 8 -> 人, 7 -> 这些, 1 -> 之前, 4 -> 要-03, 11 -> 星星, 6 -> 星星, 9 -> 任何, 0 -> 有-04, 10 -> 占有-01, 3 -> 想到-01, 13 -> 就),Map(x34 -> 占有-01, x40 -> 占有-01, x43 -> 星星, x37 -> 这些, x31 -> 人, x39 -> 我, x30 -> 想到-01, x33 -> 要-03, x27 -> 有-04, x42 -> 就, x36 -> 星星, x44 -> 这些, x38 -> 之前, x32 -> 任何))),[Ljava.lang.String;@6f099cef,Annotation([Ljava.lang.String;@afb5821,[Ljava.lang.String;@4bff2185,[Ljava.lang.String;@5c20ffa8),Annotation([Ljava.lang.String;@7fedfe27,[Ljava.lang.String;@2f879bab,[Ledu.cmu.lti.nlp.amr.Dependency;@1d4664d7),Annotation([Ljava.lang.String;@46c00568,[Ljava.lang.String;@56ccd751,[Ljava.lang.String;@458544e0),Annotation([Ljava.lang.String;@6bcbf05b,[Ljava.lang.String;@2d66530f,[Ledu.cmu.lti.nlp.amr.Entity;@1d207fad))
AMR:
(x27 / 有-04, prep-as, x32 / 任何)
(x27 / 有-04, time, x38 / 之前)
(x31 / 人, mod, x32 / 任何)
(x31 / 人, prep-as, x30 / 想到-01)
(x33 / 要-03, prep-on-behalf, x34 / 占有-01)
(x33 / 要-03, year, x30 / 想到-01)
(x34 / 占有-01, prep-as, x36 / 星星)
(x36 / 星星, mod, x37 / 这些)
(x38 / 之前, mod, x39 / 我)
(x40 / 占有-01, manner, x42 / 就)
(x40 / 占有-01, prep-as, x43 / 星星)
(x43 / 星星, mod, x37 / 这些)
(x43 / 星星, mod, x44 / 这些)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 53,710 microseconds
Sentence: “ 这 倒 也 是 。 ” 小 王子 说 。

Oracle Span 1:  也 => 也
Oracle Span 2:  小 => 小-01
Oracle Span 3:  是 => 是-03
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Oracle Span 6:  这 => 这
Spans:
Span 3-4:  也 => 也
Span 7-8:  小 => 小-01
Span 4-5:  是 => 是-03
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 7-8:  小 => 小-01
Oracle Span 4-5:  是 => 是-03
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	倒	_	VV	VV	_	10	dep	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	3	dobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 是-03)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 是-03, arg0, x6 / 这)
(x4 / 是-03, manner, x5 / 也)

Input(Some(Graph((说-01 :arg1 (是-03 :arg0 这 :manner 也) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(4,5,List(1),是,是-03,false), Span(1,2,List(2),这,这,false), Span(3,4,List(3),也,也,false), Span(8,9,List(4),王子,王子,false), Span(7,8,List(5),小,小-01,false)),Map(2 -> 这, 5 -> 小-01, 1 -> 是-03, 4 -> 王子, 0 -> 说-01, 3 -> 也),Map(x2 -> 王子, x5 -> 也, x4 -> 是-03, x3 -> 小-01, x6 -> 这, x0 -> 说-01))),[Ljava.lang.String;@72ed9aad,Annotation([Ljava.lang.String;@4690f583,[Ljava.lang.String;@59712875,[Ljava.lang.String;@47b2e9e1),Annotation([Ljava.lang.String;@59942b48,[Ljava.lang.String;@1869f114,[Ledu.cmu.lti.nlp.amr.Dependency;@488b50ec),Annotation([Ljava.lang.String;@18a645fd,[Ljava.lang.String;@6090f3ca,[Ljava.lang.String;@37a64f9d),Annotation([Ljava.lang.String;@25b865b5,[Ljava.lang.String;@f9b5552,[Ledu.cmu.lti.nlp.amr.Entity;@6872f9c8))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x4 / 是-03)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 是-03, manner, x5 / 也)
(x4 / 是-03, unit, x6 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,276 microseconds
Sentence: “ 可是 你 用 它们 来 干 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  它们 => 它们
Oracle Span 3:  用 => 用-01
Spans:
Span 2-3:  你 => 你
Span 4-5:  它们 => 它们
Span 3-4:  用 => 用-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  它们 => 它们
Oracle Span 3-4:  用 => 用-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	可是	_	AD	AD	_	7	advmod	_	_
3	你	_	PN	PN	_	7	nsubj	_	_
4	用	_	P	P	_	7	prep	_	_
5	它们	_	PN	PN	_	4	pobj	_	_
6	来	_	MSP	MSP	_	7	prtmod	_	_
7	干	_	VV	VV	_	0	root	_	_
8	什么	_	PN	PN	_	7	dobj	_	_
9	？	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x16 / 用-01, arg0, x17 / 你)
(x16 / 用-01, arg1, x18 / 它们)

Input(Some(Graph((say :arg1 (contrast :arg2 (用-01 :mode interrogative :arg2 amr-unknown :arg1 它们 :arg0 你))),ArrayBuffer(Span(3,4,List(0),用,用-01,false), Span(4,5,List(1),它们,它们,false), Span(2,3,List(2),你,你,false)),Map(2 -> 你, 1 -> 它们, 0 -> 用-01),Map(x16 -> 用-01, x18 -> 它们, x17 -> 你))),[Ljava.lang.String;@6d2d99fc,Annotation([Ljava.lang.String;@bdecc21,[Ljava.lang.String;@5e3a39cd,[Ljava.lang.String;@21f9277b),Annotation([Ljava.lang.String;@201aa8c1,[Ljava.lang.String;@5d58c727,[Ledu.cmu.lti.nlp.amr.Dependency;@52a36910),Annotation([Ljava.lang.String;@3a095ec0,[Ljava.lang.String;@4f20a5e0,[Ljava.lang.String;@54da32dc),Annotation([Ljava.lang.String;@1d782abe,[Ljava.lang.String;@6df7988f,[Ledu.cmu.lti.nlp.amr.Entity;@27b22f74))
AMR:
(x16 / 用-01, direction, x17 / 你)
(x16 / 用-01, direction, x18 / 它们)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 5,511 microseconds
Sentence: “ 我 经营 管理 这些 星星 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  星星 => 星星
Oracle Span 3:  管理 => 管理-01
Oracle Span 4:  经营 => 经营-01
Oracle Span 5:  这些 => 这些
Spans:
Span 1-2:  我 => 我
Span 5-6:  星星 => 星星
Span 3-4:  管理 => 管理-01
Span 2-3:  经营 => 经营-01
Span 4-5:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  管理 => 管理-01
Oracle Span 2-3:  经营 => 经营-01
Oracle Span 4-5:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	经营	_	VV	VV	_	0	root	_	_
4	管理	_	NN	NN	_	6	nn	_	_
5	这些	_	DT	DT	_	6	det	_	_
6	星星	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x19 / 经营-01, arg0, x20 / 我)
(x19 / 经营-01, arg1, x21 / 星星)
(x21 / 星星, mod, x22 / 这些)

Input(Some(Graph((say :arg1 (and :op (经营-01 :arg1 (星星 :mod 这些) :arg0 我) :op (管理-01 :arg1 x21 :arg0 x20))),ArrayBuffer(Span(2,3,List(0),经营,经营-01,false), Span(5,6,List(1),星星,星星,false), Span(4,5,List(2),这些,这些,false), Span(1,2,List(3),我,我,false), Span(3,4,List(4),管理,管理-01,false)),Map(2 -> 这些, 1 -> 星星, 4 -> 管理-01, 0 -> 经营-01, 3 -> 我),Map(x22 -> 这些, x19 -> 经营-01, x21 -> 星星, x23 -> 管理-01, x20 -> 我))),[Ljava.lang.String;@22fba58c,Annotation([Ljava.lang.String;@7e8a46b7,[Ljava.lang.String;@2fe88a09,[Ljava.lang.String;@1917d90f),Annotation([Ljava.lang.String;@66bfd864,[Ljava.lang.String;@4aac85fa,[Ledu.cmu.lti.nlp.amr.Dependency;@21fff664),Annotation([Ljava.lang.String;@6079cf5,[Ljava.lang.String;@1e6308a9,[Ljava.lang.String;@30cecdca),Annotation([Ljava.lang.String;@6edc4161,[Ljava.lang.String;@5486887b,[Ledu.cmu.lti.nlp.amr.Entity;@5226e402))
AMR:
(x19 / 经营-01, beneficiary, x20 / 我)
(x19 / 经营-01, location, x21 / 星星)
(x19 / 经营-01, purpose, x23 / 管理-01)
(x21 / 星星, mod, x22 / 这些)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 9,856 microseconds
Sentence: 我 一 遍 又 一 遍 地 计算 它们 的 数目 。

Oracle Span 1:  又 => 又
Oracle Span 2:  它们 => 它们
Oracle Span 3:  我 => 我
Oracle Span 4:  数目 => 数目
Oracle Span 5:  计算 => 计算-01
Spans:
Span 3-4:  又 => 又
Span 8-9:  它们 => 它们
Span 0-1:  我 => 我
Span 10-11:  数目 => 数目
Span 7-8:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 8-9:  它们 => 它们
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  数目 => 数目
Oracle Span 7-8:  计算 => 计算-01

Dependencies:
1	我	_	PN	PN	_	8	nsubj	_	_
2	一	_	AD	AD	_	3	advmod	_	_
3	遍	_	VV	VV	_	8	dvpmod	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	遍	_	NN	NN	_	3	dobj	_	_
7	地	_	DEV	DEV	_	3	dvpm	_	_
8	计算	_	VV	VV	_	0	root	_	_
9	它们	_	PN	PN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	数目	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 计算-01, arg0, x2 / 我)
(x0 / 计算-01, arg1, x3 / 数目)
(x0 / 计算-01, manner, x6 / 又)
(x3 / 数目, poss, x4 / 它们)

Input(Some(Graph((计算-01 :manner 一遍 :manner 又 :manner 一遍 :arg1 (数目 :poss 它们) :arg0 我),ArrayBuffer(Span(7,8,List(0),计算,计算-01,false), Span(3,4,List(1),又,又,false), Span(10,11,List(2),数目,数目,false), Span(8,9,List(3),它们,它们,false), Span(0,1,List(4),我,我,false)),Map(2 -> 数目, 1 -> 又, 4 -> 我, 0 -> 计算-01, 3 -> 它们),Map(x2 -> 我, x4 -> 它们, x3 -> 数目, x6 -> 又, x0 -> 计算-01))),[Ljava.lang.String;@1440c311,Annotation([Ljava.lang.String;@189b5fb1,[Ljava.lang.String;@783ec989,[Ljava.lang.String;@1ddd3478),Annotation([Ljava.lang.String;@f973499,[Ljava.lang.String;@4d33940d,[Ledu.cmu.lti.nlp.amr.Dependency;@43cf6ea3),Annotation([Ljava.lang.String;@37c5fc56,[Ljava.lang.String;@1c025cb,[Ljava.lang.String;@50825a02),Annotation([Ljava.lang.String;@68809cc7,[Ljava.lang.String;@703feacd,[Ledu.cmu.lti.nlp.amr.Entity;@7051777c))
AMR:
(x0 / 计算-01, manner, x6 / 又)
(x0 / 计算-01, prep-through, x2 / 我)
(x0 / 计算-01, snt3, x3 / 数目)
(x3 / 数目, poss, x4 / 它们)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,352 microseconds
Sentence: 这 是 一 件 困难 的 事 。

Oracle Span 1:  事 => 事
Oracle Span 2:  困难 => 困难-01
Oracle Span 3:  这 => 这
Spans:
Span 6-7:  事 => 事
Span 4-5:  困难 => 困难-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  事 => 事
Oracle Span 4-5:  困难 => 困难-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	件	_	M	M	_	7	clf	_	_
5	困难	_	VA	VA	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	事	_	NN	NN	_	2	attr	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 事, domain, x4 / 这)
(x0 / 事, mod, x3 / 困难-01)

Input(Some(Graph((事 :quant 1 :domain 这 :mod 困难-01),ArrayBuffer(Span(6,7,List(0),事,事,false), Span(0,1,List(1),这,这,false), Span(4,5,List(2),困难,困难-01,false)),Map(2 -> 困难-01, 1 -> 这, 0 -> 事),Map(x4 -> 这, x3 -> 困难-01, x0 -> 事))),[Ljava.lang.String;@3241713e,Annotation([Ljava.lang.String;@5ecba515,[Ljava.lang.String;@512d4583,[Ljava.lang.String;@2abc224d),Annotation([Ljava.lang.String;@13cd7ea5,[Ljava.lang.String;@102d92c4,[Ledu.cmu.lti.nlp.amr.Dependency;@2b97cc1f),Annotation([Ljava.lang.String;@60723d6a,[Ljava.lang.String;@18324f97,[Ljava.lang.String;@64f555e7),Annotation([Ljava.lang.String;@71178a52,[Ljava.lang.String;@ff6077,[Ledu.cmu.lti.nlp.amr.Entity;@abbc908))
AMR:
(x0 / 事, domain, x4 / 这)
(x0 / 事, mod, x3 / 困难-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,234 microseconds
Sentence: 但 我 是 一 个 严肃 认真 的 人 ！ ”

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  人 => 人
Oracle Span 3:  我 => 我
Oracle Span 4:  认真 => 认真-01
Spans:
Span 5-6:  严肃 => 严肃-01
Span 8-9:  人 => 人
Span 1-2:  我 => 我
Span 6-7:  认真 => 认真-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  严肃 => 严肃-01
Oracle Span 8-9:  人 => 人
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  认真 => 认真-01

Dependencies:
1	但	_	AD	AD	_	3	advmod	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	9	clf	_	_
6	严肃	_	JJ	JJ	_	9	assmod	_	_
7	认真	_	JJ	JJ	_	6	dep	_	_
8	的	_	DEG	DEG	_	6	assm	_	_
9	人	_	NN	NN	_	3	attr	_	_
10	！	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 人, domain, x15 / 我)
(x11 / 人, mod, x12 / 认真-01)
(x11 / 人, mod, x13 / 严肃-01)

Input(Some(Graph((say :arg1 (contrast :arg2 (人 :mode expressive :domain 我 :quant 1 :mod 严肃-01 :mod 认真-01))),ArrayBuffer(Span(8,9,List(0),人,人,false), Span(1,2,List(1),我,我,false), Span(5,6,List(2),严肃,严肃-01,false), Span(6,7,List(3),认真,认真-01,false)),Map(2 -> 严肃-01, 1 -> 我, 0 -> 人, 3 -> 认真-01),Map(x13 -> 严肃-01, x12 -> 认真-01, x15 -> 我, x11 -> 人))),[Ljava.lang.String;@44afefd5,Annotation([Ljava.lang.String;@9a7a808,[Ljava.lang.String;@72209d93,[Ljava.lang.String;@2687f956),Annotation([Ljava.lang.String;@1ded7b14,[Ljava.lang.String;@29be7749,[Ledu.cmu.lti.nlp.amr.Dependency;@5f84abe8),Annotation([Ljava.lang.String;@4650a407,[Ljava.lang.String;@30135202,[Ljava.lang.String;@6a4d7f76),Annotation([Ljava.lang.String;@10ec523c,[Ljava.lang.String;@53dfacba,[Ledu.cmu.lti.nlp.amr.Entity;@79767781))
AMR:
(x11 / 人, domain, x15 / 我)
(x11 / 人, mod, x12 / 认真-01)
(x12 / 认真-01, prep-on-behalf, x13 / 严肃-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,487 microseconds
Sentence: 小 王子 仍然 还 不 满足 ，

Oracle Span 1:  仍然 => 仍然
Oracle Span 2:  小 => 小-01
Oracle Span 3:  满足 => 满足-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  还 => 还
Spans:
Span 2-3:  仍然 => 仍然
Span 0-1:  小 => 小-01
Span 5-6:  满足 => 满足-01
Span 1-2:  王子 => 王子
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  满足 => 满足-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  还 => 还

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	仍然	_	AD	AD	_	6	advmod	_	_
4	还	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	满足	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 满足-01, arg0, x5 / 王子)
(x0 / 满足-01, manner, x3 / 还)
(x0 / 满足-01, manner, x4 / 仍然)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph((满足-01 :arg0 (王子 :mod 小-01) :manner 仍然 :manner 还 :polarity -),ArrayBuffer(Span(5,6,List(0),满足,满足-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false), Span(2,3,List(3),仍然,仍然,false), Span(3,4,List(4),还,还,false)),Map(2 -> 小-01, 1 -> 王子, 4 -> 还, 0 -> 满足-01, 3 -> 仍然),Map(x5 -> 王子, x4 -> 仍然, x3 -> 还, x6 -> 小-01, x0 -> 满足-01))),[Ljava.lang.String;@78411116,Annotation([Ljava.lang.String;@aced190,[Ljava.lang.String;@245a060f,[Ljava.lang.String;@6edaa77a),Annotation([Ljava.lang.String;@1e63d216,[Ljava.lang.String;@62ddd21b,[Ledu.cmu.lti.nlp.amr.Dependency;@16c3ca31),Annotation([Ljava.lang.String;@2d195ee4,[Ljava.lang.String;@2d6aca33,[Ljava.lang.String;@21ab988f),Annotation([Ljava.lang.String;@29314cc9,[Ljava.lang.String;@4e38d975,[Ledu.cmu.lti.nlp.amr.Entity;@35f8a9d3))
AMR:
(x0 / 满足-01, manner, x3 / 还)
(x0 / 满足-01, manner, x4 / 仍然)
(x0 / 满足-01, prep-on-behalf, x5 / 王子)
(x5 / 王子, mod, x6 / 小-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 8,408 microseconds
Sentence: 他 说 ： “ 对 我 来说 ， 如果 我 有 一 条 围巾 ， 我 可以 用 它 来 围 着 我 的 脖子 ， 并且 能 带走 它 。

Oracle Span 1:  他 => 他
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  围 => 围-01
Oracle Span 4:  围巾 => 围巾
Oracle Span 5:  它 => 它
Oracle Span 6:  带走 => 带走-01
Oracle Span 7:  我 => 我
Oracle Span 8:  有 => 有-01
Oracle Span 9:  来说 => 来说-01
Oracle Span 10:  用 => 用-01
Oracle Span 11:  能 => 能-01
Oracle Span 12:  脖子 => 脖子
Oracle Span 13:  说 => 说-01
Spans:
Span 0-1:  他 => 他
Span 16-17:  可以 => 可以-01
Span 20-21:  围 => 围-01
Span 13-14:  围巾 => 围巾
Span 18-19:  它 => 它
Span 28-29:  带走 => 带走-01
Span 5-6:  我 => 我
Span 10-11:  有 => 有-01
Span 6-7:  来说 => 来说-01
Span 17-18:  用 => 用-01
Span 27-28:  能 => 能-01
Span 24-25:  脖子 => 脖子
Span 1-2:  说 => 说-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 16-17:  可以 => 可以-01
Oracle Span 20-21:  围 => 围-01
Oracle Span 13-14:  围巾 => 围巾
Oracle Span 18-19:  它 => 它
Oracle Span 28-29:  带走 => 带走-01
Oracle Span 5-6:  我 => 我
Oracle Span 10-11:  有 => 有-01
Oracle Span 6-7:  来说 => 来说-01
Oracle Span 17-18:  用 => 用-01
Oracle Span 27-28:  能 => 能-01
Oracle Span 24-25:  脖子 => 脖子
Oracle Span 1-2:  说 => 说-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	对	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	来说	_	VV	VV	_	2	ccomp	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	如果	_	CS	CS	_	11	advmod	_	_
10	我	_	PN	PN	_	11	top	_	_
11	有	_	VE	VE	_	21	pccomp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	条	_	M	M	_	14	clf	_	_
14	围巾	_	NN	NN	_	11	dobj	_	_
15	,	_	PU	PU	_	21	punct	_	_
16	我	_	PN	PN	_	21	nsubj	_	_
17	可以	_	VV	VV	_	21	mmod	_	_
18	用	_	P	P	_	21	prep	_	_
19	它	_	PN	PN	_	18	pobj	_	_
20	来	_	MSP	MSP	_	21	prtmod	_	_
21	围	_	VV	VV	_	7	ccomp	_	_
22	着	_	AS	AS	_	21	asp	_	_
23	我	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	脖子	_	NN	NN	_	21	dobj	_	_
26	,	_	PU	PU	_	7	punct	_	_
27	并且	_	CC	CC	_	7	cc	_	_
28	能	_	VV	VV	_	29	mmod	_	_
29	带走	_	VV	VV	_	7	dep	_	_
30	它	_	PN	PN	_	29	dobj	_	_
31	。	_	PU	PU	_	2	punct	_	_
32	他	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 来说-01)
(x17 / 可以-01, arg0, x18 / 用-01)
(x18 / 用-01, arg1, x20 / 它)
(x18 / 用-01, arg2, x21 / 围-01)
(x21 / 围-01, arg1, x22 / 脖子)
(x24 / 能-01, arg0, x25 / 带走-01)
(x3 / 来说-01, arg1, x4 / 我)
(x6 / 有-01, arg1, x8 / 围巾)

Input(Some(Graph((说-01 :arg1 (来说-01 :arg2 (condition :arg1 (有-01 :arg0 x4 :arg1 (围巾 :quant 1)) :arg2 (and :op (可以-01 :arg0 (用-01 :arg2 (围-01 :arg1 (脖子 :part-of x4)) :arg1 它 :arg0 x4)) :op (能-01 :arg0 (带走-01 :arg1 x20)))) :arg1 我) :arg0 他),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(6,7,List(1),来说,来说-01,false), Span(10,11,List(2),有,有-01,false), Span(13,14,List(3),围巾,围巾,false), Span(16,17,List(4),可以,可以-01,false), Span(17,18,List(5),用,用-01,false), Span(20,21,List(6),围,围-01,false), Span(24,25,List(7),脖子,脖子,false), Span(18,19,List(8),它,它,false), Span(27,28,List(9),能,能-01,false), Span(28,29,List(10),带走,带走-01,false), Span(5,6,List(11),我,我,false), Span(0,1,List(12),他,他,false)),Map(2 -> 有-01, 5 -> 用-01, 12 -> 他, 8 -> 它, 7 -> 脖子, 1 -> 来说-01, 4 -> 可以-01, 11 -> 我, 6 -> 围-01, 9 -> 能-01, 0 -> 说-01, 10 -> 带走-01, 3 -> 围巾),Map(x22 -> 脖子, x25 -> 带走-01, x2 -> 他, x8 -> 围巾, x21 -> 围-01, x24 -> 能-01, x18 -> 用-01, x4 -> 我, x3 -> 来说-01, x6 -> 有-01, x20 -> 它, x17 -> 可以-01, x0 -> 说-01))),[Ljava.lang.String;@48ea2003,Annotation([Ljava.lang.String;@6b1e7ad3,[Ljava.lang.String;@63e5e5b4,[Ljava.lang.String;@13a37e2a),Annotation([Ljava.lang.String;@a50ae65,[Ljava.lang.String;@1280851e,[Ledu.cmu.lti.nlp.amr.Dependency;@5e840abf),Annotation([Ljava.lang.String;@56de6d6b,[Ljava.lang.String;@5972d253,[Ljava.lang.String;@4fcc0416),Annotation([Ljava.lang.String;@31e32ea2,[Ljava.lang.String;@1473b8c0,[Ledu.cmu.lti.nlp.amr.Entity;@5b5c0057))
AMR:
(x0 / 说-01, subevent, x3 / 来说-01)
(x0 / 说-01, time, x2 / 他)
(x17 / 可以-01, topic, x18 / 用-01)
(x18 / 用-01, ARG3, x20 / 它)
(x18 / 用-01, time, x8 / 围巾)
(x18 / 用-01, year, x21 / 围-01)
(x21 / 围-01, time, x22 / 脖子)
(x24 / 能-01, manner, x25 / 带走-01)
(x24 / 能-01, time, x22 / 脖子)
(x3 / 来说-01, quant, x4 / 我)
(x6 / 有-01, prep-following, x3 / 来说-01)
(x6 / 有-01, prep-following, x8 / 围巾)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.1.0.0.2
WARNING: makeIds can't find span Id: 0.1.1.1.0.0.2.0
WARNING: makeIds can't find span Id: 0.1.1.1.0.0.1
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 63,963 microseconds
Sentence: 我 有 一 朵 花 的话 ， 我 就 可以 摘下 我 的 花 ， 并且 把 它 带走 。

Oracle Span 1:  可以 => 可以-01
Oracle Span 2:  它 => 它
Oracle Span 3:  就 => 就
Oracle Span 4:  带走 => 带走-01
Oracle Span 5:  我 => 我
Oracle Span 6:  摘下 => 摘下-01
Oracle Span 7:  有 => 有-01
Oracle Span 8:  花 => 花
Oracle Span 9:  花 => 花
Spans:
Span 9-10:  可以 => 可以-01
Span 17-18:  它 => 它
Span 8-9:  就 => 就
Span 18-19:  带走 => 带走-01
Span 0-1:  我 => 我
Span 10-11:  摘下 => 摘下-01
Span 1-2:  有 => 有-01
Span 4-5:  花 => 花
Span 13-14:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  可以 => 可以-01
Oracle Span 17-18:  它 => 它
Oracle Span 8-9:  就 => 就
Oracle Span 18-19:  带走 => 带走-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  摘下 => 摘下-01
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  花 => 花
Oracle Span 13-14:  花 => 花

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	有	_	VE	VE	_	5	nsubj	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	2	dep	_	_
5	花	_	VV	VV	_	0	root	_	_
6	的话	_	SP	SP	_	5	dep	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	就	_	AD	AD	_	11	advmod	_	_
10	可以	_	VV	VV	_	11	mmod	_	_
11	摘下	_	VV	VV	_	5	conj	_	_
12	我	_	PN	PN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	花	_	NN	NN	_	11	dobj	_	_
15	,	_	PU	PU	_	11	punct	_	_
16	并且	_	CC	CC	_	11	cc	_	_
17	把	_	BA	BA	_	19	ba	_	_
18	它	_	PN	PN	_	19	nsubj	_	_
19	带走	_	VV	VV	_	11	dep	_	_
20	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 带走-01, arg1, x15 / 它)
(x2 / 有-01, arg0, x3 / 我)
(x2 / 有-01, arg1, x4 / 花)
(x7 / 可以-01, arg0, x9 / 摘下-01)
(x7 / 可以-01, manner, x8 / 就)
(x9 / 摘下-01, arg1, x11 / 花)

Input(Some(Graph((condition :arg1 (有-01 :arg1 (花 :quant 1) :arg0 我) :arg2 (and :op (可以-01 :arg0 (摘下-01 :arg1 (花 :poss x3) :arg0 x3) :manner 就) :op (带走-01 :arg1 它 :arg0 x3))),ArrayBuffer(Span(1,2,List(0),有,有-01,false), Span(4,5,List(1),花,花,false), Span(0,1,List(2),我,我,false), Span(9,10,List(3),可以,可以-01,false), Span(10,11,List(4),摘下,摘下-01,false), Span(13,14,List(5),花,花,false), Span(8,9,List(6),就,就,false), Span(18,19,List(7),带走,带走-01,false), Span(17,18,List(8),它,它,false)),Map(2 -> 我, 5 -> 花, 8 -> 它, 7 -> 带走-01, 1 -> 花, 4 -> 摘下-01, 6 -> 就, 0 -> 有-01, 3 -> 可以-01),Map(x2 -> 有-01, x13 -> 带走-01, x8 -> 就, x15 -> 它, x7 -> 可以-01, x4 -> 花, x11 -> 花, x3 -> 我, x9 -> 摘下-01))),[Ljava.lang.String;@749f539e,Annotation([Ljava.lang.String;@5ca1f591,[Ljava.lang.String;@551de37d,[Ljava.lang.String;@6ef81f31),Annotation([Ljava.lang.String;@6075b2d3,[Ljava.lang.String;@33abde31,[Ledu.cmu.lti.nlp.amr.Dependency;@997d532),Annotation([Ljava.lang.String;@273842a6,[Ljava.lang.String;@6a969fb8,[Ljava.lang.String;@7a18e8d),Annotation([Ljava.lang.String;@3028e50e,[Ljava.lang.String;@5560bcdf,[Ledu.cmu.lti.nlp.amr.Entity;@b558294))
AMR:
(x13 / 带走-01, age, x7 / 可以-01)
(x13 / 带走-01, value, x15 / 它)
(x2 / 有-01, ARG3, x4 / 花)
(x2 / 有-01, ARG6, x3 / 我)
(x4 / 花, snt3, x9 / 摘下-01)
(x7 / 可以-01, manner, x8 / 就)
(x7 / 可以-01, op, x9 / 摘下-01)
(x9 / 摘下-01, mode, x11 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 29,315 microseconds
Sentence: 可 你 却 不 能 摘下 这些 星星 呀 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  摘下 => 摘下-01
Oracle Span 3:  星星 => 星星
Oracle Span 4:  能 => 能-01
Oracle Span 5:  这些 => 这些
Spans:
Span 1-2:  你 => 你
Span 5-6:  摘下 => 摘下-01
Span 7-8:  星星 => 星星
Span 4-5:  能 => 能-01
Span 6-7:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  摘下 => 摘下-01
Oracle Span 7-8:  星星 => 星星
Oracle Span 4-5:  能 => 能-01
Oracle Span 6-7:  这些 => 这些

Dependencies:
1	可	_	AD	AD	_	6	advmod	_	_
2	你	_	PN	PN	_	6	nsubj	_	_
3	却	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	能	_	VV	VV	_	6	mmod	_	_
6	摘下	_	VV	VV	_	0	root	_	_
7	这些	_	DT	DT	_	8	det	_	_
8	星星	_	NN	NN	_	6	dobj	_	_
9	呀	_	SP	SP	_	6	dep	_	_
10	！	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 能-01, arg0, x14 / 摘下-01)
(x14 / 摘下-01, arg0, x15 / 你)
(x14 / 摘下-01, arg1, x16 / 星星)
(x16 / 星星, mod, x17 / 这些)

Input(Some(Graph((say :arg1 (contrast :arg2 (能-01 :mode expressive :arg0 (摘下-01 :arg1 (星星 :mod 这些) :arg0 你) :polarity -))),ArrayBuffer(Span(4,5,List(0),能,能-01,false), Span(5,6,List(1),摘下,摘下-01,false), Span(7,8,List(2),星星,星星,false), Span(6,7,List(3),这些,这些,false), Span(1,2,List(4),你,你,false)),Map(2 -> 星星, 1 -> 摘下-01, 4 -> 你, 0 -> 能-01, 3 -> 这些),Map(x16 -> 星星, x12 -> 能-01, x15 -> 你, x14 -> 摘下-01, x17 -> 这些))),[Ljava.lang.String;@bb095,Annotation([Ljava.lang.String;@777c350f,[Ljava.lang.String;@27aae97b,[Ljava.lang.String;@4c9e38),Annotation([Ljava.lang.String;@5d1e09bc,[Ljava.lang.String;@4bdc8b5d,[Ledu.cmu.lti.nlp.amr.Dependency;@3bcd426c),Annotation([Ljava.lang.String;@5f14a673,[Ljava.lang.String;@726a17c4,[Ljava.lang.String;@5dc3fcb7),Annotation([Ljava.lang.String;@c4c0b41,[Ljava.lang.String;@76911385,[Ledu.cmu.lti.nlp.amr.Entity;@5467eea4))
AMR:
(x12 / 能-01, prep-to, x14 / 摘下-01)
(x14 / 摘下-01, degree, x17 / 这些)
(x14 / 摘下-01, topic, x15 / 你)
(x16 / 星星, mod, x17 / 这些)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 9,028 microseconds
Sentence: “ 我 不 能 摘 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  摘 => 摘-01
Oracle Span 3:  能 => 能-01
Spans:
Span 1-2:  我 => 我
Span 4-5:  摘 => 摘-01
Span 3-4:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  摘 => 摘-01
Oracle Span 3-4:  能 => 能-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	能	_	VV	VV	_	0	root	_	_
5	摘	_	VV	VV	_	4	conj	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 能-01, arg0, x9 / 摘-01)
(x9 / 摘-01, arg0, x10 / 我)

Input(Some(Graph((say :arg1 (能-01 :arg0 (摘-01 :arg0 我) :polarity -)),ArrayBuffer(Span(3,4,List(0),能,能-01,false), Span(4,5,List(1),摘,摘-01,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 摘-01, 0 -> 能-01),Map(x10 -> 我, x7 -> 能-01, x9 -> 摘-01))),[Ljava.lang.String;@160396db,Annotation([Ljava.lang.String;@7a799159,[Ljava.lang.String;@40ab8a8,[Ljava.lang.String;@6ff37443),Annotation([Ljava.lang.String;@65cc8228,[Ljava.lang.String;@53093491,[Ledu.cmu.lti.nlp.amr.Dependency;@21719a0),Annotation([Ljava.lang.String;@76b224cd,[Ljava.lang.String;@77ee25f1,[Ljava.lang.String;@6dd93a21),Annotation([Ljava.lang.String;@57b9e423,[Ljava.lang.String;@304a3655,[Ledu.cmu.lti.nlp.amr.Entity;@368d5c00))
AMR:
(x7 / 能-01, instrument, x10 / 我)
(x7 / 能-01, prep-through, x9 / 摘-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 4,107 microseconds
Sentence: 但 我 可以 把 它们 存 在 银行 里 。 ”

Oracle Span 1:  可以 => 可以-01
Oracle Span 2:  存 => 存-01
Oracle Span 3:  它们 => 它们
Oracle Span 4:  我 => 我
Oracle Span 5:  银行 => 银行
Spans:
Span 2-3:  可以 => 可以-01
Span 5-6:  存 => 存-01
Span 4-5:  它们 => 它们
Span 1-2:  我 => 我
Span 7-8:  银行 => 银行

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  可以 => 可以-01
Oracle Span 5-6:  存 => 存-01
Oracle Span 4-5:  它们 => 它们
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  银行 => 银行

Dependencies:
1	但	_	AD	AD	_	6	advmod	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	可以	_	VV	VV	_	6	mmod	_	_
4	把	_	BA	BA	_	6	ba	_	_
5	它们	_	PN	PN	_	6	nsubj	_	_
6	存	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	银行	_	NN	NN	_	9	lobj	_	_
9	里	_	LC	LC	_	7	plmod	_	_
10	。	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 可以-01, arg0, x13 / 存-01)
(x13 / 存-01, arg0, x14 / 我)
(x13 / 存-01, arg1, x15 / 它们)
(x13 / 存-01, arg2, x16 / 银行)

Input(Some(Graph((say :arg1 (contrast :arg2 (可以-01 :arg0 (存-01 :arg2 银行 :arg1 它们 :arg0 我)))),ArrayBuffer(Span(2,3,List(0),可以,可以-01,false), Span(5,6,List(1),存,存-01,false), Span(7,8,List(2),银行,银行,false), Span(4,5,List(3),它们,它们,false), Span(1,2,List(4),我,我,false)),Map(2 -> 银行, 1 -> 存-01, 4 -> 我, 0 -> 可以-01, 3 -> 它们),Map(x16 -> 银行, x13 -> 存-01, x12 -> 可以-01, x15 -> 它们, x14 -> 我))),[Ljava.lang.String;@12a160c2,Annotation([Ljava.lang.String;@aa10649,[Ljava.lang.String;@6b3871d6,[Ljava.lang.String;@37095ded),Annotation([Ljava.lang.String;@2eb79cbe,[Ljava.lang.String;@2ca6546f,[Ledu.cmu.lti.nlp.amr.Dependency;@43826ec),Annotation([Ljava.lang.String;@7923f5b3,[Ljava.lang.String;@6b63d445,[Ljava.lang.String;@7578e06a),Annotation([Ljava.lang.String;@30b2b76f,[Ljava.lang.String;@56da52a7,[Ledu.cmu.lti.nlp.amr.Entity;@23ee75c5))
AMR:
(x12 / 可以-01, prep-on-behalf, x13 / 存-01)
(x12 / 可以-01, prep-on-behalf, x14 / 我)
(x13 / 存-01, ARG2, x16 / 银行)
(x13 / 存-01, prep-on-behalf, x15 / 它们)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 8,705 microseconds
Sentence: “ 这 是 什么 意思 呢 ？ ”

Oracle Span 1:  这 => 这
Spans:
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	意思	_	NN	NN	_	3	attr	_	_
6	呢	_	SP	SP	_	3	dep	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 这 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(1,2,List(0),这,这,false)),Map(0 -> 这),Map(x9 -> 这))),[Ljava.lang.String;@11a7ba62,Annotation([Ljava.lang.String;@340b7ef6,[Ljava.lang.String;@30404dba,[Ljava.lang.String;@6050462a),Annotation([Ljava.lang.String;@4c0884e8,[Ljava.lang.String;@231baf51,[Ledu.cmu.lti.nlp.amr.Dependency;@11841b15),Annotation([Ljava.lang.String;@73877e19,[Ljava.lang.String;@7b208b45,[Ljava.lang.String;@5bfc257),Annotation([Ljava.lang.String;@34523d46,[Ljava.lang.String;@7cedfa63,[Ledu.cmu.lti.nlp.amr.Entity;@3e83c18))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,888 microseconds
Sentence: “ 这 就 是 说 ， 我 把 星星 的 数目 写 在 一 片 小 纸头 上 ，

Oracle Span 1:  写 => 写-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  我 => 我
Oracle Span 4:  数目 => 数目
Oracle Span 5:  星星 => 星星
Oracle Span 6:  纸头 => 纸头
Oracle Span 7:  这 => 这
Spans:
Span 11-12:  写 => 写-01
Span 15-16:  小 => 小-01
Span 6-7:  我 => 我
Span 10-11:  数目 => 数目
Span 8-9:  星星 => 星星
Span 16-17:  纸头 => 纸头
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  写 => 写-01
Oracle Span 15-16:  小 => 小-01
Oracle Span 6-7:  我 => 我
Oracle Span 10-11:  数目 => 数目
Oracle Span 8-9:  星星 => 星星
Oracle Span 16-17:  纸头 => 纸头
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	我	_	PN	PN	_	12	nsubj	_	_
8	把	_	BA	BA	_	12	ba	_	_
9	星星	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	数目	_	NN	NN	_	12	nsubj	_	_
12	写	_	VV	VV	_	5	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	片	_	M	M	_	17	clf	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	纸头	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	13	plmod	_	_
19	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x17 / 写-01, arg0, x18 / 我)
(x17 / 写-01, arg1, x19 / 数目)
(x17 / 写-01, arg2, x21 / 纸头)
(x19 / 数目, mod, x20 / 星星)
(x21 / 纸头, mod, x22 / 小-01)

Input(Some(Graph((say :arg1 (mean :arg0 这 :arg1 (写-01 :arg2 (纸头 :quant 1 :mod 小-01) :arg1 (数目 :mod 星星) :arg0 我))),ArrayBuffer(Span(1,2,List(0),这,这,false), Span(11,12,List(1),写,写-01,false), Span(16,17,List(2),纸头,纸头,false), Span(15,16,List(3),小,小-01,false), Span(10,11,List(4),数目,数目,false), Span(8,9,List(5),星星,星星,false), Span(6,7,List(6),我,我,false)),Map(2 -> 纸头, 5 -> 星星, 1 -> 写-01, 4 -> 数目, 6 -> 我, 0 -> 这, 3 -> 小-01),Map(x22 -> 小-01, x16 -> 这, x19 -> 数目, x21 -> 纸头, x18 -> 我, x20 -> 星星, x17 -> 写-01))),[Ljava.lang.String;@783efb48,Annotation([Ljava.lang.String;@5d235104,[Ljava.lang.String;@4e8e8621,[Ljava.lang.String;@c446b14),Annotation([Ljava.lang.String;@3af356f,[Ljava.lang.String;@4443ef6f,[Ledu.cmu.lti.nlp.amr.Dependency;@7e46d648),Annotation([Ljava.lang.String;@51751e5f,[Ljava.lang.String;@2b0b4d53,[Ljava.lang.String;@7068f7ca),Annotation([Ljava.lang.String;@38548b19,[Ljava.lang.String;@41aaedaa,[Ledu.cmu.lti.nlp.amr.Entity;@303a5119))
AMR:
(x17 / 写-01, location, x19 / 数目)
(x17 / 写-01, op, x21 / 纸头)
(x19 / 数目, mod, x20 / 星星)
(x19 / 数目, poss, x18 / 我)
(x20 / 星星, mod, x16 / 这)
(x21 / 纸头, mod, x22 / 小-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 15,987 microseconds
Sentence: 然后 把 这 片 纸头 锁 在 一 个 抽屉 里 。 ”

Oracle Span 1:  抽屉 => 抽屉
Oracle Span 2:  纸头 => 纸头
Oracle Span 3:  这 => 这
Oracle Span 4:  锁 => 锁-02
Spans:
Span 9-10:  抽屉 => 抽屉
Span 4-5:  纸头 => 纸头
Span 2-3:  这 => 这
Span 5-6:  锁 => 锁-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  抽屉 => 抽屉
Oracle Span 4-5:  纸头 => 纸头
Oracle Span 2-3:  这 => 这
Oracle Span 5-6:  锁 => 锁-02

Dependencies:
1	然后	_	AD	AD	_	6	advmod	_	_
2	把	_	BA	BA	_	6	ba	_	_
3	这	_	DT	DT	_	5	det	_	_
4	片	_	M	M	_	3	clf	_	_
5	纸头	_	NN	NN	_	6	nsubj	_	_
6	锁	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	抽屉	_	NN	NN	_	11	lobj	_	_
11	里	_	LC	LC	_	7	plmod	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 锁-02, arg1, x11 / 纸头)
(x10 / 锁-02, arg2, x13 / 抽屉)
(x11 / 纸头, mod, x12 / 这)

Input(Some(Graph((say :arg1 (temporal :arg2 (锁-02 :arg2 (抽屉 :quant 1) :arg1 (纸头 :mod 这)))),ArrayBuffer(Span(5,6,List(0),锁,锁-02,false), Span(9,10,List(1),抽屉,抽屉,false), Span(4,5,List(2),纸头,纸头,false), Span(2,3,List(3),这,这,false)),Map(2 -> 纸头, 1 -> 抽屉, 0 -> 锁-02, 3 -> 这),Map(x10 -> 锁-02, x13 -> 抽屉, x12 -> 这, x11 -> 纸头))),[Ljava.lang.String;@75b3673,Annotation([Ljava.lang.String;@1bcb79c2,[Ljava.lang.String;@d1a10ac,[Ljava.lang.String;@6fca2a8f),Annotation([Ljava.lang.String;@31fc71ab,[Ljava.lang.String;@71391b3f,[Ledu.cmu.lti.nlp.amr.Dependency;@2cfbeac4),Annotation([Ljava.lang.String;@12db3386,[Ljava.lang.String;@4078695f,[Ljava.lang.String;@79a1728c),Annotation([Ljava.lang.String;@a7f0ab6,[Ljava.lang.String;@41f35f7c,[Ledu.cmu.lti.nlp.amr.Entity;@42c2f48c))
AMR:
(x10 / 锁-02, snt3, x13 / 抽屉)
(x10 / 锁-02, time, x11 / 纸头)
(x11 / 纸头, mod, x12 / 这)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 6,981 microseconds
Sentence: “ 这 就 算 完事 了 吗 ？ ”

Oracle Span 1:  完事 => 完事
Oracle Span 2:  就 => 就
Oracle Span 3:  算 => 算-01
Oracle Span 4:  这 => 这
Spans:
Span 4-5:  完事 => 完事
Span 2-3:  就 => 就
Span 3-4:  算 => 算-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  完事 => 完事
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  算 => 算-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	算	_	VV	VV	_	0	root	_	_
5	完事	_	VV	VV	_	4	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	吗	_	SP	SP	_	4	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 算-01, arg0, x9 / 这)
(x8 / 算-01, arg1, x11 / 完事)
(x8 / 算-01, manner, x10 / 就)

Input(Some(Graph((say :arg1 (算-01 :mode interrogative :arg1 完事 :manner 就 :arg0 这)),ArrayBuffer(Span(3,4,List(0),算,算-01,false), Span(4,5,List(1),完事,完事,false), Span(2,3,List(2),就,就,false), Span(1,2,List(3),这,这,false)),Map(2 -> 就, 1 -> 完事, 0 -> 算-01, 3 -> 这),Map(x10 -> 就, x8 -> 算-01, x11 -> 完事, x9 -> 这))),[Ljava.lang.String;@3005db4a,Annotation([Ljava.lang.String;@425d5d46,[Ljava.lang.String;@198ef2ce,[Ljava.lang.String;@4cbd03e7),Annotation([Ljava.lang.String;@52fc5eb1,[Ljava.lang.String;@7a639ec5,[Ledu.cmu.lti.nlp.amr.Dependency;@14151bc5),Annotation([Ljava.lang.String;@3013909b,[Ljava.lang.String;@2a49fe,[Ljava.lang.String;@66596a88),Annotation([Ljava.lang.String;@5aae8eb5,[Ljava.lang.String;@76954a33,[Ledu.cmu.lti.nlp.amr.Entity;@24a298a6))
AMR:
(x11 / 完事, mod, x9 / 这)
(x8 / 算-01, location, x11 / 完事)
(x8 / 算-01, manner, x10 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,168 microseconds
Sentence: “ 这样 就 行 了 。 ”

Oracle Span 1:  就 => 就
Oracle Span 2:  行 => 行-04
Oracle Span 3:  这样 => 这样
Spans:
Span 2-3:  就 => 就
Span 3-4:  行 => 行-04
Span 1-2:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  行 => 行-04
Oracle Span 1-2:  这样 => 这样

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这样	_	AD	AD	_	4	advmod	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	行	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 行-04, arg0, x8 / 这样)
(x6 / 行-04, manner, x7 / 就)

Input(Some(Graph((say :arg1 (行-04 :arg0 这样 :manner 就)),ArrayBuffer(Span(3,4,List(0),行,行-04,false), Span(1,2,List(1),这样,这样,false), Span(2,3,List(2),就,就,false)),Map(2 -> 就, 1 -> 这样, 0 -> 行-04),Map(x8 -> 这样, x7 -> 就, x6 -> 行-04))),[Ljava.lang.String;@982bb90,Annotation([Ljava.lang.String;@27f74733,[Ljava.lang.String;@7bef452c,[Ljava.lang.String;@4bb8855f),Annotation([Ljava.lang.String;@57fae983,[Ljava.lang.String;@4a29f290,[Ledu.cmu.lti.nlp.amr.Dependency;@4bee18dc),Annotation([Ljava.lang.String;@44f3fe83,[Ljava.lang.String;@44c5a16f,[Ljava.lang.String;@417d6615),Annotation([Ljava.lang.String;@7a6ebe1e,[Ljava.lang.String;@21325036,[Ledu.cmu.lti.nlp.amr.Entity;@489543a6))
AMR:
(x6 / 行-04, manner, x7 / 就)
(x6 / 行-04, time, x8 / 这样)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,258 microseconds
Sentence: 小 王子 想道 ： “ 真 好玩 。

Oracle Span 1:  好玩 => 好玩-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  真 => 真
Spans:
Span 6-7:  好玩 => 好玩-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 5-6:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  好玩 => 好玩-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  真 => 真

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	想道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	7	punct	_	_
6	真	_	AD	AD	_	7	advmod	_	_
7	好玩	_	VA	VA	_	3	ccomp	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	王子	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好玩-01, degree, x5 / 真)

Input(Some(Graph((想到-01 :arg0 (王子 :mod 小-01) :arg1 (好玩-01 :degree 真)),ArrayBuffer(Span(1,2,List(0),王子,王子,false), Span(0,1,List(1),小,小-01,false), Span(6,7,List(2),好玩,好玩-01,false), Span(5,6,List(3),真,真,false)),Map(2 -> 好玩-01, 1 -> 小-01, 0 -> 王子, 3 -> 真),Map(x2 -> 王子, x5 -> 真, x4 -> 好玩-01, x3 -> 小-01))),[Ljava.lang.String;@6272c96f,Annotation([Ljava.lang.String;@6de30571,[Ljava.lang.String;@5ee34b1b,[Ljava.lang.String;@3c89bb12),Annotation([Ljava.lang.String;@48c4245d,[Ljava.lang.String;@3df978b9,[Ledu.cmu.lti.nlp.amr.Dependency;@7906578e),Annotation([Ljava.lang.String;@8a62297,[Ljava.lang.String;@61a91912,[Ljava.lang.String;@1763992e),Annotation([Ljava.lang.String;@5c92166b,[Ljava.lang.String;@659925f4,[Ledu.cmu.lti.nlp.amr.Entity;@4cd1c1dc))
AMR:
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好玩-01, degree, x5 / 真)
(x4 / 好玩-01, purpose, x2 / 王子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 6,075 microseconds
Sentence: 这 倒 蛮 有 诗意 ，

Oracle Span 1:  有 => 有-02
Oracle Span 2:  蛮 => 蛮
Oracle Span 3:  诗意 => 诗意-01
Oracle Span 4:  这 => 这
Spans:
Span 3-4:  有 => 有-02
Span 2-3:  蛮 => 蛮
Span 4-5:  诗意 => 诗意-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  有 => 有-02
Oracle Span 2-3:  蛮 => 蛮
Oracle Span 4-5:  诗意 => 诗意-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	倒	_	AD	AD	_	4	advmod	_	_
3	蛮	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	诗意	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 有-02, arg0, x3 / 这)
(x0 / 有-02, arg1, x4 / 诗意-01)
(x0 / 有-02, degree, x2 / 蛮)

Input(Some(Graph((有-02 :arg1 诗意-01 :arg0 这 :degree 蛮),ArrayBuffer(Span(3,4,List(0),有,有-02,false), Span(4,5,List(1),诗意,诗意-01,false), Span(0,1,List(2),这,这,false), Span(2,3,List(3),蛮,蛮,false)),Map(2 -> 这, 1 -> 诗意-01, 0 -> 有-02, 3 -> 蛮),Map(x2 -> 蛮, x4 -> 诗意-01, x3 -> 这, x0 -> 有-02))),[Ljava.lang.String;@47f08b81,Annotation([Ljava.lang.String;@b9dfc5a,[Ljava.lang.String;@2787de58,[Ljava.lang.String;@659a2455),Annotation([Ljava.lang.String;@267517e4,[Ljava.lang.String;@426e505c,[Ledu.cmu.lti.nlp.amr.Dependency;@5b022357),Annotation([Ljava.lang.String;@6f8e0cee,[Ljava.lang.String;@614aeccc,[Ljava.lang.String;@5116ac09),Annotation([Ljava.lang.String;@1bc425e7,[Ljava.lang.String;@4b2a30d,[Ledu.cmu.lti.nlp.amr.Entity;@322803db))
AMR:
(x0 / 有-02, degree, x2 / 蛮)
(x0 / 有-02, op, x3 / 这)
(x0 / 有-02, year, x4 / 诗意-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,094 microseconds
Sentence: 可是 ， 并 不 算 是 了不起 的 正经事 。 ”

Oracle Span 1:  了不起 => 了不起-01
Oracle Span 2:  算 => 算-01
Spans:
Span 6-7:  了不起 => 了不起-01
Span 4-5:  算 => 算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  了不起 => 了不起-01
Oracle Span 4-5:  算 => 算-01

Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	并	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	算	_	VV	VV	_	0	root	_	_
6	是	_	VC	VC	_	5	ccomp	_	_
7	了不起	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	正经事	_	NN	NN	_	6	attr	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (contrast :arg2 (算-01 :arg1 (事 :mod 正经 :mod 了不起-01) :polarity -))),ArrayBuffer(Span(4,5,List(0),算,算-01,false), Span(6,7,List(1),了不起,了不起-01,false)),Map(1 -> 了不起-01, 0 -> 算-01),Map(x16 -> 算-01, x20 -> 了不起-01))),[Ljava.lang.String;@56ba8773,Annotation([Ljava.lang.String;@6ceb7b5e,[Ljava.lang.String;@7dd00705,[Ljava.lang.String;@f14e5bf),Annotation([Ljava.lang.String;@d176a31,[Ljava.lang.String;@3a91d146,[Ledu.cmu.lti.nlp.amr.Dependency;@4784013e),Annotation([Ljava.lang.String;@6f952d6c,[Ljava.lang.String;@5965844d,[Ljava.lang.String;@6d4a65c6),Annotation([Ljava.lang.String;@aa004a0,[Ljava.lang.String;@4c98a6d5,[Ledu.cmu.lti.nlp.amr.Entity;@392a04e7))
AMR:
(x16 / 算-01, scale, x20 / 了不起-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
Decoded in 3,611 microseconds
Sentence: 关于 什么 是 正经事 ， 小 王子 的 看法 与 大人们 的 看法 非常 不同 。

Oracle Span 1:  大人们 => 大人们
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  看法 => 看法
Oracle Span 5:  看法 => 看法
Oracle Span 6:  非常 => 非常
Spans:
Span 10-11:  大人们 => 大人们
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 8-9:  看法 => 看法
Span 12-13:  看法 => 看法
Span 13-14:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 10-11:  大人们 => 大人们
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 8-9:  看法 => 看法
Oracle Span 12-13:  看法 => 看法
Oracle Span 13-14:  非常 => 非常

Dependencies:
1	关于	_	P	P	_	3	prep	_	_
2	什么	_	PN	PN	_	1	pobj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	正经事	_	NN	NN	_	3	attr	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	看法	_	NN	NN	_	15	nsubj	_	_
10	与	_	P	P	_	15	prep	_	_
11	大人们	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	看法	_	NN	NN	_	10	pobj	_	_
14	非常	_	AD	AD	_	15	advmod	_	_
15	不同	_	VA	VA	_	3	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 看法, poss, x16 / 王子)
(x16 / 王子, mod, x17 / 小-01)
(x18 / 看法, poss, x19 / 大人们)

Input(Some(Graph((同-01 :polarity - :arg0 (看法 :poss (王子 :mod 小-01)) :arg1 (看法 :poss 大人们) :degree 非常 :topic (事 :mod 正经 :domain amr-unknown)),ArrayBuffer(Span(8,9,List(0),看法,看法,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小-01,false), Span(12,13,List(3),看法,看法,false), Span(10,11,List(4),大人们,大人们,false), Span(13,14,List(5),非常,非常,false)),Map(2 -> 小-01, 5 -> 非常, 1 -> 王子, 4 -> 大人们, 0 -> 看法, 3 -> 看法),Map(x16 -> 王子, x19 -> 大人们, x15 -> 看法, x18 -> 看法, x20 -> 非常, x17 -> 小-01))),[Ljava.lang.String;@7f02251,Annotation([Ljava.lang.String;@dffa30b,[Ljava.lang.String;@4d8126f,[Ljava.lang.String;@6d3c232f),Annotation([Ljava.lang.String;@6b587673,[Ljava.lang.String;@1bcf67e8,[Ledu.cmu.lti.nlp.amr.Dependency;@5f404594),Annotation([Ljava.lang.String;@53692008,[Ljava.lang.String;@7b2a3ff8,[Ljava.lang.String;@1bbae752),Annotation([Ljava.lang.String;@460b6d54,[Ljava.lang.String;@5cf87cfd,[Ledu.cmu.lti.nlp.amr.Entity;@76075d65))
AMR:
(x15 / 看法, poss, x16 / 王子)
(x16 / 王子, mod, x17 / 小-01)
(x18 / 看法, mod, x15 / 看法)
(x18 / 看法, poss, x19 / 大人们)
(x20 / 非常, manner, x18 / 看法)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.3
Decoded in 15,465 microseconds
Sentence: 他 接着 又 说 ： “ 我 有 一 朵 花 ， 我 每天 都 给 她 浇水 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  我 => 我
Oracle Span 4:  有 => 有-01
Oracle Span 5:  浇水 => 浇水-01
Oracle Span 6:  花 => 花
Oracle Span 7:  说 => 说-01
Oracle Span 8:  都 => 都
Spans:
Span 0-1:  他 => 他
Span 2-3:  又 => 又
Span 6-7:  我 => 我
Span 7-8:  有 => 有-01
Span 17-18:  浇水 => 浇水-01
Span 10-11:  花 => 花
Span 3-4:  说 => 说-01
Span 14-15:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 6-7:  我 => 我
Oracle Span 7-8:  有 => 有-01
Oracle Span 17-18:  浇水 => 浇水-01
Oracle Span 10-11:  花 => 花
Oracle Span 3-4:  说 => 说-01
Oracle Span 14-15:  都 => 都

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	接着	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	我	_	PN	PN	_	8	top	_	_
8	有	_	VE	VE	_	4	ccomp	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	朵	_	M	M	_	11	clf	_	_
11	花	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	我	_	PN	PN	_	18	nsubj	_	_
14	每天	_	AD	AD	_	18	advmod	_	_
15	都	_	AD	AD	_	18	advmod	_	_
16	给	_	P	P	_	18	prep	_	_
17	她	_	PN	PN	_	16	pobj	_	_
18	浇水	_	VV	VV	_	8	conj	_	_
19	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x18 / 浇水-01, manner, x21 / 都)
(x2 / 说-01, arg0, x4 / 他)
(x2 / 说-01, manner, x3 / 又)
(x6 / 有-01, arg0, x7 / 我)
(x6 / 有-01, arg1, x8 / 花)

Input(Some(Graph((temporal :arg2 (说-01 :arg1 (and :op (有-01 :arg1 (花 :quant 1) :arg0 我) :op (浇水-01 :frequency (rate-entity-91 :arg3 (temporal-quantity :quant 1 :unit 天)) :manner 都 :arg1 x8 :arg0 x7)) :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(7,8,List(1),有,有-01,false), Span(10,11,List(2),花,花,false), Span(6,7,List(3),我,我,false), Span(17,18,List(4),浇水,浇水-01,false), Span(14,15,List(5),都,都,false), Span(0,1,List(6),他,他,false), Span(2,3,List(7),又,又,false)),Map(2 -> 花, 5 -> 都, 7 -> 又, 1 -> 有-01, 4 -> 浇水-01, 6 -> 他, 0 -> 说-01, 3 -> 我),Map(x2 -> 说-01, x8 -> 花, x21 -> 都, x7 -> 我, x18 -> 浇水-01, x4 -> 他, x3 -> 又, x6 -> 有-01))),[Ljava.lang.String;@3a4ba480,Annotation([Ljava.lang.String;@27b71f50,[Ljava.lang.String;@383790cf,[Ljava.lang.String;@74971ed9),Annotation([Ljava.lang.String;@131fcb6f,[Ljava.lang.String;@ccd1bc3,[Ledu.cmu.lti.nlp.amr.Dependency;@878537d),Annotation([Ljava.lang.String;@4455f57d,[Ljava.lang.String;@29fc1a2b,[Ljava.lang.String;@4d0b0fd4),Annotation([Ljava.lang.String;@7a24eb3,[Ljava.lang.String;@6c37bd27,[Ledu.cmu.lti.nlp.amr.Entity;@25d3cfc8))
AMR:
(x18 / 浇水-01, manner, x21 / 都)
(x2 / 说-01, manner, x3 / 又)
(x2 / 说-01, quant, x4 / 他)
(x6 / 有-01, accompanier, x8 / 花)
(x6 / 有-01, prep-following, x2 / 说-01)
(x6 / 有-01, prep-following, x7 / 我)
(x8 / 花, location, x18 / 浇水-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 19,314 microseconds
Sentence: 我 还 有 三 座 火山 ， 我 每 星期 把 它们 全 都 打扫 一 遍 。 连 死 火山 也 打扫 。 谁 知道 它 会 不 会 再 复活 。

Oracle Span 1:  也 => 也
Oracle Span 2:  会 => 会-02
Oracle Span 3:  会 => 会-02
Oracle Span 4:  全 => 全-01
Oracle Span 5:  复活 => 复活-01
Oracle Span 6:  它们 => 它们
Oracle Span 7:  我 => 我
Oracle Span 8:  打扫 => 打扫-01
Oracle Span 9:  打扫 => 打扫-01
Oracle Span 10:  星期 => (temporal-quantity :unit 星期)
Oracle Span 11:  有 => 有-01
Oracle Span 12:  死 => 死-01
Oracle Span 13:  火山 => 火山
Oracle Span 14:  火山 => 火山
Oracle Span 15:  知道 => 知道-01
Oracle Span 16:  还 => 还
Oracle Span 17:  都 => 都
Spans:
Span 21-22:  也 => 也
Span 27-28:  会 => 会-02
Span 29-30:  会 => 会-02
Span 12-13:  全 => 全-01
Span 31-32:  复活 => 复活-01
Span 11-12:  它们 => 它们
Span 0-1:  我 => 我
Span 14-15:  打扫 => 打扫-01
Span 22-23:  打扫 => 打扫-01
Span 9-10:  星期 => (temporal-quantity :unit 星期)
Span 2-3:  有 => 有-01
Span 19-20:  死 => 死-01
Span 5-6:  火山 => 火山
Span 20-21:  火山 => 火山
Span 25-26:  知道 => 知道-01
Span 1-2:  还 => 还
Span 13-14:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 21-22:  也 => 也
Oracle Span 27-28:  会 => 会-02
Oracle Span 29-30:  会 => 会-02
Oracle Span 12-13:  全 => 全-01
Oracle Span 31-32:  复活 => 复活-01
Oracle Span 11-12:  它们 => 它们
Oracle Span 0-1:  我 => 我
Oracle Span 14-15:  打扫 => 打扫-01
Oracle Span 22-23:  打扫 => 打扫-01
Oracle Span 9-10:  星期 => (temporal-quantity :unit 星期)
Oracle Span 2-3:  有 => 有-01
Oracle Span 19-20:  死 => 死-01
Oracle Span 5-6:  火山 => 火山
Oracle Span 20-21:  火山 => 火山
Oracle Span 25-26:  知道 => 知道-01
Oracle Span 1-2:  还 => 还
Oracle Span 13-14:  都 => 都

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	三	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	clf	_	_
6	火山	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	15	nsubj	_	_
9	每	_	DT	DT	_	10	det	_	_
10	星期	_	NN	NN	_	15	nsubj	_	_
11	把	_	BA	BA	_	15	ba	_	_
12	它们	_	PN	PN	_	15	nsubj	_	_
13	全	_	DT	DT	_	15	dep	_	_
14	都	_	AD	AD	_	15	advmod	_	_
15	打扫	_	VV	VV	_	3	conj	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	遍	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	3	punct	_	_
19	连	_	AD	AD	_	20	advmod	_	_
20	死	_	VV	VV	_	3	conj	_	_
21	火山	_	NN	NN	_	23	conj	_	_
22	也	_	CC	CC	_	23	cc	_	_
23	打扫	_	NN	NN	_	20	dobj	_	_
24	。	_	PU	PU	_	3	punct	_	_
25	谁	_	PN	PN	_	26	nsubj	_	_
26	知道	_	VV	VV	_	3	conj	_	_
27	它	_	PN	PN	_	32	nsubj	_	_
28	会	_	VV	VV	_	32	mmod	_	_
29	不	_	AD	AD	_	32	neg	_	_
30	会	_	VV	VV	_	32	mmod	_	_
31	再	_	AD	AD	_	32	advmod	_	_
32	复活	_	VV	VV	_	26	ccomp	_	_
33	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x17 / 打扫-01, arg1, x19 / 火山)
(x17 / 打扫-01, cause, x37 / 知道-01)
(x17 / 打扫-01, manner, x18 / 也)
(x19 / 火山, mod, x20 / 死-01)
(x3 / 有-01, arg0, x5 / 我)
(x3 / 有-01, arg1, x6 / 火山)
(x3 / 有-01, manner, x4 / 还)
(x33 / temporal-quantity, unit, x35 / 星期)
(x40 / 会-02, arg0, x41 / 复活-01)
(x8 / 打扫-01, arg1, x11 / 它们)
(x8 / 打扫-01, frequency, x33 / temporal-quantity)
(x8 / 打扫-01, manner, x13 / 都)
(x8 / 打扫-01, manner, x14 / 全-01)

Input(Some(Graph((multi-sentence :snt1 (and :op (有-01 :arg1 (火山 :quant 3) :arg0 我 :manner 还) :op (打扫-01 :frequency (temporal-quantity :unit 星期 :quant 1) :quant 1 :manner 全-01 :manner 都 :arg1 它们 :arg0 x5)) :snt2 (打扫-01 :cause (知道-01 :arg1 (or :op (会-02 :arg0 (复活-01 :arg0 x19)) :op (会-02 :arg0 (x41 :arg0 x19) :polarity -)) :polarity -) :arg0 x5 :arg1 (火山 :mod 死-01) :manner 也)),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(5,6,List(1),火山,火山,false), Span(0,1,List(2),我,我,false), Span(1,2,List(3),还,还,false), Span(14,15,List(4),打扫,打扫-01,false), Span(9,10,List(5, 6),星期,(temporal-quantity :unit 星期),false), Span(12,13,List(7),全,全-01,false), Span(13,14,List(8),都,都,false), Span(11,12,List(9),它们,它们,false), Span(22,23,List(10),打扫,打扫-01,false), Span(25,26,List(11),知道,知道-01,false), Span(27,28,List(12),会,会-02,false), Span(31,32,List(13),复活,复活-01,false), Span(29,30,List(14),会,会-02,false), Span(20,21,List(15),火山,火山,false), Span(19,20,List(16),死,死-01,false), Span(21,22,List(17),也,也,false)),Map(2 -> 我, 5 -> temporal-quantity, 12 -> 会-02, 15 -> 火山, 8 -> 都, 7 -> 全-01, 17 -> 也, 1 -> 火山, 4 -> 打扫-01, 11 -> 知道-01, 14 -> 会-02, 6 -> 星期, 9 -> 它们, 0 -> 有-01, 16 -> 死-01, 10 -> 打扫-01, 3 -> 还, 13 -> 复活-01),Map(x40 -> 会-02, x43 -> 会-02, x37 -> 知道-01, x19 -> 火山, x5 -> 我, x13 -> 都, x8 -> 打扫-01, x33 -> temporal-quantity, x18 -> 也, x4 -> 还, x41 -> 复活-01, x3 -> 有-01, x11 -> 它们, x35 -> 星期, x6 -> 火山, x20 -> 死-01, x14 -> 全-01, x17 -> 打扫-01))),[Ljava.lang.String;@30331109,Annotation([Ljava.lang.String;@2571066a,[Ljava.lang.String;@74fe5966,[Ljava.lang.String;@4fe875be),Annotation([Ljava.lang.String;@677b8e13,[Ljava.lang.String;@4a9486c0,[Ledu.cmu.lti.nlp.amr.Dependency;@4c27d39d),Annotation([Ljava.lang.String;@40ee0a22,[Ljava.lang.String;@7bde1f3a,[Ljava.lang.String;@15923407),Annotation([Ljava.lang.String;@67dba613,[Ljava.lang.String;@57540fd0,[Ledu.cmu.lti.nlp.amr.Entity;@5cf8edcf))
AMR:
(x11 / 它们, age, x3 / 有-01)
(x14 / 全-01, time, x20 / 死-01)
(x17 / 打扫-01, ARG3, x19 / 火山)
(x17 / 打扫-01, manner, x18 / 也)
(x17 / 打扫-01, manner, x37 / 知道-01)
(x19 / 火山, mod, x20 / 死-01)
(x3 / 有-01, manner, x4 / 还)
(x3 / 有-01, op, x5 / 我)
(x3 / 有-01, prep-following, x6 / 火山)
(x33 / temporal-quantity, unit, x35 / 星期)
(x37 / 知道-01, time, x40 / 会-02)
(x40 / 会-02, prep-through, x41 / 复活-01)
(x43 / 会-02, op, x41 / 复活-01)
(x8 / 打扫-01, ARG3, x11 / 它们)
(x8 / 打扫-01, frequency, x33 / temporal-quantity)
(x8 / 打扫-01, manner, x13 / 都)
(x8 / 打扫-01, manner, x14 / 全-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.5
WARNING: makeIds can't find span Id: 0.0.1.5.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.3.1.0
WARNING: makeIds can't find span Id: 0.1.3.1.0.0
WARNING: makeIds can't find span Id: 0.1.3.1.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 101,334 microseconds
Sentence: 我 拥有 火山 和 花 ， 这 对 我 的 火山 有 益处 ， 对 我 的 花 也 有 益处 。

Oracle Span 1:  我 => 我
Oracle Span 2:  拥有 => 拥有-01
Oracle Span 3:  有 => 有-02
Oracle Span 4:  火山 => 火山
Oracle Span 5:  益处 => 益处
Oracle Span 6:  花 => 花
Spans:
Span 0-1:  我 => 我
Span 1-2:  拥有 => 拥有-01
Span 11-12:  有 => 有-02
Span 2-3:  火山 => 火山
Span 12-13:  益处 => 益处
Span 4-5:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  拥有 => 拥有-01
Oracle Span 11-12:  有 => 有-02
Oracle Span 2-3:  火山 => 火山
Oracle Span 12-13:  益处 => 益处
Oracle Span 4-5:  花 => 花

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	拥有	_	VV	VV	_	0	root	_	_
3	火山	_	NN	NN	_	5	conj	_	_
4	和	_	CC	CC	_	5	cc	_	_
5	花	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	这	_	PN	PN	_	12	nsubj	_	_
8	对	_	P	P	_	12	prep	_	_
9	我	_	PN	PN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	火山	_	NN	NN	_	8	pobj	_	_
12	有	_	VE	VE	_	2	conj	_	_
13	益处	_	NN	NN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	对	_	P	P	_	20	prep	_	_
16	我	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	花	_	NN	NN	_	15	pobj	_	_
19	也	_	AD	AD	_	20	advmod	_	_
20	有	_	VE	VE	_	12	dep	_	_
21	益处	_	NN	NN	_	20	dobj	_	_
22	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 拥有-01, arg0, x2 / 我)
(x19 / 有-02, arg0, x0 / 拥有-01)
(x19 / 有-02, arg1, x20 / 益处)

Input(Some(Graph((拥有-01 :arg0-of (有-02 :arg1 (益处 :beneficiary (and :op (x4 :poss x2) :op (x5 :poss x2)))) :arg1 (and :op 火山 :op 花) :arg0 我),ArrayBuffer(Span(1,2,List(0),拥有,拥有-01,false), Span(11,12,List(1),有,有-02,false), Span(12,13,List(2),益处,益处,false), Span(2,3,List(3),火山,火山,false), Span(4,5,List(4),花,花,false), Span(0,1,List(5),我,我,false)),Map(2 -> 益处, 5 -> 我, 1 -> 有-02, 4 -> 花, 0 -> 拥有-01, 3 -> 火山),Map(x2 -> 我, x19 -> 有-02, x5 -> 花, x4 -> 火山, x20 -> 益处, x0 -> 拥有-01))),[Ljava.lang.String;@58cec85b,Annotation([Ljava.lang.String;@629f066f,[Ljava.lang.String;@1542af63,[Ljava.lang.String;@ecfbe91),Annotation([Ljava.lang.String;@20ed3303,[Ljava.lang.String;@3adbe50f,[Ledu.cmu.lti.nlp.amr.Dependency;@3a627c80),Annotation([Ljava.lang.String;@49aa766b,[Ljava.lang.String;@963176,[Ljava.lang.String;@65004ff6),Annotation([Ljava.lang.String;@4cafa9aa,[Ljava.lang.String;@562c877a,[Ledu.cmu.lti.nlp.amr.Entity;@67001148))
AMR:
(x0 / 拥有-01, value, x2 / 我)
(x19 / 有-02, degree, x20 / 益处)
(x19 / 有-02, time, x0 / 拥有-01)
(x19 / 有-02, time, x5 / 花)
(x5 / 花, ARG3, x4 / 火山)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 27,369 microseconds
Sentence: 但是 你 对 星星 并 没有 用处 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  星星 => 星星
Oracle Span 3:  用处 => 用处
Spans:
Span 1-2:  你 => 你
Span 3-4:  星星 => 星星
Span 6-7:  用处 => 用处

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  星星 => 星星
Oracle Span 6-7:  用处 => 用处

Dependencies:
1	但是	_	AD	AD	_	6	advmod	_	_
2	你	_	PN	PN	_	6	nsubj	_	_
3	对	_	P	P	_	6	prep	_	_
4	星星	_	NR	NR	_	3	pobj	_	_
5	并	_	AD	AD	_	6	advmod	_	_
6	没有	_	VE	VE	_	0	root	_	_
7	用处	_	NN	NN	_	6	dobj	_	_
8	…	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (contrast :arg2 (有-05 :arg0 你 :polarity - :arg1 用处 :beneficiary 星星))),ArrayBuffer(Span(1,2,List(0),你,你,false), Span(6,7,List(1),用处,用处,false), Span(3,4,List(2),星星,星星,false)),Map(2 -> 星星, 1 -> 用处, 0 -> 你),Map(x16 -> 星星, x13 -> 你, x15 -> 用处))),[Ljava.lang.String;@989da1,Annotation([Ljava.lang.String;@31cb96e1,[Ljava.lang.String;@3eed0f5,[Ljava.lang.String;@64030b91),Annotation([Ljava.lang.String;@2032e725,[Ljava.lang.String;@4d23015c,[Ledu.cmu.lti.nlp.amr.Dependency;@383f1975),Annotation([Ljava.lang.String;@441cc260,[Ljava.lang.String;@73a00e09,[Ljava.lang.String;@26dcd8c0),Annotation([Ljava.lang.String;@66e889df,[Ljava.lang.String;@444548a0,[Ledu.cmu.lti.nlp.amr.Entity;@3766c667))
AMR:
(x16 / 星星, domain, x13 / 你)
(x16 / 星星, mod, x15 / 用处)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.3
Decoded in 6,446 microseconds
Sentence: 实业家 张口结舌 无言以对 。

Oracle Span 1:  实业家 => 实业家
Oracle Span 2:  张口结舌 => 张口结舌
Oracle Span 3:  无言以对 => 无言以对-01
NER Entity: (person :name (name :op "张口结舌"))
Spans:
Span 0-1:  实业家 => 实业家
Span 1-2:  张口结舌 => 张口结舌
Span 2-3:  无言以对 => 无言以对-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  实业家 => 实业家
Oracle Span 1-2:  张口结舌 => 张口结舌
Oracle Span 2-3:  无言以对 => 无言以对-01

Dependencies:
1	实业家	_	NN	NN	_	2	nsubj	_	_
2	张口结舌	_	VV	VV	_	0	root	_	_
3	无言以对	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / 无言以对-01, arg0, x4 / 实业家)

Input(Some(Graph((and :op 张口结舌 :op (无言以对-01 :arg0 实业家)),ArrayBuffer(Span(1,2,List(0),张口结舌,张口结舌,false), Span(2,3,List(1),无言以对,无言以对-01,false), Span(0,1,List(2),实业家,实业家,false)),Map(2 -> 实业家, 1 -> 无言以对-01, 0 -> 张口结舌),Map(x2 -> 张口结舌, x4 -> 实业家, x3 -> 无言以对-01))),[Ljava.lang.String;@773c0293,Annotation([Ljava.lang.String;@55b8dbda,[Ljava.lang.String;@3b569985,[Ljava.lang.String;@3a022576),Annotation([Ljava.lang.String;@2dbd803f,[Ljava.lang.String;@3e48e859,[Ledu.cmu.lti.nlp.amr.Dependency;@31ddd4a4),Annotation([Ljava.lang.String;@1a5f7e7c,[Ljava.lang.String;@5b22b970,[Ljava.lang.String;@22d1886d),Annotation([Ljava.lang.String;@7df60067,[Ljava.lang.String;@1cbb3d3b,[Ledu.cmu.lti.nlp.amr.Entity;@529cfee5))
AMR:
(x3 / 无言以对-01, degree, x2 / 张口结舌)
(x3 / 无言以对-01, op, x4 / 实业家)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 4,604 microseconds
Sentence: 于是 小 王子 就 走 了 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  就 => 就
Oracle Span 3:  王子 => 王子
Oracle Span 4:  走 => 走-02
Spans:
Span 1-2:  小 => 小-01
Span 3-4:  就 => 就
Span 2-3:  王子 => 王子
Span 4-5:  走 => 走-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  王子 => 王子
Oracle Span 4-5:  走 => 走-02

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 走-02, arg0, x4 / 王子)
(x2 / 走-02, manner, x3 / 就)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((temporal :arg2 (走-02 :arg0 (王子 :mod 小-01) :manner 就)),ArrayBuffer(Span(4,5,List(0),走,走-02,false), Span(2,3,List(1),王子,王子,false), Span(1,2,List(2),小,小-01,false), Span(3,4,List(3),就,就,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 走-02, 3 -> 就),Map(x2 -> 走-02, x5 -> 小-01, x4 -> 王子, x3 -> 就))),[Ljava.lang.String;@7ca0863b,Annotation([Ljava.lang.String;@319854f0,[Ljava.lang.String;@748fe51d,[Ljava.lang.String;@415156bf),Annotation([Ljava.lang.String;@393881f0,[Ljava.lang.String;@4af46df3,[Ledu.cmu.lti.nlp.amr.Dependency;@4158debd),Annotation([Ljava.lang.String;@af78c87,[Ljava.lang.String;@773dab28,[Ljava.lang.String;@1ecfcbc9),Annotation([Ljava.lang.String;@1965539b,[Ljava.lang.String;@2fc07784,[Ledu.cmu.lti.nlp.amr.Entity;@353efdbf))
AMR:
(x2 / 走-02, manner, x3 / 就)
(x2 / 走-02, value, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,677 microseconds
Sentence: 在 旅途 中 ， 小 王子 只 是 自言自语 地 说 了 一 句 ： “ 这些 大人们 真是 奇怪 极 了 。 ”

Oracle Span 1:  只 => 只
Oracle Span 2:  大人们 => 大人们
Oracle Span 3:  奇怪 => 奇怪-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  旅途 => 旅途
Oracle Span 6:  极 => 极
Oracle Span 7:  王子 => 王子
Oracle Span 8:  真是 => 真是
Oracle Span 9:  自言自语 => 自言自语
Oracle Span 10:  说 => 说-01
Oracle Span 11:  这些 => 这些
Spans:
Span 6-7:  只 => 只
Span 17-18:  大人们 => 大人们
Span 19-20:  奇怪 => 奇怪-01
Span 4-5:  小 => 小-01
Span 1-2:  旅途 => 旅途
Span 20-21:  极 => 极
Span 5-6:  王子 => 王子
Span 18-19:  真是 => 真是
Span 8-9:  自言自语 => 自言自语
Span 10-11:  说 => 说-01
Span 16-17:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  只 => 只
Oracle Span 17-18:  大人们 => 大人们
Oracle Span 19-20:  奇怪 => 奇怪-01
Oracle Span 4-5:  小 => 小-01
Oracle Span 1-2:  旅途 => 旅途
Oracle Span 20-21:  极 => 极
Oracle Span 5-6:  王子 => 王子
Oracle Span 18-19:  真是 => 真是
Oracle Span 8-9:  自言自语 => 自言自语
Oracle Span 10-11:  说 => 说-01
Oracle Span 16-17:  这些 => 这些

Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	旅途	_	NN	NN	_	3	lobj	_	_
3	中	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	自言自语	_	VA	VA	_	11	dvpmod	_	_
10	地	_	DEV	DEV	_	9	dvpm	_	_
11	说	_	VV	VV	_	8	ccomp	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	句	_	NN	NN	_	11	dobj	_	_
15	：	_	PU	PU	_	8	punct	_	_
16	“	_	PU	PU	_	20	punct	_	_
17	这些	_	DT	DT	_	18	det	_	_
18	大人们	_	NN	NN	_	20	nsubj	_	_
19	真是	_	AD	AD	_	20	advmod	_	_
20	奇怪	_	VA	VA	_	8	conj	_	_
21	极	_	AD	AD	_	20	advmod	_	_
22	了	_	SP	SP	_	20	dep	_	_
23	。	_	PU	PU	_	8	punct	_	_
24	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x6 / 奇怪-01)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, manner, x3 / 只)
(x0 / 说-01, time, x11 / 旅途)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, arg0, x9 / 大人们)
(x6 / 奇怪-01, degree, x7 / 极)
(x6 / 奇怪-01, manner, x8 / 真是)
(x9 / 大人们, mod, x10 / 这些)

Input(Some(Graph((说-01 :time 旅途 :arg1 (奇怪-01 :arg0 (大人们 :mod 这些) :manner 真是 :degree 极) :arg0 (王子 :mod 小-01) :manner 只 :manner 自言自语),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(1,2,List(1),旅途,旅途,false), Span(19,20,List(2),奇怪,奇怪-01,false), Span(17,18,List(3),大人们,大人们,false), Span(16,17,List(4),这些,这些,false), Span(18,19,List(5),真是,真是,false), Span(20,21,List(6),极,极,false), Span(5,6,List(7),王子,王子,false), Span(4,5,List(8),小,小-01,false), Span(6,7,List(9),只,只,false), Span(8,9,List(10),自言自语,自言自语,false)),Map(2 -> 奇怪-01, 5 -> 真是, 8 -> 小-01, 7 -> 王子, 1 -> 旅途, 4 -> 这些, 6 -> 极, 9 -> 只, 0 -> 说-01, 10 -> 自言自语, 3 -> 大人们),Map(x2 -> 自言自语, x10 -> 这些, x5 -> 小-01, x8 -> 真是, x7 -> 极, x4 -> 王子, x3 -> 只, x11 -> 旅途, x6 -> 奇怪-01, x9 -> 大人们, x0 -> 说-01))),[Ljava.lang.String;@55cff952,Annotation([Ljava.lang.String;@660591fb,[Ljava.lang.String;@4a55a6e8,[Ljava.lang.String;@8c46918),Annotation([Ljava.lang.String;@226b143b,[Ljava.lang.String;@682bd3c4,[Ledu.cmu.lti.nlp.amr.Dependency;@f2e4acf),Annotation([Ljava.lang.String;@24097e9b,[Ljava.lang.String;@5eb97ced,[Ljava.lang.String;@68ba310d),Annotation([Ljava.lang.String;@153f66e7,[Ljava.lang.String;@7aad3f7d,[Ledu.cmu.lti.nlp.amr.Entity;@6f667ad1))
AMR:
(x0 / 说-01, degree, x7 / 极)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, manner, x3 / 只)
(x0 / 说-01, time, x11 / 旅途)
(x3 / 只, prep-along-with, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, degree, x7 / 极)
(x6 / 奇怪-01, manner, x8 / 真是)
(x6 / 奇怪-01, time, x9 / 大人们)
(x9 / 大人们, mod, x10 / 这些)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.2
WARNING: makeIds can't find span Id: 0.3.2.0
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 43,811 microseconds
Sentence: XIV 。

Oracle Span 1:  XIV => XIV
Spans:
Span 0-1:  XIV => XIV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIV => XIV

Dependencies:
1	XIV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XIV,ArrayBuffer(Span(0,1,List(0),XIV,XIV,false)),Map(0 -> XIV),Map(x0 -> XIV))),[Ljava.lang.String;@566d0c69,Annotation([Ljava.lang.String;@388b401d,[Ljava.lang.String;@2bcec6a6,[Ljava.lang.String;@77a281fc),Annotation([Ljava.lang.String;@4912d525,[Ljava.lang.String;@2bfbffb2,[Ledu.cmu.lti.nlp.amr.Dependency;@765df79d),Annotation([Ljava.lang.String;@151335cb,[Ljava.lang.String;@4a7761b1,[Ljava.lang.String;@3e850122),Annotation([Ljava.lang.String;@27fde870,[Ljava.lang.String;@2b4c3c29,[Ledu.cmu.lti.nlp.amr.Entity;@5ac7aa18))
AMR:


Decoded in 1,352 microseconds
Sentence: 第五 颗 行星 非常 奇怪 ，

Oracle Span 1:  奇怪 => 奇怪-01
Oracle Span 2:  行星 => 行星
Oracle Span 3:  非常 => 非常-01
Spans:
Span 4-5:  奇怪 => 奇怪-01
Span 2-3:  行星 => 行星
Span 3-4:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  奇怪 => 奇怪-01
Oracle Span 2-3:  行星 => 行星
Oracle Span 3-4:  非常 => 非常-01

Dependencies:
1	第五	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	5	nsubj	_	_
4	非常	_	AD	AD	_	5	advmod	_	_
5	奇怪	_	VA	VA	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 奇怪-01, arg0, x3 / 行星)
(x0 / 奇怪-01, degree, x2 / 非常-01)

Input(Some(Graph((奇怪-01 :arg0 (行星 :ord (ordinal-entity :value 5)) :degree 非常-01),ArrayBuffer(Span(4,5,List(0),奇怪,奇怪-01,false), Span(2,3,List(1),行星,行星,false), Span(3,4,List(2),非常,非常-01,false)),Map(2 -> 非常-01, 1 -> 行星, 0 -> 奇怪-01),Map(x2 -> 非常-01, x3 -> 行星, x0 -> 奇怪-01))),[Ljava.lang.String;@4cdd2c73,Annotation([Ljava.lang.String;@4abf3f0,[Ljava.lang.String;@4e4c3a38,[Ljava.lang.String;@293cde83),Annotation([Ljava.lang.String;@c27d163,[Ljava.lang.String;@57c88764,[Ledu.cmu.lti.nlp.amr.Dependency;@78faea5f),Annotation([Ljava.lang.String;@37fdfb05,[Ljava.lang.String;@5e39850,[Ljava.lang.String;@1603dc2f),Annotation([Ljava.lang.String;@398474a2,[Ljava.lang.String;@61799544,[Ledu.cmu.lti.nlp.amr.Entity;@78c1a023))
AMR:
(x0 / 奇怪-01, degree, x2 / 非常-01)
(x0 / 奇怪-01, op, x3 / 行星)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,076 microseconds
Sentence: 是 这些 星星 中 最 小 的 一 颗 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  星星 => 星星
Oracle Span 3:  最 => 最
Oracle Span 4:  这些 => 这些
Spans:
Span 5-6:  小 => 小-01
Span 2-3:  星星 => 星星
Span 4-5:  最 => 最
Span 1-2:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  小 => 小-01
Oracle Span 2-3:  星星 => 星星
Oracle Span 4-5:  最 => 最
Oracle Span 1-2:  这些 => 这些

Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	这些	_	DT	DT	_	3	det	_	_
3	星星	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	6	loc	_	_
5	最	_	AD	AD	_	6	advmod	_	_
6	小	_	VA	VA	_	9	dep	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	1	attr	_	_
10	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x6 / 小-01, compared-to, x9 / 星星)
(x6 / 小-01, degree, x8 / 最)
(x9 / 星星, mod, x10 / 这些)

Input(Some(Graph((小-01 :compared-to (星星 :mod 这些) :degree 最),ArrayBuffer(Span(5,6,List(0),小,小-01,false), Span(2,3,List(1),星星,星星,false), Span(1,2,List(2),这些,这些,false), Span(4,5,List(3),最,最,false)),Map(2 -> 这些, 1 -> 星星, 0 -> 小-01, 3 -> 最),Map(x10 -> 这些, x8 -> 最, x6 -> 小-01, x9 -> 星星))),[Ljava.lang.String;@70abf9b0,Annotation([Ljava.lang.String;@6a10b263,[Ljava.lang.String;@476ec9d0,[Ljava.lang.String;@325bb9a6),Annotation([Ljava.lang.String;@1d12b024,[Ljava.lang.String;@72fe8a4f,[Ledu.cmu.lti.nlp.amr.Dependency;@43effd89),Annotation([Ljava.lang.String;@2c16fadb,[Ljava.lang.String;@248deced,[Ljava.lang.String;@2227a6c1),Annotation([Ljava.lang.String;@1e9804b9,[Ljava.lang.String;@543e593,[Ledu.cmu.lti.nlp.amr.Entity;@4e628b52))
AMR:
(x6 / 小-01, compared-to, x9 / 星星)
(x6 / 小-01, degree, x8 / 最)
(x9 / 星星, mod, x10 / 这些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,411 microseconds
Sentence: 行星 上 刚好 能 容 得 下 一 盏 路灯 和 一 个 点 路灯 的 人 。

Oracle Span 1:  人 => 人
Oracle Span 2:  刚好 => 刚好
Oracle Span 3:  容 => 容-03
Oracle Span 4:  点 => 点-01
Oracle Span 5:  能 => 能-01
Oracle Span 6:  行星 => 行星
Oracle Span 7:  路灯 => 路灯
Spans:
Span 16-17:  人 => 人
Span 2-3:  刚好 => 刚好
Span 4-5:  容 => 容-03
Span 13-14:  点 => 点-01
Span 3-4:  能 => 能-01
Span 0-1:  行星 => 行星
Span 9-10:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  人 => 人
Oracle Span 2-3:  刚好 => 刚好
Oracle Span 4-5:  容 => 容-03
Oracle Span 13-14:  点 => 点-01
Oracle Span 3-4:  能 => 能-01
Oracle Span 0-1:  行星 => 行星
Oracle Span 9-10:  路灯 => 路灯

Dependencies:
1	行星	_	NN	NN	_	2	nsubj	_	_
2	上	_	VV	VV	_	0	root	_	_
3	刚好	_	AD	AD	_	13	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	容	_	VV	VV	_	9	rcmod	_	_
6	得	_	VV	VV	_	5	ccomp	_	_
7	下	_	DT	DT	_	6	dep	_	_
8	一	_	CD	CD	_	7	dep	_	_
9	盏	_	NN	NN	_	13	dep	_	_
10	路灯	_	CD	CD	_	13	dep	_	_
11	和	_	CC	CC	_	13	cc	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	15	clf	_	_
14	点	_	NN	NN	_	15	nn	_	_
15	路灯	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	人	_	NN	NN	_	2	dobj	_	_
18	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 能-01, arg0, x4 / 容-03)
(x0 / 能-01, manner, x6 / 刚好)
(x12 / 点-01, arg0, x10 / 人)
(x4 / 容-03, arg0, x5 / 行星)

Input(Some(Graph((能-01 :manner 刚好 :arg0 (容-03 :arg1 (and :op (路灯 :quant 1) :op (人 :quant 1 :arg0-of (点-01 :arg1 x8))) :arg0 行星)),ArrayBuffer(Span(3,4,List(0),能,能-01,false), Span(2,3,List(1),刚好,刚好,false), Span(4,5,List(2),容,容-03,false), Span(9,10,List(3),路灯,路灯,false), Span(16,17,List(4),人,人,false), Span(13,14,List(5),点,点-01,false), Span(0,1,List(6),行星,行星,false)),Map(2 -> 容-03, 5 -> 点-01, 1 -> 刚好, 4 -> 人, 6 -> 行星, 0 -> 能-01, 3 -> 路灯),Map(x10 -> 人, x5 -> 行星, x8 -> 路灯, x12 -> 点-01, x4 -> 容-03, x6 -> 刚好, x0 -> 能-01))),[Ljava.lang.String;@51ec2df1,Annotation([Ljava.lang.String;@f8f56b9,[Ljava.lang.String;@15fa55a6,[Ljava.lang.String;@4f186450),Annotation([Ljava.lang.String;@7fab4be7,[Ljava.lang.String;@a64e035,[Ledu.cmu.lti.nlp.amr.Dependency;@4d74c3ba),Annotation([Ljava.lang.String;@41c204a0,[Ljava.lang.String;@64138b0c,[Ljava.lang.String;@49dbaaf3),Annotation([Ljava.lang.String;@22d9c961,[Ljava.lang.String;@736f3e9e,[Ledu.cmu.lti.nlp.amr.Entity;@bdc8014))
AMR:
(x0 / 能-01, manner, x6 / 刚好)
(x0 / 能-01, op, x4 / 容-03)
(x12 / 点-01, ARG3, x10 / 人)
(x4 / 容-03, time, x5 / 行星)
(x6 / 刚好, mod, x12 / 点-01)
(x8 / 路灯, mod, x0 / 能-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,046 microseconds
Sentence: 小 王子 怎么 也 解释 不 通 ： 这个 坐落 在 天空 某 一 角落 ， 既 没有 房屋 又 没有 居民 的 行星 上 ， 要 一 盏 路灯 和 一 个 点 灯 的 人 做 什么 用 。

Oracle Span 1:  人 => 人
Oracle Span 2:  坐落 => 坐落-01
Oracle Span 3:  天空 => 天空
Oracle Span 4:  小 => 小-01
Oracle Span 5:  居民 => 居民
Oracle Span 6:  房屋 => 房屋
Oracle Span 7:  某 => 某
Oracle Span 8:  灯 => 灯
Oracle Span 9:  点 => 点-01
Oracle Span 10:  王子 => 王子
Oracle Span 11:  行星 => 行星
Oracle Span 12:  要 => 要-05
Oracle Span 13:  角落 => 角落
Oracle Span 14:  解释 => 解释-01
Oracle Span 15:  路灯 => 路灯
Oracle Span 16:  这个 => 这个
Spans:
Span 36-37:  人 => 人
Span 9-10:  坐落 => 坐落-01
Span 11-12:  天空 => 天空
Span 0-1:  小 => 小-01
Span 21-22:  居民 => 居民
Span 18-19:  房屋 => 房屋
Span 12-13:  某 => 某
Span 34-35:  灯 => 灯
Span 33-34:  点 => 点-01
Span 1-2:  王子 => 王子
Span 23-24:  行星 => 行星
Span 26-27:  要 => 要-05
Span 14-15:  角落 => 角落
Span 4-5:  解释 => 解释-01
Span 29-30:  路灯 => 路灯
Span 8-9:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 36-37:  人 => 人
Oracle Span 9-10:  坐落 => 坐落-01
Oracle Span 11-12:  天空 => 天空
Oracle Span 0-1:  小 => 小-01
Oracle Span 21-22:  居民 => 居民
Oracle Span 18-19:  房屋 => 房屋
Oracle Span 12-13:  某 => 某
Oracle Span 34-35:  灯 => 灯
Oracle Span 33-34:  点 => 点-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 23-24:  行星 => 行星
Oracle Span 26-27:  要 => 要-05
Oracle Span 14-15:  角落 => 角落
Oracle Span 4-5:  解释 => 解释-01
Oracle Span 29-30:  路灯 => 路灯
Oracle Span 8-9:  这个 => 这个

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	解释	_	VV	VV	_	0	root	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	通	_	VV	VV	_	5	ccomp	_	_
8	：	_	PU	PU	_	5	punct	_	_
9	这个	_	NN	NN	_	10	nn	_	_
10	坐落	_	NN	NN	_	38	nsubj	_	_
11	在	_	P	P	_	38	prep	_	_
12	天空	_	VV	VV	_	24	rcmod	_	_
13	某	_	DT	DT	_	15	det	_	_
14	一	_	CD	CD	_	13	dep	_	_
15	角落	_	NN	NN	_	12	dobj	_	_
16	,	_	PU	PU	_	12	punct	_	_
17	既	_	CC	CC	_	12	cc	_	_
18	没有	_	VE	VE	_	12	conj	_	_
19	房屋	_	NN	NN	_	18	dobj	_	_
20	又	_	AD	AD	_	21	advmod	_	_
21	没有	_	VE	VE	_	18	dep	_	_
22	居民	_	NN	NN	_	21	dobj	_	_
23	的	_	DEC	DEC	_	12	cpm	_	_
24	行星	_	NN	NN	_	25	lobj	_	_
25	上	_	LC	LC	_	11	plmod	_	_
26	,	_	PU	PU	_	38	punct	_	_
27	要	_	VV	VV	_	38	conj	_	_
28	一	_	CD	CD	_	29	nummod	_	_
29	盏	_	NN	NN	_	30	nn	_	_
30	路灯	_	NN	NN	_	35	conj	_	_
31	和	_	CC	CC	_	35	cc	_	_
32	一	_	CD	CD	_	33	nummod	_	_
33	个	_	M	M	_	35	clf	_	_
34	点	_	NN	NN	_	35	nn	_	_
35	灯	_	NN	NN	_	37	assmod	_	_
36	的	_	DEG	DEG	_	35	assm	_	_
37	人	_	NN	NN	_	27	dobj	_	_
38	做	_	VV	VV	_	5	conj	_	_
39	什么	_	DT	DT	_	40	det	_	_
40	用	_	NN	NN	_	38	dobj	_	_
41	。	_	PU	PU	_	5	punct	_	_
42	王子	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x29 / 解释-01, arg0, x31 / 王子)
(x29 / 解释-01, arg1, x33 / 要-05)
(x31 / 王子, mod, x32 / 小-01)
(x33 / 要-05, location, x43 / 行星)
(x38 / 点-01, arg0, x37 / 人)
(x38 / 点-01, arg1, x39 / 灯)
(x43 / 行星, mod, x48 / 这个)
(x44 / 坐落-01, arg0, x43 / 行星)
(x44 / 坐落-01, arg1, x45 / 角落)
(x45 / 角落, mod, x46 / 某)
(x47 / 天空, part, x45 / 角落)

Input(Some(Graph((possible :arg0 (解释-01 :arg1 (要-05 :location (行星 :arg0-of (有-03 :polarity - :arg1 (and :op 房屋 :op 居民)) :mod 这个 :arg0-of (坐落-01 :arg1 (角落 :part-of 天空 :mod 某))) :purpose amr-unknown :arg1 (and :op (路灯 :quant 1) :op (人 :quant 1 :arg0-of (点-01 :arg1 灯)))) :arg0 (王子 :mod 小-01) :polarity -)),ArrayBuffer(Span(4,5,List(0),解释,解释-01,false), Span(26,27,List(1),要,要-05,false), Span(23,24,List(2),行星,行星,false), Span(18,19,List(3),房屋,房屋,false), Span(21,22,List(4),居民,居民,false), Span(8,9,List(5),这个,这个,false), Span(9,10,List(6),坐落,坐落-01,false), Span(14,15,List(7),角落,角落,false), Span(11,12,List(8),天空,天空,false), Span(12,13,List(9),某,某,false), Span(29,30,List(10),路灯,路灯,false), Span(36,37,List(11),人,人,false), Span(33,34,List(12),点,点-01,false), Span(34,35,List(13),灯,灯,false), Span(1,2,List(14),王子,王子,false), Span(0,1,List(15),小,小-01,false)),Map(2 -> 行星, 5 -> 这个, 12 -> 点-01, 15 -> 小-01, 8 -> 天空, 7 -> 角落, 1 -> 要-05, 4 -> 居民, 11 -> 人, 14 -> 王子, 6 -> 坐落-01, 9 -> 某, 0 -> 解释-01, 10 -> 路灯, 3 -> 房屋, 13 -> 灯),Map(x52 -> 房屋, x46 -> 某, x37 -> 人, x43 -> 行星, x31 -> 王子, x39 -> 灯, x45 -> 角落, x48 -> 这个, x33 -> 要-05, x38 -> 点-01, x44 -> 坐落-01, x32 -> 小-01, x47 -> 天空, x53 -> 居民, x29 -> 解释-01, x35 -> 路灯))),[Ljava.lang.String;@1f443fae,Annotation([Ljava.lang.String;@73ba6fe6,[Ljava.lang.String;@79ab34c1,[Ljava.lang.String;@1698d7c0),Annotation([Ljava.lang.String;@281f23f2,[Ljava.lang.String;@87abc48,[Ledu.cmu.lti.nlp.amr.Dependency;@28d79cba),Annotation([Ljava.lang.String;@782168b7,[Ljava.lang.String;@29f0c4f2,[Ljava.lang.String;@7435a578),Annotation([Ljava.lang.String;@6093d508,[Ljava.lang.String;@13047d7d,[Ledu.cmu.lti.nlp.amr.Entity;@3c7cfcbb))
AMR:
(x29 / 解释-01, value, x31 / 王子)
(x31 / 王子, mod, x32 / 小-01)
(x33 / 要-05, location, x43 / 行星)
(x35 / 路灯, poss, x33 / 要-05)
(x37 / 人, location, x39 / 灯)
(x38 / 点-01, ARG6, x39 / 灯)
(x38 / 点-01, purpose, x35 / 路灯)
(x43 / 行星, poss, x53 / 居民)
(x44 / 坐落-01, manner, x48 / 这个)
(x44 / 坐落-01, purpose, x29 / 解释-01)
(x44 / 坐落-01, purpose, x47 / 天空)
(x45 / 角落, mod, x46 / 某)
(x47 / 天空, part, x45 / 角落)
(x52 / 房屋, time, x45 / 角落)
(x53 / 居民, location, x52 / 房屋)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.2
WARNING: makeIds can't find span Id: 0.0.2.2.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.2.2.1.1
WARNING: makeIds can't find span Id: 0.0.2.2.1
WARNING: makeIds can't find span Id: 0.0.2.2.0
WARNING: makeIds can't find span Id: 0.0.2.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.2.0.0.1
WARNING: makeIds can't find span Id: 0.0.2.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.1.0
WARNING: makeIds can't find span Id: 0.0.2.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 91,488 microseconds
Sentence: 但 他 自己 猜想 ： “ 可能 这个 人 思想 不 正常 。

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  可能 => 可能-01
Oracle Span 4:  思想 => 思想
Oracle Span 5:  正常 => 正常-01
Oracle Span 6:  猜想 => 猜想-01
Spans:
Span 8-9:  人 => 人
Span 1-2:  他 => 他
Span 6-7:  可能 => 可能-01
Span 9-10:  思想 => 思想
Span 11-12:  正常 => 正常-01
Span 3-4:  猜想 => 猜想-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 1-2:  他 => 他
Oracle Span 6-7:  可能 => 可能-01
Oracle Span 9-10:  思想 => 思想
Oracle Span 11-12:  正常 => 正常-01
Oracle Span 3-4:  猜想 => 猜想-01

Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	3	dep	_	_
3	自己	_	PN	PN	_	4	nsubj	_	_
4	猜想	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	12	punct	_	_
7	可能	_	NN	NN	_	10	nn	_	_
8	这个	_	NN	NN	_	10	nn	_	_
9	人	_	NN	NN	_	10	nn	_	_
10	思想	_	NN	NN	_	12	nsubj	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	正常	_	VA	VA	_	4	ccomp	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 猜想-01, arg0, x3 / 他)
(x2 / 猜想-01, arg1, x4 / 可能-01)
(x4 / 可能-01, arg0, x5 / 正常-01)
(x5 / 正常-01, arg0, x7 / 思想)
(x7 / 思想, poss, x8 / 人)

Input(Some(Graph((contrast :arg2 (猜想-01 :arg1 (可能-01 :arg0 (正常-01 :arg0 (思想 :poss (人 :mod 这)) :polarity -)) :arg0 他)),ArrayBuffer(Span(3,4,List(0),猜想,猜想-01,false), Span(6,7,List(1),可能,可能-01,false), Span(11,12,List(2),正常,正常-01,false), Span(9,10,List(3),思想,思想,false), Span(8,9,List(4),人,人,false), Span(1,2,List(5),他,他,false)),Map(2 -> 正常-01, 5 -> 他, 1 -> 可能-01, 4 -> 人, 0 -> 猜想-01, 3 -> 思想),Map(x2 -> 猜想-01, x5 -> 正常-01, x8 -> 人, x7 -> 思想, x4 -> 可能-01, x3 -> 他))),[Ljava.lang.String;@65bb9029,Annotation([Ljava.lang.String;@1bfe3203,[Ljava.lang.String;@2b214b94,[Ljava.lang.String;@70e3f36f),Annotation([Ljava.lang.String;@49601f82,[Ljava.lang.String;@23e44287,[Ledu.cmu.lti.nlp.amr.Dependency;@2b8d084),Annotation([Ljava.lang.String;@6daf2337,[Ljava.lang.String;@24fabd0f,[Ljava.lang.String;@250b236d),Annotation([Ljava.lang.String;@61f3fbb8,[Ljava.lang.String;@7551da2a,[Ledu.cmu.lti.nlp.amr.Entity;@432034a))
AMR:
(x2 / 猜想-01, prep-on-behalf, x3 / 他)
(x4 / 可能-01, prep-on-behalf, x2 / 猜想-01)
(x4 / 可能-01, subset, x5 / 正常-01)
(x7 / 思想, poss, x8 / 人)
(x7 / 思想, prep-on-behalf, x5 / 正常-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,864 microseconds
Sentence: 但 他 比起 国王 ， 比 起 那个 爱 虚荣 的 人 ， 那个 实业家 和 酒鬼 ， 却 要 好 些 。

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  国王 => 国王
Oracle Span 4:  好 => 好-01
Oracle Span 5:  实业家 => 实业家
Oracle Span 6:  爱 => 爱-01
Oracle Span 7:  虚荣 => 虚荣
Oracle Span 8:  要 => 要-01
Oracle Span 9:  酒鬼 => 酒鬼
Spans:
Span 11-12:  人 => 人
Span 1-2:  他 => 他
Span 3-4:  国王 => 国王
Span 20-21:  好 => 好-01
Span 14-15:  实业家 => 实业家
Span 8-9:  爱 => 爱-01
Span 9-10:  虚荣 => 虚荣
Span 19-20:  要 => 要-01
Span 16-17:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  人 => 人
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  国王 => 国王
Oracle Span 20-21:  好 => 好-01
Oracle Span 14-15:  实业家 => 实业家
Oracle Span 8-9:  爱 => 爱-01
Oracle Span 9-10:  虚荣 => 虚荣
Oracle Span 19-20:  要 => 要-01
Oracle Span 16-17:  酒鬼 => 酒鬼

Dependencies:
1	但	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	比起	_	VV	VV	_	0	root	_	_
4	国王	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	比	_	P	P	_	21	prep	_	_
7	起	_	VV	VV	_	6	pccomp	_	_
8	那个	_	AD	AD	_	9	advmod	_	_
9	爱	_	VV	VV	_	12	rcmod	_	_
10	虚荣	_	NN	NN	_	9	dobj	_	_
11	的	_	DEC	DEC	_	9	cpm	_	_
12	人	_	NN	NN	_	7	dobj	_	_
13	,	_	PU	PU	_	7	punct	_	_
14	那个	_	VV	VV	_	7	conj	_	_
15	实业家	_	NN	NN	_	17	conj	_	_
16	和	_	CC	CC	_	17	cc	_	_
17	酒鬼	_	NN	NN	_	14	dobj	_	_
18	,	_	PU	PU	_	21	punct	_	_
19	却	_	AD	AD	_	21	advmod	_	_
20	要	_	AD	AD	_	21	advmod	_	_
21	好	_	VA	VA	_	3	dep	_	_
22	些	_	M	M	_	21	dep	_	_
23	。	_	PU	PU	_	3	punct	_	_
24	他	_	PN	PN	_	21	xsubj	_	_

Oracle:
(x15 / 要-01, arg0, x16 / 好-01)
(x16 / 好-01, arg0, x17 / 他)
(x22 / 爱-01, arg0, x20 / 人)
(x22 / 爱-01, arg1, x23 / 虚荣)

Input(Some(Graph((contrast :arg2 (要-01 :arg0 (好-01 :arg0 (他 :compared-to (and :op 国王 :op (人 :arg0-of (爱-01 :arg1 虚荣) :mod 那) :op (实业家 :mod 那) :op 酒鬼))))),ArrayBuffer(Span(19,20,List(0),要,要-01,false), Span(20,21,List(1),好,好-01,false), Span(1,2,List(2),他,他,false), Span(3,4,List(3),国王,国王,false), Span(11,12,List(4),人,人,false), Span(8,9,List(5),爱,爱-01,false), Span(9,10,List(6),虚荣,虚荣,false), Span(14,15,List(7),实业家,实业家,false), Span(16,17,List(8),酒鬼,酒鬼,false)),Map(2 -> 他, 5 -> 爱-01, 8 -> 酒鬼, 7 -> 实业家, 1 -> 好-01, 4 -> 人, 6 -> 虚荣, 0 -> 要-01, 3 -> 国王),Map(x22 -> 爱-01, x16 -> 好-01, x19 -> 国王, x15 -> 要-01, x24 -> 实业家, x23 -> 虚荣, x26 -> 酒鬼, x20 -> 人, x17 -> 他))),[Ljava.lang.String;@78de58ea,Annotation([Ljava.lang.String;@60e5272,[Ljava.lang.String;@7d755813,[Ljava.lang.String;@69c93ca4),Annotation([Ljava.lang.String;@63da207f,[Ljava.lang.String;@173373b4,[Ledu.cmu.lti.nlp.amr.Dependency;@40d10481),Annotation([Ljava.lang.String;@60dd3c23,[Ljava.lang.String;@52b6319f,[Ljava.lang.String;@5e9456ae),Annotation([Ljava.lang.String;@16a9a4f1,[Ljava.lang.String;@1f1cae23,[Ledu.cmu.lti.nlp.amr.Entity;@7c455e96))
AMR:
(x15 / 要-01, ARG2, x16 / 好-01)
(x15 / 要-01, prep-on-behalf, x26 / 酒鬼)
(x19 / 国王, prep-on-behalf, x17 / 他)
(x22 / 爱-01, prep-on-behalf, x19 / 国王)
(x22 / 爱-01, prep-on-behalf, x20 / 人)
(x22 / 爱-01, quant, x23 / 虚荣)
(x24 / 实业家, mod, x26 / 酒鬼)
(x24 / 实业家, prep-on-behalf, x20 / 人)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.0.3
Decoded in 24,932 microseconds
Sentence: 至少 他 的 工作 还 有点 意义 。

Oracle Span 1:  他 => 他
Oracle Span 2:  工作 => 工作
Oracle Span 3:  意义 => 意义
Oracle Span 4:  至少 => 至少
Oracle Span 5:  还 => 还
Spans:
Span 1-2:  他 => 他
Span 3-4:  工作 => 工作
Span 6-7:  意义 => 意义
Span 0-1:  至少 => 至少
Span 4-5:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  工作 => 工作
Oracle Span 6-7:  意义 => 意义
Oracle Span 0-1:  至少 => 至少
Oracle Span 4-5:  还 => 还

Dependencies:
1	至少	_	AD	AD	_	6	advmod	_	_
2	他	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	工作	_	NN	NN	_	6	prep	_	_
5	还	_	AD	AD	_	6	advmod	_	_
6	有点	_	VV	VV	_	0	root	_	_
7	意义	_	NN	NN	_	6	dobj	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 工作, poss, x3 / 他)

Input(Some(Graph((有-05 :arg0 (工作 :poss 他) :manner 还 :manner 至少 :arg1 (意义 :quant 一点)),ArrayBuffer(Span(3,4,List(0),工作,工作,false), Span(1,2,List(1),他,他,false), Span(4,5,List(2),还,还,false), Span(0,1,List(3),至少,至少,false), Span(6,7,List(4),意义,意义,false)),Map(2 -> 还, 1 -> 他, 4 -> 意义, 0 -> 工作, 3 -> 至少),Map(x2 -> 工作, x5 -> 至少, x4 -> 还, x3 -> 他, x6 -> 意义))),[Ljava.lang.String;@985696,Annotation([Ljava.lang.String;@5bcde458,[Ljava.lang.String;@215a34b4,[Ljava.lang.String;@77bd7fe7),Annotation([Ljava.lang.String;@35d3ab60,[Ljava.lang.String;@10876a6,[Ledu.cmu.lti.nlp.amr.Dependency;@71870da7),Annotation([Ljava.lang.String;@6dd91637,[Ljava.lang.String;@45792847,[Ljava.lang.String;@706cb08),Annotation([Ljava.lang.String;@4e25147a,[Ljava.lang.String;@6b68cb27,[Ledu.cmu.lti.nlp.amr.Entity;@675ffd1d))
AMR:
(x2 / 工作, location, x6 / 意义)
(x2 / 工作, poss, x3 / 他)
(x4 / 还, ARG3, x2 / 工作)
(x5 / 至少, ARG2, x3 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.3
Decoded in 11,004 microseconds
Sentence: 当 他 点着 了 他 的 路灯 时 ， 就 象 他 增添 了 一 颗 星星 ， 或是 一 朵 花 。

Oracle Span 1:  他 => 他
Oracle Span 2:  增添 => 增添-01
Oracle Span 3:  就 => 就
Oracle Span 4:  星星 => 星星
Oracle Span 5:  点着 => 点着-01
Oracle Span 6:  花 => 花
Oracle Span 7:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 12-13:  增添 => 增添-01
Span 9-10:  就 => 就
Span 16-17:  星星 => 星星
Span 2-3:  点着 => 点着-01
Span 21-22:  花 => 花
Span 6-7:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 12-13:  增添 => 增添-01
Oracle Span 9-10:  就 => 就
Oracle Span 16-17:  星星 => 星星
Oracle Span 2-3:  点着 => 点着-01
Oracle Span 21-22:  花 => 花
Oracle Span 6-7:  路灯 => 路灯

Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	点着	_	VV	VV	_	8	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	路灯	_	NN	NN	_	3	dobj	_	_
8	时	_	LC	LC	_	1	plmod	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	象	_	P	P	_	13	prep	_	_
12	他	_	PN	PN	_	11	pobj	_	_
13	增添	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	颗	_	M	M	_	17	clf	_	_
17	星星	_	NN	NN	_	13	dobj	_	_
18	,	_	PU	PU	_	13	punct	_	_
19	或是	_	VV	VV	_	13	dep	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	朵	_	M	M	_	22	clf	_	_
22	花	_	NN	NN	_	19	dobj	_	_
23	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 点着-01, arg0, x2 / 他)
(x0 / 点着-01, arg1, x3 / 路灯)

Input(Some(Graph((点着-01 :arg0-of (像-01 :manner 就 :arg1 (增添-01 :arg1 (or :op (星星 :quant 1) :op (花 :quant 1)))) :arg1 (路灯 :poss x2) :arg0 他),ArrayBuffer(Span(2,3,List(0),点着,点着-01,false), Span(9,10,List(1),就,就,false), Span(12,13,List(2),增添,增添-01,false), Span(16,17,List(3),星星,星星,false), Span(21,22,List(4),花,花,false), Span(6,7,List(5),路灯,路灯,false), Span(1,2,List(6),他,他,false)),Map(2 -> 增添-01, 5 -> 路灯, 1 -> 就, 4 -> 花, 6 -> 他, 0 -> 点着-01, 3 -> 星星),Map(x2 -> 他, x7 -> 增添-01, x3 -> 路灯, x11 -> 花, x6 -> 就, x9 -> 星星, x0 -> 点着-01))),[Ljava.lang.String;@56303475,Annotation([Ljava.lang.String;@30506c0d,[Ljava.lang.String;@1dcca8d3,[Ljava.lang.String;@5631962),Annotation([Ljava.lang.String;@52a70627,[Ljava.lang.String;@6124287a,[Ledu.cmu.lti.nlp.amr.Dependency;@19569ebd),Annotation([Ljava.lang.String;@4632cfc,[Ljava.lang.String;@6e1f8469,[Ljava.lang.String;@2e380628),Annotation([Ljava.lang.String;@3b6c624,[Ljava.lang.String;@1eaf1e62,[Ledu.cmu.lti.nlp.amr.Entity;@c81fd12))
AMR:
(x0 / 点着-01, op, x3 / 路灯)
(x0 / 点着-01, prep-from, x2 / 他)
(x0 / 点着-01, purpose, x7 / 增添-01)
(x6 / 就, domain, x11 / 花)
(x6 / 就, domain, x9 / 星星)
(x7 / 增添-01, location, x6 / 就)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 25,031 microseconds
Sentence: 当 他 熄灭 了 路灯 时 ， 就 象 让 星星 或 花朵 睡 着 了 似的 。

Oracle Span 1:  他 => 他
Oracle Span 2:  就 => 就
Oracle Span 3:  星星 => 星星
Oracle Span 4:  熄灭 => 熄灭-01
Oracle Span 5:  花朵 => 花朵
Oracle Span 6:  让 => 让-02
Oracle Span 7:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 7-8:  就 => 就
Span 10-11:  星星 => 星星
Span 2-3:  熄灭 => 熄灭-01
Span 12-13:  花朵 => 花朵
Span 9-10:  让 => 让-02
Span 4-5:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 7-8:  就 => 就
Oracle Span 10-11:  星星 => 星星
Oracle Span 2-3:  熄灭 => 熄灭-01
Oracle Span 12-13:  花朵 => 花朵
Oracle Span 9-10:  让 => 让-02
Oracle Span 4-5:  路灯 => 路灯

Dependencies:
1	当	_	P	P	_	15	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	熄灭	_	VV	VV	_	6	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	路灯	_	NN	NN	_	3	dobj	_	_
6	时	_	LC	LC	_	1	plmod	_	_
7	,	_	PU	PU	_	15	punct	_	_
8	就	_	AD	AD	_	15	advmod	_	_
9	象	_	P	P	_	15	prep	_	_
10	让	_	VV	VV	_	9	pccomp	_	_
11	星星	_	NN	NN	_	13	conj	_	_
12	或	_	CC	CC	_	13	cc	_	_
13	花朵	_	NN	NN	_	10	dobj	_	_
14	睡	_	VV	VV	_	10	dep	_	_
15	着	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	似的	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 熄灭-01, arg0, x2 / 他)
(x0 / 熄灭-01, arg1, x3 / 路灯)

Input(Some(Graph((熄灭-01 :arg0-of (像-01 :manner 就 :arg1 (让-02 :arg2 (睡着-01 :arg0 x7) :arg1 (or :op 星星 :op 花朵))) :arg1 路灯 :arg0 他),ArrayBuffer(Span(2,3,List(0),熄灭,熄灭-01,false), Span(7,8,List(1),就,就,false), Span(9,10,List(2),让,让-02,false), Span(10,11,List(3),星星,星星,false), Span(12,13,List(4),花朵,花朵,false), Span(4,5,List(5),路灯,路灯,false), Span(1,2,List(6),他,他,false)),Map(2 -> 让-02, 5 -> 路灯, 1 -> 就, 4 -> 花朵, 6 -> 他, 0 -> 熄灭-01, 3 -> 星星),Map(x2 -> 他, x5 -> 就, x8 -> 星星, x3 -> 路灯, x6 -> 让-02, x9 -> 花朵, x0 -> 熄灭-01))),[Ljava.lang.String;@62e6a3ec,Annotation([Ljava.lang.String;@5754de72,[Ljava.lang.String;@31ee96f4,[Ljava.lang.String;@320494b6),Annotation([Ljava.lang.String;@652ab8d9,[Ljava.lang.String;@14fc5d40,[Ledu.cmu.lti.nlp.amr.Dependency;@51e0301d),Annotation([Ljava.lang.String;@47d7bfb3,[Ljava.lang.String;@770b3be0,[Ljava.lang.String;@1eb6e1c),Annotation([Ljava.lang.String;@51dbd6e4,[Ljava.lang.String;@2b8bd14b,[Ledu.cmu.lti.nlp.amr.Entity;@5f13be1))
AMR:
(x0 / 熄灭-01, mod, x3 / 路灯)
(x0 / 熄灭-01, prep-from, x2 / 他)
(x6 / 让-02, snt3, x9 / 花朵)
(x6 / 让-02, time, x3 / 路灯)
(x8 / 星星, ARG6, x6 / 让-02)
(x8 / 星星, part, x5 / 就)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,134 microseconds
Sentence: 这 差事 真 美妙 ，

Oracle Span 1:  差事 => 差事
Oracle Span 2:  真 => 真
Oracle Span 3:  美妙 => 美妙-01
Oracle Span 4:  这 => 这
Spans:
Span 1-2:  差事 => 差事
Span 2-3:  真 => 真
Span 3-4:  美妙 => 美妙-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  差事 => 差事
Oracle Span 2-3:  真 => 真
Oracle Span 3-4:  美妙 => 美妙-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	差事	_	NN	NN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	美妙	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 美妙-01, arg0, x3 / 差事)
(x0 / 美妙-01, degree, x2 / 真)
(x3 / 差事, mod, x4 / 这)

Input(Some(Graph((美妙-01 :arg0 (差事 :mod 这) :degree 真),ArrayBuffer(Span(3,4,List(0),美妙,美妙-01,false), Span(1,2,List(1),差事,差事,false), Span(0,1,List(2),这,这,false), Span(2,3,List(3),真,真,false)),Map(2 -> 这, 1 -> 差事, 0 -> 美妙-01, 3 -> 真),Map(x2 -> 真, x4 -> 这, x3 -> 差事, x0 -> 美妙-01))),[Ljava.lang.String;@5f303ecd,Annotation([Ljava.lang.String;@50d3bf39,[Ljava.lang.String;@25a73de1,[Ljava.lang.String;@29852487),Annotation([Ljava.lang.String;@771db12c,[Ljava.lang.String;@3afae281,[Ledu.cmu.lti.nlp.amr.Dependency;@26ae880a),Annotation([Ljava.lang.String;@260f2144,[Ljava.lang.String;@3c017078,[Ljava.lang.String;@51827393),Annotation([Ljava.lang.String;@3be4f71,[Ljava.lang.String;@5c645b43,[Ledu.cmu.lti.nlp.amr.Entity;@6bd16207))
AMR:
(x0 / 美妙-01, degree, x2 / 真)
(x0 / 美妙-01, mode, x3 / 差事)
(x3 / 差事, mod, x4 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,882 microseconds
Sentence: 就 是 真正 有用 的 了 。 ”

Oracle Span 1:  就 => 就
Oracle Span 2:  有用 => 有用-01
Oracle Span 3:  真正 => 真正-01
Spans:
Span 0-1:  就 => 就
Span 3-4:  有用 => 有用-01
Span 2-3:  真正 => 真正-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 3-4:  有用 => 有用-01
Oracle Span 2-3:  真正 => 真正-01

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	真正	_	AD	AD	_	4	advmod	_	_
4	有用	_	VV	VV	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	了	_	SP	SP	_	2	dep	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 有用-01, degree, x12 / 真正-01)
(x11 / 有用-01, manner, x13 / 就)

Input(Some(Graph((say :arg1 (有用-01 :manner 就 :degree 真正-01)),ArrayBuffer(Span(3,4,List(0),有用,有用-01,false), Span(0,1,List(1),就,就,false), Span(2,3,List(2),真正,真正-01,false)),Map(2 -> 真正-01, 1 -> 就, 0 -> 有用-01),Map(x13 -> 就, x12 -> 真正-01, x11 -> 有用-01))),[Ljava.lang.String;@298d9a05,Annotation([Ljava.lang.String;@58399d82,[Ljava.lang.String;@26f96b85,[Ljava.lang.String;@46d8f407),Annotation([Ljava.lang.String;@3c0036b,[Ljava.lang.String;@17814b1c,[Ledu.cmu.lti.nlp.amr.Dependency;@7ac9af2a),Annotation([Ljava.lang.String;@7bb004b8,[Ljava.lang.String;@78e89bfe,[Ljava.lang.String;@652ce654),Annotation([Ljava.lang.String;@522ba524,[Ljava.lang.String;@29c5ee1d,[Ledu.cmu.lti.nlp.amr.Entity;@15cea7b0))
AMR:
(x11 / 有用-01, degree, x12 / 真正-01)
(x11 / 有用-01, manner, x13 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,615 microseconds
Sentence: 小 王子 一 到 了 这个 行星 上 ， 就 很 尊敬 地 向 点 路灯 的 人 打 招呼 ：

Oracle Span 1:  人 => 人
Oracle Span 2:  到 => 到-01
Oracle Span 3:  尊敬 => 尊敬-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  就 => 就
Oracle Span 6:  很 => 很
Oracle Span 7:  点 => 点-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  行星 => 行星
Oracle Span 10:  路灯 => 路灯
Spans:
Span 17-18:  人 => 人
Span 3-4:  到 => 到-01
Span 11-12:  尊敬 => 尊敬-01
Span 0-1:  小 => 小-01
Span 9-10:  就 => 就
Span 10-11:  很 => 很
Span 14-15:  点 => 点-01
Span 1-2:  王子 => 王子
Span 6-7:  行星 => 行星
Span 15-16:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  人 => 人
Oracle Span 3-4:  到 => 到-01
Oracle Span 11-12:  尊敬 => 尊敬-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  很 => 很
Oracle Span 14-15:  点 => 点-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 6-7:  行星 => 行星
Oracle Span 15-16:  路灯 => 路灯

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	一	_	AD	AD	_	4	advmod	_	_
4	到	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	行星	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	loc	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	就	_	AD	AD	_	16	advmod	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	尊敬	_	VV	VV	_	16	dep	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	向	_	P	P	_	16	prep	_	_
15	点	_	NN	NN	_	14	pobj	_	_
16	路灯	_	VV	VV	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	人	_	NN	NN	_	19	nsubj	_	_
19	打	_	VV	VV	_	4	conj	_	_
20	招呼	_	NN	NN	_	19	dobj	_	_
21	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 点-01, arg0, x10 / 人)
(x11 / 点-01, arg1, x12 / 路灯)
(x13 / 尊敬-01, degree, x16 / 很)
(x2 / 到-01, arg0, x3 / 王子)
(x2 / 到-01, arg1, x5 / 行星)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((and :op (到-01 :arg1 (行星 :mod 这) :arg0 (王子 :mod 小-01)) :op (打招呼-01 :arg0 x3 :arg1 (人 :arg0-of (点-01 :arg1 路灯)) :manner (尊敬-01 :degree 很 :arg1 x10 :arg0 x3) :manner 就)),ArrayBuffer(Span(3,4,List(0),到,到-01,false), Span(6,7,List(1),行星,行星,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(17,18,List(4),人,人,false), Span(14,15,List(5),点,点-01,false), Span(15,16,List(6),路灯,路灯,false), Span(11,12,List(7),尊敬,尊敬-01,false), Span(10,11,List(8),很,很,false), Span(9,10,List(9),就,就,false)),Map(2 -> 王子, 5 -> 点-01, 8 -> 很, 7 -> 尊敬-01, 1 -> 行星, 4 -> 人, 6 -> 路灯, 9 -> 就, 0 -> 到-01, 3 -> 小-01),Map(x16 -> 很, x10 -> 人, x2 -> 到-01, x5 -> 行星, x13 -> 尊敬-01, x12 -> 路灯, x4 -> 小-01, x11 -> 点-01, x3 -> 王子, x17 -> 就))),[Ljava.lang.String;@17d2ed1b,Annotation([Ljava.lang.String;@185f7840,[Ljava.lang.String;@1e6cc850,[Ljava.lang.String;@7e7f0f0a),Annotation([Ljava.lang.String;@7ec58feb,[Ljava.lang.String;@1dbb650b,[Ledu.cmu.lti.nlp.amr.Dependency;@656d10a4),Annotation([Ljava.lang.String;@63ec445c,[Ljava.lang.String;@3104351d,[Ljava.lang.String;@77d18d0b),Annotation([Ljava.lang.String;@7a344b65,[Ljava.lang.String;@7b7b3edb,[Ledu.cmu.lti.nlp.amr.Entity;@6b474074))
AMR:
(x10 / 人, mod, x12 / 路灯)
(x11 / 点-01, manner, x13 / 尊敬-01)
(x11 / 点-01, unit, x12 / 路灯)
(x13 / 尊敬-01, degree, x16 / 很)
(x13 / 尊敬-01, degree, x5 / 行星)
(x13 / 尊敬-01, manner, x17 / 就)
(x2 / 到-01, mode, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 行星, poss, x2 / 到-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.3
Decoded in 33,832 microseconds
Sentence: “ 早上 好 。

Oracle Span 1:  好 => 好-01
Oracle Span 2:  早上 => 早上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph((say :arg1 (好-01 :arg0 早上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 早上))),[Ljava.lang.String;@108531c2,Annotation([Ljava.lang.String;@48b22fd4,[Ljava.lang.String;@6a9d5dff,[Ljava.lang.String;@3b08f438),Annotation([Ljava.lang.String;@2bac9ba,[Ljava.lang.String;@5b2f8ab6,[Ledu.cmu.lti.nlp.amr.Dependency;@5bdd5689),Annotation([Ljava.lang.String;@2788d0fe,[Ljava.lang.String;@73ab3aac,[Ljava.lang.String;@54f66455),Annotation([Ljava.lang.String;@65ae095c,[Ljava.lang.String;@4c03a37,[Ledu.cmu.lti.nlp.amr.Entity;@2e140e59))
AMR:
(x5 / 好-01, beneficiary, x6 / 早上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,800 microseconds
Sentence: —— 你 刚才 为什么 把 路灯 灭 了 呢 ？

Oracle Span 1:  你 => 你
Oracle Span 2:  刚才 => 刚才
Oracle Span 3:  灭 => 灭-01
Oracle Span 4:  路灯 => 路灯
Spans:
Span 1-2:  你 => 你
Span 2-3:  刚才 => 刚才
Span 6-7:  灭 => 灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  刚才 => 刚才
Oracle Span 6-7:  灭 => 灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	——	_	PU	PU	_	7	dep	_	_
2	你	_	PN	PN	_	7	nsubj	_	_
3	刚才	_	AD	AD	_	7	advmod	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	路灯	_	NN	NN	_	7	nsubj	_	_
7	灭	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	呢	_	SP	SP	_	7	dep	_	_
10	？	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 灭-01, arg0, x2 / 你)
(x0 / 灭-01, arg1, x3 / 路灯)
(x0 / 灭-01, time, x4 / 刚才)

Input(Some(Graph((灭-01 :mode interrogative :cause amr-unknown :time 刚才 :arg1 路灯 :arg0 你),ArrayBuffer(Span(6,7,List(0),灭,灭-01,false), Span(2,3,List(1),刚才,刚才,false), Span(5,6,List(2),路灯,路灯,false), Span(1,2,List(3),你,你,false)),Map(2 -> 路灯, 1 -> 刚才, 0 -> 灭-01, 3 -> 你),Map(x2 -> 你, x4 -> 刚才, x3 -> 路灯, x0 -> 灭-01))),[Ljava.lang.String;@49a71302,Annotation([Ljava.lang.String;@5cd61783,[Ljava.lang.String;@59429fac,[Ljava.lang.String;@57aa341b),Annotation([Ljava.lang.String;@26e412ef,[Ljava.lang.String;@4ae263bf,[Ledu.cmu.lti.nlp.amr.Dependency;@7103ab0),Annotation([Ljava.lang.String;@19ccca5,[Ljava.lang.String;@769d513,[Ljava.lang.String;@5e4fa1da),Annotation([Ljava.lang.String;@588cd519,[Ljava.lang.String;@3f92c349,[Ledu.cmu.lti.nlp.amr.Entity;@769a58e5))
AMR:
(x0 / 灭-01, ARG2, x3 / 路灯)
(x0 / 灭-01, time, x4 / 刚才)
(x4 / 刚才, conj-as-if, x2 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,800 microseconds
Sentence: —— 这 是 命令 。 ” 点灯 的 回答 道 。

Oracle Span 1:  命令 => 命令
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  这 => 这
Spans:
Span 3-4:  命令 => 命令
Span 8-9:  回答 => 回答-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  命令 => 命令
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	命令	_	NN	NN	_	7	nn	_	_
5	。	_	NN	NN	_	7	dep	_	_
6	”	_	PU	PU	_	7	punct	_	_
7	点灯	_	NN	NN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	回答	_	NN	NN	_	10	nn	_	_
10	道	_	NN	NN	_	3	attr	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 回答-01, arg1, x15 / 命令)
(x15 / 命令, domain, x16 / 这)

Input(Some(Graph((回答-01 :arg1 (命令 :domain 这) :arg0 (person :arg0-of (点-01 :arg1 灯))),ArrayBuffer(Span(8,9,List(0),回答,回答-01,false), Span(3,4,List(1),命令,命令,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 命令, 0 -> 回答-01),Map(x16 -> 这, x10 -> 回答-01, x15 -> 命令))),[Ljava.lang.String;@55f8669d,Annotation([Ljava.lang.String;@6be25526,[Ljava.lang.String;@42435b98,[Ljava.lang.String;@66ba7e45),Annotation([Ljava.lang.String;@70e02081,[Ljava.lang.String;@9d200de,[Ledu.cmu.lti.nlp.amr.Dependency;@511505e7),Annotation([Ljava.lang.String;@646811d6,[Ljava.lang.String;@15fdd1f2,[Ljava.lang.String;@cb0f763),Annotation([Ljava.lang.String;@7573e12f,[Ljava.lang.String;@51b1a8f6,[Ledu.cmu.lti.nlp.amr.Entity;@2a389173))
AMR:
(x10 / 回答-01, ARG2, x15 / 命令)
(x15 / 命令, domain, x16 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 5,169 microseconds
Sentence: “ 早上 好 。 ”

Oracle Span 1:  好 => 好-01
Oracle Span 2:  早上 => 早上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph((say :arg1 (好-01 :arg0 早上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 早上))),[Ljava.lang.String;@213860b8,Annotation([Ljava.lang.String;@4ba89729,[Ljava.lang.String;@178270b2,[Ljava.lang.String;@795fd838),Annotation([Ljava.lang.String;@1b005a0b,[Ljava.lang.String;@141e879d,[Ledu.cmu.lti.nlp.amr.Dependency;@109d724c),Annotation([Ljava.lang.String;@1704f67f,[Ljava.lang.String;@e4d2696,[Ljava.lang.String;@6e0f7aad),Annotation([Ljava.lang.String;@15fb7a32,[Ljava.lang.String;@257cc1fc,[Ledu.cmu.lti.nlp.amr.Entity;@42e22a53))
AMR:
(x5 / 好-01, beneficiary, x6 / 早上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,752 microseconds
Sentence: “ 命令 是 什么 ？ ”

Oracle Span 1:  命令 => 命令
Spans:
Span 1-2:  命令 => 命令

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  命令 => 命令

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	命令	_	NN	NN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	PN	PN	_	3	attr	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 命令 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(1,2,List(0),命令,命令,false)),Map(0 -> 命令),Map(x8 -> 命令))),[Ljava.lang.String;@57adfab0,Annotation([Ljava.lang.String;@1949309d,[Ljava.lang.String;@5af97169,[Ljava.lang.String;@99a78d7),Annotation([Ljava.lang.String;@31da6b2e,[Ljava.lang.String;@61c76850,[Ledu.cmu.lti.nlp.amr.Dependency;@70242f38),Annotation([Ljava.lang.String;@2a22ad2b,[Ljava.lang.String;@48c3205a,[Ljava.lang.String;@121c54fa),Annotation([Ljava.lang.String;@4390f46e,[Ljava.lang.String;@7c6442c2,[Ledu.cmu.lti.nlp.amr.Entity;@2d746ce4))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,672 microseconds
Sentence: “ 就 是 熄掉 我 的 路灯 。

Oracle Span 1:  我 => 我
Oracle Span 2:  熄掉 => 熄掉-01
Oracle Span 3:  路灯 => 路灯
Spans:
Span 4-5:  我 => 我
Span 3-4:  熄掉 => 熄掉-01
Span 6-7:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  我 => 我
Oracle Span 3-4:  熄掉 => 熄掉-01
Oracle Span 6-7:  路灯 => 路灯

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	熄掉	_	NR	NR	_	7	nn	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	路灯	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 熄掉-01, arg1, x7 / 路灯)
(x7 / 路灯, poss, x8 / 我)

Input(Some(Graph((say :arg1 (熄掉-01 :arg1 (路灯 :poss 我))),ArrayBuffer(Span(3,4,List(0),熄掉,熄掉-01,false), Span(6,7,List(1),路灯,路灯,false), Span(4,5,List(2),我,我,false)),Map(2 -> 我, 1 -> 路灯, 0 -> 熄掉-01),Map(x8 -> 我, x7 -> 路灯, x6 -> 熄掉-01))),[Ljava.lang.String;@5dbf5634,Annotation([Ljava.lang.String;@1948ea69,[Ljava.lang.String;@47e4d9d0,[Ljava.lang.String;@49798e84),Annotation([Ljava.lang.String;@6ed06f69,[Ljava.lang.String;@3015db78,[Ledu.cmu.lti.nlp.amr.Dependency;@515ebef3),Annotation([Ljava.lang.String;@545607f2,[Ljava.lang.String;@39109136,[Ljava.lang.String;@27c04377),Annotation([Ljava.lang.String;@34dc85a,[Ljava.lang.String;@67403656,[Ledu.cmu.lti.nlp.amr.Entity;@5a6482a9))
AMR:
(x6 / 熄掉-01, purpose, x7 / 路灯)
(x7 / 路灯, poss, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,648 microseconds
Sentence: —— 晚上 好 。 ”

Oracle Span 1:  好 => 好-01
Oracle Span 2:  晚上 => 晚上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  晚上 => 晚上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  晚上 => 晚上

Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	晚上	_	NT	NT	_	3	tmod	_	_
3	好	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 晚上)

Input(Some(Graph((say :arg1 (好-01 :arg0 晚上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),晚上,晚上,false)),Map(1 -> 晚上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 晚上))),[Ljava.lang.String;@7f9ab969,Annotation([Ljava.lang.String;@12f8b1d8,[Ljava.lang.String;@746cd757,[Ljava.lang.String;@ae372b9),Annotation([Ljava.lang.String;@2098d37d,[Ljava.lang.String;@77b9d0c7,[Ledu.cmu.lti.nlp.amr.Dependency;@65fd6708),Annotation([Ljava.lang.String;@749ab7b4,[Ljava.lang.String;@127f9161,[Ljava.lang.String;@2bf94401),Annotation([Ljava.lang.String;@2532b351,[Ljava.lang.String;@4349754,[Ledu.cmu.lti.nlp.amr.Entity;@6a2eea2a))
AMR:
(x5 / 好-01, ARG1, x6 / 晚上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,974 microseconds
Sentence: 于是 他 又 点燃 了 路灯 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  点燃 => 点燃-01
Oracle Span 4:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  点燃 => 点燃-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  点燃 => 点燃-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	点燃	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x4 / 点燃-01, arg0, x5 / 他)
(x4 / 点燃-01, arg1, x7 / 路灯)
(x4 / 点燃-01, manner, x6 / 又)

Input(Some(Graph((temporal :arg2 (点燃-01 :arg1 路灯 :manner 又 :arg0 他)),ArrayBuffer(Span(3,4,List(0),点燃,点燃-01,false), Span(5,6,List(1),路灯,路灯,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他,他,false)),Map(2 -> 又, 1 -> 路灯, 0 -> 点燃-01, 3 -> 他),Map(x5 -> 他, x7 -> 路灯, x4 -> 点燃-01, x6 -> 又))),[Ljava.lang.String;@b967222,Annotation([Ljava.lang.String;@3b0ee03a,[Ljava.lang.String;@1ba05e38,[Ljava.lang.String;@6c298dc),Annotation([Ljava.lang.String;@3e7dfd44,[Ljava.lang.String;@723ed581,[Ledu.cmu.lti.nlp.amr.Dependency;@6b760460),Annotation([Ljava.lang.String;@796065aa,[Ljava.lang.String;@28a6301f,[Ljava.lang.String;@2c306a57),Annotation([Ljava.lang.String;@773e2eb5,[Ljava.lang.String;@d8948cd,[Ledu.cmu.lti.nlp.amr.Entity;@1436a7ab))
AMR:
(x4 / 点燃-01, ARG6, x5 / 他)
(x4 / 点燃-01, manner, x6 / 又)
(x4 / 点燃-01, mod, x7 / 路灯)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,961 microseconds
Sentence: “ 那么 为什么 你 又 把 它 点着 了 呢 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  又 => 又
Oracle Span 3:  它 => 它
Oracle Span 4:  点着 => 点着-01
Spans:
Span 3-4:  你 => 你
Span 4-5:  又 => 又
Span 6-7:  它 => 它
Span 7-8:  点着 => 点着-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 4-5:  又 => 又
Oracle Span 6-7:  它 => 它
Oracle Span 7-8:  点着 => 点着-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	为什么	_	AD	AD	_	8	advmod	_	_
4	你	_	PN	PN	_	8	prep	_	_
5	又	_	AD	AD	_	8	advmod	_	_
6	把	_	BA	BA	_	8	ba	_	_
7	它	_	PN	PN	_	8	nsubj	_	_
8	点着	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	呢	_	SP	SP	_	8	dep	_	_
11	？	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 点着-01, arg0, x11 / 你)
(x10 / 点着-01, arg1, x12 / 它)
(x10 / 点着-01, manner, x13 / 又)

Input(Some(Graph((say :arg1 (点着-01 :mode interrogative :cause amr-unknown :manner 又 :arg1 它 :arg0 你)),ArrayBuffer(Span(7,8,List(0),点着,点着-01,false), Span(4,5,List(1),又,又,false), Span(6,7,List(2),它,它,false), Span(3,4,List(3),你,你,false)),Map(2 -> 它, 1 -> 又, 0 -> 点着-01, 3 -> 你),Map(x10 -> 点着-01, x13 -> 又, x12 -> 它, x11 -> 你))),[Ljava.lang.String;@3b7b05a8,Annotation([Ljava.lang.String;@3d36dff4,[Ljava.lang.String;@7abe27bf,[Ljava.lang.String;@5b94ccbc),Annotation([Ljava.lang.String;@38a1c423,[Ljava.lang.String;@336365bc,[Ledu.cmu.lti.nlp.amr.Dependency;@38eb2fb0),Annotation([Ljava.lang.String;@4567e53d,[Ljava.lang.String;@7351a16e,[Ljava.lang.String;@5bb7643d),Annotation([Ljava.lang.String;@3ac04654,[Ljava.lang.String;@4074023c,[Ledu.cmu.lti.nlp.amr.Entity;@3ed0918d))
AMR:
(x10 / 点着-01, ARG3, x12 / 它)
(x10 / 点着-01, manner, x13 / 又)
(x10 / 点着-01, topic, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,024 microseconds
Sentence: “ 这 是 命令 。 ” 点灯 的 人 回答 道 。

Oracle Span 1:  人 => 人
Oracle Span 2:  命令 => 命令
Oracle Span 3:  回答 => 回答-01
Oracle Span 4:  这 => 这
Spans:
Span 8-9:  人 => 人
Span 3-4:  命令 => 命令
Span 9-10:  回答 => 回答-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 3-4:  命令 => 命令
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	命令	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_
7	点灯	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	道	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 人)
(x0 / 回答-01, arg1, x4 / 命令)
(x4 / 命令, domain, x5 / 这)

Input(Some(Graph((回答-01 :arg1 (命令 :domain 这) :arg0 (人 :arg0-of (点-01 :arg1 灯))),ArrayBuffer(Span(9,10,List(0),回答,回答-01,false), Span(3,4,List(1),命令,命令,false), Span(1,2,List(2),这,这,false), Span(8,9,List(3),人,人,false)),Map(2 -> 这, 1 -> 命令, 0 -> 回答-01, 3 -> 人),Map(x2 -> 人, x5 -> 这, x4 -> 命令, x0 -> 回答-01))),[Ljava.lang.String;@5e268ce6,Annotation([Ljava.lang.String;@66ec9390,[Ljava.lang.String;@6e91893,[Ljava.lang.String;@3c0fbd3a),Annotation([Ljava.lang.String;@562457e1,[Ljava.lang.String;@54562ea6,[Ledu.cmu.lti.nlp.amr.Dependency;@1a35993f),Annotation([Ljava.lang.String;@5b12012e,[Ljava.lang.String;@2f7dcef2,[Ljava.lang.String;@4a3be6a5),Annotation([Ljava.lang.String;@7cf162bc,[Ljava.lang.String;@3721177d,[Ledu.cmu.lti.nlp.amr.Entity;@766a4535))
AMR:
(x0 / 回答-01, ARG3, x2 / 人)
(x2 / 人, domain, x4 / 命令)
(x4 / 命令, domain, x5 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,388 microseconds
Sentence: “ 我 不 明白 。 ” 小 王子 说 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  明白 => 明白-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 6-7:  小 => 小-01
Span 1-2:  我 => 我
Span 3-4:  明白 => 明白-01
Span 7-8:  王子 => 王子
Span 8-9:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	明白	_	VV	VV	_	8	vmod	_	_
5	。	_	VA	VA	_	4	ccomp	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, arg0, x5 / 我)

Input(Some(Graph((说-01 :arg1 (明白-01 :polarity - :arg0 我) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),明白,明白-01,false), Span(1,2,List(2),我,我,false), Span(7,8,List(3),王子,王子,false), Span(6,7,List(4),小,小-01,false)),Map(2 -> 我, 1 -> 明白-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 我, x4 -> 明白-01, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@63718b93,Annotation([Ljava.lang.String;@14e2e1c3,[Ljava.lang.String;@2b4786dd,[Ljava.lang.String;@f202d6d),Annotation([Ljava.lang.String;@60e21209,[Ljava.lang.String;@630d1b2f,[Ledu.cmu.lti.nlp.amr.Dependency;@746b18fd),Annotation([Ljava.lang.String;@7a2e0858,[Ljava.lang.String;@aac3f4e,[Ljava.lang.String;@1f38957),Annotation([Ljava.lang.String;@2df3c564,[Ljava.lang.String;@2715644a,[Ledu.cmu.lti.nlp.amr.Entity;@4c2869a9))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, location, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, time, x5 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,083 microseconds
Sentence: “ 没 什么 要 明白 的 。 点灯 的 回答 说 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  明白 => 明白-01
Oracle Span 4:  要 => 要-03
Spans:
Span 2-3:  什么 => 什么
Span 9-10:  回答 => 回答-01
Span 4-5:  明白 => 明白-01
Span 3-4:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 4-5:  明白 => 明白-01
Oracle Span 3-4:  要 => 要-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没	_	VE	VE	_	0	root	_	_
3	什么	_	PN	PN	_	4	nsubj	_	_
4	要	_	VV	VV	_	2	dobj	_	_
5	明白	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	点灯	_	NR	NR	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	回答	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	2	dep	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 要-03, arg0, x15 / 明白-01)
(x15 / 明白-01, arg1, x17 / 什么)
(x9 / 回答-01, arg2, x14 / 要-03)

Input(Some(Graph((回答-01 :arg2 (要-03 :polarity - :arg0 (明白-01 :arg1 什么)) :arg0 (person :arg0-of (点-01 :arg1 灯))),ArrayBuffer(Span(9,10,List(0),回答,回答-01,false), Span(3,4,List(1),要,要-03,false), Span(4,5,List(2),明白,明白-01,false), Span(2,3,List(3),什么,什么,false)),Map(2 -> 明白-01, 1 -> 要-03, 0 -> 回答-01, 3 -> 什么),Map(x15 -> 明白-01, x14 -> 要-03, x17 -> 什么, x9 -> 回答-01))),[Ljava.lang.String;@518cf84a,Annotation([Ljava.lang.String;@62e7dffa,[Ljava.lang.String;@6edcd0d8,[Ljava.lang.String;@6136998b),Annotation([Ljava.lang.String;@57ce634f,[Ljava.lang.String;@b8a7e43,[Ledu.cmu.lti.nlp.amr.Dependency;@35835fa),Annotation([Ljava.lang.String;@56f71edb,[Ljava.lang.String;@7207cb51,[Ljava.lang.String;@2a27cb34),Annotation([Ljava.lang.String;@6892cc6f,[Ljava.lang.String;@6fd1660,[Ledu.cmu.lti.nlp.amr.Entity;@4a6c18ad))
AMR:
(x14 / 要-03, instrument, x17 / 什么)
(x14 / 要-03, prep-through, x15 / 明白-01)
(x9 / 回答-01, conj-as-if, x15 / 明白-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 8,795 microseconds
Sentence: 命令 就 是 命令 。 ”

Oracle Span 1:  命令 => 命令
Oracle Span 2:  命令 => 命令
Oracle Span 3:  就 => 就
Spans:
Span 0-1:  命令 => 命令
Span 3-4:  命令 => 命令
Span 1-2:  就 => 就

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  命令 => 命令
Oracle Span 3-4:  命令 => 命令
Oracle Span 1-2:  就 => 就

Dependencies:
1	命令	_	NN	NN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	命令	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 命令, domain, x7 / 命令)
(x6 / 命令, manner, x8 / 就)

Input(Some(Graph((say :arg1 (命令 :manner 就 :domain 命令)),ArrayBuffer(Span(0,1,List(0),命令,命令,false), Span(1,2,List(1),就,就,false), Span(3,4,List(2),命令,命令,false)),Map(2 -> 命令, 1 -> 就, 0 -> 命令),Map(x8 -> 就, x7 -> 命令, x6 -> 命令))),[Ljava.lang.String;@5e8604bf,Annotation([Ljava.lang.String;@20095ab4,[Ljava.lang.String;@4e2916c3,[Ljava.lang.String;@64aad6db),Annotation([Ljava.lang.String;@ae7950d,[Ljava.lang.String;@60d1b21f,[Ledu.cmu.lti.nlp.amr.Dependency;@66c83fc8),Annotation([Ljava.lang.String;@546621c4,[Ljava.lang.String;@621f89b8,[Ljava.lang.String;@f339eae),Annotation([Ljava.lang.String;@2822c6ff,[Ljava.lang.String;@4dafba3e,[Ledu.cmu.lti.nlp.amr.Entity;@53e3a87a))
AMR:
(x6 / 命令, manner, x8 / 就)
(x7 / 命令, domain, x6 / 命令)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,407 microseconds
Sentence: “ 早上 好 。 ”

Oracle Span 1:  好 => 好-01
Oracle Span 2:  早上 => 早上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph((say :arg1 (好-01 :arg0 早上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 早上))),[Ljava.lang.String;@40368a46,Annotation([Ljava.lang.String;@7e9da981,[Ljava.lang.String;@4ed38226,[Ljava.lang.String;@3d43fe),Annotation([Ljava.lang.String;@74ad8d05,[Ljava.lang.String;@676ff3b0,[Ledu.cmu.lti.nlp.amr.Dependency;@35ff8fc9),Annotation([Ljava.lang.String;@5fb7183b,[Ljava.lang.String;@476a736d,[Ljava.lang.String;@5f80fa43),Annotation([Ljava.lang.String;@16c8b7bd,[Ljava.lang.String;@7159139f,[Ledu.cmu.lti.nlp.amr.Entity;@65bcf7c2))
AMR:
(x5 / 好-01, beneficiary, x6 / 早上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,022 microseconds
Sentence: 于是 他 又 熄灭 了 路灯 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  熄灭 => 熄灭-01
Oracle Span 4:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  熄灭 => 熄灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	熄灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 熄灭-01, arg0, x4 / 他)
(x2 / 熄灭-01, arg1, x5 / 路灯)
(x2 / 熄灭-01, manner, x3 / 又)

Input(Some(Graph((temporal :arg2 (熄灭-01 :arg1 路灯 :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),熄灭,熄灭-01,false), Span(5,6,List(1),路灯,路灯,false), Span(1,2,List(2),他,他,false), Span(2,3,List(3),又,又,false)),Map(2 -> 他, 1 -> 路灯, 0 -> 熄灭-01, 3 -> 又),Map(x2 -> 熄灭-01, x5 -> 路灯, x4 -> 他, x3 -> 又))),[Ljava.lang.String;@3db64bd4,Annotation([Ljava.lang.String;@6e106680,[Ljava.lang.String;@576c5536,[Ljava.lang.String;@55ecbafe),Annotation([Ljava.lang.String;@5a8ba37c,[Ljava.lang.String;@37c2eacb,[Ledu.cmu.lti.nlp.amr.Dependency;@232cce0),Annotation([Ljava.lang.String;@32b9bd12,[Ljava.lang.String;@352e787a,[Ljava.lang.String;@159a48a6),Annotation([Ljava.lang.String;@15bc339,[Ljava.lang.String;@7e75bf2d,[Ledu.cmu.lti.nlp.amr.Entity;@385ef531))
AMR:
(x2 / 熄灭-01, ARG6, x4 / 他)
(x2 / 熄灭-01, manner, x3 / 又)
(x2 / 熄灭-01, mod, x5 / 路灯)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,218 microseconds
Sentence: 然后 他 拿 一 块 有 红 方格子 的 手绢 擦 着 额头 。

Oracle Span 1:  他 => 他
Oracle Span 2:  手绢 => 手绢
Oracle Span 3:  拿 => 拿-02
Oracle Span 4:  擦 => 擦-01
Oracle Span 5:  红 => 红-01
Oracle Span 6:  额头 => 额头
Spans:
Span 1-2:  他 => 他
Span 9-10:  手绢 => 手绢
Span 2-3:  拿 => 拿-02
Span 10-11:  擦 => 擦-01
Span 6-7:  红 => 红-01
Span 12-13:  额头 => 额头

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 9-10:  手绢 => 手绢
Oracle Span 2-3:  拿 => 拿-02
Oracle Span 10-11:  擦 => 擦-01
Oracle Span 6-7:  红 => 红-01
Oracle Span 12-13:  额头 => 额头

Dependencies:
1	然后	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	prep	_	_
3	拿	_	VV	VV	_	10	rcmod	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	块	_	M	M	_	3	range	_	_
6	有	_	VE	VE	_	3	conj	_	_
7	红	_	JJ	JJ	_	8	amod	_	_
8	方格子	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	3	cpm	_	_
10	手绢	_	NN	NN	_	11	nsubj	_	_
11	擦	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	额头	_	NN	NN	_	11	dobj	_	_
14	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x10 / 擦-01, arg1, x12 / 额头)
(x2 / 拿-02, arg0, x3 / 他)
(x2 / 拿-02, arg1, x4 / 手绢)
(x2 / 拿-02, purpose, x10 / 擦-01)

Input(Some(Graph((temporal :arg2 (拿-02 :purpose (擦-01 :arg1 额头 :arg0 x3) :arg1 (手绢 :mod (格子 :mod 方-01 :mod 红-01) :quant 1) :arg0 他)),ArrayBuffer(Span(2,3,List(0),拿,拿-02,false), Span(10,11,List(1),擦,擦-01,false), Span(12,13,List(2),额头,额头,false), Span(9,10,List(3),手绢,手绢,false), Span(6,7,List(4),红,红-01,false), Span(1,2,List(5),他,他,false)),Map(2 -> 额头, 5 -> 他, 1 -> 擦-01, 4 -> 红-01, 0 -> 拿-02, 3 -> 手绢),Map(x16 -> 红-01, x10 -> 擦-01, x2 -> 拿-02, x12 -> 额头, x4 -> 手绢, x3 -> 他))),[Ljava.lang.String;@7fc645e4,Annotation([Ljava.lang.String;@205b132e,[Ljava.lang.String;@73044cdf,[Ljava.lang.String;@3cbcd8f3),Annotation([Ljava.lang.String;@719843e5,[Ljava.lang.String;@9a2ec9b,[Ledu.cmu.lti.nlp.amr.Dependency;@58112bc4),Annotation([Ljava.lang.String;@2301b75,[Ljava.lang.String;@3104f7bd,[Ljava.lang.String;@2f5c1332),Annotation([Ljava.lang.String;@7ec25216,[Ljava.lang.String;@7cab1508,[Ledu.cmu.lti.nlp.amr.Entity;@6a84bc3f))
AMR:
(x10 / 擦-01, mod, x12 / 额头)
(x10 / 擦-01, time, x16 / 红-01)
(x2 / 拿-02, ARG1, x3 / 他)
(x2 / 拿-02, purpose, x10 / 擦-01)
(x2 / 拿-02, value, x4 / 手绢)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,302 microseconds
Sentence: “ 我 干 的 是 一 种 可怕 的 职业 。

Oracle Span 1:  可怕 => 可怕-01
Oracle Span 2:  干 => (thing :arg1-of 干-01)
Oracle Span 3:  我 => 我
Oracle Span 4:  职业 => 职业
Spans:
Span 7-8:  可怕 => 可怕-01
Span 2-3:  干 => (thing :arg1-of 干-01)
Span 1-2:  我 => 我
Span 9-10:  职业 => 职业

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 以前 还 说 得 过去 ，

Oracle Span 1:  以前 => 以前
Oracle Span 2:  说 => 说-01
Oracle Span 3:  还 => 还
Spans:
Span 0-1:  以前 => 以前
Span 2-3:  说 => 说-01
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  以前 => 以前
Oracle Span 2-3:  说 => 说-01
Oracle Span 1-2:  还 => 还

Dependencies:
1	以前	_	NT	NT	_	5	dep	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	说	_	VV	VV	_	5	dep	_	_
4	得	_	DER	DER	_	5	dep	_	_
5	过去	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 说-01, manner, x11 / 还)
(x9 / 说-01, time, x10 / 以前)

Input(Some(Graph((possible :arg0 (说-01 :manner 还 :time 以前)),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(1,2,List(1),还,还,false), Span(0,1,List(2),以前,以前,false)),Map(2 -> 以前, 1 -> 还, 0 -> 说-01),Map(x10 -> 以前, x11 -> 还, x9 -> 说-01))),[Ljava.lang.String;@4930539b,Annotation([Ljava.lang.String;@6d171ce0,[Ljava.lang.String;@22bd2039,[Ljava.lang.String;@705f83a7),Annotation([Ljava.lang.String;@3bb8aabc,[Ljava.lang.String;@6e1d4137,[Ledu.cmu.lti.nlp.amr.Dependency;@256a1825),Annotation([Ljava.lang.String;@29a4f594,[Ljava.lang.String;@57b75756,[Ljava.lang.String;@5327a06e),Annotation([Ljava.lang.String;@2679311f,[Ljava.lang.String;@287f7811,[Ledu.cmu.lti.nlp.amr.Entity;@451f87af))
AMR:
(x9 / 说-01, manner, x11 / 还)
(x9 / 说-01, time, x10 / 以前)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,162 microseconds
Sentence: 早上 熄灯 ， 晚上 点灯 ，

Oracle Span 1:  早上 => 早上
Oracle Span 2:  晚上 => 晚上
Spans:
Span 0-1:  早上 => 早上
Span 3-4:  晚上 => 晚上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  早上 => 早上
Oracle Span 3-4:  晚上 => 晚上

Dependencies:
1	早上	_	NT	NT	_	5	dep	_	_
2	熄灯	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	晚上	_	NT	NT	_	5	tmod	_	_
5	点灯	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((and :op (熄-01 :arg1 灯 :time 早上) :op (点-01 :arg1 灯 :time 晚上)),ArrayBuffer(Span(0,1,List(0),早上,早上,false), Span(3,4,List(1),晚上,晚上,false)),Map(1 -> 晚上, 0 -> 早上),Map(x8 -> 早上, x11 -> 晚上))),[Ljava.lang.String;@2b556bb2,Annotation([Ljava.lang.String;@44cb460e,[Ljava.lang.String;@17271176,[Ljava.lang.String;@2e3cdec2),Annotation([Ljava.lang.String;@2e34384c,[Ljava.lang.String;@3051e0b2,[Ledu.cmu.lti.nlp.amr.Dependency;@1f52eb6f),Annotation([Ljava.lang.String;@57d0fc89,[Ljava.lang.String;@58294867,[Ljava.lang.String;@67c277a0),Annotation([Ljava.lang.String;@6fc3e1a4,[Ljava.lang.String;@3fa76c61,[Ledu.cmu.lti.nlp.amr.Entity;@2d5f7182))
AMR:
(x8 / 早上, location, x11 / 晚上)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 3,759 microseconds
Sentence: 剩下 时间 ， 白天 我 就 休息 ， 夜晚 我 就 睡觉 … ”

Oracle Span 1:  休息 => 休息-01
Oracle Span 2:  剩下 => 剩下-01
Oracle Span 3:  夜晚 => 夜晚
Oracle Span 4:  我 => 我
Oracle Span 5:  时间 => 时间
Oracle Span 6:  白天 => 白天
Oracle Span 7:  睡觉 => 睡觉-01
Spans:
Span 6-7:  休息 => 休息-01
Span 0-1:  剩下 => 剩下-01
Span 8-9:  夜晚 => 夜晚
Span 4-5:  我 => 我
Span 1-2:  时间 => 时间
Span 3-4:  白天 => 白天
Span 11-12:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  休息 => 休息-01
Oracle Span 0-1:  剩下 => 剩下-01
Oracle Span 8-9:  夜晚 => 夜晚
Oracle Span 4-5:  我 => 我
Oracle Span 1-2:  时间 => 时间
Oracle Span 3-4:  白天 => 白天
Oracle Span 11-12:  睡觉 => 睡觉-01

Dependencies:
1	剩下	_	VV	VV	_	0	root	_	_
2	时间	_	NN	NN	_	1	dobj	_	_
3	,	_	PU	PU	_	1	punct	_	_
4	白天	_	VV	VV	_	1	conj	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	休息	_	VV	VV	_	4	ccomp	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	夜晚	_	AD	AD	_	12	advmod	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	就	_	AD	AD	_	12	advmod	_	_
12	睡觉	_	VV	VV	_	7	conj	_	_
13	…	_	NN	NN	_	12	dobj	_	_
14	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x46 / 剩下-01, arg0, x47 / 我)
(x46 / 剩下-01, arg1, x48 / 时间)
(x49 / 白天, part, x48 / 时间)

Input(Some(Graph((say :arg1 (and :op (condition :arg1 (剩下-01 :arg1 (时间 :part-of 白天) :arg0 我) :arg2 (休息-01 :arg0 x47)) :op (condition :arg1 (剩下-01 :arg0 x47 :arg1 (时间 :part-of 夜晚)) :arg2 (睡觉-01 :arg0 x47)))),ArrayBuffer(Span(0,1,List(0),剩下,剩下-01,false), Span(1,2,List(1),时间,时间,false), Span(3,4,List(2),白天,白天,false), Span(4,5,List(3),我,我,false), Span(6,7,List(4),休息,休息-01,false), Span(8,9,List(5),夜晚,夜晚,false), Span(11,12,List(6),睡觉,睡觉-01,false)),Map(2 -> 白天, 5 -> 夜晚, 1 -> 时间, 4 -> 休息-01, 6 -> 睡觉-01, 0 -> 剩下-01, 3 -> 我),Map(x46 -> 剩下-01, x49 -> 白天, x57 -> 睡觉-01, x48 -> 时间, x56 -> 夜晚, x50 -> 休息-01, x47 -> 我))),[Ljava.lang.String;@59546cfe,Annotation([Ljava.lang.String;@29ea78b1,[Ljava.lang.String;@2d2acd89,[Ljava.lang.String;@7baf6acf),Annotation([Ljava.lang.String;@1e6dad8,[Ljava.lang.String;@7b3315a5,[Ledu.cmu.lti.nlp.amr.Dependency;@8ed9cf),Annotation([Ljava.lang.String;@f72203,[Ljava.lang.String;@377008df,[Ljava.lang.String;@540dbda9),Annotation([Ljava.lang.String;@22bb5646,[Ljava.lang.String;@1be59f28,[Ledu.cmu.lti.nlp.amr.Entity;@2ce45a7b))
AMR:
(x46 / 剩下-01, ord, x48 / 时间)
(x46 / 剩下-01, prep-through, x50 / 休息-01)
(x49 / 白天, part, x48 / 时间)
(x49 / 白天, prep-at, x47 / 我)
(x50 / 休息-01, prep-through, x56 / 夜晚)
(x57 / 睡觉-01, time, x56 / 夜晚)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 22,555 microseconds
Sentence: “ 那么 ， 后来 命令 改变 了 ， 是 吗 ？ ”

Oracle Span 1:  命令 => 命令
Oracle Span 2:  改变 => 改变-01
Spans:
Span 4-5:  命令 => 命令
Span 5-6:  改变 => 改变-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  命令 => 命令
Oracle Span 5-6:  改变 => 改变-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	那么	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	后来	_	AD	AD	_	5	advmod	_	_
5	命令	_	VV	VV	_	0	root	_	_
6	改变	_	VV	VV	_	5	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	是	_	VC	VC	_	5	dep	_	_
10	吗	_	SP	SP	_	5	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 改变-01, arg1, x9 / 命令)

Input(Some(Graph((say :arg1 (temporal :arg2 (改变-01 :mode interrogative :arg1 命令))),ArrayBuffer(Span(5,6,List(0),改变,改变-01,false), Span(4,5,List(1),命令,命令,false)),Map(1 -> 命令, 0 -> 改变-01),Map(x8 -> 改变-01, x9 -> 命令))),[Ljava.lang.String;@153d4abb,Annotation([Ljava.lang.String;@6d4c273c,[Ljava.lang.String;@5a67e962,[Ljava.lang.String;@545e57d7),Annotation([Ljava.lang.String;@2bc9a775,[Ljava.lang.String;@27b000f7,[Ledu.cmu.lti.nlp.amr.Dependency;@42f9c19a),Annotation([Ljava.lang.String;@64bfd6fd,[Ljava.lang.String;@2ab2710,[Ljava.lang.String;@253b380a),Annotation([Ljava.lang.String;@29c2c826,[Ljava.lang.String;@3350ebdd,[Ledu.cmu.lti.nlp.amr.Entity;@6818d900))
AMR:
(x8 / 改变-01, example, x9 / 命令)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,296 microseconds
Sentence: 点灯 的 人 说 ： “ 命令 没有 改 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  命令 => 命令
Oracle Span 3:  改 => 改-01
Oracle Span 4:  点灯 => 点灯-01
Oracle Span 5:  说 => 说-01
Spans:
Span 2-3:  人 => 人
Span 6-7:  命令 => 命令
Span 8-9:  改 => 改-01
Span 0-1:  点灯 => 点灯-01
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 6-7:  命令 => 命令
Oracle Span 8-9:  改 => 改-01
Oracle Span 0-1:  点灯 => 点灯-01
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	点灯	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	命令	_	NN	NN	_	8	nsubj	_	_
8	没有	_	VV	VV	_	4	ccomp	_	_
9	改	_	AD	AD	_	8	advmod	_	_
10	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 人)
(x0 / 说-01, arg1, x7 / 改-01)
(x3 / 点灯-01, arg0, x2 / 人)
(x7 / 改-01, arg1, x8 / 命令)

Input(Some(Graph((说-01 :arg1 (改-01 :polarity - :arg1 命令) :arg0 (人 :arg0-of 点灯-01)),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(8,9,List(1),改,改-01,false), Span(6,7,List(2),命令,命令,false), Span(2,3,List(3),人,人,false), Span(0,1,List(4),点灯,点灯-01,false)),Map(2 -> 命令, 1 -> 改-01, 4 -> 点灯-01, 0 -> 说-01, 3 -> 人),Map(x2 -> 人, x8 -> 命令, x7 -> 改-01, x3 -> 点灯-01, x0 -> 说-01))),[Ljava.lang.String;@149f5761,Annotation([Ljava.lang.String;@2ba33e2c,[Ljava.lang.String;@1f193686,[Ljava.lang.String;@31e72cbc),Annotation([Ljava.lang.String;@5fad41be,[Ljava.lang.String;@6dcd5639,[Ledu.cmu.lti.nlp.amr.Dependency;@3b36e000),Annotation([Ljava.lang.String;@333cb916,[Ljava.lang.String;@629ae7e,[Ljava.lang.String;@1d25c1c),Annotation([Ljava.lang.String;@de88ac6,[Ljava.lang.String;@5bca7664,[Ledu.cmu.lti.nlp.amr.Entity;@105b693d))
AMR:
(x0 / 说-01, manner, x2 / 人)
(x0 / 说-01, prep-against, x8 / 命令)
(x3 / 点灯-01, prep-following, x2 / 人)
(x7 / 改-01, domain, x8 / 命令)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,299 microseconds
Sentence: 惨 就 惨 在 这里 了 ！

Oracle Span 1:  惨 => 惨-01
Oracle Span 2:  这里 => 这里
Spans:
Span 0-1:  惨 => 惨-01
Span 4-5:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 0-1:  惨 => 惨-01
Oracle Span 4-5:  这里 => 这里

Dependencies:
1	惨	_	AD	AD	_	3	advmod	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	惨	_	VA	VA	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这里	_	PN	PN	_	4	pobj	_	_
6	了	_	SP	SP	_	3	dep	_	_
7	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 惨-01, cause, x2 / 这里)

Input(Some(Graph((惨-01 :mode expressive :cause 这里),ArrayBuffer(Span(0,1,List(0),惨,惨-01,false), Span(4,5,List(1),这里,这里,false)),Map(1 -> 这里, 0 -> 惨-01),Map(x2 -> 这里, x0 -> 惨-01))),[Ljava.lang.String;@3fae596,Annotation([Ljava.lang.String;@4a0df195,[Ljava.lang.String;@42fcc7e6,[Ljava.lang.String;@9255c05),Annotation([Ljava.lang.String;@5da7cee2,[Ljava.lang.String;@78830d9a,[Ledu.cmu.lti.nlp.amr.Dependency;@5ce4369b),Annotation([Ljava.lang.String;@7f829c76,[Ljava.lang.String;@1cb19dba,[Ljava.lang.String;@7c3ebc6b),Annotation([Ljava.lang.String;@1931d99,[Ljava.lang.String;@6a9950f1,[Ledu.cmu.lti.nlp.amr.Entity;@7ad54c55))
AMR:
(x0 / 惨-01, op, x2 / 这里)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,069 microseconds
Sentence: 这 颗 行星 一 年 比 一 年 转 得 更 快 ， 而 命令 却 没有 改 。 ”

Oracle Span 1:  命令 => 命令
Oracle Span 2:  年 => (temporal-quantity :unit 年)
Oracle Span 3:  快 => 快-01
Oracle Span 4:  改 => 改-01
Oracle Span 5:  更 => 更
Oracle Span 6:  行星 => 行星
Oracle Span 7:  转 => 转-04
Oracle Span 8:  这 => 这
Spans:
Span 14-15:  命令 => 命令
Span 4-5:  年 => (temporal-quantity :unit 年)
Span 11-12:  快 => 快-01
Span 17-18:  改 => 改-01
Span 10-11:  更 => 更
Span 2-3:  行星 => 行星
Span 8-9:  转 => 转-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  命令 => 命令
Oracle Span 4-5:  年 => (temporal-quantity :unit 年)
Oracle Span 11-12:  快 => 快-01
Oracle Span 17-18:  改 => 改-01
Oracle Span 10-11:  更 => 更
Oracle Span 2-3:  行星 => 行星
Oracle Span 8-9:  转 => 转-04
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	颗	_	M	M	_	1	clf	_	_
3	行星	_	NN	NN	_	12	nsubj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	年	_	M	M	_	12	dep	_	_
6	比	_	P	P	_	12	prep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	年	_	M	M	_	6	pobj	_	_
9	转	_	VV	VV	_	12	dep	_	_
10	得	_	DER	DER	_	12	dep	_	_
11	更	_	AD	AD	_	12	advmod	_	_
12	快	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	而	_	AD	AD	_	17	advmod	_	_
15	命令	_	NN	NN	_	17	nsubj	_	_
16	却	_	AD	AD	_	17	advmod	_	_
17	没有	_	VV	VV	_	12	conj	_	_
18	改	_	AD	AD	_	17	advmod	_	_
19	。	_	PU	PU	_	12	punct	_	_
20	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x22 / 转-04, arg0, x24 / 行星)
(x22 / 转-04, frequency, x28 / temporal-quantity)
(x22 / 转-04, manner, x23 / 快-01)
(x23 / 快-01, degree, x26 / 更)
(x24 / 行星, mod, x25 / 这)
(x28 / temporal-quantity, unit, x34 / 年)
(x31 / 改-01, arg1, x32 / 命令)

Input(Some(Graph((say :arg1 (contrast :arg1 (转-04 :frequency (temporal-quantity :unit 年 :quant 1) :arg0 (行星 :mod 这) :manner (快-01 :degree 更)) :arg2 (改-01 :polarity - :arg1 命令))),ArrayBuffer(Span(8,9,List(0),转,转-04,false), Span(4,5,List(1, 2),年,(temporal-quantity :unit 年),false), Span(2,3,List(3),行星,行星,false), Span(0,1,List(4),这,这,false), Span(11,12,List(5),快,快-01,false), Span(10,11,List(6),更,更,false), Span(17,18,List(7),改,改-01,false), Span(14,15,List(8),命令,命令,false)),Map(2 -> 年, 5 -> 快-01, 8 -> 命令, 7 -> 改-01, 1 -> temporal-quantity, 4 -> 这, 6 -> 更, 0 -> 转-04, 3 -> 行星),Map(x34 -> 年, x28 -> temporal-quantity, x22 -> 转-04, x25 -> 这, x31 -> 改-01, x24 -> 行星, x23 -> 快-01, x32 -> 命令, x26 -> 更))),[Ljava.lang.String;@73017a80,Annotation([Ljava.lang.String;@6ae7deac,[Ljava.lang.String;@4a5905d9,[Ljava.lang.String;@1a3e5f23),Annotation([Ljava.lang.String;@6293e39e,[Ljava.lang.String;@365553de,[Ledu.cmu.lti.nlp.amr.Dependency;@34a0ef00),Annotation([Ljava.lang.String;@5c0f79f0,[Ljava.lang.String;@21fdfefc,[Ljava.lang.String;@3daa82be),Annotation([Ljava.lang.String;@ec1b2e4,[Ljava.lang.String;@29a69a35,[Ledu.cmu.lti.nlp.amr.Entity;@67e28be3))
AMR:
(x22 / 转-04, frequency, x28 / temporal-quantity)
(x22 / 转-04, manner, x23 / 快-01)
(x23 / 快-01, degree, x26 / 更)
(x24 / 行星, mod, x25 / 这)
(x24 / 行星, mod, x28 / temporal-quantity)
(x28 / temporal-quantity, unit, x34 / 年)
(x31 / 改-01, degree, x26 / 更)
(x31 / 改-01, degree, x32 / 命令)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 24,598 microseconds
Sentence: “ 结果 呢 ？ ” 小 王子 问 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  结果 => 结果-01
Oracle Span 4:  问 => 问-01
Spans:
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 1-2:  结果 => 结果-01
Span 7-8:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 1-2:  结果 => 结果-01
Oracle Span 7-8:  问 => 问-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	结果	_	NN	NN	_	3	nn	_	_
3	呢	_	NN	NN	_	4	nn	_	_
4	？	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	问	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 王子)
(x0 / 问-01, arg1, x4 / 结果-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((问-01 :mode interrogative :arg1 结果-01 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),问,问-01,false), Span(1,2,List(1),结果,结果-01,false), Span(6,7,List(2),王子,王子,false), Span(5,6,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 结果-01, 0 -> 问-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 结果-01, x3 -> 小-01, x0 -> 问-01))),[Ljava.lang.String;@e344ad3,Annotation([Ljava.lang.String;@de18f63,[Ljava.lang.String;@108bdbd8,[Ljava.lang.String;@6345e7b9),Annotation([Ljava.lang.String;@4f8b4bd0,[Ljava.lang.String;@4e904fd5,[Ledu.cmu.lti.nlp.amr.Dependency;@b18c4),Annotation([Ljava.lang.String;@4cbf4f53,[Ljava.lang.String;@597f48df,[Ljava.lang.String;@15dd5ac2),Annotation([Ljava.lang.String;@4d48bd85,[Ljava.lang.String;@7bbbb6a8,[Ledu.cmu.lti.nlp.amr.Entity;@58a120b0))
AMR:
(x0 / 问-01, ARG1, x2 / 王子)
(x0 / 问-01, degree, x4 / 结果-01)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,179 microseconds
Sentence: “ 结果 现在 每 分钟 转 一 圈 ， 我 连 一 秒钟 的 休息 时间 都 没有 了 。

Oracle Span 1:  休息 => 休息-01
Oracle Span 2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3:  我 => 我
Oracle Span 4:  时间 => 时间
Oracle Span 5:  转 => 转-04
Spans:
Span 14-15:  休息 => 休息-01
Span 4-5:  分钟 => (temporal-quantity :unit 分钟)
Span 9-10:  我 => 我
Span 15-16:  时间 => 时间
Span 5-6:  转 => 转-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 14-15:  休息 => 休息-01
Oracle Span 4-5:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 9-10:  我 => 我
Oracle Span 15-16:  时间 => 时间
Oracle Span 5-6:  转 => 转-04

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	结果	_	AD	AD	_	6	advmod	_	_
3	现在	_	NT	NT	_	6	tmod	_	_
4	每	_	DT	DT	_	6	dep	_	_
5	分钟	_	M	M	_	4	clf	_	_
6	转	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	圈	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_
10	我	_	PN	PN	_	18	nsubj	_	_
11	连	_	AD	AD	_	13	advmod	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	秒钟	_	M	M	_	16	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	休息	_	NN	NN	_	16	nn	_	_
16	时间	_	NN	NN	_	18	nsubj	_	_
17	都	_	AD	AD	_	18	advmod	_	_
18	没有	_	VV	VV	_	6	conj	_	_
19	了	_	AS	AS	_	18	asp	_	_
20	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x17 / 转-04, frequency, x19 / temporal-quantity)
(x19 / temporal-quantity, unit, x31 / 分钟)
(x25 / 时间, mod, x26 / 休息-01)

Input(Some(Graph((say :arg1 (causation :arg1 (转-04 :frequency (temporal-quantity :unit 分钟 :quant 1) :quant 1) :arg2 (有-04 :polarity - :arg0 我 :arg1 (时间 :duration (temporal-quantity :quant 1 :unit 秒) :mod (休息-01 :arg0 x24))))),ArrayBuffer(Span(5,6,List(0),转,转-04,false), Span(4,5,List(1, 2),分钟,(temporal-quantity :unit 分钟),false), Span(9,10,List(3),我,我,false), Span(15,16,List(4),时间,时间,false), Span(14,15,List(5),休息,休息-01,false)),Map(2 -> 分钟, 5 -> 休息-01, 1 -> temporal-quantity, 4 -> 时间, 0 -> 转-04, 3 -> 我),Map(x25 -> 时间, x31 -> 分钟, x19 -> temporal-quantity, x24 -> 我, x26 -> 休息-01, x17 -> 转-04))),[Ljava.lang.String;@27d57a2c,Annotation([Ljava.lang.String;@2ff95fc6,[Ljava.lang.String;@9d1a267,[Ljava.lang.String;@58a4a74d),Annotation([Ljava.lang.String;@54aca26f,[Ljava.lang.String;@314ed053,[Ledu.cmu.lti.nlp.amr.Dependency;@35088e87),Annotation([Ljava.lang.String;@486bc9a4,[Ljava.lang.String;@7965a51c,[Ljava.lang.String;@3eee3e2b),Annotation([Ljava.lang.String;@4f63e3c7,[Ljava.lang.String;@59532566,[Ledu.cmu.lti.nlp.amr.Entity;@dca2615))
AMR:
(x17 / 转-04, frequency, x19 / temporal-quantity)
(x17 / 转-04, prep-through, x24 / 我)
(x17 / 转-04, prep-through, x26 / 休息-01)
(x19 / temporal-quantity, unit, x31 / 分钟)
(x25 / 时间, mod, x26 / 休息-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
Decoded in 17,106 microseconds
Sentence: 每 分钟 我 就 要 点 一 次 灯 ， 熄 一 次 灯 ！ ”

Oracle Span 1:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 2:  就 => 就
Oracle Span 3:  我 => 我
Oracle Span 4:  灯 => 灯
Oracle Span 5:  点 => 点-01
Oracle Span 6:  熄 => 熄-01
Oracle Span 7:  要 => 要-03
Spans:
Span 1-2:  分钟 => (temporal-quantity :unit 分钟)
Span 3-4:  就 => 就
Span 2-3:  我 => 我
Span 8-9:  灯 => 灯
Span 5-6:  点 => 点-01
Span 10-11:  熄 => 熄-01
Span 4-5:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 8-9:  灯 => 灯
Oracle Span 5-6:  点 => 点-01
Oracle Span 10-11:  熄 => 熄-01
Oracle Span 4-5:  要 => 要-03

Dependencies:
1	每	_	DT	DT	_	5	dep	_	_
2	分钟	_	M	M	_	1	clf	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	9	dep	_	_
6	点	_	NN	NN	_	5	dobj	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	次	_	M	M	_	5	range	_	_
9	灯	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	熄	_	VV	VV	_	9	ccomp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	次	_	M	M	_	14	clf	_	_
14	灯	_	NN	NN	_	11	dobj	_	_
15	！	_	PU	PU	_	9	punct	_	_
16	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x19 / 要-03, manner, x20 / 就)
(x22 / 点-01, arg0, x23 / 我)
(x22 / 点-01, arg1, x24 / 灯)
(x29 / temporal-quantity, unit, x33 / 分钟)

Input(Some(Graph((say :arg1 (要-03 :mode expressive :frequency (rate-entity-91 :arg2 (temporal-quantity :unit 分钟 :quant 1)) :arg0 (and :op (点-01 :arg1 灯 :arg0 我) :op (熄-01 :arg1 x24 :arg0 x23)) :manner 就)),ArrayBuffer(Span(4,5,List(0),要,要-03,false), Span(1,2,List(1, 2),分钟,(temporal-quantity :unit 分钟),false), Span(5,6,List(3),点,点-01,false), Span(8,9,List(4),灯,灯,false), Span(2,3,List(5),我,我,false), Span(10,11,List(6),熄,熄-01,false), Span(3,4,List(7),就,就,false)),Map(2 -> 分钟, 5 -> 我, 7 -> 就, 1 -> temporal-quantity, 4 -> 灯, 6 -> 熄-01, 0 -> 要-03, 3 -> 点-01),Map(x22 -> 点-01, x25 -> 熄-01, x19 -> 要-03, x33 -> 分钟, x24 -> 灯, x23 -> 我, x29 -> temporal-quantity, x20 -> 就))),[Ljava.lang.String;@421a4ee1,Annotation([Ljava.lang.String;@1237e0be,[Ljava.lang.String;@528f8f8b,[Ljava.lang.String;@ea9e141),Annotation([Ljava.lang.String;@1e54cb33,[Ljava.lang.String;@33cbfa57,[Ledu.cmu.lti.nlp.amr.Dependency;@1d96d872),Annotation([Ljava.lang.String;@5c748168,[Ljava.lang.String;@6441c486,[Ljava.lang.String;@834831b),Annotation([Ljava.lang.String;@234a8f27,[Ljava.lang.String;@5b4d25e7,[Ledu.cmu.lti.nlp.amr.Entity;@31c2affc))
AMR:
(x19 / 要-03, manner, x20 / 就)
(x19 / 要-03, manner, x22 / 点-01)
(x22 / 点-01, manner, x24 / 灯)
(x22 / 点-01, topic, x29 / temporal-quantity)
(x24 / 灯, manner, x25 / 熄-01)
(x29 / temporal-quantity, unit, x33 / 分钟)
(x29 / temporal-quantity, weekday, x23 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 32,221 microseconds
Sentence: “ 真 有趣 ，

Oracle Span 1:  有趣 => 有趣-01
Oracle Span 2:  真 => 真
Spans:
Span 2-3:  有趣 => 有趣-01
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  有趣 => 有趣-01
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	真	_	NN	NN	_	0	root	_	_
3	有趣	_	NN	NN	_	2	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 有趣-01, degree, x6 / 真)

Input(Some(Graph((say :arg1 (有趣-01 :degree 真)),ArrayBuffer(Span(2,3,List(0),有趣,有趣-01,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 有趣-01),Map(x5 -> 有趣-01, x6 -> 真))),[Ljava.lang.String;@1dc2de84,Annotation([Ljava.lang.String;@6a0659ac,[Ljava.lang.String;@58d63b16,[Ljava.lang.String;@7c4fc2bf),Annotation([Ljava.lang.String;@7772054c,[Ljava.lang.String;@2f61f937,[Ledu.cmu.lti.nlp.amr.Dependency;@46866946),Annotation([Ljava.lang.String;@44de0113,[Ljava.lang.String;@236134a1,[Ljava.lang.String;@369c9bb),Annotation([Ljava.lang.String;@76d05cc9,[Ljava.lang.String;@42b21d99,[Ledu.cmu.lti.nlp.amr.Entity;@68dcfd52))
AMR:
(x5 / 有趣-01, degree, x6 / 真)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,814 microseconds
Sentence: 你 这里 每天 只 有 一 分钟 长 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3:  这里 => 这里
Oracle Span 4:  长 => 长-02
Spans:
Span 0-1:  你 => 你
Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Span 1-2:  这里 => 这里
Span 7-8:  长 => 长-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 1-2:  这里 => 这里
Oracle Span 7-8:  长 => 长-02

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	这里	_	PN	PN	_	3	nsubj	_	_
3	每天	_	VV	VV	_	0	root	_	_
4	只	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	3	ccomp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	5	dep	_	_
8	长	_	VA	VA	_	3	dep	_	_
9	？	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	这里	_	PN	PN	_	5	xsubj	_	_
12	你	_	PN	PN	_	5	xsubj	_	_

Oracle:
(x14 / 长-02, arg1, x23 / temporal-quantity)
(x14 / 长-02, location, x26 / 这里)
(x23 / temporal-quantity, unit, x30 / 分钟)
(x26 / 这里, poss, x27 / 你)

Input(Some(Graph((say :arg1 (长-02 :mode interrogative :location (这里 :poss 你) :arg1 (temporal-quantity :unit 分钟 :quant 1) :arg0 (temporal-quantity :quant 1 :unit 天))),ArrayBuffer(Span(7,8,List(0),长,长-02,false), Span(1,2,List(1),这里,这里,false), Span(0,1,List(2),你,你,false), Span(6,7,List(3, 4),分钟,(temporal-quantity :unit 分钟),false)),Map(2 -> 你, 1 -> 这里, 4 -> 分钟, 0 -> 长-02, 3 -> temporal-quantity),Map(x30 -> 分钟, x27 -> 你, x23 -> temporal-quantity, x26 -> 这里, x14 -> 长-02))),[Ljava.lang.String;@25b5c5e3,Annotation([Ljava.lang.String;@5177e388,[Ljava.lang.String;@37b72ea,[Ljava.lang.String;@cc239ba),Annotation([Ljava.lang.String;@7d37f1c,[Ljava.lang.String;@69d6a7cd,[Ledu.cmu.lti.nlp.amr.Dependency;@3162743f),Annotation([Ljava.lang.String;@2c708440,[Ljava.lang.String;@3047254d,[Ljava.lang.String;@6cf31447),Annotation([Ljava.lang.String;@4e92466a,[Ljava.lang.String;@66e8997c,[Ledu.cmu.lti.nlp.amr.Entity;@6f0cb5a1))
AMR:
(x14 / 长-02, location, x23 / temporal-quantity)
(x14 / 长-02, location, x26 / 这里)
(x23 / temporal-quantity, unit, x30 / 分钟)
(x26 / 这里, poss, x27 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 11,256 microseconds
Sentence: “ 一点 趣味 也 没有 ， ” 点灯 的 说 ，

Oracle Span 1:  一点 => 一点
Oracle Span 2:  也 => 也
Oracle Span 3:  点灯 => (person :arg0-of 点灯-01)
Oracle Span 4:  说 => 说-01
Oracle Span 5:  趣味 => 趣味
Spans:
Span 1-2:  一点 => 一点
Span 3-4:  也 => 也
Span 7-8:  点灯 => (person :arg0-of 点灯-01)
Span 9-10:  说 => 说-01
Span 2-3:  趣味 => 趣味

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我们 俩 在 一块 说话 就 已经 有 一 个 月 的 时间 了 。 ”

Oracle Span 1:  一块 => 一块
Oracle Span 2:  我们 => 我们
Oracle Span 3:  月 => (temporal-quantity :unit 月)
Oracle Span 4:  说话 => 说话-01
Spans:
Span 4-5:  一块 => 一块
Span 1-2:  我们 => 我们
Span 11-12:  月 => (temporal-quantity :unit 月)
Span 5-6:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一块 => 一块
Oracle Span 1-2:  我们 => 我们
Oracle Span 11-12:  月 => (temporal-quantity :unit 月)
Oracle Span 5-6:  说话 => 说话-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我们	_	PN	PN	_	6	nsubj	_	_
3	俩	_	AD	AD	_	6	advmod	_	_
4	在	_	P	P	_	6	prep	_	_
5	一块	_	CD	CD	_	4	pobj	_	_
6	说话	_	VV	VV	_	0	root	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	已经	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	14	rcmod	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	12	clf	_	_
12	月	_	NN	NN	_	9	dobj	_	_
13	的	_	DEC	DEC	_	9	cpm	_	_
14	时间	_	NN	NN	_	6	dobj	_	_
15	了	_	AS	AS	_	6	dep	_	_
16	。	_	PU	PU	_	6	punct	_	_
17	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 说话-01, arg0, x13 / 我们)
(x12 / 说话-01, duration, x16 / temporal-quantity)
(x12 / 说话-01, manner, x15 / 一块)
(x16 / temporal-quantity, unit, x19 / 月)

Input(Some(Graph((say :arg1 (说话-01 :duration (temporal-quantity :unit 月 :quant 1) :manner 一块 :arg0 (我们 :quant 2))),ArrayBuffer(Span(5,6,List(0),说话,说话-01,false), Span(11,12,List(1, 2),月,(temporal-quantity :unit 月),false), Span(4,5,List(3),一块,一块,false), Span(1,2,List(4),我们,我们,false)),Map(2 -> 月, 1 -> temporal-quantity, 4 -> 我们, 0 -> 说话-01, 3 -> 一块),Map(x16 -> temporal-quantity, x19 -> 月, x13 -> 我们, x12 -> 说话-01, x15 -> 一块))),[Ljava.lang.String;@47547132,Annotation([Ljava.lang.String;@655523dd,[Ljava.lang.String;@6f7e336b,[Ljava.lang.String;@3a2b2322),Annotation([Ljava.lang.String;@5e1218b4,[Ljava.lang.String;@12958360,[Ledu.cmu.lti.nlp.amr.Dependency;@c6e0f32),Annotation([Ljava.lang.String;@6f3f0fae,[Ljava.lang.String;@21a66d45,[Ljava.lang.String;@1f966492),Annotation([Ljava.lang.String;@63fdffcd,[Ljava.lang.String;@7428de63,[Ledu.cmu.lti.nlp.amr.Entity;@66f659e6))
AMR:
(x12 / 说话-01, duration, x16 / temporal-quantity)
(x12 / 说话-01, manner, x15 / 一块)
(x12 / 说话-01, time, x13 / 我们)
(x16 / temporal-quantity, unit, x19 / 月)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,785 microseconds
Sentence: “ 一 个 月 ？ ”

Oracle Span 1:  月 => (temporal-quantity :unit 月)
Spans:
Span 3-4:  月 => (temporal-quantity :unit 月)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  月 => (temporal-quantity :unit 月)

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	个	_	M	M	_	4	clf	_	_
4	月	_	NN	NN	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / temporal-quantity, unit, x10 / 月)

Input(Some(Graph((say :arg1 (temporal-quantity :unit 月 :mode interrogative :quant 1)),ArrayBuffer(Span(3,4,List(0, 1),月,(temporal-quantity :unit 月),false)),Map(1 -> 月, 0 -> temporal-quantity),Map(x10 -> 月, x6 -> temporal-quantity))),[Ljava.lang.String;@4a68135e,Annotation([Ljava.lang.String;@46678e49,[Ljava.lang.String;@748e9b20,[Ljava.lang.String;@2063c53e),Annotation([Ljava.lang.String;@2a9bc08f,[Ljava.lang.String;@50f40653,[Ledu.cmu.lti.nlp.amr.Dependency;@50a3d0f6),Annotation([Ljava.lang.String;@6e57b5e9,[Ljava.lang.String;@1abc9f14,[Ljava.lang.String;@6a0ac48e),Annotation([Ljava.lang.String;@24e08d59,[Ljava.lang.String;@77cb9cd1,[Ledu.cmu.lti.nlp.amr.Entity;@971e903))
AMR:
(x6 / temporal-quantity, unit, x10 / 月)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
Decoded in 3,200 microseconds
Sentence: “ 对 。

Oracle Span 1:  对 => 对-02
Spans:
Span 1-2:  对 => 对-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对 => 对-02

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	对	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 对-02),ArrayBuffer(Span(1,2,List(0),对,对-02,false)),Map(0 -> 对-02),Map(x4 -> 对-02))),[Ljava.lang.String;@35636217,Annotation([Ljava.lang.String;@1549bba7,[Ljava.lang.String;@3e4f80cb,[Ljava.lang.String;@38704ff0),Annotation([Ljava.lang.String;@16ade133,[Ljava.lang.String;@4e61e4c2,[Ledu.cmu.lti.nlp.amr.Dependency;@c6a6c1d),Annotation([Ljava.lang.String;@36dfbdaf,[Ljava.lang.String;@4f82663e,[Ljava.lang.String;@e04ccf8),Annotation([Ljava.lang.String;@51d143a1,[Ljava.lang.String;@1a28aef1,[Ledu.cmu.lti.nlp.amr.Entity;@4647881c))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,439 microseconds
Sentence: 三十 分钟 。

Oracle Span 1:  分钟 => (temporal-quantity :unit 分钟)
Spans:
Span 1-2:  分钟 => (temporal-quantity :unit 分钟)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  分钟 => (temporal-quantity :unit 分钟)

Dependencies:
1	三十	_	CD	CD	_	2	nummod	_	_
2	分钟	_	M	M	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / temporal-quantity, unit, x7 / 分钟)

Input(Some(Graph((temporal-quantity :unit 分钟 :quant 30),ArrayBuffer(Span(1,2,List(0, 1),分钟,(temporal-quantity :unit 分钟),false)),Map(1 -> 分钟, 0 -> temporal-quantity),Map(x7 -> 分钟, x3 -> temporal-quantity))),[Ljava.lang.String;@6e0cff20,Annotation([Ljava.lang.String;@359b650b,[Ljava.lang.String;@6a9b0a6f,[Ljava.lang.String;@10667848),Annotation([Ljava.lang.String;@191a709b,[Ljava.lang.String;@77c7ed8e,[Ledu.cmu.lti.nlp.amr.Dependency;@453d496b),Annotation([Ljava.lang.String;@66bacdbc,[Ljava.lang.String;@2c6ee758,[Ljava.lang.String;@640dc4c6),Annotation([Ljava.lang.String;@4b54af3d,[Ljava.lang.String;@7bb35cc6,[Ledu.cmu.lti.nlp.amr.Entity;@203c20cf))
AMR:
(x3 / temporal-quantity, unit, x7 / 分钟)

WARNING: makeIds can't find span Id: 0.1
Decoded in 6,140 microseconds
Sentence: 三十 天 ！

Oracle Span 1:  天 => (temporal-quantity :unit 天)
Spans:
Span 1-2:  天 => (temporal-quantity :unit 天)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  天 => (temporal-quantity :unit 天)

Dependencies:
1	三十	_	CD	CD	_	2	nummod	_	_
2	天	_	M	M	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / temporal-quantity, unit, x11 / 天)

Input(Some(Graph((temporal-quantity :unit 天 :quant 30 :mode expressive),ArrayBuffer(Span(1,2,List(0, 1),天,(temporal-quantity :unit 天),false)),Map(1 -> 天, 0 -> temporal-quantity),Map(x4 -> temporal-quantity, x11 -> 天))),[Ljava.lang.String;@2a1debfa,Annotation([Ljava.lang.String;@44de94c3,[Ljava.lang.String;@256aa5f2,[Ljava.lang.String;@6411d3c8),Annotation([Ljava.lang.String;@2116b68b,[Ljava.lang.String;@11de56e6,[Ledu.cmu.lti.nlp.amr.Dependency;@616b241a),Annotation([Ljava.lang.String;@b8e246c,[Ljava.lang.String;@1f387978,[Ljava.lang.String;@7cb2651f),Annotation([Ljava.lang.String;@4441d567,[Ljava.lang.String;@3e1624c7,[Ledu.cmu.lti.nlp.amr.Entity;@62b969c4))
AMR:
(x4 / temporal-quantity, unit, x11 / 天)

WARNING: makeIds can't find span Id: 0.2
Decoded in 2,905 microseconds
Sentence: —— 晚上 好 。 ”

Oracle Span 1:  好 => 好-01
Oracle Span 2:  晚上 => 晚上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  晚上 => 晚上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  晚上 => 晚上

Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	晚上	_	NT	NT	_	3	tmod	_	_
3	好	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 晚上)

Input(Some(Graph((say :arg1 (好-01 :arg0 晚上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),晚上,晚上,false)),Map(1 -> 晚上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 晚上))),[Ljava.lang.String;@dcc6211,Annotation([Ljava.lang.String;@47ec7422,[Ljava.lang.String;@48535004,[Ljava.lang.String;@610df783),Annotation([Ljava.lang.String;@f3fcd59,[Ljava.lang.String;@2b56f5f8,[Ledu.cmu.lti.nlp.amr.Dependency;@79d743e6),Annotation([Ljava.lang.String;@776802b0,[Ljava.lang.String;@64c4c01,[Ljava.lang.String;@1aa99005),Annotation([Ljava.lang.String;@592238c5,[Ljava.lang.String;@6ee8dcd3,[Ledu.cmu.lti.nlp.amr.Entity;@a20b94b))
AMR:
(x5 / 好-01, ARG1, x6 / 晚上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,436 microseconds
Sentence: 于是 他 又 点着 了 他 的 路灯 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  点着 => 点着-01
Oracle Span 4:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  点着 => 点着-01
Span 7-8:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  点着 => 点着-01
Oracle Span 7-8:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	点着	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	路灯	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 点着-01, arg0, x4 / 他)
(x2 / 点着-01, arg1, x5 / 路灯)
(x2 / 点着-01, manner, x3 / 又)

Input(Some(Graph((temporal :arg2 (点着-01 :arg1 (路灯 :poss x4) :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),点着,点着-01,false), Span(7,8,List(1),路灯,路灯,false), Span(1,2,List(2),他,他,false), Span(2,3,List(3),又,又,false)),Map(2 -> 他, 1 -> 路灯, 0 -> 点着-01, 3 -> 又),Map(x2 -> 点着-01, x5 -> 路灯, x4 -> 他, x3 -> 又))),[Ljava.lang.String;@5cdf39b2,Annotation([Ljava.lang.String;@14f3c6fc,[Ljava.lang.String;@3cd59ef5,[Ljava.lang.String;@33b082c5),Annotation([Ljava.lang.String;@16073fa8,[Ljava.lang.String;@1cc9cfb2,[Ledu.cmu.lti.nlp.amr.Dependency;@cfbc8e8),Annotation([Ljava.lang.String;@3bead518,[Ljava.lang.String;@14bf57b2,[Ljava.lang.String;@46d9aec8),Annotation([Ljava.lang.String;@14379273,[Ljava.lang.String;@7918c7f8,[Ledu.cmu.lti.nlp.amr.Entity;@17740dae))
AMR:
(x2 / 点着-01, ARG6, x4 / 他)
(x2 / 点着-01, manner, x3 / 又)
(x2 / 点着-01, op, x5 / 路灯)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,593 microseconds
Sentence: 小 王子 瞅 着 他 ， 他 喜欢 这 个 点灯人 如此 忠 守 命令 。

Oracle Span 1:  命令 => 命令
Oracle Span 2:  喜欢 => 喜欢-01
Oracle Span 3:  如此 => 如此
Oracle Span 4:  守 => 守-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  忠 => 忠-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  瞅 => 瞅-01
Spans:
Span 14-15:  命令 => 命令
Span 7-8:  喜欢 => 喜欢-01
Span 11-12:  如此 => 如此
Span 13-14:  守 => 守-01
Span 0-1:  小 => 小-01
Span 12-13:  忠 => 忠-01
Span 1-2:  王子 => 王子
Span 2-3:  瞅 => 瞅-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  命令 => 命令
Oracle Span 7-8:  喜欢 => 喜欢-01
Oracle Span 11-12:  如此 => 如此
Oracle Span 13-14:  守 => 守-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  忠 => 忠-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  瞅 => 瞅-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	瞅	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	8	nsubj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	他	_	PN	PN	_	8	nsubj	_	_
8	喜欢	_	VV	VV	_	3	ccomp	_	_
9	这	_	DT	DT	_	11	det	_	_
10	个	_	M	M	_	9	clf	_	_
11	点灯人	_	NN	NN	_	13	nsubj	_	_
12	如此	_	AD	AD	_	13	advmod	_	_
13	忠	_	VV	VV	_	8	ccomp	_	_
14	守	_	VV	VV	_	13	rcomp	_	_
15	命令	_	NN	NN	_	13	dobj	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x18 / 守-01, arg1, x22 / 命令)
(x18 / 守-01, degree, x24 / 如此)
(x18 / 守-01, manner, x23 / 忠-01)
(x2 / 瞅-01, arg0, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 喜欢-01, arg1, x18 / 守-01)

Input(Some(Graph((and :op (瞅-01 :arg1 x19 :arg0 (王子 :mod 小-01)) :op (喜欢-01 :arg1 (守-01 :degree 如此 :manner 忠-01 :arg1 命令 :arg0 (人 :arg0-of (点-01 :arg1 灯))) :arg0 x4)),ArrayBuffer(Span(2,3,List(0),瞅,瞅-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false), Span(7,8,List(3),喜欢,喜欢-01,false), Span(13,14,List(4),守,守-01,false), Span(11,12,List(5),如此,如此,false), Span(12,13,List(6),忠,忠-01,false), Span(14,15,List(7),命令,命令,false)),Map(2 -> 小-01, 5 -> 如此, 7 -> 命令, 1 -> 王子, 4 -> 守-01, 6 -> 忠-01, 0 -> 瞅-01, 3 -> 喜欢-01),Map(x22 -> 命令, x2 -> 瞅-01, x5 -> 小-01, x7 -> 喜欢-01, x24 -> 如此, x18 -> 守-01, x4 -> 王子, x23 -> 忠-01))),[Ljava.lang.String;@1c504e66,Annotation([Ljava.lang.String;@345cf395,[Ljava.lang.String;@bc4d5e1,[Ljava.lang.String;@3c6aa04a),Annotation([Ljava.lang.String;@2257fadf,[Ljava.lang.String;@7144655b,[Ledu.cmu.lti.nlp.amr.Dependency;@5c82cd4f),Annotation([Ljava.lang.String;@35835e65,[Ljava.lang.String;@289fdb08,[Ljava.lang.String;@7a231dfd),Annotation([Ljava.lang.String;@30814f43,[Ljava.lang.String;@1fde4f40,[Ledu.cmu.lti.nlp.amr.Entity;@49cf9028))
AMR:
(x18 / 守-01, ARG5, x22 / 命令)
(x18 / 守-01, degree, x24 / 如此)
(x18 / 守-01, manner, x23 / 忠-01)
(x2 / 瞅-01, direction, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 喜欢-01, ARG3, x18 / 守-01)
(x7 / 喜欢-01, condition, x2 / 瞅-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 39,436 microseconds
Sentence: 这时 ， 他 想起 了 他 自己 从前 挪动 椅子 寻找 日落 的 事 。 他 很 想 帮助 他 的 这 位 朋友 。

Oracle Span 1:  事 => 事
Oracle Span 2:  从前 => 从前
Oracle Span 3:  他 => 他
Oracle Span 4:  他 => 他
Oracle Span 5:  寻找 => 寻找-01
Oracle Span 6:  帮助 => 帮助-01
Oracle Span 7:  很 => 很
Oracle Span 8:  想 => 想-02
Oracle Span 9:  想起 => 想起-01
Oracle Span 10:  挪动 => 挪动-01
Oracle Span 11:  日落 => 日落
Oracle Span 12:  朋友 => 朋友
Oracle Span 13:  椅子 => 椅子
Oracle Span 14:  这 => 这
Spans:
Span 13-14:  事 => 事
Span 7-8:  从前 => 从前
Span 2-3:  他 => 他
Span 5-6:  他 => 他
Span 10-11:  寻找 => 寻找-01
Span 18-19:  帮助 => 帮助-01
Span 16-17:  很 => 很
Span 17-18:  想 => 想-02
Span 3-4:  想起 => 想起-01
Span 8-9:  挪动 => 挪动-01
Span 11-12:  日落 => 日落
Span 23-24:  朋友 => 朋友
Span 9-10:  椅子 => 椅子
Span 21-22:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 13-14:  事 => 事
Oracle Span 7-8:  从前 => 从前
Oracle Span 2-3:  他 => 他
Oracle Span 5-6:  他 => 他
Oracle Span 10-11:  寻找 => 寻找-01
Oracle Span 18-19:  帮助 => 帮助-01
Oracle Span 16-17:  很 => 很
Oracle Span 17-18:  想 => 想-02
Oracle Span 3-4:  想起 => 想起-01
Oracle Span 8-9:  挪动 => 挪动-01
Oracle Span 11-12:  日落 => 日落
Oracle Span 23-24:  朋友 => 朋友
Oracle Span 9-10:  椅子 => 椅子
Oracle Span 21-22:  这 => 这

Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	想起	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	7	dep	_	_
7	自己	_	PN	PN	_	8	nsubj	_	_
8	从前	_	VV	VV	_	14	rcmod	_	_
9	挪动	_	NN	NN	_	10	nn	_	_
10	椅子	_	NN	NN	_	8	dobj	_	_
11	寻找	_	VV	VV	_	8	conj	_	_
12	日落	_	NN	NN	_	11	dobj	_	_
13	的	_	DEC	DEC	_	8	cpm	_	_
14	事	_	NN	NN	_	4	dobj	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	他	_	PN	PN	_	18	nsubj	_	_
17	很	_	AD	AD	_	18	advmod	_	_
18	想	_	VV	VV	_	4	conj	_	_
19	帮助	_	VV	VV	_	18	ccomp	_	_
20	他	_	PN	PN	_	24	assmod	_	_
21	的	_	DEG	DEG	_	20	assm	_	_
22	这	_	DT	DT	_	24	det	_	_
23	位	_	M	M	_	22	clf	_	_
24	朋友	_	NN	NN	_	19	dobj	_	_
25	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 想起-01, arg0, x14 / 他)
(x13 / 想起-01, arg1, x15 / 事)
(x17 / 挪动-01, arg1, x20 / 椅子)
(x17 / 挪动-01, purpose, x21 / 寻找-01)
(x17 / 挪动-01, time, x19 / 从前)
(x21 / 寻找-01, arg1, x23 / 日落)
(x24 / 想-02, arg1, x27 / 帮助-01)
(x24 / 想-02, degree, x26 / 很)
(x27 / 帮助-01, arg1, x29 / 朋友)
(x29 / 朋友, mod, x30 / 这)
(x29 / 朋友, poss, x31 / 他)

Input(Some(Graph((multi-sentence :snt1 (想起-01 :arg1 (事 :mod (mean :arg1 (挪动-01 :purpose (寻找-01 :arg1 日落 :arg0 x14) :arg1 椅子 :time 从前 :arg0 x14))) :arg0 他) :snt2 (想-02 :arg1 (帮助-01 :arg1 (朋友 :poss 他 :mod 这) :arg0 x14) :degree 很 :arg0 x14)),ArrayBuffer(Span(3,4,List(0),想起,想起-01,false), Span(13,14,List(1),事,事,false), Span(8,9,List(2),挪动,挪动-01,false), Span(10,11,List(3),寻找,寻找-01,false), Span(11,12,List(4),日落,日落,false), Span(9,10,List(5),椅子,椅子,false), Span(7,8,List(6),从前,从前,false), Span(2,3,List(7),他,他,false), Span(17,18,List(8),想,想-02,false), Span(18,19,List(9),帮助,帮助-01,false), Span(23,24,List(10),朋友,朋友,false), Span(5,6,List(11),他,他,false), Span(21,22,List(12),这,这,false), Span(16,17,List(13),很,很,false)),Map(2 -> 挪动-01, 5 -> 椅子, 12 -> 这, 8 -> 想-02, 7 -> 他, 1 -> 事, 4 -> 日落, 11 -> 他, 6 -> 从前, 9 -> 帮助-01, 0 -> 想起-01, 10 -> 朋友, 3 -> 寻找-01, 13 -> 很),Map(x31 -> 他, x19 -> 从前, x13 -> 想起-01, x30 -> 这, x27 -> 帮助-01, x21 -> 寻找-01, x15 -> 事, x24 -> 想-02, x23 -> 日落, x26 -> 很, x29 -> 朋友, x14 -> 他, x20 -> 椅子, x17 -> 挪动-01))),[Ljava.lang.String;@2b61a019,Annotation([Ljava.lang.String;@11a00961,[Ljava.lang.String;@7ce9e05a,[Ljava.lang.String;@4992613f),Annotation([Ljava.lang.String;@6fd5717c,[Ljava.lang.String;@7e2f86e6,[Ledu.cmu.lti.nlp.amr.Dependency;@4d774249),Annotation([Ljava.lang.String;@17b64941,[Ljava.lang.String;@53ac845a,[Ljava.lang.String;@5136207f),Annotation([Ljava.lang.String;@26a4551a,[Ljava.lang.String;@3fdecce,[Ledu.cmu.lti.nlp.amr.Entity;@344426bf))
AMR:
(x13 / 想起-01, prep-from, x14 / 他)
(x13 / 想起-01, prep-under, x15 / 事)
(x17 / 挪动-01, ARG5, x20 / 椅子)
(x17 / 挪动-01, purpose, x21 / 寻找-01)
(x17 / 挪动-01, time, x19 / 从前)
(x19 / 从前, poss, x15 / 事)
(x21 / 寻找-01, quant, x23 / 日落)
(x24 / 想-02, degree, x26 / 很)
(x24 / 想-02, prep-along-with, x27 / 帮助-01)
(x27 / 帮助-01, subset, x29 / 朋友)
(x29 / 朋友, mod, x30 / 这)
(x29 / 朋友, poss, x31 / 他)
(x31 / 他, timezone, x13 / 想起-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.3
WARNING: makeIds can't find span Id: 0.0.1.0.0.3.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 65,227 microseconds
Sentence: “ 告诉 你 ， 我 知道 一 种 能 使 你 休息 的 办法 ， 你 要 什么 时候 休息 都 可以 。 ”

Oracle Span 1:  什么 => 什么
Oracle Span 2:  休息 => 休息-01
Oracle Span 3:  休息 => 休息-01
Oracle Span 4:  你 => 你
Oracle Span 5:  使 => 使-01
Oracle Span 6:  办法 => 办法
Oracle Span 7:  可以 => 可以-01
Oracle Span 8:  告诉 => 告诉-01
Oracle Span 9:  我 => 我
Oracle Span 10:  时候 => 时候
Oracle Span 11:  知道 => 知道-01
Oracle Span 12:  能 => 能-01
Oracle Span 13:  要 => 要-05
Oracle Span 14:  都 => 都
Spans:
Span 17-18:  什么 => 什么
Span 11-12:  休息 => 休息-01
Span 19-20:  休息 => 休息-01
Span 2-3:  你 => 你
Span 9-10:  使 => 使-01
Span 13-14:  办法 => 办法
Span 21-22:  可以 => 可以-01
Span 1-2:  告诉 => 告诉-01
Span 4-5:  我 => 我
Span 18-19:  时候 => 时候
Span 5-6:  知道 => 知道-01
Span 8-9:  能 => 能-01
Span 16-17:  要 => 要-05
Span 20-21:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  什么 => 什么
Oracle Span 11-12:  休息 => 休息-01
Oracle Span 19-20:  休息 => 休息-01
Oracle Span 2-3:  你 => 你
Oracle Span 9-10:  使 => 使-01
Oracle Span 13-14:  办法 => 办法
Oracle Span 21-22:  可以 => 可以-01
Oracle Span 1-2:  告诉 => 告诉-01
Oracle Span 4-5:  我 => 我
Oracle Span 18-19:  时候 => 时候
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 8-9:  能 => 能-01
Oracle Span 16-17:  要 => 要-05
Oracle Span 20-21:  都 => 都

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	告诉	_	VV	VV	_	6	conj	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	知道	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	种	_	M	M	_	14	clf	_	_
9	能	_	VV	VV	_	10	mmod	_	_
10	使	_	VV	VV	_	14	rcmod	_	_
11	你	_	PN	PN	_	10	dobj	_	_
12	休息	_	VV	VV	_	10	dep	_	_
13	的	_	DEC	DEC	_	10	cpm	_	_
14	办法	_	NN	NN	_	6	dobj	_	_
15	,	_	PU	PU	_	6	punct	_	_
16	你	_	PN	PN	_	22	nsubj	_	_
17	要	_	VV	VV	_	22	mmod	_	_
18	什么	_	DT	DT	_	19	det	_	_
19	时候	_	NN	NN	_	22	dep	_	_
20	休息	_	AD	AD	_	22	advmod	_	_
21	都	_	AD	AD	_	22	advmod	_	_
22	可以	_	VV	VV	_	6	dep	_	_
23	。	_	PU	PU	_	6	punct	_	_
24	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x29 / 知道-01, arg0, x30 / 我)
(x29 / 知道-01, arg1, x31 / 能-01)
(x31 / 能-01, arg0, x32 / 使-01)
(x32 / 使-01, arg0, x37 / 办法)
(x32 / 使-01, arg1, x35 / 你)
(x32 / 使-01, arg2, x36 / 休息-01)
(x40 / 可以-01, arg0, x41 / 要-05)
(x40 / 可以-01, manner, x46 / 都)
(x41 / 要-05, arg1, x43 / 休息-01)
(x43 / 休息-01, time, x44 / 时候)
(x44 / 时候, mod, x45 / 什么)

Input(Some(Graph((say :arg1 (告诉-01 :arg2 x35 :arg1 (and :op (知道-01 :arg1 (能-01 :arg0 (使-01 :arg0 (办法 :quant 1) :arg2 (休息-01 :arg0 x35) :arg1 你)) :arg0 我) :arg2 (可以-01 :manner 都 :arg0 (要-05 :arg1 (休息-01 :time (时候 :mod 什么)) :arg0 x35))))),ArrayBuffer(Span(1,2,List(0),告诉,告诉-01,false), Span(5,6,List(1),知道,知道-01,false), Span(8,9,List(2),能,能-01,false), Span(9,10,List(3),使,使-01,false), Span(13,14,List(4),办法,办法,false), Span(11,12,List(5),休息,休息-01,false), Span(2,3,List(6),你,你,false), Span(4,5,List(7),我,我,false), Span(21,22,List(8),可以,可以-01,false), Span(20,21,List(9),都,都,false), Span(16,17,List(10),要,要-05,false), Span(19,20,List(11),休息,休息-01,false), Span(18,19,List(12),时候,时候,false), Span(17,18,List(13),什么,什么,false)),Map(2 -> 能-01, 5 -> 休息-01, 12 -> 时候, 8 -> 可以-01, 7 -> 我, 1 -> 知道-01, 4 -> 办法, 11 -> 休息-01, 6 -> 你, 9 -> 都, 0 -> 告诉-01, 10 -> 要-05, 3 -> 使-01, 13 -> 什么),Map(x46 -> 都, x40 -> 可以-01, x43 -> 休息-01, x37 -> 办法, x31 -> 能-01, x45 -> 什么, x30 -> 我, x27 -> 告诉-01, x36 -> 休息-01, x41 -> 要-05, x44 -> 时候, x32 -> 使-01, x35 -> 你, x29 -> 知道-01))),[Ljava.lang.String;@5411dd90,Annotation([Ljava.lang.String;@50194e8d,[Ljava.lang.String;@3cee53dc,[Ljava.lang.String;@290aeb20),Annotation([Ljava.lang.String;@73ad4ecc,[Ljava.lang.String;@69da0b12,[Ledu.cmu.lti.nlp.amr.Dependency;@2764c546),Annotation([Ljava.lang.String;@59496961,[Ljava.lang.String;@408b87aa,[Ljava.lang.String;@79b08632),Annotation([Ljava.lang.String;@787f32b7,[Ljava.lang.String;@6aef4eb8,[Ledu.cmu.lti.nlp.amr.Entity;@76c52298))
AMR:
(x27 / 告诉-01, prep-as, x29 / 知道-01)
(x27 / 告诉-01, subset, x35 / 你)
(x29 / 知道-01, beneficiary, x30 / 我)
(x29 / 知道-01, source, x31 / 能-01)
(x32 / 使-01, direction, x31 / 能-01)
(x32 / 使-01, prep-for, x36 / 休息-01)
(x37 / 办法, conj-as-if, x36 / 休息-01)
(x40 / 可以-01, manner, x43 / 休息-01)
(x40 / 可以-01, manner, x46 / 都)
(x41 / 要-05, degree, x37 / 办法)
(x43 / 休息-01, time, x44 / 时候)
(x44 / 时候, conj-as-if, x41 / 要-05)
(x44 / 时候, mod, x45 / 什么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1.0.0
Decoded in 61,734 microseconds
Sentence: “ 我 老是 想 休息 。 ” 点灯人 说 。

Oracle Span 1:  休息 => 休息-01
Oracle Span 2:  想 => 想-01
Oracle Span 3:  老是 => 老是
Oracle Span 4:  说 => 说-01
Spans:
Span 4-5:  休息 => 休息-01
Span 3-4:  想 => 想-01
Span 2-3:  老是 => 老是
Span 8-9:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  休息 => 休息-01
Oracle Span 3-4:  想 => 想-01
Oracle Span 2-3:  老是 => 老是
Oracle Span 8-9:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	老是	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	9	dep	_	_
5	休息	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	点灯人	_	NR	NR	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg1, x3 / 想-01)
(x3 / 想-01, arg1, x6 / 休息-01)
(x3 / 想-01, time, x13 / 老是)

Input(Some(Graph((说-01 :arg0 (人 :arg0-of (点-01 :arg1 灯)) :arg1 (想-01 :time 老是 :arg0 x8 :arg1 (休息-01 :arg0 x8))),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),想,想-01,false), Span(2,3,List(2),老是,老是,false), Span(4,5,List(3),休息,休息-01,false)),Map(2 -> 老是, 1 -> 想-01, 0 -> 说-01, 3 -> 休息-01),Map(x13 -> 老是, x3 -> 想-01, x6 -> 休息-01, x0 -> 说-01))),[Ljava.lang.String;@bb9ab64,Annotation([Ljava.lang.String;@a52ca2e,[Ljava.lang.String;@1ad8df52,[Ljava.lang.String;@45d6ef73),Annotation([Ljava.lang.String;@3f29e26,[Ljava.lang.String;@1f6d27cc,[Ledu.cmu.lti.nlp.amr.Dependency;@4393593c),Annotation([Ljava.lang.String;@314c8b4a,[Ljava.lang.String;@26d820eb,[Ljava.lang.String;@507d20bb),Annotation([Ljava.lang.String;@9fec931,[Ljava.lang.String;@5cbd159f,[Ledu.cmu.lti.nlp.amr.Entity;@3b05a99b))
AMR:
(x0 / 说-01, manner, x6 / 休息-01)
(x3 / 想-01, subset, x6 / 休息-01)
(x3 / 想-01, time, x13 / 老是)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,119 microseconds
Sentence: 因为 ， 一 个 人 可以 同时 是 忠实 的 ， 又 是 懒惰 的 。

Oracle Span 1:  人 => 人
Oracle Span 2:  可以 => 可以-02
Oracle Span 3:  同时 => 同时
Oracle Span 4:  忠实 => 忠实-01
Oracle Span 5:  懒惰 => 懒惰-01
Spans:
Span 4-5:  人 => 人
Span 5-6:  可以 => 可以-02
Span 6-7:  同时 => 同时
Span 8-9:  忠实 => 忠实-01
Span 13-14:  懒惰 => 懒惰-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  人 => 人
Oracle Span 5-6:  可以 => 可以-02
Oracle Span 6-7:  同时 => 同时
Oracle Span 8-9:  忠实 => 忠实-01
Oracle Span 13-14:  懒惰 => 懒惰-01

Dependencies:
1	因为	_	P	P	_	8	prep	_	_
2	,	_	PU	PU	_	1	punct	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	人	_	NN	NN	_	6	nsubj	_	_
6	可以	_	VV	VV	_	1	dep	_	_
7	同时	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	忠实	_	VA	VA	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	又	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	8	dep	_	_
14	懒惰	_	VA	VA	_	13	attr	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	。	_	PU	PU	_	8	punct	_	_

Oracle:


Input(Some(Graph((causation :arg1 (可以-02 :arg0 (and :op 忠实-01 :op 懒惰-01 :domain (人 :quant 1) :time 同时))),ArrayBuffer(Span(5,6,List(0),可以,可以-02,false), Span(8,9,List(1),忠实,忠实-01,false), Span(13,14,List(2),懒惰,懒惰-01,false), Span(4,5,List(3),人,人,false), Span(6,7,List(4),同时,同时,false)),Map(2 -> 懒惰-01, 1 -> 忠实-01, 4 -> 同时, 0 -> 可以-02, 3 -> 人),Map(x25 -> 忠实-01, x27 -> 人, x23 -> 可以-02, x26 -> 懒惰-01, x29 -> 同时))),[Ljava.lang.String;@2c43eb8,Annotation([Ljava.lang.String;@7d0cc890,[Ljava.lang.String;@49293b43,[Ljava.lang.String;@5ff60a8c),Annotation([Ljava.lang.String;@7ce4de34,[Ljava.lang.String;@67b7c170,[Ledu.cmu.lti.nlp.amr.Dependency;@67440de6),Annotation([Ljava.lang.String;@889d9e8,[Ljava.lang.String;@5246a3b3,[Ljava.lang.String;@ba354ca),Annotation([Ljava.lang.String;@4c4f4365,[Ljava.lang.String;@acf859d,[Ledu.cmu.lti.nlp.amr.Entity;@6df3e44c))
AMR:
(x23 / 可以-02, ARG0, x29 / 同时)
(x23 / 可以-02, prep-from, x27 / 人)
(x26 / 懒惰-01, time, x29 / 同时)
(x29 / 同时, ARG4, x25 / 忠实-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.3
Decoded in 12,053 microseconds
Sentence: 小 王子 接着 说 ： “ 你 的 这 颗 行星 这样 小 ， 你 三 步 就 可以 绕 它 一 圈 。

Oracle Span 1:  你 => 你
Oracle Span 2:  可以 => 可以-03
Oracle Span 3:  圈 => 圈
Oracle Span 4:  小 => 小-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  步 => (temporal-quantity :unit 步)
Oracle Span 7:  王子 => 王子
Oracle Span 8:  绕 => 绕-01
Oracle Span 9:  行星 => 行星
Oracle Span 10:  说 => 说-01
Oracle Span 11:  这 => 这
Oracle Span 12:  这样 => 这样
Spans:
Span 6-7:  你 => 你
Span 18-19:  可以 => 可以-03
Span 22-23:  圈 => 圈
Span 0-1:  小 => 小-01
Span 12-13:  小 => 小-01
Span 16-17:  步 => (temporal-quantity :unit 步)
Span 1-2:  王子 => 王子
Span 19-20:  绕 => 绕-01
Span 10-11:  行星 => 行星
Span 3-4:  说 => 说-01
Span 8-9:  这 => 这
Span 11-12:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 18-19:  可以 => 可以-03
Oracle Span 22-23:  圈 => 圈
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  小 => 小-01
Oracle Span 16-17:  步 => (temporal-quantity :unit 步)
Oracle Span 1-2:  王子 => 王子
Oracle Span 19-20:  绕 => 绕-01
Oracle Span 10-11:  行星 => 行星
Oracle Span 3-4:  说 => 说-01
Oracle Span 8-9:  这 => 这
Oracle Span 11-12:  这样 => 这样

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	接着	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	11	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	这	_	DT	DT	_	11	det	_	_
10	颗	_	M	M	_	9	clf	_	_
11	行星	_	NN	NN	_	13	nsubj	_	_
12	这样	_	AD	AD	_	13	advmod	_	_
13	小	_	VA	VA	_	4	ccomp	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	你	_	PN	PN	_	20	nsubj	_	_
16	三	_	CD	CD	_	17	nummod	_	_
17	步	_	M	M	_	20	dep	_	_
18	就	_	AD	AD	_	20	advmod	_	_
19	可以	_	VV	VV	_	20	mmod	_	_
20	绕	_	VV	VV	_	13	conj	_	_
21	它	_	PN	PN	_	23	nn	_	_
22	一	_	CD	CD	_	23	nummod	_	_
23	圈	_	NN	NN	_	20	dobj	_	_
24	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 可以-03, arg1, x13 / 绕-01)
(x13 / 绕-01, manner, x18 / temporal-quantity)
(x13 / 绕-01, unit, x23 / 圈)
(x18 / temporal-quantity, unit, x24 / 步)
(x2 / 说-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 小-01, arg0, x8 / 行星)
(x6 / 小-01, degree, x7 / 这样)
(x8 / 行星, mod, x9 / 这)
(x8 / 行星, poss, x10 / 你)

Input(Some(Graph((temporal :arg2 (说-01 :arg1 (causation :arg1 (小-01 :arg0 (行星 :poss 你 :mod 这) :degree 这样) :arg2 (可以-03 :arg1 (绕-01 :unit 圈 :quant 1 :arg1 x8 :manner (temporal-quantity :unit 步 :quant 3) :arg0 x10) :arg0 x10)) :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(0,1,List(1),小,小-01,false), Span(10,11,List(2),行星,行星,false), Span(6,7,List(3),你,你,false), Span(8,9,List(4),这,这,false), Span(11,12,List(5),这样,这样,false), Span(18,19,List(6),可以,可以-03,false), Span(19,20,List(7),绕,绕-01,false), Span(22,23,List(8),圈,圈,false), Span(16,17,List(9, 10),步,(temporal-quantity :unit 步),false), Span(1,2,List(11),王子,王子,false), Span(12,13,List(12),小,小-01,false)),Map(2 -> 行星, 5 -> 这样, 12 -> 小-01, 8 -> 圈, 7 -> 绕-01, 1 -> 小-01, 4 -> 这, 11 -> 王子, 6 -> 可以-03, 9 -> temporal-quantity, 0 -> 说-01, 10 -> 步, 3 -> 你),Map(x10 -> 你, x2 -> 说-01, x13 -> 绕-01, x8 -> 行星, x7 -> 这样, x24 -> 步, x18 -> temporal-quantity, x4 -> 小-01, x23 -> 圈, x3 -> 王子, x11 -> 可以-03, x6 -> 小-01, x9 -> 这))),[Ljava.lang.String;@7ce7e83c,Annotation([Ljava.lang.String;@4a05d8ae,[Ljava.lang.String;@3c904f1e,[Ljava.lang.String;@4eb30d44),Annotation([Ljava.lang.String;@d56aaa6,[Ljava.lang.String;@6972c30a,[Ledu.cmu.lti.nlp.amr.Dependency;@57a48985),Annotation([Ljava.lang.String;@1ab6718,[Ljava.lang.String;@3910fe11,[Ljava.lang.String;@460510aa),Annotation([Ljava.lang.String;@351e414e,[Ljava.lang.String;@6fd77352,[Ledu.cmu.lti.nlp.amr.Entity;@5109e8cf))
AMR:
(x11 / 可以-03, time, x8 / 行星)
(x13 / 绕-01, degree, x11 / 可以-03)
(x13 / 绕-01, manner, x18 / temporal-quantity)
(x13 / 绕-01, unit, x23 / 圈)
(x18 / temporal-quantity, unit, x24 / 步)
(x2 / 说-01, op, x3 / 王子)
(x2 / 说-01, prep-through, x8 / 行星)
(x3 / 王子, mod, x6 / 小-01)
(x4 / 小-01, degree, x7 / 这样)
(x7 / 这样, poss, x8 / 行星)
(x8 / 行星, mod, x9 / 这)
(x8 / 行星, poss, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.4
WARNING: makeIds can't find span Id: 0.0.1.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.1.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 50,308 microseconds
Sentence: 你 只要 慢慢 地 走 ， 就 可以 一直 在 太阳 的 照耀 下 ，

Oracle Span 1:  一直 => 一直
Oracle Span 2:  你 => 你
Oracle Span 3:  可以 => 可以-01
Oracle Span 4:  太阳 => 太阳
Oracle Span 5:  慢慢 => 慢慢
Oracle Span 6:  照耀 => 照耀-01
Oracle Span 7:  走 => 走-01
Spans:
Span 8-9:  一直 => 一直
Span 0-1:  你 => 你
Span 7-8:  可以 => 可以-01
Span 10-11:  太阳 => 太阳
Span 2-3:  慢慢 => 慢慢
Span 12-13:  照耀 => 照耀-01
Span 4-5:  走 => 走-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一直 => 一直
Oracle Span 0-1:  你 => 你
Oracle Span 7-8:  可以 => 可以-01
Oracle Span 10-11:  太阳 => 太阳
Oracle Span 2-3:  慢慢 => 慢慢
Oracle Span 12-13:  照耀 => 照耀-01
Oracle Span 4-5:  走 => 走-01

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	只要	_	CS	CS	_	5	advmod	_	_
3	慢慢	_	AD	AD	_	5	advmod	_	_
4	地	_	NN	NN	_	5	dobj	_	_
5	走	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	可以	_	VV	VV	_	5	conj	_	_
9	一直	_	AD	AD	_	10	advmod	_	_
10	在	_	P	P	_	8	prep	_	_
11	太阳	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	照耀	_	NN	NN	_	14	lobj	_	_
14	下	_	LC	LC	_	10	plmod	_	_
15	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x15 / 可以-01, arg0, x16 / 照耀-01)
(x16 / 照耀-01, arg0, x17 / 太阳)
(x16 / 照耀-01, manner, x20 / 一直)
(x21 / 走-01, arg0, x22 / 你)
(x21 / 走-01, manner, x23 / 慢慢)

Input(Some(Graph((condition :arg2 (可以-01 :arg0 (照耀-01 :manner 一直 :arg1 x13 :arg0 太阳)) :arg1 (走-01 :manner 慢慢 :arg0 你)),ArrayBuffer(Span(7,8,List(0),可以,可以-01,false), Span(12,13,List(1),照耀,照耀-01,false), Span(8,9,List(2),一直,一直,false), Span(10,11,List(3),太阳,太阳,false), Span(4,5,List(4),走,走-01,false), Span(2,3,List(5),慢慢,慢慢,false), Span(0,1,List(6),你,你,false)),Map(2 -> 一直, 5 -> 慢慢, 1 -> 照耀-01, 4 -> 走-01, 6 -> 你, 0 -> 可以-01, 3 -> 太阳),Map(x22 -> 你, x16 -> 照耀-01, x21 -> 走-01, x15 -> 可以-01, x23 -> 慢慢, x20 -> 一直, x17 -> 太阳))),[Ljava.lang.String;@3f672204,Annotation([Ljava.lang.String;@78b41097,[Ljava.lang.String;@2c2db130,[Ljava.lang.String;@327c7bea),Annotation([Ljava.lang.String;@348d18a3,[Ljava.lang.String;@6c65860d,[Ledu.cmu.lti.nlp.amr.Dependency;@2d000e80),Annotation([Ljava.lang.String;@7cf283e1,[Ljava.lang.String;@20e6c4dc,[Ljava.lang.String;@60737b23),Annotation([Ljava.lang.String;@4d2a1da3,[Ljava.lang.String;@252f626c,[Ledu.cmu.lti.nlp.amr.Entity;@33f98231))
AMR:
(x15 / 可以-01, time, x16 / 照耀-01)
(x16 / 照耀-01, manner, x20 / 一直)
(x16 / 照耀-01, time, x17 / 太阳)
(x21 / 走-01, manner, x23 / 慢慢)
(x21 / 走-01, subevent, x22 / 你)
(x22 / 你, prep-on-behalf, x15 / 可以-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 20,282 microseconds
Sentence: 你 想 休息 的 时候 ， 你 就 这样 走 … 那么 ， 你 要 白天 有 多 长 它 就 有 多 长 。 ”

Oracle Span 1:  休息 => 休息-01
Oracle Span 2:  你 => 你
Oracle Span 3:  多 => 多
Oracle Span 4:  就 => 就
Oracle Span 5:  就 => 就
Oracle Span 6:  想 => 想-02
Oracle Span 7:  有 => 有-01
Oracle Span 8:  白天 => 白天
Oracle Span 9:  要 => 要-04
Oracle Span 10:  走 => 走-01
Oracle Span 11:  这样 => 这样
Oracle Span 12:  长 => 长-02
Spans:
Span 2-3:  休息 => 休息-01
Span 0-1:  你 => 你
Span 17-18:  多 => 多
Span 7-8:  就 => 就
Span 20-21:  就 => 就
Span 1-2:  想 => 想-02
Span 16-17:  有 => 有-01
Span 15-16:  白天 => 白天
Span 14-15:  要 => 要-04
Span 9-10:  走 => 走-01
Span 8-9:  这样 => 这样
Span 18-19:  长 => 长-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  休息 => 休息-01
Oracle Span 0-1:  你 => 你
Oracle Span 17-18:  多 => 多
Oracle Span 7-8:  就 => 就
Oracle Span 20-21:  就 => 就
Oracle Span 1-2:  想 => 想-02
Oracle Span 16-17:  有 => 有-01
Oracle Span 15-16:  白天 => 白天
Oracle Span 14-15:  要 => 要-04
Oracle Span 9-10:  走 => 走-01
Oracle Span 8-9:  这样 => 这样
Oracle Span 18-19:  长 => 长-02

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	休息	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	你	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	这样	_	AD	AD	_	10	advmod	_	_
10	走	_	VV	VV	_	2	ccomp	_	_
11	…	_	PU	PU	_	2	punct	_	_
12	那么	_	AD	AD	_	17	advmod	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	你	_	PN	PN	_	17	nsubj	_	_
15	要	_	VV	VV	_	17	mmod	_	_
16	白天	_	AD	AD	_	17	advmod	_	_
17	有	_	VE	VE	_	2	conj	_	_
18	多	_	AD	AD	_	19	advmod	_	_
19	长	_	VA	VA	_	22	conj	_	_
20	它	_	PN	PN	_	22	dep	_	_
21	就	_	AD	AD	_	22	advmod	_	_
22	有	_	VE	VE	_	17	dep	_	_
23	多	_	CD	CD	_	24	nummod	_	_
24	长	_	NN	NN	_	22	dobj	_	_
25	。	_	PU	PU	_	2	punct	_	_
26	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x35 / 走-01, arg0, x38 / 你)
(x35 / 走-01, manner, x36 / 这样)
(x35 / 走-01, manner, x37 / 就)
(x35 / 走-01, time, x39 / 想-02)
(x39 / 想-02, arg1, x41 / 休息-01)
(x43 / 要-04, arg1, x45 / 白天)
(x43 / 要-04, arg2, x46 / 长-02)
(x46 / 长-02, quant, x47 / 多)
(x48 / 有-01, manner, x49 / 就)

Input(Some(Graph((say :arg1 (causation :arg1 (走-01 :time (想-02 :arg1 休息-01 :arg0 x38) :arg0 你 :manner 就 :manner 这样) :arg2 (condition :arg1 (要-04 :arg2 (长-02 :quant 多) :arg1 白天 :arg0 x38) :arg2 (有-01 :arg1 x46 :arg0 x45 :manner 就)))),ArrayBuffer(Span(9,10,List(0),走,走-01,false), Span(1,2,List(1),想,想-02,false), Span(2,3,List(2),休息,休息-01,false), Span(0,1,List(3),你,你,false), Span(7,8,List(4),就,就,false), Span(8,9,List(5),这样,这样,false), Span(14,15,List(6),要,要-04,false), Span(18,19,List(7),长,长-02,false), Span(17,18,List(8),多,多,false), Span(15,16,List(9),白天,白天,false), Span(16,17,List(10),有,有-01,false), Span(20,21,List(11),就,就,false)),Map(2 -> 休息-01, 5 -> 这样, 8 -> 多, 7 -> 长-02, 1 -> 想-02, 4 -> 就, 11 -> 就, 6 -> 要-04, 9 -> 白天, 0 -> 走-01, 10 -> 有-01, 3 -> 你),Map(x46 -> 长-02, x49 -> 就, x43 -> 要-04, x37 -> 就, x39 -> 想-02, x45 -> 白天, x48 -> 有-01, x36 -> 这样, x41 -> 休息-01, x38 -> 你, x47 -> 多, x35 -> 走-01))),[Ljava.lang.String;@48284d0e,Annotation([Ljava.lang.String;@557286ad,[Ljava.lang.String;@b10a26d,[Ljava.lang.String;@74075134),Annotation([Ljava.lang.String;@7e4d2287,[Ljava.lang.String;@3f4b840d,[Ledu.cmu.lti.nlp.amr.Dependency;@31464a43),Annotation([Ljava.lang.String;@7f8633ae,[Ljava.lang.String;@68c87fc3,[Ljava.lang.String;@bc0f53b),Annotation([Ljava.lang.String;@8d7b252,[Ljava.lang.String;@4682eba5,[Ledu.cmu.lti.nlp.amr.Entity;@6d9fb2d1))
AMR:
(x35 / 走-01, manner, x36 / 这样)
(x35 / 走-01, manner, x37 / 就)
(x35 / 走-01, time, x39 / 想-02)
(x35 / 走-01, time, x43 / 要-04)
(x39 / 想-02, manner, x38 / 你)
(x41 / 休息-01, time, x39 / 想-02)
(x43 / 要-04, ARG3, x45 / 白天)
(x46 / 长-02, manner, x49 / 就)
(x46 / 长-02, quant, x47 / 多)
(x48 / 有-01, manner, x43 / 要-04)
(x48 / 有-01, prep-on, x46 / 长-02)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.2.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 45,281 microseconds
Sentence: “ 这 办法 帮 不 了 我 多 大 忙 ， 点灯人 说 。

Oracle Span 1:  办法 => 办法
Oracle Span 2:  大 => 大-01
Oracle Span 3:  说 => 说-01
Oracle Span 4:  这 => 这
Spans:
Span 2-3:  办法 => 办法
Span 8-9:  大 => 大-01
Span 12-13:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  办法 => 办法
Oracle Span 8-9:  大 => 大-01
Oracle Span 12-13:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	办法	_	NN	NN	_	4	nsubj	_	_
4	帮	_	VV	VV	_	0	root	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	了	_	VV	VV	_	4	ccomp	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	多	_	VA	VA	_	4	conj	_	_
9	大	_	VA	VA	_	8	comod	_	_
10	忙	_	VA	VA	_	8	comod	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	点灯人	_	NR	NR	_	13	nsubj	_	_
13	说	_	VV	VV	_	4	dep	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	这	_	PN	PN	_	6	xsubj	_	_
16	办法	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x16 / 办法, mod, x17 / 这)

Input(Some(Graph((说-01 :arg1 (帮忙-01 :degree 大-01 :polarity - :arg0 (办法 :mod 这) :arg1 x11) :arg0 (人 :arg0-of (点-01 :arg1 灯))),ArrayBuffer(Span(12,13,List(0),说,说-01,false), Span(8,9,List(1),大,大-01,false), Span(2,3,List(2),办法,办法,false), Span(1,2,List(3),这,这,false)),Map(2 -> 办法, 1 -> 大-01, 0 -> 说-01, 3 -> 这),Map(x16 -> 办法, x20 -> 大-01, x17 -> 这, x0 -> 说-01))),[Ljava.lang.String;@61fafb74,Annotation([Ljava.lang.String;@540a903b,[Ljava.lang.String;@58496dc,[Ljava.lang.String;@151db587),Annotation([Ljava.lang.String;@238acd0b,[Ljava.lang.String;@23811a09,[Ledu.cmu.lti.nlp.amr.Dependency;@2125ad3),Annotation([Ljava.lang.String;@7a5b769b,[Ljava.lang.String;@f4c0e4e,[Ljava.lang.String;@24361cfc),Annotation([Ljava.lang.String;@34e20e6b,[Ljava.lang.String;@15ac59c2,[Ledu.cmu.lti.nlp.amr.Entity;@7a7d1b47))
AMR:
(x0 / 说-01, time, x20 / 大-01)
(x16 / 办法, mod, x17 / 这)
(x16 / 办法, mod, x20 / 大-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
Decoded in 6,962 microseconds
Sentence: 生活 中 我 喜欢 的 就 是 睡觉 。 ”

Oracle Span 1:  喜欢 => 喜欢-01
Oracle Span 2:  我 => 我
Oracle Span 3:  生活 => 生活-01
Oracle Span 4:  睡觉 => 睡觉-01
Spans:
Span 3-4:  喜欢 => 喜欢-01
Span 2-3:  我 => 我
Span 0-1:  生活 => 生活-01
Span 7-8:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  喜欢 => 喜欢-01
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  生活 => 生活-01
Oracle Span 7-8:  睡觉 => 睡觉-01

Dependencies:
1	生活	_	NN	NN	_	2	lobj	_	_
2	中	_	LC	LC	_	4	loc	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	喜欢	_	VA	VA	_	7	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	睡觉	_	NN	NN	_	7	attr	_	_
9	。	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x9 / 喜欢-01, arg0, x10 / 我)
(x9 / 喜欢-01, arg1, x11 / 睡觉-01)
(x9 / 喜欢-01, time, x12 / 生活-01)

Input(Some(Graph((say :arg1 (喜欢-01 :manner 就是 :time 生活-01 :arg1 睡觉-01 :arg0 我)),ArrayBuffer(Span(3,4,List(0),喜欢,喜欢-01,false), Span(0,1,List(1),生活,生活-01,false), Span(7,8,List(2),睡觉,睡觉-01,false), Span(2,3,List(3),我,我,false)),Map(2 -> 睡觉-01, 1 -> 生活-01, 0 -> 喜欢-01, 3 -> 我),Map(x10 -> 我, x12 -> 生活-01, x11 -> 睡觉-01, x9 -> 喜欢-01))),[Ljava.lang.String;@6eb82908,Annotation([Ljava.lang.String;@4a8df3e2,[Ljava.lang.String;@3d98d138,[Ljava.lang.String;@2f2d52ef),Annotation([Ljava.lang.String;@f2ce6b,[Ljava.lang.String;@25c53f74,[Ledu.cmu.lti.nlp.amr.Dependency;@5e2f3be5),Annotation([Ljava.lang.String;@1bd0b0e5,[Ljava.lang.String;@dc7b462,[Ljava.lang.String;@1f51431),Annotation([Ljava.lang.String;@26a2f7f9,[Ljava.lang.String;@38eb2c50,[Ledu.cmu.lti.nlp.amr.Entity;@8bffb8b))
AMR:
(x9 / 喜欢-01, extent, x11 / 睡觉-01)
(x9 / 喜欢-01, manner, x10 / 我)
(x9 / 喜欢-01, time, x12 / 生活-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,416 microseconds
Sentence: “ 真 不 走运 。 ” 小 王子 说 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  真 => 真
Oracle Span 4:  说 => 说-01
Oracle Span 5:  走运 => 走运-01
Spans:
Span 6-7:  小 => 小-01
Span 7-8:  王子 => 王子
Span 1-2:  真 => 真
Span 8-9:  说 => 说-01
Span 3-4:  走运 => 走运-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 1-2:  真 => 真
Oracle Span 8-9:  说 => 说-01
Oracle Span 3-4:  走运 => 走运-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	真	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	走运	_	VA	VA	_	9	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 走运-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 走运-01, degree, x6 / 真)

Input(Some(Graph((说-01 :arg1 (走运-01 :degree 真 :polarity -) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),走运,走运-01,false), Span(1,2,List(2),真,真,false), Span(7,8,List(3),王子,王子,false), Span(6,7,List(4),小,小-01,false)),Map(2 -> 真, 1 -> 走运-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x4 -> 走运-01, x3 -> 小-01, x6 -> 真, x0 -> 说-01))),[Ljava.lang.String;@21422231,Annotation([Ljava.lang.String;@10ee04df,[Ljava.lang.String;@7186333e,[Ljava.lang.String;@692fd26),Annotation([Ljava.lang.String;@36f1046f,[Ljava.lang.String;@56d93692,[Ledu.cmu.lti.nlp.amr.Dependency;@1686f0b4),Annotation([Ljava.lang.String;@76c548f,[Ljava.lang.String;@3900fa71,[Ljava.lang.String;@26722665),Annotation([Ljava.lang.String;@7d0614f,[Ljava.lang.String;@627d8516,[Ledu.cmu.lti.nlp.amr.Entity;@5c10285a))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x4 / 走运-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 走运-01, degree, x6 / 真)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,199 microseconds
Sentence: “ 真 不 走运 。 ” 点灯人 说 。

Oracle Span 1:  点灯人 => 点灯人
Oracle Span 2:  真 => 真
Oracle Span 3:  说 => 说-01
Oracle Span 4:  走运 => 走运-01
Spans:
Span 6-7:  点灯人 => 点灯人
Span 1-2:  真 => 真
Span 7-8:  说 => 说-01
Span 3-4:  走运 => 走运-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  点灯人 => 点灯人
Oracle Span 1-2:  真 => 真
Oracle Span 7-8:  说 => 说-01
Oracle Span 3-4:  走运 => 走运-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	真	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	走运	_	VA	VA	_	8	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	点灯人	_	NR	NR	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 点灯人)
(x0 / 说-01, arg1, x3 / 走运-01)
(x3 / 走运-01, degree, x5 / 真)

Input(Some(Graph((说-01 :arg1 (走运-01 :degree 真 :polarity -) :arg0 点灯人),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(3,4,List(1),走运,走运-01,false), Span(1,2,List(2),真,真,false), Span(6,7,List(3),点灯人,点灯人,false)),Map(2 -> 真, 1 -> 走运-01, 0 -> 说-01, 3 -> 点灯人),Map(x2 -> 点灯人, x5 -> 真, x3 -> 走运-01, x0 -> 说-01))),[Ljava.lang.String;@6b667cb3,Annotation([Ljava.lang.String;@6f38a289,[Ljava.lang.String;@61e3cf4d,[Ljava.lang.String;@3cec79d3),Annotation([Ljava.lang.String;@64b70919,[Ljava.lang.String;@4e31c3ec,[Ledu.cmu.lti.nlp.amr.Dependency;@3157e4c0),Annotation([Ljava.lang.String;@6eaa21d8,[Ljava.lang.String;@328902d5,[Ljava.lang.String;@72e789cb),Annotation([Ljava.lang.String;@7c1812b3,[Ljava.lang.String;@43034809,[Ledu.cmu.lti.nlp.amr.Entity;@39e67516))
AMR:
(x0 / 说-01, location, x2 / 点灯人)
(x3 / 走运-01, degree, x5 / 真)
(x3 / 走运-01, location, x2 / 点灯人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,135 microseconds
Sentence: “ 早上 好 。 ”

Oracle Span 1:  好 => 好-01
Oracle Span 2:  早上 => 早上
Spans:
Span 2-3:  好 => 好-01
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph((say :arg1 (好-01 :arg0 早上)),ArrayBuffer(Span(2,3,List(0),好,好-01,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-01),Map(x5 -> 好-01, x6 -> 早上))),[Ljava.lang.String;@77010a30,Annotation([Ljava.lang.String;@4bb003e9,[Ljava.lang.String;@12aa4996,[Ljava.lang.String;@18eec010),Annotation([Ljava.lang.String;@67c119b7,[Ljava.lang.String;@2ca5f1ed,[Ledu.cmu.lti.nlp.amr.Dependency;@6c03fb16),Annotation([Ljava.lang.String;@28348c6,[Ljava.lang.String;@6de0f580,[Ljava.lang.String;@6e495b48),Annotation([Ljava.lang.String;@1d61c6dc,[Ljava.lang.String;@53c68ce,[Ledu.cmu.lti.nlp.amr.Entity;@6f9ad11c))
AMR:
(x5 / 好-01, beneficiary, x6 / 早上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,563 microseconds
Sentence: 于是 他 又 熄灭 了 路灯 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  熄灭 => 熄灭-01
Oracle Span 4:  路灯 => 路灯
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  熄灭 => 熄灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	熄灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 熄灭-01, arg0, x4 / 他)
(x2 / 熄灭-01, arg1, x5 / 路灯)
(x2 / 熄灭-01, manner, x3 / 又)

Input(Some(Graph((temporal :arg2 (熄灭-01 :arg1 路灯 :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),熄灭,熄灭-01,false), Span(5,6,List(1),路灯,路灯,false), Span(1,2,List(2),他,他,false), Span(2,3,List(3),又,又,false)),Map(2 -> 他, 1 -> 路灯, 0 -> 熄灭-01, 3 -> 又),Map(x2 -> 熄灭-01, x5 -> 路灯, x4 -> 他, x3 -> 又))),[Ljava.lang.String;@4b2d44bc,Annotation([Ljava.lang.String;@58e92c23,[Ljava.lang.String;@3e7545e8,[Ljava.lang.String;@75e710b),Annotation([Ljava.lang.String;@26f7cdf8,[Ljava.lang.String;@376e7531,[Ledu.cmu.lti.nlp.amr.Dependency;@23202c31),Annotation([Ljava.lang.String;@5782d777,[Ljava.lang.String;@4f824872,[Ljava.lang.String;@b016b4e),Annotation([Ljava.lang.String;@29629fbb,[Ljava.lang.String;@681adc8f,[Ledu.cmu.lti.nlp.amr.Entity;@3506d826))
AMR:
(x2 / 熄灭-01, ARG6, x4 / 他)
(x2 / 熄灭-01, manner, x3 / 又)
(x2 / 熄灭-01, mod, x5 / 路灯)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,585 microseconds
Sentence: 小 王子 在 他 继续 往 前 旅行 的 途中 ， 自言自语 地 说道 ： “ 这个 人 一定 会 被 其他 那些 人 ， 国王 呀 ， 爱 虚荣 的 呀 ， 酒鬼 呀 ， 实业家 呀 ， 所 瞧 不 起 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  会 => 会-02
Oracle Span 5:  其他 => 其他
Oracle Span 6:  前 => 前
Oracle Span 7:  国王 => 国王
Oracle Span 8:  实业家 => 实业家
Oracle Span 9:  小 => 小-01
Oracle Span 10:  旅行 => 旅行-01
Oracle Span 11:  爱 => (person :arg0-of 爱-01)
Oracle Span 12:  王子 => 王子
Oracle Span 13:  继续 => 继续-01
Oracle Span 14:  自言自语 => 自言自语
Oracle Span 15:  虚荣 => 虚荣
Oracle Span 16:  说道 => 说道-01
Oracle Span 17:  途中 => 途中
Oracle Span 18:  那些 => 那些
Oracle Span 19:  酒鬼 => 酒鬼
Spans:
Span 18-19:  一定 => 一定
Span 17-18:  人 => 人
Span 23-24:  人 => 人
Span 19-20:  会 => 会-02
Span 21-22:  其他 => 其他
Span 6-7:  前 => 前
Span 25-26:  国王 => 国王
Span 36-37:  实业家 => 实业家
Span 0-1:  小 => 小-01
Span 7-8:  旅行 => 旅行-01
Span 28-29:  爱 => (person :arg0-of 爱-01)
Span 1-2:  王子 => 王子
Span 4-5:  继续 => 继续-01
Span 11-12:  自言自语 => 自言自语
Span 29-30:  虚荣 => 虚荣
Span 13-14:  说道 => 说道-01
Span 9-10:  途中 => 途中
Span 22-23:  那些 => 那些
Span 33-34:  酒鬼 => 酒鬼

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 可是 唯 有 他 不 使 我 感到 荒唐 可笑 。

Oracle Span 1:  他 => 他
Oracle Span 2:  可笑 => 可笑-01
Oracle Span 3:  唯 => 唯
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  我 => 我
Oracle Span 6:  有 => 有-02
Oracle Span 7:  荒唐 => 荒唐-01
Spans:
Span 3-4:  他 => 他
Span 9-10:  可笑 => 可笑-01
Span 1-2:  唯 => 唯
Span 7-8:  感到 => 感到-01
Span 6-7:  我 => 我
Span 2-3:  有 => 有-02
Span 8-9:  荒唐 => 荒唐-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 9-10:  可笑 => 可笑-01
Oracle Span 1-2:  唯 => 唯
Oracle Span 7-8:  感到 => 感到-01
Oracle Span 6-7:  我 => 我
Oracle Span 2-3:  有 => 有-02
Oracle Span 8-9:  荒唐 => 荒唐-01

Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	唯	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	使	_	VV	VV	_	3	dep	_	_
7	我	_	PN	PN	_	6	dobj	_	_
8	感到	_	VV	VV	_	6	dep	_	_
9	荒唐	_	NN	NN	_	10	nn	_	_
10	可笑	_	NN	NN	_	8	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 感到-01, arg0, x15 / 我)
(x14 / 感到-01, cause, x19 / 他)
(x20 / 有-02, arg1, x19 / 他)
(x20 / 有-02, manner, x21 / 唯)

Input(Some(Graph((contrast :arg2 (感到-01 :cause (他 :arg1-of (有-02 :manner 唯)) :arg1 (and :op 荒唐-01 :op 可笑-01) :arg0 我)),ArrayBuffer(Span(7,8,List(0),感到,感到-01,false), Span(3,4,List(1),他,他,false), Span(2,3,List(2),有,有-02,false), Span(1,2,List(3),唯,唯,false), Span(8,9,List(4),荒唐,荒唐-01,false), Span(9,10,List(5),可笑,可笑-01,false), Span(6,7,List(6),我,我,false)),Map(2 -> 有-02, 5 -> 可笑-01, 1 -> 他, 4 -> 荒唐-01, 6 -> 我, 0 -> 感到-01, 3 -> 唯),Map(x19 -> 他, x15 -> 我, x21 -> 唯, x18 -> 可笑-01, x20 -> 有-02, x14 -> 感到-01, x17 -> 荒唐-01))),[Ljava.lang.String;@8ff5094,Annotation([Ljava.lang.String;@363f0ba0,[Ljava.lang.String;@35fb22a9,[Ljava.lang.String;@6c8909c3),Annotation([Ljava.lang.String;@1e008f36,[Ljava.lang.String;@50acf55d,[Ledu.cmu.lti.nlp.amr.Dependency;@3cae7b8b),Annotation([Ljava.lang.String;@184dbacc,[Ljava.lang.String;@2aeefcc,[Ljava.lang.String;@359ff4d9),Annotation([Ljava.lang.String;@7a22a3c2,[Ljava.lang.String;@f4cfd90,[Ledu.cmu.lti.nlp.amr.Entity;@7ae9a33a))
AMR:
(x14 / 感到-01, beneficiary, x15 / 我)
(x14 / 感到-01, op, x19 / 他)
(x17 / 荒唐-01, time, x15 / 我)
(x18 / 可笑-01, destination, x17 / 荒唐-01)
(x20 / 有-02, ARG5, x19 / 他)
(x20 / 有-02, manner, x21 / 唯)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,803 microseconds
Sentence: 这 可能 是 因为 他 所 关心 的 是 别的 事 ， 而 不 是 他 自己 。 ”

Oracle Span 1:  事 => 事
Oracle Span 2:  他 => 他
Oracle Span 3:  关心 => (thing :arg1-of 关心-01)
Oracle Span 4:  别的 => 别的
Oracle Span 5:  可能 => 可能-02
Oracle Span 6:  这 => 这
Spans:
Span 10-11:  事 => 事
Span 4-5:  他 => 他
Span 6-7:  关心 => (thing :arg1-of 关心-01)
Span 9-10:  别的 => 别的
Span 1-2:  可能 => 可能-02
Span 0-1:  这 => 这

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 惋惜 地 叹 了 口 气 ， 并且 又 对 自己 说道 ： “ 本来 这 是 我 唯一 可以 和 他 交成 朋友 的 人 。

Oracle Span 1:  人 => 人
Oracle Span 2:  他 => 他
Oracle Span 3:  可以 => 可以-01
Oracle Span 4:  唯一 => 唯一
Oracle Span 5:  惋惜 => 惋惜-01
Oracle Span 6:  朋友 => 朋友
Oracle Span 7:  本来 => 本来
Oracle Span 8:  说道 => 说道-01
Oracle Span 9:  这 => 这
Spans:
Span 26-27:  人 => 人
Span 0-1:  他 => 他
Span 20-21:  可以 => 可以-01
Span 19-20:  唯一 => 唯一
Span 1-2:  惋惜 => 惋惜-01
Span 24-25:  朋友 => 朋友
Span 15-16:  本来 => 本来
Span 12-13:  说道 => 说道-01
Span 16-17:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 26-27:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 20-21:  可以 => 可以-01
Oracle Span 19-20:  唯一 => 唯一
Oracle Span 1-2:  惋惜 => 惋惜-01
Oracle Span 24-25:  朋友 => 朋友
Oracle Span 15-16:  本来 => 本来
Oracle Span 12-13:  说道 => 说道-01
Oracle Span 16-17:  这 => 这

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	惋惜	_	VV	VV	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	叹	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	口	_	NN	NN	_	7	nn	_	_
7	气	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	并且	_	CC	CC	_	4	cc	_	_
10	又	_	AD	AD	_	13	advmod	_	_
11	对	_	P	P	_	13	prep	_	_
12	自己	_	PN	PN	_	11	pobj	_	_
13	说道	_	VV	VV	_	4	dep	_	_
14	：	_	PU	PU	_	4	punct	_	_
15	“	_	PU	PU	_	18	punct	_	_
16	本来	_	AD	AD	_	18	advmod	_	_
17	这	_	PN	PN	_	18	top	_	_
18	是	_	VC	VC	_	4	conj	_	_
19	我	_	PN	PN	_	27	nn	_	_
20	唯一	_	JJ	JJ	_	27	amod	_	_
21	可以	_	VV	VV	_	24	mmod	_	_
22	和	_	P	P	_	24	prep	_	_
23	他	_	PN	PN	_	22	pobj	_	_
24	交成	_	VV	VV	_	27	rcmod	_	_
25	朋友	_	NN	NN	_	24	dobj	_	_
26	的	_	DEC	DEC	_	24	cpm	_	_
27	人	_	NN	NN	_	18	attr	_	_
28	。	_	PU	PU	_	4	punct	_	_
29	交成	_	VV	VV	_	19	rcmod	_	_

Oracle:
(x47 / 说道-01, arg1, x57 / 人)
(x57 / 人, domain, x68 / 这)
(x57 / 人, manner, x67 / 本来)
(x57 / 人, mod, x66 / 唯一)

Input(Some(Graph((progressive :arg1 (叹气-01 :manner 惋惜-01 :arg0 他) :arg2 (说道-01 :arg1 (人 :domain 这 :manner 本来 :mod 唯一 :accompanier x46 :arg0-of (交-02 :arg1 朋友 :arg0-of 可以-01 :cause 成)) :arg0 x46)),ArrayBuffer(Span(1,2,List(0),惋惜,惋惜-01,false), Span(0,1,List(1),他,他,false), Span(12,13,List(2),说道,说道-01,false), Span(26,27,List(3),人,人,false), Span(16,17,List(4),这,这,false), Span(15,16,List(5),本来,本来,false), Span(19,20,List(6),唯一,唯一,false), Span(24,25,List(7),朋友,朋友,false), Span(20,21,List(8),可以,可以-01,false)),Map(2 -> 说道-01, 5 -> 本来, 8 -> 可以-01, 7 -> 朋友, 1 -> 他, 4 -> 这, 6 -> 唯一, 0 -> 惋惜-01, 3 -> 人),Map(x67 -> 本来, x46 -> 他, x57 -> 人, x66 -> 唯一, x45 -> 惋惜-01, x60 -> 朋友, x68 -> 这, x62 -> 可以-01, x47 -> 说道-01))),[Ljava.lang.String;@5fc930f0,Annotation([Ljava.lang.String;@3701e6e4,[Ljava.lang.String;@c6634d,[Ljava.lang.String;@65f58c6e),Annotation([Ljava.lang.String;@73ad7e90,[Ljava.lang.String;@4ba380c7,[Ledu.cmu.lti.nlp.amr.Dependency;@784c5ef5),Annotation([Ljava.lang.String;@31133b6e,[Ljava.lang.String;@29528a22,[Ljava.lang.String;@7ea08277),Annotation([Ljava.lang.String;@6401d0a0,[Ljava.lang.String;@4ce14f05,[Ledu.cmu.lti.nlp.amr.Entity;@71dfcf21))
AMR:
(x45 / 惋惜-01, prep-following, x46 / 他)
(x47 / 说道-01, manner, x45 / 惋惜-01)
(x47 / 说道-01, prep-following, x67 / 本来)
(x57 / 人, location, x60 / 朋友)
(x57 / 人, mod, x66 / 唯一)
(x62 / 可以-01, mod, x66 / 唯一)
(x66 / 唯一, manner, x67 / 本来)
(x68 / 这, mod, x67 / 本来)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.4
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
Decoded in 32,653 microseconds
Sentence: 可是 他 的 星球 确实 太 小 了 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  太 => 太
Oracle Span 3:  小 => 小-01
Oracle Span 4:  星球 => 星球
Oracle Span 5:  确实 => 确实
Spans:
Span 1-2:  他 => 他
Span 5-6:  太 => 太
Span 6-7:  小 => 小-01
Span 3-4:  星球 => 星球
Span 4-5:  确实 => 确实

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 5-6:  太 => 太
Oracle Span 6-7:  小 => 小-01
Oracle Span 3-4:  星球 => 星球
Oracle Span 4-5:  确实 => 确实

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	星球	_	NN	NN	_	0	root	_	_
5	确实	_	AD	AD	_	7	advmod	_	_
6	太	_	AD	AD	_	7	advmod	_	_
7	小	_	VA	VA	_	4	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 小-01, arg0, x5 / 星球)
(x2 / 小-01, degree, x3 / 太)
(x2 / 小-01, degree, x7 / 确实)
(x5 / 星球, poss, x6 / 他)

Input(Some(Graph((contrast :arg2 (小-01 :degree 确实 :arg0 (星球 :poss 他) :degree 太)),ArrayBuffer(Span(6,7,List(0),小,小-01,false), Span(4,5,List(1),确实,确实,false), Span(3,4,List(2),星球,星球,false), Span(1,2,List(3),他,他,false), Span(5,6,List(4),太,太,false)),Map(2 -> 星球, 1 -> 确实, 4 -> 太, 0 -> 小-01, 3 -> 他),Map(x2 -> 小-01, x5 -> 星球, x7 -> 确实, x3 -> 太, x6 -> 他))),[Ljava.lang.String;@b965857,Annotation([Ljava.lang.String;@61f80d55,[Ljava.lang.String;@27a7ef08,[Ljava.lang.String;@280e8a1a),Annotation([Ljava.lang.String;@11e33bac,[Ljava.lang.String;@30501e60,[Ledu.cmu.lti.nlp.amr.Dependency;@289778cd),Annotation([Ljava.lang.String;@7495699f,[Ljava.lang.String;@7c2312fa,[Ljava.lang.String;@4cb0a000),Annotation([Ljava.lang.String;@5ff2e84b,[Ljava.lang.String;@74abbb,[Ledu.cmu.lti.nlp.amr.Entity;@64a4dd8d))
AMR:
(x2 / 小-01, ARG6, x5 / 星球)
(x2 / 小-01, degree, x3 / 太)
(x2 / 小-01, degree, x7 / 确实)
(x5 / 星球, poss, x6 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,305 microseconds
Sentence: 住 不 下 两 个 人 … ”

Oracle Span 1:  人 => 人
Oracle Span 2:  住 => 住-01
Spans:
Span 5-6:  人 => 人
Span 0-1:  住 => 住-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  住 => 住-01

Dependencies:
1	住	_	NR	NR	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	下	_	VV	VV	_	0	root	_	_
4	两	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	3	dobj	_	_
7	…	_	PU	PU	_	8	punct	_	_
8	”	_	NN	NN	_	6	prnmod	_	_

Oracle:
(x12 / 住-01, arg0, x14 / 人)

Input(Some(Graph((say :arg1 (possible :arg0 (住-01 :arg0 (人 :quant 2) :polarity -))),ArrayBuffer(Span(0,1,List(0),住,住-01,false), Span(5,6,List(1),人,人,false)),Map(1 -> 人, 0 -> 住-01),Map(x12 -> 住-01, x14 -> 人))),[Ljava.lang.String;@2dddc1b9,Annotation([Ljava.lang.String;@65a5d4f9,[Ljava.lang.String;@40298285,[Ljava.lang.String;@22367b8),Annotation([Ljava.lang.String;@41b0ae4c,[Ljava.lang.String;@af9a89f,[Ledu.cmu.lti.nlp.amr.Dependency;@6482eef),Annotation([Ljava.lang.String;@1fcf9739,[Ljava.lang.String;@5b498842,[Ljava.lang.String;@1cb37ee4),Annotation([Ljava.lang.String;@5bcb04cb,[Ljava.lang.String;@385e36d4,[Ledu.cmu.lti.nlp.amr.Entity;@2fc2a205))
AMR:
(x12 / 住-01, prep-within, x14 / 人)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 3,003 microseconds
Sentence: 小 王子 没有 勇气 承认 的 是 ： 他 留恋 这 颗 令 人 赞美 的 星星 ， 特别 是 因为 在 那里 每 二十四 小时 就 有 一千四百四十 次 日落 ！

Oracle Span 1:  人 => 人
Oracle Span 2:  勇气 => 勇气
Oracle Span 3:  小 => 小-01
Oracle Span 4:  小时 => (temporal-quantity :unit 小时)
Oracle Span 5:  承认 => 承认-01
Oracle Span 6:  日落 => 日落-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  有 => 有-01
Oracle Span 9:  特别 => 特别-01
Oracle Span 10:  王子 => 王子
Oracle Span 11:  留恋 => 留恋-01
Oracle Span 12:  赞美 => 赞美-01
Oracle Span 13:  这 => 这
Oracle Span 14:  那里 => 那里
Spans:
Span 13-14:  人 => 人
Span 3-4:  勇气 => 勇气
Span 0-1:  小 => 小-01
Span 25-26:  小时 => (temporal-quantity :unit 小时)
Span 4-5:  承认 => 承认-01
Span 30-31:  日落 => 日落-01
Span 16-17:  星星 => 星星
Span 27-28:  有 => 有-01
Span 18-19:  特别 => 特别-01
Span 1-2:  王子 => 王子
Span 9-10:  留恋 => 留恋-01
Span 14-15:  赞美 => 赞美-01
Span 10-11:  这 => 这
Span 22-23:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  人 => 人
Oracle Span 3-4:  勇气 => 勇气
Oracle Span 0-1:  小 => 小-01
Oracle Span 25-26:  小时 => (temporal-quantity :unit 小时)
Oracle Span 4-5:  承认 => 承认-01
Oracle Span 30-31:  日落 => 日落-01
Oracle Span 16-17:  星星 => 星星
Oracle Span 27-28:  有 => 有-01
Oracle Span 18-19:  特别 => 特别-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 9-10:  留恋 => 留恋-01
Oracle Span 14-15:  赞美 => 赞美-01
Oracle Span 10-11:  这 => 这
Oracle Span 22-23:  那里 => 那里

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	top	_	_
3	没有	_	VE	VE	_	7	top	_	_
4	勇气	_	NN	NN	_	5	nsubj	_	_
5	承认	_	VV	VV	_	3	dep	_	_
6	的	_	DEC	DEC	_	3	cpm	_	_
7	是	_	VC	VC	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	留恋	_	VV	VV	_	7	ccomp	_	_
11	这	_	DT	DT	_	17	det	_	_
12	颗	_	M	M	_	11	clf	_	_
13	令	_	VV	VV	_	17	rcmod	_	_
14	人	_	NN	NN	_	13	dobj	_	_
15	赞美	_	VA	VA	_	13	dep	_	_
16	的	_	DEC	DEC	_	13	cpm	_	_
17	星星	_	NN	NN	_	10	dobj	_	_
18	,	_	PU	PU	_	7	punct	_	_
19	特别	_	AD	AD	_	20	advmod	_	_
20	是	_	VC	VC	_	7	conj	_	_
21	因为	_	P	P	_	20	prep	_	_
22	在	_	P	P	_	28	prep	_	_
23	那里	_	PN	PN	_	22	pobj	_	_
24	每	_	DT	DT	_	26	det	_	_
25	二十四	_	CD	CD	_	24	dep	_	_
26	小时	_	NN	NN	_	28	dobj	_	_
27	就	_	AD	AD	_	28	advmod	_	_
28	有	_	VE	VE	_	21	pccomp	_	_
29	一千四百四十	_	CD	CD	_	30	nummod	_	_
30	次	_	M	M	_	31	clf	_	_
31	日落	_	NN	NN	_	28	dobj	_	_
32	！	_	PU	PU	_	7	punct	_	_

Oracle:
(x28 / 有-01, arg0, x31 / 王子)
(x28 / 有-01, arg1, x33 / 勇气)
(x31 / 王子, mod, x32 / 小-01)
(x34 / 承认-01, instrument, x33 / 勇气)
(x48 / temporal-quantity, unit, x59 / 小时)
(x52 / 留恋-01, arg1, x54 / 星星)
(x54 / 星星, mod, x55 / 这)
(x56 / 赞美-01, arg0, x57 / 人)
(x56 / 赞美-01, arg1, x54 / 星星)

Input(Some(Graph((有-01 :arg1 (勇气 :instrument-of (承认-01 :mode expressive :arg1 (causation :arg1 (有-03 :arg0 那里 :arg1 (日落-01 :quant 1440) :frequency (rate-entity-91 :arg3 (temporal-quantity :unit 小时 :quant 24)) :manner 特别-01) :arg2 (留恋-01 :arg1 (星星 :arg1-of (赞美-01 :arg0 人) :mod 这) :arg0 x31)) :arg0 x31)) :arg0 (王子 :mod 小-01) :polarity -),ArrayBuffer(Span(27,28,List(0),有,有-01,false), Span(3,4,List(1),勇气,勇气,false), Span(4,5,List(2),承认,承认-01,false), Span(22,23,List(3),那里,那里,false), Span(30,31,List(4),日落,日落-01,false), Span(25,26,List(5, 6),小时,(temporal-quantity :unit 小时),false), Span(18,19,List(7),特别,特别-01,false), Span(9,10,List(8),留恋,留恋-01,false), Span(16,17,List(9),星星,星星,false), Span(14,15,List(10),赞美,赞美-01,false), Span(13,14,List(11),人,人,false), Span(10,11,List(12),这,这,false), Span(1,2,List(13),王子,王子,false), Span(0,1,List(14),小,小-01,false)),Map(2 -> 承认-01, 5 -> temporal-quantity, 12 -> 这, 8 -> 留恋-01, 7 -> 特别-01, 1 -> 勇气, 4 -> 日落-01, 11 -> 人, 14 -> 小-01, 6 -> 小时, 9 -> 星星, 0 -> 有-01, 10 -> 赞美-01, 3 -> 那里, 13 -> 王子),Map(x52 -> 留恋-01, x34 -> 承认-01, x28 -> 有-01, x55 -> 这, x43 -> 那里, x31 -> 王子, x57 -> 人, x51 -> 特别-01, x54 -> 星星, x48 -> temporal-quantity, x33 -> 勇气, x56 -> 赞美-01, x59 -> 小时, x44 -> 日落-01, x32 -> 小-01))),[Ljava.lang.String;@2881ad47,Annotation([Ljava.lang.String;@2bef09c0,[Ljava.lang.String;@62ce72ff,[Ljava.lang.String;@58a63629),Annotation([Ljava.lang.String;@7de843ef,[Ljava.lang.String;@2e1af49b,[Ledu.cmu.lti.nlp.amr.Dependency;@3fd2322d),Annotation([Ljava.lang.String;@56ac5c80,[Ljava.lang.String;@69e49a81,[Ljava.lang.String;@1023150a),Annotation([Ljava.lang.String;@3ece1e79,[Ljava.lang.String;@ab20d7c,[Ledu.cmu.lti.nlp.amr.Entity;@474fae39))
AMR:
(x28 / 有-01, purpose, x44 / 日落-01)
(x28 / 有-01, time, x48 / temporal-quantity)
(x28 / 有-01, time, x51 / 特别-01)
(x31 / 王子, mod, x32 / 小-01)
(x33 / 勇气, poss, x31 / 王子)
(x34 / 承认-01, instrument, x33 / 勇气)
(x34 / 承认-01, purpose, x52 / 留恋-01)
(x43 / 那里, purpose, x51 / 特别-01)
(x48 / temporal-quantity, unit, x59 / 小时)
(x52 / 留恋-01, value, x55 / 这)
(x56 / 赞美-01, purpose, x51 / 特别-01)
(x56 / 赞美-01, purpose, x52 / 留恋-01)
(x56 / 赞美-01, value, x54 / 星星)
(x56 / 赞美-01, value, x57 / 人)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1.0.0
WARNING: makeIds can't find span Id: 0.2.0.1.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1.0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.0.3
WARNING: makeIds can't find span Id: 0.2.0.1.1
WARNING: makeIds can't find span Id: 0.2.0.1.1.1
WARNING: makeIds can't find span Id: 0.2.0.1.1.1.1
WARNING: makeIds can't find span Id: 0.2.0.1.1.1.1.0
WARNING: makeIds can't find span Id: 0.2.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 72,430 microseconds
Sentence: XV 。

Oracle Span 1:  XV => XV
Spans:
Span 0-1:  XV => XV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XV => XV

Dependencies:
1	XV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XV,ArrayBuffer(Span(0,1,List(0),XV,XV,false)),Map(0 -> XV),Map(x0 -> XV))),[Ljava.lang.String;@4f4c789f,Annotation([Ljava.lang.String;@13f9ad9,[Ljava.lang.String;@1b7cae6f,[Ljava.lang.String;@21f8e55f),Annotation([Ljava.lang.String;@d5ce97f,[Ljava.lang.String;@7048535f,[Ledu.cmu.lti.nlp.amr.Dependency;@e3994ef),Annotation([Ljava.lang.String;@680d4a6a,[Ljava.lang.String;@2f04105,[Ljava.lang.String;@309028af),Annotation([Ljava.lang.String;@724c5cbe,[Ljava.lang.String;@70101687,[Ledu.cmu.lti.nlp.amr.Entity;@70e889e9))
AMR:


Decoded in 1,478 microseconds
Sentence: 第六 颗 行星 则 要 大 十 倍 。

Oracle Span 1:  大 => 大-01
Oracle Span 2:  行星 => 行星
Oracle Span 3:  要 => 要-03
Spans:
Span 5-6:  大 => 大-01
Span 2-3:  行星 => 行星
Span 4-5:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  大 => 大-01
Oracle Span 2-3:  行星 => 行星
Oracle Span 4-5:  要 => 要-03

Dependencies:
1	第六	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	5	nsubj	_	_
4	则	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	0	root	_	_
6	大	_	JJ	JJ	_	8	amod	_	_
7	十	_	CD	CD	_	8	nummod	_	_
8	倍	_	M	M	_	5	range	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x5 / 要-03, arg0, x7 / 大-01)
(x7 / 大-01, arg0, x8 / 行星)

Input(Some(Graph((要-03 :arg0 (大-01 :arg1 (product-of :quant 10) :arg0 (行星 :ord (ordinal-entity :value 6)))),ArrayBuffer(Span(4,5,List(0),要,要-03,false), Span(5,6,List(1),大,大-01,false), Span(2,3,List(2),行星,行星,false)),Map(2 -> 行星, 1 -> 大-01, 0 -> 要-03),Map(x5 -> 要-03, x8 -> 行星, x7 -> 大-01))),[Ljava.lang.String;@418c020b,Annotation([Ljava.lang.String;@51351f28,[Ljava.lang.String;@21618fa7,[Ljava.lang.String;@15f2eda3),Annotation([Ljava.lang.String;@34cf294c,[Ljava.lang.String;@4d7aaca2,[Ledu.cmu.lti.nlp.amr.Dependency;@604b1e1d),Annotation([Ljava.lang.String;@62566842,[Ljava.lang.String;@2f1ea80d,[Ljava.lang.String;@37191ef0),Annotation([Ljava.lang.String;@f1a45f8,[Ljava.lang.String;@5edf2821,[Ledu.cmu.lti.nlp.amr.Entity;@4dbad37))
AMR:
(x5 / 要-03, ARG2, x7 / 大-01)
(x7 / 大-01, degree, x8 / 行星)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,686 microseconds
Sentence: 上面 住 着 一 位 老 先生 ， 他 在 写作 大部头 的 书 。

Oracle Span 1:  上面 => 上面
Oracle Span 2:  书 => 书
Oracle Span 3:  他 => 他
Oracle Span 4:  住 => 住-01
Oracle Span 5:  先生 => 先生
Oracle Span 6:  写作 => 写作-01
Oracle Span 7:  大部头 => 大部头
Oracle Span 8:  老 => 老-01
Spans:
Span 0-1:  上面 => 上面
Span 13-14:  书 => 书
Span 8-9:  他 => 他
Span 1-2:  住 => 住-01
Span 6-7:  先生 => 先生
Span 10-11:  写作 => 写作-01
Span 11-12:  大部头 => 大部头
Span 5-6:  老 => 老-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  上面 => 上面
Oracle Span 13-14:  书 => 书
Oracle Span 8-9:  他 => 他
Oracle Span 1-2:  住 => 住-01
Oracle Span 6-7:  先生 => 先生
Oracle Span 10-11:  写作 => 写作-01
Oracle Span 11-12:  大部头 => 大部头
Oracle Span 5-6:  老 => 老-01

Dependencies:
1	上面	_	NN	NN	_	2	nsubj	_	_
2	住	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	位	_	M	M	_	7	clf	_	_
6	老	_	JJ	JJ	_	7	amod	_	_
7	先生	_	NN	NN	_	2	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	他	_	PN	PN	_	11	nsubj	_	_
10	在	_	AD	AD	_	11	advmod	_	_
11	写作	_	VV	VV	_	2	conj	_	_
12	大部头	_	NN	NN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	书	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 住-01, arg0, x3 / 先生)
(x2 / 住-01, arg1, x5 / 上面)
(x3 / 先生, mod, x4 / 老-01)
(x7 / 写作-01, arg0, x8 / 他)
(x7 / 写作-01, arg1, x9 / 书)
(x9 / 书, mod, x10 / 大部头)

Input(Some(Graph((and :op (住-01 :arg1 上面 :arg0 (先生 :quant 1 :mod 老-01)) :op (写作-01 :arg1 (书 :mod 大部头) :arg0 他)),ArrayBuffer(Span(1,2,List(0),住,住-01,false), Span(0,1,List(1),上面,上面,false), Span(6,7,List(2),先生,先生,false), Span(5,6,List(3),老,老-01,false), Span(10,11,List(4),写作,写作-01,false), Span(13,14,List(5),书,书,false), Span(11,12,List(6),大部头,大部头,false), Span(8,9,List(7),他,他,false)),Map(2 -> 先生, 5 -> 书, 7 -> 他, 1 -> 上面, 4 -> 写作-01, 6 -> 大部头, 0 -> 住-01, 3 -> 老-01),Map(x10 -> 大部头, x2 -> 住-01, x5 -> 上面, x8 -> 他, x7 -> 写作-01, x4 -> 老-01, x3 -> 先生, x9 -> 书))),[Ljava.lang.String;@7b4acdc2,Annotation([Ljava.lang.String;@26a262d6,[Ljava.lang.String;@11bd803,[Ljava.lang.String;@58f07f02),Annotation([Ljava.lang.String;@75798d03,[Ljava.lang.String;@40f8f5a8,[Ledu.cmu.lti.nlp.amr.Dependency;@1ffcf674),Annotation([Ljava.lang.String;@442f92e6,[Ljava.lang.String;@7d070ef5,[Ljava.lang.String;@7a55f148),Annotation([Ljava.lang.String;@2e2f720,[Ljava.lang.String;@3ae2ed38,[Ledu.cmu.lti.nlp.amr.Entity;@7f572c37))
AMR:
(x2 / 住-01, prep-from, x5 / 上面)
(x2 / 住-01, subset, x3 / 先生)
(x3 / 先生, mod, x4 / 老-01)
(x4 / 老-01, degree, x8 / 他)
(x7 / 写作-01, ARG0, x9 / 书)
(x7 / 写作-01, ARG6, x8 / 他)
(x9 / 书, mod, x10 / 大部头)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 22,947 microseconds
Sentence: “ 瞧 ！

Oracle Span 1:  瞧 => 瞧-01
Spans:
Span 1-2:  瞧 => 瞧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  瞧 => 瞧-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	瞧	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (瞧-01 :mode expressive)),ArrayBuffer(Span(1,2,List(0),瞧,瞧-01,false)),Map(0 -> 瞧-01),Map(x5 -> 瞧-01))),[Ljava.lang.String;@2add4d24,Annotation([Ljava.lang.String;@3f93e4a8,[Ljava.lang.String;@12b5454f,[Ljava.lang.String;@5445f5ba),Annotation([Ljava.lang.String;@1431267b,[Ljava.lang.String;@342726f1,[Ledu.cmu.lti.nlp.amr.Dependency;@c808207),Annotation([Ljava.lang.String;@77134e08,[Ljava.lang.String;@6a0cbc6f,[Ljava.lang.String;@67110f71),Annotation([Ljava.lang.String;@6f89292e,[Ljava.lang.String;@20749d9,[Ledu.cmu.lti.nlp.amr.Entity;@de77232))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,356 microseconds
Sentence: 来 了 一 位 探险家 。 ” 老 先生 看到 小 王子 时 ， 叫 了 起来 。

Oracle Span 1:  先生 => 先生
Oracle Span 2:  叫 => 叫-03
Oracle Span 3:  小 => 小-01
Oracle Span 4:  探险家 => 探险家
Oracle Span 5:  来 => 来-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  看到 => 看到-01
Oracle Span 8:  老 => 老-01
Spans:
Span 8-9:  先生 => 先生
Span 14-15:  叫 => 叫-03
Span 10-11:  小 => 小-01
Span 4-5:  探险家 => 探险家
Span 0-1:  来 => 来-01
Span 11-12:  王子 => 王子
Span 9-10:  看到 => 看到-01
Span 7-8:  老 => 老-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  先生 => 先生
Oracle Span 14-15:  叫 => 叫-03
Oracle Span 10-11:  小 => 小-01
Oracle Span 4-5:  探险家 => 探险家
Oracle Span 0-1:  来 => 来-01
Oracle Span 11-12:  王子 => 王子
Oracle Span 9-10:  看到 => 看到-01
Oracle Span 7-8:  老 => 老-01

Dependencies:
1	来	_	VV	VV	_	13	lccomp	_	_
2	了	_	VV	VV	_	9	rcmod	_	_
3	一	_	AD	AD	_	4	advmod	_	_
4	位	_	VV	VV	_	2	dobj	_	_
5	探险家	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_
8	老	_	JJ	JJ	_	9	amod	_	_
9	先生	_	NN	NN	_	1	dobj	_	_
10	看到	_	VV	VV	_	1	conj	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	10	dobj	_	_
13	时	_	LC	LC	_	15	loc	_	_
14	,	_	PU	PU	_	15	punct	_	_
15	叫	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	起来	_	VV	VV	_	15	ccomp	_	_
18	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x13 / 叫-03, arg0, x15 / 先生)
(x13 / 叫-03, arg1, x17 / 来-01)
(x13 / 叫-03, time, x20 / 看到-01)
(x15 / 先生, mod, x16 / 老-01)
(x17 / 来-01, arg0, x18 / 探险家)
(x20 / 看到-01, arg1, x22 / 王子)
(x22 / 王子, mod, x23 / 小-01)

Input(Some(Graph((叫-03 :time (看到-01 :arg1 (王子 :mod 小-01) :arg0 x15) :arg1 (来-01 :arg0 (探险家 :quant 1)) :arg0 (先生 :mod 老-01)),ArrayBuffer(Span(14,15,List(0),叫,叫-03,false), Span(9,10,List(1),看到,看到-01,false), Span(11,12,List(2),王子,王子,false), Span(10,11,List(3),小,小-01,false), Span(0,1,List(4),来,来-01,false), Span(4,5,List(5),探险家,探险家,false), Span(8,9,List(6),先生,先生,false), Span(7,8,List(7),老,老-01,false)),Map(2 -> 王子, 5 -> 探险家, 7 -> 老-01, 1 -> 看到-01, 4 -> 来-01, 6 -> 先生, 0 -> 叫-03, 3 -> 小-01),Map(x16 -> 老-01, x22 -> 王子, x13 -> 叫-03, x15 -> 先生, x18 -> 探险家, x23 -> 小-01, x20 -> 看到-01, x17 -> 来-01))),[Ljava.lang.String;@62628e78,Annotation([Ljava.lang.String;@44841b43,[Ljava.lang.String;@7c75db8b,[Ljava.lang.String;@4ab550d5),Annotation([Ljava.lang.String;@3cd206b5,[Ljava.lang.String;@58e85c6f,[Ledu.cmu.lti.nlp.amr.Dependency;@a137d7a),Annotation([Ljava.lang.String;@6ac0b715,[Ljava.lang.String;@468be356,[Ljava.lang.String;@5c9ac4cc),Annotation([Ljava.lang.String;@4df39a88,[Ljava.lang.String;@2264e43c,[Ledu.cmu.lti.nlp.amr.Entity;@3bec2275))
AMR:
(x13 / 叫-03, time, x20 / 看到-01)
(x13 / 叫-03, time, x22 / 王子)
(x15 / 先生, mod, x16 / 老-01)
(x16 / 老-01, time, x18 / 探险家)
(x17 / 来-01, time, x18 / 探险家)
(x20 / 看到-01, time, x15 / 先生)
(x22 / 王子, mod, x23 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 23,048 microseconds
Sentence: 小 王子 在 桌 旁 坐下 ， 有 点 气喘吁吁 。

Oracle Span 1:  坐下 => 坐下-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  旁 => 旁
Oracle Span 4:  桌 => 桌
Oracle Span 5:  气喘吁吁 => 气喘吁吁-01
Oracle Span 6:  王子 => 王子
Spans:
Span 5-6:  坐下 => 坐下-01
Span 0-1:  小 => 小-01
Span 4-5:  旁 => 旁
Span 3-4:  桌 => 桌
Span 9-10:  气喘吁吁 => 气喘吁吁-01
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  坐下 => 坐下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 4-5:  旁 => 旁
Oracle Span 3-4:  桌 => 桌
Oracle Span 9-10:  气喘吁吁 => 气喘吁吁-01
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	在	_	P	P	_	6	prep	_	_
4	桌	_	NN	NN	_	5	lobj	_	_
5	旁	_	LC	LC	_	3	plmod	_	_
6	坐下	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	有	_	VE	VE	_	6	ccomp	_	_
9	点	_	M	M	_	10	dep	_	_
10	气喘吁吁	_	NN	NN	_	8	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 坐下-01, arg0, x11 / 王子)
(x10 / 坐下-01, location, x13 / 旁)
(x11 / 王子, mod, x12 / 小-01)
(x13 / 旁, location, x14 / 桌)

Input(Some(Graph((and :op (坐下-01 :location (旁 :location 桌) :arg0 (王子 :mod 小-01)) :op (气喘吁吁-01 :arg0 x11 :degree 有点)),ArrayBuffer(Span(5,6,List(0),坐下,坐下-01,false), Span(4,5,List(1),旁,旁,false), Span(3,4,List(2),桌,桌,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false), Span(9,10,List(5),气喘吁吁,气喘吁吁-01,false)),Map(2 -> 桌, 5 -> 气喘吁吁-01, 1 -> 旁, 4 -> 小-01, 0 -> 坐下-01, 3 -> 王子),Map(x22 -> 气喘吁吁-01, x10 -> 坐下-01, x13 -> 旁, x12 -> 小-01, x11 -> 王子, x14 -> 桌))),[Ljava.lang.String;@31da3d60,Annotation([Ljava.lang.String;@60acd609,[Ljava.lang.String;@65ec8b24,[Ljava.lang.String;@3f49e266),Annotation([Ljava.lang.String;@5f18f9d2,[Ljava.lang.String;@598260a6,[Ledu.cmu.lti.nlp.amr.Dependency;@58b67519),Annotation([Ljava.lang.String;@281ce6bb,[Ljava.lang.String;@30d25c03,[Ljava.lang.String;@7a1f8def),Annotation([Ljava.lang.String;@116a2108,[Ljava.lang.String;@5e8c34a0,[Ledu.cmu.lti.nlp.amr.Entity;@7c1c5936))
AMR:
(x10 / 坐下-01, ARG4, x22 / 气喘吁吁-01)
(x10 / 坐下-01, location, x13 / 旁)
(x10 / 坐下-01, source, x11 / 王子)
(x11 / 王子, mod, x12 / 小-01)
(x13 / 旁, location, x14 / 桌)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 15,511 microseconds
Sentence: 他 跑 了 多少 路 啊 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  多少 => 多少
Oracle Span 3:  跑 => 跑-01
Oracle Span 4:  路 => 路
Spans:
Span 0-1:  他 => 他
Span 3-4:  多少 => 多少
Span 1-2:  跑 => 跑-01
Span 4-5:  路 => 路

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  多少 => 多少
Oracle Span 1-2:  跑 => 跑-01
Oracle Span 4-5:  路 => 路

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	跑	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	多少	_	CD	CD	_	5	nummod	_	_
5	路	_	M	M	_	2	dep	_	_
6	啊	_	SP	SP	_	2	dep	_	_
7	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 跑-01, arg0, x2 / 他)
(x0 / 跑-01, arg1, x4 / 路)
(x4 / 路, mod, x5 / 多少)

Input(Some(Graph((跑-01 :mode expressive :arg1 (路 :mod 多少) :arg0 他),ArrayBuffer(Span(1,2,List(0),跑,跑-01,false), Span(4,5,List(1),路,路,false), Span(3,4,List(2),多少,多少,false), Span(0,1,List(3),他,他,false)),Map(2 -> 多少, 1 -> 路, 0 -> 跑-01, 3 -> 他),Map(x2 -> 他, x5 -> 多少, x4 -> 路, x0 -> 跑-01))),[Ljava.lang.String;@7aead3af,Annotation([Ljava.lang.String;@3ac8cf9b,[Ljava.lang.String;@55ec556,[Ljava.lang.String;@1b15f922),Annotation([Ljava.lang.String;@37ce3644,[Ljava.lang.String;@4b869331,[Ledu.cmu.lti.nlp.amr.Dependency;@38018b62),Annotation([Ljava.lang.String;@ce9b9a9,[Ljava.lang.String;@4ad3d266,[Ljava.lang.String;@3533df16),Annotation([Ljava.lang.String;@15d0849,[Ljava.lang.String;@4038cd3a,[Ledu.cmu.lti.nlp.amr.Entity;@14ac77b9))
AMR:
(x0 / 跑-01, manner, x2 / 他)
(x0 / 跑-01, topic, x5 / 多少)
(x4 / 路, mod, x5 / 多少)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,389 microseconds
Sentence: “ 你 从 哪里 来 的 呀 ？ ” 老 先生 问 小 王子 。

Oracle Span 1:  你 => 你
Oracle Span 2:  先生 => 先生
Oracle Span 3:  小 => 小-01
Oracle Span 4:  来 => 来-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  老 => 老-01
Oracle Span 7:  问 => 问-01
Spans:
Span 1-2:  你 => 你
Span 10-11:  先生 => 先生
Span 12-13:  小 => 小-01
Span 4-5:  来 => 来-01
Span 13-14:  王子 => 王子
Span 9-10:  老 => 老-01
Span 11-12:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 10-11:  先生 => 先生
Oracle Span 12-13:  小 => 小-01
Oracle Span 4-5:  来 => 来-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 9-10:  老 => 老-01
Oracle Span 11-12:  问 => 问-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	dep	_	_
3	从	_	P	P	_	4	prep	_	_
4	哪里	_	VV	VV	_	11	vmod	_	_
5	来	_	VV	VV	_	4	ccomp	_	_
6	的	_	DEC	DEC	_	5	dep	_	_
7	呀	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	老	_	JJ	JJ	_	11	amod	_	_
11	先生	_	NN	NN	_	12	nsubj	_	_
12	问	_	VV	VV	_	0	root	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	12	ccomp	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 先生)
(x0 / 问-01, arg1, x4 / 来-01)
(x0 / 问-01, arg2, x7 / 王子)
(x2 / 先生, mod, x3 / 老-01)
(x4 / 来-01, arg0, x5 / 你)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((问-01 :mode interrogative :arg2 (王子 :mod 小-01) :arg1 (来-01 :arg2 amr-unknown :arg0 你) :arg0 (先生 :mod 老-01)),ArrayBuffer(Span(11,12,List(0),问,问-01,false), Span(13,14,List(1),王子,王子,false), Span(12,13,List(2),小,小-01,false), Span(4,5,List(3),来,来-01,false), Span(1,2,List(4),你,你,false), Span(10,11,List(5),先生,先生,false), Span(9,10,List(6),老,老-01,false)),Map(2 -> 小-01, 5 -> 先生, 1 -> 王子, 4 -> 你, 6 -> 老-01, 0 -> 问-01, 3 -> 来-01),Map(x2 -> 先生, x5 -> 你, x8 -> 小-01, x7 -> 王子, x4 -> 来-01, x3 -> 老-01, x0 -> 问-01))),[Ljava.lang.String;@3f4cd155,Annotation([Ljava.lang.String;@563a89b5,[Ljava.lang.String;@506dcf55,[Ljava.lang.String;@270b6b5e),Annotation([Ljava.lang.String;@7e94d093,[Ljava.lang.String;@7c6189d5,[Ledu.cmu.lti.nlp.amr.Dependency;@4248e66b),Annotation([Ljava.lang.String;@3e6534e7,[Ljava.lang.String;@66ad7bf0,[Ljava.lang.String;@167279d1),Annotation([Ljava.lang.String;@138caeca,[Ljava.lang.String;@4d96250,[Ledu.cmu.lti.nlp.amr.Entity;@9a6fbc0))
AMR:
(x0 / 问-01, manner, x2 / 先生)
(x0 / 问-01, prep-for, x8 / 小-01)
(x2 / 先生, mod, x3 / 老-01)
(x4 / 来-01, op, x5 / 你)
(x4 / 来-01, prep-through, x0 / 问-01)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 16,898 microseconds
Sentence: “ 这 一 大 本 是 什么 书 ？ 小 王子 问道 。

Oracle Span 1:  书 => 书
Oracle Span 2:  大 => 大-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  这 => 这
Oracle Span 6:  问道 => 问道-01
Spans:
Span 7-8:  书 => 书
Span 3-4:  大 => 大-01
Span 9-10:  小 => 小-01
Span 10-11:  王子 => 王子
Span 1-2:  这 => 这
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  书 => 书
Oracle Span 3-4:  大 => 大-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 1-2:  这 => 这
Oracle Span 11-12:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	DT	DT	_	6	top	_	_
3	一	_	CD	CD	_	5	nummod	_	_
4	大	_	JJ	JJ	_	5	amod	_	_
5	本	_	M	M	_	2	dep	_	_
6	是	_	VC	VC	_	0	root	_	_
7	什么	_	DT	DT	_	8	det	_	_
8	书	_	NN	NN	_	6	attr	_	_
9	？	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VV	VV	_	6	dep	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 书)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 书, mod, x11 / 这)
(x4 / 书, mod, x13 / 大-01)

Input(Some(Graph((问道-01 :mode interrogative :arg1 (书 :mod 大-01 :quant 1 :mod 这 :domain amr-unknown) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(7,8,List(1),书,书,false), Span(3,4,List(2),大,大-01,false), Span(1,2,List(3),这,这,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false)),Map(2 -> 大-01, 5 -> 小-01, 1 -> 书, 4 -> 王子, 0 -> 问道-01, 3 -> 这),Map(x2 -> 王子, x13 -> 大-01, x4 -> 书, x3 -> 小-01, x11 -> 这, x0 -> 问道-01))),[Ljava.lang.String;@c1fa7d4,Annotation([Ljava.lang.String;@7a93b263,[Ljava.lang.String;@35178483,[Ljava.lang.String;@bd1111a),Annotation([Ljava.lang.String;@7a8136b3,[Ljava.lang.String;@1de6932a,[Ledu.cmu.lti.nlp.amr.Dependency;@14dc3f89),Annotation([Ljava.lang.String;@1706a5c9,[Ljava.lang.String;@64412d34,[Ljava.lang.String;@4d178d55),Annotation([Ljava.lang.String;@38c2c309,[Ljava.lang.String;@1a480135,[Ledu.cmu.lti.nlp.amr.Entity;@778db7c5))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, manner, x4 / 书)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 书, mod, x11 / 这)
(x4 / 书, mod, x13 / 大-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 16,795 microseconds
Sentence: 你 在 这里 干 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  干 => 干-01
Oracle Span 3:  这里 => 这里
Spans:
Span 0-1:  你 => 你
Span 3-4:  干 => 干-01
Span 2-3:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  干 => 干-01
Oracle Span 2-3:  这里 => 这里

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	这里	_	PN	PN	_	2	pobj	_	_
4	干	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 干-01, arg0, x9 / 你)
(x8 / 干-01, location, x11 / 这里)

Input(Some(Graph((say :arg1 (干-01 :mode interrogative :location 这里 :arg1 amr-unknown :arg0 你)),ArrayBuffer(Span(3,4,List(0),干,干-01,false), Span(2,3,List(1),这里,这里,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 这里, 0 -> 干-01),Map(x8 -> 干-01, x11 -> 这里, x9 -> 你))),[Ljava.lang.String;@681e144,Annotation([Ljava.lang.String;@2875b016,[Ljava.lang.String;@72ee5d84,[Ljava.lang.String;@68c7ef83),Annotation([Ljava.lang.String;@6145b81e,[Ljava.lang.String;@64355120,[Ledu.cmu.lti.nlp.amr.Dependency;@64b7225f),Annotation([Ljava.lang.String;@33db72bd,[Ljava.lang.String;@7f92b990,[Ljava.lang.String;@31e04b13),Annotation([Ljava.lang.String;@6c1832aa,[Ljava.lang.String;@4beeb0e,[Ledu.cmu.lti.nlp.amr.Entity;@6e8a9c30))
AMR:
(x11 / 这里, poss, x9 / 你)
(x8 / 干-01, location, x11 / 这里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,525 microseconds
Sentence: “ 我 是 地理学家 。 ” 老 先生 答道 。

Oracle Span 1:  先生 => 先生
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  老 => 老-01
Spans:
Span 7-8:  先生 => 先生
Span 3-4:  地理学家 => 地理学家
Span 6-7:  老 => 老-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  先生 => 先生
Oracle Span 3-4:  地理学家 => 地理学家
Oracle Span 6-7:  老 => 老-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	地理学家	_	VV	VV	_	8	vmod	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	老	_	JJ	JJ	_	8	amod	_	_
8	先生	_	NN	NN	_	9	nsubj	_	_
9	答道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x4 / 先生, mod, x5 / 老-01)

Input(Some(Graph((答-02 :arg0 (先生 :mod 老-01) :arg1 (地理学家 :domain x4)),ArrayBuffer(Span(7,8,List(0),先生,先生,false), Span(6,7,List(1),老,老-01,false), Span(3,4,List(2),地理学家,地理学家,false)),Map(2 -> 地理学家, 1 -> 老-01, 0 -> 先生),Map(x5 -> 老-01, x4 -> 先生, x6 -> 地理学家))),[Ljava.lang.String;@5d01ea21,Annotation([Ljava.lang.String;@70211e49,[Ljava.lang.String;@3b46dd8,[Ljava.lang.String;@39651a82),Annotation([Ljava.lang.String;@6be7bf6d,[Ljava.lang.String;@134c370e,[Ledu.cmu.lti.nlp.amr.Dependency;@33364212),Annotation([Ljava.lang.String;@2216effc,[Ljava.lang.String;@745c2004,[Ljava.lang.String;@6da9dc6),Annotation([Ljava.lang.String;@7fd69dd,[Ljava.lang.String;@12010fd1,[Ledu.cmu.lti.nlp.amr.Entity;@7c84195))
AMR:
(x4 / 先生, mod, x5 / 老-01)
(x5 / 老-01, example, x6 / 地理学家)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 4,901 microseconds
Sentence: “ 什么 是 地理学家 ？ ”

Oracle Span 1:  地理学家 => 地理学家
Spans:
Span 3-4:  地理学家 => 地理学家

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  地理学家 => 地理学家

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	地理学家	_	NN	NN	_	3	attr	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (地理学家 :mode interrogative :domain amr-unknown)),ArrayBuffer(Span(3,4,List(0),地理学家,地理学家,false)),Map(0 -> 地理学家),Map(x6 -> 地理学家))),[Ljava.lang.String;@552ed807,Annotation([Ljava.lang.String;@3971f0fe,[Ljava.lang.String;@23940f86,[Ljava.lang.String;@66153688),Annotation([Ljava.lang.String;@455824ad,[Ljava.lang.String;@7318daf8,[Ledu.cmu.lti.nlp.amr.Dependency;@70f31322),Annotation([Ljava.lang.String;@3f1ddac2,[Ljava.lang.String;@3be4fcc0,[Ljava.lang.String;@e1e2e5e),Annotation([Ljava.lang.String;@661c46bc,[Ljava.lang.String;@37864b77,[Ledu.cmu.lti.nlp.amr.Entity;@2b98b3bb))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,746 microseconds
Sentence: “ 地理学家 ， 就 是 一 种 学者 ， 他 知道 哪里 有 海洋 ， 哪里 有 江河 、 城市 、 山脉 、 沙漠 。 ”

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  城市 => 城市
Oracle Span 3:  学者 => 学者
Oracle Span 4:  山脉 => 山脉
Oracle Span 5:  江河 => 江河
Oracle Span 6:  沙漠 => 沙漠
Oracle Span 7:  海洋 => 海洋
Oracle Span 8:  知道 => 知道-01
Spans:
Span 1-2:  地理学家 => 地理学家
Span 19-20:  城市 => 城市
Span 7-8:  学者 => 学者
Span 21-22:  山脉 => 山脉
Span 17-18:  江河 => 江河
Span 23-24:  沙漠 => 沙漠
Span 13-14:  海洋 => 海洋
Span 10-11:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  地理学家 => 地理学家
Oracle Span 19-20:  城市 => 城市
Oracle Span 7-8:  学者 => 学者
Oracle Span 21-22:  山脉 => 山脉
Oracle Span 17-18:  江河 => 江河
Oracle Span 23-24:  沙漠 => 沙漠
Oracle Span 13-14:  海洋 => 海洋
Oracle Span 10-11:  知道 => 知道-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	地理学家	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	种	_	M	M	_	8	clf	_	_
8	学者	_	NN	NN	_	5	attr	_	_
9	,	_	PU	PU	_	5	punct	_	_
10	他	_	PN	PN	_	11	nsubj	_	_
11	知道	_	VV	VV	_	5	conj	_	_
12	哪里	_	AD	AD	_	13	advmod	_	_
13	有	_	VE	VE	_	11	ccomp	_	_
14	海洋	_	NN	NN	_	13	dobj	_	_
15	,	_	PU	PU	_	13	punct	_	_
16	哪里	_	AD	AD	_	17	advmod	_	_
17	有	_	VE	VE	_	13	dep	_	_
18	江河	_	NN	NN	_	24	conj	_	_
19	、	_	PU	PU	_	24	punct	_	_
20	城市	_	NN	NN	_	24	conj	_	_
21	、	_	PU	PU	_	24	punct	_	_
22	山脉	_	NN	NN	_	24	conj	_	_
23	、	_	PU	PU	_	24	punct	_	_
24	沙漠	_	NN	NN	_	17	dobj	_	_
25	。	_	PU	PU	_	5	punct	_	_
26	”	_	PU	PU	_	5	punct	_	_
27	他	_	PN	PN	_	13	xsubj	_	_

Oracle:
(x37 / 学者, domain, x39 / 地理学家)
(x40 / 知道-01, arg0, x39 / 地理学家)

Input(Some(Graph((say :arg1 (学者 :domain (地理学家 :arg0-of (知道-01 :arg1 (location :location-of (and :op 海洋 :op 江河 :op 城市 :op 山脉 :op 沙漠)))) :quant 1)),ArrayBuffer(Span(7,8,List(0),学者,学者,false), Span(1,2,List(1),地理学家,地理学家,false), Span(10,11,List(2),知道,知道-01,false), Span(13,14,List(3),海洋,海洋,false), Span(17,18,List(4),江河,江河,false), Span(19,20,List(5),城市,城市,false), Span(21,22,List(6),山脉,山脉,false), Span(23,24,List(7),沙漠,沙漠,false)),Map(2 -> 知道-01, 5 -> 城市, 7 -> 沙漠, 1 -> 地理学家, 4 -> 江河, 6 -> 山脉, 0 -> 学者, 3 -> 海洋),Map(x46 -> 山脉, x40 -> 知道-01, x43 -> 海洋, x37 -> 学者, x45 -> 城市, x39 -> 地理学家, x44 -> 江河, x47 -> 沙漠))),[Ljava.lang.String;@540b0448,Annotation([Ljava.lang.String;@50a691d3,[Ljava.lang.String;@557eb543,[Ljava.lang.String;@3b95d13c),Annotation([Ljava.lang.String;@3730ab42,[Ljava.lang.String;@537c8c7e,[Ledu.cmu.lti.nlp.amr.Dependency;@7308ffff),Annotation([Ljava.lang.String;@6601cc93,[Ljava.lang.String;@54d901aa,[Ljava.lang.String;@63716833),Annotation([Ljava.lang.String;@573284a5,[Ljava.lang.String;@3fbfbf84,[Ledu.cmu.lti.nlp.amr.Entity;@23f72d88))
AMR:
(x37 / 学者, domain, x39 / 地理学家)
(x40 / 知道-01, degree, x37 / 学者)
(x40 / 知道-01, prep-through, x43 / 海洋)
(x44 / 江河, location, x43 / 海洋)
(x45 / 城市, location, x44 / 江河)
(x45 / 城市, location, x46 / 山脉)
(x46 / 山脉, location, x47 / 沙漠)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.3
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.4
Decoded in 33,309 microseconds
Sentence: “ 这 倒 挺 有 意思 。 ” 小 王子 说 。

Oracle Span 1:  倒 => 倒
Oracle Span 2:  小 => 小-01
Oracle Span 3:  意思 => 意思
Oracle Span 4:  挺 => 挺
Oracle Span 5:  有 => 有-05
Oracle Span 6:  王子 => 王子
Oracle Span 7:  说 => 说-01
Oracle Span 8:  这 => 这
Spans:
Span 2-3:  倒 => 倒
Span 8-9:  小 => 小-01
Span 5-6:  意思 => 意思
Span 3-4:  挺 => 挺
Span 4-5:  有 => 有-05
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  倒 => 倒
Oracle Span 8-9:  小 => 小-01
Oracle Span 5-6:  意思 => 意思
Oracle Span 3-4:  挺 => 挺
Oracle Span 4-5:  有 => 有-05
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	倒	_	AD	AD	_	5	advmod	_	_
4	挺	_	VV	VV	_	5	mmod	_	_
5	有	_	VE	VE	_	11	dep	_	_
6	意思	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 有-05)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 有-05, arg0, x5 / 这)
(x4 / 有-05, arg1, x6 / 意思)
(x4 / 有-05, manner, x7 / 挺)
(x4 / 有-05, manner, x8 / 倒)

Input(Some(Graph((说-01 :arg1 (有-05 :manner 倒 :manner 挺 :arg1 意思 :arg0 这) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(4,5,List(1),有,有-05,false), Span(2,3,List(2),倒,倒,false), Span(3,4,List(3),挺,挺,false), Span(5,6,List(4),意思,意思,false), Span(1,2,List(5),这,这,false), Span(9,10,List(6),王子,王子,false), Span(8,9,List(7),小,小-01,false)),Map(2 -> 倒, 5 -> 这, 7 -> 小-01, 1 -> 有-05, 4 -> 意思, 6 -> 王子, 0 -> 说-01, 3 -> 挺),Map(x2 -> 王子, x5 -> 这, x8 -> 倒, x7 -> 挺, x4 -> 有-05, x3 -> 小-01, x6 -> 意思, x0 -> 说-01))),[Ljava.lang.String;@4bafe935,Annotation([Ljava.lang.String;@87b5b49,[Ljava.lang.String;@4a7a965d,[Ljava.lang.String;@507b79f7),Annotation([Ljava.lang.String;@64a9d48c,[Ljava.lang.String;@365a6a43,[Ledu.cmu.lti.nlp.amr.Dependency;@288cdaab),Annotation([Ljava.lang.String;@23b3aa8c,[Ljava.lang.String;@99407c2,[Ljava.lang.String;@6c796cc1),Annotation([Ljava.lang.String;@226eba67,[Ljava.lang.String;@1cb7936c,[Ledu.cmu.lti.nlp.amr.Entity;@35342d2f))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, manner, x4 / 有-05)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 有-05, manner, x7 / 挺)
(x4 / 有-05, manner, x8 / 倒)
(x4 / 有-05, prep-for, x6 / 意思)
(x8 / 倒, domain, x5 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,907 microseconds
Sentence: “ 这 才 是 一 种 真正 的 行当 。 ”

Oracle Span 1:  才 => 才
Oracle Span 2:  真正 => 真正-01
Oracle Span 3:  行当 => 行当
Oracle Span 4:  这 => 这
Spans:
Span 2-3:  才 => 才
Span 6-7:  真正 => 真正-01
Span 8-9:  行当 => 行当
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  才 => 才
Oracle Span 6-7:  真正 => 真正-01
Oracle Span 8-9:  行当 => 行当
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	才	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	9	clf	_	_
7	真正	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	行当	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x9 / 行当, domain, x12 / 这)
(x9 / 行当, manner, x13 / 才)
(x9 / 行当, mod, x10 / 真正-01)

Input(Some(Graph((say :arg1 (行当 :manner 才 :domain 这 :quant 1 :mod 真正-01)),ArrayBuffer(Span(8,9,List(0),行当,行当,false), Span(2,3,List(1),才,才,false), Span(1,2,List(2),这,这,false), Span(6,7,List(3),真正,真正-01,false)),Map(2 -> 这, 1 -> 才, 0 -> 行当, 3 -> 真正-01),Map(x10 -> 真正-01, x13 -> 才, x12 -> 这, x9 -> 行当))),[Ljava.lang.String;@128c502c,Annotation([Ljava.lang.String;@45667d98,[Ljava.lang.String;@65eabaab,[Ljava.lang.String;@7123be6c),Annotation([Ljava.lang.String;@1de9d54,[Ljava.lang.String;@77a2aa4a,[Ledu.cmu.lti.nlp.amr.Dependency;@47ad69f7),Annotation([Ljava.lang.String;@2b917fb0,[Ljava.lang.String;@5e5073ab,[Ljava.lang.String;@3c4262d1),Annotation([Ljava.lang.String;@100c567f,[Ljava.lang.String;@30c0d731,[Ledu.cmu.lti.nlp.amr.Entity;@6d5037a9))
AMR:
(x9 / 行当, domain, x12 / 这)
(x9 / 行当, manner, x13 / 才)
(x9 / 行当, mod, x10 / 真正-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,618 microseconds
Sentence: 他 朝 四周围 看 了 看 这 位 地理学家 的 星球 。

Oracle Span 1:  他 => 他
Oracle Span 2:  四周围 => 四周围
Oracle Span 3:  地理学家 => 地理学家
Oracle Span 4:  星球 => 星球
Oracle Span 5:  看 => 看-02
Oracle Span 6:  这 => 这
Spans:
Span 0-1:  他 => 他
Span 2-3:  四周围 => 四周围
Span 8-9:  地理学家 => 地理学家
Span 10-11:  星球 => 星球
Span 3-4:  看 => 看-02
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  四周围 => 四周围
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 10-11:  星球 => 星球
Oracle Span 3-4:  看 => 看-02
Oracle Span 6-7:  这 => 这

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	朝	_	P	P	_	4	prep	_	_
3	四周围	_	CD	CD	_	2	pobj	_	_
4	看	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	看	_	VV	VV	_	4	dep	_	_
7	这	_	DT	DT	_	9	det	_	_
8	位	_	M	M	_	7	clf	_	_
9	地理学家	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	星球	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 看-02, arg0, x4 / 他)
(x2 / 看-02, arg1, x6 / 星球)
(x2 / 看-02, direction, x5 / 四周围)
(x6 / 星球, poss, x7 / 地理学家)
(x7 / 地理学家, mod, x8 / 这)

Input(Some(Graph((看-02 :arg1 (星球 :poss (地理学家 :mod 这)) :direction 四周围 :arg0 他),ArrayBuffer(Span(3,4,List(0),看,看-02,false), Span(10,11,List(1),星球,星球,false), Span(8,9,List(2),地理学家,地理学家,false), Span(6,7,List(3),这,这,false), Span(2,3,List(4),四周围,四周围,false), Span(0,1,List(5),他,他,false)),Map(2 -> 地理学家, 5 -> 他, 1 -> 星球, 4 -> 四周围, 0 -> 看-02, 3 -> 这),Map(x2 -> 看-02, x5 -> 四周围, x8 -> 这, x7 -> 地理学家, x4 -> 他, x6 -> 星球))),[Ljava.lang.String;@422b8438,Annotation([Ljava.lang.String;@30669dac,[Ljava.lang.String;@629adce,[Ljava.lang.String;@6a282fdd),Annotation([Ljava.lang.String;@743c6ce4,[Ljava.lang.String;@70331432,[Ledu.cmu.lti.nlp.amr.Dependency;@3bbf9027),Annotation([Ljava.lang.String;@10c2064a,[Ljava.lang.String;@70e13fa,[Ljava.lang.String;@6ff415ad),Annotation([Ljava.lang.String;@280d9edc,[Ljava.lang.String;@28fd3dc1,[Ledu.cmu.lti.nlp.amr.Entity;@5f9b6ae7))
AMR:
(x2 / 看-02, direction, x5 / 四周围)
(x2 / 看-02, season, x4 / 他)
(x2 / 看-02, unit, x6 / 星球)
(x6 / 星球, poss, x7 / 地理学家)
(x7 / 地理学家, mod, x8 / 这)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,007 microseconds
Sentence: 他 还 从来 没有 见 过 一 颗 如此 壮观 的 行星 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  他 => 他
Oracle Span 3:  壮观 => 壮观-01
Oracle Span 4:  如此 => 如此
Oracle Span 5:  行星 => 行星
Oracle Span 6:  见 => 见-01
Oracle Span 7:  还 => 还
Spans:
Span 2-3:  从来 => 从来
Span 0-1:  他 => 他
Span 9-10:  壮观 => 壮观-01
Span 8-9:  如此 => 如此
Span 11-12:  行星 => 行星
Span 4-5:  见 => 见-01
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  壮观 => 壮观-01
Oracle Span 8-9:  如此 => 如此
Oracle Span 11-12:  行星 => 行星
Oracle Span 4-5:  见 => 见-01
Oracle Span 1-2:  还 => 还

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	见	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	颗	_	M	M	_	12	clf	_	_
9	如此	_	AD	AD	_	10	advmod	_	_
10	壮观	_	VA	VA	_	12	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	行星	_	NN	NN	_	5	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 壮观-01, degree, x11 / 如此)
(x2 / 见-01, arg0, x7 / 他)
(x2 / 见-01, arg1, x8 / 行星)
(x2 / 见-01, manner, x6 / 还)
(x2 / 见-01, time, x12 / 从来)
(x8 / 行星, mod, x10 / 壮观-01)

Input(Some(Graph((见-01 :time 从来 :arg1 (行星 :quant 1 :mod (壮观-01 :degree 如此)) :arg0 他 :manner 还 :polarity -),ArrayBuffer(Span(4,5,List(0),见,见-01,false), Span(2,3,List(1),从来,从来,false), Span(11,12,List(2),行星,行星,false), Span(9,10,List(3),壮观,壮观-01,false), Span(8,9,List(4),如此,如此,false), Span(0,1,List(5),他,他,false), Span(1,2,List(6),还,还,false)),Map(2 -> 行星, 5 -> 他, 1 -> 从来, 4 -> 如此, 6 -> 还, 0 -> 见-01, 3 -> 壮观-01),Map(x10 -> 壮观-01, x2 -> 见-01, x8 -> 行星, x12 -> 从来, x7 -> 他, x11 -> 如此, x6 -> 还))),[Ljava.lang.String;@108d55c4,Annotation([Ljava.lang.String;@5432c277,[Ljava.lang.String;@15e0fe05,[Ljava.lang.String;@1128620c),Annotation([Ljava.lang.String;@6bf13698,[Ljava.lang.String;@299270eb,[Ledu.cmu.lti.nlp.amr.Dependency;@3b90a30a),Annotation([Ljava.lang.String;@69fa8e76,[Ljava.lang.String;@bdd2027,[Ljava.lang.String;@31f20c9f),Annotation([Ljava.lang.String;@f446158,[Ljava.lang.String;@32f0c7f8,[Ledu.cmu.lti.nlp.amr.Entity;@504e1599))
AMR:
(x10 / 壮观-01, degree, x11 / 如此)
(x2 / 见-01, manner, x6 / 还)
(x2 / 见-01, prep-from, x7 / 他)
(x2 / 见-01, prep-from, x8 / 行星)
(x2 / 见-01, time, x12 / 从来)
(x8 / 行星, mod, x10 / 壮观-01)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 16,585 microseconds
Sentence: “ 您 的 星球 真 美 呀 。

Oracle Span 1:  您 => 您
Oracle Span 2:  星球 => 星球
Oracle Span 3:  真 => 真
Oracle Span 4:  美 => 美-01
Spans:
Span 1-2:  您 => 您
Span 3-4:  星球 => 星球
Span 4-5:  真 => 真
Span 5-6:  美 => 美-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  您 => 您
Oracle Span 3-4:  星球 => 星球
Oracle Span 4-5:  真 => 真
Oracle Span 5-6:  美 => 美-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	您	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	星球	_	NN	NN	_	5	nsubj	_	_
5	真	_	NN	NN	_	0	root	_	_
6	美	_	NR	NR	_	5	dobj	_	_
7	呀	_	SP	SP	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 星球, poss, x11 / 您)
(x8 / 美-01, arg0, x10 / 星球)
(x8 / 美-01, degree, x9 / 真)

Input(Some(Graph((say :arg1 (美-01 :arg0 (星球 :poss 您) :degree 真) :mode expressive),ArrayBuffer(Span(5,6,List(0),美,美-01,false), Span(3,4,List(1),星球,星球,false), Span(1,2,List(2),您,您,false), Span(4,5,List(3),真,真,false)),Map(2 -> 您, 1 -> 星球, 0 -> 美-01, 3 -> 真),Map(x10 -> 星球, x8 -> 美-01, x11 -> 您, x9 -> 真))),[Ljava.lang.String;@71f96dfb,Annotation([Ljava.lang.String;@5d1b9c3d,[Ljava.lang.String;@69e05f61,[Ljava.lang.String;@49a26d19),Annotation([Ljava.lang.String;@730e5763,[Ljava.lang.String;@7275c74b,[Ledu.cmu.lti.nlp.amr.Dependency;@19058533),Annotation([Ljava.lang.String;@4315e9af,[Ljava.lang.String;@42210be1,[Ljava.lang.String;@1eb2d371),Annotation([Ljava.lang.String;@2babf189,[Ljava.lang.String;@479f2dc2,[Ledu.cmu.lti.nlp.amr.Entity;@dab48d3))
AMR:
(x10 / 星球, poss, x11 / 您)
(x8 / 美-01, degree, x9 / 真)
(x8 / 美-01, time, x10 / 星球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,812 microseconds
Sentence: 上面 有 海洋 吗 ？ ”

Oracle Span 1:  上面 => 上面
Oracle Span 2:  有 => 有-03
Oracle Span 3:  海洋 => 海洋
Spans:
Span 0-1:  上面 => 上面
Span 1-2:  有 => 有-03
Span 2-3:  海洋 => 海洋

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  上面 => 上面
Oracle Span 1-2:  有 => 有-03
Oracle Span 2-3:  海洋 => 海洋

Dependencies:
1	上面	_	NN	NN	_	2	nsubj	_	_
2	有	_	VE	VE	_	0	root	_	_
3	海洋	_	NN	NN	_	2	dep	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x9 / 有-03, arg0, x10 / 上面)
(x9 / 有-03, arg1, x11 / 海洋)

Input(Some(Graph((say :arg1 (有-03 :mode interrogative :arg1 海洋 :arg0 上面)),ArrayBuffer(Span(1,2,List(0),有,有-03,false), Span(2,3,List(1),海洋,海洋,false), Span(0,1,List(2),上面,上面,false)),Map(2 -> 上面, 1 -> 海洋, 0 -> 有-03),Map(x10 -> 上面, x11 -> 海洋, x9 -> 有-03))),[Ljava.lang.String;@58a2b4c,Annotation([Ljava.lang.String;@7159a5cd,[Ljava.lang.String;@4f966719,[Ljava.lang.String;@18ac53e8),Annotation([Ljava.lang.String;@4ca8dbfa,[Ljava.lang.String;@7063686f,[Ledu.cmu.lti.nlp.amr.Dependency;@c3177d5),Annotation([Ljava.lang.String;@76f856a8,[Ljava.lang.String;@7c853486,[Ljava.lang.String;@174e1b69),Annotation([Ljava.lang.String;@1046498a,[Ljava.lang.String;@243f003c,[Ledu.cmu.lti.nlp.amr.Entity;@71cb3139))
AMR:
(x9 / 有-03, prep-for, x10 / 上面)
(x9 / 有-03, prep-in, x11 / 海洋)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,430 microseconds
Sentence: “ 这 我 没 法 知道 。 ” 地理学家 说 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  知道 => 知道-01
Oracle Span 3:  说 => 说-01
Oracle Span 4:  这 => 这
Spans:
Span 8-9:  地理学家 => 地理学家
Span 5-6:  知道 => 知道-01
Span 9-10:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	dep	_	_
3	我	_	PN	PN	_	4	prep	_	_
4	没	_	VE	VE	_	10	dep	_	_
5	法	_	NR	NR	_	6	nsubj	_	_
6	知道	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_
9	地理学家	_	NR	NR	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x5 / 知道-01, arg1, x7 / 这)

Input(Some(Graph((说-01 :arg1 (没法-01 :arg1 (知道-01 :arg0 x2 :arg1 这) :arg0 x2) :arg0 地理学家),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(5,6,List(1),知道,知道-01,false), Span(1,2,List(2),这,这,false), Span(8,9,List(3),地理学家,地理学家,false)),Map(2 -> 这, 1 -> 知道-01, 0 -> 说-01, 3 -> 地理学家),Map(x2 -> 地理学家, x5 -> 知道-01, x7 -> 这, x0 -> 说-01))),[Ljava.lang.String;@1639f93a,Annotation([Ljava.lang.String;@3491e86e,[Ljava.lang.String;@68f32020,[Ljava.lang.String;@409986fe),Annotation([Ljava.lang.String;@19b047fe,[Ljava.lang.String;@22590e3e,[Ledu.cmu.lti.nlp.amr.Dependency;@53dad875),Annotation([Ljava.lang.String;@5f780a86,[Ljava.lang.String;@446c3920,[Ljava.lang.String;@2eaef76d),Annotation([Ljava.lang.String;@2b329bbd,[Ljava.lang.String;@34819867,[Ledu.cmu.lti.nlp.amr.Entity;@118102ee))
AMR:
(x0 / 说-01, example, x2 / 地理学家)
(x5 / 知道-01, prep-by, x7 / 这)
(x5 / 知道-01, source, x2 / 地理学家)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,328 microseconds
Sentence: “ 啊 ！ ”

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x5 -> 啊))),[Ljava.lang.String;@48cd9a2c,Annotation([Ljava.lang.String;@771d1ffb,[Ljava.lang.String;@4f67e3df,[Ljava.lang.String;@56681eaf),Annotation([Ljava.lang.String;@72d0f2b4,[Ljava.lang.String;@6d2dc9d2,[Ledu.cmu.lti.nlp.amr.Dependency;@1da4b6b3),Annotation([Ljava.lang.String;@b2f4ece,[Ljava.lang.String;@7e1f584d,[Ljava.lang.String;@7dff6d05),Annotation([Ljava.lang.String;@45d64d27,[Ljava.lang.String;@34fe326d,[Ledu.cmu.lti.nlp.amr.Entity;@30a7c98f))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,258 microseconds
Sentence: 小 王子 大失所望 。

Oracle Span 1:  大失所望 => 大失所望-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Spans:
Span 2-3:  大失所望 => 大失所望-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  大失所望 => 大失所望-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	大失所望	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 大失所望-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((大失所望-01 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),大失所望,大失所望-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 大失所望-01),Map(x2 -> 王子, x3 -> 小-01, x0 -> 大失所望-01))),[Ljava.lang.String;@36361ddb,Annotation([Ljava.lang.String;@41fed14f,[Ljava.lang.String;@4d6ee47,[Ljava.lang.String;@a33b4e3),Annotation([Ljava.lang.String;@c6da8bb,[Ljava.lang.String;@3bae64d0,[Ledu.cmu.lti.nlp.amr.Dependency;@8b91134),Annotation([Ljava.lang.String;@1fba386c,[Ljava.lang.String;@7e736350,[Ljava.lang.String;@36b310aa),Annotation([Ljava.lang.String;@76c387f9,[Ljava.lang.String;@3874b815,[Ledu.cmu.lti.nlp.amr.Entity;@5d7835a8))
AMR:
(x0 / 大失所望-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,194 microseconds
Sentence: “ 那么 ， 山脉 呢 ？ ”

Oracle Span 1:  山脉 => 山脉
Spans:
Span 3-4:  山脉 => 山脉

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  山脉 => 山脉

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	山脉	_	VV	VV	_	0	root	_	_
5	呢	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (temporal :arg2 (山脉 :mode interrogative))),ArrayBuffer(Span(3,4,List(0),山脉,山脉,false)),Map(0 -> 山脉),Map(x7 -> 山脉))),[Ljava.lang.String;@736048ed,Annotation([Ljava.lang.String;@1976f537,[Ljava.lang.String;@45f421c,[Ljava.lang.String;@1816e24a),Annotation([Ljava.lang.String;@6940f685,[Ljava.lang.String;@47b179d7,[Ledu.cmu.lti.nlp.amr.Dependency;@39008c9f),Annotation([Ljava.lang.String;@162b3d47,[Ljava.lang.String;@783115d9,[Ljava.lang.String;@3402b4c9),Annotation([Ljava.lang.String;@95bb2a2,[Ljava.lang.String;@46d567cb,[Ledu.cmu.lti.nlp.amr.Entity;@363a3d15))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,070 microseconds
Sentence: “ 这 ， 我 没法 知道 。 ” 地理学家 说 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  没法 => 没法-01
Oracle Span 3:  知道 => 知道-01
Oracle Span 4:  说 => 说-01
Oracle Span 5:  这 => 这
Spans:
Span 8-9:  地理学家 => 地理学家
Span 4-5:  没法 => 没法-01
Span 5-6:  知道 => 知道-01
Span 9-10:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 4-5:  没法 => 没法-01
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	dep	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	我	_	PN	PN	_	5	prep	_	_
5	没法	_	VV	VV	_	10	dep	_	_
6	知道	_	VV	VV	_	5	ccomp	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	地理学家	_	NR	NR	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 没法-01)
(x3 / 没法-01, arg1, x5 / 知道-01)
(x5 / 知道-01, arg1, x7 / 这)

Input(Some(Graph((说-01 :arg1 (没法-01 :arg0 x2 :arg1 (知道-01 :arg0 x2 :arg1 这)) :arg0 地理学家),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(4,5,List(1),没法,没法-01,false), Span(5,6,List(2),知道,知道-01,false), Span(1,2,List(3),这,这,false), Span(8,9,List(4),地理学家,地理学家,false)),Map(2 -> 知道-01, 1 -> 没法-01, 4 -> 地理学家, 0 -> 说-01, 3 -> 这),Map(x2 -> 地理学家, x5 -> 知道-01, x7 -> 这, x3 -> 没法-01, x0 -> 说-01))),[Ljava.lang.String;@173f73e7,Annotation([Ljava.lang.String;@43a51d00,[Ljava.lang.String;@2e23c180,[Ljava.lang.String;@499683c4),Annotation([Ljava.lang.String;@25da615a,[Ljava.lang.String;@4efc25fc,[Ledu.cmu.lti.nlp.amr.Dependency;@7ee3d262),Annotation([Ljava.lang.String;@396e6d9,[Ljava.lang.String;@75308740,[Ljava.lang.String;@5acc9fdf),Annotation([Ljava.lang.String;@3a5c2626,[Ljava.lang.String;@e48bf9a,[Ledu.cmu.lti.nlp.amr.Entity;@7fb33394))
AMR:
(x0 / 说-01, example, x2 / 地理学家)
(x3 / 没法-01, domain, x7 / 这)
(x3 / 没法-01, purpose, x2 / 地理学家)
(x5 / 知道-01, direction, x3 / 没法-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,316 microseconds
Sentence: “ 那么 ， 有 城市 、 河流 、 沙漠 吗 ？ ”

Oracle Span 1:  城市 => 城市
Oracle Span 2:  有 => 有-03
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  河流 => 河流
Spans:
Span 4-5:  城市 => 城市
Span 3-4:  有 => 有-03
Span 8-9:  沙漠 => 沙漠
Span 6-7:  河流 => 河流

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  城市 => 城市
Oracle Span 3-4:  有 => 有-03
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 6-7:  河流 => 河流

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	有	_	VE	VE	_	0	root	_	_
5	城市	_	NN	NN	_	9	conj	_	_
6	、	_	PU	PU	_	9	punct	_	_
7	河流	_	NN	NN	_	9	conj	_	_
8	、	_	PU	PU	_	9	punct	_	_
9	沙漠	_	NN	NN	_	4	dobj	_	_
10	吗	_	SP	SP	_	4	dep	_	_
11	？	_	PU	PU	_	4	punct	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (temporal :arg2 (有-03 :mode interrogative :arg1 (and :op 城市 :op 河流 :op 沙漠)))),ArrayBuffer(Span(3,4,List(0),有,有-03,false), Span(4,5,List(1),城市,城市,false), Span(6,7,List(2),河流,河流,false), Span(8,9,List(3),沙漠,沙漠,false)),Map(2 -> 河流, 1 -> 城市, 0 -> 有-03, 3 -> 沙漠),Map(x13 -> 城市, x15 -> 沙漠, x11 -> 有-03, x14 -> 河流))),[Ljava.lang.String;@41bf79da,Annotation([Ljava.lang.String;@1a891add,[Ljava.lang.String;@5176d279,[Ljava.lang.String;@373f7450),Annotation([Ljava.lang.String;@d74bac4,[Ljava.lang.String;@5ff90645,[Ledu.cmu.lti.nlp.amr.Dependency;@387bf2d9),Annotation([Ljava.lang.String;@74aa9c72,[Ljava.lang.String;@5c20aab9,[Ljava.lang.String;@4b7c4456),Annotation([Ljava.lang.String;@2c768ada,[Ljava.lang.String;@c1fca2a,[Ledu.cmu.lti.nlp.amr.Entity;@5533dc72))
AMR:
(x11 / 有-03, prep-for, x13 / 城市)
(x11 / 有-03, purpose, x14 / 河流)
(x14 / 河流, prep-through, x15 / 沙漠)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.2
Decoded in 7,782 microseconds
Sentence: “ 这 ， 我 也 没 法 知道 。 ” 地理学家 说 。

Oracle Span 1:  也 => 也
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  知道 => 知道-01
Oracle Span 4:  说 => 说-01
Oracle Span 5:  这 => 这
Spans:
Span 4-5:  也 => 也
Span 10-11:  地理学家 => 地理学家
Span 7-8:  知道 => 知道-01
Span 11-12:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 10-11:  地理学家 => 地理学家
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	nsubj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	也	_	AD	AD	_	6	advmod	_	_
6	没	_	VE	VE	_	12	dep	_	_
7	法	_	NR	NR	_	8	nsubj	_	_
8	知道	_	VV	VV	_	6	conj	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_
11	地理学家	_	AD	AD	_	12	advmod	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x10 / 知道-01, arg1, x12 / 这)

Input(Some(Graph((说-01 :arg1 (没法-01 :manner 也 :arg0 x2 :arg1 (知道-01 :arg1 这 :arg0 x2)) :arg0 地理学家),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(4,5,List(1),也,也,false), Span(7,8,List(2),知道,知道-01,false), Span(1,2,List(3),这,这,false), Span(10,11,List(4),地理学家,地理学家,false)),Map(2 -> 知道-01, 1 -> 也, 4 -> 地理学家, 0 -> 说-01, 3 -> 这),Map(x2 -> 地理学家, x10 -> 知道-01, x12 -> 这, x6 -> 也, x0 -> 说-01))),[Ljava.lang.String;@7c447c76,Annotation([Ljava.lang.String;@64fc097e,[Ljava.lang.String;@1640c151,[Ljava.lang.String;@5d5b5fa7),Annotation([Ljava.lang.String;@2a32fb6,[Ljava.lang.String;@6107165,[Ledu.cmu.lti.nlp.amr.Dependency;@164a62bf),Annotation([Ljava.lang.String;@11ebb1b6,[Ljava.lang.String;@aaee2a2,[Ljava.lang.String;@f3021cb),Annotation([Ljava.lang.String;@4aaae508,[Ljava.lang.String;@6009bea,[Ledu.cmu.lti.nlp.amr.Entity;@7bc6d27a))
AMR:
(x0 / 说-01, example, x2 / 地理学家)
(x10 / 知道-01, domain, x12 / 这)
(x10 / 知道-01, manner, x6 / 也)
(x10 / 知道-01, source, x2 / 地理学家)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,592 microseconds
Sentence: “ 可 您 还 是 地理学家 呢 ！ ”

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  您 => 您
Oracle Span 3:  还 => 还
Spans:
Span 5-6:  地理学家 => 地理学家
Span 2-3:  您 => 您
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  地理学家 => 地理学家
Oracle Span 2-3:  您 => 您
Oracle Span 3-4:  还 => 还

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可	_	VV	VV	_	5	dep	_	_
3	您	_	PN	PN	_	5	dobj	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	地理学家	_	NN	NN	_	5	attr	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	！	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 地理学家, domain, x11 / 您)
(x10 / 地理学家, manner, x12 / 还)

Input(Some(Graph((say :arg1 (contrast :arg1 (地理学家 :mode expressive :manner 还 :domain 您))),ArrayBuffer(Span(5,6,List(0),地理学家,地理学家,false), Span(3,4,List(1),还,还,false), Span(2,3,List(2),您,您,false)),Map(2 -> 您, 1 -> 还, 0 -> 地理学家),Map(x10 -> 地理学家, x12 -> 还, x11 -> 您))),[Ljava.lang.String;@75769ab0,Annotation([Ljava.lang.String;@6869a3b3,[Ljava.lang.String;@6ab4ba9f,[Ljava.lang.String;@27ace0b1),Annotation([Ljava.lang.String;@664e5dee,[Ljava.lang.String;@431f1eaf,[Ledu.cmu.lti.nlp.amr.Dependency;@cb03411),Annotation([Ljava.lang.String;@4c59e45e,[Ljava.lang.String;@58ec7116,[Ljava.lang.String;@63bde6c2),Annotation([Ljava.lang.String;@6ea04618,[Ljava.lang.String;@6dd82486,[Ledu.cmu.lti.nlp.amr.Entity;@56078cea))
AMR:
(x10 / 地理学家, domain, x11 / 您)
(x10 / 地理学家, manner, x12 / 还)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 5,575 microseconds
Sentence: “ 一点 不错 ， ” 地理学家 说 ，

Oracle Span 1:  一点 => 一点
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  一点 => 一点
Span 5-6:  地理学家 => 地理学家
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一点 => 一点
Oracle Span 5-6:  地理学家 => 地理学家
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	地理学家	_	AD	AD	_	7	advmod	_	_
7	说	_	VV	VV	_	3	dep	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)

Input(Some(Graph((说-01 :arg1 (错-01 :polarity - :degree 一点) :arg0 地理学家),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(1,2,List(1),一点,一点,false), Span(5,6,List(2),地理学家,地理学家,false)),Map(2 -> 地理学家, 1 -> 一点, 0 -> 说-01),Map(x2 -> 地理学家, x7 -> 一点, x0 -> 说-01))),[Ljava.lang.String;@5a00eb1e,Annotation([Ljava.lang.String;@36fcf6c0,[Ljava.lang.String;@1aac188d,[Ljava.lang.String;@7026b7ee),Annotation([Ljava.lang.String;@2d23faef,[Ljava.lang.String;@7cb8437d,[Ledu.cmu.lti.nlp.amr.Dependency;@62a4417),Annotation([Ljava.lang.String;@43f61afb,[Ljava.lang.String;@713064e8,[Ljava.lang.String;@4fad6218),Annotation([Ljava.lang.String;@1bf39d06,[Ljava.lang.String;@68217d41,[Ledu.cmu.lti.nlp.amr.Entity;@1ac45389))
AMR:
(x0 / 说-01, degree, x7 / 一点)
(x0 / 说-01, example, x2 / 地理学家)

WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,640 microseconds
Sentence: “ 但是 我 不 是 探察家 。

Oracle Span 1:  我 => 我
Oracle Span 2:  探察家 => 探察家
Spans:
Span 2-3:  我 => 我
Span 5-6:  探察家 => 探察家

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  我 => 我
Oracle Span 5-6:  探察家 => 探察家

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	但是	_	AD	AD	_	5	advmod	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	是	_	VC	VC	_	0	root	_	_
6	探察家	_	NN	NN	_	5	attr	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 探察家, domain, x11 / 我)

Input(Some(Graph((say :arg1 (contrast :arg2 (探察家 :domain 我 :polarity -))),ArrayBuffer(Span(5,6,List(0),探察家,探察家,false), Span(2,3,List(1),我,我,false)),Map(1 -> 我, 0 -> 探察家),Map(x11 -> 我, x9 -> 探察家))),[Ljava.lang.String;@3e5d4f6b,Annotation([Ljava.lang.String;@39c1fe0b,[Ljava.lang.String;@5ae95707,[Ljava.lang.String;@62891fc8),Annotation([Ljava.lang.String;@367b22e5,[Ljava.lang.String;@fca387,[Ledu.cmu.lti.nlp.amr.Dependency;@10bd9df0),Annotation([Ljava.lang.String;@3ae0b770,[Ljava.lang.String;@55e3d6c3,[Ljava.lang.String;@30e6a763),Annotation([Ljava.lang.String;@4c48fe92,[Ljava.lang.String;@732c9b5c,[Ledu.cmu.lti.nlp.amr.Entity;@38320e34))
AMR:
(x9 / 探察家, domain, x11 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 3,008 microseconds
Sentence: 我 手下 一 个 探察家 都 没有 。

Oracle Span 1:  我 => 我
Oracle Span 2:  手下 => 手下
Oracle Span 3:  探察家 => 探察家
Oracle Span 4:  都 => 都
Spans:
Span 0-1:  我 => 我
Span 1-2:  手下 => 手下
Span 4-5:  探察家 => 探察家
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  手下 => 手下
Oracle Span 4-5:  探察家 => 探察家
Oracle Span 5-6:  都 => 都

Dependencies:
1	我	_	PN	PN	_	2	nn	_	_
2	手下	_	NN	NN	_	5	nn	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	探察家	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	没有	_	VE	VE	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 手下, poss, x12 / 我)

Input(Some(Graph((有-01 :polarity - :arg0 (手下 :poss 我) :arg1 (探察家 :quant 1) :manner 都),ArrayBuffer(Span(1,2,List(0),手下,手下,false), Span(0,1,List(1),我,我,false), Span(4,5,List(2),探察家,探察家,false), Span(5,6,List(3),都,都,false)),Map(2 -> 探察家, 1 -> 我, 0 -> 手下, 3 -> 都),Map(x13 -> 探察家, x12 -> 我, x15 -> 都, x11 -> 手下))),[Ljava.lang.String;@3d6a6bee,Annotation([Ljava.lang.String;@36ddaebf,[Ljava.lang.String;@213c3543,[Ljava.lang.String;@9d7ccfe),Annotation([Ljava.lang.String;@670ce331,[Ljava.lang.String;@3cff0139,[Ledu.cmu.lti.nlp.amr.Dependency;@7c29adc8),Annotation([Ljava.lang.String;@4b2e3e8f,[Ljava.lang.String;@4bbb49b0,[Ljava.lang.String;@f096f37),Annotation([Ljava.lang.String;@3effd4f3,[Ljava.lang.String;@41f4fe5,[Ledu.cmu.lti.nlp.amr.Entity;@15f8701f))
AMR:
(x11 / 手下, poss, x12 / 我)
(x12 / 我, age, x13 / 探察家)
(x13 / 探察家, ARG6, x15 / 都)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.3
Decoded in 7,132 microseconds
Sentence: 地理学家 是 不 去 计算 城市 、 河流 、 山脉 、 海洋 、 沙漠 的 。

Oracle Span 1:  去 => 去-01
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  城市 => 城市
Oracle Span 4:  山脉 => 山脉
Oracle Span 5:  沙漠 => 沙漠
Oracle Span 6:  河流 => 河流
Oracle Span 7:  海洋 => 海洋
Oracle Span 8:  计算 => 计算-01
Spans:
Span 3-4:  去 => 去-01
Span 0-1:  地理学家 => 地理学家
Span 5-6:  城市 => 城市
Span 9-10:  山脉 => 山脉
Span 13-14:  沙漠 => 沙漠
Span 7-8:  河流 => 河流
Span 11-12:  海洋 => 海洋
Span 4-5:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  去 => 去-01
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 5-6:  城市 => 城市
Oracle Span 9-10:  山脉 => 山脉
Oracle Span 13-14:  沙漠 => 沙漠
Oracle Span 7-8:  河流 => 河流
Oracle Span 11-12:  海洋 => 海洋
Oracle Span 4-5:  计算 => 计算-01

Dependencies:
1	地理学家	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	计算	_	VV	VV	_	2	attr	_	_
6	城市	_	NN	NN	_	14	conj	_	_
7	、	_	PU	PU	_	14	punct	_	_
8	河流	_	NN	NN	_	14	conj	_	_
9	、	_	PU	PU	_	14	punct	_	_
10	山脉	_	NN	NN	_	14	conj	_	_
11	、	_	PU	PU	_	14	punct	_	_
12	海洋	_	NN	NN	_	14	conj	_	_
13	、	_	PU	PU	_	14	punct	_	_
14	沙漠	_	NN	NN	_	5	dobj	_	_
15	的	_	DEC	DEC	_	5	cpm	_	_
16	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 去-01, arg0, x3 / 地理学家)
(x0 / 去-01, arg1, x4 / 计算-01)

Input(Some(Graph((去-01 :arg1 (计算-01 :arg1 (and :op 城市 :op 河流 :op 山脉 :op 海洋 :op 沙漠) :arg0 x3) :arg0 地理学家 :polarity -),ArrayBuffer(Span(3,4,List(0),去,去-01,false), Span(4,5,List(1),计算,计算-01,false), Span(5,6,List(2),城市,城市,false), Span(7,8,List(3),河流,河流,false), Span(9,10,List(4),山脉,山脉,false), Span(11,12,List(5),海洋,海洋,false), Span(13,14,List(6),沙漠,沙漠,false), Span(0,1,List(7),地理学家,地理学家,false)),Map(2 -> 城市, 5 -> 海洋, 7 -> 地理学家, 1 -> 计算-01, 4 -> 山脉, 6 -> 沙漠, 0 -> 去-01, 3 -> 河流),Map(x10 -> 海洋, x8 -> 河流, x7 -> 城市, x4 -> 计算-01, x3 -> 地理学家, x11 -> 沙漠, x9 -> 山脉, x0 -> 去-01))),[Ljava.lang.String;@514cd540,Annotation([Ljava.lang.String;@11d4dbd6,[Ljava.lang.String;@6f4ade6e,[Ljava.lang.String;@39e43310),Annotation([Ljava.lang.String;@eb507b9,[Ljava.lang.String;@390877d2,[Ledu.cmu.lti.nlp.amr.Dependency;@86733),Annotation([Ljava.lang.String;@186cb891,[Ljava.lang.String;@3ec2ecea,[Ljava.lang.String;@440eaa07),Annotation([Ljava.lang.String;@7fc7c4a,[Ljava.lang.String;@7aa9e414,[Ledu.cmu.lti.nlp.amr.Entity;@53a5e217))
AMR:
(x0 / 去-01, scale, x4 / 计算-01)
(x0 / 去-01, topic, x3 / 地理学家)
(x10 / 海洋, instrument, x11 / 沙漠)
(x10 / 海洋, topic, x9 / 山脉)
(x7 / 城市, topic, x4 / 计算-01)
(x8 / 河流, topic, x4 / 计算-01)
(x9 / 山脉, topic, x8 / 河流)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.3
WARNING: makeIds can't find span Id: 0.2.1.4
WARNING: makeIds can't find span Id: 0.1
Decoded in 18,026 microseconds
Sentence: 地理学家 很 重要 ， 不 能 到处 跑 。

Oracle Span 1:  到处 => 到处
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  很 => 很
Oracle Span 4:  能 => 能-01
Oracle Span 5:  跑 => 跑-01
Oracle Span 6:  重要 => 重要-01
Spans:
Span 6-7:  到处 => 到处
Span 0-1:  地理学家 => 地理学家
Span 1-2:  很 => 很
Span 5-6:  能 => 能-01
Span 7-8:  跑 => 跑-01
Span 2-3:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  到处 => 到处
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 1-2:  很 => 很
Oracle Span 5-6:  能 => 能-01
Oracle Span 7-8:  跑 => 跑-01
Oracle Span 2-3:  重要 => 重要-01

Dependencies:
1	地理学家	_	VV	VV	_	0	root	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	重要	_	VA	VA	_	1	ccomp	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	不	_	AD	AD	_	8	neg	_	_
6	能	_	VV	VV	_	8	mmod	_	_
7	到处	_	AD	AD	_	8	advmod	_	_
8	跑	_	VV	VV	_	1	dep	_	_
9	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x2 / 重要-01, arg0, x4 / 地理学家)
(x2 / 重要-01, degree, x3 / 很)
(x5 / 能-01, arg0, x7 / 跑-01)
(x7 / 跑-01, arg3, x10 / 到处)

Input(Some(Graph((causation :arg1 (重要-01 :arg0 地理学家 :degree 很) :arg2 (能-01 :arg0 (跑-01 :arg3 到处 :arg0 x4) :polarity -)),ArrayBuffer(Span(2,3,List(0),重要,重要-01,false), Span(0,1,List(1),地理学家,地理学家,false), Span(1,2,List(2),很,很,false), Span(5,6,List(3),能,能-01,false), Span(7,8,List(4),跑,跑-01,false), Span(6,7,List(5),到处,到处,false)),Map(2 -> 很, 5 -> 到处, 1 -> 地理学家, 4 -> 跑-01, 0 -> 重要-01, 3 -> 能-01),Map(x10 -> 到处, x2 -> 重要-01, x5 -> 能-01, x7 -> 跑-01, x4 -> 地理学家, x3 -> 很))),[Ljava.lang.String;@624a24f6,Annotation([Ljava.lang.String;@6b00ad9,[Ljava.lang.String;@338cc75f,[Ljava.lang.String;@4f453e63),Annotation([Ljava.lang.String;@7c9bdee9,[Ljava.lang.String;@7afbf561,[Ledu.cmu.lti.nlp.amr.Dependency;@2f98635e),Annotation([Ljava.lang.String;@49c8f6e8,[Ljava.lang.String;@6b0615ae,[Ljava.lang.String;@4e73b552),Annotation([Ljava.lang.String;@221dad51,[Ljava.lang.String;@2cec704c,[Ledu.cmu.lti.nlp.amr.Entity;@771cbb1a))
AMR:
(x2 / 重要-01, degree, x3 / 很)
(x2 / 重要-01, degree, x4 / 地理学家)
(x4 / 地理学家, condition, x5 / 能-01)
(x5 / 能-01, snt5, x7 / 跑-01)
(x7 / 跑-01, location, x10 / 到处)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 14,155 microseconds
Sentence: 他 不 能 离开 他 的 办公室 。

Oracle Span 1:  他 => 他
Oracle Span 2:  办公室 => 办公室
Oracle Span 3:  离开 => 离开-01
Oracle Span 4:  能 => 能-01
Spans:
Span 0-1:  他 => 他
Span 6-7:  办公室 => 办公室
Span 3-4:  离开 => 离开-01
Span 2-3:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  办公室 => 办公室
Oracle Span 3-4:  离开 => 离开-01
Oracle Span 2-3:  能 => 能-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	能	_	VV	VV	_	4	mmod	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	办公室	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 能-01, arg0, x3 / 离开-01)
(x3 / 离开-01, arg0, x4 / 他)
(x3 / 离开-01, arg1, x5 / 办公室)

Input(Some(Graph((能-01 :arg0 (离开-01 :arg1 (办公室 :poss x4) :arg0 他) :polarity -),ArrayBuffer(Span(2,3,List(0),能,能-01,false), Span(3,4,List(1),离开,离开-01,false), Span(6,7,List(2),办公室,办公室,false), Span(0,1,List(3),他,他,false)),Map(2 -> 办公室, 1 -> 离开-01, 0 -> 能-01, 3 -> 他),Map(x5 -> 办公室, x4 -> 他, x3 -> 离开-01, x0 -> 能-01))),[Ljava.lang.String;@2416498e,Annotation([Ljava.lang.String;@6b2e0f78,[Ljava.lang.String;@240f6c41,[Ljava.lang.String;@3659d7b1),Annotation([Ljava.lang.String;@2015b2cd,[Ljava.lang.String;@3bdb2c78,[Ledu.cmu.lti.nlp.amr.Dependency;@64693226),Annotation([Ljava.lang.String;@1c758545,[Ljava.lang.String;@117bcfdc,[Ljava.lang.String;@73a19967),Annotation([Ljava.lang.String;@5e746d37,[Ljava.lang.String;@6e1b9411,[Ledu.cmu.lti.nlp.amr.Entity;@21d1b321))
AMR:
(x0 / 能-01, op, x3 / 离开-01)
(x3 / 离开-01, season, x4 / 他)
(x3 / 离开-01, snt3, x5 / 办公室)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 7,550 microseconds
Sentence: 但 他 可以 在 办公室 里 接见 探察家 。

Oracle Span 1:  他 => 他
Oracle Span 2:  办公室 => 办公室
Oracle Span 3:  可以 => 可以-02
Oracle Span 4:  探察家 => 探察家
Oracle Span 5:  接见 => 接见-01
Spans:
Span 1-2:  他 => 他
Span 4-5:  办公室 => 办公室
Span 2-3:  可以 => 可以-02
Span 7-8:  探察家 => 探察家
Span 6-7:  接见 => 接见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  办公室 => 办公室
Oracle Span 2-3:  可以 => 可以-02
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 6-7:  接见 => 接见-01

Dependencies:
1	但	_	AD	AD	_	7	advmod	_	_
2	他	_	PN	PN	_	7	nsubj	_	_
3	可以	_	VV	VV	_	7	mmod	_	_
4	在	_	P	P	_	7	prep	_	_
5	办公室	_	NN	NN	_	6	lobj	_	_
6	里	_	LC	LC	_	4	plmod	_	_
7	接见	_	VV	VV	_	0	root	_	_
8	探察家	_	NN	NN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 可以-02, arg1, x3 / 接见-01)
(x3 / 接见-01, arg0, x4 / 他)
(x3 / 接见-01, arg1, x5 / 探察家)
(x3 / 接见-01, location, x6 / 办公室)

Input(Some(Graph((contrast :arg2 (可以-02 :arg1 (接见-01 :location 办公室 :arg1 探察家 :arg0 他))),ArrayBuffer(Span(2,3,List(0),可以,可以-02,false), Span(6,7,List(1),接见,接见-01,false), Span(4,5,List(2),办公室,办公室,false), Span(7,8,List(3),探察家,探察家,false), Span(1,2,List(4),他,他,false)),Map(2 -> 办公室, 1 -> 接见-01, 4 -> 他, 0 -> 可以-02, 3 -> 探察家),Map(x2 -> 可以-02, x5 -> 探察家, x4 -> 他, x3 -> 接见-01, x6 -> 办公室))),[Ljava.lang.String;@5ec46cdd,Annotation([Ljava.lang.String;@2324bfe7,[Ljava.lang.String;@112d1c8e,[Ljava.lang.String;@3d49fd31),Annotation([Ljava.lang.String;@4016ccc1,[Ljava.lang.String;@46cb98a3,[Ledu.cmu.lti.nlp.amr.Dependency;@3ffb3598),Annotation([Ljava.lang.String;@4da9f723,[Ljava.lang.String;@3b2f4a93,[Ljava.lang.String;@213bd3d5),Annotation([Ljava.lang.String;@470a659f,[Ljava.lang.String;@451882b2,[Ledu.cmu.lti.nlp.amr.Entity;@4a23350))
AMR:
(x2 / 可以-02, prep-out, x3 / 接见-01)
(x3 / 接见-01, location, x6 / 办公室)
(x3 / 接见-01, quant, x5 / 探察家)
(x3 / 接见-01, subevent, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 9,807 microseconds
Sentence: 他 询问 探察家 ， 把 他们 的 回忆 记录 下来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  回忆 => 回忆
Oracle Span 3:  探察家 => 探察家
Oracle Span 4:  记录 => 记录-01
Oracle Span 5:  询问 => 询问-01
Spans:
Span 0-1:  他 => 他
Span 7-8:  回忆 => 回忆
Span 2-3:  探察家 => 探察家
Span 8-9:  记录 => 记录-01
Span 1-2:  询问 => 询问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  回忆 => 回忆
Oracle Span 2-3:  探察家 => 探察家
Oracle Span 8-9:  记录 => 记录-01
Oracle Span 1-2:  询问 => 询问-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	询问	_	VV	VV	_	0	root	_	_
3	探察家	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	把	_	BA	BA	_	10	ba	_	_
6	他们	_	PN	PN	_	9	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	回忆	_	VV	VV	_	9	vmod	_	_
9	记录	_	NN	NN	_	10	nsubj	_	_
10	下来	_	VV	VV	_	2	conj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 询问-01, arg0, x12 / 他)
(x11 / 询问-01, arg1, x13 / 探察家)
(x14 / 记录-01, arg1, x16 / 回忆)

Input(Some(Graph((temporal :arg1 (询问-01 :arg1 探察家 :arg0 他) :arg2 (记录-01 :arg1 (回忆 :poss x13) :arg0 x12)),ArrayBuffer(Span(1,2,List(0),询问,询问-01,false), Span(2,3,List(1),探察家,探察家,false), Span(0,1,List(2),他,他,false), Span(8,9,List(3),记录,记录-01,false), Span(7,8,List(4),回忆,回忆,false)),Map(2 -> 他, 1 -> 探察家, 4 -> 回忆, 0 -> 询问-01, 3 -> 记录-01),Map(x16 -> 回忆, x13 -> 探察家, x12 -> 他, x11 -> 询问-01, x14 -> 记录-01))),[Ljava.lang.String;@7b78ed6a,Annotation([Ljava.lang.String;@6fca5907,[Ljava.lang.String;@6ec65b5e,[Ljava.lang.String;@7bebcd65),Annotation([Ljava.lang.String;@47447ccf,[Ljava.lang.String;@7afb1741,[Ledu.cmu.lti.nlp.amr.Dependency;@263bbfeb),Annotation([Ljava.lang.String;@31edeac,[Ljava.lang.String;@67d86804,[Ljava.lang.String;@45bb2aa1),Annotation([Ljava.lang.String;@3e84111a,[Ljava.lang.String;@4b1a43d8,[Ledu.cmu.lti.nlp.amr.Entity;@6fa69af7))
AMR:
(x11 / 询问-01, prep-for, x12 / 他)
(x11 / 询问-01, quant, x13 / 探察家)
(x14 / 记录-01, ARG6, x16 / 回忆)
(x16 / 回忆, mod, x13 / 探察家)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 10,491 microseconds
Sentence: 如果 他 认为 其中 有 个 探察家 的 回忆 是 有 意思 的 ， 那么 地理学家 就 对 这个 探察家 的 品德 做 一 番 调查 。 ”

Oracle Span 1:  他 => 他
Oracle Span 2:  做 => 做-01
Oracle Span 3:  品德 => 品德
Oracle Span 4:  回忆 => 回忆-01
Oracle Span 5:  地理学家 => 地理学家
Oracle Span 6:  探察家 => 探察家
Oracle Span 7:  探察家 => 探察家
Oracle Span 8:  番 => 番
Oracle Span 9:  认为 => 认为-02
Oracle Span 10:  调查 => 调查-01
Spans:
Span 1-2:  他 => 他
Span 22-23:  做 => 做-01
Span 21-22:  品德 => 品德
Span 8-9:  回忆 => 回忆-01
Span 15-16:  地理学家 => 地理学家
Span 6-7:  探察家 => 探察家
Span 19-20:  探察家 => 探察家
Span 24-25:  番 => 番
Span 2-3:  认为 => 认为-02
Span 25-26:  调查 => 调查-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 22-23:  做 => 做-01
Oracle Span 21-22:  品德 => 品德
Oracle Span 8-9:  回忆 => 回忆-01
Oracle Span 15-16:  地理学家 => 地理学家
Oracle Span 6-7:  探察家 => 探察家
Oracle Span 19-20:  探察家 => 探察家
Oracle Span 24-25:  番 => 番
Oracle Span 2-3:  认为 => 认为-02
Oracle Span 25-26:  调查 => 调查-01

Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	认为	_	VV	VV	_	23	pccomp	_	_
4	其中	_	NN	NN	_	5	top	_	_
5	有	_	VE	VE	_	10	nsubj	_	_
6	个	_	M	M	_	7	dep	_	_
7	探察家	_	NN	NN	_	5	dobj	_	_
8	的	_	DEC	DEC	_	5	cpm	_	_
9	回忆	_	VV	VV	_	10	mmod	_	_
10	是	_	VC	VC	_	3	ccomp	_	_
11	有	_	VE	VE	_	10	attr	_	_
12	意思	_	NN	NN	_	11	dobj	_	_
13	的	_	DEC	DEC	_	11	cpm	_	_
14	,	_	PU	PU	_	23	punct	_	_
15	那么	_	AD	AD	_	23	advmod	_	_
16	地理学家	_	NR	NR	_	23	nsubj	_	_
17	就	_	P	P	_	23	prep	_	_
18	对	_	P	P	_	22	assmod	_	_
19	这个	_	NN	NN	_	20	nn	_	_
20	探察家	_	NN	NN	_	18	pobj	_	_
21	的	_	DEG	DEG	_	18	assm	_	_
22	品德	_	NN	NN	_	17	pobj	_	_
23	做	_	VV	VV	_	0	root	_	_
24	一	_	CD	CD	_	25	nummod	_	_
25	番	_	M	M	_	26	clf	_	_
26	调查	_	NN	NN	_	23	dobj	_	_
27	。	_	PU	PU	_	23	punct	_	_
28	”	_	PU	PU	_	23	punct	_	_

Oracle:
(x25 / 认为-02, arg0, x26 / 他)
(x25 / 认为-02, arg1, x27 / 回忆-01)
(x27 / 回忆-01, poss, x28 / 探察家)
(x35 / 做-01, arg0, x38 / 地理学家)
(x35 / 做-01, arg1, x39 / 调查-01)
(x39 / 调查-01, topic, x42 / 品德)
(x39 / 调查-01, unit, x46 / 番)

Input(Some(Graph((say :arg1 (condition :arg1 (认为-02 :arg2 有意思-01 :arg1 (回忆-01 :poss (探察家 :arg1-of (include-91 :arg2 探察家) :quant 1)) :arg0 他)) :arg2 (做-01 :arg1 (调查-01 :unit 番 :topic (品德 :poss (x28 :mod 这)) :quant 1) :arg0 地理学家)),ArrayBuffer(Span(2,3,List(0),认为,认为-02,false), Span(8,9,List(1),回忆,回忆-01,false), Span(6,7,List(2),探察家,探察家,false), Span(19,20,List(3),探察家,探察家,false), Span(1,2,List(4),他,他,false), Span(22,23,List(5),做,做-01,false), Span(25,26,List(6),调查,调查-01,false), Span(24,25,List(7),番,番,false), Span(21,22,List(8),品德,品德,false), Span(15,16,List(9),地理学家,地理学家,false)),Map(2 -> 探察家, 5 -> 做-01, 8 -> 品德, 7 -> 番, 1 -> 回忆-01, 4 -> 他, 6 -> 调查-01, 9 -> 地理学家, 0 -> 认为-02, 3 -> 探察家),Map(x46 -> 番, x28 -> 探察家, x25 -> 认为-02, x39 -> 调查-01, x45 -> 探察家, x27 -> 回忆-01, x42 -> 品德, x38 -> 地理学家, x26 -> 他, x35 -> 做-01))),[Ljava.lang.String;@73545b80,Annotation([Ljava.lang.String;@6d469831,[Ljava.lang.String;@74db12c2,[Ljava.lang.String;@2ff15f8c),Annotation([Ljava.lang.String;@7ea899a9,[Ljava.lang.String;@2776015d,[Ledu.cmu.lti.nlp.amr.Dependency;@b174a73),Annotation([Ljava.lang.String;@2e3f79a2,[Ljava.lang.String;@1460c81d,[Ljava.lang.String;@38b5f25),Annotation([Ljava.lang.String;@327ed9f5,[Ljava.lang.String;@67594471,[Ledu.cmu.lti.nlp.amr.Entity;@756b58a7))
AMR:
(x25 / 认为-02, medium, x26 / 他)
(x25 / 认为-02, snt2, x27 / 回忆-01)
(x28 / 探察家, prep-on-behalf, x27 / 回忆-01)
(x35 / 做-01, time, x42 / 品德)
(x38 / 地理学家, snt2, x27 / 回忆-01)
(x38 / 地理学家, snt2, x45 / 探察家)
(x39 / 调查-01, topic, x42 / 品德)
(x39 / 调查-01, unit, x46 / 番)
(x42 / 品德, poss, x45 / 探察家)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 35,080 microseconds
Sentence: “ 这 是 为什么 呢 ？ ”

Oracle Span 1:  这 => 这
Spans:
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	为什么	_	AD	AD	_	3	advmod	_	_
5	呢	_	SP	SP	_	3	dep	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (这 :mode interrogative :cause amr-unknown)),ArrayBuffer(Span(1,2,List(0),这,这,false)),Map(0 -> 这),Map(x7 -> 这))),[Ljava.lang.String;@2cc04358,Annotation([Ljava.lang.String;@68b58644,[Ljava.lang.String;@45e22def,[Ljava.lang.String;@6ae3fb94),Annotation([Ljava.lang.String;@4417af13,[Ljava.lang.String;@d48673,[Ledu.cmu.lti.nlp.amr.Dependency;@548d5ed3),Annotation([Ljava.lang.String;@21c7208d,[Ljava.lang.String;@58516c91,[Ljava.lang.String;@7c129ef6),Annotation([Ljava.lang.String;@42d73c61,[Ljava.lang.String;@5a8cbffe,[Ledu.cmu.lti.nlp.amr.Entity;@96a75da))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,837 microseconds
Sentence: “ 因为 一 个 说 假话 的 探察家 会 给 地理 书 带来 灾难性 的 后果 。

Oracle Span 1:  书 => 书
Oracle Span 2:  会 => 会-02
Oracle Span 3:  后果 => 后果
Oracle Span 4:  地理 => 地理
Oracle Span 5:  带来 => 带来-01
Oracle Span 6:  探察家 => 探察家
Oracle Span 7:  灾难性 => 灾难性
Oracle Span 8:  说 => 说-01
Spans:
Span 11-12:  书 => 书
Span 8-9:  会 => 会-02
Span 15-16:  后果 => 后果
Span 10-11:  地理 => 地理
Span 12-13:  带来 => 带来-01
Span 7-8:  探察家 => 探察家
Span 13-14:  灾难性 => 灾难性
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  书 => 书
Oracle Span 8-9:  会 => 会-02
Oracle Span 15-16:  后果 => 后果
Oracle Span 10-11:  地理 => 地理
Oracle Span 12-13:  带来 => 带来-01
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 13-14:  灾难性 => 灾难性
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	13	punct	_	_
2	因为	_	P	P	_	5	prep	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	2	pobj	_	_
5	说	_	VV	VV	_	8	rcmod	_	_
6	假话	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	探察家	_	NN	NN	_	13	nsubj	_	_
9	会	_	VV	VV	_	13	mmod	_	_
10	给	_	P	P	_	13	prep	_	_
11	地理	_	NN	NN	_	12	nn	_	_
12	书	_	NN	NN	_	10	pobj	_	_
13	带来	_	VV	VV	_	0	root	_	_
14	灾难性	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	后果	_	NN	NN	_	13	dobj	_	_
17	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x41 / 会-02, arg0, x42 / 带来-01)
(x42 / 带来-01, arg0, x43 / 探察家)
(x42 / 带来-01, arg1, x48 / 后果)
(x42 / 带来-01, arg2, x50 / 书)
(x45 / 说-01, arg0, x43 / 探察家)
(x48 / 后果, mod, x49 / 灾难性)
(x50 / 书, topic, x51 / 地理)

Input(Some(Graph((say :arg1 (causation :arg1 (会-02 :arg0 (带来-01 :arg2 (书 :topic 地理) :arg1 (后果 :mod 灾难性) :arg0 (探察家 :arg0-of (说-01 :arg1 (话 :mod 假-01)) :quant 1))))),ArrayBuffer(Span(8,9,List(0),会,会-02,false), Span(12,13,List(1),带来,带来-01,false), Span(11,12,List(2),书,书,false), Span(10,11,List(3),地理,地理,false), Span(15,16,List(4),后果,后果,false), Span(13,14,List(5),灾难性,灾难性,false), Span(7,8,List(6),探察家,探察家,false), Span(4,5,List(7),说,说-01,false)),Map(2 -> 书, 5 -> 灾难性, 7 -> 说-01, 1 -> 带来-01, 4 -> 后果, 6 -> 探察家, 0 -> 会-02, 3 -> 地理),Map(x49 -> 灾难性, x43 -> 探察家, x45 -> 说-01, x51 -> 地理, x48 -> 后果, x42 -> 带来-01, x41 -> 会-02, x50 -> 书))),[Ljava.lang.String;@61e7bf2f,Annotation([Ljava.lang.String;@1a28b346,[Ljava.lang.String;@25e49cb2,[Ljava.lang.String;@7f7af971),Annotation([Ljava.lang.String;@23382f76,[Ljava.lang.String;@7c551ad4,[Ledu.cmu.lti.nlp.amr.Dependency;@7d5508e0),Annotation([Ljava.lang.String;@554cd74a,[Ljava.lang.String;@37ed010a,[Ljava.lang.String;@633a2e99),Annotation([Ljava.lang.String;@367d2816,[Ljava.lang.String;@5b84f14,[Ledu.cmu.lti.nlp.amr.Entity;@5a82ebf8))
AMR:
(x41 / 会-02, location, x43 / 探察家)
(x42 / 带来-01, prep-through, x49 / 灾难性)
(x42 / 带来-01, time, x50 / 书)
(x45 / 说-01, source, x43 / 探察家)
(x48 / 后果, mod, x49 / 灾难性)
(x50 / 书, topic, x51 / 地理)
(x51 / 地理, poss, x43 / 探察家)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.1
Decoded in 19,684 microseconds
Sentence: 同样 ， 一 个 太 爱 喝酒 的 探察家 也 是 如此 。 ”

Oracle Span 1:  也 => 也
Oracle Span 2:  喝酒 => 喝酒-01
Oracle Span 3:  太 => 太
Oracle Span 4:  如此 => 如此-01
Oracle Span 5:  探察家 => 探察家
Oracle Span 6:  爱 => 爱-01
Spans:
Span 9-10:  也 => 也
Span 6-7:  喝酒 => 喝酒-01
Span 4-5:  太 => 太
Span 11-12:  如此 => 如此-01
Span 8-9:  探察家 => 探察家
Span 5-6:  爱 => 爱-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  也 => 也
Oracle Span 6-7:  喝酒 => 喝酒-01
Oracle Span 4-5:  太 => 太
Oracle Span 11-12:  如此 => 如此-01
Oracle Span 8-9:  探察家 => 探察家
Oracle Span 5-6:  爱 => 爱-01

Dependencies:
1	同样	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	dep	_	_
5	太	_	AD	AD	_	6	advmod	_	_
6	爱	_	VV	VV	_	9	rcmod	_	_
7	喝酒	_	NN	NN	_	6	dobj	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	探察家	_	NN	NN	_	11	nsubj	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	是	_	VC	VC	_	0	root	_	_
12	如此	_	PN	PN	_	11	attr	_	_
13	。	_	PU	PU	_	11	punct	_	_
14	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x13 / 如此-01, arg0, x15 / 探察家)
(x13 / 如此-01, manner, x14 / 也)
(x16 / 爱-01, arg0, x15 / 探察家)
(x16 / 爱-01, arg1, x17 / 喝酒-01)
(x16 / 爱-01, degree, x19 / 太)

Input(Some(Graph((say :arg1 (progressive :arg2 (如此-01 :arg0 (探察家 :quant 1 :arg0-of (爱-01 :degree 太 :arg1 (喝酒-01 :arg0 x15))) :manner 也))),ArrayBuffer(Span(11,12,List(0),如此,如此-01,false), Span(8,9,List(1),探察家,探察家,false), Span(5,6,List(2),爱,爱-01,false), Span(4,5,List(3),太,太,false), Span(6,7,List(4),喝酒,喝酒-01,false), Span(9,10,List(5),也,也,false)),Map(2 -> 爱-01, 5 -> 也, 1 -> 探察家, 4 -> 喝酒-01, 0 -> 如此-01, 3 -> 太),Map(x16 -> 爱-01, x19 -> 太, x13 -> 如此-01, x15 -> 探察家, x14 -> 也, x17 -> 喝酒-01))),[Ljava.lang.String;@68fe48d7,Annotation([Ljava.lang.String;@379ce046,[Ljava.lang.String;@701bc94e,[Ljava.lang.String;@3d8b319e),Annotation([Ljava.lang.String;@27a97e08,[Ljava.lang.String;@77e7246b,[Ledu.cmu.lti.nlp.amr.Dependency;@5918c260),Annotation([Ljava.lang.String;@3d7b1f1c,[Ljava.lang.String;@51ce6f85,[Ljava.lang.String;@1f44ddab),Annotation([Ljava.lang.String;@5017e1,[Ljava.lang.String;@65b66b08,[Ledu.cmu.lti.nlp.amr.Entity;@4726927c))
AMR:
(x13 / 如此-01, manner, x14 / 也)
(x13 / 如此-01, poss, x15 / 探察家)
(x15 / 探察家, domain, x17 / 喝酒-01)
(x16 / 爱-01, degree, x19 / 太)
(x16 / 爱-01, snt3, x17 / 喝酒-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 12,279 microseconds
Sentence: “ 这 又 是 为什么 ？ ” 小 王子 说 。

Oracle Span 1:  又 => 又
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Oracle Span 5:  这 => 这
Spans:
Span 2-3:  又 => 又
Span 7-8:  小 => 小-01
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	是	_	VC	VC	_	5	cop	_	_
5	为什么	_	AD	AD	_	9	vmod	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x9 / 这)
(x2 / 王子, mod, x3 / 小-01)
(x9 / 这, manner, x11 / 又)

Input(Some(Graph((说-01 :arg1 (这 :manner 又 :cause amr-unknown) :mode interrogative :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(1,2,List(1),这,这,false), Span(2,3,List(2),又,又,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小-01,false)),Map(2 -> 又, 1 -> 这, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x3 -> 小-01, x11 -> 又, x9 -> 这, x0 -> 说-01))),[Ljava.lang.String;@7eb6b6b6,Annotation([Ljava.lang.String;@7ed9499e,[Ljava.lang.String;@28e19366,[Ljava.lang.String;@5b275174),Annotation([Ljava.lang.String;@10ef5fa0,[Ljava.lang.String;@244e619a,[Ledu.cmu.lti.nlp.amr.Dependency;@10acd6),Annotation([Ljava.lang.String;@61dde151,[Ljava.lang.String;@b25b095,[Ljava.lang.String;@5cb042da),Annotation([Ljava.lang.String;@59c33386,[Ljava.lang.String;@571a9686,[Ledu.cmu.lti.nlp.amr.Entity;@719d35e8))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, manner, x11 / 又)
(x2 / 王子, mod, x3 / 小-01)
(x9 / 这, manner, x11 / 又)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,033 microseconds
Sentence: “ 因为 喝醉 了 酒 的 人 把 一 个 看成 两 个 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  看成 => 看成-01
Oracle Span 3:  酒 => 酒
Spans:
Span 6-7:  人 => 人
Span 10-11:  看成 => 看成-01
Span 4-5:  酒 => 酒

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 10-11:  看成 => 看成-01
Oracle Span 4-5:  酒 => 酒

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	因为	_	P	P	_	7	assmod	_	_
3	喝醉	_	VV	VV	_	2	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	酒	_	NN	NN	_	3	dobj	_	_
6	的	_	DEG	DEG	_	2	assm	_	_
7	人	_	NN	NN	_	11	nsubj	_	_
8	把	_	BA	BA	_	11	ba	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	11	nsubj	_	_
11	看成	_	VV	VV	_	0	root	_	_
12	两	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	11	conj	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x15 / 看成-01, arg0, x16 / 人)

Input(Some(Graph((say :arg1 (causation :arg1 (看成-01 :arg2 (temporal-quantity :quant 2) :arg1 (temporal-quantity :quant 1) :arg0 (人 :arg0-of (喝-01 :arg1 酒 :cause-of 醉-01))))),ArrayBuffer(Span(10,11,List(0),看成,看成-01,false), Span(6,7,List(1),人,人,false), Span(4,5,List(2),酒,酒,false)),Map(2 -> 酒, 1 -> 人, 0 -> 看成-01),Map(x16 -> 人, x19 -> 酒, x15 -> 看成-01))),[Ljava.lang.String;@2f651f93,Annotation([Ljava.lang.String;@6ffa56fa,[Ljava.lang.String;@6c575325,[Ljava.lang.String;@747d1932),Annotation([Ljava.lang.String;@736309a9,[Ljava.lang.String;@4e93dcb9,[Ledu.cmu.lti.nlp.amr.Dependency;@188b6035),Annotation([Ljava.lang.String;@4a34e9f,[Ljava.lang.String;@6f6621e3,[Ljava.lang.String;@3fc05ea2),Annotation([Ljava.lang.String;@7c891ba7,[Ljava.lang.String;@6240651f,[Ledu.cmu.lti.nlp.amr.Entity;@3cf7298d))
AMR:
(x15 / 看成-01, topic, x16 / 人)
(x16 / 人, mod, x19 / 酒)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
Decoded in 5,528 microseconds
Sentence: 那么 ， 地理学家 就 会 把 只 有 一 座 山 的 地方 写成 两 座 山 。 ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  写成 => 写成-01
Oracle Span 3:  只 => 只
Oracle Span 4:  地方 => 地方
Oracle Span 5:  地理学家 => 地理学家
Oracle Span 6:  就 => 就
Oracle Span 7:  山 => 山
Oracle Span 8:  山 => 山
Oracle Span 9:  有 => 有-03
Spans:
Span 4-5:  会 => 会-02
Span 13-14:  写成 => 写成-01
Span 6-7:  只 => 只
Span 12-13:  地方 => 地方
Span 2-3:  地理学家 => 地理学家
Span 3-4:  就 => 就
Span 10-11:  山 => 山
Span 16-17:  山 => 山
Span 7-8:  有 => 有-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  会 => 会-02
Oracle Span 13-14:  写成 => 写成-01
Oracle Span 6-7:  只 => 只
Oracle Span 12-13:  地方 => 地方
Oracle Span 2-3:  地理学家 => 地理学家
Oracle Span 3-4:  就 => 就
Oracle Span 10-11:  山 => 山
Oracle Span 16-17:  山 => 山
Oracle Span 7-8:  有 => 有-03

Dependencies:
1	那么	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	地理学家	_	NN	NN	_	14	nsubj	_	_
4	就	_	AD	AD	_	14	advmod	_	_
5	会	_	VV	VV	_	14	mmod	_	_
6	把	_	BA	BA	_	14	ba	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	有	_	VE	VE	_	13	rcmod	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	座	_	M	M	_	11	clf	_	_
11	山	_	NN	NN	_	8	dobj	_	_
12	的	_	DEC	DEC	_	8	cpm	_	_
13	地方	_	NN	NN	_	14	nsubj	_	_
14	写成	_	VV	VV	_	0	root	_	_
15	两	_	CD	CD	_	16	nummod	_	_
16	座	_	M	M	_	17	clf	_	_
17	山	_	NN	NN	_	14	dobj	_	_
18	。	_	PU	PU	_	14	punct	_	_
19	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x30 / 会-02, arg0, x39 / 写成-01)
(x30 / 会-02, manner, x31 / 就)
(x39 / 写成-01, arg0, x40 / 地理学家)
(x39 / 写成-01, arg1, x41 / 地方)
(x39 / 写成-01, arg2, x46 / 山)
(x42 / 有-03, arg0, x41 / 地方)
(x42 / 有-03, arg1, x44 / 山)
(x42 / 有-03, manner, x43 / 只)

Input(Some(Graph((say :arg1 (causation :arg2 (会-02 :arg0 (写成-01 :arg2 (山 :quant 2) :arg1 (地方 :arg0-of (有-03 :arg1 (山 :quant 1) :manner 只)) :arg0 地理学家) :manner 就))),ArrayBuffer(Span(4,5,List(0),会,会-02,false), Span(13,14,List(1),写成,写成-01,false), Span(10,11,List(2),山,山,false), Span(12,13,List(3),地方,地方,false), Span(7,8,List(4),有,有-03,false), Span(16,17,List(5),山,山,false), Span(6,7,List(6),只,只,false), Span(2,3,List(7),地理学家,地理学家,false), Span(3,4,List(8),就,就,false)),Map(2 -> 山, 5 -> 山, 8 -> 就, 7 -> 地理学家, 1 -> 写成-01, 4 -> 有-03, 6 -> 只, 0 -> 会-02, 3 -> 地方),Map(x46 -> 山, x40 -> 地理学家, x43 -> 只, x31 -> 就, x39 -> 写成-01, x30 -> 会-02, x42 -> 有-03, x41 -> 地方, x44 -> 山))),[Ljava.lang.String;@1ff55ff,Annotation([Ljava.lang.String;@351f2244,[Ljava.lang.String;@5496c165,[Ljava.lang.String;@51a8313b),Annotation([Ljava.lang.String;@2a03d65c,[Ljava.lang.String;@6642dc5a,[Ledu.cmu.lti.nlp.amr.Dependency;@43da41e),Annotation([Ljava.lang.String;@148c7c4b,[Ljava.lang.String;@2009f9b0,[Ljava.lang.String;@50d951e7),Annotation([Ljava.lang.String;@39ad12b6,[Ljava.lang.String;@4eb45fec,[Ledu.cmu.lti.nlp.amr.Entity;@211febf3))
AMR:
(x30 / 会-02, manner, x31 / 就)
(x30 / 会-02, manner, x43 / 只)
(x30 / 会-02, prep-on-behalf, x40 / 地理学家)
(x39 / 写成-01, op, x44 / 山)
(x39 / 写成-01, prep-on-behalf, x46 / 山)
(x39 / 写成-01, subevent, x41 / 地方)
(x42 / 有-03, manner, x43 / 只)
(x42 / 有-03, op, x46 / 山)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 29,286 microseconds
Sentence: “ 我 认识 一 个 人 ， 他 要是 搞 探察 的话 ， 就 很 可能 是 个 不 好 的 探察员 。 ” 小 王子 说 。

Oracle Span 1:  人 => 人
Oracle Span 2:  可能 => 可能-01
Oracle Span 3:  好 => 好-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  很 => 很
Oracle Span 6:  我 => 我
Oracle Span 7:  探察 => 探察
Oracle Span 8:  探察员 => 探察员
Oracle Span 9:  搞 => 搞-01
Oracle Span 10:  王子 => 王子
Oracle Span 11:  认识 => 认识-01
Oracle Span 12:  说 => 说-01
Spans:
Span 5-6:  人 => 人
Span 15-16:  可能 => 可能-01
Span 19-20:  好 => 好-01
Span 24-25:  小 => 小-01
Span 14-15:  很 => 很
Span 1-2:  我 => 我
Span 10-11:  探察 => 探察
Span 21-22:  探察员 => 探察员
Span 9-10:  搞 => 搞-01
Span 25-26:  王子 => 王子
Span 2-3:  认识 => 认识-01
Span 26-27:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 15-16:  可能 => 可能-01
Oracle Span 19-20:  好 => 好-01
Oracle Span 24-25:  小 => 小-01
Oracle Span 14-15:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 10-11:  探察 => 探察
Oracle Span 21-22:  探察员 => 探察员
Oracle Span 9-10:  搞 => 搞-01
Oracle Span 25-26:  王子 => 王子
Oracle Span 2-3:  认识 => 认识-01
Oracle Span 26-27:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	认识	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	要是	_	VV	VV	_	17	pccomp	_	_
10	搞	_	VV	VV	_	9	ccomp	_	_
11	探察	_	NN	NN	_	10	dobj	_	_
12	的话	_	SP	SP	_	9	dep	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	就	_	AD	AD	_	17	advmod	_	_
15	很	_	AD	AD	_	17	advmod	_	_
16	可能	_	VV	VV	_	17	mmod	_	_
17	是	_	VC	VC	_	3	conj	_	_
18	个	_	M	M	_	22	dep	_	_
19	不	_	AD	AD	_	20	neg	_	_
20	好	_	VA	VA	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	探察员	_	NN	NN	_	17	attr	_	_
23	。	_	PU	PU	_	3	punct	_	_
24	”	_	PU	PU	_	3	punct	_	_
25	小	_	JJ	JJ	_	26	amod	_	_
26	王子	_	NN	NN	_	27	nsubj	_	_
27	说	_	VV	VV	_	3	conj	_	_
28	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x10 / 搞-01, arg1, x23 / 探察)
(x2 / 王子, mod, x3 / 小-01)
(x24 / 可能-01, arg0, x26 / 探察员)
(x24 / 可能-01, degree, x25 / 很)
(x26 / 探察员, mod, x27 / 好-01)
(x5 / 认识-01, arg0, x6 / 我)
(x5 / 认识-01, arg1, x7 / 人)

Input(Some(Graph((说-01 :arg1 (and :op (认识-01 :arg1 (人 :quant 1) :arg0 我) :op (condition :arg1 (搞-01 :arg1 探察 :arg0 x7) :arg2 (可能-01 :arg0 (探察员 :domain x7 :quant 1 :mod (好-01 :polarity -)) :degree 很))) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(26,27,List(0),说,说-01,false), Span(2,3,List(1),认识,认识-01,false), Span(5,6,List(2),人,人,false), Span(1,2,List(3),我,我,false), Span(9,10,List(4),搞,搞-01,false), Span(10,11,List(5),探察,探察,false), Span(15,16,List(6),可能,可能-01,false), Span(21,22,List(7),探察员,探察员,false), Span(19,20,List(8),好,好-01,false), Span(14,15,List(9),很,很,false), Span(25,26,List(10),王子,王子,false), Span(24,25,List(11),小,小-01,false)),Map(2 -> 人, 5 -> 探察, 8 -> 好-01, 7 -> 探察员, 1 -> 认识-01, 4 -> 搞-01, 11 -> 小-01, 6 -> 可能-01, 9 -> 很, 0 -> 说-01, 10 -> 王子, 3 -> 我),Map(x25 -> 很, x10 -> 搞-01, x2 -> 王子, x5 -> 认识-01, x27 -> 好-01, x7 -> 人, x24 -> 可能-01, x23 -> 探察, x26 -> 探察员, x3 -> 小-01, x6 -> 我, x0 -> 说-01))),[Ljava.lang.String;@3bd3d05e,Annotation([Ljava.lang.String;@6aba5d30,[Ljava.lang.String;@61d34b4,[Ljava.lang.String;@588307f7),Annotation([Ljava.lang.String;@7df76d99,[Ljava.lang.String;@459cfcca,[Ledu.cmu.lti.nlp.amr.Dependency;@2acbc859),Annotation([Ljava.lang.String;@6ab7ce48,[Ljava.lang.String;@2c6aed22,[Ljava.lang.String;@e322ec9),Annotation([Ljava.lang.String;@7acfb656,[Ljava.lang.String;@2e5ee2c9,[Ledu.cmu.lti.nlp.amr.Entity;@55a609dd))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, location, x26 / 探察员)
(x10 / 搞-01, topic, x7 / 人)
(x2 / 王子, mod, x3 / 小-01)
(x23 / 探察, location, x10 / 搞-01)
(x24 / 可能-01, degree, x25 / 很)
(x24 / 可能-01, location, x23 / 探察)
(x24 / 可能-01, subset, x27 / 好-01)
(x26 / 探察员, mod, x27 / 好-01)
(x5 / 认识-01, direction, x6 / 我)
(x7 / 人, location, x5 / 认识-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 43,353 microseconds
Sentence: “ 这 是 可能 的 。

Oracle Span 1:  可能 => 可能-01
Oracle Span 2:  这 => 这
Spans:
Span 3-4:  可能 => 可能-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  可能 => 可能-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	可能	_	VV	VV	_	3	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 可能-01, domain, x6 / 这)

Input(Some(Graph((say :arg1 (可能-01 :domain 这)),ArrayBuffer(Span(3,4,List(0),可能,可能-01,false), Span(1,2,List(1),这,这,false)),Map(1 -> 这, 0 -> 可能-01),Map(x5 -> 可能-01, x6 -> 这))),[Ljava.lang.String;@4afd21c6,Annotation([Ljava.lang.String;@4d0753c9,[Ljava.lang.String;@1416a80a,[Ljava.lang.String;@719bb3b4),Annotation([Ljava.lang.String;@52cb4f50,[Ljava.lang.String;@25a5c7db,[Ledu.cmu.lti.nlp.amr.Dependency;@4d27d9d),Annotation([Ljava.lang.String;@28f878a0,[Ljava.lang.String;@20411320,[Ljava.lang.String;@2b5183ec),Annotation([Ljava.lang.String;@3c782d8e,[Ljava.lang.String;@572e6fd9,[Ledu.cmu.lti.nlp.amr.Entity;@7f5eae0f))
AMR:
(x5 / 可能-01, domain, x6 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,703 microseconds
Sentence: 因此 ， 如果 探察家 的 品德 不错 ， 就 对 他 的 发现 进行 调查 。 ”

Oracle Span 1:  不错 => 不错-01
Oracle Span 2:  发现 => 发现-01
Oracle Span 3:  品德 => 品德
Oracle Span 4:  探察家 => 探察家
Oracle Span 5:  调查 => 调查-01
Oracle Span 6:  进行 => 进行-01
Spans:
Span 6-7:  不错 => 不错-01
Span 12-13:  发现 => 发现-01
Span 5-6:  品德 => 品德
Span 3-4:  探察家 => 探察家
Span 14-15:  调查 => 调查-01
Span 13-14:  进行 => 进行-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  不错 => 不错-01
Oracle Span 12-13:  发现 => 发现-01
Oracle Span 5-6:  品德 => 品德
Oracle Span 3-4:  探察家 => 探察家
Oracle Span 14-15:  调查 => 调查-01
Oracle Span 13-14:  进行 => 进行-01

Dependencies:
1	因此	_	AD	AD	_	7	advmod	_	_
2	,	_	PU	PU	_	7	punct	_	_
3	如果	_	CS	CS	_	4	advmod	_	_
4	探察家	_	VV	VV	_	6	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	品德	_	NN	NN	_	7	nsubj	_	_
7	不错	_	VA	VA	_	0	root	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	对	_	P	P	_	14	prep	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	发现	_	NN	NN	_	10	pobj	_	_
14	进行	_	VV	VV	_	7	dep	_	_
15	调查	_	NN	NN	_	14	dobj	_	_
16	。	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x19 / 不错-01, arg0, x20 / 品德)
(x20 / 品德, poss, x21 / 探察家)
(x23 / 进行-01, arg1, x24 / 调查-01)
(x24 / 调查-01, arg1, x25 / 发现-01)

Input(Some(Graph((say :arg1 (causation :arg2 (condition :arg1 (不错-01 :arg0 (品德 :poss 探察家)) :arg2 (进行-01 :arg1 (调查-01 :arg1 (发现-01 :poss x21)))))),ArrayBuffer(Span(6,7,List(0),不错,不错-01,false), Span(5,6,List(1),品德,品德,false), Span(3,4,List(2),探察家,探察家,false), Span(13,14,List(3),进行,进行-01,false), Span(14,15,List(4),调查,调查-01,false), Span(12,13,List(5),发现,发现-01,false)),Map(2 -> 探察家, 5 -> 发现-01, 1 -> 品德, 4 -> 调查-01, 0 -> 不错-01, 3 -> 进行-01),Map(x25 -> 发现-01, x19 -> 不错-01, x21 -> 探察家, x24 -> 调查-01, x23 -> 进行-01, x20 -> 品德))),[Ljava.lang.String;@58b71ceb,Annotation([Ljava.lang.String;@255e5e2e,[Ljava.lang.String;@12abdfb,[Ljava.lang.String;@b0e5507),Annotation([Ljava.lang.String;@6bbe50c9,[Ljava.lang.String;@3c46dcbe,[Ledu.cmu.lti.nlp.amr.Dependency;@68577ba8),Annotation([Ljava.lang.String;@1108adc8,[Ljava.lang.String;@8a98f38,[Ljava.lang.String;@20011bf),Annotation([Ljava.lang.String;@51d9b06c,[Ljava.lang.String;@5eb2172,[Ledu.cmu.lti.nlp.amr.Entity;@41ffaeb8))
AMR:
(x19 / 不错-01, location, x20 / 品德)
(x20 / 品德, poss, x21 / 探察家)
(x23 / 进行-01, prep-for, x24 / 调查-01)
(x23 / 进行-01, prep-out, x25 / 发现-01)
(x24 / 调查-01, topic, x20 / 品德)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
Decoded in 13,779 microseconds
Sentence: “ 去 看一看 吗 ？ ”

Oracle Span 1:  去 => 去-01
Spans:
Span 1-2:  去 => 去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  去 => 去-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	去	_	VV	VV	_	0	root	_	_
3	看一看	_	CD	CD	_	2	dep	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (去-01 :mode interrogative :arg1 看-02)),ArrayBuffer(Span(1,2,List(0),去,去-01,false)),Map(0 -> 去-01),Map(x6 -> 去-01))),[Ljava.lang.String;@43f0c2d1,Annotation([Ljava.lang.String;@5fb65013,[Ljava.lang.String;@38a1a26,[Ljava.lang.String;@3fbcfe81),Annotation([Ljava.lang.String;@7a1f45ed,[Ljava.lang.String;@1744a475,[Ledu.cmu.lti.nlp.amr.Dependency;@444cc791),Annotation([Ljava.lang.String;@1c5c616f,[Ljava.lang.String;@1c6c6f24,[Ljava.lang.String;@2eb917d0),Annotation([Ljava.lang.String;@c6b2dd9,[Ljava.lang.String;@73437222,[Ledu.cmu.lti.nlp.amr.Entity;@ca93621))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,824 microseconds
Sentence: “ 不 。

Oracle Span 1:  不 => 不
Spans:
Span 1-2:  不 => 不

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  不 => 不

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 不),ArrayBuffer(Span(1,2,List(0),不,不,false)),Map(0 -> 不),Map(x4 -> 不))),[Ljava.lang.String;@6a48a7f3,Annotation([Ljava.lang.String;@3f985a86,[Ljava.lang.String;@57a2ed35,[Ljava.lang.String;@12ffd1de),Annotation([Ljava.lang.String;@3d278b4d,[Ljava.lang.String;@4096aa05,[Ledu.cmu.lti.nlp.amr.Dependency;@9d3c67),Annotation([Ljava.lang.String;@6c806c8b,[Ljava.lang.String;@6dfcffb5,[Ljava.lang.String;@184fb68d),Annotation([Ljava.lang.String;@71d8cfe7,[Ljava.lang.String;@1e530163,[Ledu.cmu.lti.nlp.amr.Entity;@14d8444b))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,178 microseconds
Sentence: 那 太 复杂 了 。

Oracle Span 1:  复杂 => 复杂-01
Oracle Span 2:  太 => 太
Oracle Span 3:  那 => 那
Spans:
Span 2-3:  复杂 => 复杂-01
Span 1-2:  太 => 太
Span 0-1:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  复杂 => 复杂-01
Oracle Span 1-2:  太 => 太
Oracle Span 0-1:  那 => 那

Dependencies:
1	那	_	PN	PN	_	3	nsubj	_	_
2	太	_	AD	AD	_	3	advmod	_	_
3	复杂	_	VA	VA	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 复杂-01, arg0, x3 / 那)
(x0 / 复杂-01, degree, x2 / 太)

Input(Some(Graph((复杂-01 :arg0 那 :degree 太),ArrayBuffer(Span(2,3,List(0),复杂,复杂-01,false), Span(0,1,List(1),那,那,false), Span(1,2,List(2),太,太,false)),Map(2 -> 太, 1 -> 那, 0 -> 复杂-01),Map(x2 -> 太, x3 -> 那, x0 -> 复杂-01))),[Ljava.lang.String;@71466383,Annotation([Ljava.lang.String;@46d63dbb,[Ljava.lang.String;@4088741b,[Ljava.lang.String;@16a49a5d),Annotation([Ljava.lang.String;@54bca971,[Ljava.lang.String;@23706db8,[Ledu.cmu.lti.nlp.amr.Dependency;@205bed61),Annotation([Ljava.lang.String;@129fed45,[Ljava.lang.String;@23592946,[Ljava.lang.String;@3e48d38),Annotation([Ljava.lang.String;@7c2b58c0,[Ljava.lang.String;@11b377c5,[Ledu.cmu.lti.nlp.amr.Entity;@7bca6fac))
AMR:
(x0 / 复杂-01, degree, x2 / 太)
(x0 / 复杂-01, op, x3 / 那)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,371 microseconds
Sentence: 但是 要求 探察家 提出 证据 来 。

Oracle Span 1:  探察家 => 探察家
Oracle Span 2:  提出 => 提出-01
Oracle Span 3:  要求 => 要求-02
Oracle Span 4:  证据 => 证据
Spans:
Span 2-3:  探察家 => 探察家
Span 3-4:  提出 => 提出-01
Span 1-2:  要求 => 要求-02
Span 4-5:  证据 => 证据

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  探察家 => 探察家
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 1-2:  要求 => 要求-02
Oracle Span 4-5:  证据 => 证据

Dependencies:
1	但是	_	AD	AD	_	2	advmod	_	_
2	要求	_	VV	VV	_	0	root	_	_
3	探察家	_	AD	AD	_	4	advmod	_	_
4	提出	_	VV	VV	_	2	ccomp	_	_
5	证据	_	NN	NN	_	6	lobj	_	_
6	来	_	LC	LC	_	4	loc	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 要求-02, arg1, x3 / 探察家)
(x2 / 要求-02, arg2, x4 / 提出-01)
(x4 / 提出-01, arg1, x6 / 证据)

Input(Some(Graph((contrast :arg2 (要求-02 :arg2 (提出-01 :arg1 证据 :arg0 x3) :arg1 探察家)),ArrayBuffer(Span(1,2,List(0),要求,要求-02,false), Span(3,4,List(1),提出,提出-01,false), Span(4,5,List(2),证据,证据,false), Span(2,3,List(3),探察家,探察家,false)),Map(2 -> 证据, 1 -> 提出-01, 0 -> 要求-02, 3 -> 探察家),Map(x2 -> 要求-02, x4 -> 提出-01, x3 -> 探察家, x6 -> 证据))),[Ljava.lang.String;@5c60b0a0,Annotation([Ljava.lang.String;@7a2b1eb4,[Ljava.lang.String;@702c436b,[Ljava.lang.String;@5833f5cd),Annotation([Ljava.lang.String;@10fbbdb,[Ljava.lang.String;@23f3dbf0,[Ledu.cmu.lti.nlp.amr.Dependency;@31d6f3fe),Annotation([Ljava.lang.String;@760cf594,[Ljava.lang.String;@aa149ed,[Ljava.lang.String;@37303f12),Annotation([Ljava.lang.String;@31ff6309,[Ljava.lang.String;@204e90f7,[Ledu.cmu.lti.nlp.amr.Entity;@20a05b32))
AMR:
(x2 / 要求-02, ARG1, x3 / 探察家)
(x2 / 要求-02, time, x4 / 提出-01)
(x4 / 提出-01, snt3, x6 / 证据)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,431 microseconds
Sentence: 例如 ， 假使 他 发现 了 一 座 大 山 ， 就 要求 他 带来 一些 大 石头 。 ”

Oracle Span 1:  一些 => 一些
Oracle Span 2:  他 => 他
Oracle Span 3:  他 => 他
Oracle Span 4:  例如 => 例如-01
Oracle Span 5:  发现 => 发现-01
Oracle Span 6:  大 => 大-01
Oracle Span 7:  大 => 大-01
Oracle Span 8:  就 => 就
Oracle Span 9:  山 => 山
Oracle Span 10:  带来 => 带来-02
Oracle Span 11:  石头 => 石头
Oracle Span 12:  要求 => 要求-02
Spans:
Span 15-16:  一些 => 一些
Span 3-4:  他 => 他
Span 13-14:  他 => 他
Span 0-1:  例如 => 例如-01
Span 4-5:  发现 => 发现-01
Span 8-9:  大 => 大-01
Span 16-17:  大 => 大-01
Span 11-12:  就 => 就
Span 9-10:  山 => 山
Span 14-15:  带来 => 带来-02
Span 17-18:  石头 => 石头
Span 12-13:  要求 => 要求-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  一些 => 一些
Oracle Span 3-4:  他 => 他
Oracle Span 13-14:  他 => 他
Oracle Span 0-1:  例如 => 例如-01
Oracle Span 4-5:  发现 => 发现-01
Oracle Span 8-9:  大 => 大-01
Oracle Span 16-17:  大 => 大-01
Oracle Span 11-12:  就 => 就
Oracle Span 9-10:  山 => 山
Oracle Span 14-15:  带来 => 带来-02
Oracle Span 17-18:  石头 => 石头
Oracle Span 12-13:  要求 => 要求-02

Dependencies:
1	例如	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	假使	_	CS	CS	_	5	advmod	_	_
4	他	_	PN	PN	_	5	nsubj	_	_
5	发现	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	10	clf	_	_
9	大	_	JJ	JJ	_	10	amod	_	_
10	山	_	NN	NN	_	5	dobj	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	就	_	AD	AD	_	13	advmod	_	_
13	要求	_	VV	VV	_	0	root	_	_
14	他	_	PN	PN	_	13	dobj	_	_
15	带来	_	VV	VV	_	13	dep	_	_
16	一些	_	CD	CD	_	18	nummod	_	_
17	大	_	JJ	JJ	_	18	amod	_	_
18	石头	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	13	punct	_	_
20	”	_	PU	PU	_	13	punct	_	_

Oracle:
(x21 / 发现-01, arg0, x22 / 他)
(x21 / 发现-01, arg1, x23 / 山)
(x23 / 山, mod, x24 / 大-01)
(x26 / 要求-02, arg1, x28 / 他)
(x26 / 要求-02, arg2, x29 / 带来-02)
(x26 / 要求-02, manner, x27 / 就)
(x29 / 带来-02, arg1, x30 / 石头)
(x30 / 石头, mod, x31 / 大-01)
(x30 / 石头, mod, x32 / 一些)

Input(Some(Graph((say :arg1 (例如-01 :arg0 (condition :arg1 (发现-01 :arg1 (山 :quant 1 :mod 大-01) :arg0 他) :arg2 (要求-02 :arg2 (带来-02 :arg1 (石头 :mod 一些 :mod 大-01)) :arg1 他 :manner 就)))),ArrayBuffer(Span(0,1,List(0),例如,例如-01,false), Span(4,5,List(1),发现,发现-01,false), Span(9,10,List(2),山,山,false), Span(8,9,List(3),大,大-01,false), Span(3,4,List(4),他,他,false), Span(12,13,List(5),要求,要求-02,false), Span(14,15,List(6),带来,带来-02,false), Span(17,18,List(7),石头,石头,false), Span(15,16,List(8),一些,一些,false), Span(16,17,List(9),大,大-01,false), Span(13,14,List(10),他,他,false), Span(11,12,List(11),就,就,false)),Map(2 -> 山, 5 -> 要求-02, 8 -> 一些, 7 -> 石头, 1 -> 发现-01, 4 -> 他, 11 -> 就, 6 -> 带来-02, 9 -> 大-01, 0 -> 例如-01, 10 -> 他, 3 -> 大-01),Map(x28 -> 他, x22 -> 他, x31 -> 大-01, x19 -> 例如-01, x30 -> 石头, x27 -> 就, x21 -> 发现-01, x24 -> 大-01, x23 -> 山, x32 -> 一些, x26 -> 要求-02, x29 -> 带来-02))),[Ljava.lang.String;@165e389b,Annotation([Ljava.lang.String;@5c73f672,[Ljava.lang.String;@8ee0c23,[Ljava.lang.String;@2ab5afc7),Annotation([Ljava.lang.String;@4dc8c0ea,[Ljava.lang.String;@e4b6f47,[Ledu.cmu.lti.nlp.amr.Dependency;@763cf5b9),Annotation([Ljava.lang.String;@71f0b72e,[Ljava.lang.String;@7a34f66a,[Ljava.lang.String;@2f508f3c),Annotation([Ljava.lang.String;@3ed03652,[Ljava.lang.String;@4aedaf61,[Ledu.cmu.lti.nlp.amr.Entity;@173797f0))
AMR:
(x21 / 发现-01, snt1, x24 / 大-01)
(x21 / 发现-01, snt2, x19 / 例如-01)
(x21 / 发现-01, snt2, x22 / 他)
(x23 / 山, mod, x24 / 大-01)
(x26 / 要求-02, direction, x28 / 他)
(x26 / 要求-02, manner, x27 / 就)
(x26 / 要求-02, snt1, x29 / 带来-02)
(x26 / 要求-02, value, x23 / 山)
(x30 / 石头, mod, x31 / 大-01)
(x30 / 石头, mod, x32 / 一些)
(x32 / 一些, prep-out, x29 / 带来-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.0.1.2.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 40,772 microseconds
Sentence: 地理学家 忽然 忙乱 起来 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  忙乱 => 忙乱-01
Oracle Span 3:  忽然 => 忽然
Spans:
Span 0-1:  地理学家 => 地理学家
Span 2-3:  忙乱 => 忙乱-01
Span 1-2:  忽然 => 忽然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 2-3:  忙乱 => 忙乱-01
Oracle Span 1-2:  忽然 => 忽然

Dependencies:
1	地理学家	_	NN	NN	_	2	nn	_	_
2	忽然	_	NN	NN	_	3	nsubj	_	_
3	忙乱	_	VV	VV	_	0	root	_	_
4	起来	_	VV	VV	_	3	comod	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 忙乱-01, arg0, x3 / 地理学家)
(x0 / 忙乱-01, manner, x2 / 忽然)

Input(Some(Graph((忙乱-01 :arg0 地理学家 :manner 忽然),ArrayBuffer(Span(2,3,List(0),忙乱,忙乱-01,false), Span(0,1,List(1),地理学家,地理学家,false), Span(1,2,List(2),忽然,忽然,false)),Map(2 -> 忽然, 1 -> 地理学家, 0 -> 忙乱-01),Map(x2 -> 忽然, x3 -> 地理学家, x0 -> 忙乱-01))),[Ljava.lang.String;@3c35c345,Annotation([Ljava.lang.String;@3681037,[Ljava.lang.String;@2459319c,[Ljava.lang.String;@ffaaaf0),Annotation([Ljava.lang.String;@1dc76fa1,[Ljava.lang.String;@5eed2d86,[Ledu.cmu.lti.nlp.amr.Dependency;@33d53216),Annotation([Ljava.lang.String;@69a2b3b6,[Ljava.lang.String;@4f3e7344,[Ljava.lang.String;@7808f638),Annotation([Ljava.lang.String;@62d73ead,[Ljava.lang.String;@1e141e42,[Ledu.cmu.lti.nlp.amr.Entity;@228cea97))
AMR:
(x0 / 忙乱-01, ARG2, x3 / 地理学家)
(x0 / 忙乱-01, manner, x2 / 忽然)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,769 microseconds
Sentence: “ 正好 ， 你 是 从 老 远 来 的 么 ！

Oracle Span 1:  你 => 你
Oracle Span 2:  来 => 来-01
Oracle Span 3:  正好 => 正好
Spans:
Span 3-4:  你 => 你
Span 8-9:  来 => 来-01
Span 1-2:  正好 => 正好

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  来 => 来-01
Oracle Span 1-2:  正好 => 正好

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	正好	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	你	_	PN	PN	_	5	top	_	_
5	是	_	VC	VC	_	11	dep	_	_
6	从	_	P	P	_	9	prep	_	_
7	老	_	NR	NR	_	6	pobj	_	_
8	远	_	AD	AD	_	9	advmod	_	_
9	来	_	VV	VV	_	5	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	么	_	VV	VV	_	0	root	_	_
12	！	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 来-01, arg0, x12 / 你)

Input(Some(Graph((say :arg1 (and :op 正好 :op (来-01 :mode expressive :arg2 老远 :arg0 你))),ArrayBuffer(Span(1,2,List(0),正好,正好,false), Span(8,9,List(1),来,来-01,false), Span(3,4,List(2),你,你,false)),Map(2 -> 你, 1 -> 来-01, 0 -> 正好),Map(x10 -> 正好, x12 -> 你, x11 -> 来-01))),[Ljava.lang.String;@1d0a61c8,Annotation([Ljava.lang.String;@46731692,[Ljava.lang.String;@782bf610,[Ljava.lang.String;@3db663d0),Annotation([Ljava.lang.String;@73fc518f,[Ljava.lang.String;@2de50ee4,[Ledu.cmu.lti.nlp.amr.Dependency;@ad9e63e),Annotation([Ljava.lang.String;@47fbc56,[Ljava.lang.String;@151ef57f,[Ljava.lang.String;@10895b16),Annotation([Ljava.lang.String;@5524b72f,[Ljava.lang.String;@2cc03cd1,[Ledu.cmu.lti.nlp.amr.Entity;@4e17913b))
AMR:
(x11 / 来-01, location, x10 / 正好)
(x12 / 你, location, x10 / 正好)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 5,020 microseconds
Sentence: 你 是 个 探察家 ！

Oracle Span 1:  你 => 你
Oracle Span 2:  探察家 => 探察家
Spans:
Span 0-1:  你 => 你
Span 3-4:  探察家 => 探察家

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  探察家 => 探察家

Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	探察家	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / 探察家, domain, x6 / 你)

Input(Some(Graph((探察家 :mode expressive :domain 你),ArrayBuffer(Span(3,4,List(0),探察家,探察家,false), Span(0,1,List(1),你,你,false)),Map(1 -> 你, 0 -> 探察家),Map(x4 -> 探察家, x6 -> 你))),[Ljava.lang.String;@149c3204,Annotation([Ljava.lang.String;@64f16277,[Ljava.lang.String;@497aec8c,[Ljava.lang.String;@3b9632d1),Annotation([Ljava.lang.String;@4e6f2bb5,[Ljava.lang.String;@21e20ad5,[Ledu.cmu.lti.nlp.amr.Dependency;@3f628ce9),Annotation([Ljava.lang.String;@35e8316e,[Ljava.lang.String;@26d96e5,[Ljava.lang.String;@336880df),Annotation([Ljava.lang.String;@1846579f,[Ljava.lang.String;@6cd166b8,[Ledu.cmu.lti.nlp.amr.Entity;@2650f79))
AMR:
(x4 / 探察家, domain, x6 / 你)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,839 microseconds
Sentence: 你 来 给 我 介绍 一下 你 的 星球 吧 ！ ”

Oracle Span 1:  介绍 => 介绍-03
Oracle Span 2:  你 => 你
Oracle Span 3:  我 => 我
Oracle Span 4:  星球 => 星球
Spans:
Span 4-5:  介绍 => 介绍-03
Span 0-1:  你 => 你
Span 3-4:  我 => 我
Span 8-9:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  介绍 => 介绍-03
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  星球 => 星球

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	来	_	MSP	MSP	_	5	prtmod	_	_
3	给	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	介绍	_	VV	VV	_	0	root	_	_
6	一下	_	AD	AD	_	5	advmod	_	_
7	你	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	5	dobj	_	_
10	吧	_	SP	SP	_	5	dep	_	_
11	！	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 介绍-03, arg0, x14 / 你)
(x13 / 介绍-03, arg1, x15 / 星球)
(x13 / 介绍-03, arg2, x17 / 我)

Input(Some(Graph((say :arg1 (介绍-03 :mode expressive :arg2 我 :arg1 (星球 :poss x14) :arg0 你)),ArrayBuffer(Span(4,5,List(0),介绍,介绍-03,false), Span(3,4,List(1),我,我,false), Span(8,9,List(2),星球,星球,false), Span(0,1,List(3),你,你,false)),Map(2 -> 星球, 1 -> 我, 0 -> 介绍-03, 3 -> 你),Map(x13 -> 介绍-03, x15 -> 星球, x14 -> 你, x17 -> 我))),[Ljava.lang.String;@75fc1992,Annotation([Ljava.lang.String;@5fac521d,[Ljava.lang.String;@38af1bf6,[Ljava.lang.String;@129bd55d),Annotation([Ljava.lang.String;@7be7e15,[Ljava.lang.String;@3abfe845,[Ledu.cmu.lti.nlp.amr.Dependency;@7a0f244f),Annotation([Ljava.lang.String;@3672276e,[Ljava.lang.String;@4248b963,[Ljava.lang.String;@7f08caf),Annotation([Ljava.lang.String;@4defd42,[Ljava.lang.String;@2330e3e0,[Ledu.cmu.lti.nlp.amr.Entity;@24b4d544))
AMR:
(x13 / 介绍-03, domain, x14 / 你)
(x13 / 介绍-03, quant, x17 / 我)
(x13 / 介绍-03, year, x15 / 星球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,955 microseconds
Sentence: 于是 ， 已经 打开 登记簿 的 地理学家 ， 削 起 他 的 铅笔 来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  削 => 削-01
Oracle Span 3:  地理学家 => 地理学家
Oracle Span 4:  已经 => 已经
Oracle Span 5:  打开 => 打开-01
Oracle Span 6:  铅笔 => 铅笔
Spans:
Span 10-11:  他 => 他
Span 8-9:  削 => 削-01
Span 6-7:  地理学家 => 地理学家
Span 2-3:  已经 => 已经
Span 3-4:  打开 => 打开-01
Span 12-13:  铅笔 => 铅笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  他 => 他
Oracle Span 8-9:  削 => 削-01
Oracle Span 6-7:  地理学家 => 地理学家
Oracle Span 2-3:  已经 => 已经
Oracle Span 3-4:  打开 => 打开-01
Oracle Span 12-13:  铅笔 => 铅笔

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	已经	_	AD	AD	_	4	advmod	_	_
4	打开	_	VV	VV	_	0	root	_	_
5	登记簿	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地理学家	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	削	_	CD	CD	_	10	nummod	_	_
10	起	_	M	M	_	13	clf	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	铅笔	_	NN	NN	_	14	nsubj	_	_
14	来	_	VV	VV	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 削-01, arg0, x3 / 地理学家)
(x2 / 削-01, arg1, x7 / 铅笔)
(x4 / 打开-01, arg0, x3 / 地理学家)
(x4 / 打开-01, manner, x6 / 已经)
(x7 / 铅笔, poss, x8 / 他)

Input(Some(Graph((temporal :arg2 (削-01 :arg1 (铅笔 :poss 他) :arg0 (地理学家 :arg0-of (打开-01 :manner 已经 :arg1 登记薄)))),ArrayBuffer(Span(8,9,List(0),削,削-01,false), Span(12,13,List(1),铅笔,铅笔,false), Span(10,11,List(2),他,他,false), Span(6,7,List(3),地理学家,地理学家,false), Span(3,4,List(4),打开,打开-01,false), Span(2,3,List(5),已经,已经,false)),Map(2 -> 他, 5 -> 已经, 1 -> 铅笔, 4 -> 打开-01, 0 -> 削-01, 3 -> 地理学家),Map(x2 -> 削-01, x8 -> 他, x7 -> 铅笔, x4 -> 打开-01, x3 -> 地理学家, x6 -> 已经))),[Ljava.lang.String;@27a2a089,Annotation([Ljava.lang.String;@54657dd2,[Ljava.lang.String;@706eab5d,[Ljava.lang.String;@72725ee1),Annotation([Ljava.lang.String;@40e60ece,[Ljava.lang.String;@3f9270ed,[Ledu.cmu.lti.nlp.amr.Dependency;@3a230001),Annotation([Ljava.lang.String;@5ac6c4f2,[Ljava.lang.String;@2aa6311a,[Ljava.lang.String;@61f39bb),Annotation([Ljava.lang.String;@249e0271,[Ljava.lang.String;@4893b344,[Ledu.cmu.lti.nlp.amr.Entity;@53a665ad))
AMR:
(x2 / 削-01, ARG0, x7 / 铅笔)
(x2 / 削-01, ARG4, x3 / 地理学家)
(x4 / 打开-01, ARG0, x3 / 地理学家)
(x4 / 打开-01, manner, x6 / 已经)
(x7 / 铅笔, poss, x8 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
Decoded in 18,396 microseconds
Sentence: 他 首先 是 用 铅笔 记 下 探察家 的 叙述 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  叙述 => 叙述-01
Oracle Span 3:  探察家 => 探察家
Oracle Span 4:  记 => 记-01
Oracle Span 5:  铅笔 => 铅笔
Spans:
Span 0-1:  他 => 他
Span 9-10:  叙述 => 叙述-01
Span 7-8:  探察家 => 探察家
Span 5-6:  记 => 记-01
Span 4-5:  铅笔 => 铅笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  叙述 => 叙述-01
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 5-6:  记 => 记-01
Oracle Span 4-5:  铅笔 => 铅笔

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	首先	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	用	_	P	P	_	6	prep	_	_
5	铅笔	_	NN	NN	_	4	pobj	_	_
6	记	_	VV	VV	_	10	rcmod	_	_
7	下	_	DT	DT	_	8	det	_	_
8	探察家	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	6	cpm	_	_
10	叙述	_	NN	NN	_	3	attr	_	_
11	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 叙述-01, poss, x12 / 探察家)
(x9 / 记-01, arg0, x10 / 他)
(x9 / 记-01, arg1, x11 / 叙述-01)
(x9 / 记-01, instrument, x13 / 铅笔)

Input(Some(Graph((temporal :arg1 (记-01 :instrument 铅笔 :arg1 (叙述-01 :poss 探察家) :arg0 他)),ArrayBuffer(Span(5,6,List(0),记,记-01,false), Span(4,5,List(1),铅笔,铅笔,false), Span(9,10,List(2),叙述,叙述-01,false), Span(7,8,List(3),探察家,探察家,false), Span(0,1,List(4),他,他,false)),Map(2 -> 叙述-01, 1 -> 铅笔, 4 -> 他, 0 -> 记-01, 3 -> 探察家),Map(x10 -> 他, x13 -> 铅笔, x12 -> 探察家, x11 -> 叙述-01, x9 -> 记-01))),[Ljava.lang.String;@2c0b4c83,Annotation([Ljava.lang.String;@78525ef9,[Ljava.lang.String;@2d0ecb24,[Ljava.lang.String;@4d654825),Annotation([Ljava.lang.String;@3bfc6a5e,[Ljava.lang.String;@51b35e4e,[Ledu.cmu.lti.nlp.amr.Dependency;@abff8b7),Annotation([Ljava.lang.String;@6d7cada5,[Ljava.lang.String;@350a94ce,[Ljava.lang.String;@7e00ed0f),Annotation([Ljava.lang.String;@b0fc838,[Ljava.lang.String;@3964d79,[Ledu.cmu.lti.nlp.amr.Entity;@62db0521))
AMR:
(x11 / 叙述-01, poss, x12 / 探察家)
(x9 / 记-01, degree, x10 / 他)
(x9 / 记-01, instrument, x13 / 铅笔)
(x9 / 记-01, prep-for, x11 / 叙述-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,274 microseconds
Sentence: 等到 探察家 提出 了 证据 以后 再 用 墨水笔 记 下来 。

Oracle Span 1:  墨水笔 => 墨水笔
Oracle Span 2:  探察家 => 探察家
Oracle Span 3:  提出 => 提出-01
Oracle Span 4:  等到 => 等到-01
Oracle Span 5:  记 => 记-01
Oracle Span 6:  证据 => 证据
Spans:
Span 8-9:  墨水笔 => 墨水笔
Span 1-2:  探察家 => 探察家
Span 2-3:  提出 => 提出-01
Span 0-1:  等到 => 等到-01
Span 9-10:  记 => 记-01
Span 4-5:  证据 => 证据

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  墨水笔 => 墨水笔
Oracle Span 1-2:  探察家 => 探察家
Oracle Span 2-3:  提出 => 提出-01
Oracle Span 0-1:  等到 => 等到-01
Oracle Span 9-10:  记 => 记-01
Oracle Span 4-5:  证据 => 证据

Dependencies:
1	等到	_	NN	NN	_	2	nn	_	_
2	探察家	_	NN	NN	_	3	nsubj	_	_
3	提出	_	VV	VV	_	6	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	证据	_	NN	NN	_	3	dobj	_	_
6	以后	_	LC	LC	_	10	loc	_	_
7	再	_	AD	AD	_	10	advmod	_	_
8	用	_	P	P	_	10	prep	_	_
9	墨水笔	_	NN	NN	_	8	pobj	_	_
10	记	_	VV	VV	_	0	root	_	_
11	下来	_	VV	VV	_	10	comod	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x15 / 记-01, instrument, x16 / 墨水笔)
(x7 / 等到-01, arg1, x8 / 提出-01)
(x8 / 提出-01, arg0, x9 / 探察家)
(x8 / 提出-01, arg1, x10 / 证据)

Input(Some(Graph((temporal :arg1 (等到-01 :arg1 (提出-01 :arg1 证据 :arg0 探察家)) :arg2 (记-01 :instrument 墨水笔)),ArrayBuffer(Span(0,1,List(0),等到,等到-01,false), Span(2,3,List(1),提出,提出-01,false), Span(4,5,List(2),证据,证据,false), Span(1,2,List(3),探察家,探察家,false), Span(9,10,List(4),记,记-01,false), Span(8,9,List(5),墨水笔,墨水笔,false)),Map(2 -> 证据, 5 -> 墨水笔, 1 -> 提出-01, 4 -> 记-01, 0 -> 等到-01, 3 -> 探察家),Map(x16 -> 墨水笔, x10 -> 证据, x8 -> 提出-01, x15 -> 记-01, x7 -> 等到-01, x9 -> 探察家))),[Ljava.lang.String;@1b4ae4e0,Annotation([Ljava.lang.String;@6ef1a1b9,[Ljava.lang.String;@5fbdc49b,[Ljava.lang.String;@65753040),Annotation([Ljava.lang.String;@2954b5ea,[Ljava.lang.String;@4acb2510,[Ledu.cmu.lti.nlp.amr.Dependency;@7be3a9ce),Annotation([Ljava.lang.String;@37d871c2,[Ljava.lang.String;@3baf6936,[Ljava.lang.String;@285f38f6),Annotation([Ljava.lang.String;@4e1459ea,[Ljava.lang.String;@3ab6678b,[Ledu.cmu.lti.nlp.amr.Entity;@7a904f32))
AMR:
(x10 / 证据, mod, x15 / 记-01)
(x15 / 记-01, instrument, x16 / 墨水笔)
(x7 / 等到-01, ARG5, x8 / 提出-01)
(x8 / 提出-01, mod, x10 / 证据)
(x8 / 提出-01, prep-from, x9 / 探察家)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 17,008 microseconds
Sentence: “ 怎么样 ？ ” 地理学家 询问 道 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  怎么样 => 怎么样-01
Oracle Span 3:  询问 => 询问-01
Spans:
Span 4-5:  地理学家 => 地理学家
Span 1-2:  怎么样 => 怎么样-01
Span 5-6:  询问 => 询问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  地理学家 => 地理学家
Oracle Span 1-2:  怎么样 => 怎么样-01
Oracle Span 5-6:  询问 => 询问-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	怎么样	_	JJ	JJ	_	3	amod	_	_
3	？	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	地理学家	_	NN	NN	_	6	nsubj	_	_
6	询问	_	VV	VV	_	0	root	_	_
7	道	_	NN	NN	_	6	dobj	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 询问-01, arg0, x2 / 地理学家)
(x0 / 询问-01, arg1, x3 / 怎么样-01)

Input(Some(Graph((询问-01 :mode interrogative :arg1 怎么样-01 :arg0 地理学家),ArrayBuffer(Span(5,6,List(0),询问,询问-01,false), Span(1,2,List(1),怎么样,怎么样-01,false), Span(4,5,List(2),地理学家,地理学家,false)),Map(2 -> 地理学家, 1 -> 怎么样-01, 0 -> 询问-01),Map(x2 -> 地理学家, x3 -> 怎么样-01, x0 -> 询问-01))),[Ljava.lang.String;@2b59501e,Annotation([Ljava.lang.String;@476e8796,[Ljava.lang.String;@4eed2acf,[Ljava.lang.String;@36fc05ff),Annotation([Ljava.lang.String;@57c47a9e,[Ljava.lang.String;@642505c7,[Ledu.cmu.lti.nlp.amr.Dependency;@4339e0de),Annotation([Ljava.lang.String;@153cd6bb,[Ljava.lang.String;@61d84e08,[Ljava.lang.String;@2d9f64c9),Annotation([Ljava.lang.String;@21ac5eb4,[Ljava.lang.String;@52d6cd34,[Ledu.cmu.lti.nlp.amr.Entity;@715d6168))
AMR:
(x0 / 询问-01, direction, x2 / 地理学家)
(x0 / 询问-01, time, x3 / 怎么样-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,368 microseconds
Sentence: “ 啊 ！ 我 那里 ， ” 小 王子 说道 ， “ 没有 多 大 意思 ，

Oracle Span 1:  啊 => 啊
Oracle Span 2:  小 => 小-01
Oracle Span 3:  意思 => 意思
Oracle Span 4:  我 => 我
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说道 => 说道-01
Oracle Span 7:  那里 => 那里
Spans:
Span 1-2:  啊 => 啊
Span 7-8:  小 => 小-01
Span 15-16:  意思 => 意思
Span 3-4:  我 => 我
Span 8-9:  王子 => 王子
Span 9-10:  说道 => 说道-01
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  啊 => 啊
Oracle Span 7-8:  小 => 小-01
Oracle Span 15-16:  意思 => 意思
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说道 => 说道-01
Oracle Span 4-5:  那里 => 那里

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	VV	VV	_	3	mmod	_	_
3	！	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nn	_	_
5	那里	_	PN	PN	_	3	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说道	_	VV	VV	_	3	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	13	punct	_	_
13	没有	_	VE	VE	_	10	ccomp	_	_
14	多	_	CD	CD	_	16	nummod	_	_
15	大	_	JJ	JJ	_	16	amod	_	_
16	意思	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x17 / 那里, poss, x18 / 我)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说道-01 :arg1 (and :op (啊 :mode expressive) :op (有-05 :polarity - :arg0 (那里 :poss 我) :arg1 (意思 :degree 多大))) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说道,说道-01,false), Span(1,2,List(1),啊,啊,false), Span(4,5,List(2),那里,那里,false), Span(3,4,List(3),我,我,false), Span(15,16,List(4),意思,意思,false), Span(8,9,List(5),王子,王子,false), Span(7,8,List(6),小,小-01,false)),Map(2 -> 那里, 5 -> 王子, 1 -> 啊, 4 -> 意思, 6 -> 小-01, 0 -> 说道-01, 3 -> 我),Map(x2 -> 王子, x19 -> 意思, x13 -> 啊, x18 -> 我, x3 -> 小-01, x17 -> 那里, x0 -> 说道-01))),[Ljava.lang.String;@27b2faa6,Annotation([Ljava.lang.String;@6428591a,[Ljava.lang.String;@7397c6,[Ljava.lang.String;@1abfe081),Annotation([Ljava.lang.String;@2a685eba,[Ljava.lang.String;@c2e3264,[Ledu.cmu.lti.nlp.amr.Dependency;@107f4980),Annotation([Ljava.lang.String;@75a118e6,[Ljava.lang.String;@1d540566,[Ljava.lang.String;@6014a9ba),Annotation([Ljava.lang.String;@acdcf71,[Ljava.lang.String;@77d680e6,[Ledu.cmu.lti.nlp.amr.Entity;@4a14c44f))
AMR:
(x0 / 说道-01, conj-as-if, x2 / 王子)
(x0 / 说道-01, domain, x17 / 那里)
(x0 / 说道-01, polite, x19 / 意思)
(x17 / 那里, location, x13 / 啊)
(x17 / 那里, poss, x18 / 我)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,690 microseconds
Sentence: 那儿 很 小 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  很 => 很
Oracle Span 3:  那儿 => 那儿
Spans:
Span 2-3:  小 => 小-01
Span 1-2:  很 => 很
Span 0-1:  那儿 => 那儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  小 => 小-01
Oracle Span 1-2:  很 => 很
Oracle Span 0-1:  那儿 => 那儿

Dependencies:
1	那儿	_	NN	NN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	小	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 小-01, degree, x2 / 很)
(x0 / 小-01, location, x4 / 那儿)

Input(Some(Graph((小-01 :location 那儿 :degree 很),ArrayBuffer(Span(2,3,List(0),小,小-01,false), Span(0,1,List(1),那儿,那儿,false), Span(1,2,List(2),很,很,false)),Map(2 -> 很, 1 -> 那儿, 0 -> 小-01),Map(x2 -> 很, x4 -> 那儿, x0 -> 小-01))),[Ljava.lang.String;@f08fdce,Annotation([Ljava.lang.String;@6bda1d19,[Ljava.lang.String;@28c86134,[Ljava.lang.String;@4492eede),Annotation([Ljava.lang.String;@cbc8d0f,[Ljava.lang.String;@37b57b54,[Ledu.cmu.lti.nlp.amr.Dependency;@5c1f6d57),Annotation([Ljava.lang.String;@f288c14,[Ljava.lang.String;@6794ac0b,[Ljava.lang.String;@7be71476),Annotation([Ljava.lang.String;@5cb5bb88,[Ljava.lang.String;@17b6d426,[Ledu.cmu.lti.nlp.amr.Entity;@5580d62f))
AMR:
(x0 / 小-01, degree, x2 / 很)
(x0 / 小-01, location, x4 / 那儿)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,306 microseconds
Sentence: 我 有 三 座 火山 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  有 => 有-01
Oracle Span 3:  火山 => 火山
Spans:
Span 0-1:  我 => 我
Span 1-2:  有 => 有-01
Span 4-5:  火山 => 火山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  火山 => 火山

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	有	_	VE	VE	_	0	root	_	_
3	三	_	CD	CD	_	4	nummod	_	_
4	座	_	M	M	_	2	dep	_	_
5	火山	_	NN	NN	_	2	conj	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 我)
(x0 / 有-01, arg1, x3 / 火山)

Input(Some(Graph((有-01 :arg1 (火山 :quant 3) :arg0 我),ArrayBuffer(Span(1,2,List(0),有,有-01,false), Span(4,5,List(1),火山,火山,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 火山, 0 -> 有-01),Map(x2 -> 我, x3 -> 火山, x0 -> 有-01))),[Ljava.lang.String;@16872c4d,Annotation([Ljava.lang.String;@671facee,[Ljava.lang.String;@46a953cf,[Ljava.lang.String;@154bd49b),Annotation([Ljava.lang.String;@3a01773b,[Ljava.lang.String;@20e3c449,[Ledu.cmu.lti.nlp.amr.Dependency;@2c58dcb1),Annotation([Ljava.lang.String;@67fc2aad,[Ljava.lang.String;@56f521c6,[Ljava.lang.String;@680a66dd),Annotation([Ljava.lang.String;@2dd8239,[Ljava.lang.String;@472698d,[Ledu.cmu.lti.nlp.amr.Entity;@7b7683d4))
AMR:
(x0 / 有-01, ARG1, x3 / 火山)
(x0 / 有-01, op, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,623 microseconds
Sentence: 两 座 是 活 的 ， 一 座 是 熄灭 了 的 。

Oracle Span 1:  活 => 活-04
Oracle Span 2:  熄灭 => 熄灭-01
Spans:
Span 3-4:  活 => 活-04
Span 9-10:  熄灭 => 熄灭-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  活 => 活-04
Oracle Span 9-10:  熄灭 => 熄灭-01

Dependencies:
1	两	_	CD	CD	_	2	nummod	_	_
2	座	_	M	M	_	3	dep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	活	_	JJ	JJ	_	3	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	9	dep	_	_
9	是	_	VC	VC	_	3	conj	_	_
10	熄灭	_	VV	VV	_	9	attr	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	的	_	DEC	DEC	_	10	cpm	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((and :op (活-04 :arg0 (thing :quant 2)) :op (熄灭-01 :arg1 (thing :quant 1))),ArrayBuffer(Span(3,4,List(0),活,活-04,false), Span(9,10,List(1),熄灭,熄灭-01,false)),Map(1 -> 熄灭-01, 0 -> 活-04),Map(x16 -> 熄灭-01, x13 -> 活-04))),[Ljava.lang.String;@40712ee9,Annotation([Ljava.lang.String;@2e53b094,[Ljava.lang.String;@39fa8ad2,[Ljava.lang.String;@76ddd61a),Annotation([Ljava.lang.String;@3f92a84e,[Ljava.lang.String;@cf67838,[Ledu.cmu.lti.nlp.amr.Dependency;@6137cf6e),Annotation([Ljava.lang.String;@7942a854,[Ljava.lang.String;@53b8afea,[Ljava.lang.String;@6c302a1d),Annotation([Ljava.lang.String;@33a3c44a,[Ljava.lang.String;@5fcfca62,[Ledu.cmu.lti.nlp.amr.Entity;@499ef98e))
AMR:
(x13 / 活-04, direction, x16 / 熄灭-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 5,300 microseconds
Sentence: 但是 也 很 难 说 。 ”

Oracle Span 1:  也 => 也
Oracle Span 2:  很 => 很
Spans:
Span 1-2:  也 => 也
Span 2-3:  很 => 很

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  也 => 也
Oracle Span 2-3:  很 => 很

Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	也	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	难	_	VA	VA	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (contrast :arg2 (难说-01 :degree 很 :manner 也))),ArrayBuffer(Span(2,3,List(0),很,很,false), Span(1,2,List(1),也,也,false)),Map(1 -> 也, 0 -> 很),Map(x10 -> 也, x9 -> 很))),[Ljava.lang.String;@24934262,Annotation([Ljava.lang.String;@93f432e,[Ljava.lang.String;@288214b1,[Ljava.lang.String;@16eedaa6),Annotation([Ljava.lang.String;@28501a4b,[Ljava.lang.String;@5b051a5c,[Ledu.cmu.lti.nlp.amr.Dependency;@639aba11),Annotation([Ljava.lang.String;@341672e,[Ljava.lang.String;@2bebb74f,[Ljava.lang.String;@58cf8f94),Annotation([Ljava.lang.String;@6e33fcae,[Ljava.lang.String;@66c38e51,[Ledu.cmu.lti.nlp.amr.Entity;@10641c09))
AMR:
(x9 / 很, manner, x10 / 也)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 3,555 microseconds
Sentence: “ 很 难 说 。 ” 地理学家 说道 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  很 => 很
Oracle Span 3:  说道 => 说道-01
Spans:
Span 6-7:  地理学家 => 地理学家
Span 1-2:  很 => 很
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  地理学家 => 地理学家
Oracle Span 1-2:  很 => 很
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	很	_	AD	AD	_	4	advmod	_	_
3	难	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	7	conj	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	地理学家	_	VV	VV	_	0	root	_	_
8	说道	_	NN	NN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 地理学家)

Input(Some(Graph((说道-01 :arg1 (难说-01 :degree 很) :arg0 地理学家),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(1,2,List(1),很,很,false), Span(6,7,List(2),地理学家,地理学家,false)),Map(2 -> 地理学家, 1 -> 很, 0 -> 说道-01),Map(x2 -> 地理学家, x4 -> 很, x0 -> 说道-01))),[Ljava.lang.String;@34f392be,Annotation([Ljava.lang.String;@4554de02,[Ljava.lang.String;@3f9f71ff,[Ljava.lang.String;@fabb651),Annotation([Ljava.lang.String;@27e5b378,[Ljava.lang.String;@4422dd48,[Ledu.cmu.lti.nlp.amr.Dependency;@764cba),Annotation([Ljava.lang.String;@523d6bdb,[Ljava.lang.String;@58496c97,[Ljava.lang.String;@ad3324b),Annotation([Ljava.lang.String;@3872bc37,[Ljava.lang.String;@1a87b51,[Ledu.cmu.lti.nlp.amr.Entity;@12968227))
AMR:
(x0 / 说道-01, degree, x4 / 很)
(x0 / 说道-01, example, x2 / 地理学家)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,868 microseconds
Sentence: “ 我 还 有 一 朵 花 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  有 => 有-01
Oracle Span 3:  花 => 花
Oracle Span 4:  还 => 还
Spans:
Span 1-2:  我 => 我
Span 3-4:  有 => 有-01
Span 6-7:  花 => 花
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  有 => 有-01
Oracle Span 6-7:  花 => 花
Oracle Span 2-3:  还 => 还

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	7	clf	_	_
7	花	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 有-01, arg0, x10 / 我)
(x8 / 有-01, arg1, x11 / 花)
(x8 / 有-01, manner, x9 / 还)

Input(Some(Graph((say :arg1 (有-01 :arg1 (花 :quant 1) :arg0 我 :manner 还)),ArrayBuffer(Span(3,4,List(0),有,有-01,false), Span(6,7,List(1),花,花,false), Span(1,2,List(2),我,我,false), Span(2,3,List(3),还,还,false)),Map(2 -> 我, 1 -> 花, 0 -> 有-01, 3 -> 还),Map(x10 -> 我, x8 -> 有-01, x11 -> 花, x9 -> 还))),[Ljava.lang.String;@144ab54,Annotation([Ljava.lang.String;@2cfa2c4f,[Ljava.lang.String;@6ecab872,[Ljava.lang.String;@48eb9836),Annotation([Ljava.lang.String;@6c518474,[Ljava.lang.String;@11b455e5,[Ledu.cmu.lti.nlp.amr.Dependency;@2a066689),Annotation([Ljava.lang.String;@3e3861d7,[Ljava.lang.String;@5e2a3040,[Ljava.lang.String;@6d025d1d),Annotation([Ljava.lang.String;@74294c1a,[Ljava.lang.String;@9e2ad91,[Ledu.cmu.lti.nlp.amr.Entity;@64524dd))
AMR:
(x8 / 有-01, manner, x9 / 还)
(x8 / 有-01, poss, x10 / 我)
(x8 / 有-01, prep-as, x11 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,010 microseconds
Sentence: “ 我们 是 不 记载 花卉 的 。 ” 地理学家 说 。

Oracle Span 1:  地理学家 => 地理学家
Oracle Span 2:  我们 => 我们
Oracle Span 3:  花卉 => 花卉
Oracle Span 4:  记载 => 记载-01
Oracle Span 5:  说 => 说-01
Spans:
Span 9-10:  地理学家 => 地理学家
Span 1-2:  我们 => 我们
Span 5-6:  花卉 => 花卉
Span 4-5:  记载 => 记载-01
Span 10-11:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  地理学家 => 地理学家
Oracle Span 1-2:  我们 => 我们
Oracle Span 5-6:  花卉 => 花卉
Oracle Span 4-5:  记载 => 记载-01
Oracle Span 10-11:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	11	dep	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	记载	_	VV	VV	_	3	ccomp	_	_
6	花卉	_	NN	NN	_	5	dobj	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	。	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	地理学家	_	NR	NR	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 记载-01)
(x3 / 记载-01, arg0, x5 / 我们)
(x3 / 记载-01, arg1, x6 / 花卉)

Input(Some(Graph((说-01 :arg1 (记载-01 :arg1 花卉 :arg0 我们 :polarity -) :arg0 地理学家),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(4,5,List(1),记载,记载-01,false), Span(5,6,List(2),花卉,花卉,false), Span(1,2,List(3),我们,我们,false), Span(9,10,List(4),地理学家,地理学家,false)),Map(2 -> 花卉, 1 -> 记载-01, 4 -> 地理学家, 0 -> 说-01, 3 -> 我们),Map(x2 -> 地理学家, x5 -> 我们, x3 -> 记载-01, x6 -> 花卉, x0 -> 说-01))),[Ljava.lang.String;@79d06bbd,Annotation([Ljava.lang.String;@47a7a101,[Ljava.lang.String;@5bb51241,[Ljava.lang.String;@7479b626),Annotation([Ljava.lang.String;@e8ea697,[Ljava.lang.String;@74dbb1ee,[Ledu.cmu.lti.nlp.amr.Dependency;@70f822e),Annotation([Ljava.lang.String;@3efedc6f,[Ljava.lang.String;@45bf6f39,[Ljava.lang.String;@6c42f2a1),Annotation([Ljava.lang.String;@17a703f5,[Ljava.lang.String;@5ff2b8ca,[Ledu.cmu.lti.nlp.amr.Entity;@618ad2aa))
AMR:
(x0 / 说-01, example, x2 / 地理学家)
(x0 / 说-01, manner, x3 / 记载-01)
(x3 / 记载-01, location, x5 / 我们)
(x3 / 记载-01, prep-through, x6 / 花卉)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,484 microseconds
Sentence: “ 这 是 为什么 ？

Oracle Span 1:  这 => 这
Spans:
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	为什么	_	AD	AD	_	3	advmod	_	_
5	？	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (这 :mode interrogative :cause amr-unknown)),ArrayBuffer(Span(1,2,List(0),这,这,false)),Map(0 -> 这),Map(x7 -> 这))),[Ljava.lang.String;@1aa6e3c0,Annotation([Ljava.lang.String;@3531f3ca,[Ljava.lang.String;@7fcf294e,[Ljava.lang.String;@4867ab9f),Annotation([Ljava.lang.String;@65f2f9b0,[Ljava.lang.String;@5fe7f967,[Ledu.cmu.lti.nlp.amr.Dependency;@59e43e8c),Annotation([Ljava.lang.String;@2caa5d7c,[Ljava.lang.String;@5e671e20,[Ljava.lang.String;@3eabe84a),Annotation([Ljava.lang.String;@46c3a14d,[Ljava.lang.String;@38fc5554,[Ledu.cmu.lti.nlp.amr.Entity;@5e8cda75))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,610 microseconds
Sentence: 花 是 我 的 星球 上 最 美丽 的 东西 。 ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  我 => 我
Oracle Span 3:  星球 => 星球
Oracle Span 4:  最 => 最
Oracle Span 5:  美丽 => 美丽-01
Oracle Span 6:  花 => 花
Spans:
Span 9-10:  东西 => 东西
Span 2-3:  我 => 我
Span 4-5:  星球 => 星球
Span 6-7:  最 => 最
Span 7-8:  美丽 => 美丽-01
Span 0-1:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 9-10:  东西 => 东西
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  星球 => 星球
Oracle Span 6-7:  最 => 最
Oracle Span 7-8:  美丽 => 美丽-01
Oracle Span 0-1:  花 => 花

Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	8	loc	_	_
7	最	_	AD	AD	_	8	advmod	_	_
8	美丽	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	东西	_	NN	NN	_	2	attr	_	_
11	。	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 美丽-01, degree, x11 / 最)
(x12 / 星球, poss, x13 / 我)
(x9 / 东西, domain, x14 / 花)
(x9 / 东西, location, x12 / 星球)
(x9 / 东西, mod, x10 / 美丽-01)

Input(Some(Graph((say :arg1 (东西 :domain 花 :location (星球 :poss 我) :mod (美丽-01 :degree 最))),ArrayBuffer(Span(9,10,List(0),东西,东西,false), Span(0,1,List(1),花,花,false), Span(4,5,List(2),星球,星球,false), Span(2,3,List(3),我,我,false), Span(7,8,List(4),美丽,美丽-01,false), Span(6,7,List(5),最,最,false)),Map(2 -> 星球, 5 -> 最, 1 -> 花, 4 -> 美丽-01, 0 -> 东西, 3 -> 我),Map(x10 -> 美丽-01, x13 -> 我, x12 -> 星球, x11 -> 最, x14 -> 花, x9 -> 东西))),[Ljava.lang.String;@3f049056,Annotation([Ljava.lang.String;@64968732,[Ljava.lang.String;@3e1a3801,[Ljava.lang.String;@6fd12c5),Annotation([Ljava.lang.String;@1de0a46c,[Ljava.lang.String;@4d1f1ff5,[Ledu.cmu.lti.nlp.amr.Dependency;@222afc67),Annotation([Ljava.lang.String;@4c2fb9dd,[Ljava.lang.String;@54f4a7f0,[Ljava.lang.String;@61a1ea2c),Annotation([Ljava.lang.String;@149debbb,[Ljava.lang.String;@25cd49a4,[Ledu.cmu.lti.nlp.amr.Entity;@5477a1ca))
AMR:
(x10 / 美丽-01, degree, x11 / 最)
(x12 / 星球, poss, x13 / 我)
(x9 / 东西, domain, x14 / 花)
(x9 / 东西, location, x12 / 星球)
(x9 / 东西, mod, x10 / 美丽-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 14,366 microseconds
Sentence: “ 因为 花卉 是 短暂 的 。 ”

Oracle Span 1:  短暂 => 短暂-01
Oracle Span 2:  花卉 => 花卉
Spans:
Span 4-5:  短暂 => 短暂-01
Span 2-3:  花卉 => 花卉

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  短暂 => 短暂-01
Oracle Span 2-3:  花卉 => 花卉

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	因为	_	P	P	_	4	prep	_	_
3	花卉	_	NN	NN	_	2	pobj	_	_
4	是	_	VC	VC	_	0	root	_	_
5	短暂	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 短暂-01, arg0, x8 / 花卉)

Input(Some(Graph((say :arg1 (causation :arg1 (短暂-01 :arg0 花卉))),ArrayBuffer(Span(4,5,List(0),短暂,短暂-01,false), Span(2,3,List(1),花卉,花卉,false)),Map(1 -> 花卉, 0 -> 短暂-01),Map(x8 -> 花卉, x7 -> 短暂-01))),[Ljava.lang.String;@3ae9d1e2,Annotation([Ljava.lang.String;@41522537,[Ljava.lang.String;@e9dc4d0,[Ljava.lang.String;@670d4d38),Annotation([Ljava.lang.String;@131ff6fa,[Ljava.lang.String;@43b40233,[Ledu.cmu.lti.nlp.amr.Dependency;@23eff5d1),Annotation([Ljava.lang.String;@2e060819,[Ljava.lang.String;@42c28305,[Ljava.lang.String;@2184b4f4),Annotation([Ljava.lang.String;@7d199c68,[Ljava.lang.String;@63411512,[Ledu.cmu.lti.nlp.amr.Entity;@35cd68d4))
AMR:
(x7 / 短暂-01, unit, x8 / 花卉)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 3,096 microseconds
Sentence: “ 什么 叫 短暂 ？ ”

Oracle Span 1:  短暂 => 短暂-01
Spans:
Span 3-4:  短暂 => 短暂-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  短暂 => 短暂-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	短暂	_	VA	VA	_	3	ccomp	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 短暂-01 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(3,4,List(0),短暂,短暂-01,false)),Map(0 -> 短暂-01),Map(x7 -> 短暂-01))),[Ljava.lang.String;@316a598d,Annotation([Ljava.lang.String;@216914,[Ljava.lang.String;@6ba30587,[Ljava.lang.String;@35764bef),Annotation([Ljava.lang.String;@5633dafd,[Ljava.lang.String;@5d5160e6,[Ledu.cmu.lti.nlp.amr.Dependency;@2eadc9f6),Annotation([Ljava.lang.String;@2903c6ff,[Ljava.lang.String;@61af1510,[Ljava.lang.String;@37af1f93),Annotation([Ljava.lang.String;@778d82e9,[Ljava.lang.String;@408e96d9,[Ledu.cmu.lti.nlp.amr.Entity;@59901c4d))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,584 microseconds
Sentence: “ 地理学 书籍 是 所有 书 中 最 严肃 的 书 。 ” 地理学家 说道 ，

Oracle Span 1:  严肃 => 严肃
Oracle Span 2:  书 => 书
Oracle Span 3:  书 => 书
Oracle Span 4:  书籍 => 书籍
Oracle Span 5:  地理学 => 地理学
Oracle Span 6:  地理学家 => 地理学家
Oracle Span 7:  所有 => 所有
Oracle Span 8:  最 => 最
Oracle Span 9:  说道 => 说道-01
Spans:
Span 8-9:  严肃 => 严肃
Span 5-6:  书 => 书
Span 10-11:  书 => 书
Span 2-3:  书籍 => 书籍
Span 1-2:  地理学 => 地理学
Span 13-14:  地理学家 => 地理学家
Span 4-5:  所有 => 所有
Span 7-8:  最 => 最
Span 14-15:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  严肃 => 严肃
Oracle Span 5-6:  书 => 书
Oracle Span 10-11:  书 => 书
Oracle Span 2-3:  书籍 => 书籍
Oracle Span 1-2:  地理学 => 地理学
Oracle Span 13-14:  地理学家 => 地理学家
Oracle Span 4-5:  所有 => 所有
Oracle Span 7-8:  最 => 最
Oracle Span 14-15:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	地理学	_	AD	AD	_	4	advmod	_	_
3	书籍	_	NN	NN	_	4	prep	_	_
4	是	_	VC	VC	_	0	root	_	_
5	所有	_	DT	DT	_	6	det	_	_
6	书	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	11	dep	_	_
8	最	_	AD	AD	_	9	advmod	_	_
9	严肃	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	书	_	NN	NN	_	4	attr	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_
14	地理学家	_	AD	AD	_	15	advmod	_	_
15	说道	_	VV	VV	_	4	dep	_	_
16	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 地理学家)
(x0 / 说道-01, arg1, x3 / 书)
(x3 / 书, domain, x9 / 书籍)
(x3 / 书, mod, x4 / 严肃)
(x4 / 严肃, degree, x5 / 最)
(x5 / 最, prep-among, x6 / 书)
(x6 / 书, mod, x7 / 所有)
(x9 / 书籍, topic, x10 / 地理学)

Input(Some(Graph((说道-01 :arg1 (书 :domain (书籍 :topic 地理学) :mod (严肃 :degree (最 :prep-among (书 :mod 所有)))) :arg0 地理学家),ArrayBuffer(Span(14,15,List(0),说道,说道-01,false), Span(5,6,List(1),书,书,false), Span(2,3,List(2),书籍,书籍,false), Span(1,2,List(3),地理学,地理学,false), Span(8,9,List(4),严肃,严肃,false), Span(7,8,List(5),最,最,false), Span(10,11,List(6),书,书,false), Span(4,5,List(7),所有,所有,false), Span(13,14,List(8),地理学家,地理学家,false)),Map(2 -> 书籍, 5 -> 最, 8 -> 地理学家, 7 -> 所有, 1 -> 书, 4 -> 严肃, 6 -> 书, 0 -> 说道-01, 3 -> 地理学),Map(x2 -> 地理学家, x10 -> 地理学, x5 -> 最, x7 -> 所有, x4 -> 严肃, x3 -> 书, x6 -> 书, x9 -> 书籍, x0 -> 说道-01))),[Ljava.lang.String;@168cd36b,Annotation([Ljava.lang.String;@d8d9199,[Ljava.lang.String;@3901f6af,[Ljava.lang.String;@602ae7b6),Annotation([Ljava.lang.String;@10cd6753,[Ljava.lang.String;@71ad3d8a,[Ledu.cmu.lti.nlp.amr.Dependency;@47af099e),Annotation([Ljava.lang.String;@700f518a,[Ljava.lang.String;@b835727,[Ljava.lang.String;@13da7ab0),Annotation([Ljava.lang.String;@2c8662ac,[Ljava.lang.String;@260ff5b7,[Ledu.cmu.lti.nlp.amr.Entity;@3724b43e))
AMR:
(x0 / 说道-01, example, x2 / 地理学家)
(x0 / 说道-01, time, x6 / 书)
(x3 / 书, domain, x9 / 书籍)
(x3 / 书, mod, x7 / 所有)
(x4 / 严肃, degree, x5 / 最)
(x5 / 最, prep-among, x3 / 书)
(x6 / 书, mod, x4 / 严肃)
(x9 / 书籍, topic, x10 / 地理学)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 23,701 microseconds
Sentence: “ 这 类 书 是 从不 会 过时 的 。

Oracle Span 1:  书 => 书
Oracle Span 2:  会 => 会-02
Oracle Span 3:  类 => 类
Oracle Span 4:  过时 => 过时-01
Oracle Span 5:  这 => 这
Spans:
Span 3-4:  书 => 书
Span 6-7:  会 => 会-02
Span 2-3:  类 => 类
Span 7-8:  过时 => 过时-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  书 => 书
Oracle Span 6-7:  会 => 会-02
Oracle Span 2-3:  类 => 类
Oracle Span 7-8:  过时 => 过时-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	DT	DT	_	4	det	_	_
3	类	_	M	M	_	2	clf	_	_
4	书	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	从不	_	AD	AD	_	8	advmod	_	_
7	会	_	VV	VV	_	8	dep	_	_
8	过时	_	VV	VV	_	5	attr	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 过时-01, arg0, x11 / 书)
(x11 / 书, mod, x12 / 这)
(x11 / 书, unit, x13 / 类)
(x8 / 会-02, arg0, x10 / 过时-01)

Input(Some(Graph((say :arg1 (会-02 :manner 从 :arg0 (过时-01 :arg0 (书 :unit 类 :mod 这)) :polarity -)),ArrayBuffer(Span(6,7,List(0),会,会-02,false), Span(7,8,List(1),过时,过时-01,false), Span(3,4,List(2),书,书,false), Span(2,3,List(3),类,类,false), Span(1,2,List(4),这,这,false)),Map(2 -> 书, 1 -> 过时-01, 4 -> 这, 0 -> 会-02, 3 -> 类),Map(x10 -> 过时-01, x13 -> 类, x8 -> 会-02, x12 -> 这, x11 -> 书))),[Ljava.lang.String;@77eb5790,Annotation([Ljava.lang.String;@68e7c8c3,[Ljava.lang.String;@319c3a25,[Ljava.lang.String;@238bfd6c),Annotation([Ljava.lang.String;@ef1695a,[Ljava.lang.String;@58860997,[Ledu.cmu.lti.nlp.amr.Dependency;@81b5db0),Annotation([Ljava.lang.String;@7487b142,[Ljava.lang.String;@7139bd31,[Ljava.lang.String;@199bc830),Annotation([Ljava.lang.String;@4b3fe06e,[Ljava.lang.String;@27b45ea,[Ledu.cmu.lti.nlp.amr.Entity;@3e17a0a1))
AMR:
(x11 / 书, mod, x12 / 这)
(x11 / 书, topic, x10 / 过时-01)
(x11 / 书, unit, x13 / 类)
(x8 / 会-02, prep-through, x10 / 过时-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 8,959 microseconds
Sentence: 很少 会 发生 一 座 山 变换 了 位置 ，

Oracle Span 1:  会 => 会-02
Oracle Span 2:  位置 => 位置
Oracle Span 3:  发生 => 发生-01
Oracle Span 4:  变换 => 变换-01
Oracle Span 5:  山 => 山
Spans:
Span 1-2:  会 => 会-02
Span 8-9:  位置 => 位置
Span 2-3:  发生 => 发生-01
Span 6-7:  变换 => 变换-01
Span 5-6:  山 => 山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-02
Oracle Span 8-9:  位置 => 位置
Oracle Span 2-3:  发生 => 发生-01
Oracle Span 6-7:  变换 => 变换-01
Oracle Span 5-6:  山 => 山

Dependencies:
1	很少	_	AD	AD	_	3	advmod	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	发生	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	clf	_	_
6	山	_	NN	NN	_	3	dobj	_	_
7	变换	_	VV	VV	_	3	conj	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	位置	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x1 / 会-02, arg0, x2 / 发生-01)
(x2 / 发生-01, arg0, x3 / 变换-01)
(x3 / 变换-01, arg0, x4 / 山)
(x3 / 变换-01, arg1, x6 / 位置)

Input(Some(Graph((会-02 :arg0 (发生-01 :frequency (少-01 :degree 很) :arg0 (变换-01 :arg1 位置 :arg0 (山 :quant 1)))),ArrayBuffer(Span(1,2,List(0),会,会-02,false), Span(2,3,List(1),发生,发生-01,false), Span(6,7,List(2),变换,变换-01,false), Span(8,9,List(3),位置,位置,false), Span(5,6,List(4),山,山,false)),Map(2 -> 变换-01, 1 -> 发生-01, 4 -> 山, 0 -> 会-02, 3 -> 位置),Map(x2 -> 发生-01, x1 -> 会-02, x4 -> 山, x3 -> 变换-01, x6 -> 位置))),[Ljava.lang.String;@790a251b,Annotation([Ljava.lang.String;@4d8286c4,[Ljava.lang.String;@150ede8b,[Ljava.lang.String;@161f6623),Annotation([Ljava.lang.String;@3e15bb06,[Ljava.lang.String;@6778aea6,[Ledu.cmu.lti.nlp.amr.Dependency;@4e1ce44),Annotation([Ljava.lang.String;@69228e85,[Ljava.lang.String;@7a7cc52c,[Ljava.lang.String;@5853495b),Annotation([Ljava.lang.String;@524a2ffb,[Ljava.lang.String;@2f61d591,[Ledu.cmu.lti.nlp.amr.Entity;@332820f4))
AMR:
(x1 / 会-02, op, x2 / 发生-01)
(x2 / 发生-01, ARG2, x3 / 变换-01)
(x3 / 变换-01, manner, x4 / 山)
(x3 / 变换-01, mod, x6 / 位置)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 10,022 microseconds
Sentence: 很少 会 出现 一 个 海洋 干涸 的 现象 。

Oracle Span 1:  会 => 会-01
Oracle Span 2:  出现 => 出现-01
Oracle Span 3:  干涸 => 干涸-01
Oracle Span 4:  海洋 => 海洋
Oracle Span 5:  现象 => 现象
Spans:
Span 1-2:  会 => 会-01
Span 2-3:  出现 => 出现-01
Span 6-7:  干涸 => 干涸-01
Span 5-6:  海洋 => 海洋
Span 8-9:  现象 => 现象

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-01
Oracle Span 2-3:  出现 => 出现-01
Oracle Span 6-7:  干涸 => 干涸-01
Oracle Span 5-6:  海洋 => 海洋
Oracle Span 8-9:  现象 => 现象

Dependencies:
1	很少	_	NN	NN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	出现	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	7	clf	_	_
6	海洋	_	NN	NN	_	7	nn	_	_
7	干涸	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	现象	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 出现-01)
(x2 / 出现-01, arg1, x3 / 现象)
(x3 / 现象, mod, x4 / 干涸-01)
(x4 / 干涸-01, arg0, x5 / 海洋)

Input(Some(Graph((会-01 :arg0 (出现-01 :arg1 (现象 :frequency (少-01 :degree 很) :mod (干涸-01 :arg0 (海洋 :quant 1))))),ArrayBuffer(Span(1,2,List(0),会,会-01,false), Span(2,3,List(1),出现,出现-01,false), Span(8,9,List(2),现象,现象,false), Span(6,7,List(3),干涸,干涸-01,false), Span(5,6,List(4),海洋,海洋,false)),Map(2 -> 现象, 1 -> 出现-01, 4 -> 海洋, 0 -> 会-01, 3 -> 干涸-01),Map(x2 -> 出现-01, x5 -> 海洋, x4 -> 干涸-01, x3 -> 现象, x0 -> 会-01))),[Ljava.lang.String;@7173ae5b,Annotation([Ljava.lang.String;@72456279,[Ljava.lang.String;@53a9fcfd,[Ljava.lang.String;@21f459fc),Annotation([Ljava.lang.String;@4d192aef,[Ljava.lang.String;@1416cf9f,[Ledu.cmu.lti.nlp.amr.Dependency;@84487f4),Annotation([Ljava.lang.String;@bfc14b9,[Ljava.lang.String;@fb6097b,[Ljava.lang.String;@2dfe5525),Annotation([Ljava.lang.String;@1290c49,[Ljava.lang.String;@6a9b9909,[Ledu.cmu.lti.nlp.amr.Entity;@55d9b8f0))
AMR:
(x0 / 会-01, op, x2 / 出现-01)
(x2 / 出现-01, snt1, x3 / 现象)
(x3 / 现象, mod, x4 / 干涸-01)
(x4 / 干涸-01, location, x5 / 海洋)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 10,737 microseconds
Sentence: 我们 要 写 永恒 的 东西 。 ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  写 => 写-01
Oracle Span 3:  我们 => 我们
Oracle Span 4:  永恒 => 永恒-01
Oracle Span 5:  要 => 要-05
Spans:
Span 5-6:  东西 => 东西
Span 2-3:  写 => 写-01
Span 0-1:  我们 => 我们
Span 3-4:  永恒 => 永恒-01
Span 1-2:  要 => 要-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  东西 => 东西
Oracle Span 2-3:  写 => 写-01
Oracle Span 0-1:  我们 => 我们
Oracle Span 3-4:  永恒 => 永恒-01
Oracle Span 1-2:  要 => 要-05

Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	写	_	VV	VV	_	0	root	_	_
4	永恒	_	VA	VA	_	6	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	东西	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 东西, mod, x12 / 永恒-01)
(x8 / 要-05, arg0, x9 / 写-01)
(x9 / 写-01, arg0, x10 / 我们)
(x9 / 写-01, arg1, x11 / 东西)

Input(Some(Graph((say :arg1 (要-05 :arg0 (写-01 :arg1 (东西 :mod 永恒-01) :arg0 我们))),ArrayBuffer(Span(1,2,List(0),要,要-05,false), Span(2,3,List(1),写,写-01,false), Span(5,6,List(2),东西,东西,false), Span(3,4,List(3),永恒,永恒-01,false), Span(0,1,List(4),我们,我们,false)),Map(2 -> 东西, 1 -> 写-01, 4 -> 我们, 0 -> 要-05, 3 -> 永恒-01),Map(x10 -> 我们, x8 -> 要-05, x12 -> 永恒-01, x11 -> 东西, x9 -> 写-01))),[Ljava.lang.String;@a518813,Annotation([Ljava.lang.String;@43d38654,[Ljava.lang.String;@75361cf6,[Ljava.lang.String;@6d303498),Annotation([Ljava.lang.String;@6ba7383d,[Ljava.lang.String;@3419e23b,[Ledu.cmu.lti.nlp.amr.Dependency;@710d89e2),Annotation([Ljava.lang.String;@1d75e7af,[Ljava.lang.String;@4fc142ec,[Ljava.lang.String;@34b27915),Annotation([Ljava.lang.String;@29eda4f8,[Ljava.lang.String;@1b9776f5,[Ledu.cmu.lti.nlp.amr.Entity;@5e048149))
AMR:
(x11 / 东西, mod, x12 / 永恒-01)
(x8 / 要-05, ARG4, x10 / 我们)
(x9 / 写-01, ARG3, x12 / 永恒-01)
(x9 / 写-01, ARG4, x8 / 要-05)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,159 microseconds
Sentence: “ 但是 熄灭 的 火山 也 可能 会 再 复苏 的 。 ” 小 王子 打断 了 地理学家 。

Oracle Span 1:  也 => 也
Oracle Span 2:  会 => 会-02
Oracle Span 3:  再 => 再-01
Oracle Span 4:  可能 => 可能-02
Oracle Span 5:  地理学家 => 地理学家
Oracle Span 6:  复苏 => 复苏-01
Oracle Span 7:  小 => 小-01
Oracle Span 8:  打断 => 打断-01
Oracle Span 9:  火山 => 火山
Oracle Span 10:  熄灭 => 熄灭-01
Oracle Span 11:  王子 => 王子
Spans:
Span 5-6:  也 => 也
Span 7-8:  会 => 会-02
Span 8-9:  再 => 再-01
Span 6-7:  可能 => 可能-02
Span 17-18:  地理学家 => 地理学家
Span 9-10:  复苏 => 复苏-01
Span 13-14:  小 => 小-01
Span 15-16:  打断 => 打断-01
Span 4-5:  火山 => 火山
Span 2-3:  熄灭 => 熄灭-01
Span 14-15:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 7-8:  会 => 会-02
Oracle Span 8-9:  再 => 再-01
Oracle Span 6-7:  可能 => 可能-02
Oracle Span 17-18:  地理学家 => 地理学家
Oracle Span 9-10:  复苏 => 复苏-01
Oracle Span 13-14:  小 => 小-01
Oracle Span 15-16:  打断 => 打断-01
Oracle Span 4-5:  火山 => 火山
Oracle Span 2-3:  熄灭 => 熄灭-01
Oracle Span 14-15:  王子 => 王子

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	3	advmod	_	_
3	熄灭	_	VV	VV	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	火山	_	NN	NN	_	7	nsubj	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	可能	_	VV	VV	_	15	vmod	_	_
8	会	_	VV	VV	_	10	mmod	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	复苏	_	VV	VV	_	7	dobj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	。	_	PU	PU	_	7	punct	_	_
13	”	_	PU	PU	_	7	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	16	nsubj	_	_
16	打断	_	VV	VV	_	0	root	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	地理学家	_	NN	NN	_	16	dobj	_	_
19	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 打断-01, arg0, x2 / 王子)
(x0 / 打断-01, arg1, x4 / 地理学家)
(x15 / 可能-02, arg0, x16 / 会-02)
(x15 / 可能-02, manner, x21 / 也)
(x16 / 会-02, arg0, x17 / 复苏-01)
(x17 / 复苏-01, arg0, x19 / 火山)
(x17 / 复苏-01, manner, x18 / 再-01)
(x19 / 火山, mod, x20 / 熄灭-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((打断-01 :arg1 地理学家 :arg0 (王子 :arg0-of (say :arg1 (contrast :arg2 (可能-02 :manner 也 :arg0 (会-02 :arg0 (复苏-01 :arg0 (火山 :mod 熄灭-01) :manner 再-01))))) :mod 小-01)),ArrayBuffer(Span(15,16,List(0),打断,打断-01,false), Span(17,18,List(1),地理学家,地理学家,false), Span(14,15,List(2),王子,王子,false), Span(6,7,List(3),可能,可能-02,false), Span(5,6,List(4),也,也,false), Span(7,8,List(5),会,会-02,false), Span(9,10,List(6),复苏,复苏-01,false), Span(4,5,List(7),火山,火山,false), Span(2,3,List(8),熄灭,熄灭-01,false), Span(8,9,List(9),再,再-01,false), Span(13,14,List(10),小,小-01,false)),Map(2 -> 王子, 5 -> 会-02, 8 -> 熄灭-01, 7 -> 火山, 1 -> 地理学家, 4 -> 也, 6 -> 复苏-01, 9 -> 再-01, 0 -> 打断-01, 10 -> 小-01, 3 -> 可能-02),Map(x16 -> 会-02, x19 -> 火山, x2 -> 王子, x21 -> 也, x15 -> 可能-02, x18 -> 再-01, x4 -> 地理学家, x3 -> 小-01, x20 -> 熄灭-01, x17 -> 复苏-01, x0 -> 打断-01))),[Ljava.lang.String;@79d9214d,Annotation([Ljava.lang.String;@3d5790ea,[Ljava.lang.String;@1dd7796b,[Ljava.lang.String;@67a3bd51),Annotation([Ljava.lang.String;@57402ba1,[Ljava.lang.String;@56913163,[Ledu.cmu.lti.nlp.amr.Dependency;@702b06fb),Annotation([Ljava.lang.String;@a18649a,[Ljava.lang.String;@5c534b5b,[Ljava.lang.String;@396639b),Annotation([Ljava.lang.String;@2b22a1cc,[Ljava.lang.String;@62573c86,[Ledu.cmu.lti.nlp.amr.Entity;@2418ba04))
AMR:
(x0 / 打断-01, beneficiary, x2 / 王子)
(x0 / 打断-01, prep-through, x4 / 地理学家)
(x15 / 可能-02, location, x19 / 火山)
(x15 / 可能-02, manner, x21 / 也)
(x16 / 会-02, manner, x18 / 再-01)
(x16 / 会-02, time, x15 / 可能-02)
(x17 / 复苏-01, manner, x18 / 再-01)
(x17 / 复苏-01, purpose, x0 / 打断-01)
(x2 / 王子, mod, x3 / 小-01)
(x20 / 熄灭-01, subset, x19 / 火山)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 34,980 microseconds
Sentence: “ 什么 叫 短暂 ？ ”

Oracle Span 1:  短暂 => 短暂-01
Spans:
Span 3-4:  短暂 => 短暂-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  短暂 => 短暂-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	短暂	_	VA	VA	_	3	ccomp	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 短暂-01 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(3,4,List(0),短暂,短暂-01,false)),Map(0 -> 短暂-01),Map(x7 -> 短暂-01))),[Ljava.lang.String;@14229fa7,Annotation([Ljava.lang.String;@2ab0702e,[Ljava.lang.String;@7158daf2,[Ljava.lang.String;@10f19647),Annotation([Ljava.lang.String;@102efc59,[Ljava.lang.String;@3936df72,[Ledu.cmu.lti.nlp.amr.Dependency;@e8e0dec),Annotation([Ljava.lang.String;@12d1f1d4,[Ljava.lang.String;@75fa1be3,[Ljava.lang.String;@7a389761),Annotation([Ljava.lang.String;@42714a7,[Ljava.lang.String;@19650aa6,[Ledu.cmu.lti.nlp.amr.Entity;@3ce53f6a))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,567 microseconds
Sentence: “ 火山 是 熄灭 了 的 也 好 ， 苏醒 的 也 好 ， 这 对 我们 这些 人 来讲 都 是 一 回 事 。 ” 地理学家 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  地理学家 => 地理学家
Oracle Span 3:  来讲 => 来讲-01
Oracle Span 4:  火山 => 火山
Oracle Span 5:  熄灭 => 熄灭-01
Oracle Span 6:  苏醒 => 苏醒-01
Oracle Span 7:  说 => 说-01
Oracle Span 8:  这些 => 这些
Spans:
Span 18-19:  人 => 人
Span 27-28:  地理学家 => 地理学家
Span 19-20:  来讲 => 来讲-01
Span 1-2:  火山 => 火山
Span 3-4:  熄灭 => 熄灭-01
Span 9-10:  苏醒 => 苏醒-01
Span 28-29:  说 => 说-01
Span 17-18:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  人 => 人
Oracle Span 27-28:  地理学家 => 地理学家
Oracle Span 19-20:  来讲 => 来讲-01
Oracle Span 1-2:  火山 => 火山
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 9-10:  苏醒 => 苏醒-01
Oracle Span 28-29:  说 => 说-01
Oracle Span 17-18:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	火山	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	熄灭	_	VV	VV	_	3	attr	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	也	_	AD	AD	_	8	advmod	_	_
8	好	_	VA	VA	_	3	conj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	苏醒	_	VA	VA	_	13	nsubj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	也	_	AD	AD	_	13	advmod	_	_
13	好	_	VA	VA	_	3	conj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	这	_	PN	PN	_	22	nsubj	_	_
16	对	_	P	P	_	22	prep	_	_
17	我们	_	PN	PN	_	20	nn	_	_
18	这些	_	DT	DT	_	19	det	_	_
19	人	_	NN	NN	_	20	nn	_	_
20	来讲	_	NN	NN	_	16	pobj	_	_
21	都	_	AD	AD	_	22	advmod	_	_
22	是	_	VC	VC	_	3	conj	_	_
23	一	_	CD	CD	_	24	nummod	_	_
24	回	_	M	M	_	25	clf	_	_
25	事	_	NN	NN	_	22	attr	_	_
26	。	_	PU	PU	_	22	punct	_	_
27	”	_	PU	PU	_	3	punct	_	_
28	地理学家	_	AD	AD	_	29	advmod	_	_
29	说	_	VV	VV	_	3	dep	_	_
30	,	_	PU	PU	_	29	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 来讲-01)
(x20 / 熄灭-01, arg1, x21 / 火山)
(x24 / 人, mod, x25 / 这些)
(x3 / 来讲-01, arg1, x24 / 人)

Input(Some(Graph((说-01 :arg1 (来讲-01 :arg2 一回事 :arg1 (人 :mod x2 :mod 这些) :arg0 (or :op (熄灭-01 :arg1 火山) :op (苏醒-01 :arg0 x21))) :arg0 地理学家),ArrayBuffer(Span(28,29,List(0),说,说-01,false), Span(19,20,List(1),来讲,来讲-01,false), Span(18,19,List(2),人,人,false), Span(17,18,List(3),这些,这些,false), Span(3,4,List(4),熄灭,熄灭-01,false), Span(1,2,List(5),火山,火山,false), Span(9,10,List(6),苏醒,苏醒-01,false), Span(27,28,List(7),地理学家,地理学家,false)),Map(2 -> 人, 5 -> 火山, 7 -> 地理学家, 1 -> 来讲-01, 4 -> 熄灭-01, 6 -> 苏醒-01, 0 -> 说-01, 3 -> 这些),Map(x22 -> 苏醒-01, x2 -> 地理学家, x25 -> 这些, x21 -> 火山, x24 -> 人, x3 -> 来讲-01, x20 -> 熄灭-01, x0 -> 说-01))),[Ljava.lang.String;@2d82408,Annotation([Ljava.lang.String;@3ee69ad8,[Ljava.lang.String;@f679798,[Ljava.lang.String;@1a6cf771),Annotation([Ljava.lang.String;@59d77850,[Ljava.lang.String;@53ed09e8,[Ledu.cmu.lti.nlp.amr.Dependency;@60859f5a),Annotation([Ljava.lang.String;@1daf3b44,[Ljava.lang.String;@7fd8c559,[Ljava.lang.String;@44c13103),Annotation([Ljava.lang.String;@8f2098e,[Ljava.lang.String;@6c6366cf,[Ledu.cmu.lti.nlp.amr.Entity;@55a88417))
AMR:
(x0 / 说-01, degree, x3 / 来讲-01)
(x0 / 说-01, example, x2 / 地理学家)
(x20 / 熄灭-01, location, x21 / 火山)
(x20 / 熄灭-01, polite, x22 / 苏醒-01)
(x24 / 人, location, x3 / 来讲-01)
(x24 / 人, mod, x25 / 这些)
(x3 / 来讲-01, location, x22 / 苏醒-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 23,763 microseconds
Sentence: “ 对 我们 来说 ， 重要 的 是 山 。

Oracle Span 1:  山 => 山
Oracle Span 2:  我们 => 我们
Oracle Span 3:  来说 => 来说-01
Oracle Span 4:  重要 => 重要-01
Spans:
Span 8-9:  山 => 山
Span 2-3:  我们 => 我们
Span 3-4:  来说 => 来说-01
Span 5-6:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  山 => 山
Oracle Span 2-3:  我们 => 我们
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 5-6:  重要 => 重要-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	对	_	P	P	_	4	prep	_	_
3	我们	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	8	conj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	重要	_	VA	VA	_	8	top	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	是	_	VC	VC	_	0	root	_	_
9	山	_	NN	NN	_	8	attr	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x8 / 来说-01, arg0, x9 / 山)
(x8 / 来说-01, arg1, x10 / 我们)
(x8 / 来说-01, arg2, x11 / 重要-01)

Input(Some(Graph((say :arg1 (来说-01 :arg2 重要-01 :arg1 我们 :arg0 山)),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(5,6,List(1),重要,重要-01,false), Span(2,3,List(2),我们,我们,false), Span(8,9,List(3),山,山,false)),Map(2 -> 我们, 1 -> 重要-01, 0 -> 来说-01, 3 -> 山),Map(x10 -> 我们, x8 -> 来说-01, x11 -> 重要-01, x9 -> 山))),[Ljava.lang.String;@18acfe88,Annotation([Ljava.lang.String;@8a2a6a,[Ljava.lang.String;@772861aa,[Ljava.lang.String;@6631cb64),Annotation([Ljava.lang.String;@19962194,[Ljava.lang.String;@481e91b6,[Ledu.cmu.lti.nlp.amr.Dependency;@7c8f9c2e),Annotation([Ljava.lang.String;@140d1230,[Ljava.lang.String;@3cbf1ba4,[Ljava.lang.String;@10bea4),Annotation([Ljava.lang.String;@7e2c64,[Ljava.lang.String;@7c1e32c9,[Ledu.cmu.lti.nlp.amr.Entity;@383864d5))
AMR:
(x11 / 重要-01, location, x9 / 山)
(x8 / 来说-01, example, x10 / 我们)
(x8 / 来说-01, example, x11 / 重要-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,586 microseconds
Sentence: 山 是 不 会 变换 位置 的 。 ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  位置 => 位置
Oracle Span 3:  变换 => 变换-01
Oracle Span 4:  山 => 山
Spans:
Span 3-4:  会 => 会-02
Span 5-6:  位置 => 位置
Span 4-5:  变换 => 变换-01
Span 0-1:  山 => 山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-02
Oracle Span 5-6:  位置 => 位置
Oracle Span 4-5:  变换 => 变换-01
Oracle Span 0-1:  山 => 山

Dependencies:
1	山	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	变换	_	VV	VV	_	2	attr	_	_
6	位置	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 变换-01, arg0, x11 / 山)
(x10 / 变换-01, arg1, x12 / 位置)
(x8 / 会-02, arg0, x10 / 变换-01)

Input(Some(Graph((say :arg1 (会-02 :arg0 (变换-01 :arg1 位置 :arg0 山) :polarity -)),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(4,5,List(1),变换,变换-01,false), Span(5,6,List(2),位置,位置,false), Span(0,1,List(3),山,山,false)),Map(2 -> 位置, 1 -> 变换-01, 0 -> 会-02, 3 -> 山),Map(x10 -> 变换-01, x8 -> 会-02, x12 -> 位置, x11 -> 山))),[Ljava.lang.String;@3dd818e8,Annotation([Ljava.lang.String;@4cb40e3b,[Ljava.lang.String;@41b1f51e,[Ljava.lang.String;@3a543f31),Annotation([Ljava.lang.String;@47b67fcb,[Ljava.lang.String;@2b9f74d0,[Ledu.cmu.lti.nlp.amr.Dependency;@65c86db8),Annotation([Ljava.lang.String;@7efe7b87,[Ljava.lang.String;@ac20bb4,[Ljava.lang.String;@5a2bd7c8),Annotation([Ljava.lang.String;@7ca8d498,[Ljava.lang.String;@7187bac9,[Ledu.cmu.lti.nlp.amr.Entity;@6b8280e6))
AMR:
(x10 / 变换-01, time, x11 / 山)
(x12 / 位置, mod, x10 / 变换-01)
(x8 / 会-02, prep-against, x10 / 变换-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 6,120 microseconds
Sentence: “ 但是 ， ‘ 短暂 ’ 是 什么 意思 ？ ” 小 王子 再三 地 问道 。 他 一旦 提出 一 个 问题 是 从 不 放过 的 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再三 => 再三
Oracle Span 3:  小 => 小-01
Oracle Span 4:  提出 => 提出-01
Oracle Span 5:  放过 => 放过-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  短暂 => 短暂
Oracle Span 8:  问道 => 问道-01
Oracle Span 9:  问题 => 问题
Spans:
Span 17-18:  他 => 他
Span 13-14:  再三 => 再三
Span 11-12:  小 => 小-01
Span 19-20:  提出 => 提出-01
Span 26-27:  放过 => 放过-01
Span 12-13:  王子 => 王子
Span 4-5:  短暂 => 短暂
Span 15-16:  问道 => 问道-01
Span 22-23:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  他 => 他
Oracle Span 13-14:  再三 => 再三
Oracle Span 11-12:  小 => 小-01
Oracle Span 19-20:  提出 => 提出-01
Oracle Span 26-27:  放过 => 放过-01
Oracle Span 12-13:  王子 => 王子
Oracle Span 4-5:  短暂 => 短暂
Oracle Span 15-16:  问道 => 问道-01
Oracle Span 22-23:  问题 => 问题

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	7	advmod	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	‘	_	PU	PU	_	5	punct	_	_
5	短暂	_	VA	VA	_	7	top	_	_
6	’	_	PU	PU	_	5	punct	_	_
7	是	_	VC	VC	_	16	dep	_	_
8	什么	_	PN	PN	_	9	nsubj	_	_
9	意思	_	NN	NN	_	7	dep	_	_
10	？	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	15	nn	_	_
14	再三	_	CD	CD	_	15	nummod	_	_
15	地	_	NN	NN	_	16	nsubj	_	_
16	问道	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_
18	他	_	PN	PN	_	20	nsubj	_	_
19	一旦	_	CS	CS	_	20	advmod	_	_
20	提出	_	VV	VV	_	16	conj	_	_
21	一	_	CD	CD	_	22	nummod	_	_
22	个	_	M	M	_	23	clf	_	_
23	问题	_	NN	NN	_	24	top	_	_
24	是	_	VC	VC	_	20	ccomp	_	_
25	从	_	AD	AD	_	27	advmod	_	_
26	不	_	AD	AD	_	27	neg	_	_
27	放过	_	VV	VV	_	24	attr	_	_
28	的	_	DEC	DEC	_	27	cpm	_	_
29	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x14 / 提出-01, arg0, x15 / 他)
(x14 / 提出-01, arg1, x16 / 问题)
(x5 / 问道-01, arg0, x7 / 王子)
(x5 / 问道-01, manner, x6 / 再三)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (问道-01 :mode interrogative :arg1 (contrast :arg2 (amr-unknown :domain 短暂)) :arg0 (王子 :mod 小-01) :manner 再三) :snt2 (condition :arg1 (提出-01 :arg1 (问题 :quant 1) :arg0 他) :arg2 (放过-01 :arg1 x16 :arg0 x15 :manner 从不))),ArrayBuffer(Span(15,16,List(0),问道,问道-01,false), Span(4,5,List(1),短暂,短暂,false), Span(12,13,List(2),王子,王子,false), Span(11,12,List(3),小,小-01,false), Span(13,14,List(4),再三,再三,false), Span(19,20,List(5),提出,提出-01,false), Span(22,23,List(6),问题,问题,false), Span(17,18,List(7),他,他,false), Span(26,27,List(8),放过,放过-01,false)),Map(2 -> 王子, 5 -> 提出-01, 8 -> 放过-01, 7 -> 他, 1 -> 短暂, 4 -> 再三, 6 -> 问题, 0 -> 问道-01, 3 -> 小-01),Map(x16 -> 问题, x5 -> 问道-01, x8 -> 小-01, x15 -> 他, x7 -> 王子, x18 -> 放过-01, x11 -> 短暂, x6 -> 再三, x14 -> 提出-01))),[Ljava.lang.String;@6f139fc9,Annotation([Ljava.lang.String;@55259aa7,[Ljava.lang.String;@19382338,[Ljava.lang.String;@66420549),Annotation([Ljava.lang.String;@15dc339f,[Ljava.lang.String;@6cd56321,[Ledu.cmu.lti.nlp.amr.Dependency;@34acbc60),Annotation([Ljava.lang.String;@42b28ff1,[Ljava.lang.String;@36061cf3,[Ljava.lang.String;@718dbd79),Annotation([Ljava.lang.String;@20134094,[Ljava.lang.String;@76889e60,[Ledu.cmu.lti.nlp.amr.Entity;@706fe5c6))
AMR:
(x14 / 提出-01, manner, x5 / 问道-01)
(x14 / 提出-01, prep-through, x15 / 他)
(x14 / 提出-01, prep-through, x16 / 问题)
(x18 / 放过-01, topic, x16 / 问题)
(x5 / 问道-01, degree, x11 / 短暂)
(x5 / 问道-01, manner, x6 / 再三)
(x6 / 再三, beneficiary, x7 / 王子)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 31,053 microseconds
Sentence: “ 意思 就 是 ： 有 很 快 就 会 消失 的 危险 。 ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  危险 => 危险-01
Oracle Span 3:  就 => 就
Oracle Span 4:  很 => 很
Oracle Span 5:  快 => 快-01
Oracle Span 6:  有 => 有-05
Oracle Span 7:  消失 => 消失-01
Spans:
Span 9-10:  会 => 会-02
Span 12-13:  危险 => 危险-01
Span 2-3:  就 => 就
Span 6-7:  很 => 很
Span 7-8:  快 => 快-01
Span 5-6:  有 => 有-05
Span 10-11:  消失 => 消失-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  会 => 会-02
Oracle Span 12-13:  危险 => 危险-01
Oracle Span 2-3:  就 => 就
Oracle Span 6-7:  很 => 很
Oracle Span 7-8:  快 => 快-01
Oracle Span 5-6:  有 => 有-05
Oracle Span 10-11:  消失 => 消失-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	意思	_	NN	NN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	有	_	VE	VE	_	4	conj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	快	_	VA	VA	_	13	rcmod	_	_
9	就	_	AD	AD	_	11	advmod	_	_
10	会	_	VV	VV	_	11	dep	_	_
11	消失	_	VV	VV	_	8	dep	_	_
12	的	_	DEC	DEC	_	8	cpm	_	_
13	危险	_	NN	NN	_	6	dobj	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 有-05, arg1, x13 / 危险-01)
(x13 / 危险-01, arg0, x14 / 消失-01)
(x15 / 会-02, arg0, x14 / 消失-01)
(x15 / 会-02, manner, x16 / 就)
(x15 / 会-02, manner, x17 / 快-01)
(x17 / 快-01, degree, x18 / 很)

Input(Some(Graph((say :arg1 (mean :arg1 (有-05 :arg1 (危险-01 :arg0 (消失-01 :arg0-of (会-02 :manner (快-01 :degree 很) :manner 就)))))),ArrayBuffer(Span(5,6,List(0),有,有-05,false), Span(12,13,List(1),危险,危险-01,false), Span(10,11,List(2),消失,消失-01,false), Span(9,10,List(3),会,会-02,false), Span(7,8,List(4),快,快-01,false), Span(6,7,List(5),很,很,false), Span(2,3,List(6),就,就,false)),Map(2 -> 消失-01, 5 -> 很, 1 -> 危险-01, 4 -> 快-01, 6 -> 就, 0 -> 有-05, 3 -> 会-02),Map(x16 -> 就, x13 -> 危险-01, x12 -> 有-05, x15 -> 会-02, x18 -> 很, x14 -> 消失-01, x17 -> 快-01))),[Ljava.lang.String;@6c15e8c7,Annotation([Ljava.lang.String;@56380231,[Ljava.lang.String;@64f1fd08,[Ljava.lang.String;@6b3f6585),Annotation([Ljava.lang.String;@282ffbf5,[Ljava.lang.String;@3e104d4b,[Ledu.cmu.lti.nlp.amr.Dependency;@55e2fe3c),Annotation([Ljava.lang.String;@45e1aa48,[Ljava.lang.String;@12c60152,[Ljava.lang.String;@2e807c54),Annotation([Ljava.lang.String;@6cd164a6,[Ljava.lang.String;@242a209e,[Ledu.cmu.lti.nlp.amr.Entity;@64469d8))
AMR:
(x12 / 有-05, degree, x18 / 很)
(x12 / 有-05, manner, x16 / 就)
(x14 / 消失-01, purpose, x13 / 危险-01)
(x15 / 会-02, manner, x17 / 快-01)
(x15 / 会-02, prep-through, x14 / 消失-01)
(x17 / 快-01, degree, x18 / 很)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0.0
Decoded in 14,868 microseconds
Sentence: “ 我 的 花 是 很 快 就 会 消失 的 吗 ？ ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  就 => 就
Oracle Span 3:  很 => 很
Oracle Span 4:  快 => 快-01
Oracle Span 5:  我 => 我
Oracle Span 6:  消失 => 消失-01
Oracle Span 7:  花 => 花
Spans:
Span 8-9:  会 => 会-02
Span 7-8:  就 => 就
Span 5-6:  很 => 很
Span 6-7:  快 => 快-01
Span 1-2:  我 => 我
Span 9-10:  消失 => 消失-01
Span 3-4:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 7-8:  就 => 就
Oracle Span 5-6:  很 => 很
Oracle Span 6-7:  快 => 快-01
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  消失 => 消失-01
Oracle Span 3-4:  花 => 花

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	花	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	快	_	VA	VA	_	5	attr	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	dep	_	_
10	消失	_	VV	VV	_	7	dep	_	_
11	的	_	DEC	DEC	_	7	cpm	_	_
12	吗	_	SP	SP	_	5	dep	_	_
13	？	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 消失-01)
(x11 / 会-02, manner, x13 / 就)
(x12 / 消失-01, arg0, x14 / 花)
(x12 / 消失-01, manner, x16 / 快-01)
(x14 / 花, poss, x15 / 我)
(x16 / 快-01, degree, x17 / 很)

Input(Some(Graph((say :arg1 (会-02 :mode interrogative :manner 就 :arg0 (消失-01 :manner (快-01 :degree 很) :arg0 (花 :poss 我)))),ArrayBuffer(Span(8,9,List(0),会,会-02,false), Span(7,8,List(1),就,就,false), Span(9,10,List(2),消失,消失-01,false), Span(6,7,List(3),快,快-01,false), Span(5,6,List(4),很,很,false), Span(3,4,List(5),花,花,false), Span(1,2,List(6),我,我,false)),Map(2 -> 消失-01, 5 -> 花, 1 -> 就, 4 -> 很, 6 -> 我, 0 -> 会-02, 3 -> 快-01),Map(x16 -> 快-01, x13 -> 就, x12 -> 消失-01, x15 -> 我, x11 -> 会-02, x14 -> 花, x17 -> 很))),[Ljava.lang.String;@2b8bd798,Annotation([Ljava.lang.String;@4c18621b,[Ljava.lang.String;@39c385d6,[Ljava.lang.String;@1cec219f),Annotation([Ljava.lang.String;@692e028d,[Ljava.lang.String;@6629ad09,[Ledu.cmu.lti.nlp.amr.Dependency;@43e1692f),Annotation([Ljava.lang.String;@3e7c4815,[Ljava.lang.String;@27df0f3d,[Ljava.lang.String;@c35af2a),Annotation([Ljava.lang.String;@44550792,[Ljava.lang.String;@1835d3ed,[Ledu.cmu.lti.nlp.amr.Entity;@474c9131))
AMR:
(x11 / 会-02, manner, x13 / 就)
(x11 / 会-02, manner, x16 / 快-01)
(x11 / 会-02, prep-through, x12 / 消失-01)
(x14 / 花, location, x12 / 消失-01)
(x14 / 花, poss, x15 / 我)
(x16 / 快-01, degree, x17 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 15,777 microseconds
Sentence: “ 那 当然 。 ”

Oracle Span 1:  当然 => 当然
Oracle Span 2:  那 => 那
Spans:
Span 2-3:  当然 => 当然
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  当然 => 当然
Oracle Span 1-2:  那 => 那

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那	_	PN	PN	_	3	advmod	_	_
3	当然	_	AD	AD	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 当然, arg0, x6 / 那)

Input(Some(Graph((say :arg1 (当然 :arg0 那)),ArrayBuffer(Span(2,3,List(0),当然,当然,false), Span(1,2,List(1),那,那,false)),Map(1 -> 那, 0 -> 当然),Map(x5 -> 当然, x6 -> 那))),[Ljava.lang.String;@66213a0d,Annotation([Ljava.lang.String;@aa4d8cc,[Ljava.lang.String;@3cb8c8ce,[Ljava.lang.String;@1fde0371),Annotation([Ljava.lang.String;@70c0a3d5,[Ljava.lang.String;@5c8e67b9,[Ledu.cmu.lti.nlp.amr.Dependency;@260a3a5e),Annotation([Ljava.lang.String;@49206065,[Ljava.lang.String;@3c0bbc9f,[Ljava.lang.String;@1317b708),Annotation([Ljava.lang.String;@6438a7fe,[Ljava.lang.String;@2e51d054,[Ledu.cmu.lti.nlp.amr.Entity;@4f5f6e45))
AMR:
(x5 / 当然, mod, x6 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,500 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 我 的 花 是 短暂 的 ， 而且 她 只 有 四 根 刺 来 防御 外侮 ！

Oracle Span 1:  刺 => 刺
Oracle Span 2:  只 => 只
Oracle Span 3:  外侮 => 外侮
Oracle Span 4:  小 => 小-01
Oracle Span 5:  有 => 有-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  短暂 => 短暂-01
Oracle Span 8:  自言自语 => 自言自语
Oracle Span 9:  花 => 花
Oracle Span 10:  说 => 说-01
Oracle Span 11:  防御 => 防御-01
Spans:
Span 20-21:  刺 => 刺
Span 16-17:  只 => 只
Span 23-24:  外侮 => 外侮
Span 0-1:  小 => 小-01
Span 17-18:  有 => 有-01
Span 1-2:  王子 => 王子
Span 11-12:  短暂 => 短暂-01
Span 2-3:  自言自语 => 自言自语
Span 9-10:  花 => 花
Span 4-5:  说 => 说-01
Span 22-23:  防御 => 防御-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 20-21:  刺 => 刺
Oracle Span 16-17:  只 => 只
Oracle Span 23-24:  外侮 => 外侮
Oracle Span 0-1:  小 => 小-01
Oracle Span 17-18:  有 => 有-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 11-12:  短暂 => 短暂-01
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 9-10:  花 => 花
Oracle Span 4-5:  说 => 说-01
Oracle Span 22-23:  防御 => 防御-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	花	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	5	ccomp	_	_
12	短暂	_	VA	VA	_	11	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	,	_	PU	PU	_	11	punct	_	_
15	而且	_	CC	CC	_	11	cc	_	_
16	她	_	PN	PN	_	18	nsubj	_	_
17	只	_	AD	AD	_	18	advmod	_	_
18	有	_	VE	VE	_	11	conj	_	_
19	四	_	CD	CD	_	20	nummod	_	_
20	根	_	M	M	_	21	clf	_	_
21	刺	_	NN	NN	_	18	dobj	_	_
22	来	_	MSP	MSP	_	23	prtmod	_	_
23	防御	_	VV	VV	_	5	dep	_	_
24	外侮	_	NN	NN	_	23	dobj	_	_
25	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 王子)
(x0 / 说-01, manner, x2 / 自言自语)
(x19 / 短暂-01, arg0, x20 / 花)
(x22 / 有-01, arg1, x25 / 刺)
(x22 / 有-01, manner, x24 / 只)
(x22 / 有-01, purpose, x27 / 防御-01)
(x27 / 防御-01, arg1, x29 / 外侮)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((说-01 :arg1 (progression :arg1 (短暂-01 :arg0 (花 :poss x3)) :arg2 (有-01 :purpose (防御-01 :arg1 外侮 :arg0 x20) :arg1 (刺 :quant 4) :manner 只 :arg0 x20)) :mode expressive :arg0 (王子 :mod 小-01) :manner 自言自语),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(11,12,List(1),短暂,短暂-01,false), Span(9,10,List(2),花,花,false), Span(17,18,List(3),有,有-01,false), Span(22,23,List(4),防御,防御-01,false), Span(23,24,List(5),外侮,外侮,false), Span(20,21,List(6),刺,刺,false), Span(16,17,List(7),只,只,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小-01,false), Span(2,3,List(10),自言自语,自言自语,false)),Map(2 -> 花, 5 -> 外侮, 8 -> 王子, 7 -> 只, 1 -> 短暂-01, 4 -> 防御-01, 6 -> 刺, 9 -> 小-01, 0 -> 说-01, 10 -> 自言自语, 3 -> 有-01),Map(x22 -> 有-01, x25 -> 刺, x2 -> 自言自语, x19 -> 短暂-01, x27 -> 防御-01, x24 -> 只, x4 -> 小-01, x3 -> 王子, x29 -> 外侮, x20 -> 花, x0 -> 说-01))),[Ljava.lang.String;@615e3f51,Annotation([Ljava.lang.String;@407873d3,[Ljava.lang.String;@608bc8f8,[Ljava.lang.String;@5412bfea),Annotation([Ljava.lang.String;@44a6a68e,[Ljava.lang.String;@4743a322,[Ledu.cmu.lti.nlp.amr.Dependency;@79316f3a),Annotation([Ljava.lang.String;@381d7219,[Ljava.lang.String;@49fe3142,[Ljava.lang.String;@13fed1ec),Annotation([Ljava.lang.String;@61c42416,[Ljava.lang.String;@329a1f8d,[Ledu.cmu.lti.nlp.amr.Entity;@a565cbd))
AMR:
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, unit, x20 / 花)
(x19 / 短暂-01, poss, x20 / 花)
(x2 / 自言自语, value, x3 / 王子)
(x22 / 有-01, manner, x19 / 短暂-01)
(x22 / 有-01, manner, x24 / 只)
(x22 / 有-01, purpose, x27 / 防御-01)
(x27 / 防御-01, poss, x25 / 刺)
(x29 / 外侮, purpose, x27 / 防御-01)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.3
WARNING: makeIds can't find span Id: 0.3.1.3.1
WARNING: makeIds can't find span Id: 0.3.1.2
WARNING: makeIds can't find span Id: 0.3.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 38,788 microseconds
Sentence: 可 我 还 把 她 独自 留 在 家 里 ！ ”

Oracle Span 1:  她 => 她
Oracle Span 2:  家 => 家
Oracle Span 3:  我 => 我
Oracle Span 4:  独自 => 独自
Oracle Span 5:  留 => 留-05
Oracle Span 6:  还 => 还
Spans:
Span 4-5:  她 => 她
Span 8-9:  家 => 家
Span 1-2:  我 => 我
Span 5-6:  独自 => 独自
Span 6-7:  留 => 留-05
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 8-9:  家 => 家
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  独自 => 独自
Oracle Span 6-7:  留 => 留-05
Oracle Span 2-3:  还 => 还

Dependencies:
1	可	_	AD	AD	_	7	advmod	_	_
2	我	_	PN	PN	_	7	nsubj	_	_
3	还	_	AD	AD	_	7	advmod	_	_
4	把	_	BA	BA	_	7	ba	_	_
5	她	_	PN	PN	_	7	nsubj	_	_
6	独自	_	AD	AD	_	7	advmod	_	_
7	留	_	VV	VV	_	0	root	_	_
8	在	_	P	P	_	7	prep	_	_
9	家	_	NN	NN	_	10	lobj	_	_
10	里	_	LC	LC	_	8	plmod	_	_
11	！	_	PU	PU	_	7	punct	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x19 / 留-05, arg0, x20 / 我)
(x19 / 留-05, arg1, x21 / 她)
(x19 / 留-05, arg2, x23 / 家)
(x19 / 留-05, manner, x24 / 还)
(x19 / 留-05, manner, x25 / 独自)

Input(Some(Graph((say :arg1 (contrast :arg2 (留-05 :mode expressive :manner 独自 :manner 还 :arg2 家 :arg1 她 :arg0 我))),ArrayBuffer(Span(6,7,List(0),留,留-05,false), Span(5,6,List(1),独自,独自,false), Span(2,3,List(2),还,还,false), Span(8,9,List(3),家,家,false), Span(4,5,List(4),她,她,false), Span(1,2,List(5),我,我,false)),Map(2 -> 还, 5 -> 我, 1 -> 独自, 4 -> 她, 0 -> 留-05, 3 -> 家),Map(x25 -> 独自, x19 -> 留-05, x21 -> 她, x24 -> 还, x23 -> 家, x20 -> 我))),[Ljava.lang.String;@6fc29daa,Annotation([Ljava.lang.String;@2f66f0d0,[Ljava.lang.String;@4d62f4c6,[Ljava.lang.String;@7569ea63),Annotation([Ljava.lang.String;@ebd06a9,[Ljava.lang.String;@16c587de,[Ledu.cmu.lti.nlp.amr.Dependency;@4cdb8504),Annotation([Ljava.lang.String;@76db540e,[Ljava.lang.String;@10358c32,[Ljava.lang.String;@2af4129d),Annotation([Ljava.lang.String;@3a175162,[Ljava.lang.String;@1640190a,[Ledu.cmu.lti.nlp.amr.Entity;@2a2843ec))
AMR:
(x19 / 留-05, manner, x24 / 还)
(x19 / 留-05, manner, x25 / 独自)
(x19 / 留-05, op, x23 / 家)
(x19 / 留-05, prep-on-behalf, x21 / 她)
(x24 / 还, prep-out, x20 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.4
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 12,867 microseconds
Sentence: 这 是 他 第一 次 产生 了 后悔 ，

Oracle Span 1:  产生 => 产生-01
Oracle Span 2:  他 => 他
Oracle Span 3:  后悔 => 后悔-01
Oracle Span 4:  这 => 这
Spans:
Span 5-6:  产生 => 产生-01
Span 2-3:  他 => 他
Span 7-8:  后悔 => 后悔-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  产生 => 产生-01
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  后悔 => 后悔-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	第一	_	OD	OD	_	5	ordmod	_	_
5	次	_	M	M	_	6	dep	_	_
6	产生	_	VV	VV	_	2	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	后悔	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 产生-01, arg0, x3 / 他)
(x0 / 产生-01, arg1, x4 / 后悔-01)
(x0 / 产生-01, domain, x5 / 这)

Input(Some(Graph((产生-01 :ord (ordinal-entity :value 1) :domain 这 :arg1 后悔-01 :arg0 他),ArrayBuffer(Span(5,6,List(0),产生,产生-01,false), Span(0,1,List(1),这,这,false), Span(7,8,List(2),后悔,后悔-01,false), Span(2,3,List(3),他,他,false)),Map(2 -> 后悔-01, 1 -> 这, 0 -> 产生-01, 3 -> 他),Map(x5 -> 这, x4 -> 后悔-01, x3 -> 他, x0 -> 产生-01))),[Ljava.lang.String;@2042ccce,Annotation([Ljava.lang.String;@20de05e5,[Ljava.lang.String;@36c0d0bd,[Ljava.lang.String;@5e1fc2aa),Annotation([Ljava.lang.String;@688d411b,[Ljava.lang.String;@382c90c2,[Ledu.cmu.lti.nlp.amr.Dependency;@859ea42),Annotation([Ljava.lang.String;@28737371,[Ljava.lang.String;@2af46afd,[Ljava.lang.String;@760245e1),Annotation([Ljava.lang.String;@31ceba99,[Ljava.lang.String;@295bf2a,[Ledu.cmu.lti.nlp.amr.Entity;@bbf9e07))
AMR:
(x0 / 产生-01, domain, x5 / 这)
(x0 / 产生-01, extent, x4 / 后悔-01)
(x0 / 产生-01, season, x3 / 他)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,259 microseconds
Sentence: 但 他 又 重新 振作 起来 ：

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  振作 => 振作-01
Oracle Span 4:  重新 => 重新-01
Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 4-5:  振作 => 振作-01
Span 3-4:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 4-5:  振作 => 振作-01
Oracle Span 3-4:  重新 => 重新-01

Dependencies:
1	但	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	重新	_	AD	AD	_	5	advmod	_	_
5	振作	_	VV	VV	_	0	root	_	_
6	起来	_	VV	VV	_	5	comod	_	_
7	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 振作-01, arg0, x5 / 他)
(x2 / 振作-01, manner, x3 / 重新-01)
(x2 / 振作-01, manner, x4 / 又)

Input(Some(Graph((contrast :arg2 (振作-01 :arg0 他 :manner 又 :manner 重新-01)),ArrayBuffer(Span(4,5,List(0),振作,振作-01,false), Span(1,2,List(1),他,他,false), Span(2,3,List(2),又,又,false), Span(3,4,List(3),重新,重新-01,false)),Map(2 -> 又, 1 -> 他, 0 -> 振作-01, 3 -> 重新-01),Map(x2 -> 振作-01, x5 -> 他, x4 -> 又, x3 -> 重新-01))),[Ljava.lang.String;@6ff6efdc,Annotation([Ljava.lang.String;@2b289ac9,[Ljava.lang.String;@4eb1c69,[Ljava.lang.String;@73d3e555),Annotation([Ljava.lang.String;@2b037cfc,[Ljava.lang.String;@44924587,[Ledu.cmu.lti.nlp.amr.Dependency;@18460128),Annotation([Ljava.lang.String;@74d3b638,[Ljava.lang.String;@4487c0c2,[Ljava.lang.String;@126f1ba8),Annotation([Ljava.lang.String;@3a08078c,[Ljava.lang.String;@53830483,[Ledu.cmu.lti.nlp.amr.Entity;@29f85fe1))
AMR:
(x2 / 振作-01, manner, x3 / 重新-01)
(x2 / 振作-01, manner, x4 / 又)
(x2 / 振作-01, prep-on-behalf, x5 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,963 microseconds
Sentence: “ 您 是否 能 建议 我 去 看 些 什么 ？ ” 小 王子 问道 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  去 => 去-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  建议 => 建议-01
Oracle Span 5:  您 => 您
Oracle Span 6:  是否 => 是否-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  看 => 看-02
Oracle Span 9:  能 => 能-01
Oracle Span 10:  问道 => 问道-01
Spans:
Span 9-10:  什么 => 什么
Span 6-7:  去 => 去-01
Span 12-13:  小 => 小-01
Span 4-5:  建议 => 建议-01
Span 1-2:  您 => 您
Span 2-3:  是否 => 是否-01
Span 13-14:  王子 => 王子
Span 7-8:  看 => 看-02
Span 3-4:  能 => 能-01
Span 14-15:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  什么 => 什么
Oracle Span 6-7:  去 => 去-01
Oracle Span 12-13:  小 => 小-01
Oracle Span 4-5:  建议 => 建议-01
Oracle Span 1-2:  您 => 您
Oracle Span 2-3:  是否 => 是否-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 7-8:  看 => 看-02
Oracle Span 3-4:  能 => 能-01
Oracle Span 14-15:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	您	_	PN	PN	_	5	nsubj	_	_
3	是否	_	AD	AD	_	5	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	建议	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	去	_	MSP	MSP	_	8	prtmod	_	_
8	看	_	VV	VV	_	5	dep	_	_
9	些	_	CD	CD	_	8	range	_	_
10	什么	_	PN	PN	_	8	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	15	nsubj	_	_
15	问道	_	VV	VV	_	5	dep	_	_
16	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x28 / 是否-01)
(x2 / 王子, mod, x3 / 小-01)
(x28 / 是否-01, arg0, x29 / 您)
(x28 / 是否-01, arg1, x30 / 能-01)
(x30 / 能-01, arg0, x31 / 建议-01)
(x31 / 建议-01, arg1, x33 / 去-01)
(x33 / 去-01, arg1, x35 / 看-02)
(x35 / 看-02, arg1, x37 / 什么)

Input(Some(Graph((问道-01 :arg1 (是否-01 :arg1 (能-01 :arg0 (建议-01 :arg2 x2 :arg1 (去-01 :arg1 (看-02 :arg1 什么 :arg0 x2) :arg0 x2) :arg0 x29)) :arg0 您) :mode interrogative :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(14,15,List(0),问道,问道-01,false), Span(2,3,List(1),是否,是否-01,false), Span(3,4,List(2),能,能-01,false), Span(4,5,List(3),建议,建议-01,false), Span(6,7,List(4),去,去-01,false), Span(7,8,List(5),看,看-02,false), Span(9,10,List(6),什么,什么,false), Span(1,2,List(7),您,您,false), Span(13,14,List(8),王子,王子,false), Span(12,13,List(9),小,小-01,false)),Map(2 -> 能-01, 5 -> 看-02, 8 -> 王子, 7 -> 您, 1 -> 是否-01, 4 -> 去-01, 6 -> 什么, 9 -> 小-01, 0 -> 问道-01, 3 -> 建议-01),Map(x28 -> 是否-01, x37 -> 什么, x2 -> 王子, x31 -> 建议-01, x30 -> 能-01, x33 -> 去-01, x3 -> 小-01, x29 -> 您, x35 -> 看-02, x0 -> 问道-01))),[Ljava.lang.String;@43a0a32d,Annotation([Ljava.lang.String;@396ef8b2,[Ljava.lang.String;@72825400,[Ljava.lang.String;@19ee1ae6),Annotation([Ljava.lang.String;@5f117b3d,[Ljava.lang.String;@1174a305,[Ledu.cmu.lti.nlp.amr.Dependency;@71b6d77f),Annotation([Ljava.lang.String;@1866da85,[Ljava.lang.String;@4cfa8227,[Ljava.lang.String;@78226c36),Annotation([Ljava.lang.String;@3f685162,[Ljava.lang.String;@11f406f8,[Ledu.cmu.lti.nlp.amr.Entity;@987455b))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, purpose, x35 / 看-02)
(x2 / 王子, mod, x3 / 小-01)
(x28 / 是否-01, beneficiary, x29 / 您)
(x30 / 能-01, manner, x28 / 是否-01)
(x31 / 建议-01, direction, x30 / 能-01)
(x33 / 去-01, manner, x31 / 建议-01)
(x35 / 看-02, direction, x33 / 去-01)
(x35 / 看-02, subset, x37 / 什么)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.2.1.0.1.1
WARNING: makeIds can't find span Id: 0.2.1.0.1.1.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 28,001 microseconds
Sentence: “ 地球 这 颗 行星 ， ” 地理学家 回答 他 说 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  地球 => 地球
Oracle Span 4:  地理学家 => 地理学家
Oracle Span 5:  行星 => 行星
Oracle Span 6:  这 => 这
Spans:
Span 9-10:  他 => 他
Span 8-9:  回答 => 回答-01
Span 1-2:  地球 => 地球
Span 7-8:  地理学家 => 地理学家
Span 4-5:  行星 => 行星
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 1-2:  地球 => 地球
Oracle Span 7-8:  地理学家 => 地理学家
Oracle Span 4-5:  行星 => 行星
Oracle Span 2-3:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	地球	_	NN	NN	_	5	nsubj	_	_
3	这	_	DT	DT	_	5	det	_	_
4	颗	_	M	M	_	3	clf	_	_
5	行星	_	NN	NN	_	9	dep	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	地理学家	_	AD	AD	_	9	advmod	_	_
9	回答	_	VV	VV	_	0	root	_	_
10	他	_	PN	PN	_	11	dep	_	_
11	说	_	VV	VV	_	9	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 地理学家)
(x0 / 回答-01, arg2, x9 / 行星)
(x0 / 回答-01, arg3, x3 / 他)
(x9 / 行星, mod, x10 / 这)

Input(Some(Graph((回答-01 :arg2 (行星 :arg0-of (mean :arg1 地球) :mod 这) :arg3 他 :arg0 地理学家),ArrayBuffer(Span(8,9,List(0),回答,回答-01,false), Span(4,5,List(1),行星,行星,false), Span(1,2,List(2),地球,地球,false), Span(2,3,List(3),这,这,false), Span(9,10,List(4),他,他,false), Span(7,8,List(5),地理学家,地理学家,false)),Map(2 -> 地球, 5 -> 地理学家, 1 -> 行星, 4 -> 他, 0 -> 回答-01, 3 -> 这),Map(x2 -> 地理学家, x10 -> 这, x12 -> 地球, x3 -> 他, x9 -> 行星, x0 -> 回答-01))),[Ljava.lang.String;@622fdb81,Annotation([Ljava.lang.String;@1f3165e7,[Ljava.lang.String;@2ec3633f,[Ljava.lang.String;@1d5d5621),Annotation([Ljava.lang.String;@13275d8,[Ljava.lang.String;@15b82644,[Ledu.cmu.lti.nlp.amr.Dependency;@20576557),Annotation([Ljava.lang.String;@574cd322,[Ljava.lang.String;@45c2e0a6,[Ljava.lang.String;@119c745c),Annotation([Ljava.lang.String;@a7ad6e5,[Ljava.lang.String;@3b1ed14b,[Ledu.cmu.lti.nlp.amr.Entity;@690bc15e))
AMR:
(x0 / 回答-01, example, x2 / 地理学家)
(x0 / 回答-01, prep-with, x3 / 他)
(x0 / 回答-01, time, x9 / 行星)
(x9 / 行星, domain, x12 / 地球)
(x9 / 行星, mod, x10 / 这)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,363 microseconds
Sentence: “ 它 的 名望 很 高 … ”

Oracle Span 1:  名望 => 名望
Oracle Span 2:  它 => 它
Oracle Span 3:  很 => 很
Oracle Span 4:  高 => 高-01
Spans:
Span 3-4:  名望 => 名望
Span 1-2:  它 => 它
Span 4-5:  很 => 很
Span 5-6:  高 => 高-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  名望 => 名望
Oracle Span 1-2:  它 => 它
Oracle Span 4-5:  很 => 很
Oracle Span 5-6:  高 => 高-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	名望	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	高	_	VA	VA	_	0	root	_	_
7	…	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 高-01, arg0, x9 / 名望)
(x7 / 高-01, degree, x8 / 很)
(x9 / 名望, poss, x10 / 它)

Input(Some(Graph((say :arg1 (高-01 :arg0 (名望 :poss 它) :degree 很)),ArrayBuffer(Span(5,6,List(0),高,高-01,false), Span(3,4,List(1),名望,名望,false), Span(1,2,List(2),它,它,false), Span(4,5,List(3),很,很,false)),Map(2 -> 它, 1 -> 名望, 0 -> 高-01, 3 -> 很),Map(x10 -> 它, x8 -> 很, x7 -> 高-01, x9 -> 名望))),[Ljava.lang.String;@1bc776b7,Annotation([Ljava.lang.String;@475646d4,[Ljava.lang.String;@a0f53fc,[Ljava.lang.String;@3db972d2),Annotation([Ljava.lang.String;@1debc91c,[Ljava.lang.String;@687e4c93,[Ledu.cmu.lti.nlp.amr.Dependency;@181e72d3),Annotation([Ljava.lang.String;@6ec7bce0,[Ljava.lang.String;@2d272b0d,[Ljava.lang.String;@3727f0ee),Annotation([Ljava.lang.String;@5c448433,[Ljava.lang.String;@fb713e7,[Ledu.cmu.lti.nlp.amr.Entity;@1b5c3e5f))
AMR:
(x7 / 高-01, degree, x8 / 很)
(x7 / 高-01, degree, x9 / 名望)
(x9 / 名望, poss, x10 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,850 microseconds
Sentence: 于是 小 王子 就 走 了 ， 他 一边 走 一边 想 着 他 的 花 。

Oracle Span 1:  他 => 他
Oracle Span 2:  小 => 小-01
Oracle Span 3:  想 => 想-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  花 => 花
Oracle Span 6:  走 => 走-02
Spans:
Span 7-8:  他 => 他
Span 1-2:  小 => 小-01
Span 11-12:  想 => 想-01
Span 2-3:  王子 => 王子
Span 15-16:  花 => 花
Span 4-5:  走 => 走-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 1-2:  小 => 小-01
Oracle Span 11-12:  想 => 想-01
Oracle Span 2-3:  王子 => 王子
Oracle Span 15-16:  花 => 花
Oracle Span 4-5:  走 => 走-02

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	他	_	PN	PN	_	10	nsubj	_	_
9	一边	_	CD	CD	_	10	dep	_	_
10	走	_	VV	VV	_	5	conj	_	_
11	一边	_	CD	CD	_	10	range	_	_
12	想	_	VV	VV	_	10	conj	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	他	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	花	_	NN	NN	_	12	dobj	_	_
17	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x21 / 走-02, arg0, x22 / 王子)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 想-01, arg1, x26 / 花)
(x26 / 花, poss, x27 / 他)

Input(Some(Graph((temporal :arg2 (and :op (走-02 :arg0 (王子 :mod 小-01)) :op (想-01 :arg1 (花 :poss 他) :arg0 x22))),ArrayBuffer(Span(4,5,List(0),走,走-02,false), Span(2,3,List(1),王子,王子,false), Span(1,2,List(2),小,小-01,false), Span(11,12,List(3),想,想-01,false), Span(15,16,List(4),花,花,false), Span(7,8,List(5),他,他,false)),Map(2 -> 小-01, 5 -> 他, 1 -> 王子, 4 -> 花, 0 -> 走-02, 3 -> 想-01),Map(x22 -> 王子, x27 -> 他, x21 -> 走-02, x24 -> 想-01, x23 -> 小-01, x26 -> 花))),[Ljava.lang.String;@13741d5a,Annotation([Ljava.lang.String;@6b69761b,[Ljava.lang.String;@5c7668ba,[Ljava.lang.String;@26221bad),Annotation([Ljava.lang.String;@158f4cfe,[Ljava.lang.String;@35f639fa,[Ledu.cmu.lti.nlp.amr.Dependency;@5aaaa446),Annotation([Ljava.lang.String;@6c6333cd,[Ljava.lang.String;@3e47a03,[Ljava.lang.String;@7d9ba6c),Annotation([Ljava.lang.String;@8deb645,[Ljava.lang.String;@7dd611c8,[Ledu.cmu.lti.nlp.amr.Entity;@5d425813))
AMR:
(x21 / 走-02, value, x22 / 王子)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 想-01, op, x26 / 花)
(x24 / 想-01, time, x21 / 走-02)
(x26 / 花, poss, x27 / 他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 15,469 microseconds
Sentence: XVI 。

Oracle Span 1:  XVI => XVI
Spans:
Span 0-1:  XVI => XVI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVI => XVI

Dependencies:
1	XVI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XVI,ArrayBuffer(Span(0,1,List(0),XVI,XVI,false)),Map(0 -> XVI),Map(x0 -> XVI))),[Ljava.lang.String;@1702830d,Annotation([Ljava.lang.String;@6a937336,[Ljava.lang.String;@278667fd,[Ljava.lang.String;@684b31de),Annotation([Ljava.lang.String;@6b52dd31,[Ljava.lang.String;@1a2909ae,[Ledu.cmu.lti.nlp.amr.Dependency;@e042c99),Annotation([Ljava.lang.String;@3f702946,[Ljava.lang.String;@42b6d0cc,[Ljava.lang.String;@1000d54d),Annotation([Ljava.lang.String;@3f4f5330,[Ljava.lang.String;@14b7786,[Ledu.cmu.lti.nlp.amr.Entity;@750ff7d3))
AMR:


Decoded in 1,237 microseconds
Sentence: 第七 个 行星 ， 于是 就 是 地球 了 。

Oracle Span 1:  地球 => 地球
Oracle Span 2:  就 => 就
Oracle Span 3:  行星 => 行星
Spans:
Span 7-8:  地球 => 地球
Span 5-6:  就 => 就
Span 2-3:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  地球 => 地球
Oracle Span 5-6:  就 => 就
Oracle Span 2-3:  行星 => 行星

Dependencies:
1	第七	_	OD	OD	_	2	ordmod	_	_
2	个	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	7	nsubj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	于是	_	AD	AD	_	7	advmod	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	地球	_	NN	NN	_	7	attr	_	_
9	了	_	SP	SP	_	7	dep	_	_
10	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 地球, domain, x2 / 行星)
(x0 / 地球, manner, x4 / 就)

Input(Some(Graph((地球 :manner 就 :domain (行星 :ord (ordinal-entity :value 7))),ArrayBuffer(Span(7,8,List(0),地球,地球,false), Span(5,6,List(1),就,就,false), Span(2,3,List(2),行星,行星,false)),Map(2 -> 行星, 1 -> 就, 0 -> 地球),Map(x2 -> 行星, x4 -> 就, x0 -> 地球))),[Ljava.lang.String;@63b3ee82,Annotation([Ljava.lang.String;@2620e717,[Ljava.lang.String;@7c8d5312,[Ljava.lang.String;@7636823f),Annotation([Ljava.lang.String;@a0db585,[Ljava.lang.String;@2b34e38c,[Ledu.cmu.lti.nlp.amr.Dependency;@3d37203b),Annotation([Ljava.lang.String;@7fd26ad8,[Ljava.lang.String;@1894593a,[Ljava.lang.String;@14b0e127),Annotation([Ljava.lang.String;@10823d72,[Ljava.lang.String;@7cea0110,[Ledu.cmu.lti.nlp.amr.Entity;@468dda3e))
AMR:
(x0 / 地球, domain, x2 / 行星)
(x0 / 地球, manner, x4 / 就)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,009 microseconds
Sentence: 地球 可 不 是 一 颗 普通 的 行星 ！

Oracle Span 1:  地球 => 地球
Oracle Span 2:  普通 => 普通-01
Oracle Span 3:  行星 => 行星
Spans:
Span 0-1:  地球 => 地球
Span 6-7:  普通 => 普通-01
Span 8-9:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  地球 => 地球
Oracle Span 6-7:  普通 => 普通-01
Oracle Span 8-9:  行星 => 行星

Dependencies:
1	地球	_	NN	NN	_	4	nsubj	_	_
2	可	_	VV	VV	_	4	mmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	9	clf	_	_
7	普通	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	行星	_	NN	NN	_	4	attr	_	_
10	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 行星, domain, x4 / 地球)
(x0 / 行星, mod, x2 / 普通-01)

Input(Some(Graph((行星 :quant 1 :mode expressive :polarity - :domain 地球 :mod 普通-01),ArrayBuffer(Span(8,9,List(0),行星,行星,false), Span(0,1,List(1),地球,地球,false), Span(6,7,List(2),普通,普通-01,false)),Map(2 -> 普通-01, 1 -> 地球, 0 -> 行星),Map(x2 -> 普通-01, x4 -> 地球, x0 -> 行星))),[Ljava.lang.String;@5527b211,Annotation([Ljava.lang.String;@54cf7c6a,[Ljava.lang.String;@78010562,[Ljava.lang.String;@50756c76),Annotation([Ljava.lang.String;@38aafb53,[Ljava.lang.String;@1729ec00,[Ledu.cmu.lti.nlp.amr.Dependency;@67f3d192),Annotation([Ljava.lang.String;@1c9e07c6,[Ljava.lang.String;@73010765,[Ljava.lang.String;@2b10ace9),Annotation([Ljava.lang.String;@52169758,[Ljava.lang.String;@3eda0aeb,[Ledu.cmu.lti.nlp.amr.Entity;@459b187a))
AMR:
(x0 / 行星, domain, x4 / 地球)
(x0 / 行星, mod, x2 / 普通-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,583 microseconds
Sentence: 它 上面 有 一百一十一 个 国王 （ 当然 ， 没有 漏掉 黑人 国王 ） ， 七千 个 地理学家 ， 九十万 个 实业家 ， 七百五十万 个 酒鬼 ， 三亿一千一百万 个 爱 虚荣 的 人 ， 也 就 是 说 ， 大约 有 二十亿 的 大人 。

Oracle Span 1:  上面 => 上面
Oracle Span 2:  人 => 人
Oracle Span 3:  国王 => 国王
Oracle Span 4:  国王 => 国王
Oracle Span 5:  地理学家 => 地理学家
Oracle Span 6:  大人 => 大人
Oracle Span 7:  大约 => 大约
Oracle Span 8:  它 => 它
Oracle Span 9:  实业家 => 实业家
Oracle Span 10:  有 => 有-01
Oracle Span 11:  有 => 有-03
Oracle Span 12:  漏掉 => 漏掉-01
Oracle Span 13:  爱 => 爱-01
Oracle Span 14:  虚荣 => 虚荣-01
Oracle Span 15:  酒鬼 => 酒鬼
Oracle Span 16:  黑人 => 黑人
Spans:
Span 1-2:  上面 => 上面
Span 32-33:  人 => 人
Span 5-6:  国王 => 国王
Span 12-13:  国王 => 国王
Span 17-18:  地理学家 => 地理学家
Span 43-44:  大人 => 大人
Span 39-40:  大约 => 大约
Span 0-1:  它 => 它
Span 21-22:  实业家 => 实业家
Span 2-3:  有 => 有-01
Span 40-41:  有 => 有-03
Span 10-11:  漏掉 => 漏掉-01
Span 29-30:  爱 => 爱-01
Span 30-31:  虚荣 => 虚荣-01
Span 25-26:  酒鬼 => 酒鬼
Span 11-12:  黑人 => 黑人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  上面 => 上面
Oracle Span 32-33:  人 => 人
Oracle Span 5-6:  国王 => 国王
Oracle Span 12-13:  国王 => 国王
Oracle Span 17-18:  地理学家 => 地理学家
Oracle Span 43-44:  大人 => 大人
Oracle Span 39-40:  大约 => 大约
Oracle Span 0-1:  它 => 它
Oracle Span 21-22:  实业家 => 实业家
Oracle Span 2-3:  有 => 有-01
Oracle Span 40-41:  有 => 有-03
Oracle Span 10-11:  漏掉 => 漏掉-01
Oracle Span 29-30:  爱 => 爱-01
Oracle Span 30-31:  虚荣 => 虚荣-01
Oracle Span 25-26:  酒鬼 => 酒鬼
Oracle Span 11-12:  黑人 => 黑人

Dependencies:
1	它	_	PN	PN	_	3	nsubj	_	_
2	上面	_	NN	NN	_	3	top	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一百一十一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	国王	_	NN	NN	_	3	dobj	_	_
7	（	_	PU	PU	_	12	punct	_	_
8	当然	_	AD	AD	_	12	advmod	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	没有	_	VV	VV	_	12	dep	_	_
11	漏掉	_	AD	AD	_	12	advmod	_	_
12	黑人	_	VV	VV	_	3	dep	_	_
13	国王	_	NN	NN	_	12	dobj	_	_
14	）	_	PU	PU	_	12	punct	_	_
15	,	_	PU	PU	_	3	punct	_	_
16	七千	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	18	clf	_	_
18	地理学家	_	NN	NN	_	30	nsubj	_	_
19	,	_	PU	PU	_	30	punct	_	_
20	九十万	_	CD	CD	_	21	nummod	_	_
21	个	_	M	M	_	22	clf	_	_
22	实业家	_	NN	NN	_	30	nsubj	_	_
23	,	_	PU	PU	_	30	punct	_	_
24	七百五十万	_	CD	CD	_	25	nummod	_	_
25	个	_	M	M	_	26	clf	_	_
26	酒鬼	_	NN	NN	_	30	nsubj	_	_
27	,	_	PU	PU	_	30	punct	_	_
28	三亿一千一百万	_	CD	CD	_	29	nummod	_	_
29	个	_	M	M	_	30	dep	_	_
30	爱	_	VV	VV	_	3	conj	_	_
31	虚荣	_	NN	NN	_	33	assmod	_	_
32	的	_	DEG	DEG	_	31	assm	_	_
33	人	_	NN	NN	_	30	dobj	_	_
34	,	_	PU	PU	_	30	punct	_	_
35	也	_	AD	AD	_	37	advmod	_	_
36	就	_	AD	AD	_	37	advmod	_	_
37	是	_	VC	VC	_	30	conj	_	_
38	说	_	VV	VV	_	44	rcmod	_	_
39	,	_	PU	PU	_	38	punct	_	_
40	大约	_	AD	AD	_	41	advmod	_	_
41	有	_	VE	VE	_	38	ccomp	_	_
42	二十亿	_	CD	CD	_	41	dep	_	_
43	的	_	DEC	DEC	_	38	cpm	_	_
44	大人	_	NN	NN	_	37	attr	_	_
45	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 有-01, arg0, x3 / 上面)
(x12 / 漏掉-01, arg1, x13 / 国王)
(x13 / 国王, mod, x14 / 黑人)
(x23 / 爱-01, arg0, x22 / 人)
(x23 / 爱-01, arg1, x24 / 虚荣-01)
(x3 / 上面, poss, x4 / 它)
(x38 / 有-03, arg1, x39 / 大人)
(x38 / 有-03, manner, x41 / 大约)

Input(Some(Graph((有-01 :arg0-of (mean :arg1 (有-03 :manner 大约 :arg1 (大人 :quant 2000000000))) :arg1 (and :op (国王 :quant 111 :arg1-of (mean :arg1 (漏掉-01 :polarity - :arg1 (国王 :mod 黑人)))) :op (地理学家 :quant 7000) :op (实业家 :quant 900000) :op (酒鬼 :quant 7500000) :op (人 :quant 311000000 :arg0-of (爱-01 :arg1 虚荣-01))) :arg0 (上面 :poss 它)),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(40,41,List(1),有,有-03,false), Span(39,40,List(2),大约,大约,false), Span(43,44,List(3),大人,大人,false), Span(5,6,List(4),国王,国王,false), Span(10,11,List(5),漏掉,漏掉-01,false), Span(12,13,List(6),国王,国王,false), Span(11,12,List(7),黑人,黑人,false), Span(17,18,List(8),地理学家,地理学家,false), Span(21,22,List(9),实业家,实业家,false), Span(25,26,List(10),酒鬼,酒鬼,false), Span(32,33,List(11),人,人,false), Span(29,30,List(12),爱,爱-01,false), Span(30,31,List(13),虚荣,虚荣-01,false), Span(1,2,List(14),上面,上面,false), Span(0,1,List(15),它,它,false)),Map(2 -> 大约, 5 -> 漏掉-01, 12 -> 爱-01, 15 -> 它, 8 -> 地理学家, 7 -> 黑人, 1 -> 有-03, 4 -> 国王, 11 -> 人, 14 -> 上面, 6 -> 国王, 9 -> 实业家, 0 -> 有-01, 10 -> 酒鬼, 3 -> 大人, 13 -> 虚荣-01),Map(x22 -> 人, x16 -> 地理学家, x13 -> 国王, x39 -> 大人, x12 -> 漏掉-01, x24 -> 虚荣-01, x18 -> 实业家, x4 -> 它, x41 -> 大约, x23 -> 爱-01, x38 -> 有-03, x3 -> 上面, x6 -> 国王, x20 -> 酒鬼, x14 -> 黑人, x0 -> 有-01))),[Ljava.lang.String;@6b4283c4,Annotation([Ljava.lang.String;@d0865a3,[Ljava.lang.String;@636bbbbb,[Ljava.lang.String;@7eae3764),Annotation([Ljava.lang.String;@10dc7d6,[Ljava.lang.String;@4f668f29,[Ledu.cmu.lti.nlp.amr.Dependency;@716e431d),Annotation([Ljava.lang.String;@7e744f43,[Ljava.lang.String;@11a8042c,[Ljava.lang.String;@6a4ccef7),Annotation([Ljava.lang.String;@69391e08,[Ljava.lang.String;@35eb4a3b,[Ledu.cmu.lti.nlp.amr.Entity;@64b3b1ce))
AMR:
(x0 / 有-01, ARG4, x3 / 上面)
(x0 / 有-01, mode, x6 / 国王)
(x12 / 漏掉-01, prep-through, x16 / 地理学家)
(x13 / 国王, mod, x14 / 黑人)
(x14 / 黑人, mod, x12 / 漏掉-01)
(x18 / 实业家, mode, x20 / 酒鬼)
(x18 / 实业家, source, x16 / 地理学家)
(x23 / 爱-01, source, x20 / 酒鬼)
(x23 / 爱-01, weekday, x22 / 人)
(x23 / 爱-01, weekday, x24 / 虚荣-01)
(x3 / 上面, poss, x4 / 它)
(x38 / 有-03, degree, x23 / 爱-01)
(x38 / 有-03, manner, x41 / 大约)
(x38 / 有-03, weekday, x39 / 大人)
(x6 / 国王, mode, x12 / 漏掉-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.4
WARNING: makeIds can't find span Id: 0.1.4.0
WARNING: makeIds can't find span Id: 0.1.4.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 90,200 microseconds
Sentence: 为了 使 你们 对 地球 的 大小 有 一 个 概念 ， 我 想 要 告诉 你们 ： 在 发明 电 之前 ， 在 六 个 大洲 上 ， 为了 点 路灯 ， 需要 维持 一 支 为数 四十六万二千五百一十一 人 的 真正 大军 。

Oracle Span 1:  之前 => 之前
Oracle Span 2:  人 => 人
Oracle Span 3:  你们 => 你们
Oracle Span 4:  使 => 使-01
Oracle Span 5:  发明 => 发明-01
Oracle Span 6:  告诉 => 告诉-01
Oracle Span 7:  地球 => 地球
Oracle Span 8:  大军 => 大军
Oracle Span 9:  大小 => 大小
Oracle Span 10:  大洲 => 大洲
Oracle Span 11:  我 => 我
Oracle Span 12:  有 => 有-01
Oracle Span 13:  概念 => 概念
Oracle Span 14:  点 => 点-01
Oracle Span 15:  电 => 电
Oracle Span 16:  真正 => 真正-01
Oracle Span 17:  维持 => 维持-01
Oracle Span 18:  路灯 => 路灯
Oracle Span 19:  需要 => 需要-03
Spans:
Span 21-22:  之前 => 之前
Span 39-40:  人 => 人
Span 2-3:  你们 => 你们
Span 1-2:  使 => 使-01
Span 19-20:  发明 => 发明-01
Span 15-16:  告诉 => 告诉-01
Span 4-5:  地球 => 地球
Span 42-43:  大军 => 大军
Span 6-7:  大小 => 大小
Span 26-27:  大洲 => 大洲
Span 12-13:  我 => 我
Span 7-8:  有 => 有-01
Span 10-11:  概念 => 概念
Span 30-31:  点 => 点-01
Span 20-21:  电 => 电
Span 41-42:  真正 => 真正-01
Span 34-35:  维持 => 维持-01
Span 31-32:  路灯 => 路灯
Span 33-34:  需要 => 需要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 21-22:  之前 => 之前
Oracle Span 39-40:  人 => 人
Oracle Span 2-3:  你们 => 你们
Oracle Span 1-2:  使 => 使-01
Oracle Span 19-20:  发明 => 发明-01
Oracle Span 15-16:  告诉 => 告诉-01
Oracle Span 4-5:  地球 => 地球
Oracle Span 42-43:  大军 => 大军
Oracle Span 6-7:  大小 => 大小
Oracle Span 26-27:  大洲 => 大洲
Oracle Span 12-13:  我 => 我
Oracle Span 7-8:  有 => 有-01
Oracle Span 10-11:  概念 => 概念
Oracle Span 30-31:  点 => 点-01
Oracle Span 20-21:  电 => 电
Oracle Span 41-42:  真正 => 真正-01
Oracle Span 34-35:  维持 => 维持-01
Oracle Span 31-32:  路灯 => 路灯
Oracle Span 33-34:  需要 => 需要-03

Dependencies:
1	为了	_	P	P	_	14	prep	_	_
2	使	_	VV	VV	_	1	pccomp	_	_
3	你们	_	PN	PN	_	2	dobj	_	_
4	对	_	P	P	_	8	prep	_	_
5	地球	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	大小	_	NN	NN	_	4	pobj	_	_
8	有	_	VE	VE	_	2	dep	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	11	clf	_	_
11	概念	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	我	_	PN	PN	_	14	nsubj	_	_
14	想	_	VV	VV	_	0	root	_	_
15	要	_	VV	VV	_	16	mmod	_	_
16	告诉	_	VV	VV	_	14	ccomp	_	_
17	你们	_	PN	PN	_	16	dobj	_	_
18	：	_	PU	PU	_	16	punct	_	_
19	在	_	P	P	_	34	prep	_	_
20	发明	_	VV	VV	_	22	lccomp	_	_
21	电	_	NN	NN	_	20	dobj	_	_
22	之前	_	LC	LC	_	19	plmod	_	_
23	,	_	PU	PU	_	34	punct	_	_
24	在	_	P	P	_	34	prep	_	_
25	六	_	CD	CD	_	26	nummod	_	_
26	个	_	M	M	_	27	clf	_	_
27	大洲	_	NN	NN	_	28	lobj	_	_
28	上	_	LC	LC	_	24	plmod	_	_
29	,	_	PU	PU	_	34	punct	_	_
30	为了	_	P	P	_	34	prep	_	_
31	点	_	NN	NN	_	32	nsubj	_	_
32	路灯	_	VV	VV	_	30	pccomp	_	_
33	,	_	PU	PU	_	34	punct	_	_
34	需要	_	VV	VV	_	16	dep	_	_
35	维持	_	VV	VV	_	34	ccomp	_	_
36	一	_	CD	CD	_	37	nummod	_	_
37	支	_	M	M	_	38	clf	_	_
38	为数	_	NN	NN	_	40	nn	_	_
39	四十六万二千五百一十一	_	CD	CD	_	40	nummod	_	_
40	人	_	NN	NN	_	43	assmod	_	_
41	的	_	DEG	DEG	_	40	assm	_	_
42	真正	_	JJ	JJ	_	43	amod	_	_
43	大军	_	NN	NN	_	35	dobj	_	_
44	。	_	PU	PU	_	14	punct	_	_
45	我	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x14 / 点-01, arg1, x15 / 路灯)
(x19 / 之前, arg0, x32 / 发明-01)
(x23 / 使-01, arg2, x25 / 有-01)
(x25 / 有-01, arg1, x27 / 概念)
(x27 / 概念, topic, x29 / 大小)
(x29 / 大小, mod, x30 / 地球)
(x3 / 告诉-01, arg1, x5 / 需要-03)
(x3 / 告诉-01, arg2, x22 / 你们)
(x32 / 发明-01, arg1, x33 / 电)
(x5 / 需要-03, arg0, x6 / 维持-01)
(x5 / 需要-03, location, x16 / 大洲)
(x5 / 需要-03, purpose, x14 / 点-01)
(x5 / 需要-03, time, x19 / 之前)
(x6 / 维持-01, arg1, x7 / 大军)
(x6 / 维持-01, arg2, x10 / 人)
(x7 / 大军, mod, x9 / 真正-01)

Input(Some(Graph((想要-01 :arg0 我 :arg1 (告诉-01 :arg2 你们 :arg1 (需要-03 :time (之前 :arg0 (发明-01 :arg1 电)) :location (大洲 :quant 6) :purpose (点-01 :arg1 路灯) :arg0 (维持-01 :arg2 (人 :quant 462511) :arg1 (大军 :quant 1 :mod 真正-01))) :arg0 x2) :purpose (使-01 :arg2 (有-01 :arg1 (概念 :quant 1 :topic (大小 :mod 地球)) :arg0 x22) :arg1 x22)),ArrayBuffer(Span(12,13,List(0),我,我,false), Span(15,16,List(1),告诉,告诉-01,false), Span(2,3,List(2),你们,你们,false), Span(33,34,List(3),需要,需要-03,false), Span(21,22,List(4),之前,之前,false), Span(19,20,List(5),发明,发明-01,false), Span(20,21,List(6),电,电,false), Span(26,27,List(7),大洲,大洲,false), Span(30,31,List(8),点,点-01,false), Span(31,32,List(9),路灯,路灯,false), Span(34,35,List(10),维持,维持-01,false), Span(39,40,List(11),人,人,false), Span(42,43,List(12),大军,大军,false), Span(41,42,List(13),真正,真正-01,false), Span(1,2,List(14),使,使-01,false), Span(7,8,List(15),有,有-01,false), Span(10,11,List(16),概念,概念,false), Span(6,7,List(17),大小,大小,false), Span(4,5,List(18),地球,地球,false)),Map(2 -> 你们, 5 -> 发明-01, 12 -> 大军, 15 -> 有-01, 8 -> 点-01, 18 -> 地球, 7 -> 大洲, 17 -> 大小, 1 -> 告诉-01, 4 -> 之前, 11 -> 人, 14 -> 使-01, 6 -> 电, 9 -> 路灯, 0 -> 我, 16 -> 概念, 10 -> 维持-01, 3 -> 需要-03, 13 -> 真正-01),Map(x22 -> 你们, x16 -> 大洲, x25 -> 有-01, x10 -> 人, x19 -> 之前, x2 -> 我, x5 -> 需要-03, x30 -> 地球, x27 -> 概念, x33 -> 电, x15 -> 路灯, x7 -> 大军, x23 -> 使-01, x32 -> 发明-01, x3 -> 告诉-01, x29 -> 大小, x6 -> 维持-01, x14 -> 点-01, x9 -> 真正-01))),[Ljava.lang.String;@6884f0d9,Annotation([Ljava.lang.String;@49ec6a9f,[Ljava.lang.String;@26b95b0b,[Ljava.lang.String;@5f7da3d3),Annotation([Ljava.lang.String;@103082dd,[Ljava.lang.String;@3a22bad6,[Ledu.cmu.lti.nlp.amr.Dependency;@56afdf9a),Annotation([Ljava.lang.String;@64fe9da7,[Ljava.lang.String;@70cccd8f,[Ljava.lang.String;@5f172d4a),Annotation([Ljava.lang.String;@77ec6a3d,[Ljava.lang.String;@67efd2c2,[Ledu.cmu.lti.nlp.amr.Entity;@71d9cb05))
AMR:
(x10 / 人, location, x6 / 维持-01)
(x19 / 之前, time, x33 / 电)
(x23 / 使-01, century, x22 / 你们)
(x25 / 有-01, topic, x29 / 大小)
(x27 / 概念, topic, x29 / 大小)
(x29 / 大小, location, x23 / 使-01)
(x29 / 大小, mod, x30 / 地球)
(x3 / 告诉-01, location, x2 / 我)
(x3 / 告诉-01, topic, x27 / 概念)
(x32 / 发明-01, degree, x33 / 电)
(x32 / 发明-01, location, x3 / 告诉-01)
(x5 / 需要-03, location, x15 / 路灯)
(x5 / 需要-03, location, x16 / 大洲)
(x5 / 需要-03, purpose, x14 / 点-01)
(x5 / 需要-03, time, x19 / 之前)
(x6 / 维持-01, topic, x5 / 需要-03)
(x7 / 大军, location, x10 / 人)
(x7 / 大军, mod, x9 / 真正-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.3.0
WARNING: makeIds can't find span Id: 0.1.1.3.0.0
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.1.0
WARNING: makeIds can't find span Id: 0.2.1.1.0.0
Decoded in 118,454 microseconds
Sentence: 从 稍 远 的 地方 看 过去 ， 它 给 人 以 一 种 壮丽 辉煌 的 印象 。

Oracle Span 1:  人 => 人
Oracle Span 2:  印象 => 印象
Oracle Span 3:  地方 => 地方
Oracle Span 4:  壮丽 => 壮丽-01
Oracle Span 5:  它 => 它
Oracle Span 6:  看 => 看-02
Oracle Span 7:  稍 => 稍
Oracle Span 8:  给 => 给-01
Oracle Span 9:  辉煌 => 辉煌-01
Oracle Span 10:  过去 => 过去
Oracle Span 11:  远 => 远-01
Spans:
Span 10-11:  人 => 人
Span 17-18:  印象 => 印象
Span 4-5:  地方 => 地方
Span 14-15:  壮丽 => 壮丽-01
Span 8-9:  它 => 它
Span 5-6:  看 => 看-02
Span 1-2:  稍 => 稍
Span 9-10:  给 => 给-01
Span 15-16:  辉煌 => 辉煌-01
Span 6-7:  过去 => 过去
Span 2-3:  远 => 远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 17-18:  印象 => 印象
Oracle Span 4-5:  地方 => 地方
Oracle Span 14-15:  壮丽 => 壮丽-01
Oracle Span 8-9:  它 => 它
Oracle Span 5-6:  看 => 看-02
Oracle Span 1-2:  稍 => 稍
Oracle Span 9-10:  给 => 给-01
Oracle Span 15-16:  辉煌 => 辉煌-01
Oracle Span 6-7:  过去 => 过去
Oracle Span 2-3:  远 => 远-01

Dependencies:
1	从	_	P	P	_	6	prep	_	_
2	稍	_	AD	AD	_	3	advmod	_	_
3	远	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	地方	_	NN	NN	_	1	pobj	_	_
6	看	_	VV	VV	_	0	root	_	_
7	过去	_	NT	NT	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	它	_	PN	PN	_	15	nsubj	_	_
10	给	_	P	P	_	15	prep	_	_
11	人	_	NN	NN	_	10	pobj	_	_
12	以	_	P	P	_	15	prep	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	种	_	M	M	_	12	pobj	_	_
15	壮丽	_	VV	VV	_	6	dep	_	_
16	辉煌	_	VA	VA	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	印象	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x21 / 给-01, arg0, x23 / 它)
(x21 / 给-01, arg1, x24 / 印象)
(x21 / 给-01, arg2, x28 / 人)
(x21 / 给-01, manner, x29 / 看-02)
(x24 / 印象, mod, x26 / 壮丽-01)
(x24 / 印象, mod, x27 / 辉煌-01)
(x29 / 看-02, direction, x33 / 过去)
(x29 / 看-02, location, x30 / 地方)
(x30 / 地方, mod, x31 / 远-01)
(x31 / 远-01, degree, x32 / 稍)

Input(Some(Graph((给-01 :manner (看-02 :direction 过去 :location (地方 :mod (远-01 :degree 稍))) :arg2 人 :arg1 (印象 :mod 辉煌-01 :mod 壮丽-01 :quant 1) :arg0 它),ArrayBuffer(Span(9,10,List(0),给,给-01,false), Span(5,6,List(1),看,看-02,false), Span(6,7,List(2),过去,过去,false), Span(4,5,List(3),地方,地方,false), Span(2,3,List(4),远,远-01,false), Span(1,2,List(5),稍,稍,false), Span(10,11,List(6),人,人,false), Span(17,18,List(7),印象,印象,false), Span(15,16,List(8),辉煌,辉煌-01,false), Span(14,15,List(9),壮丽,壮丽-01,false), Span(8,9,List(10),它,它,false)),Map(2 -> 过去, 5 -> 稍, 8 -> 辉煌-01, 7 -> 印象, 1 -> 看-02, 4 -> 远-01, 6 -> 人, 9 -> 壮丽-01, 0 -> 给-01, 10 -> 它, 3 -> 地方),Map(x28 -> 人, x31 -> 远-01, x30 -> 地方, x27 -> 辉煌-01, x33 -> 过去, x21 -> 给-01, x24 -> 印象, x23 -> 它, x26 -> 壮丽-01, x32 -> 稍, x29 -> 看-02))),[Ljava.lang.String;@17c2d509,Annotation([Ljava.lang.String;@36bf84e,[Ljava.lang.String;@1a0b5323,[Ljava.lang.String;@25b52284),Annotation([Ljava.lang.String;@245ec1a6,[Ljava.lang.String;@782be4eb,[Ledu.cmu.lti.nlp.amr.Dependency;@38792286),Annotation([Ljava.lang.String;@34d4860f,[Ljava.lang.String;@665522c2,[Ljava.lang.String;@41fe8e5f),Annotation([Ljava.lang.String;@3062f9f4,[Ljava.lang.String;@2016f509,[Ledu.cmu.lti.nlp.amr.Entity;@6f1a80fb))
AMR:
(x21 / 给-01, ARG4, x23 / 它)
(x21 / 给-01, instrument, x28 / 人)
(x21 / 给-01, manner, x29 / 看-02)
(x21 / 给-01, time, x24 / 印象)
(x24 / 印象, mod, x26 / 壮丽-01)
(x24 / 印象, mod, x27 / 辉煌-01)
(x29 / 看-02, direction, x33 / 过去)
(x29 / 看-02, location, x30 / 地方)
(x30 / 地方, mod, x31 / 远-01)
(x31 / 远-01, degree, x32 / 稍)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.0
WARNING: makeIds can't find span Id: 0.3.0.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 35,290 microseconds
Sentence: 这 支 军队 的 行动 就 象 歌剧院 的 芭蕾舞 动作 一样 ， 那么 有条不紊 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  军队 => 军队
Oracle Span 3:  动作 => 动作
Oracle Span 4:  就 => 就
Oracle Span 5:  有条不紊 => 有条不紊-01
Oracle Span 6:  歌剧院 => 歌剧院
Oracle Span 7:  芭蕾舞 => 芭蕾舞
Oracle Span 8:  行动 => 行动-01
Oracle Span 9:  这 => 这
Oracle Span 10:  那么 => 那么
Spans:
Span 11-12:  一样 => 一样-01
Span 2-3:  军队 => 军队
Span 10-11:  动作 => 动作
Span 5-6:  就 => 就
Span 14-15:  有条不紊 => 有条不紊-01
Span 7-8:  歌剧院 => 歌剧院
Span 9-10:  芭蕾舞 => 芭蕾舞
Span 4-5:  行动 => 行动-01
Span 0-1:  这 => 这
Span 13-14:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一样 => 一样-01
Oracle Span 2-3:  军队 => 军队
Oracle Span 10-11:  动作 => 动作
Oracle Span 5-6:  就 => 就
Oracle Span 14-15:  有条不紊 => 有条不紊-01
Oracle Span 7-8:  歌剧院 => 歌剧院
Oracle Span 9-10:  芭蕾舞 => 芭蕾舞
Oracle Span 4-5:  行动 => 行动-01
Oracle Span 0-1:  这 => 这
Oracle Span 13-14:  那么 => 那么

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	支	_	M	M	_	1	clf	_	_
3	军队	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	行动	_	NN	NN	_	12	nsubj	_	_
6	就	_	AD	AD	_	12	advmod	_	_
7	象	_	P	P	_	12	prep	_	_
8	歌剧院	_	NN	NN	_	11	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	芭蕾舞	_	JJ	JJ	_	11	amod	_	_
11	动作	_	NN	NN	_	7	pobj	_	_
12	一样	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	那么	_	AD	AD	_	15	advmod	_	_
15	有条不紊	_	VV	VV	_	12	dep	_	_
16	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x10 / 有条不紊-01, degree, x11 / 那么)
(x2 / 行动-01, arg0, x3 / 军队)
(x2 / 行动-01, manner, x10 / 有条不紊-01)
(x3 / 军队, mod, x4 / 这)
(x6 / 动作, mod, x7 / 芭蕾舞)
(x7 / 芭蕾舞, location, x8 / 歌剧院)

Input(Some(Graph((像-01 :arg0 (行动-01 :manner (有条不紊-01 :degree 那么) :arg0 (军队 :mod 这)) :manner 就 :arg1 (动作 :mod (芭蕾舞 :location 歌剧院)) :arg2 一样-01),ArrayBuffer(Span(4,5,List(0),行动,行动-01,false), Span(14,15,List(1),有条不紊,有条不紊-01,false), Span(13,14,List(2),那么,那么,false), Span(2,3,List(3),军队,军队,false), Span(0,1,List(4),这,这,false), Span(5,6,List(5),就,就,false), Span(10,11,List(6),动作,动作,false), Span(9,10,List(7),芭蕾舞,芭蕾舞,false), Span(7,8,List(8),歌剧院,歌剧院,false), Span(11,12,List(9),一样,一样-01,false)),Map(2 -> 那么, 5 -> 就, 8 -> 歌剧院, 7 -> 芭蕾舞, 1 -> 有条不紊-01, 4 -> 这, 6 -> 动作, 9 -> 一样-01, 0 -> 行动-01, 3 -> 军队),Map(x10 -> 有条不紊-01, x2 -> 行动-01, x5 -> 就, x8 -> 歌剧院, x7 -> 芭蕾舞, x4 -> 这, x3 -> 军队, x11 -> 那么, x6 -> 动作, x9 -> 一样-01))),[Ljava.lang.String;@5a237731,Annotation([Ljava.lang.String;@7d2998d8,[Ljava.lang.String;@6a0094c9,[Ljava.lang.String;@51a6cc2a),Annotation([Ljava.lang.String;@10fda3d0,[Ljava.lang.String;@2123064f,[Ledu.cmu.lti.nlp.amr.Dependency;@4f6b687e),Annotation([Ljava.lang.String;@28cb3a25,[Ljava.lang.String;@5555ffcf,[Ljava.lang.String;@6cfd9a54),Annotation([Ljava.lang.String;@78c1372d,[Ljava.lang.String;@9aa2002,[Ledu.cmu.lti.nlp.amr.Entity;@73fb1d7f))
AMR:
(x10 / 有条不紊-01, degree, x11 / 那么)
(x2 / 行动-01, manner, x10 / 有条不紊-01)
(x2 / 行动-01, time, x3 / 军队)
(x3 / 军队, mod, x4 / 这)
(x5 / 就, ARG3, x2 / 行动-01)
(x6 / 动作, ARG5, x9 / 一样-01)
(x6 / 动作, mod, x7 / 芭蕾舞)
(x7 / 芭蕾舞, location, x8 / 歌剧院)
(x9 / 一样-01, ARG3, x10 / 有条不紊-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.3
Decoded in 30,088 microseconds
Sentence: 首先 出现 的 是 新西兰 和 澳大利亚 的 点灯人 。

Oracle Span 1:  出现 => 出现-01
Oracle Span 2:  新西兰 => 新西兰
Oracle Span 3:  澳大利亚 => 澳大利亚
Oracle Span 4:  首先 => 首先
NER Entity: (country :name (name :op "新西兰"))
NER Entity: (country :name (name :op "澳大利亚"))
Spans:
Span 1-2:  出现 => 出现-01
Span 4-5:  新西兰 => 新西兰
Span 6-7:  澳大利亚 => 澳大利亚
Span 0-1:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  出现 => 出现-01
Oracle Span 4-5:  新西兰 => 新西兰
Oracle Span 6-7:  澳大利亚 => 澳大利亚
Oracle Span 0-1:  首先 => 首先

Dependencies:
1	首先	_	AD	AD	_	2	advmod	_	_
2	出现	_	VV	VV	_	4	top	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	是	_	VC	VC	_	0	root	_	_
5	新西兰	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	澳大利亚	_	NR	NR	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	点灯人	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 出现-01, manner, x8 / 首先)

Input(Some(Graph((出现-01 :arg0 (人 :arg0-of (点-01 :arg1 灯) :location (and :op 新西兰 :op 澳大利亚)) :manner 首先),ArrayBuffer(Span(1,2,List(0),出现,出现-01,false), Span(4,5,List(1),新西兰,新西兰,false), Span(6,7,List(2),澳大利亚,澳大利亚,false), Span(0,1,List(3),首先,首先,false)),Map(2 -> 澳大利亚, 1 -> 新西兰, 0 -> 出现-01, 3 -> 首先),Map(x13 -> 新西兰, x8 -> 首先, x14 -> 澳大利亚, x0 -> 出现-01))),[Ljava.lang.String;@73d4066e,Annotation([Ljava.lang.String;@25d2f66,[Ljava.lang.String;@5a2fa51f,[Ljava.lang.String;@71945bc0),Annotation([Ljava.lang.String;@22a0d4ea,[Ljava.lang.String;@49ede9c7,[Ledu.cmu.lti.nlp.amr.Dependency;@6ecdbab8),Annotation([Ljava.lang.String;@3dd4a6fa,[Ljava.lang.String;@19f7222e,[Ljava.lang.String;@3f725306),Annotation([Ljava.lang.String;@3c69362a,[Ljava.lang.String;@2412a42b,[Ledu.cmu.lti.nlp.amr.Entity;@45404d5))
AMR:
(x0 / 出现-01, manner, x8 / 首先)
(x13 / 新西兰, ARG3, x14 / 澳大利亚)
(x14 / 澳大利亚, mod, x8 / 首先)

WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,959 microseconds
Sentence: 点着 了 灯 ， 随后 他们 就 去 睡觉 了 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  去 => 去-01
Oracle Span 3:  就 => 就
Oracle Span 4:  灯 => 灯
Oracle Span 5:  点着 => 点着-01
Oracle Span 6:  睡觉 => 睡觉-01
Spans:
Span 5-6:  他们 => 他们
Span 7-8:  去 => 去-01
Span 6-7:  就 => 就
Span 2-3:  灯 => 灯
Span 0-1:  点着 => 点着-01
Span 8-9:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他们 => 他们
Oracle Span 7-8:  去 => 去-01
Oracle Span 6-7:  就 => 就
Oracle Span 2-3:  灯 => 灯
Oracle Span 0-1:  点着 => 点着-01
Oracle Span 8-9:  睡觉 => 睡觉-01

Dependencies:
1	点着	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	灯	_	NN	NN	_	1	dobj	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	随后	_	AD	AD	_	9	advmod	_	_
6	他们	_	PN	PN	_	9	nsubj	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	去	_	MSP	MSP	_	9	prtmod	_	_
9	睡觉	_	VV	VV	_	1	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x5 / 点着-01, arg0, x6 / 他们)
(x5 / 点着-01, arg1, x7 / 灯)
(x8 / 去-01, arg1, x11 / 睡觉-01)
(x8 / 去-01, manner, x9 / 就)

Input(Some(Graph((temporal :arg1 (点着-01 :arg1 灯 :arg0 他们) :arg2 (去-01 :arg1 (睡觉-01 :arg0 x6) :arg0 x6 :manner 就)),ArrayBuffer(Span(0,1,List(0),点着,点着-01,false), Span(2,3,List(1),灯,灯,false), Span(5,6,List(2),他们,他们,false), Span(7,8,List(3),去,去-01,false), Span(8,9,List(4),睡觉,睡觉-01,false), Span(6,7,List(5),就,就,false)),Map(2 -> 他们, 5 -> 就, 1 -> 灯, 4 -> 睡觉-01, 0 -> 点着-01, 3 -> 去-01),Map(x5 -> 点着-01, x8 -> 去-01, x7 -> 灯, x11 -> 睡觉-01, x6 -> 他们, x9 -> 就))),[Ljava.lang.String;@29138d3a,Annotation([Ljava.lang.String;@5cbe2654,[Ljava.lang.String;@6dbcf214,[Ljava.lang.String;@496a31da),Annotation([Ljava.lang.String;@7c251f90,[Ljava.lang.String;@51841ac6,[Ledu.cmu.lti.nlp.amr.Dependency;@5ba26eb0),Annotation([Ljava.lang.String;@435e60ff,[Ljava.lang.String;@17d32e9b,[Ljava.lang.String;@66f0548d),Annotation([Ljava.lang.String;@2e6f610d,[Ljava.lang.String;@1e86a5a7,[Ledu.cmu.lti.nlp.amr.Entity;@10afe71a))
AMR:
(x5 / 点着-01, ARG3, x6 / 他们)
(x5 / 点着-01, mod, x7 / 灯)
(x8 / 去-01, manner, x9 / 就)
(x8 / 去-01, prep-through, x11 / 睡觉-01)
(x8 / 去-01, time, x5 / 点着-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 12,564 microseconds
Sentence: 于是 就 轮到 中国 和 西伯利亚 的 点灯人 走上 舞台 。 随后 ， 他们 也 藏到 幕布 后面 去 了 。

Oracle Span 1:  中国 => 中国
Oracle Span 2:  也 => 也
Oracle Span 3:  他们 => 他们
Oracle Span 4:  后面 => 后面
Oracle Span 5:  就 => 就
Oracle Span 6:  幕布 => 幕布
Oracle Span 7:  舞台 => 舞台
Oracle Span 8:  西伯利亚 => 西伯利亚
Oracle Span 9:  走上 => 走上-01
Oracle Span 10:  轮到 => 轮到-01
NER Entity: (country :name (name :op "中国"))
NER Entity: (country :name (name :op "西伯利亚"))
Spans:
Span 3-4:  中国 => 中国
Span 14-15:  也 => 也
Span 13-14:  他们 => 他们
Span 17-18:  后面 => 后面
Span 1-2:  就 => 就
Span 16-17:  幕布 => 幕布
Span 9-10:  舞台 => 舞台
Span 5-6:  西伯利亚 => 西伯利亚
Span 8-9:  走上 => 走上-01
Span 2-3:  轮到 => 轮到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  中国 => 中国
Oracle Span 14-15:  也 => 也
Oracle Span 13-14:  他们 => 他们
Oracle Span 17-18:  后面 => 后面
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  幕布 => 幕布
Oracle Span 9-10:  舞台 => 舞台
Oracle Span 5-6:  西伯利亚 => 西伯利亚
Oracle Span 8-9:  走上 => 走上-01
Oracle Span 2-3:  轮到 => 轮到-01

Dependencies:
1	于是	_	AD	AD	_	9	advmod	_	_
2	就	_	P	P	_	9	prep	_	_
3	轮到	_	NR	NR	_	6	nn	_	_
4	中国	_	NR	NR	_	6	conj	_	_
5	和	_	CC	CC	_	6	cc	_	_
6	西伯利亚	_	NR	NR	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	点灯人	_	NN	NN	_	2	pobj	_	_
9	走上	_	VV	VV	_	0	root	_	_
10	舞台	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	随后	_	AD	AD	_	16	advmod	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	他们	_	PN	PN	_	16	nsubj	_	_
15	也	_	AD	AD	_	16	advmod	_	_
16	藏到	_	VV	VV	_	9	dep	_	_
17	幕布	_	NN	NN	_	18	nn	_	_
18	后面	_	NN	NN	_	16	dobj	_	_
19	去	_	VV	VV	_	16	conj	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x21 / 后面, arg0, x23 / 幕布)
(x3 / 轮到-01, manner, x4 / 就)
(x45 / 走上-01, arg1, x46 / 舞台)

Input(Some(Graph((multi-sentence :snt1 (temporal :arg2 (轮到-01 :arg1 (人 :arg0-of (点-01 :arg1 灯) :location (and :op 中国 :op 西伯利亚) :arg0-of (走上-01 :arg1 舞台)) :manner 就)) :snt2 (temporal :arg3 (藏-01 :arg0 他们 :manner 也 :location (后面 :arg0 幕布)))),ArrayBuffer(Span(2,3,List(0),轮到,轮到-01,false), Span(3,4,List(1),中国,中国,false), Span(5,6,List(2),西伯利亚,西伯利亚,false), Span(8,9,List(3),走上,走上-01,false), Span(9,10,List(4),舞台,舞台,false), Span(1,2,List(5),就,就,false), Span(13,14,List(6),他们,他们,false), Span(14,15,List(7),也,也,false), Span(17,18,List(8),后面,后面,false), Span(16,17,List(9),幕布,幕布,false)),Map(2 -> 西伯利亚, 5 -> 就, 8 -> 后面, 7 -> 也, 1 -> 中国, 4 -> 舞台, 6 -> 他们, 9 -> 幕布, 0 -> 轮到-01, 3 -> 走上-01),Map(x46 -> 舞台, x43 -> 中国, x19 -> 他们, x45 -> 走上-01, x21 -> 后面, x4 -> 就, x23 -> 幕布, x44 -> 西伯利亚, x3 -> 轮到-01, x20 -> 也))),[Ljava.lang.String;@741f8dbe,Annotation([Ljava.lang.String;@212dfd39,[Ljava.lang.String;@a2ddf26,[Ljava.lang.String;@65d57e4e),Annotation([Ljava.lang.String;@6daf7d37,[Ljava.lang.String;@23a5818e,[Ledu.cmu.lti.nlp.amr.Dependency;@4715ae33),Annotation([Ljava.lang.String;@9fc9f91,[Ljava.lang.String;@1fac1d5c,[Ljava.lang.String;@108a46d6),Annotation([Ljava.lang.String;@7a8406c2,[Ljava.lang.String;@17690e14,[Ledu.cmu.lti.nlp.amr.Entity;@6850b758))
AMR:
(x19 / 他们, ARG0, x20 / 也)
(x19 / 他们, location, x23 / 幕布)
(x21 / 后面, location, x23 / 幕布)
(x3 / 轮到-01, manner, x4 / 就)
(x4 / 就, age, x44 / 西伯利亚)
(x43 / 中国, ARG4, x3 / 轮到-01)
(x45 / 走上-01, degree, x44 / 西伯利亚)
(x45 / 走上-01, quant, x46 / 舞台)
(x46 / 舞台, mod, x19 / 他们)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.0
Decoded in 35,501 microseconds
Sentence: 于是 就 又 轮到 俄罗斯 和 印度 的 点灯人 了 。 然后 就 是 非洲 和 欧洲 的 。 接着 是 南美 的 ， 再 就 是 北美 的 。

Oracle Span 1:  俄罗斯 => 俄罗斯
Oracle Span 2:  北美 => (person :location 北美)
Oracle Span 3:  南美 => (person :location 南美)
Oracle Span 4:  印度 => 印度
Oracle Span 5:  又 => 又
Oracle Span 6:  就 => 就
Oracle Span 7:  欧洲 => 欧洲
Oracle Span 8:  轮到 => 轮到-01
Oracle Span 9:  非洲 => 非洲
NER Entity: (country :name (name :op "俄罗斯"))
NER Entity: (country :name (name :op "印度"))
NER Entity: (country :name (name :op "非洲"))
NER Entity: (country :name (name :op "欧洲"))
NER Entity: (country :name (name :op "南美"))
NER Entity: (country :name (name :op "北美"))
Spans:
Span 4-5:  俄罗斯 => 俄罗斯
Span 27-28:  北美 => (person :location 北美)
Span 21-22:  南美 => (person :location 南美)
Span 6-7:  印度 => 印度
Span 2-3:  又 => 又
Span 1-2:  就 => 就
Span 16-17:  欧洲 => 欧洲
Span 3-4:  轮到 => 轮到-01
Span 14-15:  非洲 => 非洲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  俄罗斯 => 俄罗斯
Oracle Span 27-28:  北美 => (person :location 北美)
Oracle Span 21-22:  南美 => (person :location 南美)
Oracle Span 6-7:  印度 => 印度
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  欧洲 => 欧洲
Oracle Span 3-4:  轮到 => 轮到-01
Oracle Span 14-15:  非洲 => 非洲

Dependencies:
1	于是	_	AD	AD	_	14	advmod	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	轮到	_	VV	VV	_	9	nsubj	_	_
5	俄罗斯	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	印度	_	NR	NR	_	4	dobj	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	点灯人	_	VV	VV	_	14	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	然后	_	AD	AD	_	14	advmod	_	_
13	就	_	AD	AD	_	14	advmod	_	_
14	是	_	VC	VC	_	0	root	_	_
15	非洲	_	NR	NR	_	17	conj	_	_
16	和	_	CC	CC	_	17	cc	_	_
17	欧洲	_	NR	NR	_	14	attr	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	。	_	PU	PU	_	14	punct	_	_
20	接着	_	NN	NN	_	21	top	_	_
21	是	_	VC	VC	_	14	dep	_	_
22	南美	_	NR	NR	_	21	attr	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	,	_	PU	PU	_	14	punct	_	_
25	再	_	AD	AD	_	27	advmod	_	_
26	就	_	AD	AD	_	27	advmod	_	_
27	是	_	VC	VC	_	14	conj	_	_
28	北美	_	NR	NR	_	27	attr	_	_
29	的	_	DEG	DEG	_	28	assm	_	_
30	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x31 / 轮到-01, manner, x38 / 又)
(x31 / 轮到-01, manner, x39 / 就)
(x44 / person, location, x45 / 南美)
(x46 / person, location, x47 / 北美)

Input(Some(Graph((temporal :arg2 (轮到-01 :manner 就 :manner 又 :arg0 (人 :arg0-of (点-01 :arg1 灯) :location (and :op 俄罗斯 :op 印度))) :arg3 (person :location (and :op 非洲 :op 欧洲)) :arg4 (person :location 南美) :arg5 (person :location 北美)),ArrayBuffer(Span(3,4,List(0),轮到,轮到-01,false), Span(1,2,List(1),就,就,false), Span(2,3,List(2),又,又,false), Span(4,5,List(3),俄罗斯,俄罗斯,false), Span(6,7,List(4),印度,印度,false), Span(14,15,List(5),非洲,非洲,false), Span(16,17,List(6),欧洲,欧洲,false), Span(21,22,List(7, 8),南美,(person :location 南美),false), Span(27,28,List(9, 10),北美,(person :location 北美),false)),Map(2 -> 又, 5 -> 非洲, 8 -> 南美, 7 -> person, 1 -> 就, 4 -> 印度, 6 -> 欧洲, 9 -> person, 0 -> 轮到-01, 10 -> 北美, 3 -> 俄罗斯),Map(x46 -> person, x43 -> 欧洲, x37 -> 印度, x31 -> 轮到-01, x39 -> 就, x45 -> 南美, x42 -> 非洲, x36 -> 俄罗斯, x44 -> person, x38 -> 又, x47 -> 北美))),[Ljava.lang.String;@2a2ef072,Annotation([Ljava.lang.String;@704641e3,[Ljava.lang.String;@2f00f851,[Ljava.lang.String;@4207609e),Annotation([Ljava.lang.String;@1f77b5cc,[Ljava.lang.String;@5d7ca698,[Ledu.cmu.lti.nlp.amr.Dependency;@75961f16),Annotation([Ljava.lang.String;@c6c82aa,[Ljava.lang.String;@2e179f3e,[Ljava.lang.String;@16e7b402),Annotation([Ljava.lang.String;@534c6767,[Ljava.lang.String;@3bddc676,[Ledu.cmu.lti.nlp.amr.Entity;@29a1505c))
AMR:
(x31 / 轮到-01, ARG4, x36 / 俄罗斯)
(x31 / 轮到-01, degree, x42 / 非洲)
(x31 / 轮到-01, manner, x38 / 又)
(x31 / 轮到-01, manner, x39 / 就)
(x37 / 印度, domain, x39 / 就)
(x43 / 欧洲, ARG4, x42 / 非洲)
(x44 / person, domain, x42 / 非洲)
(x44 / person, location, x45 / 南美)
(x46 / person, location, x47 / 北美)
(x46 / person, mod, x42 / 非洲)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.0
Decoded in 45,185 microseconds
Sentence: 他们 从来 也 不 会 搞 错 他们 上场 的 次序 。

Oracle Span 1:  上场 => 上场-01
Oracle Span 2:  也 => 也
Oracle Span 3:  从来 => 从来
Oracle Span 4:  他们 => 他们
Oracle Span 5:  会 => 会-02
Oracle Span 6:  次序 => 次序
Spans:
Span 8-9:  上场 => 上场-01
Span 2-3:  也 => 也
Span 1-2:  从来 => 从来
Span 0-1:  他们 => 他们
Span 4-5:  会 => 会-02
Span 10-11:  次序 => 次序

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  上场 => 上场-01
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他们 => 他们
Oracle Span 4-5:  会 => 会-02
Oracle Span 10-11:  次序 => 次序

Dependencies:
1	他们	_	PN	PN	_	6	nsubj	_	_
2	从来	_	AD	AD	_	6	advmod	_	_
3	也	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	会	_	VV	VV	_	6	mmod	_	_
6	搞	_	VV	VV	_	0	root	_	_
7	错	_	VA	VA	_	6	rcomp	_	_
8	他们	_	PN	PN	_	9	nsubj	_	_
9	上场	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	次序	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 会-02, manner, x5 / 也)
(x0 / 会-02, time, x9 / 从来)
(x6 / 次序, mod, x7 / 上场-01)

Input(Some(Graph((会-02 :time 从来 :manner 也 :arg0 (搞错 :arg0 他们 :arg1 (次序 :mod (上场-01 :arg0 x4))) :polarity -),ArrayBuffer(Span(4,5,List(0),会,会-02,false), Span(1,2,List(1),从来,从来,false), Span(2,3,List(2),也,也,false), Span(0,1,List(3),他们,他们,false), Span(10,11,List(4),次序,次序,false), Span(8,9,List(5),上场,上场-01,false)),Map(2 -> 也, 5 -> 上场-01, 1 -> 从来, 4 -> 次序, 0 -> 会-02, 3 -> 他们),Map(x5 -> 也, x7 -> 上场-01, x4 -> 他们, x6 -> 次序, x9 -> 从来, x0 -> 会-02))),[Ljava.lang.String;@24db6ce,Annotation([Ljava.lang.String;@320a8ebf,[Ljava.lang.String;@67b100fe,[Ljava.lang.String;@44b18fe4),Annotation([Ljava.lang.String;@2ba5aa7a,[Ljava.lang.String;@4d3ca6c7,[Ledu.cmu.lti.nlp.amr.Dependency;@22e5f96e),Annotation([Ljava.lang.String;@6a638c79,[Ljava.lang.String;@6c931d35,[Ljava.lang.String;@44b194fe),Annotation([Ljava.lang.String;@49122b8f,[Ljava.lang.String;@3fe46690,[Ledu.cmu.lti.nlp.amr.Entity;@4beabeec))
AMR:
(x0 / 会-02, manner, x5 / 也)
(x0 / 会-02, time, x9 / 从来)
(x4 / 他们, ARG6, x5 / 也)
(x6 / 次序, mod, x7 / 上场-01)
(x7 / 上场-01, location, x4 / 他们)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 13,190 microseconds
Sentence: 真 了不起 。

Oracle Span 1:  了不起 => 了不起-01
Oracle Span 2:  真 => 真
Spans:
Span 1-2:  了不起 => 了不起-01
Span 0-1:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  了不起 => 了不起-01
Oracle Span 0-1:  真 => 真

Dependencies:
1	真	_	AD	AD	_	2	advmod	_	_
2	了不起	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 了不起-01, degree, x2 / 真)

Input(Some(Graph((了不起-01 :degree 真),ArrayBuffer(Span(1,2,List(0),了不起,了不起-01,false), Span(0,1,List(1),真,真,false)),Map(1 -> 真, 0 -> 了不起-01),Map(x2 -> 真, x0 -> 了不起-01))),[Ljava.lang.String;@3b4d50b,Annotation([Ljava.lang.String;@5b22d8a1,[Ljava.lang.String;@476ee5b3,[Ljava.lang.String;@59ed3e6c),Annotation([Ljava.lang.String;@7cd4a4d7,[Ljava.lang.String;@317e9c3c,[Ledu.cmu.lti.nlp.amr.Dependency;@18da4dd),Annotation([Ljava.lang.String;@31a3f4de,[Ljava.lang.String;@68880c21,[Ljava.lang.String;@2dd2e270),Annotation([Ljava.lang.String;@4195105b,[Ljava.lang.String;@6f3e19b3,[Ledu.cmu.lti.nlp.amr.Entity;@47ffe971))
AMR:
(x0 / 了不起-01, degree, x2 / 真)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,999 microseconds
Sentence: 北极 仅 有 一 盏 路灯 ， 南极 也 只 有 一 盏 ； 唯独 北极 的 点灯人 和 他 南极 的 同行 ， 过 着 闲逸 、 懒散 的 生活 ： 他们 每 年 只 工作 两 次 。

Oracle Span 1:  ; => and
Oracle Span 2:  也 => 也
Oracle Span 3:  仅 => 仅
Oracle Span 4:  北极 => 北极
Oracle Span 5:  南极 => 南极
Oracle Span 6:  只 => 只
Oracle Span 7:  同行 => 同行-01
Oracle Span 8:  唯独 => 唯独
Oracle Span 9:  工作 => 工作-01
Oracle Span 10:  年 => (temporal-quantity :unit 年)
Oracle Span 11:  懒散 => 懒散
Oracle Span 12:  有 => 有-03
Oracle Span 13:  有 => 有-03
Oracle Span 14:  生活 => 生活
Oracle Span 15:  路灯 => 路灯
Oracle Span 16:  过 => 过-01
Oracle Span 17:  闲逸 => 闲逸
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
Spans:
Span 13-14:  ; => and
Span 8-9:  也 => 也
Span 1-2:  仅 => 仅
Span 0-1:  北极 => 北极
Span 7-8:  南极 => 南极
Span 9-10:  只 => 只
Span 22-23:  同行 => 同行-01
Span 14-15:  唯独 => 唯独
Span 36-37:  工作 => 工作-01
Span 34-35:  年 => (temporal-quantity :unit 年)
Span 28-29:  懒散 => 懒散
Span 2-3:  有 => 有-03
Span 10-11:  有 => 有-03
Span 30-31:  生活 => 生活
Span 5-6:  路灯 => 路灯
Span 24-25:  过 => 过-01
Span 26-27:  闲逸 => 闲逸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  ; => and
Oracle Span 8-9:  也 => 也
Oracle Span 1-2:  仅 => 仅
Oracle Span 0-1:  北极 => 北极
Oracle Span 7-8:  南极 => 南极
Oracle Span 9-10:  只 => 只
Oracle Span 22-23:  同行 => 同行-01
Oracle Span 14-15:  唯独 => 唯独
Oracle Span 36-37:  工作 => 工作-01
Oracle Span 34-35:  年 => (temporal-quantity :unit 年)
Oracle Span 28-29:  懒散 => 懒散
Oracle Span 2-3:  有 => 有-03
Oracle Span 10-11:  有 => 有-03
Oracle Span 30-31:  生活 => 生活
Oracle Span 5-6:  路灯 => 路灯
Oracle Span 24-25:  过 => 过-01
Oracle Span 26-27:  闲逸 => 闲逸

Dependencies:
1	北极	_	NN	NN	_	3	nsubj	_	_
2	仅	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	6	nummod	_	_
5	盏	_	NN	NN	_	6	nn	_	_
6	路灯	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	南极	_	NR	NR	_	11	nsubj	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	只	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	3	conj	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	盏	_	NN	NN	_	11	dobj	_	_
14	；	_	PU	PU	_	3	punct	_	_
15	唯独	_	VV	VV	_	3	conj	_	_
16	北极	_	NN	NN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	点灯人	_	NN	NN	_	23	conj	_	_
19	和	_	CC	CC	_	23	cc	_	_
20	他	_	PN	PN	_	23	nn	_	_
21	南极	_	NR	NR	_	23	assmod	_	_
22	的	_	DEG	DEG	_	21	assm	_	_
23	同行	_	NN	NN	_	15	dobj	_	_
24	,	_	PU	PU	_	15	punct	_	_
25	过	_	VV	VV	_	15	conj	_	_
26	着	_	AS	AS	_	25	asp	_	_
27	闲逸	_	NN	NN	_	29	conj	_	_
28	、	_	PU	PU	_	29	punct	_	_
29	懒散	_	NN	NN	_	31	assmod	_	_
30	的	_	DEG	DEG	_	29	assm	_	_
31	生活	_	NN	NN	_	25	dobj	_	_
32	：	_	PU	PU	_	3	punct	_	_
33	他们	_	PN	PN	_	37	nsubj	_	_
34	每	_	DT	DT	_	37	dep	_	_
35	年	_	M	M	_	34	clf	_	_
36	只	_	AD	AD	_	37	advmod	_	_
37	工作	_	VV	VV	_	3	conj	_	_
38	两	_	CD	CD	_	39	nummod	_	_
39	次	_	M	M	_	37	range	_	_
40	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / and, op, x38 / 过-01)
(x3 / 有-03, arg0, x4 / 北极)
(x3 / 有-03, arg1, x5 / 路灯)
(x3 / 有-03, manner, x7 / 仅)
(x38 / 过-01, arg1, x48 / 生活)
(x48 / 生活, mod, x49 / 闲逸)
(x48 / 生活, mod, x50 / 懒散)
(x57 / temporal-quantity, unit, x59 / 年)
(x8 / 有-03, arg0, x9 / 南极)
(x8 / 有-03, manner, x10 / 只)
(x8 / 有-03, manner, x11 / 也)

Input(Some(Graph((and :op (过-01 :arg1 (生活 :arg0-of (mean :arg1 (工作-01 :frequency (rate-entity-91 :arg1 2 :arg3 (temporal-quantity :unit 年 :quant 1)) :arg0 x39)) :mod 懒散 :mod 闲逸) :arg0 (and :op (人 :arg0-of (点-01 :arg1 灯) :location x4) :op (同行-01 :location x9 :poss x40) :manner 唯独)) :op (and :op (有-03 :manner 仅 :arg1 (路灯 :quant 1) :arg0 北极) :op (有-03 :arg1 (thing :quant 1) :manner 也 :manner 只 :arg0 南极))),ArrayBuffer(Span(13,14,List(0),;,and,false), Span(24,25,List(1),过,过-01,false), Span(30,31,List(2),生活,生活,false), Span(36,37,List(3),工作,工作-01,false), Span(34,35,List(4, 5),年,(temporal-quantity :unit 年),false), Span(28,29,List(6),懒散,懒散,false), Span(26,27,List(7),闲逸,闲逸,false), Span(22,23,List(8),同行,同行-01,false), Span(14,15,List(9),唯独,唯独,false), Span(2,3,List(10),有,有-03,false), Span(1,2,List(11),仅,仅,false), Span(5,6,List(12),路灯,路灯,false), Span(0,1,List(13),北极,北极,false), Span(10,11,List(14),有,有-03,false), Span(8,9,List(15),也,也,false), Span(9,10,List(16),只,只,false), Span(7,8,List(17),南极,南极,false)),Map(2 -> 生活, 5 -> 年, 12 -> 路灯, 15 -> 也, 8 -> 同行-01, 7 -> 闲逸, 17 -> 南极, 1 -> 过-01, 4 -> temporal-quantity, 11 -> 仅, 14 -> 有-03, 6 -> 懒散, 9 -> 唯独, 0 -> and, 16 -> 只, 10 -> 有-03, 3 -> 工作-01, 13 -> 北极),Map(x52 -> 工作-01, x49 -> 闲逸, x10 -> 只, x5 -> 路灯, x8 -> 有-03, x57 -> temporal-quantity, x48 -> 生活, x7 -> 仅, x4 -> 北极, x50 -> 懒散, x59 -> 年, x44 -> 同行-01, x38 -> 过-01, x3 -> 有-03, x11 -> 也, x47 -> 唯独, x9 -> 南极, x0 -> and))),[Ljava.lang.String;@7d04529c,Annotation([Ljava.lang.String;@14fa92af,[Ljava.lang.String;@b16e202,[Ljava.lang.String;@339a3670),Annotation([Ljava.lang.String;@6cd5122d,[Ljava.lang.String;@2c7a8af2,[Ledu.cmu.lti.nlp.amr.Dependency;@10c07b8d),Annotation([Ljava.lang.String;@720bf653,[Ljava.lang.String;@360bc645,[Ljava.lang.String;@4edef76c),Annotation([Ljava.lang.String;@5d51e129,[Ljava.lang.String;@70c53dbe,[Ledu.cmu.lti.nlp.amr.Entity;@1894e40d))
AMR:
(x0 / and, op, x38 / 过-01)
(x0 / and, op, x47 / 唯独)
(x3 / 有-03, manner, x7 / 仅)
(x3 / 有-03, prep-following, x5 / 路灯)
(x38 / 过-01, degree, x44 / 同行-01)
(x38 / 过-01, degree, x49 / 闲逸)
(x48 / 生活, mod, x49 / 闲逸)
(x48 / 生活, mod, x50 / 懒散)
(x48 / 生活, mod, x52 / 工作-01)
(x5 / 路灯, instrument, x9 / 南极)
(x57 / temporal-quantity, destination, x52 / 工作-01)
(x57 / temporal-quantity, unit, x59 / 年)
(x7 / 仅, degree, x4 / 北极)
(x8 / 有-03, degree, x9 / 南极)
(x8 / 有-03, extent, x0 / and)
(x8 / 有-03, manner, x10 / 只)
(x8 / 有-03, manner, x11 / 也)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2.0
WARNING: makeIds can't find span Id: 0.1.1.2.0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2.0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 99,109 microseconds
Sentence: XVII 。

Oracle Span 1:  XVII => XVII
Spans:
Span 0-1:  XVII => XVII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVII => XVII

Dependencies:
1	XVII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XVII,ArrayBuffer(Span(0,1,List(0),XVII,XVII,false)),Map(0 -> XVII),Map(x0 -> XVII))),[Ljava.lang.String;@21c815e4,Annotation([Ljava.lang.String;@7342e05d,[Ljava.lang.String;@2a331b46,[Ljava.lang.String;@15383681),Annotation([Ljava.lang.String;@743e66f7,[Ljava.lang.String;@109a2025,[Ledu.cmu.lti.nlp.amr.Dependency;@2241f05b),Annotation([Ljava.lang.String;@761956ac,[Ljava.lang.String;@71978f46,[Ljava.lang.String;@304d0259),Annotation([Ljava.lang.String;@1d23ff23,[Ljava.lang.String;@2133661d,[Ledu.cmu.lti.nlp.amr.Entity;@6c9320c2))
AMR:


Decoded in 1,279 microseconds
Sentence: 当 人们 想要 说 得 俏皮 些 的 时候 ， 说话 就 可能 会 不 大 实在 。

Oracle Span 1:  人们 => 人们
Oracle Span 2:  会 => 会-02
Oracle Span 3:  俏皮 => 俏皮
Oracle Span 4:  可能 => 可能-01
Oracle Span 5:  大 => 大-04
Oracle Span 6:  实在 => 实在-01
Oracle Span 7:  就 => 就
Oracle Span 8:  想要 => 想要-02
Oracle Span 9:  说 => 说-01
Oracle Span 10:  说话 => 说话-01
Spans:
Span 1-2:  人们 => 人们
Span 13-14:  会 => 会-02
Span 5-6:  俏皮 => 俏皮
Span 12-13:  可能 => 可能-01
Span 15-16:  大 => 大-04
Span 16-17:  实在 => 实在-01
Span 11-12:  就 => 就
Span 2-3:  想要 => 想要-02
Span 3-4:  说 => 说-01
Span 10-11:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人们 => 人们
Oracle Span 13-14:  会 => 会-02
Oracle Span 5-6:  俏皮 => 俏皮
Oracle Span 12-13:  可能 => 可能-01
Oracle Span 15-16:  大 => 大-04
Oracle Span 16-17:  实在 => 实在-01
Oracle Span 11-12:  就 => 就
Oracle Span 2-3:  想要 => 想要-02
Oracle Span 3-4:  说 => 说-01
Oracle Span 10-11:  说话 => 说话-01

Dependencies:
1	当	_	P	P	_	11	prep	_	_
2	人们	_	NN	NN	_	3	nn	_	_
3	想要	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	9	rcmod	_	_
5	得	_	VV	VV	_	4	ccomp	_	_
6	俏皮	_	CD	CD	_	7	nummod	_	_
7	些	_	M	M	_	5	range	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	时候	_	NN	NN	_	1	pobj	_	_
10	,	_	PU	PU	_	11	punct	_	_
11	说话	_	VV	VV	_	0	root	_	_
12	就	_	AD	AD	_	11	dep	_	_
13	可能	_	VV	VV	_	11	dep	_	_
14	会	_	VV	VV	_	16	mmod	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	大	_	VA	VA	_	11	dep	_	_
17	实在	_	AD	AD	_	16	advmod	_	_
18	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x2 / 会-02)
(x0 / 可能-01, manner, x5 / 就)
(x0 / 可能-01, time, x8 / 想要-02)
(x13 / 实在-01, arg0, x17 / 说话-01)
(x13 / 实在-01, degree, x15 / 大-04)
(x19 / 说-01, manner, x20 / 俏皮)
(x2 / 会-02, arg0, x13 / 实在-01)
(x8 / 想要-02, arg0, x18 / 人们)
(x8 / 想要-02, arg1, x19 / 说-01)

Input(Some(Graph((可能-01 :time (想要-02 :arg1 (说-01 :manner 俏皮) :arg0 人们) :manner 就 :arg0 (会-02 :arg0 (实在-01 :arg0 (说话-01 :arg0 x18) :polarity - :degree 大-04))),ArrayBuffer(Span(12,13,List(0),可能,可能-01,false), Span(2,3,List(1),想要,想要-02,false), Span(3,4,List(2),说,说-01,false), Span(5,6,List(3),俏皮,俏皮,false), Span(1,2,List(4),人们,人们,false), Span(11,12,List(5),就,就,false), Span(13,14,List(6),会,会-02,false), Span(16,17,List(7),实在,实在-01,false), Span(10,11,List(8),说话,说话-01,false), Span(15,16,List(9),大,大-04,false)),Map(2 -> 说-01, 5 -> 就, 8 -> 说话-01, 7 -> 实在-01, 1 -> 想要-02, 4 -> 人们, 6 -> 会-02, 9 -> 大-04, 0 -> 可能-01, 3 -> 俏皮),Map(x2 -> 会-02, x19 -> 说-01, x13 -> 实在-01, x5 -> 就, x8 -> 想要-02, x15 -> 大-04, x18 -> 人们, x20 -> 俏皮, x17 -> 说话-01, x0 -> 可能-01))),[Ljava.lang.String;@3414a8c3,Annotation([Ljava.lang.String;@36cc9385,[Ljava.lang.String;@cf518cf,[Ljava.lang.String;@7915bca3),Annotation([Ljava.lang.String;@68d651f2,[Ljava.lang.String;@3ad4a7d6,[Ledu.cmu.lti.nlp.amr.Dependency;@1e43e323),Annotation([Ljava.lang.String;@4a67b4ec,[Ljava.lang.String;@10643593,[Ljava.lang.String;@f91da5e),Annotation([Ljava.lang.String;@eca6a74,[Ljava.lang.String;@79fd6f95,[Ledu.cmu.lti.nlp.amr.Entity;@48840594))
AMR:
(x0 / 可能-01, ARG3, x2 / 会-02)
(x0 / 可能-01, manner, x5 / 就)
(x0 / 可能-01, time, x8 / 想要-02)
(x13 / 实在-01, ARG6, x17 / 说话-01)
(x13 / 实在-01, degree, x15 / 大-04)
(x19 / 说-01, manner, x20 / 俏皮)
(x2 / 会-02, ARG0, x13 / 实在-01)
(x8 / 想要-02, ARG0, x19 / 说-01)
(x8 / 想要-02, location, x18 / 人们)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 32,833 microseconds
Sentence: 在 给 你们 讲 点灯人 的 时候 ， 我 就 不 那么 忠实 ，

Oracle Span 1:  你们 => 你们
Oracle Span 2:  就 => 就
Oracle Span 3:  忠实 => 忠实-01
Oracle Span 4:  我 => 我
Oracle Span 5:  讲 => 讲-01
Oracle Span 6:  那么 => 那么
Spans:
Span 2-3:  你们 => 你们
Span 9-10:  就 => 就
Span 12-13:  忠实 => 忠实-01
Span 8-9:  我 => 我
Span 3-4:  讲 => 讲-01
Span 11-12:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 9-10:  就 => 就
Oracle Span 12-13:  忠实 => 忠实-01
Oracle Span 8-9:  我 => 我
Oracle Span 3-4:  讲 => 讲-01
Oracle Span 11-12:  那么 => 那么

Dependencies:
1	在	_	P	P	_	13	prep	_	_
2	给	_	P	P	_	4	prep	_	_
3	你们	_	PN	PN	_	2	pobj	_	_
4	讲	_	VV	VV	_	7	rcmod	_	_
5	点灯人	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	时候	_	NN	NN	_	1	pobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	我	_	PN	PN	_	13	dep	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	那么	_	AD	AD	_	13	advmod	_	_
13	忠实	_	VA	VA	_	0	root	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 忠实-01, arg0, x5 / 我)
(x0 / 忠实-01, degree, x2 / 那么)
(x0 / 忠实-01, manner, x4 / 就)
(x0 / 忠实-01, time, x10 / 讲-01)
(x10 / 讲-01, arg2, x13 / 你们)

Input(Some(Graph((忠实-01 :time (讲-01 :arg2 你们 :arg1 (人 :arg0-of 点灯-01)) :arg0 我 :manner 就 :polarity - :degree 那么),ArrayBuffer(Span(12,13,List(0),忠实,忠实-01,false), Span(3,4,List(1),讲,讲-01,false), Span(2,3,List(2),你们,你们,false), Span(8,9,List(3),我,我,false), Span(9,10,List(4),就,就,false), Span(11,12,List(5),那么,那么,false)),Map(2 -> 你们, 5 -> 那么, 1 -> 讲-01, 4 -> 就, 0 -> 忠实-01, 3 -> 我),Map(x2 -> 那么, x10 -> 讲-01, x5 -> 我, x13 -> 你们, x4 -> 就, x0 -> 忠实-01))),[Ljava.lang.String;@49c675f0,Annotation([Ljava.lang.String;@14823f76,[Ljava.lang.String;@6917bb4,[Ljava.lang.String;@6ed16657),Annotation([Ljava.lang.String;@1442f788,[Ljava.lang.String;@113e13f9,[Ledu.cmu.lti.nlp.amr.Dependency;@1c7f96b1),Annotation([Ljava.lang.String;@7979b8b7,[Ljava.lang.String;@7a04fea7,[Ljava.lang.String;@1bc49bc5),Annotation([Ljava.lang.String;@7b6e5c12,[Ljava.lang.String;@4f66ffc8,[Ledu.cmu.lti.nlp.amr.Entity;@124ac145))
AMR:
(x0 / 忠实-01, ARG0, x5 / 我)
(x0 / 忠实-01, degree, x2 / 那么)
(x0 / 忠实-01, manner, x4 / 就)
(x0 / 忠实-01, time, x10 / 讲-01)
(x10 / 讲-01, direction, x13 / 你们)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.1
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,009 microseconds
Sentence: 很 可能 给 不 了解 我们 这个 星球 的 人们 造成 一 个 错误 的 概念 。

Oracle Span 1:  了解 => 了解-02
Oracle Span 2:  人们 => 人们
Oracle Span 3:  可能 => 可能-01
Oracle Span 4:  很 => 很
Oracle Span 5:  我们 => 我们
Oracle Span 6:  星球 => 星球
Oracle Span 7:  概念 => 概念
Oracle Span 8:  给 => 给-02
Oracle Span 9:  这个 => 这个
Oracle Span 10:  造成 => 造成-01
Oracle Span 11:  错误 => 错误-01
Spans:
Span 4-5:  了解 => 了解-02
Span 9-10:  人们 => 人们
Span 1-2:  可能 => 可能-01
Span 0-1:  很 => 很
Span 5-6:  我们 => 我们
Span 7-8:  星球 => 星球
Span 15-16:  概念 => 概念
Span 2-3:  给 => 给-02
Span 6-7:  这个 => 这个
Span 10-11:  造成 => 造成-01
Span 13-14:  错误 => 错误-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  了解 => 了解-02
Oracle Span 9-10:  人们 => 人们
Oracle Span 1-2:  可能 => 可能-01
Oracle Span 0-1:  很 => 很
Oracle Span 5-6:  我们 => 我们
Oracle Span 7-8:  星球 => 星球
Oracle Span 15-16:  概念 => 概念
Oracle Span 2-3:  给 => 给-02
Oracle Span 6-7:  这个 => 这个
Oracle Span 10-11:  造成 => 造成-01
Oracle Span 13-14:  错误 => 错误-01

Dependencies:
1	很	_	AD	AD	_	11	advmod	_	_
2	可能	_	VV	VV	_	11	mmod	_	_
3	给	_	P	P	_	11	prep	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	了解	_	VV	VV	_	10	rcmod	_	_
6	我们	_	PN	PN	_	8	nn	_	_
7	这个	_	NN	NN	_	8	nn	_	_
8	星球	_	NN	NN	_	5	dobj	_	_
9	的	_	DEC	DEC	_	5	cpm	_	_
10	人们	_	NN	NN	_	3	pobj	_	_
11	造成	_	VV	VV	_	0	root	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	16	clf	_	_
14	错误	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	概念	_	NN	NN	_	11	dobj	_	_
17	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x3 / 给-02)
(x0 / 可能-01, degree, x2 / 很)
(x11 / 造成-01, arg1, x12 / 概念)
(x12 / 概念, mod, x13 / 错误-01)
(x3 / 给-02, arg1, x4 / 人们)
(x3 / 给-02, arg2, x11 / 造成-01)
(x5 / 了解-02, arg0, x4 / 人们)
(x5 / 了解-02, arg1, x6 / 星球)
(x6 / 星球, mod, x7 / 这个)
(x6 / 星球, poss, x8 / 我们)

Input(Some(Graph((可能-01 :arg0 (给-02 :arg2 (造成-01 :arg1 (概念 :quant 1 :mod 错误-01)) :arg1 (人们 :arg0-of (了解-02 :polarity - :arg1 (星球 :poss 我们 :mod 这个)))) :degree 很),ArrayBuffer(Span(1,2,List(0),可能,可能-01,false), Span(2,3,List(1),给,给-02,false), Span(10,11,List(2),造成,造成-01,false), Span(15,16,List(3),概念,概念,false), Span(13,14,List(4),错误,错误-01,false), Span(9,10,List(5),人们,人们,false), Span(4,5,List(6),了解,了解-02,false), Span(7,8,List(7),星球,星球,false), Span(5,6,List(8),我们,我们,false), Span(6,7,List(9),这个,这个,false), Span(0,1,List(10),很,很,false)),Map(2 -> 造成-01, 5 -> 人们, 8 -> 我们, 7 -> 星球, 1 -> 给-02, 4 -> 错误-01, 6 -> 了解-02, 9 -> 这个, 0 -> 可能-01, 10 -> 很, 3 -> 概念),Map(x2 -> 很, x5 -> 了解-02, x13 -> 错误-01, x8 -> 我们, x12 -> 概念, x7 -> 这个, x4 -> 人们, x11 -> 造成-01, x3 -> 给-02, x6 -> 星球, x0 -> 可能-01))),[Ljava.lang.String;@2def7a7a,Annotation([Ljava.lang.String;@24e83d19,[Ljava.lang.String;@5c080ef3,[Ljava.lang.String;@188cbcde),Annotation([Ljava.lang.String;@4ee6291f,[Ljava.lang.String;@2b03d52f,[Ledu.cmu.lti.nlp.amr.Dependency;@37e0292a),Annotation([Ljava.lang.String;@4af70944,[Ljava.lang.String;@35267fd4,[Ljava.lang.String;@397ef2),Annotation([Ljava.lang.String;@36a6bea6,[Ljava.lang.String;@44e93c1f,[Ledu.cmu.lti.nlp.amr.Entity;@42373389))
AMR:
(x0 / 可能-01, ARG6, x3 / 给-02)
(x0 / 可能-01, degree, x2 / 很)
(x11 / 造成-01, subset, x12 / 概念)
(x12 / 概念, mod, x13 / 错误-01)
(x3 / 给-02, degree, x11 / 造成-01)
(x3 / 给-02, domain, x4 / 人们)
(x5 / 了解-02, snt3, x6 / 星球)
(x5 / 了解-02, value, x4 / 人们)
(x6 / 星球, mod, x7 / 这个)
(x6 / 星球, poss, x8 / 我们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.1
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 34,678 microseconds
Sentence: 在 地球 上 ， 人们 所 占 的 位置 非常 小 。

Oracle Span 1:  人们 => 人们
Oracle Span 2:  位置 => 位置
Oracle Span 3:  占 => 占-02
Oracle Span 4:  地球 => 地球
Oracle Span 5:  小 => 小-01
Oracle Span 6:  非常 => 非常
Spans:
Span 4-5:  人们 => 人们
Span 8-9:  位置 => 位置
Span 6-7:  占 => 占-02
Span 1-2:  地球 => 地球
Span 10-11:  小 => 小-01
Span 9-10:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人们 => 人们
Oracle Span 8-9:  位置 => 位置
Oracle Span 6-7:  占 => 占-02
Oracle Span 1-2:  地球 => 地球
Oracle Span 10-11:  小 => 小-01
Oracle Span 9-10:  非常 => 非常

Dependencies:
1	在	_	P	P	_	11	prep	_	_
2	地球	_	NN	NN	_	3	lobj	_	_
3	上	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	人们	_	NN	NN	_	7	nsubj	_	_
6	所	_	MSP	MSP	_	7	prtmod	_	_
7	占	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	位置	_	NN	NN	_	11	nsubj	_	_
10	非常	_	AD	AD	_	11	advmod	_	_
11	小	_	VA	VA	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 占-02, arg0, x2 / 人们)
(x0 / 占-02, arg1, x3 / 位置)
(x0 / 占-02, location, x7 / 地球)
(x3 / 位置, mod, x5 / 小-01)
(x5 / 小-01, degree, x6 / 非常)

Input(Some(Graph((占-02 :location 地球 :arg1 (位置 :mod (小-01 :degree 非常)) :arg0 人们),ArrayBuffer(Span(6,7,List(0),占,占-02,false), Span(1,2,List(1),地球,地球,false), Span(8,9,List(2),位置,位置,false), Span(10,11,List(3),小,小-01,false), Span(9,10,List(4),非常,非常,false), Span(4,5,List(5),人们,人们,false)),Map(2 -> 位置, 5 -> 人们, 1 -> 地球, 4 -> 非常, 0 -> 占-02, 3 -> 小-01),Map(x2 -> 人们, x5 -> 小-01, x7 -> 地球, x3 -> 位置, x6 -> 非常, x0 -> 占-02))),[Ljava.lang.String;@9b21bd3,Annotation([Ljava.lang.String;@a62c7cd,[Ljava.lang.String;@7661b5a,[Ljava.lang.String;@7c36db44),Annotation([Ljava.lang.String;@65c33b92,[Ljava.lang.String;@7903d448,[Ledu.cmu.lti.nlp.amr.Dependency;@4e08acf9),Annotation([Ljava.lang.String;@42ea287,[Ljava.lang.String;@78cd163b,[Ljava.lang.String;@1f0b3cfe),Annotation([Ljava.lang.String;@14ef2482,[Ljava.lang.String;@65a48602,[Ledu.cmu.lti.nlp.amr.Entity;@75483843))
AMR:
(x0 / 占-02, location, x7 / 地球)
(x0 / 占-02, op, x2 / 人们)
(x0 / 占-02, op, x3 / 位置)
(x3 / 位置, mod, x5 / 小-01)
(x5 / 小-01, degree, x6 / 非常)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,558 microseconds
Sentence: 如果 住 在 地球 上 的 二十亿 居民 全 站 着 ， 并且 象 开 大会 一样 靠 得 紧 些 ， 那么 就 可以 从容 地 站 在 一 个 二十 海里 见方 的 广场 上 。

Oracle Span 1:  从容 => 从容-01
Oracle Span 2:  住 => 住-01
Oracle Span 3:  全 => 全
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  地球 => 地球
Oracle Span 6:  居民 => 居民
Oracle Span 7:  广场 => 广场
Oracle Span 8:  开 => 开-02
Oracle Span 9:  海里 => (distance-quantity :unit 海里)
Oracle Span 10:  站 => 站-01
Oracle Span 11:  站 => 站-01
Oracle Span 12:  紧 => 紧-01
Oracle Span 13:  靠 => 靠-03
Spans:
Span 25-26:  从容 => 从容-01
Span 1-2:  住 => 住-01
Span 8-9:  全 => 全
Span 24-25:  可以 => 可以-01
Span 3-4:  地球 => 地球
Span 7-8:  居民 => 居民
Span 35-36:  广场 => 广场
Span 14-15:  开 => 开-02
Span 32-33:  海里 => (distance-quantity :unit 海里)
Span 9-10:  站 => 站-01
Span 27-28:  站 => 站-01
Span 19-20:  紧 => 紧-01
Span 17-18:  靠 => 靠-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 25-26:  从容 => 从容-01
Oracle Span 1-2:  住 => 住-01
Oracle Span 8-9:  全 => 全
Oracle Span 24-25:  可以 => 可以-01
Oracle Span 3-4:  地球 => 地球
Oracle Span 7-8:  居民 => 居民
Oracle Span 35-36:  广场 => 广场
Oracle Span 14-15:  开 => 开-02
Oracle Span 32-33:  海里 => (distance-quantity :unit 海里)
Oracle Span 9-10:  站 => 站-01
Oracle Span 27-28:  站 => 站-01
Oracle Span 19-20:  紧 => 紧-01
Oracle Span 17-18:  靠 => 靠-03

Dependencies:
1	如果	_	CS	CS	_	2	advmod	_	_
2	住	_	VV	VV	_	8	rcmod	_	_
3	在	_	P	P	_	2	prep	_	_
4	地球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	3	plmod	_	_
6	的	_	DEC	DEC	_	2	cpm	_	_
7	二十亿	_	CD	CD	_	8	nummod	_	_
8	居民	_	NN	NN	_	10	nsubj	_	_
9	全	_	AD	AD	_	10	advmod	_	_
10	站	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	并且	_	CC	CC	_	10	cc	_	_
14	象	_	P	P	_	17	prep	_	_
15	开	_	VV	VV	_	16	vmod	_	_
16	大会	_	NN	NN	_	14	pobj	_	_
17	一样	_	VA	VA	_	10	dep	_	_
18	靠	_	P	P	_	28	prep	_	_
19	得	_	VV	VV	_	18	pccomp	_	_
20	紧	_	JJ	JJ	_	21	amod	_	_
21	些	_	CD	CD	_	19	range	_	_
22	,	_	PU	PU	_	28	punct	_	_
23	那么	_	AD	AD	_	28	advmod	_	_
24	就	_	AD	AD	_	28	advmod	_	_
25	可以	_	VV	VV	_	28	mmod	_	_
26	从容	_	VA	VA	_	28	dvpmod	_	_
27	地	_	DEV	DEV	_	26	dvpm	_	_
28	站	_	VV	VV	_	10	conj	_	_
29	在	_	P	P	_	28	prep	_	_
30	一	_	CD	CD	_	31	nummod	_	_
31	个	_	M	M	_	34	clf	_	_
32	二十	_	CD	CD	_	33	nummod	_	_
33	海里	_	NN	NN	_	34	nn	_	_
34	见方	_	NN	NN	_	36	assmod	_	_
35	的	_	DEG	DEG	_	34	assm	_	_
36	广场	_	NN	NN	_	37	lobj	_	_
37	上	_	LC	LC	_	29	plmod	_	_
38	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x62 / 站-01, arg0, x63 / 居民)
(x62 / 站-01, manner, x67 / 全)
(x65 / 住-01, arg0, x63 / 居民)
(x65 / 住-01, arg1, x66 / 地球)
(x74 / 靠-03, degree, x75 / 紧-01)
(x76 / 可以-01, arg0, x77 / 站-01)
(x77 / 站-01, arg1, x80 / 广场)
(x77 / 站-01, manner, x78 / 从容-01)
(x83 / distance-quantity, unit, x85 / 海里)

Input(Some(Graph((condition :arg1 (progression :arg1 (站-01 :manner 全 :arg0 (居民 :arg0-of (住-01 :arg1 地球) :quant 2000000000)) :arg2 (像-01 :arg0 x63 :arg1 (开-02 :arg1 (会 :mod 大-04) :arg0 x63) :arg2 (靠-03 :degree 紧-01))) :arg2 (可以-01 :arg0 (站-01 :arg1 (广场 :extent (and :op (distance-quantity :unit 海里 :quant 20) :op (distance-quantity :quant 20 :unit 海里)) :quant 1) :arg0 x63 :manner 从容-01))),ArrayBuffer(Span(9,10,List(0),站,站-01,false), Span(8,9,List(1),全,全,false), Span(7,8,List(2),居民,居民,false), Span(1,2,List(3),住,住-01,false), Span(3,4,List(4),地球,地球,false), Span(14,15,List(5),开,开-02,false), Span(17,18,List(6),靠,靠-03,false), Span(19,20,List(7),紧,紧-01,false), Span(24,25,List(8),可以,可以-01,false), Span(27,28,List(9),站,站-01,false), Span(35,36,List(10),广场,广场,false), Span(32,33,List(11, 12),海里,(distance-quantity :unit 海里),false), Span(25,26,List(13),从容,从容-01,false)),Map(2 -> 居民, 5 -> 开-02, 12 -> 海里, 8 -> 可以-01, 7 -> 紧-01, 1 -> 全, 4 -> 地球, 11 -> distance-quantity, 6 -> 靠-03, 9 -> 站-01, 0 -> 站-01, 10 -> 广场, 3 -> 住-01, 13 -> 从容-01),Map(x67 -> 全, x76 -> 可以-01, x75 -> 紧-01, x63 -> 居民, x78 -> 从容-01, x66 -> 地球, x80 -> 广场, x74 -> 靠-03, x77 -> 站-01, x62 -> 站-01, x83 -> distance-quantity, x65 -> 住-01, x85 -> 海里, x70 -> 开-02))),[Ljava.lang.String;@336206d8,Annotation([Ljava.lang.String;@5ec4ff02,[Ljava.lang.String;@1f11f64e,[Ljava.lang.String;@2b2f5fcf),Annotation([Ljava.lang.String;@858d8b4,[Ljava.lang.String;@711d1a52,[Ledu.cmu.lti.nlp.amr.Dependency;@612e21b9),Annotation([Ljava.lang.String;@302edb74,[Ljava.lang.String;@7efd28bd,[Ljava.lang.String;@672b72ba),Annotation([Ljava.lang.String;@7718a40f,[Ljava.lang.String;@312b34e3,[Ledu.cmu.lti.nlp.amr.Entity;@26844abb))
AMR:
(x62 / 站-01, manner, x67 / 全)
(x62 / 站-01, mode, x63 / 居民)
(x65 / 住-01, ARG4, x66 / 地球)
(x65 / 住-01, value, x63 / 居民)
(x74 / 靠-03, degree, x75 / 紧-01)
(x74 / 靠-03, time, x62 / 站-01)
(x74 / 靠-03, time, x78 / 从容-01)
(x74 / 靠-03, year, x70 / 开-02)
(x76 / 可以-01, prep-out, x77 / 站-01)
(x77 / 站-01, manner, x78 / 从容-01)
(x77 / 站-01, part, x80 / 广场)
(x83 / distance-quantity, location, x80 / 广场)
(x83 / distance-quantity, unit, x85 / 海里)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.1.0
WARNING: makeIds can't find span Id: 0.1.0.2.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 74,292 microseconds
Sentence: 也 就是 说 可以 把 整个 人类 集中 在 太平洋 中 一 个 最 小 的 岛屿 上 。

Oracle Span 1:  人类 => 人类
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  太平洋 => 太平洋
Oracle Span 4:  小 => 小-01
Oracle Span 5:  岛屿 => 岛屿
Oracle Span 6:  整个 => 整个
Oracle Span 7:  最 => 最
Oracle Span 8:  集中 => 集中-02
NER Entity: (country :name (name :op "也"))
Spans:
Span 6-7:  人类 => 人类
Span 3-4:  可以 => 可以-01
Span 9-10:  太平洋 => 太平洋
Span 14-15:  小 => 小-01
Span 16-17:  岛屿 => 岛屿
Span 5-6:  整个 => 整个
Span 13-14:  最 => 最
Span 7-8:  集中 => 集中-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人类 => 人类
Oracle Span 3-4:  可以 => 可以-01
Oracle Span 9-10:  太平洋 => 太平洋
Oracle Span 14-15:  小 => 小-01
Oracle Span 16-17:  岛屿 => 岛屿
Oracle Span 5-6:  整个 => 整个
Oracle Span 13-14:  最 => 最
Oracle Span 7-8:  集中 => 集中-02

Dependencies:
1	也	_	AD	AD	_	3	advmod	_	_
2	就是	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	可以	_	VV	VV	_	3	ccomp	_	_
5	把	_	BA	BA	_	8	ba	_	_
6	整个	_	JJ	JJ	_	7	amod	_	_
7	人类	_	NN	NN	_	8	nsubj	_	_
8	集中	_	VV	VV	_	3	dep	_	_
9	在	_	P	P	_	8	prep	_	_
10	太平洋	_	NR	NR	_	11	nn	_	_
11	中	_	NR	NR	_	17	nn	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	17	clf	_	_
14	最	_	AD	AD	_	15	advmod	_	_
15	小	_	VA	VA	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	岛屿	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	9	plmod	_	_
19	。	_	PU	PU	_	3	punct	_	_
20	小	_	VA	VA	_	11	rcmod	_	_

Oracle:
(x2 / 可以-01, arg0, x3 / 集中-02)
(x3 / 集中-02, arg0, x4 / 人类)
(x3 / 集中-02, arg1, x6 / 岛屿)
(x4 / 人类, mod, x5 / 整个)
(x6 / 岛屿, location, x11 / 太平洋)
(x6 / 岛屿, mod, x9 / 小-01)
(x9 / 小-01, degree, x10 / 最)

Input(Some(Graph((mean :arg1 (可以-01 :arg0 (集中-02 :arg1 (岛屿 :quant 1 :location 太平洋 :mod (小-01 :degree 最)) :arg0 (人类 :mod 整个)))),ArrayBuffer(Span(3,4,List(0),可以,可以-01,false), Span(7,8,List(1),集中,集中-02,false), Span(16,17,List(2),岛屿,岛屿,false), Span(9,10,List(3),太平洋,太平洋,false), Span(14,15,List(4),小,小-01,false), Span(13,14,List(5),最,最,false), Span(6,7,List(6),人类,人类,false), Span(5,6,List(7),整个,整个,false)),Map(2 -> 岛屿, 5 -> 最, 7 -> 整个, 1 -> 集中-02, 4 -> 小-01, 6 -> 人类, 0 -> 可以-01, 3 -> 太平洋),Map(x10 -> 最, x2 -> 可以-01, x5 -> 整个, x4 -> 人类, x11 -> 太平洋, x3 -> 集中-02, x6 -> 岛屿, x9 -> 小-01))),[Ljava.lang.String;@1a865273,Annotation([Ljava.lang.String;@288ca5f0,[Ljava.lang.String;@4068102e,[Ljava.lang.String;@44bd4b0a),Annotation([Ljava.lang.String;@6c008c24,[Ljava.lang.String;@216e0771,[Ledu.cmu.lti.nlp.amr.Dependency;@21079a12),Annotation([Ljava.lang.String;@fcc6023,[Ljava.lang.String;@67c5ac52,[Ljava.lang.String;@36417a54),Annotation([Ljava.lang.String;@2b8bb184,[Ljava.lang.String;@472a11ae,[Ledu.cmu.lti.nlp.amr.Entity;@dc79225))
AMR:
(x2 / 可以-01, prep-for, x5 / 整个)
(x3 / 集中-02, location, x11 / 太平洋)
(x3 / 集中-02, time, x4 / 人类)
(x4 / 人类, mod, x5 / 整个)
(x6 / 岛屿, location, x11 / 太平洋)
(x6 / 岛屿, mod, x9 / 小-01)
(x9 / 小-01, degree, x10 / 最)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 23,322 microseconds
Sentence: 当然 ， 大人们 是 不 会 相信 你们 的 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你们 => 你们
Oracle Span 3:  大人们 => 大人们
Oracle Span 4:  当然 => 当然
Oracle Span 5:  相信 => 相信-01
Spans:
Span 5-6:  会 => 会-02
Span 7-8:  你们 => 你们
Span 2-3:  大人们 => 大人们
Span 0-1:  当然 => 当然
Span 6-7:  相信 => 相信-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 7-8:  你们 => 你们
Oracle Span 2-3:  大人们 => 大人们
Oracle Span 0-1:  当然 => 当然
Oracle Span 6-7:  相信 => 相信-01

Dependencies:
1	当然	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	大人们	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	不	_	AD	AD	_	7	neg	_	_
6	会	_	VV	VV	_	7	mmod	_	_
7	相信	_	VV	VV	_	4	attr	_	_
8	你们	_	PN	PN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x3 / 相信-01)
(x0 / 会-02, manner, x6 / 当然)
(x3 / 相信-01, arg0, x4 / 大人们)
(x3 / 相信-01, arg1, x5 / 你们)

Input(Some(Graph((会-02 :manner 当然 :arg0 (相信-01 :arg1 你们 :arg0 大人们) :polarity -),ArrayBuffer(Span(5,6,List(0),会,会-02,false), Span(0,1,List(1),当然,当然,false), Span(6,7,List(2),相信,相信-01,false), Span(7,8,List(3),你们,你们,false), Span(2,3,List(4),大人们,大人们,false)),Map(2 -> 相信-01, 1 -> 当然, 4 -> 大人们, 0 -> 会-02, 3 -> 你们),Map(x5 -> 你们, x4 -> 大人们, x3 -> 相信-01, x6 -> 当然, x0 -> 会-02))),[Ljava.lang.String;@30e9ca13,Annotation([Ljava.lang.String;@46185a1b,[Ljava.lang.String;@51288417,[Ljava.lang.String;@60cf62ad),Annotation([Ljava.lang.String;@1e0895f5,[Ljava.lang.String;@1ac4ccad,[Ledu.cmu.lti.nlp.amr.Dependency;@fd9ebde),Annotation([Ljava.lang.String;@14982a82,[Ljava.lang.String;@4ee5b2d9,[Ljava.lang.String;@72f8ae0c),Annotation([Ljava.lang.String;@323f3c96,[Ljava.lang.String;@6726cc69,[Ledu.cmu.lti.nlp.amr.Entity;@4b6d92e))
AMR:
(x0 / 会-02, manner, x6 / 当然)
(x0 / 会-02, op, x3 / 相信-01)
(x3 / 相信-01, ARG4, x4 / 大人们)
(x3 / 相信-01, purpose, x5 / 你们)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 10,438 microseconds
Sentence: 他们 自以为 要 占 很 大 地方 ，

Oracle Span 1:  他们 => 他们
Oracle Span 2:  占 => 占-02
Oracle Span 3:  地方 => 地方
Oracle Span 4:  大 => 大-01
Oracle Span 5:  很 => 很
Oracle Span 6:  要 => 要-03
Spans:
Span 0-1:  他们 => 他们
Span 3-4:  占 => 占-02
Span 6-7:  地方 => 地方
Span 5-6:  大 => 大-01
Span 4-5:  很 => 很
Span 2-3:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 3-4:  占 => 占-02
Oracle Span 6-7:  地方 => 地方
Oracle Span 5-6:  大 => 大-01
Oracle Span 4-5:  很 => 很
Oracle Span 2-3:  要 => 要-03

Dependencies:
1	他们	_	PN	PN	_	2	nsubj	_	_
2	自以为	_	VV	VV	_	0	root	_	_
3	要	_	VV	VV	_	2	ccomp	_	_
4	占	_	VV	VV	_	2	dep	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	大	_	JJ	JJ	_	7	amod	_	_
7	地方	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 要-03, arg0, x6 / 占-02)
(x6 / 占-02, arg1, x7 / 地方)
(x7 / 地方, mod, x8 / 大-01)
(x8 / 大-01, degree, x9 / 很)

Input(Some(Graph((以为-01 :arg0 他们 :arg1 (要-03 :arg0 (占-02 :arg1 (地方 :mod (大-01 :degree 很))))),ArrayBuffer(Span(0,1,List(0),他们,他们,false), Span(2,3,List(1),要,要-03,false), Span(3,4,List(2),占,占-02,false), Span(6,7,List(3),地方,地方,false), Span(5,6,List(4),大,大-01,false), Span(4,5,List(5),很,很,false)),Map(2 -> 占-02, 5 -> 很, 1 -> 要-03, 4 -> 大-01, 0 -> 他们, 3 -> 地方),Map(x5 -> 要-03, x8 -> 大-01, x7 -> 地方, x4 -> 他们, x6 -> 占-02, x9 -> 很))),[Ljava.lang.String;@33899f7a,Annotation([Ljava.lang.String;@7899de11,[Ljava.lang.String;@290d10ef,[Ljava.lang.String;@1bc0d349),Annotation([Ljava.lang.String;@644ded04,[Ljava.lang.String;@5292ceca,[Ledu.cmu.lti.nlp.amr.Dependency;@13d9261f),Annotation([Ljava.lang.String;@e9ef5b6,[Ljava.lang.String;@5300cac,[Ljava.lang.String;@4110765e),Annotation([Ljava.lang.String;@1ba359bd,[Ljava.lang.String;@62e93c3a,[Ledu.cmu.lti.nlp.amr.Entity;@673919a7))
AMR:
(x4 / 他们, ARG5, x5 / 要-03)
(x5 / 要-03, ARG3, x6 / 占-02)
(x6 / 占-02, snt3, x7 / 地方)
(x7 / 地方, mod, x8 / 大-01)
(x8 / 大-01, degree, x9 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
Decoded in 10,952 microseconds
Sentence: 他们 把 自己 看 得 象 猴面包树 那样 大 得 了不起 。

Oracle Span 1:  了不起 => 了不起-01
Oracle Span 2:  他们 => 他们
Oracle Span 3:  大 => 大-01
Oracle Span 4:  猴面包树 => 猴面包树
Oracle Span 5:  看 => 看-02
Spans:
Span 10-11:  了不起 => 了不起-01
Span 0-1:  他们 => 他们
Span 8-9:  大 => 大-01
Span 6-7:  猴面包树 => 猴面包树
Span 3-4:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 10-11:  了不起 => 了不起-01
Oracle Span 0-1:  他们 => 他们
Oracle Span 8-9:  大 => 大-01
Oracle Span 6-7:  猴面包树 => 猴面包树
Oracle Span 3-4:  看 => 看-02

Dependencies:
1	他们	_	PN	PN	_	11	nsubj	_	_
2	把	_	BA	BA	_	11	ba	_	_
3	自己	_	PN	PN	_	11	nsubj	_	_
4	看	_	VV	VV	_	11	dep	_	_
5	得	_	DER	DER	_	11	dep	_	_
6	象	_	P	P	_	8	dep	_	_
7	猴面包树	_	NN	NN	_	6	pobj	_	_
8	那样	_	AD	AD	_	11	advmod	_	_
9	大	_	VA	VA	_	11	dep	_	_
10	得	_	DER	DER	_	11	dep	_	_
11	了不起	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 看-02, arg0, x2 / 他们)
(x0 / 看-02, arg2, x16 / 了不起-01)
(x16 / 了不起-01, cause, x18 / 大-01)
(x18 / 大-01, compared-to, x21 / 猴面包树)

Input(Some(Graph((看-02 :arg2 (了不起-01 :cause (大-01 :compared-to 猴面包树 :degree equal :arg0 x2) :arg0 x2) :arg1 x2 :arg0 他们),ArrayBuffer(Span(3,4,List(0),看,看-02,false), Span(10,11,List(1),了不起,了不起-01,false), Span(8,9,List(2),大,大-01,false), Span(6,7,List(3),猴面包树,猴面包树,false), Span(0,1,List(4),他们,他们,false)),Map(2 -> 大-01, 1 -> 了不起-01, 4 -> 他们, 0 -> 看-02, 3 -> 猴面包树),Map(x16 -> 了不起-01, x2 -> 他们, x21 -> 猴面包树, x18 -> 大-01, x0 -> 看-02))),[Ljava.lang.String;@25d93198,Annotation([Ljava.lang.String;@2436ea2f,[Ljava.lang.String;@f951a7f,[Ljava.lang.String;@20cece0b),Annotation([Ljava.lang.String;@4c777e7b,[Ljava.lang.String;@5f038248,[Ledu.cmu.lti.nlp.amr.Dependency;@78e22d35),Annotation([Ljava.lang.String;@2e8a1ab4,[Ljava.lang.String;@59f93db8,[Ljava.lang.String;@1aabf50d),Annotation([Ljava.lang.String;@73c9e8e8,[Ljava.lang.String;@de8039f,[Ledu.cmu.lti.nlp.amr.Entity;@1deceb67))
AMR:
(x0 / 看-02, ARG2, x2 / 他们)
(x0 / 看-02, prep-on-behalf, x16 / 了不起-01)
(x16 / 了不起-01, ARG3, x18 / 大-01)
(x18 / 大-01, compared-to, x21 / 猴面包树)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,049 microseconds
Sentence: 你们 可以 建议 他们 计算 一下 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  你们 => 你们
Oracle Span 3:  可以 => 可以-02
Oracle Span 4:  建议 => 建议-01
Oracle Span 5:  计算 => 计算-01
Spans:
Span 3-4:  他们 => 他们
Span 0-1:  你们 => 你们
Span 1-2:  可以 => 可以-02
Span 2-3:  建议 => 建议-01
Span 4-5:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 2-3:  建议 => 建议-01
Oracle Span 4-5:  计算 => 计算-01

Dependencies:
1	你们	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	mmod	_	_
3	建议	_	VV	VV	_	0	root	_	_
4	他们	_	PN	PN	_	3	dobj	_	_
5	计算	_	VV	VV	_	3	dep	_	_
6	一下	_	AD	AD	_	5	advmod	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 建议-01)
(x2 / 建议-01, arg0, x3 / 你们)
(x2 / 建议-01, arg1, x4 / 计算-01)
(x2 / 建议-01, arg2, x5 / 他们)

Input(Some(Graph((可以-02 :arg0 (建议-01 :arg2 他们 :arg1 计算-01 :arg0 你们)),ArrayBuffer(Span(1,2,List(0),可以,可以-02,false), Span(2,3,List(1),建议,建议-01,false), Span(3,4,List(2),他们,他们,false), Span(4,5,List(3),计算,计算-01,false), Span(0,1,List(4),你们,你们,false)),Map(2 -> 他们, 1 -> 建议-01, 4 -> 你们, 0 -> 可以-02, 3 -> 计算-01),Map(x2 -> 建议-01, x5 -> 他们, x4 -> 计算-01, x3 -> 你们, x0 -> 可以-02))),[Ljava.lang.String;@582a764a,Annotation([Ljava.lang.String;@64984b0f,[Ljava.lang.String;@292158f8,[Ljava.lang.String;@53ec2968),Annotation([Ljava.lang.String;@58ff8d79,[Ljava.lang.String;@7e19755a,[Ledu.cmu.lti.nlp.amr.Dependency;@5d5c04f9),Annotation([Ljava.lang.String;@6f49d153,[Ljava.lang.String;@4b790d86,[Ljava.lang.String;@7e7f0216),Annotation([Ljava.lang.String;@4339baec,[Ljava.lang.String;@62db3891,[Ledu.cmu.lti.nlp.amr.Entity;@61cd1c71))
AMR:
(x0 / 可以-02, op, x2 / 建议-01)
(x2 / 建议-01, prep-on, x3 / 你们)
(x2 / 建议-01, prep-on-behalf, x4 / 计算-01)
(x2 / 建议-01, purpose, x5 / 他们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,914 microseconds
Sentence: 这样 会 使 他们 很 高兴 ， 因为 他们 非常 喜欢 数目字 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  会 => 会-02
Oracle Span 3:  喜欢 => 喜欢-01
Oracle Span 4:  很 => 很
Oracle Span 5:  数目字 => 数目字
Oracle Span 6:  这样 => 这样
Oracle Span 7:  非常 => 非常-01
Oracle Span 8:  高兴 => 高兴-01
Spans:
Span 3-4:  他们 => 他们
Span 1-2:  会 => 会-02
Span 10-11:  喜欢 => 喜欢-01
Span 4-5:  很 => 很
Span 11-12:  数目字 => 数目字
Span 0-1:  这样 => 这样
Span 9-10:  非常 => 非常-01
Span 5-6:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 1-2:  会 => 会-02
Oracle Span 10-11:  喜欢 => 喜欢-01
Oracle Span 4-5:  很 => 很
Oracle Span 11-12:  数目字 => 数目字
Oracle Span 0-1:  这样 => 这样
Oracle Span 9-10:  非常 => 非常-01
Oracle Span 5-6:  高兴 => 高兴-01

Dependencies:
1	这样	_	AD	AD	_	3	advmod	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	使	_	VV	VV	_	0	root	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	高兴	_	VA	VA	_	3	ccomp	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	因为	_	P	P	_	6	prep	_	_
9	他们	_	PN	PN	_	11	nsubj	_	_
10	非常	_	AD	AD	_	11	advmod	_	_
11	喜欢	_	VV	VV	_	8	pccomp	_	_
12	数目字	_	VV	VV	_	11	ccomp	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 喜欢-01, arg0, x15 / 他们)
(x13 / 喜欢-01, arg1, x16 / 数目字)
(x13 / 喜欢-01, degree, x14 / 非常-01)
(x18 / 会-02, arg0, x19 / 高兴-01)
(x19 / 高兴-01, cause, x22 / 这样)
(x19 / 高兴-01, degree, x20 / 很)

Input(Some(Graph((causation :arg1 (喜欢-01 :arg1 数目字 :arg0 他们 :degree 非常-01) :arg2 (会-02 :arg0 (高兴-01 :cause 这样 :arg0 x15 :degree 很))),ArrayBuffer(Span(10,11,List(0),喜欢,喜欢-01,false), Span(11,12,List(1),数目字,数目字,false), Span(3,4,List(2),他们,他们,false), Span(9,10,List(3),非常,非常-01,false), Span(1,2,List(4),会,会-02,false), Span(5,6,List(5),高兴,高兴-01,false), Span(0,1,List(6),这样,这样,false), Span(4,5,List(7),很,很,false)),Map(2 -> 他们, 5 -> 高兴-01, 7 -> 很, 1 -> 数目字, 4 -> 会-02, 6 -> 这样, 0 -> 喜欢-01, 3 -> 非常-01),Map(x22 -> 这样, x16 -> 数目字, x19 -> 高兴-01, x13 -> 喜欢-01, x15 -> 他们, x18 -> 会-02, x20 -> 很, x14 -> 非常-01))),[Ljava.lang.String;@6724cdec,Annotation([Ljava.lang.String;@6944e53e,[Ljava.lang.String;@52e04737,[Ljava.lang.String;@5bc7e78e),Annotation([Ljava.lang.String;@1a4d1ab7,[Ljava.lang.String;@546e61d5,[Ledu.cmu.lti.nlp.amr.Dependency;@4674d90),Annotation([Ljava.lang.String;@60783105,[Ljava.lang.String;@1292071f,[Ljava.lang.String;@35d5ac51),Annotation([Ljava.lang.String;@b606cb6,[Ljava.lang.String;@2a3194c6,[Ledu.cmu.lti.nlp.amr.Entity;@2819c460))
AMR:
(x13 / 喜欢-01, degree, x14 / 非常-01)
(x13 / 喜欢-01, degree, x15 / 他们)
(x13 / 喜欢-01, location, x16 / 数目字)
(x18 / 会-02, ARG1, x19 / 高兴-01)
(x19 / 高兴-01, ARG3, x22 / 这样)
(x19 / 高兴-01, degree, x20 / 很)
(x19 / 高兴-01, op, x15 / 他们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 21,981 microseconds
Sentence: 可是 你们 无须 浪费 时间 去 做 这 种 乏味 的 连篇累牍 的 演算 。

Oracle Span 1:  乏味 => 乏味-01
Oracle Span 2:  你们 => 你们
Oracle Span 3:  做 => 做-01
Oracle Span 4:  无须 => 无须-01
Oracle Span 5:  时间 => 时间
Oracle Span 6:  浪费 => 浪费-01
Oracle Span 7:  演算 => 演算
Oracle Span 8:  这 => 这
Oracle Span 9:  连篇累牍 => 连篇累牍-01
Spans:
Span 9-10:  乏味 => 乏味-01
Span 1-2:  你们 => 你们
Span 6-7:  做 => 做-01
Span 2-3:  无须 => 无须-01
Span 4-5:  时间 => 时间
Span 3-4:  浪费 => 浪费-01
Span 13-14:  演算 => 演算
Span 7-8:  这 => 这
Span 11-12:  连篇累牍 => 连篇累牍-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  乏味 => 乏味-01
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  做 => 做-01
Oracle Span 2-3:  无须 => 无须-01
Oracle Span 4-5:  时间 => 时间
Oracle Span 3-4:  浪费 => 浪费-01
Oracle Span 13-14:  演算 => 演算
Oracle Span 7-8:  这 => 这
Oracle Span 11-12:  连篇累牍 => 连篇累牍-01

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	你们	_	PN	PN	_	4	nsubj	_	_
3	无须	_	AD	AD	_	4	advmod	_	_
4	浪费	_	VV	VV	_	0	root	_	_
5	时间	_	NN	NN	_	7	nsubj	_	_
6	去	_	VV	VV	_	7	mmod	_	_
7	做	_	VV	VV	_	14	rcmod	_	_
8	这	_	DT	DT	_	10	det	_	_
9	种	_	M	M	_	8	clf	_	_
10	乏味	_	NN	NN	_	7	dobj	_	_
11	的	_	DEC	DEC	_	7	cpm	_	_
12	连篇累牍	_	VA	VA	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	演算	_	NN	NN	_	4	dobj	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 无须-01, arg0, x3 / 浪费-01)
(x3 / 浪费-01, arg0, x4 / 你们)
(x3 / 浪费-01, arg1, x5 / 时间)
(x3 / 浪费-01, purpose, x6 / 做-01)
(x6 / 做-01, arg1, x8 / 演算)
(x8 / 演算, mod, x10 / 乏味-01)
(x8 / 演算, mod, x11 / 连篇累牍-01)
(x8 / 演算, mod, x9 / 这)

Input(Some(Graph((contrast :arg2 (无须-01 :arg0 (浪费-01 :purpose (做-01 :arg1 (演算 :mod 连篇累牍-01 :mod 乏味-01 :mod 这) :arg0 x4) :arg1 时间 :arg0 你们))),ArrayBuffer(Span(2,3,List(0),无须,无须-01,false), Span(3,4,List(1),浪费,浪费-01,false), Span(6,7,List(2),做,做-01,false), Span(13,14,List(3),演算,演算,false), Span(11,12,List(4),连篇累牍,连篇累牍-01,false), Span(9,10,List(5),乏味,乏味-01,false), Span(7,8,List(6),这,这,false), Span(4,5,List(7),时间,时间,false), Span(1,2,List(8),你们,你们,false)),Map(2 -> 做-01, 5 -> 乏味-01, 8 -> 你们, 7 -> 时间, 1 -> 浪费-01, 4 -> 连篇累牍-01, 6 -> 这, 0 -> 无须-01, 3 -> 演算),Map(x10 -> 乏味-01, x2 -> 无须-01, x5 -> 时间, x8 -> 演算, x4 -> 你们, x11 -> 连篇累牍-01, x3 -> 浪费-01, x6 -> 做-01, x9 -> 这))),[Ljava.lang.String;@30364216,Annotation([Ljava.lang.String;@38bb9d7a,[Ljava.lang.String;@1e8ab90f,[Ljava.lang.String;@78d6447a),Annotation([Ljava.lang.String;@7a729f84,[Ljava.lang.String;@1e469dfd,[Ledu.cmu.lti.nlp.amr.Dependency;@554f0dfb),Annotation([Ljava.lang.String;@1f7076bc,[Ljava.lang.String;@71904469,[Ljava.lang.String;@5b9396d3),Annotation([Ljava.lang.String;@761e788f,[Ljava.lang.String;@6a472566,[Ledu.cmu.lti.nlp.amr.Entity;@1907874b))
AMR:
(x2 / 无须-01, ARG5, x3 / 浪费-01)
(x3 / 浪费-01, manner, x5 / 时间)
(x3 / 浪费-01, mode, x4 / 你们)
(x3 / 浪费-01, purpose, x6 / 做-01)
(x6 / 做-01, value, x8 / 演算)
(x8 / 演算, mod, x10 / 乏味-01)
(x8 / 演算, mod, x11 / 连篇累牍-01)
(x8 / 演算, mod, x9 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.1.2
WARNING: makeIds can't find span Id: 0.0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 26,746 microseconds
Sentence: 这 没有 必要 。

Oracle Span 1:  必要 => 必要-01
Oracle Span 2:  这 => 这
Spans:
Span 2-3:  必要 => 必要-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  必要 => 必要-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	必要	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 必要-01, arg0, x9 / 这)

Input(Some(Graph((必要-01 :arg0 这 :polarity -),ArrayBuffer(Span(2,3,List(0),必要,必要-01,false), Span(0,1,List(1),这,这,false)),Map(1 -> 这, 0 -> 必要-01),Map(x6 -> 必要-01, x9 -> 这))),[Ljava.lang.String;@5e65afb6,Annotation([Ljava.lang.String;@5b3a7ef5,[Ljava.lang.String;@8851ce1,[Ljava.lang.String;@2d9dff65),Annotation([Ljava.lang.String;@5ef6fd7f,[Ljava.lang.String;@5633ed82,[Ledu.cmu.lti.nlp.amr.Dependency;@767191b1),Annotation([Ljava.lang.String;@34d52ecd,[Ljava.lang.String;@5d21202d,[Ljava.lang.String;@14b789f6),Annotation([Ljava.lang.String;@6eb17ec8,[Ljava.lang.String;@730f9695,[Ledu.cmu.lti.nlp.amr.Entity;@277bf091))
AMR:
(x6 / 必要-01, manner, x9 / 这)

WARNING: makeIds can't find span Id: 0.1
Decoded in 3,040 microseconds
Sentence: 你们 可以 完全 相信 我 。

Oracle Span 1:  你们 => 你们
Oracle Span 2:  可以 => 可以-02
Oracle Span 3:  完全 => 完全-01
Oracle Span 4:  我 => 我
Oracle Span 5:  相信 => 相信-01
Spans:
Span 0-1:  你们 => 你们
Span 1-2:  可以 => 可以-02
Span 2-3:  完全 => 完全-01
Span 4-5:  我 => 我
Span 3-4:  相信 => 相信-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 2-3:  完全 => 完全-01
Oracle Span 4-5:  我 => 我
Oracle Span 3-4:  相信 => 相信-01

Dependencies:
1	你们	_	PN	PN	_	4	nsubj	_	_
2	可以	_	VV	VV	_	4	mmod	_	_
3	完全	_	AD	AD	_	4	advmod	_	_
4	相信	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 相信-01)
(x2 / 相信-01, arg0, x4 / 你们)
(x2 / 相信-01, arg1, x5 / 我)
(x2 / 相信-01, degree, x3 / 完全-01)

Input(Some(Graph((可以-02 :arg0 (相信-01 :arg1 我 :arg0 你们 :degree 完全-01)),ArrayBuffer(Span(1,2,List(0),可以,可以-02,false), Span(3,4,List(1),相信,相信-01,false), Span(4,5,List(2),我,我,false), Span(0,1,List(3),你们,你们,false), Span(2,3,List(4),完全,完全-01,false)),Map(2 -> 我, 1 -> 相信-01, 4 -> 完全-01, 0 -> 可以-02, 3 -> 你们),Map(x2 -> 相信-01, x5 -> 我, x4 -> 你们, x3 -> 完全-01, x0 -> 可以-02))),[Ljava.lang.String;@fab35b1,Annotation([Ljava.lang.String;@6a094db2,[Ljava.lang.String;@65bdd558,[Ljava.lang.String;@1dba4e06),Annotation([Ljava.lang.String;@4beaf6bd,[Ljava.lang.String;@6b2e46af,[Ledu.cmu.lti.nlp.amr.Dependency;@60325987),Annotation([Ljava.lang.String;@2f37f1f9,[Ljava.lang.String;@3374b5bc,[Ljava.lang.String;@2af69643),Annotation([Ljava.lang.String;@587a1cfb,[Ljava.lang.String;@48528634,[Ledu.cmu.lti.nlp.amr.Entity;@5e1d03d7))
AMR:
(x0 / 可以-02, snt5, x2 / 相信-01)
(x2 / 相信-01, degree, x3 / 完全-01)
(x2 / 相信-01, op, x4 / 你们)
(x2 / 相信-01, value, x5 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,869 microseconds
Sentence: 小 王子 到 了 地球 上 感到 非常 奇怪 ， 他 一 个 人 也 没有 看到 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  到 => 到-01
Oracle Span 4:  地球 => 地球
Oracle Span 5:  奇怪 => 奇怪-02
Oracle Span 6:  小 => 小-01
Oracle Span 7:  感到 => 感到-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  看到 => 看到-01
Oracle Span 10:  非常 => 非常
Spans:
Span 14-15:  也 => 也
Span 13-14:  人 => 人
Span 2-3:  到 => 到-01
Span 4-5:  地球 => 地球
Span 8-9:  奇怪 => 奇怪-02
Span 0-1:  小 => 小-01
Span 6-7:  感到 => 感到-01
Span 1-2:  王子 => 王子
Span 16-17:  看到 => 看到-01
Span 7-8:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  也 => 也
Oracle Span 13-14:  人 => 人
Oracle Span 2-3:  到 => 到-01
Oracle Span 4-5:  地球 => 地球
Oracle Span 8-9:  奇怪 => 奇怪-02
Oracle Span 0-1:  小 => 小-01
Oracle Span 6-7:  感到 => 感到-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 16-17:  看到 => 看到-01
Oracle Span 7-8:  非常 => 非常

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	到	_	VV	VV	_	6	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	地球	_	NN	NN	_	3	dobj	_	_
6	上	_	LC	LC	_	7	loc	_	_
7	感到	_	VV	VV	_	0	root	_	_
8	非常	_	AD	AD	_	9	advmod	_	_
9	奇怪	_	VA	VA	_	7	ccomp	_	_
10	,	_	PU	PU	_	7	punct	_	_
11	他	_	PN	PN	_	17	nsubj	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	14	clf	_	_
14	人	_	NN	NN	_	17	nsubj	_	_
15	也	_	AD	AD	_	17	advmod	_	_
16	没有	_	VV	VV	_	17	dep	_	_
17	看到	_	VV	VV	_	7	conj	_	_
18	,	_	PU	PU	_	17	punct	_	_
19	王子	_	NN	NN	_	9	xsubj	_	_

Oracle:
(x14 / 感到-01, arg0, x16 / 王子)
(x14 / 感到-01, arg1, x18 / 奇怪-02)
(x14 / 感到-01, time, x26 / 到-01)
(x16 / 王子, mod, x17 / 小-01)
(x18 / 奇怪-02, arg1, x20 / 看到-01)
(x18 / 奇怪-02, degree, x30 / 非常)
(x20 / 看到-01, arg1, x23 / 人)
(x20 / 看到-01, manner, x25 / 也)
(x26 / 到-01, arg1, x28 / 地球)

Input(Some(Graph((感到-01 :time (到-01 :arg1 地球 :arg0 x16) :arg1 (奇怪-02 :arg1 (看到-01 :manner 也 :arg1 (人 :quant 1) :arg0 x16 :polarity -) :arg0 x16 :degree 非常) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(6,7,List(0),感到,感到-01,false), Span(2,3,List(1),到,到-01,false), Span(4,5,List(2),地球,地球,false), Span(8,9,List(3),奇怪,奇怪-02,false), Span(16,17,List(4),看到,看到-01,false), Span(14,15,List(5),也,也,false), Span(13,14,List(6),人,人,false), Span(7,8,List(7),非常,非常,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小-01,false)),Map(2 -> 地球, 5 -> 也, 8 -> 王子, 7 -> 非常, 1 -> 到-01, 4 -> 看到-01, 6 -> 人, 9 -> 小-01, 0 -> 感到-01, 3 -> 奇怪-02),Map(x28 -> 地球, x16 -> 王子, x25 -> 也, x30 -> 非常, x18 -> 奇怪-02, x23 -> 人, x26 -> 到-01, x20 -> 看到-01, x14 -> 感到-01, x17 -> 小-01))),[Ljava.lang.String;@4047d2d9,Annotation([Ljava.lang.String;@48d293ee,[Ljava.lang.String;@146dcfe6,[Ljava.lang.String;@22587507),Annotation([Ljava.lang.String;@5c77ba8f,[Ljava.lang.String;@660f0c,[Ledu.cmu.lti.nlp.amr.Dependency;@7a0ef219),Annotation([Ljava.lang.String;@1b1f5012,[Ljava.lang.String;@7add323c,[Ljava.lang.String;@4a734c04),Annotation([Ljava.lang.String;@4760f169,[Ljava.lang.String;@261ea657,[Ledu.cmu.lti.nlp.amr.Entity;@35c12c7a))
AMR:
(x14 / 感到-01, time, x26 / 到-01)
(x14 / 感到-01, value, x18 / 奇怪-02)
(x16 / 王子, mod, x17 / 小-01)
(x18 / 奇怪-02, degree, x30 / 非常)
(x20 / 看到-01, manner, x23 / 人)
(x20 / 看到-01, manner, x25 / 也)
(x23 / 人, location, x18 / 奇怪-02)
(x26 / 到-01, mode, x16 / 王子)
(x26 / 到-01, unit, x28 / 地球)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.3
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 44,962 microseconds
Sentence: 他 正 担心 自己 跑错 了 星球 。 这时 ， 在 沙地 上 有 一 个 月光色 的 圆环 在 蠕动 。

Oracle Span 1:  他 => 他
Oracle Span 2:  圆环 => 圆环
Oracle Span 3:  担心 => 担心-01
Oracle Span 4:  星球 => 星球
Oracle Span 5:  月光色 => 月光色
Oracle Span 6:  有 => 有-03
Oracle Span 7:  正 => 正
Oracle Span 8:  沙地 => 沙地
Oracle Span 9:  蠕动 => 蠕动-01
Oracle Span 10:  这时 => 这时
Spans:
Span 0-1:  他 => 他
Span 18-19:  圆环 => 圆环
Span 2-3:  担心 => 担心-01
Span 6-7:  星球 => 星球
Span 16-17:  月光色 => 月光色
Span 13-14:  有 => 有-03
Span 1-2:  正 => 正
Span 11-12:  沙地 => 沙地
Span 20-21:  蠕动 => 蠕动-01
Span 8-9:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 18-19:  圆环 => 圆环
Oracle Span 2-3:  担心 => 担心-01
Oracle Span 6-7:  星球 => 星球
Oracle Span 16-17:  月光色 => 月光色
Oracle Span 13-14:  有 => 有-03
Oracle Span 1-2:  正 => 正
Oracle Span 11-12:  沙地 => 沙地
Oracle Span 20-21:  蠕动 => 蠕动-01
Oracle Span 8-9:  这时 => 这时

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	正	_	AD	AD	_	3	advmod	_	_
3	担心	_	VV	VV	_	0	root	_	_
4	自己	_	PN	PN	_	5	nsubj	_	_
5	跑错	_	VV	VV	_	3	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	星球	_	NN	NN	_	5	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	这时	_	AD	AD	_	21	advmod	_	_
10	,	_	PU	PU	_	21	punct	_	_
11	在	_	P	P	_	14	prep	_	_
12	沙地	_	NN	NN	_	13	lobj	_	_
13	上	_	LC	LC	_	11	plmod	_	_
14	有	_	VE	VE	_	19	rcmod	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	个	_	M	M	_	17	clf	_	_
17	月光色	_	NN	NN	_	14	dobj	_	_
18	的	_	DEC	DEC	_	14	cpm	_	_
19	圆环	_	NN	NN	_	21	nsubj	_	_
20	在	_	AD	AD	_	21	advmod	_	_
21	蠕动	_	VV	VV	_	3	conj	_	_
22	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-03, arg0, x14 / 沙地)
(x13 / 有-03, arg1, x15 / 圆环)
(x13 / 有-03, time, x19 / 这时)
(x15 / 圆环, mod, x17 / 月光色)
(x18 / 蠕动-01, arg0, x15 / 圆环)
(x2 / 担心-01, arg0, x3 / 他)
(x2 / 担心-01, manner, x8 / 正)

Input(Some(Graph((multi-sentence :snt1 (担心-01 :arg1 (跑-01 :arg0 x3 :arg3 星球 :manner 错-01) :manner 正 :arg0 他) :snt2 (有-03 :time 这时 :arg1 (圆环 :quant 1 :arg0-of 蠕动-01 :mod 月光色) :arg0 沙地)),ArrayBuffer(Span(2,3,List(0),担心,担心-01,false), Span(6,7,List(1),星球,星球,false), Span(1,2,List(2),正,正,false), Span(0,1,List(3),他,他,false), Span(13,14,List(4),有,有-03,false), Span(8,9,List(5),这时,这时,false), Span(18,19,List(6),圆环,圆环,false), Span(20,21,List(7),蠕动,蠕动-01,false), Span(16,17,List(8),月光色,月光色,false), Span(11,12,List(9),沙地,沙地,false)),Map(2 -> 正, 5 -> 这时, 8 -> 月光色, 7 -> 蠕动-01, 1 -> 星球, 4 -> 有-03, 6 -> 圆环, 9 -> 沙地, 0 -> 担心-01, 3 -> 他),Map(x19 -> 这时, x2 -> 担心-01, x13 -> 有-03, x8 -> 正, x15 -> 圆环, x18 -> 蠕动-01, x3 -> 他, x11 -> 星球, x14 -> 沙地, x17 -> 月光色))),[Ljava.lang.String;@658255aa,Annotation([Ljava.lang.String;@25290bca,[Ljava.lang.String;@76563d26,[Ljava.lang.String;@4ac86d6a),Annotation([Ljava.lang.String;@3d904e9c,[Ljava.lang.String;@508a65bf,[Ledu.cmu.lti.nlp.amr.Dependency;@17f2dd85),Annotation([Ljava.lang.String;@1e58512c,[Ljava.lang.String;@210308d5,[Ljava.lang.String;@22a736d7),Annotation([Ljava.lang.String;@23b8d9f3,[Ljava.lang.String;@7f353d99,[Ledu.cmu.lti.nlp.amr.Entity;@4649d70a))
AMR:
(x11 / 星球, mod, x8 / 正)
(x13 / 有-03, ARG0, x14 / 沙地)
(x13 / 有-03, ARG3, x15 / 圆环)
(x13 / 有-03, time, x19 / 这时)
(x15 / 圆环, mod, x17 / 月光色)
(x18 / 蠕动-01, mode, x15 / 圆环)
(x2 / 担心-01, ARG6, x3 / 他)
(x2 / 担心-01, manner, x8 / 正)
(x8 / 正, domain, x19 / 这时)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 34,083 microseconds
Sentence: 小 王子 毫 无 把握 地 随便 说 了 声 ： “ 晚安 。 ”

Oracle Span 1:  小 => 小-01
Oracle Span 2:  晚安 => 晚安-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Oracle Span 5:  随便 => 随便-01
Spans:
Span 0-1:  小 => 小-01
Span 12-13:  晚安 => 晚安-01
Span 1-2:  王子 => 王子
Span 7-8:  说 => 说-01
Span 6-7:  随便 => 随便-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  晚安 => 晚安-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  说 => 说-01
Oracle Span 6-7:  随便 => 随便-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	毫	_	AD	AD	_	4	advmod	_	_
4	无	_	VE	VE	_	7	dvpmod	_	_
5	把握	_	NN	NN	_	4	dobj	_	_
6	地	_	DEV	DEV	_	4	dvpm	_	_
7	随便	_	VV	VV	_	0	root	_	_
8	说	_	VV	VV	_	7	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	声	_	NN	NN	_	8	dobj	_	_
11	：	_	PU	PU	_	7	punct	_	_
12	“	_	PU	PU	_	7	punct	_	_
13	晚安	_	VV	VV	_	7	conj	_	_
14	。	_	PU	PU	_	7	punct	_	_
15	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg1, x6 / 晚安-01)
(x0 / 说-01, manner, x2 / 随便-01)
(x2 / 随便-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((说-01 :arg1 晚安-01 :manner 毫无把握 :manner (随便-01 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(12,13,List(1),晚安,晚安-01,false), Span(6,7,List(2),随便,随便-01,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 随便-01, 1 -> 晚安-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 随便-01, x4 -> 小-01, x3 -> 王子, x6 -> 晚安-01, x0 -> 说-01))),[Ljava.lang.String;@5d43409a,Annotation([Ljava.lang.String;@38d17d80,[Ljava.lang.String;@6ede46f6,[Ljava.lang.String;@66273da0),Annotation([Ljava.lang.String;@2127e66e,[Ljava.lang.String;@1229a2b7,[Ledu.cmu.lti.nlp.amr.Dependency;@e5cbff2),Annotation([Ljava.lang.String;@51c959a4,[Ljava.lang.String;@4fc3c165,[Ljava.lang.String;@10a0fe30),Annotation([Ljava.lang.String;@7b6860f9,[Ljava.lang.String;@60f70249,[Ledu.cmu.lti.nlp.amr.Entity;@31ee2fdb))
AMR:
(x0 / 说-01, manner, x2 / 随便-01)
(x0 / 说-01, purpose, x6 / 晚安-01)
(x3 / 王子, mod, x2 / 随便-01)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 9,449 microseconds
Sentence: “ 晚安 。 ” 蛇 说道 。

Oracle Span 1:  晚安 => 晚安-01
Oracle Span 2:  蛇 => 蛇
Oracle Span 3:  说道 => 说道-01
Spans:
Span 1-2:  晚安 => 晚安-01
Span 4-5:  蛇 => 蛇
Span 5-6:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  晚安 => 晚安-01
Oracle Span 4-5:  蛇 => 蛇
Oracle Span 5-6:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	晚安	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	蛇	_	NN	NN	_	6	nsubj	_	_
6	说道	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 晚安-01)

Input(Some(Graph((说道-01 :arg1 晚安-01 :arg0 蛇),ArrayBuffer(Span(5,6,List(0),说道,说道-01,false), Span(1,2,List(1),晚安,晚安-01,false), Span(4,5,List(2),蛇,蛇,false)),Map(2 -> 蛇, 1 -> 晚安-01, 0 -> 说道-01),Map(x2 -> 蛇, x3 -> 晚安-01, x0 -> 说道-01))),[Ljava.lang.String;@262816a8,Annotation([Ljava.lang.String;@1effd53c,[Ljava.lang.String;@46c269e0,[Ljava.lang.String;@6920614),Annotation([Ljava.lang.String;@6069dd38,[Ljava.lang.String;@5fa23c,[Ledu.cmu.lti.nlp.amr.Dependency;@558756be),Annotation([Ljava.lang.String;@433348bc,[Ljava.lang.String;@6d1dcdff,[Ljava.lang.String;@102ecc22),Annotation([Ljava.lang.String;@7ff35a3f,[Ljava.lang.String;@26dc9bd5,[Ledu.cmu.lti.nlp.amr.Entity;@252dc8c4))
AMR:
(x0 / 说道-01, conj-as-if, x3 / 晚安-01)
(x0 / 说道-01, snt3, x2 / 蛇)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,013 microseconds
Sentence: “ 我 落 在 什么 行星 上 ？ ” 小 王子 问道 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  王子 => 王子
Oracle Span 4:  落 => 落-02
Oracle Span 5:  行星 => 行星
Oracle Span 6:  问道 => 问道-01
Spans:
Span 9-10:  小 => 小-01
Span 1-2:  我 => 我
Span 10-11:  王子 => 王子
Span 2-3:  落 => 落-02
Span 5-6:  行星 => 行星
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 10-11:  王子 => 王子
Oracle Span 2-3:  落 => 落-02
Oracle Span 5-6:  行星 => 行星
Oracle Span 11-12:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	落	_	AD	AD	_	4	advmod	_	_
4	在	_	VV	VV	_	11	vmod	_	_
5	什么	_	DT	DT	_	6	det	_	_
6	行星	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	4	loc	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 落-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 落-02, arg0, x5 / 我)
(x4 / 落-02, arg1, x6 / 行星)

Input(Some(Graph((问道-01 :mode interrogative :arg1 (落-02 :arg1 (行星 :mod amr-unknown) :arg0 我) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(2,3,List(1),落,落-02,false), Span(5,6,List(2),行星,行星,false), Span(1,2,List(3),我,我,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false)),Map(2 -> 行星, 5 -> 小-01, 1 -> 落-02, 4 -> 王子, 0 -> 问道-01, 3 -> 我),Map(x2 -> 王子, x5 -> 我, x4 -> 落-02, x3 -> 小-01, x6 -> 行星, x0 -> 问道-01))),[Ljava.lang.String;@43045f9f,Annotation([Ljava.lang.String;@2643d762,[Ljava.lang.String;@6403e24c,[Ljava.lang.String;@2f236de0),Annotation([Ljava.lang.String;@4eba373c,[Ljava.lang.String;@767a014e,[Ledu.cmu.lti.nlp.amr.Dependency;@d109c4f),Annotation([Ljava.lang.String;@3968bc60,[Ljava.lang.String;@26f46fa6,[Ljava.lang.String;@227a47),Annotation([Ljava.lang.String;@9596ce8,[Ljava.lang.String;@75ae4a1f,[Ledu.cmu.lti.nlp.amr.Entity;@70228253))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, manner, x4 / 落-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 落-02, beneficiary, x5 / 我)
(x4 / 落-02, prep-through, x6 / 行星)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,103 microseconds
Sentence: “ 在 地球 上 ， 在 非洲 。 ” 蛇 回答 道 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  地球 => 地球
Oracle Span 3:  蛇 => 蛇
Oracle Span 4:  非洲 => 非洲
Spans:
Span 10-11:  回答 => 回答-01
Span 2-3:  地球 => 地球
Span 9-10:  蛇 => 蛇
Span 6-7:  非洲 => 非洲

 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.lang.StackOverflowError
	at scala.collection.IndexedSeqOptimized$$anonfun$1.apply(IndexedSeqOptimized.scala:44)
	at scala.collection.IndexedSeqOptimized$$anonfun$1.apply(IndexedSeqOptimized.scala:44)
	at scala.collection.IndexedSeqOptimized$class.segmentLength(IndexedSeqOptimized.scala:189)
	at scala.collection.mutable.ArrayOps$ofRef.segmentLength(ArrayOps.scala:108)
	at scala.collection.GenSeqLike$class.prefixLength(GenSeqLike.scala:92)
	at scala.collection.mutable.ArrayOps$ofRef.prefixLength(ArrayOps.scala:108)
	at scala.collection.IndexedSeqOptimized$class.find(IndexedSeqOptimized.scala:44)
	at scala.collection.mutable.ArrayOps$ofRef.find(ArrayOps.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:442)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ！

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x7 -> 啊))),[Ljava.lang.String;@21bd20ee,Annotation([Ljava.lang.String;@26c47874,[Ljava.lang.String;@421056e5,[Ljava.lang.String;@2849434b),Annotation([Ljava.lang.String;@60bbacfc,[Ljava.lang.String;@65b97f47,[Ledu.cmu.lti.nlp.amr.Dependency;@255eaa6b),Annotation([Ljava.lang.String;@476fe690,[Ljava.lang.String;@7a0e7ecd,[Ljava.lang.String;@54e3658c),Annotation([Ljava.lang.String;@43e9089,[Ljava.lang.String;@3c5dbdf8,[Ledu.cmu.lti.nlp.amr.Entity;@352c44a8))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 2,098 microseconds
Sentence: … 怎么 ， 难道 说 地球 上 没有 人 吗 ？ ”

Oracle Span 1:  人 => 人
Oracle Span 2:  地球 => 地球
Oracle Span 3:  怎么 => 怎么
Oracle Span 4:  难道 => 难道
Spans:
Span 8-9:  人 => 人
Span 5-6:  地球 => 地球
Span 1-2:  怎么 => 怎么
Span 3-4:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  人 => 人
Oracle Span 5-6:  地球 => 地球
Oracle Span 1-2:  怎么 => 怎么
Oracle Span 3-4:  难道 => 难道

Dependencies:
1	…	_	PU	PU	_	5	dep	_	_
2	怎么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	难道	_	VV	VV	_	5	nsubj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	地球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	5	loc	_	_
8	没有	_	VE	VE	_	5	conj	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	吗	_	SP	SP	_	5	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (and :op 怎么 :op (有-03 :polarity - :arg0 地球 :arg1 人 :manner 难道 :mode interrogative))),ArrayBuffer(Span(1,2,List(0),怎么,怎么,false), Span(5,6,List(1),地球,地球,false), Span(8,9,List(2),人,人,false), Span(3,4,List(3),难道,难道,false)),Map(2 -> 人, 1 -> 地球, 0 -> 怎么, 3 -> 难道),Map(x13 -> 难道, x8 -> 怎么, x12 -> 人, x11 -> 地球))),[Ljava.lang.String;@7aac8884,Annotation([Ljava.lang.String;@a66e580,[Ljava.lang.String;@5b852b49,[Ljava.lang.String;@cdb2d95),Annotation([Ljava.lang.String;@122d6c22,[Ljava.lang.String;@2f5ac102,[Ledu.cmu.lti.nlp.amr.Dependency;@5df778c3),Annotation([Ljava.lang.String;@895416d,[Ljava.lang.String;@71a06021,[Ljava.lang.String;@80bfdc6),Annotation([Ljava.lang.String;@6edcad64,[Ljava.lang.String;@4c6007fb,[Ledu.cmu.lti.nlp.amr.Entity;@3e33d73e))
AMR:
(x11 / 地球, quant, x13 / 难道)
(x11 / 地球, source, x12 / 人)
(x8 / 怎么, subset, x13 / 难道)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.3
Decoded in 6,453 microseconds
Sentence: “ 这里 是 沙漠 ，

Oracle Span 1:  沙漠 => 沙漠
Oracle Span 2:  这里 => 这里
Spans:
Span 3-4:  沙漠 => 沙漠
Span 1-2:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  沙漠 => 沙漠
Oracle Span 1-2:  这里 => 这里

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这里	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	沙漠	_	NN	NN	_	3	conj	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 沙漠, domain, x6 / 这里)

Input(Some(Graph((say :arg1 (沙漠 :domain 这里)),ArrayBuffer(Span(3,4,List(0),沙漠,沙漠,false), Span(1,2,List(1),这里,这里,false)),Map(1 -> 这里, 0 -> 沙漠),Map(x5 -> 沙漠, x6 -> 这里))),[Ljava.lang.String;@6981f8f3,Annotation([Ljava.lang.String;@623dcf2a,[Ljava.lang.String;@2eae4349,[Ljava.lang.String;@e84fb85),Annotation([Ljava.lang.String;@68a4dcc6,[Ljava.lang.String;@646c0a67,[Ledu.cmu.lti.nlp.amr.Dependency;@3804a9a8),Annotation([Ljava.lang.String;@117525fe,[Ljava.lang.String;@5f7989fa,[Ljava.lang.String;@5bc28f40),Annotation([Ljava.lang.String;@46963479,[Ljava.lang.String;@7e74a380,[Ledu.cmu.lti.nlp.amr.Entity;@6dd1c3ed))
AMR:
(x5 / 沙漠, domain, x6 / 这里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,494 microseconds
Sentence: 沙漠 中 没有 人 。

Oracle Span 1:  人 => 人
Oracle Span 2:  沙漠 => 沙漠
Spans:
Span 3-4:  人 => 人
Span 0-1:  沙漠 => 沙漠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  人 => 人
Oracle Span 0-1:  沙漠 => 沙漠

Dependencies:
1	沙漠	_	NN	NN	_	2	lobj	_	_
2	中	_	LC	LC	_	3	loc	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	人	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((有-03 :polarity - :arg0 沙漠 :arg1 人),ArrayBuffer(Span(0,1,List(0),沙漠,沙漠,false), Span(3,4,List(1),人,人,false)),Map(1 -> 人, 0 -> 沙漠),Map(x8 -> 人, x7 -> 沙漠))),[Ljava.lang.String;@22a6e998,Annotation([Ljava.lang.String;@55e42449,[Ljava.lang.String;@e57e5d6,[Ljava.lang.String;@6dfa915a),Annotation([Ljava.lang.String;@78054f54,[Ljava.lang.String;@cb7fa71,[Ledu.cmu.lti.nlp.amr.Dependency;@3dffc764),Annotation([Ljava.lang.String;@4b6e1c0,[Ljava.lang.String;@561b61ed,[Ljava.lang.String;@654c7d2d),Annotation([Ljava.lang.String;@26cb5207,[Ljava.lang.String;@15400fff,[Ledu.cmu.lti.nlp.amr.Entity;@18d910b3))
AMR:
(x7 / 沙漠, accompanier, x8 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
Decoded in 2,880 microseconds
Sentence: 地球 是 很 大 的 。 ” 蛇 说 。

Oracle Span 1:  地球 => 地球
Oracle Span 2:  大 => 大-01
Oracle Span 3:  很 => 很
Oracle Span 4:  蛇 => 蛇
Oracle Span 5:  说 => 说-01
Spans:
Span 0-1:  地球 => 地球
Span 3-4:  大 => 大-01
Span 2-3:  很 => 很
Span 7-8:  蛇 => 蛇
Span 8-9:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  地球 => 地球
Oracle Span 3-4:  大 => 大-01
Oracle Span 2-3:  很 => 很
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 8-9:  说 => 说-01

Dependencies:
1	地球	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	9	conj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	大	_	VA	VA	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	8	punct	_	_
8	蛇	_	NT	NT	_	9	nn	_	_
9	说	_	NN	NN	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 大-01)
(x3 / 大-01, arg0, x5 / 地球)
(x3 / 大-01, degree, x4 / 很)

Input(Some(Graph((说-01 :arg1 (大-01 :arg0 地球 :degree 很) :arg0 蛇),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),大,大-01,false), Span(0,1,List(2),地球,地球,false), Span(2,3,List(3),很,很,false), Span(7,8,List(4),蛇,蛇,false)),Map(2 -> 地球, 1 -> 大-01, 4 -> 蛇, 0 -> 说-01, 3 -> 很),Map(x2 -> 蛇, x5 -> 地球, x4 -> 很, x3 -> 大-01, x0 -> 说-01))),[Ljava.lang.String;@1e7ab390,Annotation([Ljava.lang.String;@625d9132,[Ljava.lang.String;@77774571,[Ljava.lang.String;@277b8fa4),Annotation([Ljava.lang.String;@6cd64ee8,[Ljava.lang.String;@620c8641,[Ledu.cmu.lti.nlp.amr.Dependency;@2f1d0bbc),Annotation([Ljava.lang.String;@5460b754,[Ljava.lang.String;@a9f023e,[Ljava.lang.String;@c27a3a2),Annotation([Ljava.lang.String;@4b200971,[Ljava.lang.String;@1a2bcd56,[Ledu.cmu.lti.nlp.amr.Entity;@68d7a2df))
AMR:
(x0 / 说-01, ARG5, x2 / 蛇)
(x0 / 说-01, time, x3 / 大-01)
(x3 / 大-01, degree, x4 / 很)
(x3 / 大-01, domain, x5 / 地球)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,292 microseconds
Sentence: 小 王子 坐 在 一 块 石头 上 ， 抬眼 望 着 天空 ，

Oracle Span 1:  坐 => 坐-01
Oracle Span 2:  天空 => 天空
Oracle Span 3:  小 => 小-01
Oracle Span 4:  抬眼 => 抬眼
Oracle Span 5:  望 => 望-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  石头 => 石头
Spans:
Span 2-3:  坐 => 坐-01
Span 12-13:  天空 => 天空
Span 0-1:  小 => 小-01
Span 9-10:  抬眼 => 抬眼
Span 10-11:  望 => 望-01
Span 1-2:  王子 => 王子
Span 6-7:  石头 => 石头

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 12-13:  天空 => 天空
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  抬眼 => 抬眼
Oracle Span 10-11:  望 => 望-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 6-7:  石头 => 石头

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	块	_	M	M	_	7	clf	_	_
7	石头	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	plmod	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	抬眼	_	AD	AD	_	11	advmod	_	_
11	望	_	VV	VV	_	3	conj	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	天空	_	NN	NN	_	11	dobj	_	_
14	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 望-01, arg1, x14 / 天空)
(x11 / 望-01, manner, x12 / 抬眼)
(x4 / 坐-01, arg0, x5 / 王子)
(x4 / 坐-01, arg1, x7 / 石头)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph((and :op (坐-01 :arg1 (石头 :quant 1) :arg0 (王子 :mod 小-01)) :op (望-01 :arg1 天空 :arg0 x5 :manner 抬眼)),ArrayBuffer(Span(2,3,List(0),坐,坐-01,false), Span(6,7,List(1),石头,石头,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(10,11,List(4),望,望-01,false), Span(12,13,List(5),天空,天空,false), Span(9,10,List(6),抬眼,抬眼,false)),Map(2 -> 王子, 5 -> 天空, 1 -> 石头, 4 -> 望-01, 6 -> 抬眼, 0 -> 坐-01, 3 -> 小-01),Map(x5 -> 王子, x12 -> 抬眼, x7 -> 石头, x4 -> 坐-01, x11 -> 望-01, x14 -> 天空, x6 -> 小-01))),[Ljava.lang.String;@59dc36d4,Annotation([Ljava.lang.String;@12fcc71f,[Ljava.lang.String;@5679e96b,[Ljava.lang.String;@3ed7821),Annotation([Ljava.lang.String;@3bbf841e,[Ljava.lang.String;@4f0f7849,[Ledu.cmu.lti.nlp.amr.Dependency;@56a4f272),Annotation([Ljava.lang.String;@3ee0b4f7,[Ljava.lang.String;@79b84841,[Ljava.lang.String;@4d41ba0f),Annotation([Ljava.lang.String;@3c87e6b7,[Ljava.lang.String;@77bbadc,[Ledu.cmu.lti.nlp.amr.Entity;@3c3a0032))
AMR:
(x11 / 望-01, manner, x12 / 抬眼)
(x11 / 望-01, mod, x14 / 天空)
(x4 / 坐-01, degree, x7 / 石头)
(x4 / 坐-01, direction, x5 / 王子)
(x5 / 王子, mod, x6 / 小-01)
(x7 / 石头, prep-out, x11 / 望-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 16,372 microseconds
Sentence: 说道 ： “ 我 捉摸 这些 星星 闪闪发亮 是否 为了 让 每 个 人 将来 有 一 天 都 能 重新 找到 自己 的 星球 。

Oracle Span 1:  为了 => 为了-01
Oracle Span 2:  人 => 人
Oracle Span 3:  将来 => 将来
Oracle Span 4:  我 => 我
Oracle Span 5:  找到 => 找到-01
Oracle Span 6:  捉摸 => 捉摸-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  星球 => 星球
Oracle Span 9:  是否 => 是否-01
Oracle Span 10:  每 => 每
Oracle Span 11:  能 => 能-01
Oracle Span 12:  自己 => 自己
Oracle Span 13:  让 => 让-02
Oracle Span 14:  说道 => 说道-01
Oracle Span 15:  这些 => 这些
Oracle Span 16:  都 => 都
Oracle Span 17:  重新 => 重新-01
Oracle Span 18:  闪闪发亮 => 闪闪发亮
Spans:
Span 9-10:  为了 => 为了-01
Span 13-14:  人 => 人
Span 14-15:  将来 => 将来
Span 3-4:  我 => 我
Span 21-22:  找到 => 找到-01
Span 4-5:  捉摸 => 捉摸-01
Span 6-7:  星星 => 星星
Span 24-25:  星球 => 星球
Span 8-9:  是否 => 是否-01
Span 11-12:  每 => 每
Span 19-20:  能 => 能-01
Span 22-23:  自己 => 自己
Span 10-11:  让 => 让-02
Span 0-1:  说道 => 说道-01
Span 5-6:  这些 => 这些
Span 18-19:  都 => 都
Span 20-21:  重新 => 重新-01
Span 7-8:  闪闪发亮 => 闪闪发亮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  为了 => 为了-01
Oracle Span 13-14:  人 => 人
Oracle Span 14-15:  将来 => 将来
Oracle Span 3-4:  我 => 我
Oracle Span 21-22:  找到 => 找到-01
Oracle Span 4-5:  捉摸 => 捉摸-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 24-25:  星球 => 星球
Oracle Span 8-9:  是否 => 是否-01
Oracle Span 11-12:  每 => 每
Oracle Span 19-20:  能 => 能-01
Oracle Span 22-23:  自己 => 自己
Oracle Span 10-11:  让 => 让-02
Oracle Span 0-1:  说道 => 说道-01
Oracle Span 5-6:  这些 => 这些
Oracle Span 18-19:  都 => 都
Oracle Span 20-21:  重新 => 重新-01
Oracle Span 7-8:  闪闪发亮 => 闪闪发亮

Dependencies:
1	说道	_	VV	VV	_	0	root	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	5	punct	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	捉摸	_	VV	VV	_	1	ccomp	_	_
6	这些	_	DT	DT	_	7	det	_	_
7	星星	_	NN	NN	_	8	nn	_	_
8	闪闪发亮	_	NN	NN	_	22	nsubj	_	_
9	是否	_	AD	AD	_	22	advmod	_	_
10	为了	_	P	P	_	22	prep	_	_
11	让	_	VV	VV	_	10	pccomp	_	_
12	每	_	DT	DT	_	14	det	_	_
13	个	_	M	M	_	12	clf	_	_
14	人	_	NN	NN	_	11	dobj	_	_
15	将来	_	NT	NT	_	16	tmod	_	_
16	有	_	VE	VE	_	11	dep	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	天	_	M	M	_	16	dep	_	_
19	都	_	AD	AD	_	22	advmod	_	_
20	能	_	VV	VV	_	22	mmod	_	_
21	重新	_	AD	AD	_	22	advmod	_	_
22	找到	_	VV	VV	_	5	ccomp	_	_
23	自己	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	星球	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	1	punct	_	_
27	将来	_	NT	NT	_	16	top	_	_

Oracle:
(x0 / 说道-01, arg1, x2 / 捉摸-01)
(x10 / 人, mod, x11 / 每)
(x12 / 能-01, arg0, x13 / 找到-01)
(x12 / 能-01, manner, x18 / 都)
(x13 / 找到-01, arg1, x16 / 星球)
(x13 / 找到-01, manner, x14 / 重新-01)
(x16 / 星球, poss, x17 / 自己)
(x2 / 捉摸-01, arg0, x3 / 我)
(x2 / 捉摸-01, arg1, x4 / 星星)
(x2 / 捉摸-01, arg2, x6 / 闪闪发亮)
(x4 / 星星, mod, x5 / 这些)
(x6 / 闪闪发亮, cause, x8 / 为了-01)
(x8 / 为了-01, arg1, x9 / 让-02)
(x8 / 为了-01, manner, x21 / 是否-01)
(x9 / 让-02, arg1, x10 / 人)
(x9 / 让-02, arg2, x12 / 能-01)

Input(Some(Graph((说道-01 :arg1 (捉摸-01 :arg2 (闪闪发亮 :cause (为了-01 :manner 是否-01 :arg1 (让-02 :arg2 (能-01 :time (有一天 :mod 将来) :manner 都 :arg0 (找到-01 :arg1 (星球 :poss 自己) :arg0 x10 :manner 重新-01)) :arg1 (人 :mod 每)))) :arg1 (星星 :mod 这些) :arg0 我)),ArrayBuffer(Span(0,1,List(0),说道,说道-01,false), Span(4,5,List(1),捉摸,捉摸-01,false), Span(7,8,List(2),闪闪发亮,闪闪发亮,false), Span(9,10,List(3),为了,为了-01,false), Span(8,9,List(4),是否,是否-01,false), Span(10,11,List(5),让,让-02,false), Span(19,20,List(6),能,能-01,false), Span(14,15,List(7),将来,将来,false), Span(18,19,List(8),都,都,false), Span(21,22,List(9),找到,找到-01,false), Span(24,25,List(10),星球,星球,false), Span(22,23,List(11),自己,自己,false), Span(20,21,List(12),重新,重新-01,false), Span(13,14,List(13),人,人,false), Span(11,12,List(14),每,每,false), Span(6,7,List(15),星星,星星,false), Span(5,6,List(16),这些,这些,false), Span(3,4,List(17),我,我,false)),Map(2 -> 闪闪发亮, 5 -> 让-02, 12 -> 重新-01, 15 -> 星星, 8 -> 都, 7 -> 将来, 17 -> 我, 1 -> 捉摸-01, 4 -> 是否-01, 11 -> 自己, 14 -> 每, 6 -> 能-01, 9 -> 找到-01, 0 -> 说道-01, 16 -> 这些, 10 -> 星球, 3 -> 为了-01, 13 -> 人),Map(x16 -> 星球, x10 -> 人, x2 -> 捉摸-01, x5 -> 这些, x13 -> 找到-01, x8 -> 为了-01, x12 -> 能-01, x21 -> 是否-01, x18 -> 都, x4 -> 星星, x3 -> 我, x11 -> 每, x6 -> 闪闪发亮, x14 -> 重新-01, x20 -> 将来, x9 -> 让-02, x17 -> 自己, x0 -> 说道-01))),[Ljava.lang.String;@7ceb4478,Annotation([Ljava.lang.String;@7fdab70c,[Ljava.lang.String;@25ad4f71,[Ljava.lang.String;@49faf066),Annotation([Ljava.lang.String;@6f94a5a5,[Ljava.lang.String;@455c1d8c,[Ledu.cmu.lti.nlp.amr.Dependency;@a451491),Annotation([Ljava.lang.String;@1422ac7f,[Ljava.lang.String;@5e519ad3,[Ljava.lang.String;@7bc44ce8),Annotation([Ljava.lang.String;@59072e9d,[Ljava.lang.String;@58472096,[Ledu.cmu.lti.nlp.amr.Entity;@a92be4f))
AMR:
(x10 / 人, mod, x11 / 每)
(x11 / 每, beneficiary, x8 / 为了-01)
(x12 / 能-01, manner, x14 / 重新-01)
(x12 / 能-01, manner, x18 / 都)
(x13 / 找到-01, manner, x14 / 重新-01)
(x13 / 找到-01, ord, x17 / 自己)
(x16 / 星球, poss, x17 / 自己)
(x2 / 捉摸-01, beneficiary, x0 / 说道-01)
(x2 / 捉摸-01, beneficiary, x3 / 我)
(x2 / 捉摸-01, source, x21 / 是否-01)
(x20 / 将来, beneficiary, x10 / 人)
(x21 / 是否-01, beneficiary, x6 / 闪闪发亮)
(x4 / 星星, mod, x5 / 这些)
(x4 / 星星, mod, x6 / 闪闪发亮)
(x8 / 为了-01, manner, x14 / 重新-01)
(x8 / 为了-01, manner, x21 / 是否-01)
(x9 / 让-02, ARG3, x8 / 为了-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 101,684 microseconds
Sentence: 看 ， 我 那 颗 行星 。

Oracle Span 1:  我 => 我
Oracle Span 2:  看 => 看-02
Oracle Span 3:  行星 => 行星
Oracle Span 4:  那 => 那
Spans:
Span 2-3:  我 => 我
Span 0-1:  看 => 看-02
Span 5-6:  行星 => 行星
Span 3-4:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  看 => 看-02
Oracle Span 5-6:  行星 => 行星
Oracle Span 3-4:  那 => 那

Dependencies:
1	看	_	VV	VV	_	0	root	_	_
2	,	_	PU	PU	_	1	punct	_	_
3	我	_	PN	PN	_	6	nn	_	_
4	那	_	DT	DT	_	6	det	_	_
5	颗	_	M	M	_	4	clf	_	_
6	行星	_	NN	NN	_	1	dep	_	_
7	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 看-02, arg1, x2 / 行星)
(x2 / 行星, mod, x3 / 那)
(x2 / 行星, poss, x4 / 我)

Input(Some(Graph((看-02 :mode imperative :arg1 (行星 :poss 我 :mod 那)),ArrayBuffer(Span(0,1,List(0),看,看-02,false), Span(5,6,List(1),行星,行星,false), Span(2,3,List(2),我,我,false), Span(3,4,List(3),那,那,false)),Map(2 -> 我, 1 -> 行星, 0 -> 看-02, 3 -> 那),Map(x2 -> 行星, x4 -> 我, x3 -> 那, x0 -> 看-02))),[Ljava.lang.String;@53e800f9,Annotation([Ljava.lang.String;@337bbfdf,[Ljava.lang.String;@52d97ab6,[Ljava.lang.String;@4da6d664),Annotation([Ljava.lang.String;@5e5af8e1,[Ljava.lang.String;@30b131b2,[Ledu.cmu.lti.nlp.amr.Dependency;@2924f1d8),Annotation([Ljava.lang.String;@524a076e,[Ljava.lang.String;@5b5e7036,[Ljava.lang.String;@62dbe64e),Annotation([Ljava.lang.String;@6cff61fc,[Ljava.lang.String;@6e0c6a7a,[Ledu.cmu.lti.nlp.amr.Entity;@467b684d))
AMR:
(x0 / 看-02, time, x2 / 行星)
(x2 / 行星, mod, x3 / 那)
(x2 / 行星, poss, x4 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,631 microseconds
Sentence: 它 恰好 在 我们 头顶 上 …

Oracle Span 1:  头顶 => 头顶
Oracle Span 2:  它 => 它
Oracle Span 3:  恰好 => 恰好
Oracle Span 4:  我们 => 我们
Spans:
Span 4-5:  头顶 => 头顶
Span 0-1:  它 => 它
Span 1-2:  恰好 => 恰好
Span 3-4:  我们 => 我们

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  头顶 => 头顶
Oracle Span 0-1:  它 => 它
Oracle Span 1-2:  恰好 => 恰好
Oracle Span 3-4:  我们 => 我们

Dependencies:
1	它	_	PN	PN	_	7	nsubj	_	_
2	恰好	_	AD	AD	_	7	advmod	_	_
3	在	_	P	P	_	7	prep	_	_
4	我们	_	PN	PN	_	5	nn	_	_
5	头顶	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	3	plmod	_	_
7	…	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 它, location, x3 / 头顶)
(x3 / 头顶, manner, x5 / 恰好)
(x3 / 头顶, poss, x4 / 我们)

Input(Some(Graph((它 :location (头顶 :manner 恰好 :poss 我们)),ArrayBuffer(Span(0,1,List(0),它,它,false), Span(4,5,List(1),头顶,头顶,false), Span(1,2,List(2),恰好,恰好,false), Span(3,4,List(3),我们,我们,false)),Map(2 -> 恰好, 1 -> 头顶, 0 -> 它, 3 -> 我们),Map(x5 -> 恰好, x4 -> 我们, x3 -> 头顶, x0 -> 它))),[Ljava.lang.String;@7baf1f5a,Annotation([Ljava.lang.String;@6cc86152,[Ljava.lang.String;@611a990b,[Ljava.lang.String;@7cbeac65),Annotation([Ljava.lang.String;@7fe82967,[Ljava.lang.String;@50850539,[Ledu.cmu.lti.nlp.amr.Dependency;@65e21ce3),Annotation([Ljava.lang.String;@6c3659be,[Ljava.lang.String;@522bf64e,[Ljava.lang.String;@2aff9dff),Annotation([Ljava.lang.String;@5f0f9947,[Ljava.lang.String;@1aad0b1,[Ledu.cmu.lti.nlp.amr.Entity;@c3edf4c))
AMR:
(x0 / 它, location, x3 / 头顶)
(x3 / 头顶, manner, x5 / 恰好)
(x3 / 头顶, poss, x4 / 我们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,921 microseconds
Sentence: 可是 ， 它 离 我们 好 远 哟 ！ ”

Oracle Span 1:  好 => 好-04
Oracle Span 2:  它 => 它
Oracle Span 3:  我们 => 我们
Oracle Span 4:  离 => 离-02
Oracle Span 5:  远 => 远-01
Spans:
Span 5-6:  好 => 好-04
Span 2-3:  它 => 它
Span 4-5:  我们 => 我们
Span 3-4:  离 => 离-02
Span 6-7:  远 => 远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  好 => 好-04
Oracle Span 2-3:  它 => 它
Oracle Span 4-5:  我们 => 我们
Oracle Span 3-4:  离 => 离-02
Oracle Span 6-7:  远 => 远-01

Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	它	_	PN	PN	_	8	nsubj	_	_
4	离	_	P	P	_	8	prep	_	_
5	我们	_	PN	PN	_	4	pobj	_	_
6	好	_	VA	VA	_	8	dep	_	_
7	远	_	AD	AD	_	8	dep	_	_
8	哟	_	VV	VV	_	0	root	_	_
9	！	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x11 / 离-02, arg0, x12 / 它)
(x11 / 离-02, arg1, x13 / 我们)
(x11 / 离-02, arg2, x14 / 远-01)
(x14 / 远-01, degree, x15 / 好-04)

Input(Some(Graph((say :arg1 (contrast :arg2 (离-02 :mode expressive :arg2 (远-01 :degree 好-04) :arg1 我们 :arg0 它))),ArrayBuffer(Span(3,4,List(0),离,离-02,false), Span(6,7,List(1),远,远-01,false), Span(5,6,List(2),好,好-04,false), Span(4,5,List(3),我们,我们,false), Span(2,3,List(4),它,它,false)),Map(2 -> 好-04, 1 -> 远-01, 4 -> 它, 0 -> 离-02, 3 -> 我们),Map(x13 -> 我们, x12 -> 它, x15 -> 好-04, x11 -> 离-02, x14 -> 远-01))),[Ljava.lang.String;@5af8bb51,Annotation([Ljava.lang.String;@799ed4e8,[Ljava.lang.String;@2e66bc32,[Ljava.lang.String;@54d8c20d),Annotation([Ljava.lang.String;@4b65d9f4,[Ljava.lang.String;@44536de4,[Ledu.cmu.lti.nlp.amr.Dependency;@5fcfde70),Annotation([Ljava.lang.String;@4d95a72e,[Ljava.lang.String;@28da7d11,[Ljava.lang.String;@77b919a3),Annotation([Ljava.lang.String;@5624657a,[Ljava.lang.String;@36681447,[Ledu.cmu.lti.nlp.amr.Entity;@4d21c56e))
AMR:
(x11 / 离-02, ARG6, x13 / 我们)
(x11 / 离-02, quant, x12 / 它)
(x14 / 远-01, degree, x15 / 好-04)
(x15 / 好-04, manner, x11 / 离-02)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 11,674 microseconds
Sentence: “ 它 很 美 。 ” 蛇 说 ，

Oracle Span 1:  它 => 它
Oracle Span 2:  很 => 很
Oracle Span 3:  美 => 美-01
Oracle Span 4:  蛇 => 蛇
Oracle Span 5:  说 => 说-01
Spans:
Span 1-2:  它 => 它
Span 2-3:  很 => 很
Span 3-4:  美 => 美-01
Span 6-7:  蛇 => 蛇
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  它 => 它
Oracle Span 2-3:  很 => 很
Oracle Span 3-4:  美 => 美-01
Oracle Span 6-7:  蛇 => 蛇
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	它	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	美	_	VV	VV	_	0	root	_	_
5	。	_	NN	NN	_	4	dobj	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	蛇	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	4	conj	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 美-01)
(x3 / 美-01, arg0, x5 / 它)
(x3 / 美-01, degree, x4 / 很)

Input(Some(Graph((说-01 :arg1 (美-01 :arg0 它 :degree 很) :arg0 蛇),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(3,4,List(1),美,美-01,false), Span(1,2,List(2),它,它,false), Span(2,3,List(3),很,很,false), Span(6,7,List(4),蛇,蛇,false)),Map(2 -> 它, 1 -> 美-01, 4 -> 蛇, 0 -> 说-01, 3 -> 很),Map(x2 -> 蛇, x5 -> 它, x4 -> 很, x3 -> 美-01, x0 -> 说-01))),[Ljava.lang.String;@726aa968,Annotation([Ljava.lang.String;@7100dea,[Ljava.lang.String;@712cfb63,[Ljava.lang.String;@32e54a9d),Annotation([Ljava.lang.String;@15639440,[Ljava.lang.String;@121bb45b,[Ledu.cmu.lti.nlp.amr.Dependency;@4faa298),Annotation([Ljava.lang.String;@1cd3b138,[Ljava.lang.String;@151bf776,[Ljava.lang.String;@5a6d30e2),Annotation([Ljava.lang.String;@b52b755,[Ljava.lang.String;@a098d76,[Ledu.cmu.lti.nlp.amr.Entity;@40e37b06))
AMR:
(x0 / 说-01, purpose, x3 / 美-01)
(x0 / 说-01, topic, x2 / 蛇)
(x3 / 美-01, degree, x4 / 很)
(x3 / 美-01, poss, x5 / 它)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,418 microseconds
Sentence: “ 你 到 这里 来 干 什么 呢 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  到 => 到-01
Oracle Span 3:  这里 => 这里
Spans:
Span 1-2:  你 => 你
Span 2-3:  到 => 到-01
Span 3-4:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  到 => 到-01
Oracle Span 3-4:  这里 => 这里

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你	_	PN	PN	_	6	nsubj	_	_
3	到	_	P	P	_	6	prep	_	_
4	这里	_	PN	PN	_	3	pobj	_	_
5	来	_	MSP	MSP	_	6	prtmod	_	_
6	干	_	VV	VV	_	0	root	_	_
7	什么	_	PN	PN	_	6	dobj	_	_
8	呢	_	SP	SP	_	6	dep	_	_
9	？	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 到-01, arg0, x12 / 你)
(x11 / 到-01, arg1, x13 / 这里)

Input(Some(Graph((say :arg1 (到-01 :purpose amr-unknown :mode interrogative :arg1 这里 :arg0 你)),ArrayBuffer(Span(2,3,List(0),到,到-01,false), Span(3,4,List(1),这里,这里,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 这里, 0 -> 到-01),Map(x13 -> 这里, x12 -> 你, x11 -> 到-01))),[Ljava.lang.String;@733aa9d8,Annotation([Ljava.lang.String;@6dcc40f5,[Ljava.lang.String;@2b680207,[Ljava.lang.String;@70887727),Annotation([Ljava.lang.String;@56da7487,[Ljava.lang.String;@599e4d41,[Ledu.cmu.lti.nlp.amr.Dependency;@328d044f),Annotation([Ljava.lang.String;@10f7c76,[Ljava.lang.String;@4745e9c,[Ljava.lang.String;@2f2bff16),Annotation([Ljava.lang.String;@75de29c0,[Ljava.lang.String;@fc807c1,[Ledu.cmu.lti.nlp.amr.Entity;@296e281a))
AMR:
(x11 / 到-01, example, x12 / 你)
(x11 / 到-01, location, x13 / 这里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,712 microseconds
Sentence: “ 我 和 一 朵 花 闹 了 别扭 。 ” 小 王子 说 。

Oracle Span 1:  别扭 => 别扭-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  我 => 我
Oracle Span 4:  王子 => 王子
Oracle Span 5:  花 => 花
Oracle Span 6:  说 => 说-01
Oracle Span 7:  闹 => 闹-01
Spans:
Span 8-9:  别扭 => 别扭-01
Span 11-12:  小 => 小-01
Span 1-2:  我 => 我
Span 12-13:  王子 => 王子
Span 5-6:  花 => 花
Span 13-14:  说 => 说-01
Span 6-7:  闹 => 闹-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  别扭 => 别扭-01
Oracle Span 11-12:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  王子 => 王子
Oracle Span 5-6:  花 => 花
Oracle Span 13-14:  说 => 说-01
Oracle Span 6-7:  闹 => 闹-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	7	dep	_	_
3	和	_	P	P	_	7	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	朵	_	M	M	_	6	clf	_	_
6	花	_	NN	NN	_	3	pobj	_	_
7	闹	_	VV	VV	_	14	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	别扭	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	7	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	说	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 闹-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 闹-01, arg0, x6 / 我)
(x5 / 闹-01, arg1, x7 / 别扭-01)
(x6 / 我, accompanier, x12 / 花)

Input(Some(Graph((说-01 :arg1 (闹-01 :arg1 别扭-01 :arg0 (我 :accompanier (花 :quant 1))) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(13,14,List(0),说,说-01,false), Span(6,7,List(1),闹,闹-01,false), Span(8,9,List(2),别扭,别扭-01,false), Span(1,2,List(3),我,我,false), Span(5,6,List(4),花,花,false), Span(12,13,List(5),王子,王子,false), Span(11,12,List(6),小,小-01,false)),Map(2 -> 别扭-01, 5 -> 王子, 1 -> 闹-01, 4 -> 花, 6 -> 小-01, 0 -> 说-01, 3 -> 我),Map(x2 -> 王子, x5 -> 闹-01, x12 -> 花, x7 -> 别扭-01, x3 -> 小-01, x6 -> 我, x0 -> 说-01))),[Ljava.lang.String;@59cda16e,Annotation([Ljava.lang.String;@5dd903be,[Ljava.lang.String;@12e0f1cb,[Ljava.lang.String;@4a163575),Annotation([Ljava.lang.String;@7e642b88,[Ljava.lang.String;@6b350309,[Ledu.cmu.lti.nlp.amr.Dependency;@7ecec90d),Annotation([Ljava.lang.String;@588f63c,[Ljava.lang.String;@5a6fa56e,[Ljava.lang.String;@1981d861),Annotation([Ljava.lang.String;@118ffcfd,[Ljava.lang.String;@53f4c1e6,[Ledu.cmu.lti.nlp.amr.Entity;@74174a23))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x7 / 别扭-01)
(x12 / 花, location, x5 / 闹-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 闹-01, domain, x6 / 我)
(x5 / 闹-01, purpose, x7 / 别扭-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,291 microseconds
Sentence: “ 啊 ！ ” 蛇 说道 。

Oracle Span 1:  啊 => 啊
Oracle Span 2:  蛇 => 蛇
Oracle Span 3:  说道 => 说道-01
Spans:
Span 1-2:  啊 => 啊
Span 4-5:  蛇 => 蛇
Span 5-6:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  啊 => 啊
Oracle Span 4-5:  蛇 => 蛇
Oracle Span 5-6:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	JJ	JJ	_	3	amod	_	_
3	！	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	蛇	_	NN	NN	_	6	nsubj	_	_
6	说道	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 啊)

Input(Some(Graph((说道-01 :mode expressive :arg1 啊 :arg0 蛇),ArrayBuffer(Span(5,6,List(0),说道,说道-01,false), Span(1,2,List(1),啊,啊,false), Span(4,5,List(2),蛇,蛇,false)),Map(2 -> 蛇, 1 -> 啊, 0 -> 说道-01),Map(x2 -> 蛇, x3 -> 啊, x0 -> 说道-01))),[Ljava.lang.String;@6342d610,Annotation([Ljava.lang.String;@dc4a691,[Ljava.lang.String;@784abd3e,[Ljava.lang.String;@36c2b646),Annotation([Ljava.lang.String;@434514d8,[Ljava.lang.String;@6b1dc20f,[Ledu.cmu.lti.nlp.amr.Dependency;@4613311f),Annotation([Ljava.lang.String;@6540cf1d,[Ljava.lang.String;@ec8f4b9,[Ljava.lang.String;@bc042d5),Annotation([Ljava.lang.String;@5484117b,[Ljava.lang.String;@37df14d1,[Ledu.cmu.lti.nlp.amr.Entity;@7efb53af))
AMR:
(x0 / 说道-01, snt3, x2 / 蛇)
(x2 / 蛇, location, x3 / 啊)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,566 microseconds
Sentence: 于是 他们 都 沉默 下来 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  沉默 => 沉默-01
Oracle Span 3:  都 => 都
Spans:
Span 1-2:  他们 => 他们
Span 3-4:  沉默 => 沉默-01
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  沉默 => 沉默-01
Oracle Span 2-3:  都 => 都

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	沉默	_	VV	VV	_	0	root	_	_
5	下来	_	VV	VV	_	4	comod	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x4 / 他们)
(x2 / 沉默-01, manner, x3 / 都)

Input(Some(Graph((temporal :arg2 (沉默-01 :arg0 他们 :manner 都)),ArrayBuffer(Span(3,4,List(0),沉默,沉默-01,false), Span(1,2,List(1),他们,他们,false), Span(2,3,List(2),都,都,false)),Map(2 -> 都, 1 -> 他们, 0 -> 沉默-01),Map(x2 -> 沉默-01, x4 -> 他们, x3 -> 都))),[Ljava.lang.String;@7724704f,Annotation([Ljava.lang.String;@3dfa819,[Ljava.lang.String;@4ce94d2f,[Ljava.lang.String;@68ab0936),Annotation([Ljava.lang.String;@3cd9aa64,[Ljava.lang.String;@42b84286,[Ledu.cmu.lti.nlp.amr.Dependency;@443effcb),Annotation([Ljava.lang.String;@74ecacc3,[Ljava.lang.String;@517a2b0,[Ljava.lang.String;@53b7ce6),Annotation([Ljava.lang.String;@36480b2d,[Ljava.lang.String;@27d33393,[Ledu.cmu.lti.nlp.amr.Entity;@1f6917fb))
AMR:
(x2 / 沉默-01, ARG6, x4 / 他们)
(x2 / 沉默-01, manner, x3 / 都)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,992 microseconds
Sentence: “ 人 在 什么 地方 ？ ” 小 王子 终于 又 开 了 腔 。

Oracle Span 1:  人 => 人
Oracle Span 2:  又 => 又
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  终于 => 终于
Spans:
Span 1-2:  人 => 人
Span 10-11:  又 => 又
Span 7-8:  小 => 小-01
Span 8-9:  王子 => 王子
Span 9-10:  终于 => 终于

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  人 => 人
Oracle Span 10-11:  又 => 又
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  终于 => 终于

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	在	_	VV	VV	_	9	rcmod	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	地方	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	12	nsubj	_	_
10	终于	_	AD	AD	_	12	advmod	_	_
11	又	_	AD	AD	_	12	advmod	_	_
12	开	_	VV	VV	_	0	root	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	腔	_	M	M	_	12	dobj	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((开腔-01 :arg0 (王子 :mod 小-01) :arg1 (人 :location amr-unknown) :mode interrogative :manner 又 :manner 终于),ArrayBuffer(Span(8,9,List(0),王子,王子,false), Span(7,8,List(1),小,小-01,false), Span(1,2,List(2),人,人,false), Span(10,11,List(3),又,又,false), Span(9,10,List(4),终于,终于,false)),Map(2 -> 人, 1 -> 小-01, 4 -> 终于, 0 -> 王子, 3 -> 又),Map(x2 -> 王子, x8 -> 终于, x7 -> 又, x4 -> 人, x3 -> 小-01))),[Ljava.lang.String;@41eb94bc,Annotation([Ljava.lang.String;@378cfecf,[Ljava.lang.String;@97d0c06,[Ljava.lang.String;@5e7c141d),Annotation([Ljava.lang.String;@43af351a,[Ljava.lang.String;@1305c126,[Ledu.cmu.lti.nlp.amr.Dependency;@72f9f27c),Annotation([Ljava.lang.String;@4c1bdcc2,[Ljava.lang.String;@762637be,[Ljava.lang.String;@4b97c4ad),Annotation([Ljava.lang.String;@7640a5b1,[Ljava.lang.String;@642f9a77,[Ledu.cmu.lti.nlp.amr.Entity;@23f3da8b))
AMR:
(x2 / 王子, mod, x3 / 小-01)
(x4 / 人, location, x2 / 王子)
(x7 / 又, manner, x8 / 终于)
(x8 / 终于, beneficiary, x2 / 王子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.4
Decoded in 9,932 microseconds
Sentence: “ 在 沙漠 上 ， 真 有点 孤独 … ”

Oracle Span 1:  孤独 => 孤独-01
Oracle Span 2:  有点 => 有点
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  真 => 真
Spans:
Span 7-8:  孤独 => 孤独-01
Span 6-7:  有点 => 有点
Span 2-3:  沙漠 => 沙漠
Span 5-6:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  孤独 => 孤独-01
Oracle Span 6-7:  有点 => 有点
Oracle Span 2-3:  沙漠 => 沙漠
Oracle Span 5-6:  真 => 真

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	在	_	P	P	_	7	prep	_	_
3	沙漠	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	2	plmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	真	_	AD	AD	_	7	advmod	_	_
7	有点	_	VV	VV	_	0	root	_	_
8	孤独	_	NN	NN	_	9	nn	_	_
9	…	_	NN	NN	_	7	dobj	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 孤独-01, degree, x10 / 真)
(x8 / 孤独-01, degree, x9 / 有点)
(x8 / 孤独-01, location, x11 / 沙漠)

Input(Some(Graph((say :arg1 (孤独-01 :location 沙漠 :degree 真 :degree 有点)),ArrayBuffer(Span(7,8,List(0),孤独,孤独-01,false), Span(2,3,List(1),沙漠,沙漠,false), Span(5,6,List(2),真,真,false), Span(6,7,List(3),有点,有点,false)),Map(2 -> 真, 1 -> 沙漠, 0 -> 孤独-01, 3 -> 有点),Map(x10 -> 真, x8 -> 孤独-01, x11 -> 沙漠, x9 -> 有点))),[Ljava.lang.String;@5634d0f4,Annotation([Ljava.lang.String;@252a8aae,[Ljava.lang.String;@3d4e405e,[Ljava.lang.String;@54e2fe),Annotation([Ljava.lang.String;@70972170,[Ljava.lang.String;@119aa36,[Ledu.cmu.lti.nlp.amr.Dependency;@4e1a46fb),Annotation([Ljava.lang.String;@69fe0ed4,[Ljava.lang.String;@20ab3e3a,[Ljava.lang.String;@6caf7803),Annotation([Ljava.lang.String;@709ed6f3,[Ljava.lang.String;@698fee9a,[Ledu.cmu.lti.nlp.amr.Entity;@102c577f))
AMR:
(x8 / 孤独-01, degree, x10 / 真)
(x8 / 孤独-01, degree, x9 / 有点)
(x8 / 孤独-01, location, x11 / 沙漠)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,792 microseconds
Sentence: “ 到 了 有 人 的 地方 ， 也 一样 孤独 。 ” 蛇 说 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  人 => 人
Oracle Span 3:  到 => 到-01
Oracle Span 4:  地方 => 地方
Oracle Span 5:  孤独 => 孤独-01
Oracle Span 6:  有 => 有-01
Oracle Span 7:  蛇 => 蛇
Oracle Span 8:  说 => 说-01
Spans:
Span 9-10:  一样 => 一样-01
Span 4-5:  人 => 人
Span 1-2:  到 => 到-01
Span 6-7:  地方 => 地方
Span 10-11:  孤独 => 孤独-01
Span 3-4:  有 => 有-01
Span 13-14:  蛇 => 蛇
Span 14-15:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-01
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  到 => 到-01
Oracle Span 6-7:  地方 => 地方
Oracle Span 10-11:  孤独 => 孤独-01
Oracle Span 3-4:  有 => 有-01
Oracle Span 13-14:  蛇 => 蛇
Oracle Span 14-15:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	到	_	VV	VV	_	4	conj	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	有	_	VE	VE	_	0	root	_	_
5	人	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地方	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	一样	_	VA	VA	_	4	conj	_	_
11	孤独	_	VA	VA	_	10	comod	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_
14	蛇	_	NR	NR	_	15	nsubj	_	_
15	说	_	VV	VV	_	4	dep	_	_
16	。	_	PU	PU	_	4	punct	_	_
17	到	_	VV	VV	_	4	top	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x4 / 到-01, arg1, x5 / 地方)
(x7 / 有-01, arg0, x5 / 地方)
(x7 / 有-01, arg1, x8 / 人)
(x9 / 孤独-01, degree, x10 / 一样-01)

Input(Some(Graph((说-01 :arg1 (concession :arg1 (到-01 :arg1 (地方 :arg0-of (有-01 :arg1 人))) :arg2 (孤独-01 :degree 一样-01)) :arg0 蛇),ArrayBuffer(Span(14,15,List(0),说,说-01,false), Span(1,2,List(1),到,到-01,false), Span(6,7,List(2),地方,地方,false), Span(3,4,List(3),有,有-01,false), Span(4,5,List(4),人,人,false), Span(10,11,List(5),孤独,孤独-01,false), Span(9,10,List(6),一样,一样-01,false), Span(13,14,List(7),蛇,蛇,false)),Map(2 -> 地方, 5 -> 孤独-01, 7 -> 蛇, 1 -> 到-01, 4 -> 人, 6 -> 一样-01, 0 -> 说-01, 3 -> 有-01),Map(x2 -> 蛇, x10 -> 一样-01, x5 -> 地方, x8 -> 人, x7 -> 有-01, x4 -> 到-01, x9 -> 孤独-01, x0 -> 说-01))),[Ljava.lang.String;@7d44a19,Annotation([Ljava.lang.String;@1fb2d5e,[Ljava.lang.String;@1716e8c5,[Ljava.lang.String;@6573d2f7),Annotation([Ljava.lang.String;@4052c8c2,[Ljava.lang.String;@181b8c4b,[Ledu.cmu.lti.nlp.amr.Dependency;@38eb0f4d),Annotation([Ljava.lang.String;@437486cd,[Ljava.lang.String;@15b642b9,[Ljava.lang.String;@518bfd90),Annotation([Ljava.lang.String;@317a118b,[Ljava.lang.String;@56dfab87,[Ledu.cmu.lti.nlp.amr.Entity;@715b886f))
AMR:
(x0 / 说-01, topic, x2 / 蛇)
(x0 / 说-01, topic, x9 / 孤独-01)
(x10 / 一样-01, location, x5 / 地方)
(x7 / 有-01, prep-following, x8 / 人)
(x7 / 有-01, time, x4 / 到-01)
(x8 / 人, location, x5 / 地方)
(x9 / 孤独-01, degree, x10 / 一样-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,008 microseconds
Sentence: 小 王子 长 时间 地 看 着 蛇 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  时间 => 时间
Oracle Span 3:  王子 => 王子
Oracle Span 4:  看 => 看-02
Oracle Span 5:  蛇 => 蛇
Oracle Span 6:  长 => 长
Spans:
Span 0-1:  小 => 小-01
Span 3-4:  时间 => 时间
Span 1-2:  王子 => 王子
Span 5-6:  看 => 看-02
Span 7-8:  蛇 => 蛇
Span 2-3:  长 => 长

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  时间 => 时间
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  看 => 看-02
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 2-3:  长 => 长

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	长	_	JJ	JJ	_	4	amod	_	_
4	时间	_	NN	NN	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	看	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	蛇	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 看-02, arg0, x3 / 王子)
(x0 / 看-02, arg1, x5 / 蛇)
(x0 / 看-02, duration, x6 / 时间)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 时间, mod, x7 / 长)

Input(Some(Graph((看-02 :duration (时间 :mod 长) :arg1 蛇 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(5,6,List(0),看,看-02,false), Span(3,4,List(1),时间,时间,false), Span(2,3,List(2),长,长,false), Span(7,8,List(3),蛇,蛇,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false)),Map(2 -> 长, 5 -> 小-01, 1 -> 时间, 4 -> 王子, 0 -> 看-02, 3 -> 蛇),Map(x5 -> 蛇, x7 -> 长, x4 -> 小-01, x3 -> 王子, x6 -> 时间, x0 -> 看-02))),[Ljava.lang.String;@7fb29ca9,Annotation([Ljava.lang.String;@1e253c9d,[Ljava.lang.String;@350d3f4d,[Ljava.lang.String;@18b8d173),Annotation([Ljava.lang.String;@73844119,[Ljava.lang.String;@44f24a20,[Ledu.cmu.lti.nlp.amr.Dependency;@1859e2a4),Annotation([Ljava.lang.String;@46349b95,[Ljava.lang.String;@176996c3,[Ljava.lang.String;@411c6d44),Annotation([Ljava.lang.String;@1687eb01,[Ljava.lang.String;@748d2277,[Ledu.cmu.lti.nlp.amr.Entity;@2f897dab))
AMR:
(x0 / 看-02, duration, x6 / 时间)
(x0 / 看-02, mod, x5 / 蛇)
(x0 / 看-02, source, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 时间, mod, x7 / 长)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,142 microseconds
Sentence: “ 你 是 个 奇怪 的 动物 ， 小 王子 终于 说道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  动物 => 动物
Oracle Span 3:  奇怪 => 奇怪-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  终于 => 终于
Oracle Span 7:  说道 => 说道-01
Spans:
Span 1-2:  你 => 你
Span 6-7:  动物 => 动物
Span 4-5:  奇怪 => 奇怪-01
Span 8-9:  小 => 小-01
Span 9-10:  王子 => 王子
Span 10-11:  终于 => 终于
Span 11-12:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  动物 => 动物
Oracle Span 4-5:  奇怪 => 奇怪-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  终于 => 终于
Oracle Span 11-12:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	个	_	M	M	_	7	dep	_	_
5	奇怪	_	VA	VA	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	动物	_	NN	NN	_	3	attr	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	终于	_	AD	AD	_	12	advmod	_	_
12	说道	_	VV	VV	_	3	conj	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x3 / 王子)
(x0 / 说道-01, arg1, x5 / 动物)
(x0 / 说道-01, manner, x2 / 终于)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 动物, domain, x8 / 你)
(x5 / 动物, mod, x6 / 奇怪-01)

Input(Some(Graph((说道-01 :arg1 (动物 :domain 你 :mod 奇怪-01) :arg0 (王子 :mod 小-01) :manner 终于),ArrayBuffer(Span(11,12,List(0),说道,说道-01,false), Span(6,7,List(1),动物,动物,false), Span(1,2,List(2),你,你,false), Span(4,5,List(3),奇怪,奇怪-01,false), Span(9,10,List(4),王子,王子,false), Span(8,9,List(5),小,小-01,false), Span(10,11,List(6),终于,终于,false)),Map(2 -> 你, 5 -> 小-01, 1 -> 动物, 4 -> 王子, 6 -> 终于, 0 -> 说道-01, 3 -> 奇怪-01),Map(x2 -> 终于, x5 -> 动物, x8 -> 你, x4 -> 小-01, x3 -> 王子, x6 -> 奇怪-01, x0 -> 说道-01))),[Ljava.lang.String;@d5d5353,Annotation([Ljava.lang.String;@242b6e1a,[Ljava.lang.String;@39a87e72,[Ljava.lang.String;@5d2828c9),Annotation([Ljava.lang.String;@3a082ff4,[Ljava.lang.String;@45acdd11,[Ledu.cmu.lti.nlp.amr.Dependency;@3f0d6038),Annotation([Ljava.lang.String;@237f7970,[Ljava.lang.String;@58f39564,[Ljava.lang.String;@7b948f3e),Annotation([Ljava.lang.String;@2f4c2cd4,[Ljava.lang.String;@77a074b4,[Ledu.cmu.lti.nlp.amr.Entity;@333c8791))
AMR:
(x0 / 说道-01, conj-as-if, x3 / 王子)
(x0 / 说道-01, manner, x2 / 终于)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 动物, domain, x8 / 你)
(x5 / 动物, mod, x4 / 小-01)
(x5 / 动物, mod, x6 / 奇怪-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,431 microseconds
Sentence: 细 得 象 个 手指头 … 。 ”

Oracle Span 1:  手指头 => 手指头
Oracle Span 2:  细 => 细-01
Spans:
Span 4-5:  手指头 => 手指头
Span 0-1:  细 => 细-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  手指头 => 手指头
Oracle Span 0-1:  细 => 细-01

Dependencies:
1	细	_	NR	NR	_	2	nsubj	_	_
2	得	_	VV	VV	_	0	root	_	_
3	象	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	手指头	_	NN	NN	_	6	nn	_	_
6	…	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (像-01 :arg1 (手指头 :quant 1) :arg2 细-01)),ArrayBuffer(Span(4,5,List(0),手指头,手指头,false), Span(0,1,List(1),细,细-01,false)),Map(1 -> 细-01, 0 -> 手指头),Map(x10 -> 细-01, x9 -> 手指头))),[Ljava.lang.String;@6c0e13b7,Annotation([Ljava.lang.String;@22eaa86e,[Ljava.lang.String;@561b7d53,[Ljava.lang.String;@1cc680e),Annotation([Ljava.lang.String;@1dc3502b,[Ljava.lang.String;@6a1d3225,[Ledu.cmu.lti.nlp.amr.Dependency;@67e13bd0),Annotation([Ljava.lang.String;@50fb33a,[Ljava.lang.String;@2cae9b8,[Ljava.lang.String;@1457fde),Annotation([Ljava.lang.String;@6f94fb9d,[Ljava.lang.String;@17fa1336,[Ledu.cmu.lti.nlp.amr.Entity;@4228bf58))
AMR:
(x9 / 手指头, source, x10 / 细-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 2,683 microseconds
Sentence: “ 但 我 比 一 个 国王 的 手指 更 有 威力 。 ” 蛇 说道 。

Oracle Span 1:  国王 => 国王
Oracle Span 2:  威力 => 威力
Oracle Span 3:  手指 => 手指
Oracle Span 4:  更 => 更
Oracle Span 5:  有 => 有-03
Oracle Span 6:  蛇 => 蛇
Oracle Span 7:  说道 => 说道-01
Spans:
Span 6-7:  国王 => 国王
Span 11-12:  威力 => 威力
Span 8-9:  手指 => 手指
Span 9-10:  更 => 更
Span 10-11:  有 => 有-03
Span 14-15:  蛇 => 蛇
Span 15-16:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  国王 => 国王
Oracle Span 11-12:  威力 => 威力
Oracle Span 8-9:  手指 => 手指
Oracle Span 9-10:  更 => 更
Oracle Span 10-11:  有 => 有-03
Oracle Span 14-15:  蛇 => 蛇
Oracle Span 15-16:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	15	punct	_	_
2	但	_	AD	AD	_	11	advmod	_	_
3	我	_	PN	PN	_	11	nsubj	_	_
4	比	_	P	P	_	9	assmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	国王	_	NN	NN	_	4	pobj	_	_
8	的	_	DEG	DEG	_	4	assm	_	_
9	手指	_	NN	NN	_	11	nsubj	_	_
10	更	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	15	conj	_	_
12	威力	_	NN	NN	_	11	dobj	_	_
13	。	_	PU	PU	_	11	punct	_	_
14	”	_	PU	PU	_	11	punct	_	_
15	蛇	_	VV	VV	_	0	root	_	_
16	说道	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x15 / 有-03, arg1, x16 / 威力)
(x15 / 有-03, compared-to, x19 / 手指)
(x15 / 有-03, degree, x17 / 更)
(x20 / 国王, part, x19 / 手指)

Input(Some(Graph((说道-01 :arg1 (contrast :arg2 (有-03 :compared-to (手指 :part-of (国王 :quant 1)) :arg0 x2 :degree 更 :arg1 威力)) :arg0 蛇),ArrayBuffer(Span(15,16,List(0),说道,说道-01,false), Span(10,11,List(1),有,有-03,false), Span(8,9,List(2),手指,手指,false), Span(6,7,List(3),国王,国王,false), Span(9,10,List(4),更,更,false), Span(11,12,List(5),威力,威力,false), Span(14,15,List(6),蛇,蛇,false)),Map(2 -> 手指, 5 -> 威力, 1 -> 有-03, 4 -> 更, 6 -> 蛇, 0 -> 说道-01, 3 -> 国王),Map(x16 -> 威力, x2 -> 蛇, x19 -> 手指, x15 -> 有-03, x20 -> 国王, x17 -> 更, x0 -> 说道-01))),[Ljava.lang.String;@68b9834c,Annotation([Ljava.lang.String;@20b9d5d5,[Ljava.lang.String;@671d1157,[Ljava.lang.String;@60c8a093),Annotation([Ljava.lang.String;@44cffc25,[Ljava.lang.String;@2a369e14,[Ledu.cmu.lti.nlp.amr.Dependency;@25aeb5ac),Annotation([Ljava.lang.String;@c755b2,[Ljava.lang.String;@3bd2af5b,[Ljava.lang.String;@250a500b),Annotation([Ljava.lang.String;@75d982d3,[Ljava.lang.String;@4f89331f,[Ledu.cmu.lti.nlp.amr.Entity;@618ff5c2))
AMR:
(x0 / 说道-01, snt3, x2 / 蛇)
(x0 / 说道-01, time, x16 / 威力)
(x15 / 有-03, compared-to, x19 / 手指)
(x15 / 有-03, degree, x17 / 更)
(x15 / 有-03, prep-through, x16 / 威力)
(x20 / 国王, part, x19 / 手指)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.3
WARNING: makeIds can't find span Id: 0.1.0.3.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 16,202 microseconds
Sentence: 小 王子 微笑 着 说 ：

Oracle Span 1:  小 => 小-01
Oracle Span 2:  微笑 => 微笑-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Spans:
Span 0-1:  小 => 小-01
Span 2-3:  微笑 => 微笑-01
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  微笑 => 微笑-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	微笑	_	NN	NN	_	5	nsubj	_	_
4	着	_	VV	VV	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, manner, x4 / 微笑-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :manner (微笑-01 :arg0 x2) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(2,3,List(1),微笑,微笑-01,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 微笑-01, 0 -> 说-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 微笑-01, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@16727bf0,Annotation([Ljava.lang.String;@2f84acf7,[Ljava.lang.String;@291373d3,[Ljava.lang.String;@372ca2d6),Annotation([Ljava.lang.String;@3204e238,[Ljava.lang.String;@38ed139b,[Ledu.cmu.lti.nlp.amr.Dependency;@a5272be),Annotation([Ljava.lang.String;@58ba5b30,[Ljava.lang.String;@4dba773d,[Ljava.lang.String;@1d9bd4da),Annotation([Ljava.lang.String;@4c58255,[Ljava.lang.String;@eac3a26,[Ledu.cmu.lti.nlp.amr.Entity;@10b1a751))
AMR:
(x0 / 说-01, manner, x4 / 微笑-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 微笑-01, value, x2 / 王子)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,928 microseconds
Sentence: “ 你 并不 那么 有 威力 … …

Oracle Span 1:  你 => 你
Oracle Span 2:  威力 => 威力
Oracle Span 3:  有 => 有-03
Oracle Span 4:  那么 => 那么
Spans:
Span 1-2:  你 => 你
Span 5-6:  威力 => 威力
Span 4-5:  有 => 有-03
Span 3-4:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  威力 => 威力
Oracle Span 4-5:  有 => 有-03
Oracle Span 3-4:  那么 => 那么

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	并不	_	AD	AD	_	5	advmod	_	_
4	那么	_	AD	AD	_	5	advmod	_	_
5	有	_	VV	VV	_	0	root	_	_
6	威力	_	NN	NN	_	5	dobj	_	_
7	…	_	PU	PU	_	5	punct	_	_
8	…	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 有-03, arg0, x11 / 你)
(x9 / 有-03, arg1, x12 / 威力)
(x9 / 有-03, degree, x14 / 那么)

Input(Some(Graph((say :arg1 (有-03 :degree 那么 :arg1 威力 :arg0 你 :polarity -)),ArrayBuffer(Span(4,5,List(0),有,有-03,false), Span(3,4,List(1),那么,那么,false), Span(5,6,List(2),威力,威力,false), Span(1,2,List(3),你,你,false)),Map(2 -> 威力, 1 -> 那么, 0 -> 有-03, 3 -> 你),Map(x12 -> 威力, x11 -> 你, x14 -> 那么, x9 -> 有-03))),[Ljava.lang.String;@53cf9c99,Annotation([Ljava.lang.String;@7b306b9f,[Ljava.lang.String;@142213d5,[Ljava.lang.String;@934b52f),Annotation([Ljava.lang.String;@2630dbc4,[Ljava.lang.String;@5ea4300e,[Ledu.cmu.lti.nlp.amr.Dependency;@5a1c3cb4),Annotation([Ljava.lang.String;@76ad6715,[Ljava.lang.String;@56637cff,[Ljava.lang.String;@2938127d),Annotation([Ljava.lang.String;@127a7272,[Ljava.lang.String;@ff23ae7,[Ledu.cmu.lti.nlp.amr.Entity;@423b2b62))
AMR:
(x14 / 那么, domain, x11 / 你)
(x9 / 有-03, degree, x14 / 那么)
(x9 / 有-03, prep-through, x12 / 威力)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 8,249 microseconds
Sentence: 你 连 脚 都 没有 … …

Oracle Span 1:  你 => 你
Oracle Span 2:  脚 => 脚
Spans:
Span 0-1:  你 => 你
Span 2-3:  脚 => 脚

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  脚 => 脚

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	连	_	AD	AD	_	3	advmod	_	_
3	脚	_	NN	NN	_	5	dep	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	0	root	_	_
6	…	_	PU	PU	_	5	punct	_	_
7	…	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((有-01 :polarity - :arg0 你 :arg1 脚),ArrayBuffer(Span(0,1,List(0),你,你,false), Span(2,3,List(1),脚,脚,false)),Map(1 -> 脚, 0 -> 你),Map(x8 -> 你, x9 -> 脚))),[Ljava.lang.String;@2b7962a2,Annotation([Ljava.lang.String;@6ad16c5d,[Ljava.lang.String;@74ea46e2,[Ljava.lang.String;@6f911326),Annotation([Ljava.lang.String;@f1d0004,[Ljava.lang.String;@6e4f263e,[Ledu.cmu.lti.nlp.amr.Dependency;@48b4a043),Annotation([Ljava.lang.String;@2f5b8250,[Ljava.lang.String;@4821aa9f,[Ljava.lang.String;@5f481b73),Annotation([Ljava.lang.String;@32130e61,[Ljava.lang.String;@41294371,[Ledu.cmu.lti.nlp.amr.Entity;@4996c99))
AMR:
(x8 / 你, location, x9 / 脚)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
Decoded in 3,055 microseconds
Sentence: 你 甚至 都 不 能 旅行 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  旅行 => 旅行-01
Oracle Span 3:  甚至 => 甚至
Oracle Span 4:  能 => 能-01
Oracle Span 5:  都 => 都
Spans:
Span 0-1:  你 => 你
Span 5-6:  旅行 => 旅行-01
Span 1-2:  甚至 => 甚至
Span 4-5:  能 => 能-01
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 5-6:  旅行 => 旅行-01
Oracle Span 1-2:  甚至 => 甚至
Oracle Span 4-5:  能 => 能-01
Oracle Span 2-3:  都 => 都

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	甚至	_	AD	AD	_	5	advmod	_	_
3	都	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	能	_	VV	VV	_	0	root	_	_
6	旅行	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	5	dobj	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 旅行-01, arg0, x12 / 你)
(x9 / 能-01, arg0, x11 / 旅行-01)
(x9 / 能-01, manner, x13 / 甚至)
(x9 / 能-01, manner, x14 / 都)

Input(Some(Graph((say :arg1 (能-01 :manner 都 :manner 甚至 :arg0 (旅行-01 :arg0 你) :polarity -)),ArrayBuffer(Span(4,5,List(0),能,能-01,false), Span(2,3,List(1),都,都,false), Span(1,2,List(2),甚至,甚至,false), Span(5,6,List(3),旅行,旅行-01,false), Span(0,1,List(4),你,你,false)),Map(2 -> 甚至, 1 -> 都, 4 -> 你, 0 -> 能-01, 3 -> 旅行-01),Map(x13 -> 甚至, x12 -> 你, x11 -> 旅行-01, x14 -> 都, x9 -> 能-01))),[Ljava.lang.String;@1b956cfa,Annotation([Ljava.lang.String;@315f09ef,[Ljava.lang.String;@3a66e67e,[Ljava.lang.String;@75d4a80f),Annotation([Ljava.lang.String;@4596f8f3,[Ljava.lang.String;@ccf91df,[Ledu.cmu.lti.nlp.amr.Dependency;@117d32e),Annotation([Ljava.lang.String;@51d387d3,[Ljava.lang.String;@2370ac7a,[Ljava.lang.String;@534180a2),Annotation([Ljava.lang.String;@6cf0a747,[Ljava.lang.String;@21505815,[Ledu.cmu.lti.nlp.amr.Entity;@7e53339))
AMR:
(x13 / 甚至, poss, x12 / 你)
(x9 / 能-01, accompanier, x11 / 旅行-01)
(x9 / 能-01, manner, x13 / 甚至)
(x9 / 能-01, manner, x14 / 都)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 9,186 microseconds
Sentence: “ 我 可以 把 你 带到 很 远 的 地方 去 ， 比 一 只 船 能 去 的 地方 还 要 远 。 ” 蛇 说道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  去 => 去-01
Oracle Span 3:  可以 => 可以-03
Oracle Span 4:  地方 => 地方
Oracle Span 5:  地方 => 地方
Oracle Span 6:  带到 => 带到-01
Oracle Span 7:  很 => 很
Oracle Span 8:  能 => 能-01
Oracle Span 9:  船 => 船
Oracle Span 10:  蛇 => 蛇
Oracle Span 11:  说道 => 说道-01
Oracle Span 12:  远 => 远-01
Spans:
Span 4-5:  你 => 你
Span 10-11:  去 => 去-01
Span 2-3:  可以 => 可以-03
Span 9-10:  地方 => 地方
Span 19-20:  地方 => 地方
Span 5-6:  带到 => 带到-01
Span 6-7:  很 => 很
Span 16-17:  能 => 能-01
Span 15-16:  船 => 船
Span 25-26:  蛇 => 蛇
Span 26-27:  说道 => 说道-01
Span 7-8:  远 => 远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 10-11:  去 => 去-01
Oracle Span 2-3:  可以 => 可以-03
Oracle Span 9-10:  地方 => 地方
Oracle Span 19-20:  地方 => 地方
Oracle Span 5-6:  带到 => 带到-01
Oracle Span 6-7:  很 => 很
Oracle Span 16-17:  能 => 能-01
Oracle Span 15-16:  船 => 船
Oracle Span 25-26:  蛇 => 蛇
Oracle Span 26-27:  说道 => 说道-01
Oracle Span 7-8:  远 => 远-01

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	我	_	PN	PN	_	11	nsubj	_	_
3	可以	_	VV	VV	_	11	mmod	_	_
4	把	_	BA	BA	_	11	ba	_	_
5	你	_	PN	PN	_	11	nsubj	_	_
6	带到	_	NN	NN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	远	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	地方	_	NN	NN	_	11	nsubj	_	_
11	去	_	VV	VV	_	0	root	_	_
12	,	_	PU	PU	_	11	punct	_	_
13	比	_	P	P	_	18	prep	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	只	_	M	M	_	16	clf	_	_
16	船	_	NN	NN	_	13	pobj	_	_
17	能	_	VV	VV	_	18	dep	_	_
18	去	_	VV	VV	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	地方	_	NN	NN	_	23	nsubj	_	_
21	还	_	AD	AD	_	23	advmod	_	_
22	要	_	AD	AD	_	23	advmod	_	_
23	远	_	VA	VA	_	11	conj	_	_
24	。	_	PU	PU	_	11	punct	_	_
25	”	_	PU	PU	_	11	punct	_	_
26	蛇	_	NN	NN	_	27	nsubj	_	_
27	说道	_	VV	VV	_	11	conj	_	_
28	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 可以-03)
(x24 / 去-01, arg0, x26 / 船)
(x24 / 去-01, arg1, x23 / 地方)
(x25 / 能-01, arg0, x24 / 去-01)
(x3 / 可以-03, arg1, x5 / 带到-01)
(x5 / 带到-01, arg1, x7 / 你)
(x5 / 带到-01, arg2, x8 / 地方)
(x8 / 地方, compared-to, x23 / 地方)
(x8 / 地方, mod, x9 / 远-01)
(x9 / 远-01, degree, x10 / 很)

Input(Some(Graph((说道-01 :arg1 (可以-03 :arg0 x2 :arg1 (带到-01 :arg0 x21 :arg2 (地方 :compared-to (地方 :arg1-of (去-01 :arg0 (船 :quant 1) :arg0-of 能-01)) :mod (远-01 :degree 很)) :arg1 你)) :arg0 蛇),ArrayBuffer(Span(26,27,List(0),说道,说道-01,false), Span(2,3,List(1),可以,可以-03,false), Span(5,6,List(2),带到,带到-01,false), Span(9,10,List(3),地方,地方,false), Span(19,20,List(4),地方,地方,false), Span(10,11,List(5),去,去-01,false), Span(15,16,List(6),船,船,false), Span(16,17,List(7),能,能-01,false), Span(7,8,List(8),远,远-01,false), Span(6,7,List(9),很,很,false), Span(4,5,List(10),你,你,false), Span(25,26,List(11),蛇,蛇,false)),Map(2 -> 带到-01, 5 -> 去-01, 8 -> 远-01, 7 -> 能-01, 1 -> 可以-03, 4 -> 地方, 11 -> 蛇, 6 -> 船, 9 -> 很, 0 -> 说道-01, 10 -> 你, 3 -> 地方),Map(x10 -> 很, x25 -> 能-01, x2 -> 蛇, x5 -> 带到-01, x8 -> 地方, x7 -> 你, x24 -> 去-01, x23 -> 地方, x26 -> 船, x3 -> 可以-03, x9 -> 远-01, x0 -> 说道-01))),[Ljava.lang.String;@58fef7f7,Annotation([Ljava.lang.String;@31ddb930,[Ljava.lang.String;@12eedfee,[Ljava.lang.String;@3c3c4a71),Annotation([Ljava.lang.String;@1352434e,[Ljava.lang.String;@4f9a6c2d,[Ledu.cmu.lti.nlp.amr.Dependency;@2b6fcb9f),Annotation([Ljava.lang.String;@75de6341,[Ljava.lang.String;@74170687,[Ljava.lang.String;@68f0f72c),Annotation([Ljava.lang.String;@3d96fa9e,[Ljava.lang.String;@3b545206,[Ledu.cmu.lti.nlp.amr.Entity;@77bb48d5))
AMR:
(x0 / 说道-01, location, x23 / 地方)
(x0 / 说道-01, snt3, x2 / 蛇)
(x24 / 去-01, location, x26 / 船)
(x24 / 去-01, location, x8 / 地方)
(x25 / 能-01, compared-to, x23 / 地方)
(x25 / 能-01, manner, x26 / 船)
(x3 / 可以-03, example, x5 / 带到-01)
(x5 / 带到-01, location, x7 / 你)
(x5 / 带到-01, purpose, x9 / 远-01)
(x8 / 地方, mod, x9 / 远-01)
(x9 / 远-01, degree, x10 / 很)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.1
WARNING: makeIds can't find span Id: 0.1.0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 50,350 microseconds
Sentence: 蛇 就 盘结 在 小 王子 的 脚腕子 上 ， 象 一 只 金 镯子 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  盘结 => 盘结
Oracle Span 4:  脚腕子 => 脚腕子
Oracle Span 5:  蛇 => 蛇
Oracle Span 6:  金 => 金
Oracle Span 7:  镯子 => 镯子
Spans:
Span 4-5:  小 => 小-01
Span 5-6:  王子 => 王子
Span 2-3:  盘结 => 盘结
Span 7-8:  脚腕子 => 脚腕子
Span 0-1:  蛇 => 蛇
Span 13-14:  金 => 金
Span 14-15:  镯子 => 镯子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 2-3:  盘结 => 盘结
Oracle Span 7-8:  脚腕子 => 脚腕子
Oracle Span 0-1:  蛇 => 蛇
Oracle Span 13-14:  金 => 金
Oracle Span 14-15:  镯子 => 镯子

Dependencies:
1	蛇	_	NN	NN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	盘结	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	脚腕子	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	4	plmod	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	象	_	P	P	_	15	prep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	金	_	NN	NN	_	11	pobj	_	_
15	镯子	_	VV	VV	_	3	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 镯子, mod, x16 / 金)
(x18 / 盘结, arg1, x20 / 脚腕子)
(x21 / 王子, mod, x22 / 小-01)
(x21 / 王子, part, x20 / 脚腕子)

Input(Some(Graph((像-01 :arg0 蛇 :arg1 (镯子 :quant 1 :mod 金) :arg2 (盘结 :arg1 (脚腕子 :part-of (王子 :mod 小-01)) :arg0 x14)),ArrayBuffer(Span(0,1,List(0),蛇,蛇,false), Span(14,15,List(1),镯子,镯子,false), Span(13,14,List(2),金,金,false), Span(2,3,List(3),盘结,盘结,false), Span(7,8,List(4),脚腕子,脚腕子,false), Span(5,6,List(5),王子,王子,false), Span(4,5,List(6),小,小-01,false)),Map(2 -> 金, 5 -> 王子, 1 -> 镯子, 4 -> 脚腕子, 6 -> 小-01, 0 -> 蛇, 3 -> 盘结),Map(x22 -> 小-01, x16 -> 金, x21 -> 王子, x15 -> 镯子, x18 -> 盘结, x20 -> 脚腕子, x14 -> 蛇))),[Ljava.lang.String;@181d8899,Annotation([Ljava.lang.String;@12d5c30e,[Ljava.lang.String;@b887730,[Ljava.lang.String;@26586b74),Annotation([Ljava.lang.String;@52f57666,[Ljava.lang.String;@6e041285,[Ledu.cmu.lti.nlp.amr.Dependency;@267dc982),Annotation([Ljava.lang.String;@439b15f2,[Ljava.lang.String;@3aa41da1,[Ljava.lang.String;@74fab04a),Annotation([Ljava.lang.String;@3c83468e,[Ljava.lang.String;@272ce069,[Ledu.cmu.lti.nlp.amr.Entity;@3d7fb838))
AMR:
(x14 / 蛇, mod, x15 / 镯子)
(x14 / 蛇, mod, x18 / 盘结)
(x15 / 镯子, mod, x16 / 金)
(x18 / 盘结, poss, x20 / 脚腕子)
(x21 / 王子, mod, x22 / 小-01)
(x21 / 王子, part, x20 / 脚腕子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.0
Decoded in 20,350 microseconds
Sentence: “ 被 我 碰触 的 人 ， 我 就 把 他 送回 老家 去 。 ”

Oracle Span 1:  人 => 人
Oracle Span 2:  我 => 我
Oracle Span 3:  碰触 => 碰触-01
Oracle Span 4:  老家 => 老家
Oracle Span 5:  送回 => 送回-01
Spans:
Span 5-6:  人 => 人
Span 2-3:  我 => 我
Span 3-4:  碰触 => 碰触-01
Span 12-13:  老家 => 老家
Span 11-12:  送回 => 送回-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  碰触 => 碰触-01
Oracle Span 12-13:  老家 => 老家
Oracle Span 11-12:  送回 => 送回-01

Dependencies:
1	“	_	PU	PU	_	14	punct	_	_
2	被	_	LB	LB	_	14	pass	_	_
3	我	_	PN	PN	_	14	nsubj	_	_
4	碰触	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	人	_	NN	NN	_	14	nsubj	_	_
7	,	_	PU	PU	_	14	punct	_	_
8	我	_	PN	PN	_	14	nsubj	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	把	_	BA	BA	_	14	ba	_	_
11	他	_	PN	PN	_	14	nsubj	_	_
12	送回	_	AD	AD	_	14	advmod	_	_
13	老家	_	AD	AD	_	14	advmod	_	_
14	去	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_
16	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x14 / 碰触-01, arg0, x15 / 我)
(x14 / 碰触-01, arg1, x16 / 人)
(x17 / 送回-01, arg2, x20 / 老家)

Input(Some(Graph((say :arg1 (condition :arg1 (碰触-01 :arg1 人 :arg0 我) :arg2 (送回-01 :arg2 老家 :arg1 x16 :arg0 x15))),ArrayBuffer(Span(3,4,List(0),碰触,碰触-01,false), Span(5,6,List(1),人,人,false), Span(2,3,List(2),我,我,false), Span(11,12,List(3),送回,送回-01,false), Span(12,13,List(4),老家,老家,false)),Map(2 -> 我, 1 -> 人, 4 -> 老家, 0 -> 碰触-01, 3 -> 送回-01),Map(x16 -> 人, x15 -> 我, x20 -> 老家, x14 -> 碰触-01, x17 -> 送回-01))),[Ljava.lang.String;@1c26273d,Annotation([Ljava.lang.String;@3a37a501,[Ljava.lang.String;@7a583586,[Ljava.lang.String;@3a26ec8d),Annotation([Ljava.lang.String;@17143b3b,[Ljava.lang.String;@100c8b75,[Ledu.cmu.lti.nlp.amr.Dependency;@2bc378f7),Annotation([Ljava.lang.String;@268cbb86,[Ljava.lang.String;@10f7918f,[Ljava.lang.String;@64d4f7c7),Annotation([Ljava.lang.String;@54e02f6a,[Ljava.lang.String;@17f3eefb,[Ledu.cmu.lti.nlp.amr.Entity;@3ba46e63))
AMR:
(x14 / 碰触-01, example, x15 / 我)
(x14 / 碰触-01, prep-through, x16 / 人)
(x14 / 碰触-01, purpose, x17 / 送回-01)
(x17 / 送回-01, prep-through, x20 / 老家)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
Decoded in 10,000 microseconds
Sentence: 蛇 还 说 ， “ 可是 你 是 纯洁 的 ， 而且 是 从 另 一 个 星球 上 来 的 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  星球 => 星球
Oracle Span 3:  来 => 来-01
Oracle Span 4:  纯洁 => 纯洁-01
Oracle Span 5:  蛇 => 蛇
Oracle Span 6:  说 => 说-01
Oracle Span 7:  还 => 还
Spans:
Span 6-7:  你 => 你
Span 17-18:  星球 => 星球
Span 19-20:  来 => 来-01
Span 8-9:  纯洁 => 纯洁-01
Span 0-1:  蛇 => 蛇
Span 2-3:  说 => 说-01
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 17-18:  星球 => 星球
Oracle Span 19-20:  来 => 来-01
Oracle Span 8-9:  纯洁 => 纯洁-01
Oracle Span 0-1:  蛇 => 蛇
Oracle Span 2-3:  说 => 说-01
Oracle Span 1-2:  还 => 还

Dependencies:
1	蛇	_	NR	NR	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	8	punct	_	_
6	可是	_	AD	AD	_	8	advmod	_	_
7	你	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	3	ccomp	_	_
9	纯洁	_	JJ	JJ	_	8	dep	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	而且	_	CC	CC	_	8	cc	_	_
13	是	_	VC	VC	_	8	conj	_	_
14	从	_	P	P	_	20	prep	_	_
15	另	_	DT	DT	_	18	det	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	15	dep	_	_
18	星球	_	NN	NN	_	19	lobj	_	_
19	上	_	LC	LC	_	14	plmod	_	_
20	来	_	VV	VV	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	…	_	NN	NN	_	13	attr	_	_
23	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 蛇)
(x0 / 说-01, manner, x2 / 还)
(x5 / 纯洁-01, arg0, x6 / 你)
(x9 / 来-01, arg2, x11 / 星球)

Input(Some(Graph((说-01 :arg1 (contrast :arg2 (纯洁-01 :arg0 你) :arg3 (progression :arg1 (来-01 :arg2 (星球 :mod 另一个) :arg0 x6))) :arg0 蛇 :manner 还),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(8,9,List(1),纯洁,纯洁-01,false), Span(6,7,List(2),你,你,false), Span(19,20,List(3),来,来-01,false), Span(17,18,List(4),星球,星球,false), Span(0,1,List(5),蛇,蛇,false), Span(1,2,List(6),还,还,false)),Map(2 -> 你, 5 -> 蛇, 1 -> 纯洁-01, 4 -> 星球, 6 -> 还, 0 -> 说-01, 3 -> 来-01),Map(x2 -> 还, x5 -> 纯洁-01, x3 -> 蛇, x11 -> 星球, x6 -> 你, x9 -> 来-01, x0 -> 说-01))),[Ljava.lang.String;@788ddc1f,Annotation([Ljava.lang.String;@2dc3271b,[Ljava.lang.String;@254f906e,[Ljava.lang.String;@3d0035d2),Annotation([Ljava.lang.String;@2bfb6b49,[Ljava.lang.String;@1f346ad2,[Ledu.cmu.lti.nlp.amr.Dependency;@46a145ba),Annotation([Ljava.lang.String;@7ab34619,[Ljava.lang.String;@ae2db25,[Ljava.lang.String;@363c4251),Annotation([Ljava.lang.String;@7afc4db9,[Ljava.lang.String;@1a1f5f71,[Ledu.cmu.lti.nlp.amr.Entity;@63884e4))
AMR:
(x0 / 说-01, manner, x2 / 还)
(x0 / 说-01, prep-within, x5 / 纯洁-01)
(x0 / 说-01, source, x3 / 蛇)
(x5 / 纯洁-01, prep-on-behalf, x6 / 你)
(x9 / 来-01, degree, x5 / 纯洁-01)
(x9 / 来-01, prep-on-behalf, x11 / 星球)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,140 microseconds
Sentence: 小 王子 什么 也 没有 回答 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Spans:
Span 5-6:  回答 => 回答-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回答 => 回答-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	没有	_	VV	VV	_	6	dep	_	_
6	回答	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((回答-01 :polarity - :arg2 anything :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(5,6,List(0),回答,回答-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 回答-01),Map(x2 -> 王子, x3 -> 小-01, x0 -> 回答-01))),[Ljava.lang.String;@524270b8,Annotation([Ljava.lang.String;@4acb7ecc,[Ljava.lang.String;@2a4f5433,[Ljava.lang.String;@6812fa3a),Annotation([Ljava.lang.String;@29149030,[Ljava.lang.String;@38b8b6c0,[Ledu.cmu.lti.nlp.amr.Dependency;@68868328),Annotation([Ljava.lang.String;@173a6728,[Ljava.lang.String;@1a22e0ef,[Ljava.lang.String;@67514bdd),Annotation([Ljava.lang.String;@3b920bdc,[Ljava.lang.String;@7f5538a1,[Ledu.cmu.lti.nlp.amr.Entity;@72fd8a3c))
AMR:
(x0 / 回答-01, source, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,809 microseconds
Sentence: “ 在 这 个 花岗石 的 地球 上 ， 你 这么 弱小 ， 我 很 可怜 你 。

Oracle Span 1:  你 => 你
Oracle Span 2:  可怜 => 可怜-01
Oracle Span 3:  地球 => 地球
Oracle Span 4:  弱小 => 弱小-01
Oracle Span 5:  很 => 很
Oracle Span 6:  我 => 我
Oracle Span 7:  花岗石 => 花岗石
Oracle Span 8:  这 => 这
Oracle Span 9:  这么 => 这么
Spans:
Span 9-10:  你 => 你
Span 15-16:  可怜 => 可怜-01
Span 6-7:  地球 => 地球
Span 11-12:  弱小 => 弱小-01
Span 14-15:  很 => 很
Span 13-14:  我 => 我
Span 4-5:  花岗石 => 花岗石
Span 2-3:  这 => 这
Span 10-11:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  你 => 你
Oracle Span 15-16:  可怜 => 可怜-01
Oracle Span 6-7:  地球 => 地球
Oracle Span 11-12:  弱小 => 弱小-01
Oracle Span 14-15:  很 => 很
Oracle Span 13-14:  我 => 我
Oracle Span 4-5:  花岗石 => 花岗石
Oracle Span 2-3:  这 => 这
Oracle Span 10-11:  这么 => 这么

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	在	_	P	P	_	12	prep	_	_
3	这	_	DT	DT	_	5	det	_	_
4	个	_	M	M	_	3	clf	_	_
5	花岗石	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	2	plmod	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	你	_	PN	PN	_	12	nsubj	_	_
11	这么	_	AD	AD	_	12	advmod	_	_
12	弱小	_	VV	VV	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	我	_	PN	PN	_	16	nsubj	_	_
15	很	_	AD	AD	_	16	advmod	_	_
16	可怜	_	VV	VV	_	12	conj	_	_
17	你	_	PN	PN	_	16	dobj	_	_
18	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x15 / 弱小-01, arg0, x17 / 你)
(x15 / 弱小-01, degree, x16 / 这么)
(x15 / 弱小-01, location, x18 / 地球)
(x18 / 地球, mod, x19 / 花岗石)
(x18 / 地球, mod, x20 / 这)
(x21 / 可怜-01, arg0, x23 / 我)
(x21 / 可怜-01, degree, x22 / 很)

Input(Some(Graph((say :arg1 (causation :arg1 (弱小-01 :location (地球 :mod 这 :mod 花岗石) :arg0 你 :degree 这么) :arg2 (可怜-01 :arg1 x17 :arg0 我 :degree 很))),ArrayBuffer(Span(11,12,List(0),弱小,弱小-01,false), Span(6,7,List(1),地球,地球,false), Span(2,3,List(2),这,这,false), Span(4,5,List(3),花岗石,花岗石,false), Span(9,10,List(4),你,你,false), Span(10,11,List(5),这么,这么,false), Span(15,16,List(6),可怜,可怜-01,false), Span(13,14,List(7),我,我,false), Span(14,15,List(8),很,很,false)),Map(2 -> 这, 5 -> 这么, 8 -> 很, 7 -> 我, 1 -> 地球, 4 -> 你, 6 -> 可怜-01, 0 -> 弱小-01, 3 -> 花岗石),Map(x22 -> 很, x16 -> 这么, x19 -> 花岗石, x21 -> 可怜-01, x15 -> 弱小-01, x18 -> 地球, x23 -> 我, x20 -> 这, x17 -> 你))),[Ljava.lang.String;@1f9f381d,Annotation([Ljava.lang.String;@34780cd9,[Ljava.lang.String;@623ebac7,[Ljava.lang.String;@7c8c70d6),Annotation([Ljava.lang.String;@1ab5f08a,[Ljava.lang.String;@6edf29c1,[Ledu.cmu.lti.nlp.amr.Dependency;@79a04e5f),Annotation([Ljava.lang.String;@66b59b7d,[Ljava.lang.String;@53311681,[Ljava.lang.String;@4437ac07),Annotation([Ljava.lang.String;@3f1ed068,[Ljava.lang.String;@753aca85,[Ledu.cmu.lti.nlp.amr.Entity;@2e645fbd))
AMR:
(x15 / 弱小-01, degree, x16 / 这么)
(x15 / 弱小-01, location, x17 / 你)
(x15 / 弱小-01, location, x18 / 地球)
(x18 / 地球, mod, x19 / 花岗石)
(x19 / 花岗石, domain, x20 / 这)
(x21 / 可怜-01, degree, x22 / 很)
(x21 / 可怜-01, poss, x23 / 我)
(x21 / 可怜-01, time, x15 / 弱小-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 24,324 microseconds
Sentence: 如果 你 非常 怀念 你 的 星球 ， 那时 我 可以 帮助 你 。

Oracle Span 1:  你 => 你
Oracle Span 2:  可以 => 可以-03
Oracle Span 3:  帮助 => 帮助-01
Oracle Span 4:  怀念 => 怀念-01
Oracle Span 5:  我 => 我
Oracle Span 6:  星球 => 星球
Oracle Span 7:  那时 => 那时
Oracle Span 8:  非常 => 非常
Spans:
Span 1-2:  你 => 你
Span 10-11:  可以 => 可以-03
Span 11-12:  帮助 => 帮助-01
Span 3-4:  怀念 => 怀念-01
Span 9-10:  我 => 我
Span 6-7:  星球 => 星球
Span 8-9:  那时 => 那时
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 10-11:  可以 => 可以-03
Oracle Span 11-12:  帮助 => 帮助-01
Oracle Span 3-4:  怀念 => 怀念-01
Oracle Span 9-10:  我 => 我
Oracle Span 6-7:  星球 => 星球
Oracle Span 8-9:  那时 => 那时
Oracle Span 2-3:  非常 => 非常

Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	怀念	_	VV	VV	_	12	pccomp	_	_
5	你	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	那时	_	NT	NT	_	12	tmod	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	可以	_	VV	VV	_	12	mmod	_	_
12	帮助	_	VV	VV	_	0	root	_	_
13	你	_	PN	PN	_	12	ccomp	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 怀念-01, arg0, x3 / 你)
(x2 / 怀念-01, arg1, x4 / 星球)
(x2 / 怀念-01, degree, x6 / 非常)
(x7 / 可以-03, arg0, x8 / 帮助-01)
(x7 / 可以-03, time, x11 / 那时)
(x8 / 帮助-01, arg0, x9 / 我)

Input(Some(Graph((condition :arg1 (怀念-01 :degree 非常 :arg1 (星球 :poss x3) :arg0 你) :arg2 (可以-03 :time 那时 :arg0 (帮助-01 :arg1 x3 :arg0 我))),ArrayBuffer(Span(3,4,List(0),怀念,怀念-01,false), Span(2,3,List(1),非常,非常,false), Span(6,7,List(2),星球,星球,false), Span(1,2,List(3),你,你,false), Span(10,11,List(4),可以,可以-03,false), Span(8,9,List(5),那时,那时,false), Span(11,12,List(6),帮助,帮助-01,false), Span(9,10,List(7),我,我,false)),Map(2 -> 星球, 5 -> 那时, 7 -> 我, 1 -> 非常, 4 -> 可以-03, 6 -> 帮助-01, 0 -> 怀念-01, 3 -> 你),Map(x2 -> 怀念-01, x8 -> 帮助-01, x7 -> 可以-03, x4 -> 星球, x11 -> 那时, x3 -> 你, x6 -> 非常, x9 -> 我))),[Ljava.lang.String;@574a89e2,Annotation([Ljava.lang.String;@1e1e9ef3,[Ljava.lang.String;@3dd31157,[Ljava.lang.String;@31c628e7),Annotation([Ljava.lang.String;@3240b2a4,[Ljava.lang.String;@58434b19,[Ledu.cmu.lti.nlp.amr.Dependency;@7d3fb0ef),Annotation([Ljava.lang.String;@7dbe2ebf,[Ljava.lang.String;@4adc663e,[Ljava.lang.String;@885e7ff),Annotation([Ljava.lang.String;@8bd86c8,[Ljava.lang.String;@4fa9ab6,[Ledu.cmu.lti.nlp.amr.Entity;@2d3ef181))
AMR:
(x2 / 怀念-01, degree, x6 / 非常)
(x2 / 怀念-01, mode, x3 / 你)
(x2 / 怀念-01, snt3, x4 / 星球)
(x4 / 星球, condition, x8 / 帮助-01)
(x7 / 可以-03, op, x8 / 帮助-01)
(x7 / 可以-03, time, x11 / 那时)
(x8 / 帮助-01, snt1, x9 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 20,692 microseconds
Sentence: 我 可以 … ”

Oracle Span 1:  可以 => 可以-03
Oracle Span 2:  我 => 我
Spans:
Span 1-2:  可以 => 可以-03
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  可以 => 可以-03
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	可以	_	VV	VV	_	0	root	_	_
3	…	_	NN	NN	_	2	dobj	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 可以-03, arg0, x6 / 我)

Input(Some(Graph((say :arg1 (可以-03 :arg0 我)),ArrayBuffer(Span(1,2,List(0),可以,可以-03,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 可以-03),Map(x5 -> 可以-03, x6 -> 我))),[Ljava.lang.String;@a2341c6,Annotation([Ljava.lang.String;@6e4c0d8c,[Ljava.lang.String;@3e3315d9,[Ljava.lang.String;@64db4967),Annotation([Ljava.lang.String;@74e6094b,[Ljava.lang.String;@7a485a36,[Ledu.cmu.lti.nlp.amr.Dependency;@5cf3157b),Annotation([Ljava.lang.String;@625dfff3,[Ljava.lang.String;@26350ea2,[Ljava.lang.String;@1e9469b8),Annotation([Ljava.lang.String;@5a08efdc,[Ljava.lang.String;@57272109,[Ledu.cmu.lti.nlp.amr.Entity;@59696551))
AMR:
(x5 / 可以-03, beneficiary, x6 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,452 microseconds
Sentence: “ 啊 ！

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x5 -> 啊))),[Ljava.lang.String;@648d0e6d,Annotation([Ljava.lang.String;@79e66b2f,[Ljava.lang.String;@17273273,[Ljava.lang.String;@5f69e2b),Annotation([Ljava.lang.String;@984169e,[Ljava.lang.String;@43f1bb92,[Ledu.cmu.lti.nlp.amr.Dependency;@6d6bbd35),Annotation([Ljava.lang.String;@5c5d6175,[Ljava.lang.String;@7544ac86,[Ljava.lang.String;@3b27b497),Annotation([Ljava.lang.String;@b1534d3,[Ljava.lang.String;@3c74aa0d,[Ledu.cmu.lti.nlp.amr.Entity;@6c841199))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,161 microseconds
Sentence: 我 很 明白 你 的 意思 。 ” 小 王子 说 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  意思 => 意思-01
Oracle Span 5:  我 => 我
Oracle Span 6:  明白 => 明白-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  说 => 说-01
Spans:
Span 3-4:  你 => 你
Span 8-9:  小 => 小-01
Span 1-2:  很 => 很
Span 5-6:  意思 => 意思-01
Span 0-1:  我 => 我
Span 2-3:  明白 => 明白-01
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  小 => 小-01
Oracle Span 1-2:  很 => 很
Oracle Span 5-6:  意思 => 意思-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	10	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	意思	_	PU	PU	_	7	punct	_	_
7	。	_	NN	NN	_	10	nn	_	_
8	”	_	PU	PU	_	7	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	3	dobj	_	_
11	说	_	VV	VV	_	3	dep	_	_
12	,	_	VA	VA	_	11	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, arg0, x6 / 我)
(x4 / 明白-01, arg1, x7 / 意思-01)
(x4 / 明白-01, degree, x5 / 很)
(x7 / 意思-01, poss, x8 / 你)

Input(Some(Graph((说-01 :arg1 (明白-01 :arg1 (意思-01 :poss 你) :arg0 我 :degree 很) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(2,3,List(1),明白,明白-01,false), Span(5,6,List(2),意思,意思-01,false), Span(3,4,List(3),你,你,false), Span(0,1,List(4),我,我,false), Span(1,2,List(5),很,很,false), Span(9,10,List(6),王子,王子,false), Span(8,9,List(7),小,小-01,false)),Map(2 -> 意思-01, 5 -> 很, 7 -> 小-01, 1 -> 明白-01, 4 -> 我, 6 -> 王子, 0 -> 说-01, 3 -> 你),Map(x2 -> 王子, x5 -> 很, x8 -> 你, x7 -> 意思-01, x4 -> 明白-01, x3 -> 小-01, x6 -> 我, x0 -> 说-01))),[Ljava.lang.String;@6a818392,Annotation([Ljava.lang.String;@489091bd,[Ljava.lang.String;@512d6e60,[Ljava.lang.String;@1de9b505),Annotation([Ljava.lang.String;@7b122839,[Ljava.lang.String;@3743539f,[Ledu.cmu.lti.nlp.amr.Dependency;@d277579),Annotation([Ljava.lang.String;@5db6b845,[Ljava.lang.String;@378f002a,[Ljava.lang.String;@1afd72ef),Annotation([Ljava.lang.String;@2cc75074,[Ljava.lang.String;@445bb139,[Ledu.cmu.lti.nlp.amr.Entity;@b9a77c8))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, manner, x7 / 意思-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, degree, x5 / 很)
(x4 / 明白-01, mode, x7 / 意思-01)
(x4 / 明白-01, polite, x6 / 我)
(x7 / 意思-01, poss, x8 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 19,683 microseconds
Sentence: “ 但是 你 为什么 说话 总是 象 让 人 猜 谜语 似的 ？ ”

Oracle Span 1:  人 => 人
Oracle Span 2:  你 => 你
Oracle Span 3:  总是 => 总是
Oracle Span 4:  猜 => 猜-01
Oracle Span 5:  让 => 让-02
Oracle Span 6:  说话 => 说话-01
Oracle Span 7:  谜语 => 谜语
Spans:
Span 8-9:  人 => 人
Span 2-3:  你 => 你
Span 5-6:  总是 => 总是
Span 9-10:  猜 => 猜-01
Span 7-8:  让 => 让-02
Span 4-5:  说话 => 说话-01
Span 10-11:  谜语 => 谜语

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  总是 => 总是
Oracle Span 9-10:  猜 => 猜-01
Oracle Span 7-8:  让 => 让-02
Oracle Span 4-5:  说话 => 说话-01
Oracle Span 10-11:  谜语 => 谜语

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	7	advmod	_	_
3	你	_	PN	PN	_	7	nsubj	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	说话	_	VV	VV	_	7	mmod	_	_
6	总是	_	AD	AD	_	7	advmod	_	_
7	象	_	VA	VA	_	8	conj	_	_
8	让	_	VV	VV	_	0	root	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	猜	_	VV	VV	_	8	dep	_	_
11	谜语	_	NN	NN	_	12	nn	_	_
12	似的	_	NN	NN	_	10	dobj	_	_
13	？	_	PU	PU	_	8	punct	_	_
14	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x18 / 说话-01, arg0, x19 / 你)
(x21 / 让-02, arg1, x22 / 人)
(x21 / 让-02, arg2, x23 / 猜-01)
(x23 / 猜-01, arg1, x25 / 谜语)

Input(Some(Graph((say :arg1 (contrast :arg2 (像-01 :arg0 (说话-01 :arg0 你) :manner 总是 :arg1 (让-02 :arg2 (猜-01 :arg1 谜语 :arg0 x22) :arg1 人) :cause amr-unknown :mode interrogative))),ArrayBuffer(Span(4,5,List(0),说话,说话-01,false), Span(2,3,List(1),你,你,false), Span(5,6,List(2),总是,总是,false), Span(7,8,List(3),让,让-02,false), Span(9,10,List(4),猜,猜-01,false), Span(10,11,List(5),谜语,谜语,false), Span(8,9,List(6),人,人,false)),Map(2 -> 总是, 5 -> 谜语, 1 -> 你, 4 -> 猜-01, 6 -> 人, 0 -> 说话-01, 3 -> 让-02),Map(x22 -> 人, x25 -> 谜语, x19 -> 你, x21 -> 让-02, x18 -> 说话-01, x23 -> 猜-01, x20 -> 总是))),[Ljava.lang.String;@7a81065e,Annotation([Ljava.lang.String;@6cd3ad8a,[Ljava.lang.String;@75181b50,[Ljava.lang.String;@2d64160c),Annotation([Ljava.lang.String;@5f254608,[Ljava.lang.String;@2eeb0f9b,[Ledu.cmu.lti.nlp.amr.Dependency;@1b1c538d),Annotation([Ljava.lang.String;@1645f294,[Ljava.lang.String;@6325f352,[Ljava.lang.String;@15c4af7a),Annotation([Ljava.lang.String;@6cbd0674,[Ljava.lang.String;@55d58825,[Ledu.cmu.lti.nlp.amr.Entity;@19a64eae))
AMR:
(x18 / 说话-01, conj-as-if, x19 / 你)
(x20 / 总是, location, x18 / 说话-01)
(x21 / 让-02, degree, x18 / 说话-01)
(x21 / 让-02, prep-under, x23 / 猜-01)
(x22 / 人, location, x23 / 猜-01)
(x23 / 猜-01, prep-through, x25 / 谜语)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
Decoded in 15,831 microseconds
Sentence: “ 这些 谜语 我 都 能 解开 的 。 ” 蛇 说 。

Oracle Span 1:  我 => 我
Oracle Span 2:  能 => 能-01
Oracle Span 3:  蛇 => 蛇
Oracle Span 4:  解开 => 解开-01
Oracle Span 5:  说 => 说-01
Oracle Span 6:  谜语 => 谜语
Oracle Span 7:  这些 => 这些
Oracle Span 8:  都 => 都
Spans:
Span 3-4:  我 => 我
Span 5-6:  能 => 能-01
Span 10-11:  蛇 => 蛇
Span 6-7:  解开 => 解开-01
Span 11-12:  说 => 说-01
Span 2-3:  谜语 => 谜语
Span 1-2:  这些 => 这些
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  能 => 能-01
Oracle Span 10-11:  蛇 => 蛇
Oracle Span 6-7:  解开 => 解开-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 2-3:  谜语 => 谜语
Oracle Span 1-2:  这些 => 这些
Oracle Span 4-5:  都 => 都

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这些	_	PN	PN	_	3	nsubj	_	_
3	谜语	_	VV	VV	_	12	dep	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	能	_	VV	VV	_	3	ccomp	_	_
7	解开	_	VA	VA	_	6	dobj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	蛇	_	NR	NR	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 能-01)
(x3 / 能-01, arg0, x4 / 解开-01)
(x3 / 能-01, manner, x5 / 都)
(x4 / 解开-01, arg0, x6 / 我)
(x4 / 解开-01, arg1, x7 / 谜语)
(x7 / 谜语, mod, x8 / 这些)

Input(Some(Graph((说-01 :arg1 (能-01 :manner 都 :arg0 (解开-01 :arg1 (谜语 :mod 这些) :arg0 我)) :arg0 蛇),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(5,6,List(1),能,能-01,false), Span(4,5,List(2),都,都,false), Span(6,7,List(3),解开,解开-01,false), Span(2,3,List(4),谜语,谜语,false), Span(1,2,List(5),这些,这些,false), Span(3,4,List(6),我,我,false), Span(10,11,List(7),蛇,蛇,false)),Map(2 -> 都, 5 -> 这些, 7 -> 蛇, 1 -> 能-01, 4 -> 谜语, 6 -> 我, 0 -> 说-01, 3 -> 解开-01),Map(x2 -> 蛇, x5 -> 都, x8 -> 这些, x7 -> 谜语, x4 -> 解开-01, x3 -> 能-01, x6 -> 我, x0 -> 说-01))),[Ljava.lang.String;@29a98d9f,Annotation([Ljava.lang.String;@2da3b078,[Ljava.lang.String;@544e8149,[Ljava.lang.String;@7fb66650),Annotation([Ljava.lang.String;@1a96d94c,[Ljava.lang.String;@2a869a16,[Ledu.cmu.lti.nlp.amr.Dependency;@ae202c6),Annotation([Ljava.lang.String;@46aa712c,[Ljava.lang.String;@6ada9c0c,[Ljava.lang.String;@7412ed6b),Annotation([Ljava.lang.String;@6e7c351d,[Ljava.lang.String;@7b4a0aef,[Ledu.cmu.lti.nlp.amr.Entity;@45cec376))
AMR:
(x0 / 说-01, time, x4 / 解开-01)
(x0 / 说-01, topic, x2 / 蛇)
(x3 / 能-01, manner, x5 / 都)
(x4 / 解开-01, direction, x3 / 能-01)
(x4 / 解开-01, time, x7 / 谜语)
(x6 / 我, location, x7 / 谜语)
(x7 / 谜语, mod, x8 / 这些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 21,145 microseconds
Sentence: 于是 他们 又 都 沉默 起来 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  又 => 又
Oracle Span 3:  沉默 => 沉默-01
Oracle Span 4:  都 => 都
Spans:
Span 1-2:  他们 => 他们
Span 2-3:  又 => 又
Span 4-5:  沉默 => 沉默-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 2-3:  又 => 又
Oracle Span 4-5:  沉默 => 沉默-01
Oracle Span 3-4:  都 => 都

Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	他们	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	都	_	AD	AD	_	6	advmod	_	_
5	沉默	_	VA	VA	_	6	dep	_	_
6	起来	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x5 / 他们)
(x2 / 沉默-01, manner, x3 / 都)
(x2 / 沉默-01, manner, x4 / 又)

Input(Some(Graph((temporal :arg2 (沉默-01 :arg0 他们 :manner 又 :manner 都)),ArrayBuffer(Span(4,5,List(0),沉默,沉默-01,false), Span(1,2,List(1),他们,他们,false), Span(2,3,List(2),又,又,false), Span(3,4,List(3),都,都,false)),Map(2 -> 又, 1 -> 他们, 0 -> 沉默-01, 3 -> 都),Map(x2 -> 沉默-01, x5 -> 他们, x4 -> 又, x3 -> 都))),[Ljava.lang.String;@26d41711,Annotation([Ljava.lang.String;@298f0a0b,[Ljava.lang.String;@2b960a7,[Ljava.lang.String;@31dfc6f5),Annotation([Ljava.lang.String;@37b52340,[Ljava.lang.String;@663bb8ef,[Ledu.cmu.lti.nlp.amr.Dependency;@2f4e40d7),Annotation([Ljava.lang.String;@60e9c3a5,[Ljava.lang.String;@7e5843db,[Ljava.lang.String;@459f703f),Annotation([Ljava.lang.String;@188ac8a3,[Ljava.lang.String;@3650d4fc,[Ledu.cmu.lti.nlp.amr.Entity;@aaa0f76))
AMR:
(x2 / 沉默-01, direction, x5 / 他们)
(x2 / 沉默-01, manner, x3 / 都)
(x2 / 沉默-01, manner, x4 / 又)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,904 microseconds
Sentence: XVIII 。

Oracle Span 1:  XVIII => XVIII
Spans:
Span 0-1:  XVIII => XVIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVIII => XVIII

Dependencies:
1	XVIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XVIII,ArrayBuffer(Span(0,1,List(0),XVIII,XVIII,false)),Map(0 -> XVIII),Map(x0 -> XVIII))),[Ljava.lang.String;@340a8894,Annotation([Ljava.lang.String;@7a8b9166,[Ljava.lang.String;@4acc5dff,[Ljava.lang.String;@10c72a6f),Annotation([Ljava.lang.String;@70e94ecb,[Ljava.lang.String;@56cfe111,[Ledu.cmu.lti.nlp.amr.Dependency;@7e446d92),Annotation([Ljava.lang.String;@57f9b467,[Ljava.lang.String;@6d5c2745,[Ljava.lang.String;@44b29496),Annotation([Ljava.lang.String;@1947596f,[Ljava.lang.String;@3078cac,[Ledu.cmu.lti.nlp.amr.Entity;@f6de586))
AMR:


Decoded in 1,273 microseconds
Sentence: 小 王子 穿过 沙漠 。 他 只 见 过 一 朵 花 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  只 => 只
Oracle Span 3:  小 => 小-01
Oracle Span 4:  沙漠 => 沙漠
Oracle Span 5:  王子 => 王子
Oracle Span 6:  穿过 => 穿过-01
Oracle Span 7:  花 => 花
Oracle Span 8:  见 => 见-01
Spans:
Span 5-6:  他 => 他
Span 6-7:  只 => 只
Span 0-1:  小 => 小-01
Span 3-4:  沙漠 => 沙漠
Span 1-2:  王子 => 王子
Span 2-3:  穿过 => 穿过-01
Span 11-12:  花 => 花
Span 7-8:  见 => 见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 6-7:  只 => 只
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  沙漠 => 沙漠
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  穿过 => 穿过-01
Oracle Span 11-12:  花 => 花
Oracle Span 7-8:  见 => 见-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	穿过	_	VV	VV	_	0	root	_	_
4	沙漠	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	见	_	VV	VV	_	3	conj	_	_
9	过	_	AS	AS	_	8	asp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	朵	_	M	M	_	12	clf	_	_
12	花	_	NN	NN	_	8	dobj	_	_
13	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 穿过-01, arg0, x3 / 王子)
(x2 / 穿过-01, arg1, x5 / 沙漠)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 见-01, arg0, x8 / 他)
(x6 / 见-01, arg1, x9 / 花)
(x6 / 见-01, manner, x7 / 只)

Input(Some(Graph((multi-sentence :snt1 (穿过-01 :arg1 沙漠 :arg0 (王子 :mod 小-01)) :snt2 (见-01 :arg1 (花 :quant 1) :arg0 他 :manner 只)),ArrayBuffer(Span(2,3,List(0),穿过,穿过-01,false), Span(3,4,List(1),沙漠,沙漠,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(7,8,List(4),见,见-01,false), Span(11,12,List(5),花,花,false), Span(5,6,List(6),他,他,false), Span(6,7,List(7),只,只,false)),Map(2 -> 王子, 5 -> 花, 7 -> 只, 1 -> 沙漠, 4 -> 见-01, 6 -> 他, 0 -> 穿过-01, 3 -> 小-01),Map(x2 -> 穿过-01, x5 -> 沙漠, x8 -> 他, x7 -> 只, x4 -> 小-01, x3 -> 王子, x6 -> 见-01, x9 -> 花))),[Ljava.lang.String;@5f2bd6d9,Annotation([Ljava.lang.String;@7c847072,[Ljava.lang.String;@43d9f1a2,[Ljava.lang.String;@23f86d8a),Annotation([Ljava.lang.String;@2264ea32,[Ljava.lang.String;@7d3c09ec,[Ledu.cmu.lti.nlp.amr.Dependency;@71e4b308),Annotation([Ljava.lang.String;@11900483,[Ljava.lang.String;@14a049f9,[Ljava.lang.String;@94e51e8),Annotation([Ljava.lang.String;@5de6cf3a,[Ljava.lang.String;@4cc36c19,[Ledu.cmu.lti.nlp.amr.Entity;@5a3a1bf9))
AMR:
(x2 / 穿过-01, direction, x3 / 王子)
(x2 / 穿过-01, quant, x5 / 沙漠)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 见-01, ARG6, x8 / 他)
(x6 / 见-01, manner, x7 / 只)
(x6 / 见-01, prep-to, x9 / 花)
(x7 / 只, ARG1, x2 / 穿过-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 19,215 microseconds
Sentence: 一 个 有 着 三 枚 花瓣 的 花朵 ， 一 朵 很 不 起眼 的 小花 …

Oracle Span 1:  很 => 很
Oracle Span 2:  有 => 有-01
Oracle Span 3:  花朵 => 花朵
Oracle Span 4:  花瓣 => 花瓣
Oracle Span 5:  起眼 => 起眼-01
Spans:
Span 12-13:  很 => 很
Span 2-3:  有 => 有-01
Span 8-9:  花朵 => 花朵
Span 6-7:  花瓣 => 花瓣
Span 14-15:  起眼 => 起眼-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  很 => 很
Oracle Span 2-3:  有 => 有-01
Oracle Span 8-9:  花朵 => 花朵
Oracle Span 6-7:  花瓣 => 花瓣
Oracle Span 14-15:  起眼 => 起眼-01

Dependencies:
1	一	_	CD	CD	_	2	nummod	_	_
2	个	_	M	M	_	3	dep	_	_
3	有	_	VE	VE	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	三	_	CD	CD	_	6	nummod	_	_
6	枚	_	M	M	_	7	clf	_	_
7	花瓣	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	花朵	_	NN	NN	_	3	dobj	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	一	_	CD	CD	_	12	nsubj	_	_
12	朵	_	VV	VV	_	3	conj	_	_
13	很	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	起眼	_	VV	VV	_	12	dobj	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	小花	_	PU	PU	_	3	punct	_	_
18	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 起眼-01, degree, x17 / 很)
(x2 / 有-01, arg0, x3 / 花朵)
(x2 / 有-01, arg1, x4 / 花瓣)

Input(Some(Graph((and :op (有-01 :arg1 (花瓣 :quant 3) :arg0 (花朵 :quant 1)) :op (花 :mod 小-01 :quant 1 :mod (起眼-01 :degree 很 :polarity -))),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(6,7,List(1),花瓣,花瓣,false), Span(8,9,List(2),花朵,花朵,false), Span(14,15,List(3),起眼,起眼-01,false), Span(12,13,List(4),很,很,false)),Map(2 -> 花朵, 1 -> 花瓣, 4 -> 很, 0 -> 有-01, 3 -> 起眼-01),Map(x2 -> 有-01, x15 -> 起眼-01, x4 -> 花瓣, x3 -> 花朵, x17 -> 很))),[Ljava.lang.String;@2100d047,Annotation([Ljava.lang.String;@4af45442,[Ljava.lang.String;@1d805aa1,[Ljava.lang.String;@176f7f3b),Annotation([Ljava.lang.String;@30ca0779,[Ljava.lang.String;@58740366,[Ledu.cmu.lti.nlp.amr.Dependency;@47be0f9b),Annotation([Ljava.lang.String;@2bc426f0,[Ljava.lang.String;@4bd51d3e,[Ljava.lang.String;@33425811),Annotation([Ljava.lang.String;@4b74b35,[Ljava.lang.String;@e4e1ef5,[Ledu.cmu.lti.nlp.amr.Entity;@6d11ceef))
AMR:
(x15 / 起眼-01, degree, x17 / 很)
(x15 / 起眼-01, degree, x3 / 花朵)
(x2 / 有-01, topic, x4 / 花瓣)
(x3 / 花朵, manner, x4 / 花瓣)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
Decoded in 9,622 microseconds
Sentence: “ 你 好 。 ” 小 王子 说 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  说 => 说-01
Spans:
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 你好 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 说-01),Map(x2 -> 王子, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@4cb2918c,Annotation([Ljava.lang.String;@72e295cc,[Ljava.lang.String;@c2584d3,[Ljava.lang.String;@6fa0450e),Annotation([Ljava.lang.String;@37468787,[Ljava.lang.String;@51ec2856,[Ledu.cmu.lti.nlp.amr.Dependency;@714f3da4),Annotation([Ljava.lang.String;@1caa9eb6,[Ljava.lang.String;@1f53481b,[Ljava.lang.String;@2fcd7d3f),Annotation([Ljava.lang.String;@27e7c77f,[Ljava.lang.String;@6f70a21b,[Ledu.cmu.lti.nlp.amr.Entity;@6ae62c7e))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,277 microseconds
Sentence: “ 你 好 。 ” 花 说 。

Oracle Span 1:  花 => 花
Oracle Span 2:  说 => 说-01
Spans:
Span 5-6:  花 => 花
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  花 => 花
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	花	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花)

Input(Some(Graph((说-01 :arg1 你好 :arg0 花),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(5,6,List(1),花,花,false)),Map(1 -> 花, 0 -> 说-01),Map(x2 -> 花, x0 -> 说-01))),[Ljava.lang.String;@2e869098,Annotation([Ljava.lang.String;@37c36608,[Ljava.lang.String;@5d497a91,[Ljava.lang.String;@617389a),Annotation([Ljava.lang.String;@1c8f6a90,[Ljava.lang.String;@3050ac2f,[Ledu.cmu.lti.nlp.amr.Dependency;@265bd546),Annotation([Ljava.lang.String;@1937eaff,[Ljava.lang.String;@7e0bc8a3,[Ljava.lang.String;@4b0f2299),Annotation([Ljava.lang.String;@33063f5b,[Ljava.lang.String;@15405bd6,[Ledu.cmu.lti.nlp.amr.Entity;@352ed70d))
AMR:
(x0 / 说-01, beneficiary, x2 / 花)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,902 microseconds
Sentence: “ 人 在 什么 地方 ？ ” 小 王子 有 礼貌 地 问道 。

Oracle Span 1:  人 => 人
Oracle Span 2:  小 => 小-01
Oracle Span 3:  有 => 有-05
Oracle Span 4:  王子 => 王子
Oracle Span 5:  礼貌 => 礼貌-01
Oracle Span 6:  问道 => 问道-01
Spans:
Span 1-2:  人 => 人
Span 7-8:  小 => 小-01
Span 9-10:  有 => 有-05
Span 8-9:  王子 => 王子
Span 10-11:  礼貌 => 礼貌-01
Span 12-13:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人 => 人
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  有 => 有-05
Oracle Span 8-9:  王子 => 王子
Oracle Span 10-11:  礼貌 => 礼貌-01
Oracle Span 12-13:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	在	_	VV	VV	_	9	rcmod	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	地方	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	13	nsubj	_	_
10	有	_	VE	VE	_	13	dvpmod	_	_
11	礼貌	_	NN	NN	_	10	dobj	_	_
12	地	_	DEV	DEV	_	10	dvpm	_	_
13	问道	_	VV	VV	_	0	root	_	_
14	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 问道-01, arg1, x7 / 人)
(x0 / 问道-01, manner, x10 / 有-05)
(x10 / 有-05, arg0, x11 / 王子)
(x10 / 有-05, arg1, x13 / 礼貌-01)
(x11 / 王子, mod, x12 / 小-01)

Input(Some(Graph((问道-01 :arg0 x11 :manner (有-05 :arg1 (礼貌-01 :arg0 x11) :arg0 (王子 :mod 小-01)) :mode interrogative :arg1 (人 :location amr-unknown)),ArrayBuffer(Span(12,13,List(0),问道,问道-01,false), Span(9,10,List(1),有,有-05,false), Span(10,11,List(2),礼貌,礼貌-01,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小-01,false), Span(1,2,List(5),人,人,false)),Map(2 -> 礼貌-01, 5 -> 人, 1 -> 有-05, 4 -> 小-01, 0 -> 问道-01, 3 -> 王子),Map(x10 -> 有-05, x13 -> 礼貌-01, x12 -> 小-01, x7 -> 人, x11 -> 王子, x0 -> 问道-01))),[Ljava.lang.String;@70730db,Annotation([Ljava.lang.String;@5793b87,[Ljava.lang.String;@12704e15,[Ljava.lang.String;@512575e9),Annotation([Ljava.lang.String;@6f1a16fe,[Ljava.lang.String;@2373ad99,[Ledu.cmu.lti.nlp.amr.Dependency;@33634f04),Annotation([Ljava.lang.String;@4993febc,[Ljava.lang.String;@7601bc96,[Ljava.lang.String;@48a0c8aa),Annotation([Ljava.lang.String;@6192a5d5,[Ljava.lang.String;@3722c145,[Ledu.cmu.lti.nlp.amr.Entity;@4cbc2e3b))
AMR:
(x0 / 问道-01, manner, x10 / 有-05)
(x10 / 有-05, beneficiary, x11 / 王子)
(x10 / 有-05, beneficiary, x7 / 人)
(x11 / 王子, mod, x12 / 小-01)
(x13 / 礼貌-01, manner, x10 / 有-05)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,873 microseconds
Sentence: 有 一 天 ， 花 曾 看见 一 支 骆驼 商队 走 过 ：

Oracle Span 1:  商队 => 商队
Oracle Span 2:  曾 => 曾
Oracle Span 3:  看见 => 看见-01
Oracle Span 4:  花 => 花-01
Oracle Span 5:  骆驼 => 骆驼
Spans:
Span 10-11:  商队 => 商队
Span 5-6:  曾 => 曾
Span 6-7:  看见 => 看见-01
Span 4-5:  花 => 花-01
Span 9-10:  骆驼 => 骆驼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  商队 => 商队
Oracle Span 5-6:  曾 => 曾
Oracle Span 6-7:  看见 => 看见-01
Oracle Span 4-5:  花 => 花-01
Oracle Span 9-10:  骆驼 => 骆驼

Dependencies:
1	有	_	VE	VE	_	0	root	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	花	_	NN	NN	_	7	nsubj	_	_
6	曾	_	AD	AD	_	7	advmod	_	_
7	看见	_	VV	VV	_	1	dep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	支	_	M	M	_	10	clf	_	_
10	骆驼	_	NN	NN	_	7	dobj	_	_
11	商队	_	AD	AD	_	12	advmod	_	_
12	走	_	VV	VV	_	1	dep	_	_
13	过	_	AS	AS	_	12	asp	_	_
14	：	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 看见-01, arg0, x2 / 花-01)
(x0 / 看见-01, time, x3 / 曾)
(x5 / 商队, mod, x6 / 骆驼)

Input(Some(Graph((看见-01 :time 有一天 :arg1 (走过-01 :arg0 (商队 :quant 1 :mod 骆驼)) :time 曾 :arg0 花-01),ArrayBuffer(Span(6,7,List(0),看见,看见-01,false), Span(10,11,List(1),商队,商队,false), Span(9,10,List(2),骆驼,骆驼,false), Span(5,6,List(3),曾,曾,false), Span(4,5,List(4),花,花-01,false)),Map(2 -> 骆驼, 1 -> 商队, 4 -> 花-01, 0 -> 看见-01, 3 -> 曾),Map(x2 -> 花-01, x5 -> 商队, x3 -> 曾, x6 -> 骆驼, x0 -> 看见-01))),[Ljava.lang.String;@2975a9e,Annotation([Ljava.lang.String;@765ffb14,[Ljava.lang.String;@57562473,[Ljava.lang.String;@7a360554),Annotation([Ljava.lang.String;@424de326,[Ljava.lang.String;@4bc33720,[Ledu.cmu.lti.nlp.amr.Dependency;@2dd0f797),Annotation([Ljava.lang.String;@67064bdc,[Ljava.lang.String;@4a7fd0c9,[Ljava.lang.String;@18578491),Annotation([Ljava.lang.String;@3291b443,[Ljava.lang.String;@671c4166,[Ledu.cmu.lti.nlp.amr.Entity;@53d13cd4))
AMR:
(x0 / 看见-01, time, x2 / 花-01)
(x0 / 看见-01, time, x3 / 曾)
(x5 / 商队, mod, x6 / 骆驼)
(x5 / 商队, poss, x0 / 看见-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,521 microseconds
Sentence: “ 人 吗 ？

Oracle Span 1:  人 => 人
Spans:
Span 1-2:  人 => 人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  人 => 人

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	人	_	NN	NN	_	0	root	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (人 :mode interrogative)),ArrayBuffer(Span(1,2,List(0),人,人,false)),Map(0 -> 人),Map(x5 -> 人))),[Ljava.lang.String;@77865933,Annotation([Ljava.lang.String;@480ad82c,[Ljava.lang.String;@4d18b73a,[Ljava.lang.String;@177515d1),Annotation([Ljava.lang.String;@52ff99cd,[Ljava.lang.String;@4c2af006,[Ledu.cmu.lti.nlp.amr.Dependency;@44032fde),Annotation([Ljava.lang.String;@7b676112,[Ljava.lang.String;@5578be42,[Ljava.lang.String;@4e49ce2b),Annotation([Ljava.lang.String;@136965e3,[Ljava.lang.String;@53c6f96d,[Ledu.cmu.lti.nlp.amr.Entity;@435cc7f9))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,204 microseconds
Sentence: 我 想 大约 有 六七 个 人 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  大约 => 大约
Oracle Span 3:  想 => 想-01
Oracle Span 4:  我 => 我
Oracle Span 5:  有 => 有-02
Spans:
Span 6-7:  人 => 人
Span 2-3:  大约 => 大约
Span 1-2:  想 => 想-01
Span 0-1:  我 => 我
Span 3-4:  有 => 有-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 2-3:  大约 => 大约
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  有 => 有-02

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	大约	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	2	ccomp	_	_
5	六七	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	人	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 有-02)
(x3 / 有-02, arg1, x5 / 人)
(x3 / 有-02, manner, x4 / 大约)

Input(Some(Graph((想-01 :arg1 (有-02 :arg1 (人 :quant (or :op 6 :op 7)) :manner 大约) :arg0 我),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(3,4,List(1),有,有-02,false), Span(6,7,List(2),人,人,false), Span(2,3,List(3),大约,大约,false), Span(0,1,List(4),我,我,false)),Map(2 -> 人, 1 -> 有-02, 4 -> 我, 0 -> 想-01, 3 -> 大约),Map(x2 -> 我, x5 -> 人, x4 -> 大约, x3 -> 有-02, x0 -> 想-01))),[Ljava.lang.String;@4364712f,Annotation([Ljava.lang.String;@1b7a52dd,[Ljava.lang.String;@7f93dd4e,[Ljava.lang.String;@5ad5be4a),Annotation([Ljava.lang.String;@3ad85136,[Ljava.lang.String;@737d100a,[Ledu.cmu.lti.nlp.amr.Dependency;@12e5da86),Annotation([Ljava.lang.String;@6535117e,[Ljava.lang.String;@1d1cbd0f,[Ljava.lang.String;@6fa13e6),Annotation([Ljava.lang.String;@3af7d855,[Ljava.lang.String;@77049094,[Ledu.cmu.lti.nlp.amr.Entity;@f88bfbe))
AMR:
(x0 / 想-01, ARG4, x3 / 有-02)
(x0 / 想-01, value, x2 / 我)
(x3 / 有-02, manner, x4 / 大约)
(x3 / 有-02, prep-following, x5 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,923 microseconds
Sentence: 几 年 前 ， 我 瞅见 过 他们 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  几 => 几
Oracle Span 3:  前 => 前
Oracle Span 4:  年 => (temporal-quantity :unit 年)
Oracle Span 5:  我 => 我
Oracle Span 6:  瞅见 => 瞅见-01
Spans:
Span 7-8:  他们 => 他们
Span 0-1:  几 => 几
Span 2-3:  前 => 前
Span 1-2:  年 => (temporal-quantity :unit 年)
Span 4-5:  我 => 我
Span 5-6:  瞅见 => 瞅见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他们 => 他们
Oracle Span 0-1:  几 => 几
Oracle Span 2-3:  前 => 前
Oracle Span 1-2:  年 => (temporal-quantity :unit 年)
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  瞅见 => 瞅见-01

Dependencies:
1	几	_	CD	CD	_	2	nummod	_	_
2	年	_	M	M	_	3	lobj	_	_
3	前	_	LC	LC	_	6	loc	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	瞅见	_	VV	VV	_	0	root	_	_
7	过	_	AS	AS	_	6	asp	_	_
8	他们	_	PN	PN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 瞅见-01, arg0, x2 / 我)
(x0 / 瞅见-01, arg1, x3 / 他们)
(x0 / 瞅见-01, time, x4 / 前)
(x4 / 前, quant, x7 / 几)
(x7 / 几, op, x8 / temporal-quantity)
(x8 / temporal-quantity, unit, x11 / 年)

Input(Some(Graph((瞅见-01 :time (前 :quant (几 :op (temporal-quantity :unit 年 :quant 1)) :op now) :arg1 他们 :arg0 我),ArrayBuffer(Span(5,6,List(0),瞅见,瞅见-01,false), Span(2,3,List(1),前,前,false), Span(0,1,List(2),几,几,false), Span(1,2,List(3, 4),年,(temporal-quantity :unit 年),false), Span(7,8,List(5),他们,他们,false), Span(4,5,List(6),我,我,false)),Map(2 -> 几, 5 -> 他们, 1 -> 前, 4 -> 年, 6 -> 我, 0 -> 瞅见-01, 3 -> temporal-quantity),Map(x2 -> 我, x8 -> temporal-quantity, x7 -> 几, x4 -> 前, x3 -> 他们, x11 -> 年, x0 -> 瞅见-01))),[Ljava.lang.String;@59bbe88a,Annotation([Ljava.lang.String;@5d8ab698,[Ljava.lang.String;@ed91d8d,[Ljava.lang.String;@446626a7),Annotation([Ljava.lang.String;@429f7919,[Ljava.lang.String;@4a2929a4,[Ledu.cmu.lti.nlp.amr.Dependency;@cda6019),Annotation([Ljava.lang.String;@797c3c3b,[Ljava.lang.String;@4012d5bc,[Ljava.lang.String;@4375b013),Annotation([Ljava.lang.String;@1cf0cacc,[Ljava.lang.String;@4f5b08d,[Ledu.cmu.lti.nlp.amr.Entity;@529c2a9a))
AMR:
(x0 / 瞅见-01, beneficiary, x3 / 他们)
(x0 / 瞅见-01, time, x4 / 前)
(x0 / 瞅见-01, value, x2 / 我)
(x4 / 前, quant, x7 / 几)
(x7 / 几, op, x8 / temporal-quantity)
(x8 / temporal-quantity, unit, x11 / 年)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,131 microseconds
Sentence: 可是 ， 从来 不 知道 到 什么 地方 去 找 他们 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  从来 => 从来
Oracle Span 3:  他们 => 他们
Oracle Span 4:  到 => 到-01
Oracle Span 5:  地方 => 地方
Oracle Span 6:  找 => 找-01
Oracle Span 7:  知道 => 知道-01
Spans:
Span 6-7:  什么 => 什么
Span 2-3:  从来 => 从来
Span 10-11:  他们 => 他们
Span 5-6:  到 => 到-01
Span 7-8:  地方 => 地方
Span 9-10:  找 => 找-01
Span 4-5:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  什么 => 什么
Oracle Span 2-3:  从来 => 从来
Oracle Span 10-11:  他们 => 他们
Oracle Span 5-6:  到 => 到-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 9-10:  找 => 找-01
Oracle Span 4-5:  知道 => 知道-01

Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	到	_	VV	VV	_	5	ccomp	_	_
7	什么	_	DT	DT	_	8	det	_	_
8	地方	_	NN	NN	_	6	dobj	_	_
9	去	_	MSP	MSP	_	10	prtmod	_	_
10	找	_	VV	VV	_	5	dep	_	_
11	他们	_	PN	PN	_	10	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 知道-01, arg1, x13 / 到-01)
(x11 / 知道-01, time, x25 / 从来)
(x13 / 到-01, arg1, x14 / 地方)
(x13 / 到-01, purpose, x23 / 找-01)
(x14 / 地方, mod, x19 / 什么)
(x23 / 找-01, arg1, x24 / 他们)

Input(Some(Graph((contrast :arg2 (知道-01 :time 从来 :arg1 (到-01 :purpose (找-01 :arg1 他们) :arg1 (地方 :mod 什么)) :polarity -)),ArrayBuffer(Span(4,5,List(0),知道,知道-01,false), Span(2,3,List(1),从来,从来,false), Span(5,6,List(2),到,到-01,false), Span(9,10,List(3),找,找-01,false), Span(10,11,List(4),他们,他们,false), Span(7,8,List(5),地方,地方,false), Span(6,7,List(6),什么,什么,false)),Map(2 -> 到-01, 5 -> 地方, 1 -> 从来, 4 -> 他们, 6 -> 什么, 0 -> 知道-01, 3 -> 找-01),Map(x19 -> 什么, x25 -> 从来, x13 -> 到-01, x24 -> 他们, x23 -> 找-01, x11 -> 知道-01, x14 -> 地方))),[Ljava.lang.String;@3c87fdf2,Annotation([Ljava.lang.String;@26bbe604,[Ljava.lang.String;@fe34b86,[Ljava.lang.String;@3c98781a),Annotation([Ljava.lang.String;@3f736a16,[Ljava.lang.String;@4601203a,[Ledu.cmu.lti.nlp.amr.Dependency;@53abfc07),Annotation([Ljava.lang.String;@2c8c16c0,[Ljava.lang.String;@80bfa9d,[Ljava.lang.String;@47c40b56),Annotation([Ljava.lang.String;@4b039c6d,[Ljava.lang.String;@7f5b9db,[Ledu.cmu.lti.nlp.amr.Entity;@507d64aa))
AMR:
(x11 / 知道-01, prep-along-with, x13 / 到-01)
(x11 / 知道-01, time, x25 / 从来)
(x13 / 到-01, purpose, x23 / 找-01)
(x13 / 到-01, time, x14 / 地方)
(x14 / 地方, mod, x19 / 什么)
(x23 / 找-01, purpose, x24 / 他们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 16,109 microseconds
Sentence: 风 吹 着 他们 到处 跑 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  到处 => 到处
Oracle Span 3:  吹 => 吹-01
Oracle Span 4:  风 => 风
Spans:
Span 3-4:  他们 => 他们
Span 4-5:  到处 => 到处
Span 1-2:  吹 => 吹-01
Span 0-1:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 4-5:  到处 => 到处
Oracle Span 1-2:  吹 => 吹-01
Oracle Span 0-1:  风 => 风

Dependencies:
1	风	_	NN	NN	_	2	nsubj	_	_
2	吹	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	到处	_	AD	AD	_	6	advmod	_	_
6	跑	_	VV	VV	_	2	ccomp	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 吹-01, arg0, x2 / 风)
(x0 / 吹-01, arg1, x3 / 他们)
(x0 / 吹-01, direction, x6 / 到处)

Input(Some(Graph((吹-01 :direction 到处 :arg1 他们 :arg0 风),ArrayBuffer(Span(1,2,List(0),吹,吹-01,false), Span(4,5,List(1),到处,到处,false), Span(3,4,List(2),他们,他们,false), Span(0,1,List(3),风,风,false)),Map(2 -> 他们, 1 -> 到处, 0 -> 吹-01, 3 -> 风),Map(x2 -> 风, x3 -> 他们, x6 -> 到处, x0 -> 吹-01))),[Ljava.lang.String;@37045b48,Annotation([Ljava.lang.String;@60b34931,[Ljava.lang.String;@4aa21f9d,[Ljava.lang.String;@71c17a57),Annotation([Ljava.lang.String;@640ab13c,[Ljava.lang.String;@1e0a864d,[Ledu.cmu.lti.nlp.amr.Dependency;@440e3ce6),Annotation([Ljava.lang.String;@3e67f5f2,[Ljava.lang.String;@fd53053,[Ljava.lang.String;@4527f70a),Annotation([Ljava.lang.String;@707b1a44,[Ljava.lang.String;@7132a9dc,[Ledu.cmu.lti.nlp.amr.Entity;@57435801))
AMR:
(x0 / 吹-01, ARG3, x3 / 他们)
(x0 / 吹-01, direction, x6 / 到处)
(x0 / 吹-01, prep-from, x2 / 风)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,873 microseconds
Sentence: 他们 没有 根 ， 这 对 他们 来说 是 很 不 方便 的 。 ”

Oracle Span 1:  他们 => 他们
Oracle Span 2:  很 => 很
Oracle Span 3:  方便 => 方便-03
Oracle Span 4:  来说 => 来说-01
Oracle Span 5:  根 => 根
Spans:
Span 0-1:  他们 => 他们
Span 9-10:  很 => 很
Span 11-12:  方便 => 方便-03
Span 7-8:  来说 => 来说-01
Span 2-3:  根 => 根

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 9-10:  很 => 很
Oracle Span 11-12:  方便 => 方便-03
Oracle Span 7-8:  来说 => 来说-01
Oracle Span 2-3:  根 => 根

Dependencies:
1	他们	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	根	_	M	M	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	这	_	PN	PN	_	9	nsubj	_	_
6	对	_	P	P	_	9	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	来说	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	2	conj	_	_
10	很	_	AD	AD	_	12	advmod	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	方便	_	VA	VA	_	9	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	。	_	PU	PU	_	2	punct	_	_
15	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x24 / 来说-01, arg2, x30 / 方便-03)
(x30 / 方便-03, degree, x32 / 很)

Input(Some(Graph((say :arg1 (来说-01 :arg2 (方便-03 :degree 很 :polarity -) :arg1 x27 :arg0 (有-01 :polarity - :arg0 他们 :arg1 根))),ArrayBuffer(Span(7,8,List(0),来说,来说-01,false), Span(11,12,List(1),方便,方便-03,false), Span(9,10,List(2),很,很,false), Span(0,1,List(3),他们,他们,false), Span(2,3,List(4),根,根,false)),Map(2 -> 很, 1 -> 方便-03, 4 -> 根, 0 -> 来说-01, 3 -> 他们),Map(x28 -> 根, x30 -> 方便-03, x27 -> 他们, x24 -> 来说-01, x32 -> 很))),[Ljava.lang.String;@2da66a44,Annotation([Ljava.lang.String;@527fc8e,[Ljava.lang.String;@61bfc9bf,[Ljava.lang.String;@2c7106d9),Annotation([Ljava.lang.String;@329bad59,[Ljava.lang.String;@862f408,[Ledu.cmu.lti.nlp.amr.Dependency;@178f268a),Annotation([Ljava.lang.String;@33ecbd6c,[Ljava.lang.String;@5c723f2d,[Ljava.lang.String;@432f521f),Annotation([Ljava.lang.String;@2d7a9786,[Ljava.lang.String;@7bab5898,[Ledu.cmu.lti.nlp.amr.Entity;@366d8b97))
AMR:
(x24 / 来说-01, mode, x30 / 方便-03)
(x28 / 根, source, x27 / 他们)
(x28 / 根, year, x30 / 方便-03)
(x30 / 方便-03, degree, x32 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
Decoded in 9,917 microseconds
Sentence: “ 再见 了 。 ” 小 王子 说 。

Oracle Span 1:  再见 => 再见
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  再见 => 再见
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	7	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 再见 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(1,2,List(1),再见,再见,false), Span(6,7,List(2),王子,王子,false), Span(5,6,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 再见, 0 -> 说-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 再见, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@feb98ef,Annotation([Ljava.lang.String;@7654f833,[Ljava.lang.String;@571a01f9,[Ljava.lang.String;@d7109be),Annotation([Ljava.lang.String;@5e0ec41f,[Ljava.lang.String;@f4a3a8d,[Ledu.cmu.lti.nlp.amr.Dependency;@8d8f754),Annotation([Ljava.lang.String;@d613308,[Ljava.lang.String;@25673087,[Ljava.lang.String;@7b27e8f4),Annotation([Ljava.lang.String;@348ad293,[Ljava.lang.String;@30f74e79,[Ledu.cmu.lti.nlp.amr.Entity;@2c88a3e8))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, prep-from, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,191 microseconds
Sentence: “ 再见 。 ” 花 说 。

Oracle Span 1:  再见 => 再见
Oracle Span 2:  花 => 花
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  再见 => 再见
Span 4-5:  花 => 花
Span 5-6:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 4-5:  花 => 花
Oracle Span 5-6:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	花	_	NN	NN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花)
(x0 / 说-01, arg1, x3 / 再见)

Input(Some(Graph((说-01 :arg1 再见 :arg0 花),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(1,2,List(1),再见,再见,false), Span(4,5,List(2),花,花,false)),Map(2 -> 花, 1 -> 再见, 0 -> 说-01),Map(x2 -> 花, x3 -> 再见, x0 -> 说-01))),[Ljava.lang.String;@68ac9ec5,Annotation([Ljava.lang.String;@a50d709,[Ljava.lang.String;@5ed4bc,[Ljava.lang.String;@6920b0bc),Annotation([Ljava.lang.String;@65f651eb,[Ljava.lang.String;@69923ac3,[Ledu.cmu.lti.nlp.amr.Dependency;@1f1ff879),Annotation([Ljava.lang.String;@73d60e76,[Ljava.lang.String;@24f870ee,[Ljava.lang.String;@5c441290),Annotation([Ljava.lang.String;@3c78e551,[Ljava.lang.String;@7f1ef916,[Ledu.cmu.lti.nlp.amr.Entity;@1886991b))
AMR:
(x0 / 说-01, beneficiary, x2 / 花)
(x0 / 说-01, topic, x3 / 再见)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,180 microseconds
Sentence: XIX 。

Oracle Span 1:  XIX => XIX
Spans:
Span 0-1:  XIX => XIX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIX => XIX

Dependencies:
1	XIX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XIX,ArrayBuffer(Span(0,1,List(0),XIX,XIX,false)),Map(0 -> XIX),Map(x0 -> XIX))),[Ljava.lang.String;@64aad809,Annotation([Ljava.lang.String;@1f03fba0,[Ljava.lang.String;@17dd671f,[Ljava.lang.String;@3bbf6abe),Annotation([Ljava.lang.String;@9679750,[Ljava.lang.String;@9b9a327,[Ledu.cmu.lti.nlp.amr.Dependency;@75a0c890),Annotation([Ljava.lang.String;@358ab600,[Ljava.lang.String;@e26af6,[Ljava.lang.String;@44065156),Annotation([Ljava.lang.String;@3791f50e,[Ljava.lang.String;@574b7f4a,[Ledu.cmu.lti.nlp.amr.Entity;@44ed0a8f))
AMR:


Decoded in 1,168 microseconds
Sentence: 之后 ， 小 王子 爬上 一 座 高山 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  爬上 => 爬上-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  高山 => 高山
Spans:
Span 2-3:  小 => 小-01
Span 4-5:  爬上 => 爬上-01
Span 3-4:  王子 => 王子
Span 7-8:  高山 => 高山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 4-5:  爬上 => 爬上-01
Oracle Span 3-4:  王子 => 王子
Oracle Span 7-8:  高山 => 高山

Dependencies:
1	之后	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	5	nsubj	_	_
5	爬上	_	VV	VV	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	座	_	M	M	_	8	clf	_	_
8	高山	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 爬上-01, arg0, x3 / 王子)
(x2 / 爬上-01, arg1, x5 / 高山)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((temporal :arg2 (爬上-01 :arg1 (高山 :quant 1) :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(4,5,List(0),爬上,爬上-01,false), Span(7,8,List(1),高山,高山,false), Span(3,4,List(2),王子,王子,false), Span(2,3,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 高山, 0 -> 爬上-01, 3 -> 小-01),Map(x2 -> 爬上-01, x5 -> 高山, x4 -> 小-01, x3 -> 王子))),[Ljava.lang.String;@32177fa5,Annotation([Ljava.lang.String;@a96d56c,[Ljava.lang.String;@6ab4a5b,[Ljava.lang.String;@2abe9173),Annotation([Ljava.lang.String;@235d29d6,[Ljava.lang.String;@1fdca564,[Ledu.cmu.lti.nlp.amr.Dependency;@43f9dd56),Annotation([Ljava.lang.String;@1d12e953,[Ljava.lang.String;@57cb70be,[Ljava.lang.String;@2d4608a6),Annotation([Ljava.lang.String;@20d87335,[Ljava.lang.String;@2a8a4e0c,[Ledu.cmu.lti.nlp.amr.Entity;@26c89563))
AMR:
(x2 / 爬上-01, direction, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 高山, mod, x2 / 爬上-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 7,401 microseconds
Sentence: 过去 他 所 见 过 的 山 就 是 那 三 座 只 有 他 膝盖 那么 高 的 火山 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  山 => 山
Oracle Span 3:  火山 => 火山
Oracle Span 4:  膝盖 => 膝盖
Oracle Span 5:  见 => 见-01
Oracle Span 6:  过去 => 过去
Oracle Span 7:  那 => 那
Oracle Span 8:  那么 => 那么
Oracle Span 9:  高 => 高-02
Spans:
Span 1-2:  他 => 他
Span 6-7:  山 => 山
Span 19-20:  火山 => 火山
Span 15-16:  膝盖 => 膝盖
Span 3-4:  见 => 见-01
Span 0-1:  过去 => 过去
Span 9-10:  那 => 那
Span 16-17:  那么 => 那么
Span 17-18:  高 => 高-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 6-7:  山 => 山
Oracle Span 19-20:  火山 => 火山
Oracle Span 15-16:  膝盖 => 膝盖
Oracle Span 3-4:  见 => 见-01
Oracle Span 0-1:  过去 => 过去
Oracle Span 9-10:  那 => 那
Oracle Span 16-17:  那么 => 那么
Oracle Span 17-18:  高 => 高-02

Dependencies:
1	过去	_	NT	NT	_	4	dep	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	见	_	VV	VV	_	7	rcmod	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	山	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	那	_	DT	DT	_	20	det	_	_
11	三	_	CD	CD	_	12	nummod	_	_
12	座	_	M	M	_	10	dep	_	_
13	只	_	AD	AD	_	14	advmod	_	_
14	有	_	VE	VE	_	20	rcmod	_	_
15	他	_	PN	PN	_	16	nsubj	_	_
16	膝盖	_	VV	VV	_	14	dep	_	_
17	那么	_	AD	AD	_	18	advmod	_	_
18	高	_	VA	VA	_	16	ccomp	_	_
19	的	_	DEC	DEC	_	14	cpm	_	_
20	火山	_	NN	NN	_	9	attr	_	_
21	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 火山, domain, x9 / 山)
(x0 / 火山, mod, x8 / 那)
(x14 / 见-01, arg1, x9 / 山)
(x14 / 见-01, time, x16 / 过去)
(x2 / 高-02, arg0, x0 / 火山)
(x2 / 高-02, arg1, x3 / 膝盖)
(x2 / 高-02, mod, x4 / 那么)
(x5 / 他, part, x3 / 膝盖)

Input(Some(Graph((火山 :quant 3 :domain (山 :arg1-of (见-01 :time 过去 :arg0 x5)) :mod 那 :arg0-of (高-02 :mod (那么 :manner 只有-01) :arg1 (膝盖 :part-of 他))),ArrayBuffer(Span(19,20,List(0),火山,火山,false), Span(6,7,List(1),山,山,false), Span(3,4,List(2),见,见-01,false), Span(0,1,List(3),过去,过去,false), Span(9,10,List(4),那,那,false), Span(17,18,List(5),高,高-02,false), Span(16,17,List(6),那么,那么,false), Span(15,16,List(7),膝盖,膝盖,false), Span(1,2,List(8),他,他,false)),Map(2 -> 见-01, 5 -> 高-02, 8 -> 他, 7 -> 膝盖, 1 -> 山, 4 -> 那, 6 -> 那么, 0 -> 火山, 3 -> 过去),Map(x16 -> 过去, x2 -> 高-02, x5 -> 他, x8 -> 那, x4 -> 那么, x3 -> 膝盖, x14 -> 见-01, x9 -> 山, x0 -> 火山))),[Ljava.lang.String;@3bd6ba24,Annotation([Ljava.lang.String;@58f437b0,[Ljava.lang.String;@20f6f88c,[Ljava.lang.String;@4277127c),Annotation([Ljava.lang.String;@4c7e978c,[Ljava.lang.String;@354e7004,[Ledu.cmu.lti.nlp.amr.Dependency;@22ebccb9),Annotation([Ljava.lang.String;@5875de6a,[Ljava.lang.String;@608fe01f,[Ljava.lang.String;@2687725a),Annotation([Ljava.lang.String;@5a75ec37,[Ljava.lang.String;@2c05ff9d,[Ledu.cmu.lti.nlp.amr.Entity;@33956d1a))
AMR:
(x0 / 火山, domain, x9 / 山)
(x0 / 火山, mod, x8 / 那)
(x14 / 见-01, time, x16 / 过去)
(x16 / 过去, ARG3, x5 / 他)
(x2 / 高-02, ARG3, x0 / 火山)
(x2 / 高-02, degree, x3 / 膝盖)
(x2 / 高-02, mod, x4 / 那么)
(x9 / 山, mod, x14 / 见-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 28,050 microseconds
Sentence: 并且 他 把 那 座 熄灭 了 的 火山 就 当作 凳子 。

Oracle Span 1:  他 => 他
Oracle Span 2:  凳子 => 凳子
Oracle Span 3:  就 => 就
Oracle Span 4:  当作 => 当作-01
Oracle Span 5:  火山 => 火山
Oracle Span 6:  熄灭 => 熄灭-01
Oracle Span 7:  那 => 那
Spans:
Span 1-2:  他 => 他
Span 11-12:  凳子 => 凳子
Span 9-10:  就 => 就
Span 10-11:  当作 => 当作-01
Span 8-9:  火山 => 火山
Span 5-6:  熄灭 => 熄灭-01
Span 3-4:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 11-12:  凳子 => 凳子
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  当作 => 当作-01
Oracle Span 8-9:  火山 => 火山
Oracle Span 5-6:  熄灭 => 熄灭-01
Oracle Span 3-4:  那 => 那

Dependencies:
1	并且	_	CC	CC	_	9	cc	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	把	_	BA	BA	_	6	ba	_	_
4	那	_	DT	DT	_	6	nsubj	_	_
5	座	_	M	M	_	4	clf	_	_
6	熄灭	_	VV	VV	_	9	rcmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	火山	_	NN	NN	_	0	root	_	_
10	就	_	P	P	_	9	conj	_	_
11	当作	_	VV	VV	_	12	vmod	_	_
12	凳子	_	NN	NN	_	9	conj	_	_
13	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 火山, mod, x12 / 那)
(x14 / 熄灭-01, arg1, x11 / 火山)
(x9 / 当作-01, arg0, x10 / 他)
(x9 / 当作-01, arg1, x11 / 火山)
(x9 / 当作-01, arg2, x15 / 凳子)
(x9 / 当作-01, manner, x16 / 就)

Input(Some(Graph((progression :arg2 (当作-01 :manner 就 :arg2 凳子 :arg1 (火山 :arg1-of 熄灭-01 :mod 那) :arg0 他)),ArrayBuffer(Span(10,11,List(0),当作,当作-01,false), Span(9,10,List(1),就,就,false), Span(11,12,List(2),凳子,凳子,false), Span(8,9,List(3),火山,火山,false), Span(5,6,List(4),熄灭,熄灭-01,false), Span(3,4,List(5),那,那,false), Span(1,2,List(6),他,他,false)),Map(2 -> 凳子, 5 -> 那, 1 -> 就, 4 -> 熄灭-01, 6 -> 他, 0 -> 当作-01, 3 -> 火山),Map(x16 -> 就, x10 -> 他, x12 -> 那, x15 -> 凳子, x11 -> 火山, x14 -> 熄灭-01, x9 -> 当作-01))),[Ljava.lang.String;@2e1ddc90,Annotation([Ljava.lang.String;@5b7c8930,[Ljava.lang.String;@58867cd5,[Ljava.lang.String;@40e32762),Annotation([Ljava.lang.String;@5a8ab2,[Ljava.lang.String;@3f50b680,[Ledu.cmu.lti.nlp.amr.Dependency;@54db056b),Annotation([Ljava.lang.String;@d5af0a5,[Ljava.lang.String;@5981f4a6,[Ljava.lang.String;@63dfada0),Annotation([Ljava.lang.String;@6f231ced,[Ljava.lang.String;@35a60674,[Ledu.cmu.lti.nlp.amr.Entity;@63d4f0a2))
AMR:
(x11 / 火山, mod, x12 / 那)
(x14 / 熄灭-01, value, x11 / 火山)
(x9 / 当作-01, ARG1, x15 / 凳子)
(x9 / 当作-01, ARG4, x11 / 火山)
(x9 / 当作-01, location, x10 / 他)
(x9 / 当作-01, manner, x16 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,236 microseconds
Sentence: 小 王子 自言自语 地 说道 ： “ 从 这么 高 的 山 上 ， 我 一眼 可以 看到 整 个 星球 ， 以及 所有 的 人 。 ”

Oracle Span 1:  一眼 => 一眼
Oracle Span 2:  人 => 人
Oracle Span 3:  可以 => 可以-03
Oracle Span 4:  小 => 小-01
Oracle Span 5:  我 => 我
Oracle Span 6:  所有 => 所有
Oracle Span 7:  星球 => 星球
Oracle Span 8:  王子 => 王子
Oracle Span 9:  看到 => 看到-01
Oracle Span 10:  自言自语 => 自言自语
Oracle Span 11:  说道 => 说道-01
Oracle Span 12:  这么 => 这么
Oracle Span 13:  高 => 高-01
Spans:
Span 15-16:  一眼 => 一眼
Span 25-26:  人 => 人
Span 16-17:  可以 => 可以-03
Span 0-1:  小 => 小-01
Span 14-15:  我 => 我
Span 23-24:  所有 => 所有
Span 20-21:  星球 => 星球
Span 1-2:  王子 => 王子
Span 17-18:  看到 => 看到-01
Span 2-3:  自言自语 => 自言自语
Span 4-5:  说道 => 说道-01
Span 8-9:  这么 => 这么
Span 9-10:  高 => 高-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  一眼 => 一眼
Oracle Span 25-26:  人 => 人
Oracle Span 16-17:  可以 => 可以-03
Oracle Span 0-1:  小 => 小-01
Oracle Span 14-15:  我 => 我
Oracle Span 23-24:  所有 => 所有
Oracle Span 20-21:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 17-18:  看到 => 看到-01
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 4-5:  说道 => 说道-01
Oracle Span 8-9:  这么 => 这么
Oracle Span 9-10:  高 => 高-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	18	punct	_	_
8	从	_	P	P	_	18	prep	_	_
9	这么	_	AD	AD	_	10	advmod	_	_
10	高	_	VA	VA	_	12	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	山	_	NN	NN	_	13	lobj	_	_
13	上	_	LC	LC	_	8	plmod	_	_
14	,	_	PU	PU	_	18	punct	_	_
15	我	_	PN	PN	_	18	nsubj	_	_
16	一眼	_	AD	AD	_	18	advmod	_	_
17	可以	_	VV	VV	_	18	mmod	_	_
18	看到	_	VV	VV	_	5	ccomp	_	_
19	整	_	DT	DT	_	21	det	_	_
20	个	_	M	M	_	19	clf	_	_
21	星球	_	NN	NN	_	18	dobj	_	_
22	,	_	PU	PU	_	18	punct	_	_
23	以及	_	CC	CC	_	18	cc	_	_
24	所有	_	DT	DT	_	26	assmod	_	_
25	的	_	DEG	DEG	_	24	assm	_	_
26	人	_	NN	NN	_	18	dep	_	_
27	。	_	PU	PU	_	5	punct	_	_
28	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x0 / 说道-01, arg1, x5 / 可以-03)
(x0 / 说道-01, manner, x4 / 自言自语)
(x13 / 人, mod, x14 / 所有)
(x16 / 高-01, mod, x17 / 这么)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 可以-03, arg0, x7 / 我)
(x5 / 可以-03, arg1, x8 / 看到-01)
(x8 / 看到-01, manner, x9 / 一眼)

Input(Some(Graph((说道-01 :arg1 (可以-03 :arg1 (看到-01 :location (山上 :mod (高-01 :mod 这么)) :arg1 (and :op (星球 :mod 整个) :op (人 :mod 所有)) :manner 一眼) :arg0 我) :manner 自言自语 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),说道,说道-01,false), Span(16,17,List(1),可以,可以-03,false), Span(17,18,List(2),看到,看到-01,false), Span(9,10,List(3),高,高-01,false), Span(8,9,List(4),这么,这么,false), Span(20,21,List(5),星球,星球,false), Span(25,26,List(6),人,人,false), Span(23,24,List(7),所有,所有,false), Span(15,16,List(8),一眼,一眼,false), Span(14,15,List(9),我,我,false), Span(2,3,List(10),自言自语,自言自语,false), Span(1,2,List(11),王子,王子,false), Span(0,1,List(12),小,小-01,false)),Map(2 -> 看到-01, 5 -> 星球, 12 -> 小-01, 8 -> 一眼, 7 -> 所有, 1 -> 可以-03, 4 -> 这么, 11 -> 王子, 6 -> 人, 9 -> 我, 0 -> 说道-01, 10 -> 自言自语, 3 -> 高-01),Map(x16 -> 高-01, x2 -> 王子, x5 -> 可以-03, x13 -> 人, x8 -> 看到-01, x7 -> 我, x4 -> 自言自语, x3 -> 小-01, x11 -> 星球, x14 -> 所有, x9 -> 一眼, x17 -> 这么, x0 -> 说道-01))),[Ljava.lang.String;@7d78f3d5,Annotation([Ljava.lang.String;@a4b5ce3,[Ljava.lang.String;@f5b6e78,[Ljava.lang.String;@4b4eced1),Annotation([Ljava.lang.String;@71926a36,[Ljava.lang.String;@216e9ca3,[Ledu.cmu.lti.nlp.amr.Dependency;@75120e58),Annotation([Ljava.lang.String;@48976e6d,[Ljava.lang.String;@2a367e93,[Ljava.lang.String;@7f6874f2),Annotation([Ljava.lang.String;@1a6dc589,[Ljava.lang.String;@697a34af,[Ledu.cmu.lti.nlp.amr.Entity;@70211df5))
AMR:
(x0 / 说道-01, manner, x4 / 自言自语)
(x0 / 说道-01, purpose, x17 / 这么)
(x11 / 星球, poss, x5 / 可以-03)
(x13 / 人, location, x11 / 星球)
(x13 / 人, mod, x14 / 所有)
(x16 / 高-01, mod, x17 / 这么)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 自言自语, value, x2 / 王子)
(x5 / 可以-03, poss, x7 / 我)
(x8 / 看到-01, manner, x5 / 可以-03)
(x8 / 看到-01, manner, x9 / 一眼)
(x9 / 一眼, mod, x17 / 这么)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2.0
WARNING: makeIds can't find span Id: 0.2.1.2.0.0
WARNING: makeIds can't find span Id: 0.2.1.1.0
WARNING: makeIds can't find span Id: 0.2.1.1.1
WARNING: makeIds can't find span Id: 0.2.1.1.1.0
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 57,063 microseconds
Sentence: 可是 ， 他 所 看到 的 只 是 一些 非常 锋利 的 悬崖 峭壁 。

Oracle Span 1:  一些 => 一些
Oracle Span 2:  他 => 他
Oracle Span 3:  只 => 只
Oracle Span 4:  峭壁 => 峭壁
Oracle Span 5:  悬崖 => 悬崖
Oracle Span 6:  看到 => 看到-01
Oracle Span 7:  锋利 => 锋利-01
Oracle Span 8:  非常 => 非常-01
Spans:
Span 8-9:  一些 => 一些
Span 2-3:  他 => 他
Span 6-7:  只 => 只
Span 13-14:  峭壁 => 峭壁
Span 12-13:  悬崖 => 悬崖
Span 4-5:  看到 => 看到-01
Span 10-11:  锋利 => 锋利-01
Span 9-10:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一些 => 一些
Oracle Span 2-3:  他 => 他
Oracle Span 6-7:  只 => 只
Oracle Span 13-14:  峭壁 => 峭壁
Oracle Span 12-13:  悬崖 => 悬崖
Oracle Span 4-5:  看到 => 看到-01
Oracle Span 10-11:  锋利 => 锋利-01
Oracle Span 9-10:  非常 => 非常-01

Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	所	_	MSP	MSP	_	5	prtmod	_	_
5	看到	_	VV	VV	_	8	nsubj	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	一些	_	CD	CD	_	14	nummod	_	_
10	非常	_	AD	AD	_	11	advmod	_	_
11	锋利	_	VA	VA	_	14	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	悬崖	_	NN	NN	_	14	nn	_	_
14	峭壁	_	NN	NN	_	8	attr	_	_
15	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x14 / 峭壁, manner, x18 / 只)
(x14 / 峭壁, mod, x15 / 锋利-01)
(x14 / 峭壁, quant, x17 / 一些)
(x15 / 锋利-01, degree, x16 / 非常-01)
(x2 / 看到-01, arg0, x3 / 他)

Input(Some(Graph((contrast :arg2 (看到-01 :arg1 (thing :domain-of (and :op 悬崖 :op (峭壁 :manner 只 :quant 一些 :mod (锋利-01 :degree 非常-01)))) :arg0 他)),ArrayBuffer(Span(4,5,List(0),看到,看到-01,false), Span(12,13,List(1),悬崖,悬崖,false), Span(13,14,List(2),峭壁,峭壁,false), Span(6,7,List(3),只,只,false), Span(8,9,List(4),一些,一些,false), Span(10,11,List(5),锋利,锋利-01,false), Span(9,10,List(6),非常,非常-01,false), Span(2,3,List(7),他,他,false)),Map(2 -> 峭壁, 5 -> 锋利-01, 7 -> 他, 1 -> 悬崖, 4 -> 一些, 6 -> 非常-01, 0 -> 看到-01, 3 -> 只),Map(x16 -> 非常-01, x2 -> 看到-01, x13 -> 悬崖, x15 -> 锋利-01, x18 -> 只, x3 -> 他, x14 -> 峭壁, x17 -> 一些))),[Ljava.lang.String;@4c5228e7,Annotation([Ljava.lang.String;@38e7ed69,[Ljava.lang.String;@806996,[Ljava.lang.String;@78b612c6),Annotation([Ljava.lang.String;@257e0827,[Ljava.lang.String;@22752544,[Ledu.cmu.lti.nlp.amr.Dependency;@21ba2445),Annotation([Ljava.lang.String;@69d23296,[Ljava.lang.String;@3c3820bb,[Ljava.lang.String;@376c7d7d),Annotation([Ljava.lang.String;@4784efd9,[Ljava.lang.String;@3fba233d,[Ledu.cmu.lti.nlp.amr.Entity;@427ae189))
AMR:
(x14 / 峭壁, manner, x18 / 只)
(x14 / 峭壁, mod, x15 / 锋利-01)
(x14 / 峭壁, quant, x17 / 一些)
(x15 / 锋利-01, ARG3, x13 / 悬崖)
(x15 / 锋利-01, degree, x16 / 非常-01)
(x18 / 只, ARG4, x2 / 看到-01)
(x2 / 看到-01, ARG6, x3 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,570 microseconds
Sentence: “ 你 好 。 ” 小 王子 试探 地 问道 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  试探 => 试探-01
Oracle Span 4:  问道 => 问道-01
Spans:
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  试探 => 试探-01
Span 9-10:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  试探 => 试探-01
Oracle Span 9-10:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	10	nsubj	_	_
8	试探	_	VA	VA	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	问道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 问道-01, manner, x2 / 试探-01)
(x2 / 试探-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((问道-01 :arg1 你好 :arg0 x3 :manner (试探-01 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(9,10,List(0),问道,问道-01,false), Span(7,8,List(1),试探,试探-01,false), Span(6,7,List(2),王子,王子,false), Span(5,6,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 试探-01, 0 -> 问道-01, 3 -> 小-01),Map(x2 -> 试探-01, x4 -> 小-01, x3 -> 王子, x0 -> 问道-01))),[Ljava.lang.String;@16a9eb2e,Annotation([Ljava.lang.String;@76332405,[Ljava.lang.String;@187e5235,[Ljava.lang.String;@d1d8e1a),Annotation([Ljava.lang.String;@5434e40c,[Ljava.lang.String;@3b48e183,[Ledu.cmu.lti.nlp.amr.Dependency;@514de325),Annotation([Ljava.lang.String;@30c1da48,[Ljava.lang.String;@43a65cd8,[Ljava.lang.String;@3f1ef9d6),Annotation([Ljava.lang.String;@17461db,[Ljava.lang.String;@3fd9e827,[Ledu.cmu.lti.nlp.amr.Entity;@4e682398))
AMR:
(x0 / 问道-01, manner, x2 / 试探-01)
(x2 / 试探-01, beneficiary, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,304 microseconds
Sentence: “ 你 好 … 你 好 … 你 好 … ” 回音 在 回答 道 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  回音 => 回音
Spans:
Span 13-14:  回答 => 回答-01
Span 11-12:  回音 => 回音

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  回答 => 回答-01
Oracle Span 11-12:  回音 => 回音

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VV	VV	_	0	root	_	_
4	…	_	PU	PU	_	3	punct	_	_
5	你	_	PN	PN	_	6	nsubj	_	_
6	好	_	VA	VA	_	3	conj	_	_
7	…	_	PU	PU	_	3	punct	_	_
8	你	_	PN	PN	_	9	nsubj	_	_
9	好	_	VV	VV	_	3	conj	_	_
10	…	_	PU	PU	_	15	punct	_	_
11	”	_	PU	PU	_	12	punct	_	_
12	回音	_	NT	NT	_	15	nn	_	_
13	在	_	AD	AD	_	14	advmod	_	_
14	回答	_	VV	VV	_	15	rcmod	_	_
15	道	_	NN	NN	_	9	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)

Input(Some(Graph((回答-01 :arg2 (and :op 你好 :op 你好 :op 你好) :arg0 回音),ArrayBuffer(Span(13,14,List(0),回答,回答-01,false), Span(11,12,List(1),回音,回音,false)),Map(1 -> 回音, 0 -> 回答-01),Map(x2 -> 回音, x0 -> 回答-01))),[Ljava.lang.String;@670b3ca,Annotation([Ljava.lang.String;@24a86066,[Ljava.lang.String;@54402c04,[Ljava.lang.String;@5b3bb1f7),Annotation([Ljava.lang.String;@58d6b7b9,[Ljava.lang.String;@3f1a4795,[Ledu.cmu.lti.nlp.amr.Dependency;@6a6f6c7e),Annotation([Ljava.lang.String;@6c5ddccd,[Ljava.lang.String;@1dbd580,[Ljava.lang.String;@6c101cc1),Annotation([Ljava.lang.String;@7d0d91a1,[Ljava.lang.String;@7fb48179,[Ledu.cmu.lti.nlp.amr.Entity;@201c3cda))
AMR:
(x0 / 回答-01, degree, x2 / 回音)

WARNING: makeIds can't find span Id: 0.0
Decoded in 4,304 microseconds
Sentence: “ 你们 是 什么 人 ？ ” 小 王子 问 。

Oracle Span 1:  人 => 人
Oracle Span 2:  你们 => 你们
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  问 => 问-01
Spans:
Span 4-5:  人 => 人
Span 1-2:  你们 => 你们
Span 7-8:  小 => 小-01
Span 8-9:  王子 => 王子
Span 9-10:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  问 => 问-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	9	conj	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	人	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	VA	VA	_	9	dep	_	_
9	王子	_	VV	VV	_	0	root	_	_
10	问	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 王子)
(x0 / 问-01, arg1, x4 / 人)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 人, domain, x6 / 你们)

Input(Some(Graph((问-01 :mode interrogative :arg1 (人 :domain 你们 :mod amr-unknown) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),问,问-01,false), Span(4,5,List(1),人,人,false), Span(1,2,List(2),你们,你们,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小-01,false)),Map(2 -> 你们, 1 -> 人, 4 -> 小-01, 0 -> 问-01, 3 -> 王子),Map(x2 -> 王子, x4 -> 人, x3 -> 小-01, x6 -> 你们, x0 -> 问-01))),[Ljava.lang.String;@4c86da0c,Annotation([Ljava.lang.String;@5d97caa4,[Ljava.lang.String;@6732726,[Ljava.lang.String;@474821de),Annotation([Ljava.lang.String;@3d64c581,[Ljava.lang.String;@5ec5ea63,[Ledu.cmu.lti.nlp.amr.Dependency;@4190bc8a),Annotation([Ljava.lang.String;@47d023b7,[Ljava.lang.String;@5c83ae01,[Ljava.lang.String;@2d64c100),Annotation([Ljava.lang.String;@69d45cca,[Ljava.lang.String;@2fdf17dc,[Ledu.cmu.lti.nlp.amr.Entity;@6e6d4780))
AMR:
(x0 / 问-01, ARG1, x2 / 王子)
(x0 / 问-01, degree, x4 / 人)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 人, domain, x6 / 你们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,729 microseconds
Sentence: “ 你们 是 什么 人 … 你们 是 什么 人 … 你们 是 什么 人 … ” 回音 又 回答 道 。

Oracle Span 1:  人 => 人
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  你们 => 你们
Oracle Span 5:  你们 => 你们
Oracle Span 6:  你们 => 你们
Oracle Span 7:  又 => 又
Oracle Span 8:  回答 => 回答-01
Oracle Span 9:  回音 => 回音
Spans:
Span 4-5:  人 => 人
Span 9-10:  人 => 人
Span 14-15:  人 => 人
Span 1-2:  你们 => 你们
Span 6-7:  你们 => 你们
Span 11-12:  你们 => 你们
Span 18-19:  又 => 又
Span 19-20:  回答 => 回答-01
Span 17-18:  回音 => 回音

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 9-10:  人 => 人
Oracle Span 14-15:  人 => 人
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  你们 => 你们
Oracle Span 11-12:  你们 => 你们
Oracle Span 18-19:  又 => 又
Oracle Span 19-20:  回答 => 回答-01
Oracle Span 17-18:  回音 => 回音

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	人	_	NN	NN	_	3	attr	_	_
6	…	_	PU	PU	_	3	punct	_	_
7	你们	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	3	conj	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	人	_	NN	NN	_	8	attr	_	_
11	…	_	PU	PU	_	3	punct	_	_
12	你们	_	PN	PN	_	13	top	_	_
13	是	_	VC	VC	_	3	conj	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	人	_	NN	NN	_	21	dep	_	_
16	…	_	PU	PU	_	21	punct	_	_
17	”	_	PU	PU	_	18	punct	_	_
18	回音	_	NT	NT	_	21	nn	_	_
19	又	_	AD	AD	_	20	advmod	_	_
20	回答	_	VV	VV	_	21	rcmod	_	_
21	道	_	NN	NN	_	13	attr	_	_
22	。	_	PU	PU	_	3	punct	_	_
23	回答	_	VV	VV	_	18	rcmod	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x12 / 人, domain, x15 / 你们)
(x5 / 人, domain, x7 / 你们)
(x8 / 人, domain, x11 / 你们)

Input(Some(Graph((回答-01 :mode interrogative :arg2 (and :op (人 :domain 你们 :mod amr-unknown) :op (人 :domain 你们 :mod amr-unknown) :op (人 :domain 你们 :mod amr-unnown)) :manner 又 :arg0 回音),ArrayBuffer(Span(19,20,List(0),回答,回答-01,false), Span(4,5,List(1),人,人,false), Span(1,2,List(2),你们,你们,false), Span(9,10,List(3),人,人,false), Span(6,7,List(4),你们,你们,false), Span(14,15,List(5),人,人,false), Span(11,12,List(6),你们,你们,false), Span(18,19,List(7),又,又,false), Span(17,18,List(8),回音,回音,false)),Map(2 -> 你们, 5 -> 人, 8 -> 回音, 7 -> 又, 1 -> 人, 4 -> 你们, 6 -> 你们, 0 -> 回答-01, 3 -> 人),Map(x2 -> 回音, x5 -> 人, x8 -> 人, x12 -> 人, x15 -> 你们, x7 -> 你们, x3 -> 又, x11 -> 你们, x0 -> 回答-01))),[Ljava.lang.String;@650ae78c,Annotation([Ljava.lang.String;@2e73d5eb,[Ljava.lang.String;@79c5460e,[Ljava.lang.String;@7d904ff1),Annotation([Ljava.lang.String;@4f94e148,[Ljava.lang.String;@7ff8a9dc,[Ledu.cmu.lti.nlp.amr.Dependency;@2cde651b),Annotation([Ljava.lang.String;@534e58b6,[Ljava.lang.String;@3bb87d36,[Ljava.lang.String;@1b495d4),Annotation([Ljava.lang.String;@5e1dde44,[Ljava.lang.String;@7f37b6d9,[Ledu.cmu.lti.nlp.amr.Entity;@71e35c4))
AMR:
(x0 / 回答-01, degree, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x12 / 人, domain, x15 / 你们)
(x2 / 回音, domain, x12 / 人)
(x5 / 人, domain, x7 / 你们)
(x5 / 人, location, x11 / 你们)
(x8 / 人, domain, x11 / 你们)
(x8 / 人, location, x15 / 你们)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 26,109 microseconds
Sentence: “ 请 你们 做 我 的 朋友 吧 ，

Oracle Span 1:  你们 => 你们
Oracle Span 2:  做 => 做-02
Oracle Span 3:  我 => 我
Oracle Span 4:  朋友 => 朋友
Oracle Span 5:  请 => 请-01
Spans:
Span 2-3:  你们 => 你们
Span 3-4:  做 => 做-02
Span 4-5:  我 => 我
Span 6-7:  朋友 => 朋友
Span 1-2:  请 => 请-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 3-4:  做 => 做-02
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 1-2:  请 => 请-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	请	_	VV	VV	_	0	root	_	_
3	你们	_	PN	PN	_	2	dobj	_	_
4	做	_	VV	VV	_	2	dep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	朋友	_	NN	NN	_	4	dobj	_	_
8	吧	_	SP	SP	_	4	dep	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 请-01, arg1, x11 / 你们)
(x10 / 请-01, arg2, x12 / 做-02)
(x12 / 做-02, arg1, x14 / 朋友)
(x14 / 朋友, poss, x15 / 我)

Input(Some(Graph((say :arg1 (请-01 :arg2 (做-02 :arg1 (朋友 :poss 我) :arg0 x11) :arg1 你们)),ArrayBuffer(Span(1,2,List(0),请,请-01,false), Span(3,4,List(1),做,做-02,false), Span(6,7,List(2),朋友,朋友,false), Span(4,5,List(3),我,我,false), Span(2,3,List(4),你们,你们,false)),Map(2 -> 朋友, 1 -> 做-02, 4 -> 你们, 0 -> 请-01, 3 -> 我),Map(x10 -> 请-01, x12 -> 做-02, x15 -> 我, x11 -> 你们, x14 -> 朋友))),[Ljava.lang.String;@22a10ac6,Annotation([Ljava.lang.String;@12fe1f28,[Ljava.lang.String;@503df2d0,[Ljava.lang.String;@26fb4d06),Annotation([Ljava.lang.String;@c269425,[Ljava.lang.String;@6e43ddd6,[Ledu.cmu.lti.nlp.amr.Dependency;@51d719bc),Annotation([Ljava.lang.String;@2d38edfd,[Ljava.lang.String;@1507c3c3,[Ljava.lang.String;@655a01d8),Annotation([Ljava.lang.String;@c29fe36,[Ljava.lang.String;@6614bd4b,[Ledu.cmu.lti.nlp.amr.Entity;@4d266391))
AMR:
(x10 / 请-01, extent, x12 / 做-02)
(x10 / 请-01, location, x11 / 你们)
(x12 / 做-02, subset, x15 / 我)
(x14 / 朋友, domain, x12 / 做-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,597 microseconds
Sentence: 我 很 孤独 。 ” 他 说 。

Oracle Span 1:  他 => 他
Oracle Span 2:  孤独 => 孤独-01
Oracle Span 3:  很 => 很
Oracle Span 4:  说 => 说-01
Spans:
Span 5-6:  他 => 他
Span 2-3:  孤独 => 孤独-01
Span 1-2:  很 => 很
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 2-3:  孤独 => 孤独-01
Oracle Span 1-2:  很 => 很
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	孤独	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	AD	AD	_	7	advmod	_	_
6	他	_	PN	PN	_	7	nsubj	_	_
7	说	_	VV	VV	_	3	conj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 孤独-01)
(x3 / 孤独-01, degree, x4 / 很)

Input(Some(Graph((说-01 :arg1 (孤独-01 :arg0 x2 :degree 很) :arg0 他),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(2,3,List(1),孤独,孤独-01,false), Span(1,2,List(2),很,很,false), Span(5,6,List(3),他,他,false)),Map(2 -> 很, 1 -> 孤独-01, 0 -> 说-01, 3 -> 他),Map(x2 -> 他, x4 -> 很, x3 -> 孤独-01, x0 -> 说-01))),[Ljava.lang.String;@7847ef2c,Annotation([Ljava.lang.String;@3b5c665c,[Ljava.lang.String;@78e17a99,[Ljava.lang.String;@625a4ff),Annotation([Ljava.lang.String;@41dc0598,[Ljava.lang.String;@196ae579,[Ledu.cmu.lti.nlp.amr.Dependency;@6a2c717f),Annotation([Ljava.lang.String;@41853299,[Ljava.lang.String;@60d40ff4,[Ljava.lang.String;@2e5b7fba),Annotation([Ljava.lang.String;@27755487,[Ljava.lang.String;@4f0cab0a,[Ledu.cmu.lti.nlp.amr.Entity;@fe7b6b0))
AMR:
(x0 / 说-01, decade, x2 / 他)
(x0 / 说-01, decade, x3 / 孤独-01)
(x3 / 孤独-01, degree, x4 / 很)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,093 microseconds
Sentence: “ 我 很 孤独 … 我 很 孤独 … 我 很 孤独 … ” 回音 又 回答 着 。

Oracle Span 1:  又 => 又
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  回音 => 回音
Oracle Span 4:  孤独 => 孤独-01
Oracle Span 5:  孤独 => 孤独-01
Oracle Span 6:  孤独 => 孤独-01
Oracle Span 7:  很 => 很
Oracle Span 8:  很 => 很
Oracle Span 9:  很 => 很
Oracle Span 10:  我 => 我
Oracle Span 11:  我 => 我
Oracle Span 12:  我 => 我
Spans:
Span 15-16:  又 => 又
Span 16-17:  回答 => 回答-01
Span 14-15:  回音 => 回音
Span 3-4:  孤独 => 孤独-01
Span 7-8:  孤独 => 孤独-01
Span 11-12:  孤独 => 孤独-01
Span 2-3:  很 => 很
Span 6-7:  很 => 很
Span 10-11:  很 => 很
Span 1-2:  我 => 我
Span 5-6:  我 => 我
Span 9-10:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  又 => 又
Oracle Span 16-17:  回答 => 回答-01
Oracle Span 14-15:  回音 => 回音
Oracle Span 3-4:  孤独 => 孤独-01
Oracle Span 7-8:  孤独 => 孤独-01
Oracle Span 11-12:  孤独 => 孤独-01
Oracle Span 2-3:  很 => 很
Oracle Span 6-7:  很 => 很
Oracle Span 10-11:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  我 => 我
Oracle Span 9-10:  我 => 我

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	孤独	_	VV	VV	_	15	vmod	_	_
5	…	_	PU	PU	_	8	punct	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	孤独	_	NN	NN	_	4	dep	_	_
9	…	_	PU	PU	_	12	punct	_	_
10	我	_	PN	PN	_	12	nn	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	孤独	_	NN	NN	_	8	prnmod	_	_
13	…	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	4	punct	_	_
15	回音	_	NN	NN	_	17	nsubj	_	_
16	又	_	AD	AD	_	17	advmod	_	_
17	回答	_	VV	VV	_	0	root	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x11 / 孤独-01, arg0, x13 / 我)
(x11 / 孤独-01, degree, x12 / 很)
(x5 / 孤独-01, arg0, x7 / 我)
(x5 / 孤独-01, degree, x6 / 很)
(x8 / 孤独-01, arg0, x10 / 我)
(x8 / 孤独-01, degree, x9 / 很)

Input(Some(Graph((回答-01 :arg2 (and :op (孤独-01 :arg0 我 :degree 很) :op (孤独-01 :arg0 我 :degree 很) :op (孤独-01 :arg0 我 :degree 很)) :manner 又 :arg0 回音),ArrayBuffer(Span(16,17,List(0),回答,回答-01,false), Span(3,4,List(1),孤独,孤独-01,false), Span(1,2,List(2),我,我,false), Span(2,3,List(3),很,很,false), Span(7,8,List(4),孤独,孤独-01,false), Span(5,6,List(5),我,我,false), Span(6,7,List(6),很,很,false), Span(11,12,List(7),孤独,孤独-01,false), Span(9,10,List(8),我,我,false), Span(10,11,List(9),很,很,false), Span(15,16,List(10),又,又,false), Span(14,15,List(11),回音,回音,false)),Map(2 -> 我, 5 -> 我, 8 -> 我, 7 -> 孤独-01, 1 -> 孤独-01, 4 -> 孤独-01, 11 -> 回音, 6 -> 很, 9 -> 很, 0 -> 回答-01, 10 -> 又, 3 -> 很),Map(x10 -> 我, x2 -> 回音, x5 -> 孤独-01, x13 -> 我, x8 -> 孤独-01, x12 -> 很, x7 -> 我, x3 -> 又, x11 -> 孤独-01, x6 -> 很, x9 -> 很, x0 -> 回答-01))),[Ljava.lang.String;@7ab4ae59,Annotation([Ljava.lang.String;@77681ce4,[Ljava.lang.String;@5d96bdf8,[Ljava.lang.String;@6f76c2cc),Annotation([Ljava.lang.String;@306f6f1d,[Ljava.lang.String;@7d7cac8,[Ledu.cmu.lti.nlp.amr.Dependency;@6fc6deb7),Annotation([Ljava.lang.String;@367f0121,[Ljava.lang.String;@7da39774,[Ljava.lang.String;@441b8382),Annotation([Ljava.lang.String;@1df1ced0,[Ljava.lang.String;@5349b246,[Ledu.cmu.lti.nlp.amr.Entity;@32b0876c))
AMR:
(x0 / 回答-01, degree, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x11 / 孤独-01, degree, x12 / 很)
(x11 / 孤独-01, degree, x13 / 我)
(x11 / 孤独-01, degree, x2 / 回音)
(x5 / 孤独-01, degree, x6 / 很)
(x5 / 孤独-01, degree, x7 / 我)
(x5 / 孤独-01, degree, x9 / 很)
(x8 / 孤独-01, degree, x10 / 我)
(x8 / 孤独-01, degree, x12 / 很)
(x8 / 孤独-01, degree, x9 / 很)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 36,633 microseconds
Sentence: 小 王子 想道 ： “ 这 颗 行星 真 奇怪 ！

Oracle Span 1:  奇怪 => 奇怪-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  真 => 真
Oracle Span 5:  行星 => 行星
Oracle Span 6:  这 => 这
Spans:
Span 9-10:  奇怪 => 奇怪-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 8-9:  真 => 真
Span 7-8:  行星 => 行星
Span 5-6:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  奇怪 => 奇怪-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 8-9:  真 => 真
Oracle Span 7-8:  行星 => 行星
Oracle Span 5-6:  这 => 这

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	想道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	10	punct	_	_
6	这	_	DT	DT	_	8	det	_	_
7	颗	_	M	M	_	6	clf	_	_
8	行星	_	NN	NN	_	10	nsubj	_	_
9	真	_	AD	AD	_	10	advmod	_	_
10	奇怪	_	VA	VA	_	3	ccomp	_	_
11	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 王子, mod, x15 / 小-01)
(x16 / 奇怪-01, arg0, x18 / 行星)
(x16 / 奇怪-01, degree, x17 / 真)
(x18 / 行星, mod, x19 / 这)

Input(Some(Graph((想-01 :arg0 (王子 :mod 小-01) :arg1 (奇怪-01 :arg0 (行星 :mod 这) :degree 真) :mode expressive),ArrayBuffer(Span(1,2,List(0),王子,王子,false), Span(0,1,List(1),小,小-01,false), Span(9,10,List(2),奇怪,奇怪-01,false), Span(7,8,List(3),行星,行星,false), Span(5,6,List(4),这,这,false), Span(8,9,List(5),真,真,false)),Map(2 -> 奇怪-01, 5 -> 真, 1 -> 小-01, 4 -> 这, 0 -> 王子, 3 -> 行星),Map(x16 -> 奇怪-01, x19 -> 这, x15 -> 小-01, x18 -> 行星, x14 -> 王子, x17 -> 真))),[Ljava.lang.String;@2aaf152b,Annotation([Ljava.lang.String;@39bbd9e0,[Ljava.lang.String;@27fe9713,[Ljava.lang.String;@11c3ff67),Annotation([Ljava.lang.String;@4397a639,[Ljava.lang.String;@24841372,[Ledu.cmu.lti.nlp.amr.Dependency;@77114efe),Annotation([Ljava.lang.String;@79a7bfbc,[Ljava.lang.String;@77f68df,[Ljava.lang.String;@3e4e4c1),Annotation([Ljava.lang.String;@7e7f3cfd,[Ljava.lang.String;@3ae126d1,[Ledu.cmu.lti.nlp.amr.Entity;@46a488c2))
AMR:
(x14 / 王子, mod, x15 / 小-01)
(x16 / 奇怪-01, degree, x17 / 真)
(x16 / 奇怪-01, time, x18 / 行星)
(x18 / 行星, mod, x19 / 这)
(x18 / 行星, poss, x14 / 王子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 11,320 microseconds
Sentence: 它 上面 全 是 干巴巴 的 ， 而且 又 尖利 又 咸涩 ，

Oracle Span 1:  上面 => 上面
Oracle Span 2:  咸涩 => 咸涩
Oracle Span 3:  它 => 它
Oracle Span 4:  尖利 => 尖利-01
Oracle Span 5:  干巴巴 => 干巴巴
Spans:
Span 1-2:  上面 => 上面
Span 11-12:  咸涩 => 咸涩
Span 0-1:  它 => 它
Span 9-10:  尖利 => 尖利-01
Span 4-5:  干巴巴 => 干巴巴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  上面 => 上面
Oracle Span 11-12:  咸涩 => 咸涩
Oracle Span 0-1:  它 => 它
Oracle Span 9-10:  尖利 => 尖利-01
Oracle Span 4-5:  干巴巴 => 干巴巴

Dependencies:
1	它	_	PN	PN	_	4	nsubj	_	_
2	上面	_	NN	NN	_	4	nsubj	_	_
3	全	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	干巴巴	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	而且	_	CC	CC	_	4	cc	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	尖利	_	AD	AD	_	12	advmod	_	_
11	又	_	AD	AD	_	12	advmod	_	_
12	咸涩	_	VV	VV	_	4	dep	_	_
13	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x26 / 上面, poss, x27 / 它)

Input(Some(Graph((and :op 干巴巴 :op (and :op 尖利-01 :op 咸涩) :domain (上面 :poss 它)),ArrayBuffer(Span(4,5,List(0),干巴巴,干巴巴,false), Span(9,10,List(1),尖利,尖利-01,false), Span(11,12,List(2),咸涩,咸涩,false), Span(1,2,List(3),上面,上面,false), Span(0,1,List(4),它,它,false)),Map(2 -> 咸涩, 1 -> 尖利-01, 4 -> 它, 0 -> 干巴巴, 3 -> 上面),Map(x22 -> 干巴巴, x25 -> 咸涩, x27 -> 它, x24 -> 尖利-01, x26 -> 上面))),[Ljava.lang.String;@6242ae3b,Annotation([Ljava.lang.String;@65ddee5a,[Ljava.lang.String;@56399b9e,[Ljava.lang.String;@34b9eb03),Annotation([Ljava.lang.String;@43fda8d9,[Ljava.lang.String;@49d831c2,[Ledu.cmu.lti.nlp.amr.Dependency;@53a7a60c),Annotation([Ljava.lang.String;@28bdbe88,[Ljava.lang.String;@6a87026,[Ljava.lang.String;@ef60710),Annotation([Ljava.lang.String;@600f5704,[Ljava.lang.String;@2503ec73,[Ledu.cmu.lti.nlp.amr.Entity;@606f81b5))
AMR:
(x22 / 干巴巴, age, x27 / 它)
(x25 / 咸涩, domain, x27 / 它)
(x25 / 咸涩, mod, x24 / 尖利-01)
(x26 / 上面, poss, x27 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 10,221 microseconds
Sentence: 人们 一点 想象力 都 没有 。

Oracle Span 1:  一点 => 一点
Oracle Span 2:  想象力 => 想象力
Spans:
Span 1-2:  一点 => 一点
Span 2-3:  想象力 => 想象力

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点
Oracle Span 2-3:  想象力 => 想象力

Dependencies:
1	人们	_	NN	NN	_	3	nsubj	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	想象力	_	VV	VV	_	0	root	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	人们	_	NN	NN	_	5	xsubj	_	_

Oracle:
(x10 / 想象力, quant, x11 / 一点)

Input(Some(Graph((有-01 :polarity - :arg0 大人 :arg1 (想象力 :quant 一点)),ArrayBuffer(Span(2,3,List(0),想象力,想象力,false), Span(1,2,List(1),一点,一点,false)),Map(1 -> 一点, 0 -> 想象力),Map(x10 -> 想象力, x11 -> 一点))),[Ljava.lang.String;@5e1fc42f,Annotation([Ljava.lang.String;@44b21f9f,[Ljava.lang.String;@7ee8130e,[Ljava.lang.String;@6296474f),Annotation([Ljava.lang.String;@4288d98e,[Ljava.lang.String;@169268a7,[Ledu.cmu.lti.nlp.amr.Dependency;@285c6918),Annotation([Ljava.lang.String;@78a0ff63,[Ljava.lang.String;@7c601d50,[Ljava.lang.String;@79b2852b),Annotation([Ljava.lang.String;@326d27ac,[Ljava.lang.String;@4d499d65,[Ledu.cmu.lti.nlp.amr.Entity;@313f8301))
AMR:
(x10 / 想象力, quant, x11 / 一点)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 3,099 microseconds
Sentence: 他们 只 是 重复 别人 对 他们 说 的 话 …

Oracle Span 1:  他们 => 他们
Oracle Span 2:  别人 => 别人
Oracle Span 3:  话 => 话
Oracle Span 4:  说 => 说-01
Oracle Span 5:  重复 => 重复-01
Spans:
Span 0-1:  他们 => 他们
Span 4-5:  别人 => 别人
Span 9-10:  话 => 话
Span 7-8:  说 => 说-01
Span 3-4:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 4-5:  别人 => 别人
Oracle Span 9-10:  话 => 话
Oracle Span 7-8:  说 => 说-01
Oracle Span 3-4:  重复 => 重复-01

Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	只	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	重复	_	JJ	JJ	_	5	amod	_	_
5	别人	_	NN	NN	_	8	nsubj	_	_
6	对	_	P	P	_	8	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	说	_	VV	VV	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	话	_	NN	NN	_	11	nn	_	_
11	…	_	NN	NN	_	3	attr	_	_

Oracle:
(x0 / 重复-01, arg0, x2 / 他们)
(x0 / 重复-01, arg1, x4 / 话)
(x5 / 说-01, arg0, x6 / 别人)
(x5 / 说-01, arg1, x4 / 话)

Input(Some(Graph((重复-01 :arg1 (话 :arg1-of (说-01 :arg3 x2 :arg0 别人)) :manner 只是 :arg0 他们),ArrayBuffer(Span(3,4,List(0),重复,重复-01,false), Span(9,10,List(1),话,话,false), Span(7,8,List(2),说,说-01,false), Span(4,5,List(3),别人,别人,false), Span(0,1,List(4),他们,他们,false)),Map(2 -> 说-01, 1 -> 话, 4 -> 他们, 0 -> 重复-01, 3 -> 别人),Map(x2 -> 他们, x5 -> 说-01, x4 -> 话, x6 -> 别人, x0 -> 重复-01))),[Ljava.lang.String;@5cc9d3d0,Annotation([Ljava.lang.String;@7c2dfa2,[Ljava.lang.String;@661d88a,[Ljava.lang.String;@4b0b64cc),Annotation([Ljava.lang.String;@59ce792e,[Ljava.lang.String;@4860827a,[Ledu.cmu.lti.nlp.amr.Dependency;@404db674),Annotation([Ljava.lang.String;@50f097b5,[Ljava.lang.String;@7add838c,[Ljava.lang.String;@3662bdff),Annotation([Ljava.lang.String;@1bb15351,[Ljava.lang.String;@4fa822ad,[Ledu.cmu.lti.nlp.amr.Entity;@597f0937))
AMR:
(x0 / 重复-01, source, x2 / 他们)
(x0 / 重复-01, year, x6 / 别人)
(x5 / 说-01, manner, x0 / 重复-01)
(x5 / 说-01, prep-along-with, x4 / 话)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,916 microseconds
Sentence: 在 我 的 家乡 ， 我 有 一 朵 花 。 她 总是 自己 先 说话 … ”

Oracle Span 1:  先 => 先
Oracle Span 2:  家乡 => 家乡
Oracle Span 3:  总是 => 总是
Oracle Span 4:  我 => 我
Oracle Span 5:  有 => 有-01
Oracle Span 6:  花 => 花
Oracle Span 7:  说话 => 说话-01
Spans:
Span 14-15:  先 => 先
Span 3-4:  家乡 => 家乡
Span 12-13:  总是 => 总是
Span 1-2:  我 => 我
Span 6-7:  有 => 有-01
Span 9-10:  花 => 花
Span 15-16:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  先 => 先
Oracle Span 3-4:  家乡 => 家乡
Oracle Span 12-13:  总是 => 总是
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  有 => 有-01
Oracle Span 9-10:  花 => 花
Oracle Span 15-16:  说话 => 说话-01

Dependencies:
1	在	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	家乡	_	NN	NN	_	1	pobj	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	我	_	PN	PN	_	7	top	_	_
7	有	_	VE	VE	_	0	root	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	朵	_	M	M	_	10	clf	_	_
10	花	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	7	punct	_	_
12	她	_	PN	PN	_	13	nn	_	_
13	总是	_	NN	NN	_	16	nsubj	_	_
14	自己	_	PN	PN	_	16	nsubj	_	_
15	先	_	AD	AD	_	16	advmod	_	_
16	说话	_	VV	VV	_	7	conj	_	_
17	…	_	PU	PU	_	7	punct	_	_
18	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x17 / 有-01, arg0, x18 / 我)
(x17 / 有-01, arg1, x19 / 花)
(x17 / 有-01, location, x21 / 家乡)
(x23 / 说话-01, manner, x25 / 先)
(x23 / 说话-01, manner, x26 / 总是)

Input(Some(Graph((say :arg1 (multi-sentence :snt1 (有-01 :location (家乡 :poss x18) :arg1 (花 :quant 1) :arg0 我) :snt2 (说话-01 :manner 总是 :manner 先 :arg0 x19))),ArrayBuffer(Span(6,7,List(0),有,有-01,false), Span(3,4,List(1),家乡,家乡,false), Span(9,10,List(2),花,花,false), Span(1,2,List(3),我,我,false), Span(15,16,List(4),说话,说话-01,false), Span(12,13,List(5),总是,总是,false), Span(14,15,List(6),先,先,false)),Map(2 -> 花, 5 -> 总是, 1 -> 家乡, 4 -> 说话-01, 6 -> 先, 0 -> 有-01, 3 -> 我),Map(x25 -> 先, x19 -> 花, x21 -> 家乡, x18 -> 我, x23 -> 说话-01, x26 -> 总是, x17 -> 有-01))),[Ljava.lang.String;@7ad1caa2,Annotation([Ljava.lang.String;@6b6b3572,[Ljava.lang.String;@65d8dff8,[Ljava.lang.String;@444f44c5),Annotation([Ljava.lang.String;@303f1234,[Ljava.lang.String;@24d61e4,[Ledu.cmu.lti.nlp.amr.Dependency;@2149594a),Annotation([Ljava.lang.String;@1f1e58ca,[Ljava.lang.String;@57f847af,[Ljava.lang.String;@3ed34ef5),Annotation([Ljava.lang.String;@553bc36c,[Ljava.lang.String;@380e1909,[Ledu.cmu.lti.nlp.amr.Entity;@2d5ef498))
AMR:
(x17 / 有-01, location, x21 / 家乡)
(x17 / 有-01, snt5, x19 / 花)
(x21 / 家乡, mod, x18 / 我)
(x23 / 说话-01, manner, x25 / 先)
(x25 / 先, mod, x19 / 花)
(x25 / 先, mod, x26 / 总是)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 16,447 microseconds
Sentence: XX 。

Oracle Span 1:  XX => XX
Spans:
Span 0-1:  XX => XX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XX => XX

Dependencies:
1	XX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XX,ArrayBuffer(Span(0,1,List(0),XX,XX,false)),Map(0 -> XX),Map(x0 -> XX))),[Ljava.lang.String;@95eb320,Annotation([Ljava.lang.String;@2f521c4,[Ljava.lang.String;@4afbb6c2,[Ljava.lang.String;@10db6131),Annotation([Ljava.lang.String;@6c6017b9,[Ljava.lang.String;@4730e0f0,[Ledu.cmu.lti.nlp.amr.Dependency;@506a1372),Annotation([Ljava.lang.String;@1b7332a7,[Ljava.lang.String;@77c233af,[Ljava.lang.String;@37b56ac7),Annotation([Ljava.lang.String;@37c41ec0,[Ljava.lang.String;@35a0e495,[Ledu.cmu.lti.nlp.amr.Entity;@5399f6c5))
AMR:


Decoded in 1,212 microseconds
Sentence: 在 沙漠 、 岩石 、 雪地 上 行走 了 很 长 的 时间 以后 ， 小 王子 终于 发现 了 一 条 大 路 。

Oracle Span 1:  发现 => 发现-01
Oracle Span 2:  大 => 大-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  岩石 => 岩石
Oracle Span 5:  很 => 很
Oracle Span 6:  时间 => 时间
Oracle Span 7:  沙漠 => 沙漠
Oracle Span 8:  王子 => 王子
Oracle Span 9:  终于 => 终于
Oracle Span 10:  行走 => 行走-01
Oracle Span 11:  路 => 路
Oracle Span 12:  长 => 长-04
Oracle Span 13:  雪地 => 雪地
Spans:
Span 18-19:  发现 => 发现-01
Span 22-23:  大 => 大-01
Span 15-16:  小 => 小-01
Span 3-4:  岩石 => 岩石
Span 9-10:  很 => 很
Span 12-13:  时间 => 时间
Span 1-2:  沙漠 => 沙漠
Span 16-17:  王子 => 王子
Span 17-18:  终于 => 终于
Span 7-8:  行走 => 行走-01
Span 23-24:  路 => 路
Span 10-11:  长 => 长-04
Span 5-6:  雪地 => 雪地

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  发现 => 发现-01
Oracle Span 22-23:  大 => 大-01
Oracle Span 15-16:  小 => 小-01
Oracle Span 3-4:  岩石 => 岩石
Oracle Span 9-10:  很 => 很
Oracle Span 12-13:  时间 => 时间
Oracle Span 1-2:  沙漠 => 沙漠
Oracle Span 16-17:  王子 => 王子
Oracle Span 17-18:  终于 => 终于
Oracle Span 7-8:  行走 => 行走-01
Oracle Span 23-24:  路 => 路
Oracle Span 10-11:  长 => 长-04
Oracle Span 5-6:  雪地 => 雪地

Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	沙漠	_	NN	NN	_	6	conj	_	_
3	、	_	PU	PU	_	6	punct	_	_
4	岩石	_	NN	NN	_	6	conj	_	_
5	、	_	PU	PU	_	6	punct	_	_
6	雪地	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	1	plmod	_	_
8	行走	_	VV	VV	_	14	lccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	长	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	时间	_	NN	NN	_	8	dobj	_	_
14	以后	_	LC	LC	_	19	loc	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	王子	_	NN	NN	_	19	nsubj	_	_
18	终于	_	AD	AD	_	19	advmod	_	_
19	发现	_	VV	VV	_	0	root	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	一	_	CD	CD	_	22	nummod	_	_
22	条	_	M	M	_	24	clf	_	_
23	大	_	JJ	JJ	_	24	amod	_	_
24	路	_	NN	NN	_	19	dobj	_	_
25	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x10 / 发现-01, arg0, x11 / 王子)
(x10 / 发现-01, arg1, x14 / 路)
(x10 / 发现-01, manner, x13 / 终于)
(x11 / 王子, mod, x12 / 小-01)
(x14 / 路, mod, x15 / 大-01)
(x2 / 行走-01, duration, x7 / 时间)
(x7 / 时间, mod, x8 / 长-04)
(x8 / 长-04, degree, x9 / 很)

Input(Some(Graph((temporal :arg1 (行走-01 :duration (时间 :mod (长-04 :degree 很)) :arg1 (and :op 沙漠 :op 岩石 :op 雪地)) :arg2 (发现-01 :arg1 (路 :quant 1 :mod 大-01) :manner 终于 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(7,8,List(0),行走,行走-01,false), Span(12,13,List(1),时间,时间,false), Span(10,11,List(2),长,长-04,false), Span(9,10,List(3),很,很,false), Span(1,2,List(4),沙漠,沙漠,false), Span(3,4,List(5),岩石,岩石,false), Span(5,6,List(6),雪地,雪地,false), Span(18,19,List(7),发现,发现-01,false), Span(23,24,List(8),路,路,false), Span(22,23,List(9),大,大-01,false), Span(17,18,List(10),终于,终于,false), Span(16,17,List(11),王子,王子,false), Span(15,16,List(12),小,小-01,false)),Map(2 -> 长-04, 5 -> 岩石, 12 -> 小-01, 8 -> 路, 7 -> 发现-01, 1 -> 时间, 4 -> 沙漠, 11 -> 王子, 6 -> 雪地, 9 -> 大-01, 0 -> 行走-01, 10 -> 终于, 3 -> 很),Map(x10 -> 发现-01, x2 -> 行走-01, x5 -> 岩石, x13 -> 终于, x8 -> 长-04, x12 -> 小-01, x15 -> 大-01, x7 -> 时间, x4 -> 沙漠, x11 -> 王子, x6 -> 雪地, x14 -> 路, x9 -> 很))),[Ljava.lang.String;@4fe64d23,Annotation([Ljava.lang.String;@58437801,[Ljava.lang.String;@6af5bbd0,[Ljava.lang.String;@76464795),Annotation([Ljava.lang.String;@b34832b,[Ljava.lang.String;@48f4713c,[Ledu.cmu.lti.nlp.amr.Dependency;@f1868c9),Annotation([Ljava.lang.String;@4ba6ec50,[Ljava.lang.String;@642413d4,[Ljava.lang.String;@fb2e3fd),Annotation([Ljava.lang.String;@43a09ce2,[Ljava.lang.String;@3f183caa,[Ledu.cmu.lti.nlp.amr.Entity;@7b66322e))
AMR:
(x10 / 发现-01, manner, x13 / 终于)
(x10 / 发现-01, prep-along-with, x11 / 王子)
(x10 / 发现-01, time, x8 / 长-04)
(x11 / 王子, mod, x12 / 小-01)
(x14 / 路, mod, x15 / 大-01)
(x15 / 大-01, time, x10 / 发现-01)
(x2 / 行走-01, time, x6 / 雪地)
(x5 / 岩石, prep-along-with, x4 / 沙漠)
(x6 / 雪地, time, x5 / 岩石)
(x7 / 时间, mod, x8 / 长-04)
(x8 / 长-04, degree, x9 / 很)
(x8 / 长-04, time, x2 / 行走-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 48,604 microseconds
Sentence: 所有 的 大 路 都 是 通往 人 住 的 地方 的 。

Oracle Span 1:  人 => 人
Oracle Span 2:  住 => 住-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  大 => 大-01
Oracle Span 5:  所有 => 所有
Oracle Span 6:  路 => 路
Oracle Span 7:  通往 => 通往-01
Oracle Span 8:  都 => 都
Spans:
Span 7-8:  人 => 人
Span 8-9:  住 => 住-01
Span 10-11:  地方 => 地方
Span 2-3:  大 => 大-01
Span 0-1:  所有 => 所有
Span 3-4:  路 => 路
Span 6-7:  通往 => 通往-01
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  人 => 人
Oracle Span 8-9:  住 => 住-01
Oracle Span 10-11:  地方 => 地方
Oracle Span 2-3:  大 => 大-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 3-4:  路 => 路
Oracle Span 6-7:  通往 => 通往-01
Oracle Span 4-5:  都 => 都

Dependencies:
1	所有	_	DT	DT	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	大	_	JJ	JJ	_	4	amod	_	_
4	路	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	通往	_	VV	VV	_	6	attr	_	_
8	人	_	NN	NN	_	9	nsubj	_	_
9	住	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	的	_	DEC	DEC	_	7	cpm	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 路, mod, x11 / 大-01)
(x10 / 路, mod, x12 / 所有)
(x15 / 住-01, arg0, x16 / 人)
(x15 / 住-01, arg1, x13 / 地方)
(x8 / 通往-01, arg0, x10 / 路)
(x8 / 通往-01, arg1, x13 / 地方)
(x8 / 通往-01, manner, x17 / 都)

Input(Some(Graph((通往-01 :manner 都 :arg1 (地方 :arg1-of (住-01 :arg0 人)) :arg0 (路 :mod 所有 :mod 大-01)),ArrayBuffer(Span(6,7,List(0),通往,通往-01,false), Span(4,5,List(1),都,都,false), Span(10,11,List(2),地方,地方,false), Span(8,9,List(3),住,住-01,false), Span(7,8,List(4),人,人,false), Span(3,4,List(5),路,路,false), Span(0,1,List(6),所有,所有,false), Span(2,3,List(7),大,大-01,false)),Map(2 -> 地方, 5 -> 路, 7 -> 大-01, 1 -> 都, 4 -> 人, 6 -> 所有, 0 -> 通往-01, 3 -> 住-01),Map(x16 -> 人, x10 -> 路, x13 -> 地方, x8 -> 通往-01, x12 -> 所有, x15 -> 住-01, x11 -> 大-01, x17 -> 都))),[Ljava.lang.String;@63538bb4,Annotation([Ljava.lang.String;@24534cb0,[Ljava.lang.String;@5a50d9fc,[Ljava.lang.String;@106d77da),Annotation([Ljava.lang.String;@6f9c5048,[Ljava.lang.String;@5114b7c7,[Ledu.cmu.lti.nlp.amr.Dependency;@dd71b20),Annotation([Ljava.lang.String;@767f6ee7,[Ljava.lang.String;@7b6c6e70,[Ljava.lang.String;@f324455),Annotation([Ljava.lang.String;@3a894088,[Ljava.lang.String;@370c1968,[Ledu.cmu.lti.nlp.amr.Entity;@2f0bfe17))
AMR:
(x10 / 路, mod, x11 / 大-01)
(x10 / 路, mod, x12 / 所有)
(x15 / 住-01, op, x13 / 地方)
(x15 / 住-01, prep-from, x16 / 人)
(x8 / 通往-01, manner, x17 / 都)
(x8 / 通往-01, snt1, x13 / 地方)
(x8 / 通往-01, time, x10 / 路)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 19,216 microseconds
Sentence: “ 你们 好 。 ” 小 王子 说 。

Oracle Span 1:  你们 => 你们
Oracle Span 2:  好 => 好-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 1-2:  你们 => 你们
Span 2-3:  好 => 好-01
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你们	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 好-01, arg0, x6 / 你们)

Input(Some(Graph((说-01 :arg1 (好-01 :arg0 你们) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(2,3,List(1),好,好-01,false), Span(1,2,List(2),你们,你们,false), Span(6,7,List(3),王子,王子,false), Span(5,6,List(4),小,小-01,false)),Map(2 -> 你们, 1 -> 好-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 好-01, x3 -> 小-01, x6 -> 你们, x0 -> 说-01))),[Ljava.lang.String;@3206174f,Annotation([Ljava.lang.String;@42fb8c87,[Ljava.lang.String;@15eb0ae9,[Ljava.lang.String;@65e0b505),Annotation([Ljava.lang.String;@67de7a99,[Ljava.lang.String;@795f5d51,[Ledu.cmu.lti.nlp.amr.Dependency;@34aeacd1),Annotation([Ljava.lang.String;@54067fdc,[Ljava.lang.String;@4098dd77,[Ljava.lang.String;@43aeb5e0),Annotation([Ljava.lang.String;@2274160,[Ljava.lang.String;@65383667,[Ledu.cmu.lti.nlp.amr.Entity;@63cd2cd2))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, location, x5 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 好-01, beneficiary, x6 / 你们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,922 microseconds
Sentence: 这 是 一 个 玫瑰 盛开 的 花园 。

Oracle Span 1:  玫瑰 => 玫瑰
Oracle Span 2:  盛开 => 盛开-01
Oracle Span 3:  花园 => 花园
Oracle Span 4:  这 => 这
Spans:
Span 4-5:  玫瑰 => 玫瑰
Span 5-6:  盛开 => 盛开-01
Span 7-8:  花园 => 花园
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  玫瑰 => 玫瑰
Oracle Span 5-6:  盛开 => 盛开-01
Oracle Span 7-8:  花园 => 花园
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	玫瑰	_	NN	NN	_	6	nn	_	_
6	盛开	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	花园	_	NN	NN	_	2	attr	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 花园, domain, x6 / 这)
(x8 / 盛开-01, arg0, x9 / 玫瑰)
(x8 / 盛开-01, location, x0 / 花园)

Input(Some(Graph((花园 :location-of (盛开-01 :arg0 玫瑰) :quant 1 :domain 这),ArrayBuffer(Span(7,8,List(0),花园,花园,false), Span(5,6,List(1),盛开,盛开-01,false), Span(4,5,List(2),玫瑰,玫瑰,false), Span(0,1,List(3),这,这,false)),Map(2 -> 玫瑰, 1 -> 盛开-01, 0 -> 花园, 3 -> 这),Map(x8 -> 盛开-01, x6 -> 这, x9 -> 玫瑰, x0 -> 花园))),[Ljava.lang.String;@557a84fe,Annotation([Ljava.lang.String;@6deee370,[Ljava.lang.String;@49c17ba4,[Ljava.lang.String;@43e065f2),Annotation([Ljava.lang.String;@423c5404,[Ljava.lang.String;@5853ca50,[Ledu.cmu.lti.nlp.amr.Dependency;@1a0d96a5),Annotation([Ljava.lang.String;@5a02bfe3,[Ljava.lang.String;@7a3e5cd3,[Ljava.lang.String;@3c79088e),Annotation([Ljava.lang.String;@4a37191a,[Ljava.lang.String;@5854a18,[Ledu.cmu.lti.nlp.amr.Entity;@d5556bf))
AMR:
(x0 / 花园, domain, x6 / 这)
(x8 / 盛开-01, location, x0 / 花园)
(x8 / 盛开-01, location, x9 / 玫瑰)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,761 microseconds
Sentence: “ 你 好 。 ” 玫瑰花 说道 。

Oracle Span 1:  玫瑰花 => 玫瑰花
Oracle Span 2:  说道 => 说道-01
Spans:
Span 5-6:  玫瑰花 => 玫瑰花
Span 6-7:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  玫瑰花 => 玫瑰花
Oracle Span 6-7:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	7	conj	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	6	punct	_	_
6	玫瑰花	_	NT	NT	_	7	nn	_	_
7	说道	_	NN	NN	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 玫瑰花)

Input(Some(Graph((说道-01 :arg1 你好 :arg0 玫瑰花),ArrayBuffer(Span(6,7,List(0),说道,说道-01,false), Span(5,6,List(1),玫瑰花,玫瑰花,false)),Map(1 -> 玫瑰花, 0 -> 说道-01),Map(x2 -> 玫瑰花, x0 -> 说道-01))),[Ljava.lang.String;@791c12e3,Annotation([Ljava.lang.String;@b112b13,[Ljava.lang.String;@24eb65e3,[Ljava.lang.String;@3ac3f6f),Annotation([Ljava.lang.String;@1abebef3,[Ljava.lang.String;@18f55704,[Ledu.cmu.lti.nlp.amr.Dependency;@67cefd84),Annotation([Ljava.lang.String;@5fbe155,[Ljava.lang.String;@6add8e3f,[Ljava.lang.String;@58a2b917),Annotation([Ljava.lang.String;@48904d5a,[Ljava.lang.String;@12bbfc54,[Ledu.cmu.lti.nlp.amr.Entity;@1491344a))
AMR:
(x0 / 说道-01, example, x2 / 玫瑰花)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,296 microseconds
Sentence: 小 王子 瞅 着 这些 花 ，

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  瞅 => 瞅-01
Oracle Span 4:  花 => 花
Oracle Span 5:  这些 => 这些
Spans:
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 2-3:  瞅 => 瞅-01
Span 5-6:  花 => 花
Span 4-5:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  瞅 => 瞅-01
Oracle Span 5-6:  花 => 花
Oracle Span 4-5:  这些 => 这些

Dependencies:
1	小	_	NN	NN	_	3	nsubj	_	_
2	王子	_	AD	AD	_	3	advmod	_	_
3	瞅	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	这些	_	DT	DT	_	6	det	_	_
6	花	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 瞅-01, arg0, x2 / 王子)
(x0 / 瞅-01, arg1, x4 / 花)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 花, mod, x5 / 这些)

Input(Some(Graph((瞅-01 :arg1 (花 :mod 这些) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(2,3,List(0),瞅,瞅-01,false), Span(5,6,List(1),花,花,false), Span(4,5,List(2),这些,这些,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 这些, 1 -> 花, 4 -> 小-01, 0 -> 瞅-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 这些, x4 -> 花, x3 -> 小-01, x0 -> 瞅-01))),[Ljava.lang.String;@59b65dce,Annotation([Ljava.lang.String;@1386313f,[Ljava.lang.String;@5e922647,[Ljava.lang.String;@433c6abb),Annotation([Ljava.lang.String;@288f173f,[Ljava.lang.String;@a22c4d8,[Ledu.cmu.lti.nlp.amr.Dependency;@45cd7bc5),Annotation([Ljava.lang.String;@6504a875,[Ljava.lang.String;@35e26d05,[Ljava.lang.String;@29fa6b65),Annotation([Ljava.lang.String;@7c72ecc,[Ljava.lang.String;@47406941,[Ledu.cmu.lti.nlp.amr.Entity;@61ecbee9))
AMR:
(x0 / 瞅-01, location, x2 / 王子)
(x0 / 瞅-01, mode, x4 / 花)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 花, mod, x5 / 这些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,152 microseconds
Sentence: 它们 全 都 和 他 的 那 朵 花 一样 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  他 => 他
Oracle Span 3:  全 => 全-01
Oracle Span 4:  它们 => 它们
Oracle Span 5:  花 => 花
Oracle Span 6:  那 => 那
Oracle Span 7:  都 => 都
Spans:
Span 9-10:  一样 => 一样-02
Span 4-5:  他 => 他
Span 1-2:  全 => 全-01
Span 0-1:  它们 => 它们
Span 8-9:  花 => 花
Span 6-7:  那 => 那
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-02
Oracle Span 4-5:  他 => 他
Oracle Span 1-2:  全 => 全-01
Oracle Span 0-1:  它们 => 它们
Oracle Span 8-9:  花 => 花
Oracle Span 6-7:  那 => 那
Oracle Span 2-3:  都 => 都

Dependencies:
1	它们	_	PN	PN	_	10	nsubj	_	_
2	全	_	AD	AD	_	10	advmod	_	_
3	都	_	AD	AD	_	10	advmod	_	_
4	和	_	P	P	_	10	prep	_	_
5	他	_	PN	PN	_	9	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	那	_	DT	DT	_	9	det	_	_
8	朵	_	M	M	_	7	clf	_	_
9	花	_	NN	NN	_	4	pobj	_	_
10	一样	_	VA	VA	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 一样-02, arg0, x2 / 它们)
(x0 / 一样-02, arg1, x3 / 花)
(x0 / 一样-02, manner, x6 / 都)
(x0 / 一样-02, manner, x7 / 全-01)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)

Input(Some(Graph((一样-02 :manner 全-01 :manner 都 :arg1 (花 :poss 他 :mod 那) :arg0 它们),ArrayBuffer(Span(9,10,List(0),一样,一样-02,false), Span(1,2,List(1),全,全-01,false), Span(2,3,List(2),都,都,false), Span(8,9,List(3),花,花,false), Span(4,5,List(4),他,他,false), Span(6,7,List(5),那,那,false), Span(0,1,List(6),它们,它们,false)),Map(2 -> 都, 5 -> 那, 1 -> 全-01, 4 -> 他, 6 -> 它们, 0 -> 一样-02, 3 -> 花),Map(x2 -> 它们, x5 -> 他, x7 -> 全-01, x4 -> 那, x3 -> 花, x6 -> 都, x0 -> 一样-02))),[Ljava.lang.String;@1bb740f2,Annotation([Ljava.lang.String;@2538bc06,[Ljava.lang.String;@61f6d381,[Ljava.lang.String;@656922a0),Annotation([Ljava.lang.String;@44784e2f,[Ljava.lang.String;@2440022a,[Ledu.cmu.lti.nlp.amr.Dependency;@737db7f8),Annotation([Ljava.lang.String;@5f2de715,[Ljava.lang.String;@5922d3e9,[Ljava.lang.String;@7d57dbb5),Annotation([Ljava.lang.String;@630b6190,[Ljava.lang.String;@532e27ab,[Ledu.cmu.lti.nlp.amr.Entity;@1cdc1bbc))
AMR:
(x0 / 一样-02, degree, x3 / 花)
(x0 / 一样-02, location, x2 / 它们)
(x0 / 一样-02, manner, x6 / 都)
(x0 / 一样-02, manner, x7 / 全-01)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,516 microseconds
Sentence: “ 你们 是 什么 花 ？ ” 小 王子 惊奇 地 问 。

Oracle Span 1:  你们 => 你们
Oracle Span 2:  小 => 小-01
Oracle Span 3:  惊奇 => 惊奇-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  花 => 花
Oracle Span 6:  问 => 问-01
Spans:
Span 1-2:  你们 => 你们
Span 7-8:  小 => 小-01
Span 9-10:  惊奇 => 惊奇-01
Span 8-9:  王子 => 王子
Span 4-5:  花 => 花
Span 11-12:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  惊奇 => 惊奇-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 4-5:  花 => 花
Oracle Span 11-12:  问 => 问-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	花	_	VV	VV	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	惊奇	_	VA	VA	_	0	root	_	_
11	地	_	NN	NN	_	12	nn	_	_
12	问	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 问-01, arg0, x3 / 王子)
(x0 / 问-01, arg1, x5 / 花)
(x0 / 问-01, manner, x2 / 惊奇-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 花, domain, x7 / 你们)

Input(Some(Graph((问-01 :mode interrogative :arg1 (花 :domain 你们 :mod amr-unknown) :arg0 (王子 :mod 小-01) :manner 惊奇-01),ArrayBuffer(Span(11,12,List(0),问,问-01,false), Span(4,5,List(1),花,花,false), Span(1,2,List(2),你们,你们,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小-01,false), Span(9,10,List(5),惊奇,惊奇-01,false)),Map(2 -> 你们, 5 -> 惊奇-01, 1 -> 花, 4 -> 小-01, 0 -> 问-01, 3 -> 王子),Map(x2 -> 惊奇-01, x5 -> 花, x7 -> 你们, x4 -> 小-01, x3 -> 王子, x0 -> 问-01))),[Ljava.lang.String;@5f95f1e1,Annotation([Ljava.lang.String;@672a1c62,[Ljava.lang.String;@459b6c53,[Ljava.lang.String;@39e69ea7),Annotation([Ljava.lang.String;@490c7a83,[Ljava.lang.String;@7e72a6cc,[Ledu.cmu.lti.nlp.amr.Dependency;@6015a4a5),Annotation([Ljava.lang.String;@6d0b0da6,[Ljava.lang.String;@4779aae6,[Ljava.lang.String;@2cd62003),Annotation([Ljava.lang.String;@61ab89b0,[Ljava.lang.String;@5478ce1e,[Ledu.cmu.lti.nlp.amr.Entity;@5edc70ed))
AMR:
(x0 / 问-01, manner, x2 / 惊奇-01)
(x3 / 王子, mod, x2 / 惊奇-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 花, domain, x7 / 你们)
(x5 / 花, location, x2 / 惊奇-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,892 microseconds
Sentence: “ 我们 是 玫瑰花 。 ” 花儿们 说道 。

Oracle Span 1:  玫瑰花 => 玫瑰花
Oracle Span 2:  花儿们 => 花儿们
Oracle Span 3:  说道 => 说道-01
Spans:
Span 3-4:  玫瑰花 => 玫瑰花
Span 6-7:  花儿们 => 花儿们
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  玫瑰花 => 玫瑰花
Oracle Span 6-7:  花儿们 => 花儿们
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	prep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	玫瑰花	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	7	punct	_	_
7	花儿们	_	NT	NT	_	8	nn	_	_
8	说道	_	NN	NN	_	3	prep	_	_
9	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 花儿们)
(x0 / 说道-01, arg1, x3 / 玫瑰花)

Input(Some(Graph((说道-01 :arg1 (玫瑰花 :domain x2) :arg0 花儿们),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(3,4,List(1),玫瑰花,玫瑰花,false), Span(6,7,List(2),花儿们,花儿们,false)),Map(2 -> 花儿们, 1 -> 玫瑰花, 0 -> 说道-01),Map(x2 -> 花儿们, x3 -> 玫瑰花, x0 -> 说道-01))),[Ljava.lang.String;@4317850d,Annotation([Ljava.lang.String;@7e4c72d6,[Ljava.lang.String;@6cd64b3f,[Ljava.lang.String;@51b01550),Annotation([Ljava.lang.String;@2ef0dd86,[Ljava.lang.String;@3337d04c,[Ledu.cmu.lti.nlp.amr.Dependency;@6de6faa6),Annotation([Ljava.lang.String;@3cad68df,[Ljava.lang.String;@14998e21,[Ljava.lang.String;@1921994e),Annotation([Ljava.lang.String;@43c87306,[Ljava.lang.String;@14f40030,[Ledu.cmu.lti.nlp.amr.Entity;@4c447c09))
AMR:
(x0 / 说道-01, example, x2 / 花儿们)
(x3 / 玫瑰花, location, x2 / 花儿们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,387 microseconds
Sentence: 他 感到 自己 非常 不幸 。

Oracle Span 1:  不幸 => 不幸-01
Oracle Span 2:  他 => 他
Oracle Span 3:  感到 => 感到-01
Oracle Span 4:  非常 => 非常-01
Spans:
Span 4-5:  不幸 => 不幸-01
Span 0-1:  他 => 他
Span 1-2:  感到 => 感到-01
Span 3-4:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  不幸 => 不幸-01
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 3-4:  非常 => 非常-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	自己	_	PN	PN	_	4	advmod	_	_
4	非常	_	AD	AD	_	2	ccomp	_	_
5	不幸	_	AD	AD	_	2	advmod	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	他	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 他)
(x0 / 感到-01, arg1, x3 / 不幸-01)
(x3 / 不幸-01, degree, x4 / 非常-01)

Input(Some(Graph((感到-01 :arg1 (不幸-01 :arg0 x2 :degree 非常-01) :arg0 他),ArrayBuffer(Span(1,2,List(0),感到,感到-01,false), Span(4,5,List(1),不幸,不幸-01,false), Span(3,4,List(2),非常,非常-01,false), Span(0,1,List(3),他,他,false)),Map(2 -> 非常-01, 1 -> 不幸-01, 0 -> 感到-01, 3 -> 他),Map(x2 -> 他, x4 -> 非常-01, x3 -> 不幸-01, x0 -> 感到-01))),[Ljava.lang.String;@593a6726,Annotation([Ljava.lang.String;@596a7f44,[Ljava.lang.String;@6dab01d9,[Ljava.lang.String;@2e09c51),Annotation([Ljava.lang.String;@869d87c,[Ljava.lang.String;@2f3166a,[Ledu.cmu.lti.nlp.amr.Dependency;@37637a24),Annotation([Ljava.lang.String;@31e76a8d,[Ljava.lang.String;@770beef5,[Ljava.lang.String;@6dd1f638),Annotation([Ljava.lang.String;@414f13fc,[Ljava.lang.String;@4b76aa5a,[Ledu.cmu.lti.nlp.amr.Entity;@63a28987))
AMR:
(x0 / 感到-01, ARG3, x3 / 不幸-01)
(x0 / 感到-01, ARG4, x2 / 他)
(x3 / 不幸-01, degree, x4 / 非常-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,015 microseconds
Sentence: 他 的 那 朵 花 曾 对 他 说 她 是 整个 宇宙 中 独一无二 的 一 种 花 。

Oracle Span 1:  他 => 他
Oracle Span 2:  宇宙 => 宇宙
Oracle Span 3:  整个 => 整个
Oracle Span 4:  曾 => 曾
Oracle Span 5:  独一无二 => 独一无二-01
Oracle Span 6:  花 => 花
Oracle Span 7:  花 => 花
Oracle Span 8:  说 => 说-01
Oracle Span 9:  那 => 那
Spans:
Span 0-1:  他 => 他
Span 12-13:  宇宙 => 宇宙
Span 11-12:  整个 => 整个
Span 5-6:  曾 => 曾
Span 14-15:  独一无二 => 独一无二-01
Span 4-5:  花 => 花
Span 18-19:  花 => 花
Span 8-9:  说 => 说-01
Span 2-3:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 12-13:  宇宙 => 宇宙
Oracle Span 11-12:  整个 => 整个
Oracle Span 5-6:  曾 => 曾
Oracle Span 14-15:  独一无二 => 独一无二-01
Oracle Span 4-5:  花 => 花
Oracle Span 18-19:  花 => 花
Oracle Span 8-9:  说 => 说-01
Oracle Span 2-3:  那 => 那

Dependencies:
1	他	_	PN	PN	_	5	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	5	det	_	_
4	朵	_	M	M	_	3	clf	_	_
5	花	_	NN	NN	_	9	nsubj	_	_
6	曾	_	AD	AD	_	9	advmod	_	_
7	对	_	P	P	_	9	prep	_	_
8	他	_	PN	PN	_	7	pobj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	她	_	PN	PN	_	11	top	_	_
11	是	_	VC	VC	_	9	ccomp	_	_
12	整个	_	JJ	JJ	_	13	amod	_	_
13	宇宙	_	NN	NN	_	14	lobj	_	_
14	中	_	LC	LC	_	19	dep	_	_
15	独一无二	_	CD	CD	_	19	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	种	_	M	M	_	19	clf	_	_
19	花	_	NN	NN	_	11	attr	_	_
20	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 花)
(x0 / 说-01, arg1, x7 / 花)
(x0 / 说-01, time, x2 / 曾)
(x10 / 宇宙, mod, x11 / 整个)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)
(x7 / 花, location, x10 / 宇宙)
(x7 / 花, mod, x9 / 独一无二-01)

Input(Some(Graph((说-01 :arg1 (花 :domain x3 :quant 1 :location (宇宙 :mod 整个) :mod 独一无二-01) :arg3 x5 :arg0 (花 :poss 他 :mod 那) :time 曾),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(4,5,List(1),花,花,false), Span(12,13,List(2),宇宙,宇宙,false), Span(11,12,List(3),整个,整个,false), Span(14,15,List(4),独一无二,独一无二-01,false), Span(18,19,List(5),花,花,false), Span(0,1,List(6),他,他,false), Span(2,3,List(7),那,那,false), Span(5,6,List(8),曾,曾,false)),Map(2 -> 宇宙, 5 -> 花, 8 -> 曾, 7 -> 那, 1 -> 花, 4 -> 独一无二-01, 6 -> 他, 0 -> 说-01, 3 -> 整个),Map(x2 -> 曾, x10 -> 宇宙, x5 -> 他, x7 -> 花, x4 -> 那, x3 -> 花, x11 -> 整个, x9 -> 独一无二-01, x0 -> 说-01))),[Ljava.lang.String;@120d3fd,Annotation([Ljava.lang.String;@38c9e0d6,[Ljava.lang.String;@4693a9ef,[Ljava.lang.String;@310aee0b),Annotation([Ljava.lang.String;@36327cec,[Ljava.lang.String;@410ae5ac,[Ledu.cmu.lti.nlp.amr.Dependency;@1a8df0b3),Annotation([Ljava.lang.String;@7c112f5f,[Ljava.lang.String;@5961e92d,[Ljava.lang.String;@4fd05028),Annotation([Ljava.lang.String;@3a2d3909,[Ljava.lang.String;@4fb392c4,[Ledu.cmu.lti.nlp.amr.Entity;@194d329e))
AMR:
(x0 / 说-01, beneficiary, x7 / 花)
(x0 / 说-01, polite, x3 / 花)
(x0 / 说-01, time, x2 / 曾)
(x10 / 宇宙, mod, x11 / 整个)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)
(x7 / 花, location, x10 / 宇宙)
(x7 / 花, mod, x9 / 独一无二-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 32,883 microseconds
Sentence: 可是 ， 仅 在 这 一 座 花园 里 就 有 五千 朵 完全 一样 的 这 种 花朵 ！

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  仅 => 仅
Oracle Span 3:  完全 => 完全-01
Oracle Span 4:  就 => 就
Oracle Span 5:  有 => 有-03
Oracle Span 6:  花园 => 花园
Oracle Span 7:  花朵 => 花朵
Oracle Span 8:  这 => 这
Oracle Span 9:  这 => 这
Spans:
Span 14-15:  一样 => 一样-01
Span 2-3:  仅 => 仅
Span 13-14:  完全 => 完全-01
Span 9-10:  就 => 就
Span 10-11:  有 => 有-03
Span 7-8:  花园 => 花园
Span 18-19:  花朵 => 花朵
Span 4-5:  这 => 这
Span 16-17:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  一样 => 一样-01
Oracle Span 2-3:  仅 => 仅
Oracle Span 13-14:  完全 => 完全-01
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  有 => 有-03
Oracle Span 7-8:  花园 => 花园
Oracle Span 18-19:  花朵 => 花朵
Oracle Span 4-5:  这 => 这
Oracle Span 16-17:  这 => 这

Dependencies:
1	可是	_	AD	AD	_	11	advmod	_	_
2	,	_	PU	PU	_	11	punct	_	_
3	仅	_	AD	AD	_	4	advmod	_	_
4	在	_	P	P	_	11	prep	_	_
5	这	_	DT	DT	_	8	det	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	座	_	M	M	_	5	dep	_	_
8	花园	_	NN	NN	_	9	lobj	_	_
9	里	_	LC	LC	_	4	plmod	_	_
10	就	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	0	root	_	_
12	五千	_	CD	CD	_	13	nummod	_	_
13	朵	_	M	M	_	15	dep	_	_
14	完全	_	AD	AD	_	15	advmod	_	_
15	一样	_	VA	VA	_	19	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	这	_	DT	DT	_	19	det	_	_
18	种	_	M	M	_	17	clf	_	_
19	花朵	_	NN	NN	_	11	dobj	_	_
20	！	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 一样-01, degree, x12 / 完全-01)
(x2 / 有-03, arg0, x4 / 花园)
(x2 / 有-03, arg1, x8 / 花朵)
(x2 / 有-03, manner, x3 / 就)
(x4 / 花园, mod, x5 / 这)
(x4 / 花园, mod, x7 / 仅)
(x8 / 花朵, manner, x11 / 一样-01)
(x8 / 花朵, mod, x9 / 这)

Input(Some(Graph((contrast :arg2 (有-03 :mode expressive :arg1 (花朵 :quant 5000 :manner (一样-01 :degree 完全-01) :mod 这) :arg0 (花园 :quant 1 :mod 仅 :mod 这) :manner 就)),ArrayBuffer(Span(10,11,List(0),有,有-03,false), Span(18,19,List(1),花朵,花朵,false), Span(14,15,List(2),一样,一样-01,false), Span(13,14,List(3),完全,完全-01,false), Span(4,5,List(4),这,这,false), Span(7,8,List(5),花园,花园,false), Span(2,3,List(6),仅,仅,false), Span(16,17,List(7),这,这,false), Span(9,10,List(8),就,就,false)),Map(2 -> 一样-01, 5 -> 花园, 8 -> 就, 7 -> 这, 1 -> 花朵, 4 -> 这, 6 -> 仅, 0 -> 有-03, 3 -> 完全-01),Map(x2 -> 有-03, x5 -> 这, x8 -> 花朵, x12 -> 完全-01, x7 -> 仅, x4 -> 花园, x3 -> 就, x11 -> 一样-01, x9 -> 这))),[Ljava.lang.String;@54d1608f,Annotation([Ljava.lang.String;@7e7fe6d,[Ljava.lang.String;@541179e7,[Ljava.lang.String;@24386839),Annotation([Ljava.lang.String;@7b32b129,[Ljava.lang.String;@439e3cb4,[Ledu.cmu.lti.nlp.amr.Dependency;@1c9fbb61),Annotation([Ljava.lang.String;@7b81616b,[Ljava.lang.String;@15d42ccb,[Ljava.lang.String;@279dd959),Annotation([Ljava.lang.String;@46383a78,[Ljava.lang.String;@36c281ed,[Ledu.cmu.lti.nlp.amr.Entity;@244418a))
AMR:
(x11 / 一样-01, degree, x12 / 完全-01)
(x2 / 有-03, degree, x12 / 完全-01)
(x2 / 有-03, manner, x3 / 就)
(x4 / 花园, mod, x2 / 有-03)
(x4 / 花园, mod, x7 / 仅)
(x4 / 花园, mod, x9 / 这)
(x8 / 花朵, manner, x11 / 一样-01)
(x8 / 花朵, mod, x5 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 24,839 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 如果 她 看到 这些 ， 她 是 一定 会 很 恼火 … 她 会 咳嗽 得 更 厉害 ， 并且 为 避免 让 人 耻笑 ， 她 会 佯装 死去 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  人 => 人
Oracle Span 3:  会 => 会-02
Oracle Span 4:  会 => 会-02
Oracle Span 5:  会 => 会-02
Oracle Span 6:  佯装 => 佯装-01
Oracle Span 7:  厉害 => 厉害-01
Oracle Span 8:  咳嗽 => 咳嗽-01
Oracle Span 9:  她 => 她
Oracle Span 10:  小 => 小-01
Oracle Span 11:  很 => 很
Oracle Span 12:  恼火 => 恼火-01
Oracle Span 13:  更 => 更
Oracle Span 14:  死去 => 死去
Oracle Span 15:  王子 => 王子
Oracle Span 16:  看到 => 看到-01
Oracle Span 17:  耻笑 => 耻笑-01
Oracle Span 18:  自言自语 => 自言自语
Oracle Span 19:  说 => 说-01
Oracle Span 20:  这些 => 这些
Oracle Span 21:  避免 => 避免-01
Spans:
Span 14-15:  一定 => 一定
Span 30-31:  人 => 人
Span 15-16:  会 => 会-02
Span 20-21:  会 => 会-02
Span 34-35:  会 => 会-02
Span 35-36:  佯装 => 佯装-01
Span 24-25:  厉害 => 厉害-01
Span 21-22:  咳嗽 => 咳嗽-01
Span 8-9:  她 => 她
Span 0-1:  小 => 小-01
Span 16-17:  很 => 很
Span 17-18:  恼火 => 恼火-01
Span 23-24:  更 => 更
Span 36-37:  死去 => 死去
Span 1-2:  王子 => 王子
Span 9-10:  看到 => 看到-01
Span 31-32:  耻笑 => 耻笑-01
Span 2-3:  自言自语 => 自言自语
Span 4-5:  说 => 说-01
Span 10-11:  这些 => 这些
Span 28-29:  避免 => 避免-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  一定 => 一定
Oracle Span 30-31:  人 => 人
Oracle Span 15-16:  会 => 会-02
Oracle Span 20-21:  会 => 会-02
Oracle Span 34-35:  会 => 会-02
Oracle Span 35-36:  佯装 => 佯装-01
Oracle Span 24-25:  厉害 => 厉害-01
Oracle Span 21-22:  咳嗽 => 咳嗽-01
Oracle Span 8-9:  她 => 她
Oracle Span 0-1:  小 => 小-01
Oracle Span 16-17:  很 => 很
Oracle Span 17-18:  恼火 => 恼火-01
Oracle Span 23-24:  更 => 更
Oracle Span 36-37:  死去 => 死去
Oracle Span 1-2:  王子 => 王子
Oracle Span 9-10:  看到 => 看到-01
Oracle Span 31-32:  耻笑 => 耻笑-01
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 4-5:  说 => 说-01
Oracle Span 10-11:  这些 => 这些
Oracle Span 28-29:  避免 => 避免-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	5	punct	_	_
8	如果	_	CS	CS	_	10	advmod	_	_
9	她	_	PN	PN	_	10	nsubj	_	_
10	看到	_	VV	VV	_	37	pccomp	_	_
11	这些	_	PN	PN	_	14	nsubj	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	她	_	PN	PN	_	14	top	_	_
14	是	_	VC	VC	_	10	ccomp	_	_
15	一定	_	AD	AD	_	18	advmod	_	_
16	会	_	VV	VV	_	18	mmod	_	_
17	很	_	AD	AD	_	18	advmod	_	_
18	恼火	_	VV	VV	_	14	ccomp	_	_
19	…	_	PU	PU	_	25	punct	_	_
20	她	_	PN	PN	_	25	nsubj	_	_
21	会	_	VV	VV	_	25	mmod	_	_
22	咳嗽	_	VV	VV	_	25	dep	_	_
23	得	_	DER	DER	_	25	dep	_	_
24	更	_	AD	AD	_	25	advmod	_	_
25	厉害	_	VV	VV	_	14	dep	_	_
26	,	_	PU	PU	_	25	punct	_	_
27	并且	_	CC	CC	_	25	cc	_	_
28	为	_	P	P	_	30	prep	_	_
29	避免	_	VV	VV	_	28	pccomp	_	_
30	让	_	VV	VV	_	25	dep	_	_
31	人	_	NN	NN	_	30	dobj	_	_
32	耻笑	_	VV	VV	_	30	dep	_	_
33	,	_	PU	PU	_	37	punct	_	_
34	她	_	PN	PN	_	37	nsubj	_	_
35	会	_	VV	VV	_	37	mmod	_	_
36	佯装	_	AD	AD	_	37	advmod	_	_
37	死去	_	VV	VV	_	5	ccomp	_	_
38	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x32 / 说-01, arg0, x35 / 王子)
(x32 / 说-01, manner, x34 / 自言自语)
(x35 / 王子, mod, x36 / 小-01)
(x38 / 看到-01, arg0, x39 / 她)
(x38 / 看到-01, arg1, x40 / 这些)
(x42 / 一定, arg0, x43 / 会-02)
(x43 / 会-02, arg0, x44 / 恼火-01)
(x44 / 恼火-01, degree, x45 / 很)
(x47 / 会-02, arg0, x48 / 咳嗽-01)
(x48 / 咳嗽-01, degree, x50 / 厉害-01)
(x50 / 厉害-01, degree, x51 / 更)
(x52 / 会-02, arg0, x53 / 佯装-01)
(x52 / 会-02, purpose, x56 / 避免-01)
(x53 / 佯装-01, arg1, x55 / 死去)
(x56 / 避免-01, arg1, x58 / 耻笑-01)
(x58 / 耻笑-01, arg0, x59 / 人)

Input(Some(Graph((说-01 :arg1 (condition :arg1 (看到-01 :arg1 这些 :arg0 她) :arg2 (and :op (一定 :arg0 (会-02 :arg0 (恼火-01 :arg0 x39 :degree 很))) :op (会-02 :arg0 (咳嗽-01 :degree (厉害-01 :degree 更) :arg0 x39)) :op (会-02 :purpose (避免-01 :arg1 (耻笑-01 :arg1 x39 :arg0 人) :arg0 x39) :arg0 (佯装-01 :arg1 死去 :arg0 x39)))) :arg0 (王子 :mod 小-01) :manner 自言自语),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(9,10,List(1),看到,看到-01,false), Span(10,11,List(2),这些,这些,false), Span(8,9,List(3),她,她,false), Span(14,15,List(4),一定,一定,false), Span(15,16,List(5),会,会-02,false), Span(17,18,List(6),恼火,恼火-01,false), Span(16,17,List(7),很,很,false), Span(20,21,List(8),会,会-02,false), Span(21,22,List(9),咳嗽,咳嗽-01,false), Span(24,25,List(10),厉害,厉害-01,false), Span(23,24,List(11),更,更,false), Span(34,35,List(12),会,会-02,false), Span(28,29,List(13),避免,避免-01,false), Span(31,32,List(14),耻笑,耻笑-01,false), Span(30,31,List(15),人,人,false), Span(35,36,List(16),佯装,佯装-01,false), Span(36,37,List(17),死去,死去,false), Span(1,2,List(18),王子,王子,false), Span(0,1,List(19),小,小-01,false), Span(2,3,List(20),自言自语,自言自语,false)),Map(2 -> 这些, 5 -> 会-02, 12 -> 会-02, 15 -> 人, 8 -> 会-02, 18 -> 王子, 7 -> 很, 17 -> 死去, 1 -> 看到-01, 4 -> 一定, 11 -> 更, 14 -> 耻笑-01, 20 -> 自言自语, 6 -> 恼火-01, 9 -> 咳嗽-01, 0 -> 说-01, 16 -> 佯装-01, 19 -> 小-01, 10 -> 厉害-01, 3 -> 她, 13 -> 避免-01),Map(x52 -> 会-02, x34 -> 自言自语, x55 -> 死去, x40 -> 这些, x43 -> 会-02, x58 -> 耻笑-01, x39 -> 她, x51 -> 更, x45 -> 很, x48 -> 咳嗽-01, x36 -> 小-01, x42 -> 一定, x56 -> 避免-01, x59 -> 人, x50 -> 厉害-01, x44 -> 恼火-01, x38 -> 看到-01, x32 -> 说-01, x53 -> 佯装-01, x47 -> 会-02, x35 -> 王子))),[Ljava.lang.String;@4b5a078a,Annotation([Ljava.lang.String;@4c361f63,[Ljava.lang.String;@6ed922e1,[Ljava.lang.String;@4eb166a1),Annotation([Ljava.lang.String;@554c4eaa,[Ljava.lang.String;@29fd8e67,[Ledu.cmu.lti.nlp.amr.Dependency;@e146f93),Annotation([Ljava.lang.String;@4bd5849e,[Ljava.lang.String;@7cdbaa50,[Ljava.lang.String;@39909d1a),Annotation([Ljava.lang.String;@1455154c,[Ljava.lang.String;@7343922c,[Ledu.cmu.lti.nlp.amr.Entity;@526b2f3e))
AMR:
(x32 / 说-01, ARG6, x38 / 看到-01)
(x32 / 说-01, manner, x34 / 自言自语)
(x34 / 自言自语, value, x35 / 王子)
(x35 / 王子, mod, x36 / 小-01)
(x38 / 看到-01, mod, x40 / 这些)
(x38 / 看到-01, mode, x39 / 她)
(x42 / 一定, mod, x40 / 这些)
(x43 / 会-02, manner, x42 / 一定)
(x43 / 会-02, purpose, x44 / 恼火-01)
(x44 / 恼火-01, degree, x45 / 很)
(x47 / 会-02, manner, x44 / 恼火-01)
(x47 / 会-02, value, x48 / 咳嗽-01)
(x48 / 咳嗽-01, degree, x50 / 厉害-01)
(x50 / 厉害-01, degree, x51 / 更)
(x52 / 会-02, purpose, x56 / 避免-01)
(x52 / 会-02, value, x53 / 佯装-01)
(x53 / 佯装-01, ARG6, x55 / 死去)
(x56 / 避免-01, degree, x50 / 厉害-01)
(x58 / 耻笑-01, purpose, x56 / 避免-01)
(x59 / 人, purpose, x56 / 避免-01)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.0
WARNING: makeIds can't find span Id: 0.2.1.0.0.0
WARNING: makeIds can't find span Id: 0.2.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.1.0
WARNING: makeIds can't find span Id: 0.2.1.1.0.1
WARNING: makeIds can't find span Id: 0.2.1.1.0.1.0
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.2.1
WARNING: makeIds can't find span Id: 0.2.1.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.2.1.1.0
WARNING: makeIds can't find span Id: 0.2.1.2.0
WARNING: makeIds can't find span Id: 0.2.1.2.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 132,403 microseconds
Sentence: 那么 ， 我 还 得 装 着 去 护理 她 ， 因为 如果 不 这样 的话 ， 她 为了 使 我 难堪 ， 她 可能 会 真的 死去 … ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  使 => 使-01
Oracle Span 3:  可能 => 可能-01
Oracle Span 4:  她 => 她
Oracle Span 5:  得 => 得-02
Oracle Span 6:  我 => 我
Oracle Span 7:  护理 => 护理-01
Oracle Span 8:  死去 => 死去-01
Oracle Span 9:  真的 => 真的
Oracle Span 10:  装 => 装-03
Oracle Span 11:  这样 => 这样
Oracle Span 12:  难堪 => 难堪-01
Spans:
Span 25-26:  会 => 会-02
Span 19-20:  使 => 使-01
Span 24-25:  可能 => 可能-01
Span 9-10:  她 => 她
Span 4-5:  得 => 得-02
Span 2-3:  我 => 我
Span 8-9:  护理 => 护理-01
Span 27-28:  死去 => 死去-01
Span 26-27:  真的 => 真的
Span 5-6:  装 => 装-03
Span 14-15:  这样 => 这样
Span 21-22:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 25-26:  会 => 会-02
Oracle Span 19-20:  使 => 使-01
Oracle Span 24-25:  可能 => 可能-01
Oracle Span 9-10:  她 => 她
Oracle Span 4-5:  得 => 得-02
Oracle Span 2-3:  我 => 我
Oracle Span 8-9:  护理 => 护理-01
Oracle Span 27-28:  死去 => 死去-01
Oracle Span 26-27:  真的 => 真的
Oracle Span 5-6:  装 => 装-03
Oracle Span 14-15:  这样 => 这样
Oracle Span 21-22:  难堪 => 难堪-01

Dependencies:
1	那么	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	还	_	AD	AD	_	6	advmod	_	_
5	得	_	VV	VV	_	6	mmod	_	_
6	装	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	去	_	MSP	MSP	_	9	dep	_	_
9	护理	_	VV	VV	_	6	dobj	_	_
10	她	_	PN	PN	_	26	nsubj	_	_
11	,	_	PU	PU	_	26	punct	_	_
12	因为	_	CS	CS	_	15	advmod	_	_
13	如果	_	CS	CS	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	这样	_	VV	VV	_	26	pccomp	_	_
16	的话	_	SP	SP	_	15	dep	_	_
17	,	_	PU	PU	_	26	punct	_	_
18	她	_	PN	PN	_	26	nsubj	_	_
19	为了	_	P	P	_	26	prep	_	_
20	使	_	VV	VV	_	19	pccomp	_	_
21	我	_	PN	PN	_	22	nsubj	_	_
22	难堪	_	VV	VV	_	20	ccomp	_	_
23	,	_	PU	PU	_	22	punct	_	_
24	她	_	PN	PN	_	25	nsubj	_	_
25	可能	_	VV	VV	_	22	ccomp	_	_
26	会	_	VV	VV	_	6	conj	_	_
27	真的	_	NN	NN	_	29	nn	_	_
28	死去	_	NN	NN	_	29	nn	_	_
29	…	_	NN	NN	_	26	dobj	_	_
30	”	_	PU	PU	_	29	punct	_	_

Oracle:
(x65 / 可能-01, arg0, x67 / 会-02)
(x65 / 可能-01, purpose, x71 / 使-01)
(x67 / 会-02, arg0, x68 / 死去-01)
(x68 / 死去-01, arg0, x70 / 她)
(x68 / 死去-01, manner, x69 / 真的)
(x71 / 使-01, arg1, x73 / 我)
(x71 / 使-01, arg2, x74 / 难堪-01)
(x75 / 得-02, arg1, x77 / 装-03)
(x77 / 装-03, arg1, x79 / 护理-01)

Input(Some(Graph((say :arg1 (causation :arg1 (condition :arg1 (这样 :polarity -) :arg2 (可能-01 :purpose (使-01 :arg2 难堪-01 :arg1 我 :arg0 x70) :arg0 (会-02 :arg0 (死去-01 :arg0 她 :manner 真的)))) :arg2 (得-02 :arg1 (装-03 :arg1 (护理-01 :arg1 x70 :arg0 x73) :arg0 x73) :arg0 x73))),ArrayBuffer(Span(14,15,List(0),这样,这样,false), Span(24,25,List(1),可能,可能-01,false), Span(19,20,List(2),使,使-01,false), Span(21,22,List(3),难堪,难堪-01,false), Span(2,3,List(4),我,我,false), Span(25,26,List(5),会,会-02,false), Span(27,28,List(6),死去,死去-01,false), Span(9,10,List(7),她,她,false), Span(26,27,List(8),真的,真的,false), Span(4,5,List(9),得,得-02,false), Span(5,6,List(10),装,装-03,false), Span(8,9,List(11),护理,护理-01,false)),Map(2 -> 使-01, 5 -> 会-02, 8 -> 真的, 7 -> 她, 1 -> 可能-01, 4 -> 我, 11 -> 护理-01, 6 -> 死去-01, 9 -> 得-02, 0 -> 这样, 10 -> 装-03, 3 -> 难堪-01),Map(x67 -> 会-02, x73 -> 我, x75 -> 得-02, x63 -> 这样, x69 -> 真的, x68 -> 死去-01, x74 -> 难堪-01, x77 -> 装-03, x71 -> 使-01, x65 -> 可能-01, x79 -> 护理-01, x70 -> 她))),[Ljava.lang.String;@6f2e1024,Annotation([Ljava.lang.String;@536d97f8,[Ljava.lang.String;@3c50ad4b,[Ljava.lang.String;@37496720),Annotation([Ljava.lang.String;@28f9fedd,[Ljava.lang.String;@17947e6d,[Ledu.cmu.lti.nlp.amr.Dependency;@2e17a321),Annotation([Ljava.lang.String;@521bb1a4,[Ljava.lang.String;@35f3a22c,[Ljava.lang.String;@1a0c5e9),Annotation([Ljava.lang.String;@123d7057,[Ljava.lang.String;@1d247525,[Ledu.cmu.lti.nlp.amr.Entity;@35ee466f))
AMR:
(x63 / 这样, prep-on-behalf, x79 / 护理-01)
(x65 / 可能-01, purpose, x71 / 使-01)
(x65 / 可能-01, season, x67 / 会-02)
(x67 / 会-02, manner, x69 / 真的)
(x68 / 死去-01, manner, x69 / 真的)
(x71 / 使-01, poss, x63 / 这样)
(x71 / 使-01, scale, x74 / 难堪-01)
(x75 / 得-02, poss, x73 / 我)
(x75 / 得-02, season, x77 / 装-03)
(x77 / 装-03, season, x79 / 护理-01)
(x79 / 护理-01, season, x70 / 她)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
Decoded in 44,286 microseconds
Sentence: 接着 他 又 说道 ： “ 我 还 以为 我 有 一 朵 独一无二 的 花 呢 ， 我 有 的 仅 是 一 朵 普通 的 花 。

Oracle Span 1:  仅 => 仅
Oracle Span 2:  他 => 他
Oracle Span 3:  以为 => 以为-02
Oracle Span 4:  又 => 又
Oracle Span 5:  普通 => 普通
Oracle Span 6:  有 => 有-01
Oracle Span 7:  有 => (thing :arg1-of 有-01)
Oracle Span 8:  独一无二 => 独一无二-01
Oracle Span 9:  花 => 花
Oracle Span 10:  花 => 花
Oracle Span 11:  说道 => 说道-01
Oracle Span 12:  还 => 还
Spans:
Span 21-22:  仅 => 仅
Span 1-2:  他 => 他
Span 8-9:  以为 => 以为-02
Span 2-3:  又 => 又
Span 25-26:  普通 => 普通
Span 10-11:  有 => 有-01
Span 19-20:  有 => (thing :arg1-of 有-01)
Span 13-14:  独一无二 => 独一无二-01
Span 15-16:  花 => 花
Span 27-28:  花 => 花
Span 3-4:  说道 => 说道-01
Span 7-8:  还 => 还

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这 朵 花 ， 再 加上 三 座 只 有 我 膝盖 那么 高 的 火山 ， 而且 其中 一 座 还 可能 是 永远 熄灭 了 的 ， 这 一切 不 会 使 我 成为 一 个 了不起 的 王子 … ”

Oracle Span 1:  一切 => 一切
Oracle Span 2:  了不起 => 了不起-01
Oracle Span 3:  会 => 会-02
Oracle Span 4:  加上 => 加上-01
Oracle Span 5:  可能 => 可能-01
Oracle Span 6:  成为 => 成为-01
Oracle Span 7:  我 => 我
Oracle Span 8:  永远 => 永远
Oracle Span 9:  火山 => 火山
Oracle Span 10:  熄灭 => 熄灭-01
Oracle Span 11:  王子 => 王子
Oracle Span 12:  膝盖 => 膝盖
Oracle Span 13:  花 => 花
Oracle Span 14:  这 => 这
Oracle Span 15:  这 => 这
Oracle Span 16:  那么 => 那么
Oracle Span 17:  高 => 高-02
Spans:
Span 30-31:  一切 => 一切
Span 38-39:  了不起 => 了不起-01
Span 32-33:  会 => 会-02
Span 5-6:  加上 => 加上-01
Span 22-23:  可能 => 可能-01
Span 35-36:  成为 => 成为-01
Span 10-11:  我 => 我
Span 24-25:  永远 => 永远
Span 15-16:  火山 => 火山
Span 25-26:  熄灭 => 熄灭-01
Span 40-41:  王子 => 王子
Span 11-12:  膝盖 => 膝盖
Span 2-3:  花 => 花
Span 0-1:  这 => 这
Span 29-30:  这 => 这
Span 12-13:  那么 => 那么
Span 13-14:  高 => 高-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 30-31:  一切 => 一切
Oracle Span 38-39:  了不起 => 了不起-01
Oracle Span 32-33:  会 => 会-02
Oracle Span 5-6:  加上 => 加上-01
Oracle Span 22-23:  可能 => 可能-01
Oracle Span 35-36:  成为 => 成为-01
Oracle Span 10-11:  我 => 我
Oracle Span 24-25:  永远 => 永远
Oracle Span 15-16:  火山 => 火山
Oracle Span 25-26:  熄灭 => 熄灭-01
Oracle Span 40-41:  王子 => 王子
Oracle Span 11-12:  膝盖 => 膝盖
Oracle Span 2-3:  花 => 花
Oracle Span 0-1:  这 => 这
Oracle Span 29-30:  这 => 这
Oracle Span 12-13:  那么 => 那么
Oracle Span 13-14:  高 => 高-02

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	朵	_	M	M	_	1	clf	_	_
3	花	_	NN	NN	_	6	nsubj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	再	_	AD	AD	_	6	advmod	_	_
6	加上	_	VV	VV	_	0	root	_	_
7	三	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	16	clf	_	_
9	只	_	AD	AD	_	10	advmod	_	_
10	有	_	VE	VE	_	16	rcmod	_	_
11	我	_	PN	PN	_	14	nsubj	_	_
12	膝盖	_	AD	AD	_	14	advmod	_	_
13	那么	_	AD	AD	_	14	advmod	_	_
14	高	_	VA	VA	_	10	dep	_	_
15	的	_	DEC	DEC	_	10	cpm	_	_
16	火山	_	NN	NN	_	6	dobj	_	_
17	,	_	PU	PU	_	6	punct	_	_
18	而且	_	AD	AD	_	23	advmod	_	_
19	其中	_	NN	NN	_	23	nsubj	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	座	_	M	M	_	23	nsubj	_	_
22	还	_	AD	AD	_	23	advmod	_	_
23	可能	_	VV	VV	_	6	conj	_	_
24	是	_	VC	VC	_	26	cop	_	_
25	永远	_	AD	AD	_	26	advmod	_	_
26	熄灭	_	VV	VV	_	23	dobj	_	_
27	了	_	AS	AS	_	26	asp	_	_
28	的	_	DEC	DEC	_	26	cpm	_	_
29	,	_	PU	PU	_	6	punct	_	_
30	这	_	DT	DT	_	33	dep	_	_
31	一切	_	CD	CD	_	30	dep	_	_
32	不	_	AD	AD	_	33	neg	_	_
33	会	_	VV	VV	_	6	conj	_	_
34	使	_	VV	VV	_	41	rcmod	_	_
35	我	_	PN	PN	_	36	nsubj	_	_
36	成为	_	VV	VV	_	34	ccomp	_	_
37	一	_	CD	CD	_	38	nummod	_	_
38	个	_	M	M	_	39	clf	_	_
39	了不起	_	NN	NN	_	36	dobj	_	_
40	的	_	DEC	DEC	_	34	cpm	_	_
41	王子	_	NN	NN	_	33	dobj	_	_
42	…	_	PU	PU	_	6	punct	_	_
43	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x102 / 高-02, arg0, x100 / 火山)
(x102 / 高-02, degree, x107 / 那么)
(x108 / 可能-01, arg0, x109 / 熄灭-01)
(x108 / 可能-01, subset, x100 / 火山)
(x109 / 熄灭-01, time, x110 / 永远)
(x86 / 会-02, arg0, x87 / 成为-01)
(x86 / 会-02, cause, x93 / 一切)
(x87 / 成为-01, arg0, x88 / 我)
(x87 / 成为-01, arg1, x89 / 王子)
(x89 / 王子, mod, x91 / 了不起-01)
(x93 / 一切, mod, x94 / 这)
(x97 / 加上-01, arg0, x98 / 花)
(x97 / 加上-01, arg1, x100 / 火山)
(x98 / 花, mod, x99 / 这)

Input(Some(Graph((say :arg1 (会-02 :cause (一切 :mod (这 :arg0-of (mean :arg1 (加上-01 :arg1 (火山 :subset-of (可能-01 :arg0 (熄灭-01 :arg0 (x100 :quant 1) :time 永远)) :arg0-of (高-02 :degree 那么 :arg1 (thing :compared-to (膝盖 :poss x88))) :quant 3) :arg0 (花 :mod 这))))) :polarity - :arg0 (成为-01 :arg1 (王子 :mod 了不起-01 :quant 1) :arg0 我))),ArrayBuffer(Span(32,33,List(0),会,会-02,false), Span(30,31,List(1),一切,一切,false), Span(0,1,List(2),这,这,false), Span(5,6,List(3),加上,加上-01,false), Span(15,16,List(4),火山,火山,false), Span(22,23,List(5),可能,可能-01,false), Span(25,26,List(6),熄灭,熄灭-01,false), Span(24,25,List(7),永远,永远,false), Span(13,14,List(8),高,高-02,false), Span(12,13,List(9),那么,那么,false), Span(11,12,List(10),膝盖,膝盖,false), Span(2,3,List(11),花,花,false), Span(29,30,List(12),这,这,false), Span(35,36,List(13),成为,成为-01,false), Span(40,41,List(14),王子,王子,false), Span(38,39,List(15),了不起,了不起-01,false), Span(10,11,List(16),我,我,false)),Map(2 -> 这, 5 -> 可能-01, 12 -> 这, 15 -> 了不起-01, 8 -> 高-02, 7 -> 永远, 1 -> 一切, 4 -> 火山, 11 -> 花, 14 -> 王子, 6 -> 熄灭-01, 9 -> 那么, 0 -> 会-02, 16 -> 我, 10 -> 膝盖, 3 -> 加上-01, 13 -> 成为-01),Map(x94 -> 这, x88 -> 我, x102 -> 高-02, x105 -> 膝盖, x108 -> 可能-01, x93 -> 一切, x99 -> 这, x107 -> 那么, x87 -> 成为-01, x110 -> 永远, x86 -> 会-02, x89 -> 王子, x98 -> 花, x109 -> 熄灭-01, x100 -> 火山, x97 -> 加上-01, x91 -> 了不起-01))),[Ljava.lang.String;@4ba02375,Annotation([Ljava.lang.String;@7593ea79,[Ljava.lang.String;@3289079a,[Ljava.lang.String;@32fa809f),Annotation([Ljava.lang.String;@788ba63e,[Ljava.lang.String;@12a14b74,[Ledu.cmu.lti.nlp.amr.Dependency;@68ee3b6d),Annotation([Ljava.lang.String;@e76b097,[Ljava.lang.String;@2be95d31,[Ljava.lang.String;@338b49d3),Annotation([Ljava.lang.String;@2aa7399c,[Ljava.lang.String;@11eed657,[Ledu.cmu.lti.nlp.amr.Entity;@708f018e))
AMR:
(x102 / 高-02, degree, x105 / 膝盖)
(x102 / 高-02, degree, x107 / 那么)
(x102 / 高-02, degree, x88 / 我)
(x102 / 高-02, degree, x97 / 加上-01)
(x102 / 高-02, prep-into, x100 / 火山)
(x108 / 可能-01, prep-into, x110 / 永远)
(x108 / 可能-01, subset, x100 / 火山)
(x109 / 熄灭-01, prep-into, x93 / 一切)
(x109 / 熄灭-01, time, x110 / 永远)
(x86 / 会-02, prep-into, x87 / 成为-01)
(x86 / 会-02, topic, x93 / 一切)
(x87 / 成为-01, snt2, x91 / 了不起-01)
(x89 / 王子, mod, x91 / 了不起-01)
(x93 / 一切, mod, x99 / 这)
(x97 / 加上-01, source, x98 / 花)
(x98 / 花, mod, x94 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 93,846 microseconds
Sentence: 于是 ， 他 躺 在 草丛 中 哭泣 起来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  哭泣 => 哭泣-01
Oracle Span 3:  草丛 => 草丛
Oracle Span 4:  躺 => 躺-01
Spans:
Span 2-3:  他 => 他
Span 7-8:  哭泣 => 哭泣-01
Span 5-6:  草丛 => 草丛
Span 3-4:  躺 => 躺-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  哭泣 => 哭泣-01
Oracle Span 5-6:  草丛 => 草丛
Oracle Span 3-4:  躺 => 躺-01

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	躺	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	8	prep	_	_
6	草丛	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	5	plmod	_	_
8	哭泣	_	VV	VV	_	4	ccomp	_	_
9	起来	_	VV	VV	_	8	comod	_	_
10	。	_	PU	PU	_	4	punct	_	_
11	他	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x10 / 躺-01, arg1, x12 / 草丛)
(x8 / 哭泣-01, arg0, x9 / 他)
(x8 / 哭泣-01, manner, x10 / 躺-01)

Input(Some(Graph((causation :arg2 (哭泣-01 :manner (躺-01 :arg1 草丛 :arg0 x9) :arg0 他)),ArrayBuffer(Span(7,8,List(0),哭泣,哭泣-01,false), Span(3,4,List(1),躺,躺-01,false), Span(5,6,List(2),草丛,草丛,false), Span(2,3,List(3),他,他,false)),Map(2 -> 草丛, 1 -> 躺-01, 0 -> 哭泣-01, 3 -> 他),Map(x10 -> 躺-01, x8 -> 哭泣-01, x12 -> 草丛, x9 -> 他))),[Ljava.lang.String;@19a31b9d,Annotation([Ljava.lang.String;@a5bbaec,[Ljava.lang.String;@6d60899e,[Ljava.lang.String;@65eb76cd),Annotation([Ljava.lang.String;@6415f61e,[Ljava.lang.String;@334ebcaa,[Ledu.cmu.lti.nlp.amr.Dependency;@5a0bef24),Annotation([Ljava.lang.String;@6468a7b6,[Ljava.lang.String;@2f860823,[Ljava.lang.String;@696b4a95),Annotation([Ljava.lang.String;@6c1cfa53,[Ljava.lang.String;@4d68b571,[Ledu.cmu.lti.nlp.amr.Entity;@52b06bef))
AMR:
(x10 / 躺-01, prep-on-behalf, x9 / 他)
(x8 / 哭泣-01, manner, x10 / 躺-01)
(x8 / 哭泣-01, manner, x12 / 草丛)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,156 microseconds
Sentence: XXI 。

Oracle Span 1:  XXI => XXI
Spans:
Span 0-1:  XXI => XXI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXI => XXI

Dependencies:
1	XXI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXI,ArrayBuffer(Span(0,1,List(0),XXI,XXI,false)),Map(0 -> XXI),Map(x0 -> XXI))),[Ljava.lang.String;@61bcbcce,Annotation([Ljava.lang.String;@6af91cc8,[Ljava.lang.String;@6232ffdb,[Ljava.lang.String;@330c1f61),Annotation([Ljava.lang.String;@37d28f02,[Ljava.lang.String;@15efda6c,[Ledu.cmu.lti.nlp.amr.Dependency;@6056232d),Annotation([Ljava.lang.String;@33f2df51,[Ljava.lang.String;@107bfcb2,[Ljava.lang.String;@7bac686b),Annotation([Ljava.lang.String;@2ab26378,[Ljava.lang.String;@f9f3928,[Ledu.cmu.lti.nlp.amr.Entity;@404eca05))
AMR:


Decoded in 1,180 microseconds
Sentence: 就 在 这 当儿 ， 跑来 了 一 只 狐狸 。

Oracle Span 1:  就 => 就
Oracle Span 2:  当儿 => 当儿
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  跑来 => 跑来-01
Oracle Span 5:  这 => 这
Spans:
Span 0-1:  就 => 就
Span 3-4:  当儿 => 当儿
Span 9-10:  狐狸 => 狐狸
Span 5-6:  跑来 => 跑来-01
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  就 => 就
Oracle Span 3-4:  当儿 => 当儿
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 5-6:  跑来 => 跑来-01
Oracle Span 2-3:  这 => 这

Dependencies:
1	就	_	AD	AD	_	4	advmod	_	_
2	在	_	P	P	_	4	prep	_	_
3	这	_	PN	PN	_	2	pobj	_	_
4	当儿	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	跑来	_	VV	VV	_	4	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	只	_	M	M	_	10	clf	_	_
10	狐狸	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 跑来-01, arg0, x4 / 狐狸)
(x2 / 跑来-01, time, x6 / 当儿)
(x6 / 当儿, manner, x8 / 就)
(x6 / 当儿, mod, x7 / 这)

Input(Some(Graph((跑来-01 :time (当儿 :manner 就 :mod 这) :arg0 (狐狸 :quant 1)),ArrayBuffer(Span(5,6,List(0),跑来,跑来-01,false), Span(3,4,List(1),当儿,当儿,false), Span(0,1,List(2),就,就,false), Span(2,3,List(3),这,这,false), Span(9,10,List(4),狐狸,狐狸,false)),Map(2 -> 就, 1 -> 当儿, 4 -> 狐狸, 0 -> 跑来-01, 3 -> 这),Map(x2 -> 跑来-01, x8 -> 就, x7 -> 这, x4 -> 狐狸, x6 -> 当儿))),[Ljava.lang.String;@58b91d57,Annotation([Ljava.lang.String;@61a91c9b,[Ljava.lang.String;@17092fff,[Ljava.lang.String;@2121d1f9),Annotation([Ljava.lang.String;@31e2232f,[Ljava.lang.String;@1806bc4c,[Ledu.cmu.lti.nlp.amr.Dependency;@462e1e64),Annotation([Ljava.lang.String;@69afa141,[Ljava.lang.String;@49f40c00,[Ljava.lang.String;@643d2dae),Annotation([Ljava.lang.String;@52d6d273,[Ljava.lang.String;@4667c4c1,[Ledu.cmu.lti.nlp.amr.Entity;@2f9a4401))
AMR:
(x2 / 跑来-01, prep-for, x4 / 狐狸)
(x2 / 跑来-01, time, x6 / 当儿)
(x6 / 当儿, manner, x8 / 就)
(x6 / 当儿, mod, x7 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,579 microseconds
Sentence: “ 你 好 。 ” 狐狸 说 。

Oracle Span 1:  你 => 你
Oracle Span 2:  好 => 好-01
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-01
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg0, x4 / 你)
(x0 / 说-01, arg1, x3 / 好-01)

Input(Some(Graph((说-01 :arg0 你 :arg1 好-01 :arg0 狐狸),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(1,2,List(1),你,你,false), Span(2,3,List(2),好,好-01,false), Span(5,6,List(3),狐狸,狐狸,false)),Map(2 -> 好-01, 1 -> 你, 0 -> 说-01, 3 -> 狐狸),Map(x2 -> 狐狸, x4 -> 你, x3 -> 好-01, x0 -> 说-01))),[Ljava.lang.String;@22c75c01,Annotation([Ljava.lang.String;@46e64760,[Ljava.lang.String;@3e5fd2b1,[Ljava.lang.String;@43982337),Annotation([Ljava.lang.String;@5b275811,[Ljava.lang.String;@2f0ed952,[Ledu.cmu.lti.nlp.amr.Dependency;@6f044c58),Annotation([Ljava.lang.String;@6d074b14,[Ljava.lang.String;@c017175,[Ljava.lang.String;@559cedee),Annotation([Ljava.lang.String;@18371d89,[Ljava.lang.String;@4f3faa70,[Ledu.cmu.lti.nlp.amr.Entity;@4832f03b))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, topic, x3 / 好-01)
(x3 / 好-01, beneficiary, x4 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,681 microseconds
Sentence: “ 你 好 。 ” 小 王子 很 有 礼貌 地 回答 道 。 他 转 过 身 来 ， 但 什么 也 没有 看到 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  你 => 你
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  好 => 好-01
Oracle Span 6:  小 => 小-01
Oracle Span 7:  很 => 很
Oracle Span 8:  有 => 有-01
Oracle Span 9:  王子 => 王子
Oracle Span 10:  看到 => 看到-01
Oracle Span 11:  礼貌 => 礼貌-01
Spans:
Span 22-23:  也 => 也
Span 21-22:  什么 => 什么
Span 1-2:  你 => 你
Span 11-12:  回答 => 回答-01
Span 2-3:  好 => 好-01
Span 5-6:  小 => 小-01
Span 7-8:  很 => 很
Span 8-9:  有 => 有-01
Span 6-7:  王子 => 王子
Span 24-25:  看到 => 看到-01
Span 9-10:  礼貌 => 礼貌-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 22-23:  也 => 也
Oracle Span 21-22:  什么 => 什么
Oracle Span 1-2:  你 => 你
Oracle Span 11-12:  回答 => 回答-01
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  小 => 小-01
Oracle Span 7-8:  很 => 很
Oracle Span 8-9:  有 => 有-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 24-25:  看到 => 看到-01
Oracle Span 9-10:  礼貌 => 礼貌-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	12	nsubj	_	_
8	很	_	AD	AD	_	12	advmod	_	_
9	有	_	VE	VE	_	12	dvpmod	_	_
10	礼貌	_	NN	NN	_	9	dobj	_	_
11	地	_	DEV	DEV	_	9	dvpm	_	_
12	回答	_	VV	VV	_	0	root	_	_
13	道	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_
15	他	_	PN	PN	_	16	nsubj	_	_
16	转	_	VV	VV	_	19	lccomp	_	_
17	过	_	AS	AS	_	16	asp	_	_
18	身	_	NN	NN	_	16	dobj	_	_
19	来	_	LC	LC	_	24	loc	_	_
20	,	_	PU	PU	_	24	punct	_	_
21	但	_	AD	AD	_	24	advmod	_	_
22	什么	_	PN	PN	_	24	nsubj	_	_
23	也	_	AD	AD	_	24	advmod	_	_
24	没有	_	VV	VV	_	12	conj	_	_
25	看到	_	VV	VV	_	24	comod	_	_
26	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x17 / 回答-01, arg2, x22 / 好-01)
(x17 / 回答-01, manner, x24 / 有-01)
(x22 / 好-01, arg0, x23 / 你)
(x24 / 有-01, arg0, x27 / 王子)
(x24 / 有-01, arg1, x26 / 礼貌-01)
(x24 / 有-01, degree, x25 / 很)
(x27 / 王子, mod, x28 / 小-01)
(x33 / 看到-01, arg1, x36 / 什么)
(x33 / 看到-01, manner, x37 / 也)

Input(Some(Graph((multi-sentence :snt1 (回答-01 :arg0 x27 :manner (有-01 :arg0 (王子 :mod 小-01) :arg1 礼貌-01 :degree 很) :arg2 (好-01 :arg0 你)) :snt2 (contrast :arg1 (转身-01 :arg0 x27) :arg2 (看到-01 :manner 也 :arg1 什么 :arg0 x27 :polarity -))),ArrayBuffer(Span(11,12,List(0),回答,回答-01,false), Span(8,9,List(1),有,有-01,false), Span(6,7,List(2),王子,王子,false), Span(5,6,List(3),小,小-01,false), Span(9,10,List(4),礼貌,礼貌-01,false), Span(7,8,List(5),很,很,false), Span(2,3,List(6),好,好-01,false), Span(1,2,List(7),你,你,false), Span(24,25,List(8),看到,看到-01,false), Span(22,23,List(9),也,也,false), Span(21,22,List(10),什么,什么,false)),Map(2 -> 王子, 5 -> 很, 8 -> 看到-01, 7 -> 你, 1 -> 有-01, 4 -> 礼貌-01, 6 -> 好-01, 9 -> 也, 0 -> 回答-01, 10 -> 什么, 3 -> 小-01),Map(x28 -> 小-01, x37 -> 也, x22 -> 好-01, x25 -> 很, x33 -> 看到-01, x27 -> 王子, x36 -> 什么, x24 -> 有-01, x23 -> 你, x26 -> 礼貌-01, x17 -> 回答-01))),[Ljava.lang.String;@7af3874e,Annotation([Ljava.lang.String;@5a8816cc,[Ljava.lang.String;@68565bc7,[Ljava.lang.String;@37baddde),Annotation([Ljava.lang.String;@5115f590,[Ljava.lang.String;@4b31a708,[Ledu.cmu.lti.nlp.amr.Dependency;@11e355ca),Annotation([Ljava.lang.String;@70d63e05,[Ljava.lang.String;@e11ecfa,[Ljava.lang.String;@485e13d7),Annotation([Ljava.lang.String;@43984213,[Ljava.lang.String;@2ff7a73,[Ledu.cmu.lti.nlp.amr.Entity;@38830ea))
AMR:
(x17 / 回答-01, location, x36 / 什么)
(x17 / 回答-01, manner, x24 / 有-01)
(x22 / 好-01, beneficiary, x23 / 你)
(x24 / 有-01, degree, x25 / 很)
(x24 / 有-01, location, x27 / 王子)
(x24 / 有-01, purpose, x26 / 礼貌-01)
(x27 / 王子, mod, x28 / 小-01)
(x28 / 小-01, degree, x22 / 好-01)
(x33 / 看到-01, location, x36 / 什么)
(x33 / 看到-01, manner, x37 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.2
Decoded in 35,749 microseconds
Sentence: “ 我 在 这儿 ， 在 苹果 树 下 。 ” 那 声音 说 。

Oracle Span 1:  下 => 下
Oracle Span 2:  声音 => 声音
Oracle Span 3:  我 => 我
Oracle Span 4:  树 => 树
Oracle Span 5:  苹果 => 苹果
Oracle Span 6:  说 => 说-01
Oracle Span 7:  那 => 那
Spans:
Span 8-9:  下 => 下
Span 12-13:  声音 => 声音
Span 1-2:  我 => 我
Span 7-8:  树 => 树
Span 6-7:  苹果 => 苹果
Span 13-14:  说 => 说-01
Span 11-12:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  下 => 下
Oracle Span 12-13:  声音 => 声音
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  树 => 树
Oracle Span 6-7:  苹果 => 苹果
Oracle Span 13-14:  说 => 说-01
Oracle Span 11-12:  那 => 那

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	在	_	VV	VV	_	0	root	_	_
4	这儿	_	PN	PN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	在	_	P	P	_	3	conj	_	_
7	苹果	_	NN	NN	_	8	nn	_	_
8	树	_	NN	NN	_	9	lobj	_	_
9	下	_	LC	LC	_	6	plmod	_	_
10	。	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_
12	那	_	DT	DT	_	13	det	_	_
13	声音	_	NN	NN	_	14	nsubj	_	_
14	说	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 声音)
(x0 / 说-01, arg1, x4 / 我)
(x2 / 声音, mod, x3 / 那)
(x4 / 我, location, x6 / 下)
(x6 / 下, arg0, x7 / 树)
(x7 / 树, mod, x8 / 苹果)

Input(Some(Graph((说-01 :arg1 (我 :location (下 :arg0 (树 :mod 苹果))) :arg0 (声音 :mod 那)),ArrayBuffer(Span(13,14,List(0),说,说-01,false), Span(1,2,List(1),我,我,false), Span(8,9,List(2),下,下,false), Span(7,8,List(3),树,树,false), Span(6,7,List(4),苹果,苹果,false), Span(12,13,List(5),声音,声音,false), Span(11,12,List(6),那,那,false)),Map(2 -> 下, 5 -> 声音, 1 -> 我, 4 -> 苹果, 6 -> 那, 0 -> 说-01, 3 -> 树),Map(x2 -> 声音, x8 -> 苹果, x7 -> 树, x4 -> 我, x3 -> 那, x6 -> 下, x0 -> 说-01))),[Ljava.lang.String;@3b705be7,Annotation([Ljava.lang.String;@3a790e40,[Ljava.lang.String;@43acd79e,[Ljava.lang.String;@1e1b061),Annotation([Ljava.lang.String;@38f77cd9,[Ljava.lang.String;@4a8e6e89,[Ledu.cmu.lti.nlp.amr.Dependency;@6fbb4061),Annotation([Ljava.lang.String;@63d5874f,[Ljava.lang.String;@60c73e58,[Ljava.lang.String;@5984feef),Annotation([Ljava.lang.String;@6c0905f6,[Ljava.lang.String;@23a918c7,[Ledu.cmu.lti.nlp.amr.Entity;@7a45d714))
AMR:
(x0 / 说-01, location, x2 / 声音)
(x2 / 声音, mod, x3 / 那)
(x4 / 我, location, x6 / 下)
(x6 / 下, location, x2 / 声音)
(x6 / 下, location, x7 / 树)
(x7 / 树, mod, x8 / 苹果)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,507 microseconds
Sentence: “ 你 是 谁 ？ ” 小 王子 说 ， “ 你 很 漂亮 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  漂亮 => 漂亮-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 6-7:  小 => 小-01
Span 12-13:  很 => 很
Span 13-14:  漂亮 => 漂亮-01
Span 7-8:  王子 => 王子
Span 8-9:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  小 => 小-01
Oracle Span 12-13:  很 => 很
Oracle Span 13-14:  漂亮 => 漂亮-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	谁	_	PN	PN	_	8	vmod	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	“	_	PU	PU	_	14	punct	_	_
12	你	_	PN	PN	_	14	nsubj	_	_
13	很	_	AD	AD	_	14	advmod	_	_
14	漂亮	_	VA	VA	_	9	ccomp	_	_
15	。	_	PU	PU	_	9	punct	_	_
16	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 说-01, arg0, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x19 / 漂亮-01, degree, x20 / 很)

Input(Some(Graph((说-01 :arg1 (and :op (amr-unknown :domain 你 :mode interrogative) :op (漂亮-01 :arg0 x17 :degree 很)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(1,2,List(1),你,你,false), Span(13,14,List(2),漂亮,漂亮-01,false), Span(12,13,List(3),很,很,false), Span(7,8,List(4),王子,王子,false), Span(6,7,List(5),小,小-01,false)),Map(2 -> 漂亮-01, 5 -> 小-01, 1 -> 你, 4 -> 王子, 0 -> 说-01, 3 -> 很),Map(x19 -> 漂亮-01, x13 -> 王子, x11 -> 说-01, x14 -> 小-01, x20 -> 很, x17 -> 你))),[Ljava.lang.String;@4483d35,Annotation([Ljava.lang.String;@204abeff,[Ljava.lang.String;@4b4ee511,[Ljava.lang.String;@1f67761b),Annotation([Ljava.lang.String;@5a034157,[Ljava.lang.String;@2f4ba1ae,[Ledu.cmu.lti.nlp.amr.Dependency;@1391af3b),Annotation([Ljava.lang.String;@3762c4fc,[Ljava.lang.String;@77ab22be,[Ljava.lang.String;@59fbb34),Annotation([Ljava.lang.String;@1b6924cb,[Ljava.lang.String;@3a8d467e,[Ledu.cmu.lti.nlp.amr.Entity;@141d3d43))
AMR:
(x11 / 说-01, direction, x13 / 王子)
(x11 / 说-01, location, x17 / 你)
(x11 / 说-01, prep-as, x19 / 漂亮-01)
(x13 / 王子, mod, x14 / 小-01)
(x19 / 漂亮-01, degree, x20 / 很)

WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,640 microseconds
Sentence: “ 我 是 一 只 狐狸 。 ” 狐狸 说 。

Oracle Span 1:  我 => 我
Oracle Span 2:  狐狸 => 狐狸
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  我 => 我
Span 5-6:  狐狸 => 狐狸
Span 8-9:  狐狸 => 狐狸
Span 9-10:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 9-10:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	只	_	M	M	_	6	nsubj	_	_
6	狐狸	_	NN	NN	_	3	conj	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	狐狸	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 狐狸)
(x3 / 狐狸, domain, x5 / 我)

Input(Some(Graph((说-01 :arg1 (狐狸 :quant 1 :domain 我) :arg0 狐狸),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(5,6,List(1),狐狸,狐狸,false), Span(1,2,List(2),我,我,false), Span(8,9,List(3),狐狸,狐狸,false)),Map(2 -> 我, 1 -> 狐狸, 0 -> 说-01, 3 -> 狐狸),Map(x2 -> 狐狸, x5 -> 我, x3 -> 狐狸, x0 -> 说-01))),[Ljava.lang.String;@6ca372ef,Annotation([Ljava.lang.String;@3ebe4ccc,[Ljava.lang.String;@6ed043d3,[Ljava.lang.String;@135a8c6f),Annotation([Ljava.lang.String;@6419a0e1,[Ljava.lang.String;@280d4882,[Ledu.cmu.lti.nlp.amr.Dependency;@44af588b),Annotation([Ljava.lang.String;@3d19d85,[Ljava.lang.String;@2ae62bb6,[Ljava.lang.String;@68ed3f30),Annotation([Ljava.lang.String;@56b859a6,[Ljava.lang.String;@590adb41,[Ledu.cmu.lti.nlp.amr.Entity;@42aae04d))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, op, x3 / 狐狸)
(x3 / 狐狸, domain, x5 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,247 microseconds
Sentence: “ 来 和 我 一起 玩 吧 ， ” 小 王子 建议 道 ，

Oracle Span 1:  一起 => 一起
Oracle Span 2:  小 => 小-01
Oracle Span 3:  建议 => 建议-01
Oracle Span 4:  来 => 来-05
Oracle Span 5:  王子 => 王子
Oracle Span 6:  玩 => 玩-01
Spans:
Span 4-5:  一起 => 一起
Span 9-10:  小 => 小-01
Span 11-12:  建议 => 建议-01
Span 1-2:  来 => 来-05
Span 10-11:  王子 => 王子
Span 5-6:  玩 => 玩-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一起 => 一起
Oracle Span 9-10:  小 => 小-01
Oracle Span 11-12:  建议 => 建议-01
Oracle Span 1-2:  来 => 来-05
Oracle Span 10-11:  王子 => 王子
Oracle Span 5-6:  玩 => 玩-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	来	_	VV	VV	_	0	root	_	_
3	和	_	P	P	_	6	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	一起	_	AD	AD	_	6	advmod	_	_
6	玩	_	VV	VV	_	2	dobj	_	_
7	吧	_	SP	SP	_	6	dep	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	dep	_	_
12	建议	_	VV	VV	_	2	dep	_	_
13	道	_	NN	NN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 建议-01, arg0, x2 / 王子)
(x0 / 建议-01, arg1, x4 / 来-05)
(x15 / 玩-01, manner, x17 / 一起)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, arg1, x15 / 玩-01)

Input(Some(Graph((建议-01 :mode expressive :arg1 (来-05 :arg1 (玩-01 :manner 一起 :accompanier x2)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),建议,建议-01,false), Span(1,2,List(1),来,来-05,false), Span(5,6,List(2),玩,玩-01,false), Span(4,5,List(3),一起,一起,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false)),Map(2 -> 玩-01, 5 -> 小-01, 1 -> 来-05, 4 -> 王子, 0 -> 建议-01, 3 -> 一起),Map(x2 -> 王子, x15 -> 玩-01, x4 -> 来-05, x3 -> 小-01, x17 -> 一起, x0 -> 建议-01))),[Ljava.lang.String;@43bf5397,Annotation([Ljava.lang.String;@575e572f,[Ljava.lang.String;@58015e56,[Ljava.lang.String;@4d3c6593),Annotation([Ljava.lang.String;@7426a448,[Ljava.lang.String;@516462cc,[Ledu.cmu.lti.nlp.amr.Dependency;@3456558),Annotation([Ljava.lang.String;@2dfb885e,[Ljava.lang.String;@6cbe7d4d,[Ljava.lang.String;@1e3e1014),Annotation([Ljava.lang.String;@3679d92e,[Ljava.lang.String;@47b11ec7,[Ledu.cmu.lti.nlp.amr.Entity;@58fa5769))
AMR:
(x0 / 建议-01, location, x15 / 玩-01)
(x0 / 建议-01, location, x2 / 王子)
(x15 / 玩-01, manner, x17 / 一起)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, purpose, x15 / 玩-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,823 microseconds
Sentence: “ 我 很 苦恼 … ”

Oracle Span 1:  很 => 很
Oracle Span 2:  我 => 我
Oracle Span 3:  苦恼 => 苦恼-01
Spans:
Span 2-3:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  苦恼 => 苦恼-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  苦恼 => 苦恼-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	苦恼	_	VV	VV	_	0	root	_	_
5	…	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 苦恼-01, arg0, x10 / 我)
(x8 / 苦恼-01, degree, x9 / 很)

Input(Some(Graph((say :arg1 (苦恼-01 :arg0 我 :degree 很)),ArrayBuffer(Span(3,4,List(0),苦恼,苦恼-01,false), Span(1,2,List(1),我,我,false), Span(2,3,List(2),很,很,false)),Map(2 -> 很, 1 -> 我, 0 -> 苦恼-01),Map(x10 -> 我, x8 -> 苦恼-01, x9 -> 很))),[Ljava.lang.String;@36aa52d2,Annotation([Ljava.lang.String;@4ee25d80,[Ljava.lang.String;@16a35bd,[Ljava.lang.String;@ba17be6),Annotation([Ljava.lang.String;@6f798482,[Ljava.lang.String;@332bcab0,[Ledu.cmu.lti.nlp.amr.Dependency;@633cc6b5),Annotation([Ljava.lang.String;@6342ff7f,[Ljava.lang.String;@403c3a01,[Ljava.lang.String;@2daf06fc),Annotation([Ljava.lang.String;@28237492,[Ljava.lang.String;@5ceecfee,[Ledu.cmu.lti.nlp.amr.Entity;@7da31a40))
AMR:
(x8 / 苦恼-01, degree, x9 / 很)
(x8 / 苦恼-01, poss, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,913 microseconds
Sentence: “ 我 不 能 和 你 一起 玩 ， ” 狐狸 说 ，

Oracle Span 1:  一起 => 一起
Oracle Span 2:  你 => 你
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  玩 => 玩-01
Oracle Span 5:  能 => 能-01
Oracle Span 6:  说 => 说-01
Spans:
Span 6-7:  一起 => 一起
Span 5-6:  你 => 你
Span 10-11:  狐狸 => 狐狸
Span 7-8:  玩 => 玩-01
Span 3-4:  能 => 能-01
Span 11-12:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一起 => 一起
Oracle Span 5-6:  你 => 你
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 7-8:  玩 => 玩-01
Oracle Span 3-4:  能 => 能-01
Oracle Span 11-12:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	7	nsubj	_	_
3	不	_	AD	AD	_	7	neg	_	_
4	能	_	VV	VV	_	7	mmod	_	_
5	和	_	P	P	_	7	prep	_	_
6	你	_	PN	PN	_	5	pobj	_	_
7	一起	_	VV	VV	_	0	root	_	_
8	玩	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_
11	狐狸	_	NN	NN	_	12	dep	_	_
12	说	_	VV	VV	_	7	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 能-01)
(x14 / 玩-01, manner, x17 / 一起)
(x3 / 能-01, arg0, x14 / 玩-01)

Input(Some(Graph((说-01 :arg1 (能-01 :arg0 (玩-01 :manner 一起 :arg0 (x2 :accompanier 你)) :polarity -) :arg0 狐狸),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(3,4,List(1),能,能-01,false), Span(7,8,List(2),玩,玩-01,false), Span(6,7,List(3),一起,一起,false), Span(5,6,List(4),你,你,false), Span(10,11,List(5),狐狸,狐狸,false)),Map(2 -> 玩-01, 5 -> 狐狸, 1 -> 能-01, 4 -> 你, 0 -> 说-01, 3 -> 一起),Map(x16 -> 你, x2 -> 狐狸, x3 -> 能-01, x14 -> 玩-01, x17 -> 一起, x0 -> 说-01))),[Ljava.lang.String;@28ee7bee,Annotation([Ljava.lang.String;@1b5a1d85,[Ljava.lang.String;@31e130bf,[Ljava.lang.String;@54755dd9),Annotation([Ljava.lang.String;@f1f7db2,[Ljava.lang.String;@4462efe1,[Ledu.cmu.lti.nlp.amr.Dependency;@7c3e4b1a),Annotation([Ljava.lang.String;@2db4ad1,[Ljava.lang.String;@765d55d5,[Ljava.lang.String;@2513a118),Annotation([Ljava.lang.String;@2bfb583b,[Ljava.lang.String;@73ae0257,[Ledu.cmu.lti.nlp.amr.Entity;@6fc1020a))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, time, x14 / 玩-01)
(x14 / 玩-01, manner, x17 / 一起)
(x17 / 一起, domain, x16 / 你)
(x3 / 能-01, prep-through, x14 / 玩-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,249 microseconds
Sentence: “ 我 还 没有 被 驯服 呢 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  驯服 => 驯服-01
Spans:
Span 1-2:  我 => 我
Span 5-6:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	没有	_	VE	VE	_	0	root	_	_
5	被	_	SB	SB	_	6	pass	_	_
6	驯服	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 驯服-01, arg1, x8 / 我)

Input(Some(Graph((say :arg1 (驯服-01 :polarity - :arg1 我)),ArrayBuffer(Span(5,6,List(0),驯服,驯服-01,false), Span(1,2,List(1),我,我,false)),Map(1 -> 我, 0 -> 驯服-01),Map(x8 -> 我, x7 -> 驯服-01))),[Ljava.lang.String;@5762658b,Annotation([Ljava.lang.String;@2629d5dc,[Ljava.lang.String;@2596d7f4,[Ljava.lang.String;@42a0501e),Annotation([Ljava.lang.String;@6aa3bfc,[Ljava.lang.String;@6e4599c0,[Ledu.cmu.lti.nlp.amr.Dependency;@7dffda8b),Annotation([Ljava.lang.String;@3d1f558a,[Ljava.lang.String;@6abdec0e,[Ljava.lang.String;@28f4f300),Annotation([Ljava.lang.String;@2b5c4f17,[Ljava.lang.String;@6ca8fcf3,[Ledu.cmu.lti.nlp.amr.Entity;@69f0b0f4))
AMR:
(x7 / 驯服-01, location, x8 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,068 microseconds
Sentence: “ 啊 ！

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x5 -> 啊))),[Ljava.lang.String;@66933239,Annotation([Ljava.lang.String;@2f7efd0b,[Ljava.lang.String;@41ad373,[Ljava.lang.String;@6801b414),Annotation([Ljava.lang.String;@177c41d7,[Ljava.lang.String;@4f327096,[Ledu.cmu.lti.nlp.amr.Dependency;@1d61a348),Annotation([Ljava.lang.String;@78a515e4,[Ljava.lang.String;@d2291de,[Ljava.lang.String;@51c8f62c),Annotation([Ljava.lang.String;@41a374be,[Ljava.lang.String;@11f9535b,[Ledu.cmu.lti.nlp.amr.Entity;@8cc8cdb))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,095 microseconds
Sentence: 真 对不起 。 ” 小 王子 说 。

Oracle Span 1:  对不起 => 对不起-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  真 => 真
Oracle Span 5:  说 => 说-01
Spans:
Span 1-2:  对不起 => 对不起-01
Span 4-5:  小 => 小-01
Span 5-6:  王子 => 王子
Span 0-1:  真 => 真
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  对不起 => 对不起-01
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 0-1:  真 => 真
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	真	_	NN	NN	_	3	nn	_	_
2	对不起	_	NN	NN	_	3	nn	_	_
3	。	_	NN	NN	_	6	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 对不起-01, degree, x12 / 真)
(x7 / 说-01, arg0, x9 / 王子)
(x7 / 说-01, arg1, x11 / 对不起-01)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph((说-01 :arg1 (对不起-01 :degree 真) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(1,2,List(1),对不起,对不起-01,false), Span(0,1,List(2),真,真,false), Span(5,6,List(3),王子,王子,false), Span(4,5,List(4),小,小-01,false)),Map(2 -> 真, 1 -> 对不起-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x10 -> 小-01, x12 -> 真, x7 -> 说-01, x11 -> 对不起-01, x9 -> 王子))),[Ljava.lang.String;@1e236278,Annotation([Ljava.lang.String;@44fff386,[Ljava.lang.String;@1fc713c9,[Ljava.lang.String;@7301eebe),Annotation([Ljava.lang.String;@76b47204,[Ljava.lang.String;@4d6ccc97,[Ledu.cmu.lti.nlp.amr.Dependency;@6a12c7a8),Annotation([Ljava.lang.String;@161aa04a,[Ljava.lang.String;@436bd4df,[Ljava.lang.String;@6848a051),Annotation([Ljava.lang.String;@149b0577,[Ljava.lang.String;@5740ff5e,[Ledu.cmu.lti.nlp.amr.Entity;@4a901445))
AMR:
(x11 / 对不起-01, degree, x12 / 真)
(x7 / 说-01, prep-for, x11 / 对不起-01)
(x7 / 说-01, topic, x9 / 王子)
(x9 / 王子, mod, x10 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,734 microseconds
Sentence: 思索 了 一会儿 ， 他 又 说道 ： “ 什么 叫 ‘ 驯服 ’ 呀 ？ ”

Oracle Span 1:  一会儿 => 一会儿
Oracle Span 2:  他 => 他
Oracle Span 3:  又 => 又
Oracle Span 4:  思索 => 思索-01
Oracle Span 5:  说道 => 说道-01
Oracle Span 6:  驯服 => 驯服
Spans:
Span 2-3:  一会儿 => 一会儿
Span 4-5:  他 => 他
Span 5-6:  又 => 又
Span 0-1:  思索 => 思索-01
Span 6-7:  说道 => 说道-01
Span 12-13:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一会儿 => 一会儿
Oracle Span 4-5:  他 => 他
Oracle Span 5-6:  又 => 又
Oracle Span 0-1:  思索 => 思索-01
Oracle Span 6-7:  说道 => 说道-01
Oracle Span 12-13:  驯服 => 驯服

Dependencies:
1	思索	_	VV	VV	_	7	conj	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	一会儿	_	CD	CD	_	1	dep	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	他	_	PN	PN	_	7	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说道	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	什么	_	PN	PN	_	11	nsubj	_	_
11	叫	_	VV	VV	_	7	ccomp	_	_
12	‘	_	PU	PU	_	13	punct	_	_
13	驯服	_	NN	NN	_	11	dobj	_	_
14	’	_	PU	PU	_	13	punct	_	_
15	呀	_	SP	SP	_	7	dep	_	_
16	？	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 思索-01, duration, x3 / 一会儿)
(x9 / 说道-01, arg0, x11 / 他)
(x9 / 说道-01, arg1, x12 / 驯服)
(x9 / 说道-01, manner, x10 / 又)

Input(Some(Graph((temporal :arg1 (思索-01 :duration 一会儿) :arg2 (说道-01 :mode interrogative :arg1 (驯服 :arg0-of (mean :arg1 amr-unknown)) :arg0 他 :manner 又)),ArrayBuffer(Span(0,1,List(0),思索,思索-01,false), Span(2,3,List(1),一会儿,一会儿,false), Span(6,7,List(2),说道,说道-01,false), Span(12,13,List(3),驯服,驯服,false), Span(4,5,List(4),他,他,false), Span(5,6,List(5),又,又,false)),Map(2 -> 说道-01, 5 -> 又, 1 -> 一会儿, 4 -> 他, 0 -> 思索-01, 3 -> 驯服),Map(x10 -> 又, x2 -> 思索-01, x12 -> 驯服, x11 -> 他, x3 -> 一会儿, x9 -> 说道-01))),[Ljava.lang.String;@67f77f6e,Annotation([Ljava.lang.String;@2b0b7e5a,[Ljava.lang.String;@7be1ce6a,[Ljava.lang.String;@3119cf6f),Annotation([Ljava.lang.String;@6dc9da2d,[Ljava.lang.String;@1d408060,[Ledu.cmu.lti.nlp.amr.Dependency;@68a78f3c),Annotation([Ljava.lang.String;@17ba57f0,[Ljava.lang.String;@3481ff98,[Ljava.lang.String;@2ddb3ae8),Annotation([Ljava.lang.String;@79518e00,[Ljava.lang.String;@3c91530d,[Ledu.cmu.lti.nlp.amr.Entity;@7d70638))
AMR:
(x2 / 思索-01, duration, x11 / 他)
(x2 / 思索-01, duration, x3 / 一会儿)
(x9 / 说道-01, manner, x10 / 又)
(x9 / 说道-01, op, x12 / 驯服)
(x9 / 说道-01, snt5, x11 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 12,100 microseconds
Sentence: “ 你 不 是 此 地 人 。 ” 狐狸 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  你 => 你
Oracle Span 3:  地 => 地
Oracle Span 4:  此 => 此
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  说 => 说-01
Spans:
Span 6-7:  人 => 人
Span 1-2:  你 => 你
Span 5-6:  地 => 地
Span 4-5:  此 => 此
Span 9-10:  狐狸 => 狐狸
Span 10-11:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  地 => 地
Oracle Span 4-5:  此 => 此
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 10-11:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	此	_	DT	DT	_	6	det	_	_
6	地	_	NN	NN	_	7	nn	_	_
7	人	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	狐狸	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	4	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 人)
(x3 / 人, domain, x5 / 你)
(x3 / 人, location, x7 / 地)
(x7 / 地, mod, x8 / 此)

Input(Some(Graph((说-01 :arg1 (人 :location (地 :mod 此) :polarity - :domain 你) :arg0 狐狸),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(6,7,List(1),人,人,false), Span(5,6,List(2),地,地,false), Span(4,5,List(3),此,此,false), Span(1,2,List(4),你,你,false), Span(9,10,List(5),狐狸,狐狸,false)),Map(2 -> 地, 5 -> 狐狸, 1 -> 人, 4 -> 你, 0 -> 说-01, 3 -> 此),Map(x2 -> 狐狸, x5 -> 你, x8 -> 此, x7 -> 地, x3 -> 人, x0 -> 说-01))),[Ljava.lang.String;@732f6050,Annotation([Ljava.lang.String;@6fbc1bb,[Ljava.lang.String;@30c4e352,[Ljava.lang.String;@f1dd5b4),Annotation([Ljava.lang.String;@73809e7,[Ljava.lang.String;@5f96f6a2,[Ledu.cmu.lti.nlp.amr.Dependency;@48df4071),Annotation([Ljava.lang.String;@290e8cab,[Ljava.lang.String;@6e3ecf5c,[Ljava.lang.String;@67507df),Annotation([Ljava.lang.String;@341b13a8,[Ljava.lang.String;@692dba54,[Ledu.cmu.lti.nlp.amr.Entity;@71f1cc02))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, location, x7 / 地)
(x3 / 人, location, x7 / 地)
(x5 / 你, location, x8 / 此)
(x7 / 地, mod, x8 / 此)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,125 microseconds
Sentence: “ 你 来 寻找 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  来 => 来-05
Spans:
Span 1-2:  你 => 你
Span 3-4:  寻找 => 寻找-01
Span 2-3:  来 => 来-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  来 => 来-05

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	来	_	MSP	MSP	_	4	prtmod	_	_
4	寻找	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x9 / 来-05, arg0, x10 / 你)
(x9 / 来-05, arg1, x11 / 寻找-01)

Input(Some(Graph((say :arg1 (来-05 :arg1 (寻找-01 :mode interrogative :arg1 amr-unknown :arg0 x10) :arg0 你)),ArrayBuffer(Span(2,3,List(0),来,来-05,false), Span(3,4,List(1),寻找,寻找-01,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 寻找-01, 0 -> 来-05),Map(x10 -> 你, x11 -> 寻找-01, x9 -> 来-05))),[Ljava.lang.String;@5f14761c,Annotation([Ljava.lang.String;@33feb805,[Ljava.lang.String;@37854b34,[Ljava.lang.String;@48eb001a),Annotation([Ljava.lang.String;@34332b8d,[Ljava.lang.String;@724b939e,[Ledu.cmu.lti.nlp.amr.Dependency;@6f8aba08),Annotation([Ljava.lang.String;@7ff19c33,[Ljava.lang.String;@52b3bf03,[Ljava.lang.String;@7cca01a8),Annotation([Ljava.lang.String;@462abec3,[Ljava.lang.String;@35c9a231,[Ledu.cmu.lti.nlp.amr.Entity;@7a4d582c))
AMR:
(x11 / 寻找-01, direction, x9 / 来-05)
(x9 / 来-05, conj-as-if, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,628 microseconds
Sentence: “ 我 来 找 人 。 ” 小 王子 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  小 => 小-01
Oracle Span 3:  我 => 我
Oracle Span 4:  找 => 找-01
Oracle Span 5:  来 => 来-05
Oracle Span 6:  王子 => 王子
Oracle Span 7:  说 => 说-01
Spans:
Span 4-5:  人 => 人
Span 7-8:  小 => 小-01
Span 1-2:  我 => 我
Span 3-4:  找 => 找-01
Span 2-3:  来 => 来-05
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 7-8:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  找 => 找-01
Oracle Span 2-3:  来 => 来-05
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	dep	_	_
3	来	_	NN	NN	_	4	prep	_	_
4	找	_	VV	VV	_	0	root	_	_
5	人	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 来-05)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, arg0, x5 / 我)
(x4 / 来-05, arg1, x6 / 找-01)
(x6 / 找-01, arg1, x8 / 人)

Input(Some(Graph((说-01 :arg1 (来-05 :arg1 (找-01 :arg1 人 :arg0 x5) :arg0 我) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(2,3,List(1),来,来-05,false), Span(3,4,List(2),找,找-01,false), Span(4,5,List(3),人,人,false), Span(1,2,List(4),我,我,false), Span(8,9,List(5),王子,王子,false), Span(7,8,List(6),小,小-01,false)),Map(2 -> 找-01, 5 -> 王子, 1 -> 来-05, 4 -> 我, 6 -> 小-01, 0 -> 说-01, 3 -> 人),Map(x2 -> 王子, x5 -> 我, x8 -> 人, x4 -> 来-05, x3 -> 小-01, x6 -> 找-01, x0 -> 说-01))),[Ljava.lang.String;@5626d18c,Annotation([Ljava.lang.String;@45e9b12d,[Ljava.lang.String;@3dc95b8b,[Ljava.lang.String;@2d55e826),Annotation([Ljava.lang.String;@4d1ff6b1,[Ljava.lang.String;@45f756e6,[Ledu.cmu.lti.nlp.amr.Dependency;@329548d0),Annotation([Ljava.lang.String;@3003827c,[Ljava.lang.String;@29b40b3,[Ljava.lang.String;@7d247660),Annotation([Ljava.lang.String;@656f62dc,[Ljava.lang.String;@49d30c6f,[Ledu.cmu.lti.nlp.amr.Entity;@1115433e))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, example, x5 / 我)
(x6 / 找-01, location, x2 / 王子)
(x6 / 找-01, location, x4 / 来-05)
(x6 / 找-01, location, x8 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,122 microseconds
Sentence: “ 什么 叫 ‘ 驯服 ’ 呢 ？ ”

Oracle Span 1:  驯服 => 驯服-01
Spans:
Span 4-5:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	dep	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	‘	_	PU	PU	_	5	punct	_	_
5	驯服	_	VV	VV	_	3	ccomp	_	_
6	’	_	PU	PU	_	5	punct	_	_
7	呢	_	SP	SP	_	3	dep	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 驯服-01 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(4,5,List(0),驯服,驯服-01,false)),Map(0 -> 驯服-01),Map(x8 -> 驯服-01))),[Ljava.lang.String;@4fdca00a,Annotation([Ljava.lang.String;@513b52af,[Ljava.lang.String;@5a8c93,[Ljava.lang.String;@3bed3315),Annotation([Ljava.lang.String;@119b0892,[Ljava.lang.String;@1a3e8e24,[Ledu.cmu.lti.nlp.amr.Dependency;@4ed4a7e4),Annotation([Ljava.lang.String;@1c7350b0,[Ljava.lang.String;@55651434,[Ljava.lang.String;@3bc4ef12),Annotation([Ljava.lang.String;@50448409,[Ljava.lang.String;@5634a861,[Ledu.cmu.lti.nlp.amr.Entity;@2b0dc227))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,967 microseconds
Sentence: “ 人 ， ” 狐狸 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  狐狸 => 狐狸
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  人 => 人
Span 4-5:  狐狸 => 狐狸
Span 5-6:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人 => 人
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	人	_	VA	VA	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_
5	狐狸	_	AD	AD	_	6	advmod	_	_
6	说	_	VV	VV	_	2	dep	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 人)

Input(Some(Graph((说-01 :arg1 人 :arg0 狐狸),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(1,2,List(1),人,人,false), Span(4,5,List(2),狐狸,狐狸,false)),Map(2 -> 狐狸, 1 -> 人, 0 -> 说-01),Map(x2 -> 狐狸, x3 -> 人, x0 -> 说-01))),[Ljava.lang.String;@37ad042b,Annotation([Ljava.lang.String;@43bdaa1b,[Ljava.lang.String;@30b975ad,[Ljava.lang.String;@75e09567),Annotation([Ljava.lang.String;@2a334bac,[Ljava.lang.String;@470d183,[Ledu.cmu.lti.nlp.amr.Dependency;@7f9fc8bd),Annotation([Ljava.lang.String;@ea52184,[Ljava.lang.String;@3e7b65d7,[Ljava.lang.String;@3c854752),Annotation([Ljava.lang.String;@3ddeaa5f,[Ljava.lang.String;@1a500561,[Ledu.cmu.lti.nlp.amr.Entity;@7f608e21))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, topic, x3 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,282 microseconds
Sentence: “ 他们 有 枪 ， 他们 还 打猎 ，

Oracle Span 1:  他们 => 他们
Oracle Span 2:  打猎 => 打猎-01
Oracle Span 3:  有 => 有-01
Oracle Span 4:  枪 => 枪
Oracle Span 5:  还 => 还
Spans:
Span 1-2:  他们 => 他们
Span 7-8:  打猎 => 打猎-01
Span 2-3:  有 => 有-01
Span 3-4:  枪 => 枪
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 7-8:  打猎 => 打猎-01
Oracle Span 2-3:  有 => 有-01
Oracle Span 3-4:  枪 => 枪
Oracle Span 6-7:  还 => 还

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	有	_	VE	VE	_	0	root	_	_
4	枪	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	他们	_	PN	PN	_	8	nsubj	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	打猎	_	VV	VV	_	3	conj	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x18 / 有-01, arg0, x19 / 他们)
(x18 / 有-01, arg1, x20 / 枪)
(x21 / 打猎-01, manner, x23 / 还)

Input(Some(Graph((say :arg1 (progression :arg1 (有-01 :arg1 枪 :arg0 他们) :arg2 (打猎-01 :manner 还 :arg0 x19))),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(3,4,List(1),枪,枪,false), Span(1,2,List(2),他们,他们,false), Span(7,8,List(3),打猎,打猎-01,false), Span(6,7,List(4),还,还,false)),Map(2 -> 他们, 1 -> 枪, 4 -> 还, 0 -> 有-01, 3 -> 打猎-01),Map(x19 -> 他们, x21 -> 打猎-01, x18 -> 有-01, x23 -> 还, x20 -> 枪))),[Ljava.lang.String;@6949e948,Annotation([Ljava.lang.String;@210d2a6c,[Ljava.lang.String;@3bec5821,[Ljava.lang.String;@4086d8fb),Annotation([Ljava.lang.String;@66236a0a,[Ljava.lang.String;@2e3572e8,[Ledu.cmu.lti.nlp.amr.Dependency;@77c10a5f),Annotation([Ljava.lang.String;@176555c,[Ljava.lang.String;@7c781c42,[Ljava.lang.String;@795f8317),Annotation([Ljava.lang.String;@633fd91,[Ljava.lang.String;@355c94be,[Ledu.cmu.lti.nlp.amr.Entity;@97a145b))
AMR:
(x18 / 有-01, location, x19 / 他们)
(x18 / 有-01, location, x20 / 枪)
(x20 / 枪, purpose, x21 / 打猎-01)
(x21 / 打猎-01, manner, x23 / 还)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 8,428 microseconds
Sentence: 这 真 碍事 ！

Oracle Span 1:  真 => 真
Oracle Span 2:  碍事 => 碍事-01
Oracle Span 3:  这 => 这
Spans:
Span 1-2:  真 => 真
Span 2-3:  碍事 => 碍事-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  真 => 真
Oracle Span 2-3:  碍事 => 碍事-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	碍事	_	VV	VV	_	0	root	_	_
4	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 碍事-01, arg0, x3 / 这)
(x0 / 碍事-01, degree, x2 / 真)

Input(Some(Graph((碍事-01 :mode expressive :arg0 这 :degree 真),ArrayBuffer(Span(2,3,List(0),碍事,碍事-01,false), Span(0,1,List(1),这,这,false), Span(1,2,List(2),真,真,false)),Map(2 -> 真, 1 -> 这, 0 -> 碍事-01),Map(x2 -> 真, x3 -> 这, x0 -> 碍事-01))),[Ljava.lang.String;@c386958,Annotation([Ljava.lang.String;@157ec23b,[Ljava.lang.String;@44d64d4e,[Ljava.lang.String;@1dd74143),Annotation([Ljava.lang.String;@526a9908,[Ljava.lang.String;@3166f664,[Ledu.cmu.lti.nlp.amr.Dependency;@47ac613b),Annotation([Ljava.lang.String;@60d6fdd4,[Ljava.lang.String;@66f28a1f,[Ljava.lang.String;@60a19573),Annotation([Ljava.lang.String;@44a085e5,[Ljava.lang.String;@134ff8f8,[Ledu.cmu.lti.nlp.amr.Entity;@619f2afc))
AMR:
(x0 / 碍事-01, degree, x2 / 真)
(x0 / 碍事-01, domain, x3 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 3,679 microseconds
Sentence: 他们 也 养 鸡 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  他们 => 他们
Oracle Span 3:  养 => 养-01
Oracle Span 4:  鸡 => 鸡
Spans:
Span 1-2:  也 => 也
Span 0-1:  他们 => 他们
Span 2-3:  养 => 养-01
Span 3-4:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  养 => 养-01
Oracle Span 3-4:  鸡 => 鸡

Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	养	_	VV	VV	_	0	root	_	_
4	鸡	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 养-01, arg0, x2 / 他们)
(x0 / 养-01, arg1, x4 / 鸡)
(x0 / 养-01, manner, x3 / 也)

Input(Some(Graph((养-01 :arg1 鸡 :manner 也 :arg0 他们),ArrayBuffer(Span(2,3,List(0),养,养-01,false), Span(3,4,List(1),鸡,鸡,false), Span(1,2,List(2),也,也,false), Span(0,1,List(3),他们,他们,false)),Map(2 -> 也, 1 -> 鸡, 0 -> 养-01, 3 -> 他们),Map(x2 -> 他们, x4 -> 鸡, x3 -> 也, x0 -> 养-01))),[Ljava.lang.String;@df921b1,Annotation([Ljava.lang.String;@4db60246,[Ljava.lang.String;@2152ab30,[Ljava.lang.String;@3902bd2c),Annotation([Ljava.lang.String;@7d32e714,[Ljava.lang.String;@eb6ec6,[Ledu.cmu.lti.nlp.amr.Dependency;@34d45ec0),Annotation([Ljava.lang.String;@18137eab,[Ljava.lang.String;@727320fa,[Ljava.lang.String;@2935fd2c),Annotation([Ljava.lang.String;@3f018494,[Ljava.lang.String;@3ce443f9,[Ledu.cmu.lti.nlp.amr.Entity;@57fbc06f))
AMR:
(x0 / 养-01, ARG6, x2 / 他们)
(x0 / 养-01, manner, x3 / 也)
(x0 / 养-01, quant, x4 / 鸡)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,879 microseconds
Sentence: 这些 是 他们 唯一 的 可取 之 处

Oracle Span 1:  他们 => 他们
Oracle Span 2:  唯一 => 唯一
Oracle Span 3:  这些 => 这些
Spans:
Span 2-3:  他们 => 他们
Span 3-4:  唯一 => 唯一
Span 0-1:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  他们 => 他们
Oracle Span 3-4:  唯一 => 唯一
Oracle Span 0-1:  这些 => 这些

Dependencies:
1	这些	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	他们	_	PN	PN	_	6	nn	_	_
4	唯一	_	JJ	JJ	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	可取	_	NN	NN	_	8	assmod	_	_
7	之	_	DEG	DEG	_	6	assm	_	_
8	处	_	NN	NN	_	2	attr	_	_

Oracle:


Input(Some(Graph((可取之处 :mod 唯一 :poss 他们 :domain 这些),ArrayBuffer(Span(3,4,List(0),唯一,唯一,false), Span(2,3,List(1),他们,他们,false), Span(0,1,List(2),这些,这些,false)),Map(2 -> 这些, 1 -> 他们, 0 -> 唯一),Map(x2 -> 唯一, x4 -> 这些, x3 -> 他们))),[Ljava.lang.String;@51a18b21,Annotation([Ljava.lang.String;@62b790a5,[Ljava.lang.String;@7c52fc81,[Ljava.lang.String;@7523a3dc),Annotation([Ljava.lang.String;@2806d6da,[Ljava.lang.String;@766a49c7,[Ledu.cmu.lti.nlp.amr.Dependency;@1db7157f),Annotation([Ljava.lang.String;@75e27856,[Ljava.lang.String;@6bccd036,[Ljava.lang.String;@4f4c88f9),Annotation([Ljava.lang.String;@6a756082,[Ljava.lang.String;@cb39552,[Ledu.cmu.lti.nlp.amr.Entity;@1f3b992))
AMR:
(x2 / 唯一, ARG3, x3 / 他们)
(x4 / 这些, location, x2 / 唯一)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
Decoded in 5,106 microseconds
Sentence: 你 是 来 寻找 鸡 的 吗 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  来 => 来-05
Oracle Span 4:  鸡 => 鸡
Spans:
Span 0-1:  你 => 你
Span 3-4:  寻找 => 寻找-01
Span 2-3:  来 => 来-05
Span 4-5:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  来 => 来-05
Oracle Span 4-5:  鸡 => 鸡

Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	来	_	MSP	MSP	_	4	prtmod	_	_
4	寻找	_	VV	VV	_	2	attr	_	_
5	鸡	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	吗	_	SP	SP	_	2	dep	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 寻找-01, arg1, x13 / 鸡)
(x9 / 来-05, arg0, x10 / 你)
(x9 / 来-05, arg1, x11 / 寻找-01)

Input(Some(Graph((say :arg1 (来-05 :mode interrogative :arg1 (寻找-01 :arg1 鸡 :arg0 x10) :arg0 你)),ArrayBuffer(Span(2,3,List(0),来,来-05,false), Span(3,4,List(1),寻找,寻找-01,false), Span(4,5,List(2),鸡,鸡,false), Span(0,1,List(3),你,你,false)),Map(2 -> 鸡, 1 -> 寻找-01, 0 -> 来-05, 3 -> 你),Map(x10 -> 你, x13 -> 鸡, x11 -> 寻找-01, x9 -> 来-05))),[Ljava.lang.String;@2a53f215,Annotation([Ljava.lang.String;@6b63e6ad,[Ljava.lang.String;@7beae796,[Ljava.lang.String;@6749fe50),Annotation([Ljava.lang.String;@52bf7bf6,[Ljava.lang.String;@261db982,[Ledu.cmu.lti.nlp.amr.Dependency;@ae73c80),Annotation([Ljava.lang.String;@22f4f8f2,[Ljava.lang.String;@bbd4791,[Ljava.lang.String;@40a72ecd),Annotation([Ljava.lang.String;@73971965,[Ljava.lang.String;@76a14c8d,[Ledu.cmu.lti.nlp.amr.Entity;@17410c07))
AMR:
(x11 / 寻找-01, direction, x13 / 鸡)
(x9 / 来-05, prep-on, x11 / 寻找-01)
(x9 / 来-05, time, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,081 microseconds
Sentence: “ 不 ， ” 小 王子 说 ，

Oracle Span 1:  不 => 不
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  不 => 不
Span 4-5:  小 => 小-01
Span 5-6:  王子 => 王子
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不 => 不
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	,	_	JJ	JJ	_	6	amod	_	_
4	”	_	PU	PU	_	6	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	,	_	VA	VA	_	7	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 不)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 不 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(1,2,List(1),不,不,false), Span(5,6,List(2),王子,王子,false), Span(4,5,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 不, 0 -> 说-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 不, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@6ee99964,Annotation([Ljava.lang.String;@257ef9ed,[Ljava.lang.String;@59c70ceb,[Ljava.lang.String;@46f902e0),Annotation([Ljava.lang.String;@64f981e2,[Ljava.lang.String;@361abd01,[Ledu.cmu.lti.nlp.amr.Dependency;@575b5f7d),Annotation([Ljava.lang.String;@59bbb974,[Ljava.lang.String;@7165d530,[Ljava.lang.String;@12f49ca8),Annotation([Ljava.lang.String;@1fd9893c,[Ljava.lang.String;@1b2df3aa,[Ledu.cmu.lti.nlp.amr.Entity;@44be69aa))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, location, x4 / 不)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,115 microseconds
Sentence: “ 我 是 来 找 朋友 的 。

Oracle Span 1:  我 => 我
Oracle Span 2:  找 => 找-01
Oracle Span 3:  朋友 => 朋友
Oracle Span 4:  来 => 来-05
Spans:
Span 1-2:  我 => 我
Span 4-5:  找 => 找-01
Span 5-6:  朋友 => 朋友
Span 3-4:  来 => 来-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  找 => 找-01
Oracle Span 5-6:  朋友 => 朋友
Oracle Span 3-4:  来 => 来-05

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	找	_	VV	VV	_	3	attr	_	_
6	朋友	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 找-01, arg1, x12 / 朋友)
(x8 / 来-05, arg0, x9 / 我)
(x8 / 来-05, arg1, x10 / 找-01)

Input(Some(Graph((say :arg1 (来-05 :arg1 (找-01 :arg1 朋友 :arg0 x9) :arg0 我)),ArrayBuffer(Span(3,4,List(0),来,来-05,false), Span(4,5,List(1),找,找-01,false), Span(5,6,List(2),朋友,朋友,false), Span(1,2,List(3),我,我,false)),Map(2 -> 朋友, 1 -> 找-01, 0 -> 来-05, 3 -> 我),Map(x10 -> 找-01, x8 -> 来-05, x12 -> 朋友, x9 -> 我))),[Ljava.lang.String;@7219ac49,Annotation([Ljava.lang.String;@21da4b5f,[Ljava.lang.String;@551e4c6d,[Ljava.lang.String;@625a9c5d),Annotation([Ljava.lang.String;@5d1e0fbb,[Ljava.lang.String;@2eed37f4,[Ledu.cmu.lti.nlp.amr.Dependency;@9b76b60),Annotation([Ljava.lang.String;@3fb9a67f,[Ljava.lang.String;@127705e4,[Ljava.lang.String;@5562c2c9),Annotation([Ljava.lang.String;@673c4f6e,[Ljava.lang.String;@15c487a8,[Ledu.cmu.lti.nlp.amr.Entity;@3f36e8d1))
AMR:
(x10 / 找-01, location, x8 / 来-05)
(x10 / 找-01, prep-through, x12 / 朋友)
(x8 / 来-05, example, x9 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,209 microseconds
Sentence: 什么 叫 ‘ 驯服 ’ 呢 ？ ”

Oracle Span 1:  驯服 => 驯服-01
Spans:
Span 3-4:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  驯服 => 驯服-01

Dependencies:
1	什么	_	PN	PN	_	2	nsubj	_	_
2	叫	_	VV	VV	_	0	root	_	_
3	‘	_	PU	PU	_	4	punct	_	_
4	驯服	_	NN	NN	_	2	dobj	_	_
5	’	_	PU	PU	_	4	punct	_	_
6	呢	_	SP	SP	_	2	dep	_	_
7	？	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (mean :arg0 驯服-01 :arg1 amr-unknown :mode interrogative)),ArrayBuffer(Span(3,4,List(0),驯服,驯服-01,false)),Map(0 -> 驯服-01),Map(x8 -> 驯服-01))),[Ljava.lang.String;@7c011174,Annotation([Ljava.lang.String;@794366a5,[Ljava.lang.String;@480b57e2,[Ljava.lang.String;@40f35e52),Annotation([Ljava.lang.String;@340d6d89,[Ljava.lang.String;@561953e3,[Ledu.cmu.lti.nlp.amr.Dependency;@443faa85),Annotation([Ljava.lang.String;@1ee47d9e,[Ljava.lang.String;@41da3aee,[Ljava.lang.String;@5dc0ff7d),Annotation([Ljava.lang.String;@64920dc2,[Ljava.lang.String;@59a79443,[Ledu.cmu.lti.nlp.amr.Entity;@493ac8d3))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,036 microseconds
Sentence: “ 这 是 已经 早 就 被 人 遗忘 了 的 事情 ， ” 狐狸 说 ，

Oracle Span 1:  事情 => 事情
Oracle Span 2:  人 => 人
Oracle Span 3:  就 => 就
Oracle Span 4:  已经 => 已经
Oracle Span 5:  早 => 早-01
Oracle Span 6:  狐狸 => 狐狸
Oracle Span 7:  说 => 说-01
Oracle Span 8:  这 => 这
Oracle Span 9:  遗忘 => 遗忘-01
Spans:
Span 11-12:  事情 => 事情
Span 7-8:  人 => 人
Span 5-6:  就 => 就
Span 3-4:  已经 => 已经
Span 4-5:  早 => 早-01
Span 14-15:  狐狸 => 狐狸
Span 15-16:  说 => 说-01
Span 1-2:  这 => 这
Span 8-9:  遗忘 => 遗忘-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  事情 => 事情
Oracle Span 7-8:  人 => 人
Oracle Span 5-6:  就 => 就
Oracle Span 3-4:  已经 => 已经
Oracle Span 4-5:  早 => 早-01
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 15-16:  说 => 说-01
Oracle Span 1-2:  这 => 这
Oracle Span 8-9:  遗忘 => 遗忘-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	已经	_	AD	AD	_	9	advmod	_	_
5	早	_	AD	AD	_	9	advmod	_	_
6	就	_	AD	AD	_	9	advmod	_	_
7	被	_	LB	LB	_	9	pass	_	_
8	人	_	NN	NN	_	9	nsubj	_	_
9	遗忘	_	VV	VV	_	12	rcmod	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	的	_	DEC	DEC	_	9	cpm	_	_
12	事情	_	NN	NN	_	3	attr	_	_
13	,	_	PU	PU	_	3	punct	_	_
14	”	_	PU	PU	_	3	punct	_	_
15	狐狸	_	NN	NN	_	16	dep	_	_
16	说	_	VV	VV	_	3	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 事情)
(x3 / 事情, domain, x6 / 这)
(x7 / 遗忘-01, arg0, x8 / 人)
(x7 / 遗忘-01, arg1, x3 / 事情)
(x7 / 遗忘-01, manner, x10 / 就)
(x7 / 遗忘-01, time, x11 / 已经)
(x7 / 遗忘-01, time, x9 / 早-01)

Input(Some(Graph((说-01 :arg1 (事情 :arg1-of (遗忘-01 :time 已经 :manner 就 :time 早-01 :arg0 人) :domain 这) :arg0 狐狸),ArrayBuffer(Span(15,16,List(0),说,说-01,false), Span(11,12,List(1),事情,事情,false), Span(8,9,List(2),遗忘,遗忘-01,false), Span(3,4,List(3),已经,已经,false), Span(5,6,List(4),就,就,false), Span(4,5,List(5),早,早-01,false), Span(7,8,List(6),人,人,false), Span(1,2,List(7),这,这,false), Span(14,15,List(8),狐狸,狐狸,false)),Map(2 -> 遗忘-01, 5 -> 早-01, 8 -> 狐狸, 7 -> 这, 1 -> 事情, 4 -> 就, 6 -> 人, 0 -> 说-01, 3 -> 已经),Map(x2 -> 狐狸, x10 -> 就, x8 -> 人, x7 -> 遗忘-01, x11 -> 已经, x3 -> 事情, x6 -> 这, x9 -> 早-01, x0 -> 说-01))),[Ljava.lang.String;@13dbed9e,Annotation([Ljava.lang.String;@67531e3a,[Ljava.lang.String;@2b38b1f,[Ljava.lang.String;@1d50a7ca),Annotation([Ljava.lang.String;@51ab1ee3,[Ljava.lang.String;@2e766822,[Ledu.cmu.lti.nlp.amr.Dependency;@3003e580),Annotation([Ljava.lang.String;@28757abd,[Ljava.lang.String;@21a02556,[Ljava.lang.String;@3c8a7e38),Annotation([Ljava.lang.String;@138aa3cc,[Ljava.lang.String;@10a98392,[Ledu.cmu.lti.nlp.amr.Entity;@30839e44))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, location, x3 / 事情)
(x7 / 遗忘-01, location, x3 / 事情)
(x7 / 遗忘-01, manner, x10 / 就)
(x7 / 遗忘-01, time, x11 / 已经)
(x7 / 遗忘-01, time, x8 / 人)
(x7 / 遗忘-01, time, x9 / 早-01)
(x9 / 早-01, domain, x6 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 33,723 microseconds
Sentence: “ 它 的 意思 就 是 ‘ 建立 联系 ’ 。 ”

Oracle Span 1:  它 => 它
Oracle Span 2:  建立 => 建立-01
Oracle Span 3:  联系 => 联系
Spans:
Span 1-2:  它 => 它
Span 7-8:  建立 => 建立-01
Span 8-9:  联系 => 联系

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  它 => 它
Oracle Span 7-8:  建立 => 建立-01
Oracle Span 8-9:  联系 => 联系

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	意思	_	NN	NN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	‘	_	PU	PU	_	8	punct	_	_
8	建立	_	VV	VV	_	6	ccomp	_	_
9	联系	_	NN	NN	_	8	dobj	_	_
10	’	_	PU	PU	_	8	punct	_	_
11	。	_	PU	PU	_	6	punct	_	_
12	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 建立-01, arg1, x11 / 联系)

Input(Some(Graph((say :arg1 (mean :arg0 它 :arg1 (建立-01 :arg1 联系))),ArrayBuffer(Span(1,2,List(0),它,它,false), Span(7,8,List(1),建立,建立-01,false), Span(8,9,List(2),联系,联系,false)),Map(2 -> 联系, 1 -> 建立-01, 0 -> 它),Map(x10 -> 建立-01, x11 -> 联系, x9 -> 它))),[Ljava.lang.String;@5f174dd2,Annotation([Ljava.lang.String;@1945113f,[Ljava.lang.String;@45aca496,[Ljava.lang.String;@697173d9),Annotation([Ljava.lang.String;@ceddaf8,[Ljava.lang.String;@3d90eeb3,[Ledu.cmu.lti.nlp.amr.Dependency;@1db87583),Annotation([Ljava.lang.String;@7fb53256,[Ljava.lang.String;@1d6d1d42,[Ljava.lang.String;@27329d2a),Annotation([Ljava.lang.String;@7978e022,[Ljava.lang.String;@2f894ad9,[Ledu.cmu.lti.nlp.amr.Entity;@5afbd567))
AMR:
(x10 / 建立-01, location, x11 / 联系)
(x9 / 它, location, x11 / 联系)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 10,862 microseconds
Sentence: “ 建立 联系 ？ ”

Oracle Span 1:  建立 => 建立-01
Oracle Span 2:  联系 => 联系
Spans:
Span 1-2:  建立 => 建立-01
Span 2-3:  联系 => 联系

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  建立 => 建立-01
Oracle Span 2-3:  联系 => 联系

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	建立	_	VV	VV	_	0	root	_	_
3	联系	_	NN	NN	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 建立-01, arg1, x7 / 联系)

Input(Some(Graph((say :arg1 (建立-01 :arg1 联系) :mode interrogative),ArrayBuffer(Span(1,2,List(0),建立,建立-01,false), Span(2,3,List(1),联系,联系,false)),Map(1 -> 联系, 0 -> 建立-01),Map(x7 -> 联系, x6 -> 建立-01))),[Ljava.lang.String;@6993c8df,Annotation([Ljava.lang.String;@57545c3f,[Ljava.lang.String;@326e0b8e,[Ljava.lang.String;@36baa049),Annotation([Ljava.lang.String;@41184371,[Ljava.lang.String;@34585ac9,[Ledu.cmu.lti.nlp.amr.Dependency;@76a805b7),Annotation([Ljava.lang.String;@15f35bc3,[Ljava.lang.String;@167381c7,[Ljava.lang.String;@608b1fd2),Annotation([Ljava.lang.String;@56382bc9,[Ljava.lang.String;@591a4f8e,[Ledu.cmu.lti.nlp.amr.Entity;@53ed80d3))
AMR:
(x6 / 建立-01, location, x7 / 联系)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,122 microseconds
Sentence: “ 一点 不错 ， ” 狐狸 说 。

Oracle Span 1:  一点 => 一点
Oracle Span 2:  不错 => 不错-01
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  说 => 说-01
Spans:
Span 1-2:  一点 => 一点
Span 2-3:  不错 => 不错-01
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一点 => 一点
Oracle Span 2-3:  不错 => 不错-01
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	7	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 不错-01)
(x3 / 不错-01, degree, x4 / 一点)

Input(Some(Graph((说-01 :arg1 (不错-01 :degree 一点) :arg0 狐狸),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(2,3,List(1),不错,不错-01,false), Span(1,2,List(2),一点,一点,false), Span(5,6,List(3),狐狸,狐狸,false)),Map(2 -> 一点, 1 -> 不错-01, 0 -> 说-01, 3 -> 狐狸),Map(x2 -> 狐狸, x4 -> 一点, x3 -> 不错-01, x0 -> 说-01))),[Ljava.lang.String;@6ba060f3,Annotation([Ljava.lang.String;@7c51782d,[Ljava.lang.String;@77bc2e16,[Ljava.lang.String;@48e8c32a),Annotation([Ljava.lang.String;@20a7953c,[Ljava.lang.String;@57c00115,[Ledu.cmu.lti.nlp.amr.Dependency;@411a5965),Annotation([Ljava.lang.String;@4fe533ff,[Ljava.lang.String;@5377414a,[Ljava.lang.String;@4e83a98),Annotation([Ljava.lang.String;@17aa8a11,[Ljava.lang.String;@71b639d0,[Ledu.cmu.lti.nlp.amr.Entity;@18a25bbd))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, purpose, x3 / 不错-01)
(x3 / 不错-01, degree, x4 / 一点)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,292 microseconds
Sentence: “ 对 我 来说 ， 你 还 只 是 一 个 小 男孩 ， 就 像 其他 千万 个 小 男孩 一样 。

Oracle Span 1:  你 => 你
Oracle Span 2:  像 => 像-01
Oracle Span 3:  其他 => 其他
Oracle Span 4:  千万 => 千万
Oracle Span 5:  只 => 只
Oracle Span 6:  小 => 小-01
Oracle Span 7:  小 => 小-01
Oracle Span 8:  就 => 就
Oracle Span 9:  我 => 我
Oracle Span 10:  来说 => 来说-01
Oracle Span 11:  男孩 => 男孩
Oracle Span 12:  男孩 => 男孩
Oracle Span 13:  还 => 还
Spans:
Span 5-6:  你 => 你
Span 15-16:  像 => 像-01
Span 16-17:  其他 => 其他
Span 17-18:  千万 => 千万
Span 7-8:  只 => 只
Span 11-12:  小 => 小-01
Span 19-20:  小 => 小-01
Span 14-15:  就 => 就
Span 2-3:  我 => 我
Span 3-4:  来说 => 来说-01
Span 12-13:  男孩 => 男孩
Span 20-21:  男孩 => 男孩
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 15-16:  像 => 像-01
Oracle Span 16-17:  其他 => 其他
Oracle Span 17-18:  千万 => 千万
Oracle Span 7-8:  只 => 只
Oracle Span 11-12:  小 => 小-01
Oracle Span 19-20:  小 => 小-01
Oracle Span 14-15:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 12-13:  男孩 => 男孩
Oracle Span 20-21:  男孩 => 男孩
Oracle Span 6-7:  还 => 还

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	9	dep	_	_
5	,	_	PU	PU	_	9	punct	_	_
6	你	_	PN	PN	_	9	nsubj	_	_
7	还	_	AD	AD	_	9	advmod	_	_
8	只	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	13	clf	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	男孩	_	NN	NN	_	9	attr	_	_
14	,	_	PU	PU	_	9	punct	_	_
15	就	_	AD	AD	_	22	advmod	_	_
16	像	_	P	P	_	22	prep	_	_
17	其他	_	DT	DT	_	21	det	_	_
18	千万	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	17	dep	_	_
20	小	_	JJ	JJ	_	21	amod	_	_
21	男孩	_	NN	NN	_	16	pobj	_	_
22	一样	_	VA	VA	_	9	conj	_	_
23	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x17 / 来说-01, arg0, x18 / 你)
(x17 / 来说-01, arg1, x19 / 我)
(x17 / 来说-01, arg2, x20 / 男孩)
(x20 / 男孩, manner, x24 / 只)
(x20 / 男孩, manner, x25 / 还)
(x20 / 男孩, mod, x21 / 小-01)
(x26 / 像-01, arg0, x20 / 男孩)
(x26 / 像-01, arg1, x27 / 男孩)
(x26 / 像-01, manner, x30 / 就)
(x27 / 男孩, mod, x29 / 其他)
(x27 / 男孩, mod, x31 / 小-01)
(x27 / 男孩, quant, x28 / 千万)

Input(Some(Graph((say :arg1 (来说-01 :arg2 (男孩 :arg0-of (像-01 :manner 就 :arg1 (男孩 :mod 小-01 :mod 其他 :quant 千万)) :manner 还 :manner 只 :domain x18 :quant 1 :mod 小-01) :arg1 我 :arg0 你)),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(12,13,List(1),男孩,男孩,false), Span(15,16,List(2),像,像-01,false), Span(14,15,List(3),就,就,false), Span(20,21,List(4),男孩,男孩,false), Span(11,12,List(5),小,小-01,false), Span(16,17,List(6),其他,其他,false), Span(17,18,List(7),千万,千万,false), Span(6,7,List(8),还,还,false), Span(7,8,List(9),只,只,false), Span(19,20,List(10),小,小-01,false), Span(2,3,List(11),我,我,false), Span(5,6,List(12),你,你,false)),Map(2 -> 像-01, 5 -> 小-01, 12 -> 你, 8 -> 还, 7 -> 千万, 1 -> 男孩, 4 -> 男孩, 11 -> 我, 6 -> 其他, 9 -> 只, 0 -> 来说-01, 10 -> 小-01, 3 -> 就),Map(x28 -> 千万, x25 -> 还, x19 -> 我, x31 -> 小-01, x30 -> 就, x27 -> 男孩, x21 -> 小-01, x24 -> 只, x18 -> 你, x26 -> 像-01, x29 -> 其他, x20 -> 男孩, x17 -> 来说-01))),[Ljava.lang.String;@5d5b9ecb,Annotation([Ljava.lang.String;@1ee27d73,[Ljava.lang.String;@5e5aafc6,[Ljava.lang.String;@542f6803),Annotation([Ljava.lang.String;@5583098b,[Ljava.lang.String;@5807efad,[Ledu.cmu.lti.nlp.amr.Dependency;@53a84ff4),Annotation([Ljava.lang.String;@7ce85af2,[Ljava.lang.String;@316acbb5,[Ljava.lang.String;@56f730b2),Annotation([Ljava.lang.String;@47311277,[Ljava.lang.String;@7930ffa9,[Ledu.cmu.lti.nlp.amr.Entity;@1e60b459))
AMR:
(x17 / 来说-01, example, x19 / 我)
(x17 / 来说-01, location, x25 / 还)
(x18 / 你, location, x25 / 还)
(x20 / 男孩, manner, x24 / 只)
(x20 / 男孩, manner, x25 / 还)
(x20 / 男孩, mod, x31 / 小-01)
(x26 / 像-01, location, x20 / 男孩)
(x26 / 像-01, location, x28 / 千万)
(x26 / 像-01, manner, x30 / 就)
(x27 / 男孩, mod, x21 / 小-01)
(x27 / 男孩, mod, x29 / 其他)
(x27 / 男孩, quant, x28 / 千万)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.5
WARNING: makeIds can't find span Id: 0.0.2.5.1
WARNING: makeIds can't find span Id: 0.0.2.5.0
WARNING: makeIds can't find span Id: 0.0.2.5.0.2
WARNING: makeIds can't find span Id: 0.0.2.5.0.1
WARNING: makeIds can't find span Id: 0.0.2.5.0.0
WARNING: makeIds can't find span Id: 0.0.2.4
WARNING: makeIds can't find span Id: 0.0.2.3
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 66,551 microseconds
Sentence: 我 不 需要 你 。

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  需要 => 需要-01
Spans:
Span 3-4:  你 => 你
Span 0-1:  我 => 我
Span 2-3:  需要 => 需要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  需要 => 需要-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	需要	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 需要-01, arg0, x2 / 我)
(x0 / 需要-01, arg1, x3 / 你)

Input(Some(Graph((需要-01 :polarity - :arg1 你 :arg0 我),ArrayBuffer(Span(2,3,List(0),需要,需要-01,false), Span(3,4,List(1),你,你,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 你, 0 -> 需要-01),Map(x2 -> 我, x3 -> 你, x0 -> 需要-01))),[Ljava.lang.String;@717d7587,Annotation([Ljava.lang.String;@3e906375,[Ljava.lang.String;@40230eb9,[Ljava.lang.String;@5b7aa898),Annotation([Ljava.lang.String;@41b13f3d,[Ljava.lang.String;@7c0777b5,[Ledu.cmu.lti.nlp.amr.Dependency;@2489e84a),Annotation([Ljava.lang.String;@2a39aa2b,[Ljava.lang.String;@62b93086,[Ljava.lang.String;@254449bb),Annotation([Ljava.lang.String;@4e642ee1,[Ljava.lang.String;@29ebbdf4,[Ledu.cmu.lti.nlp.amr.Entity;@2fd954f))
AMR:
(x0 / 需要-01, beneficiary, x2 / 我)
(x0 / 需要-01, dayperiod, x3 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,535 microseconds
Sentence: 你 也 同样 用 不 着 我 。

Oracle Span 1:  你 => 你
Oracle Span 2:  同样 => 同样-01
Oracle Span 3:  我 => 我
Oracle Span 4:  用 => 用-01
Spans:
Span 0-1:  你 => 你
Span 2-3:  同样 => 同样-01
Span 6-7:  我 => 我
Span 3-4:  用 => 用-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  同样 => 同样-01
Oracle Span 6-7:  我 => 我
Oracle Span 3-4:  用 => 用-01

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	也	_	AD	AD	_	4	advmod	_	_
3	同样	_	AD	AD	_	4	advmod	_	_
4	用	_	VV	VV	_	0	root	_	_
5	不	_	AD	AD	_	4	dep	_	_
6	着	_	VV	VV	_	4	dep	_	_
7	我	_	PN	PN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 用-01, arg0, x5 / 你)
(x2 / 用-01, arg1, x7 / 我)
(x2 / 用-01, manner, x6 / 同样-01)

Input(Some(Graph((用-01 :arg1 我 :manner 同样-01 :arg0 你 :polarity -),ArrayBuffer(Span(3,4,List(0),用,用-01,false), Span(6,7,List(1),我,我,false), Span(2,3,List(2),同样,同样-01,false), Span(0,1,List(3),你,你,false)),Map(2 -> 同样-01, 1 -> 我, 0 -> 用-01, 3 -> 你),Map(x2 -> 用-01, x5 -> 你, x7 -> 我, x6 -> 同样-01))),[Ljava.lang.String;@5731d3a,Annotation([Ljava.lang.String;@6a0f2853,[Ljava.lang.String;@1eff3cfb,[Ljava.lang.String;@70c69586),Annotation([Ljava.lang.String;@6dc1dc69,[Ljava.lang.String;@7e9f2c32,[Ledu.cmu.lti.nlp.amr.Dependency;@19e0dffe),Annotation([Ljava.lang.String;@5d4e13e1,[Ljava.lang.String;@3e0fbeb5,[Ljava.lang.String;@3976ebfa),Annotation([Ljava.lang.String;@2676dc05,[Ljava.lang.String;@b0a1231,[Ledu.cmu.lti.nlp.amr.Entity;@4833eff3))
AMR:
(x2 / 用-01, domain, x7 / 我)
(x2 / 用-01, manner, x6 / 同样-01)
(x2 / 用-01, mode, x5 / 你)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 8,005 microseconds
Sentence: 对 你 来说 ， 我 也 不过 是 一 只 狐狸 ， 和 其他 千万 只 狐狸 一样 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  不过 => 不过
Oracle Span 3:  也 => 也
Oracle Span 4:  你 => 你
Oracle Span 5:  其他 => 其他
Oracle Span 6:  千万 => 千万
Oracle Span 7:  我 => 我
Oracle Span 8:  来说 => 来说-01
Oracle Span 9:  狐狸 => 狐狸
Oracle Span 10:  狐狸 => 狐狸
Spans:
Span 17-18:  一样 => 一样-02
Span 6-7:  不过 => 不过
Span 5-6:  也 => 也
Span 1-2:  你 => 你
Span 13-14:  其他 => 其他
Span 14-15:  千万 => 千万
Span 4-5:  我 => 我
Span 2-3:  来说 => 来说-01
Span 10-11:  狐狸 => 狐狸
Span 16-17:  狐狸 => 狐狸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  一样 => 一样-02
Oracle Span 6-7:  不过 => 不过
Oracle Span 5-6:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 13-14:  其他 => 其他
Oracle Span 14-15:  千万 => 千万
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  来说 => 来说-01
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 16-17:  狐狸 => 狐狸

Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	你	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	我	_	PN	PN	_	8	nsubj	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	不过	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	只	_	M	M	_	11	clf	_	_
11	狐狸	_	NN	NN	_	8	attr	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	和	_	CC	CC	_	8	cc	_	_
14	其他	_	DT	DT	_	17	det	_	_
15	千万	_	CD	CD	_	16	nummod	_	_
16	只	_	M	M	_	14	dep	_	_
17	狐狸	_	NN	NN	_	18	nsubj	_	_
18	一样	_	VA	VA	_	8	dep	_	_
19	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 我)
(x0 / 来说-01, arg1, x3 / 你)
(x0 / 来说-01, arg2, x4 / 狐狸)
(x10 / 狐狸, mod, x12 / 其他)
(x10 / 狐狸, quant, x11 / 千万)
(x4 / 狐狸, manner, x7 / 不过)
(x4 / 狐狸, manner, x8 / 也)
(x9 / 一样-02, arg0, x4 / 狐狸)
(x9 / 一样-02, arg1, x10 / 狐狸)

Input(Some(Graph((来说-01 :arg2 (狐狸 :quant 1 :arg0-of (一样-02 :arg1 (狐狸 :mod 其他 :quant 千万)) :manner 也 :manner 不过 :domain x2) :arg1 你 :arg0 我),ArrayBuffer(Span(2,3,List(0),来说,来说-01,false), Span(10,11,List(1),狐狸,狐狸,false), Span(17,18,List(2),一样,一样-02,false), Span(16,17,List(3),狐狸,狐狸,false), Span(13,14,List(4),其他,其他,false), Span(14,15,List(5),千万,千万,false), Span(5,6,List(6),也,也,false), Span(6,7,List(7),不过,不过,false), Span(1,2,List(8),你,你,false), Span(4,5,List(9),我,我,false)),Map(2 -> 一样-02, 5 -> 千万, 8 -> 你, 7 -> 不过, 1 -> 狐狸, 4 -> 其他, 6 -> 也, 9 -> 我, 0 -> 来说-01, 3 -> 狐狸),Map(x2 -> 我, x10 -> 狐狸, x8 -> 也, x12 -> 其他, x7 -> 不过, x4 -> 狐狸, x3 -> 你, x11 -> 千万, x9 -> 一样-02, x0 -> 来说-01))),[Ljava.lang.String;@4694f434,Annotation([Ljava.lang.String;@56928e17,[Ljava.lang.String;@dd2856e,[Ljava.lang.String;@5a49af50),Annotation([Ljava.lang.String;@3b1dc579,[Ljava.lang.String;@793d163b,[Ledu.cmu.lti.nlp.amr.Dependency;@60dd0587),Annotation([Ljava.lang.String;@77f905e3,[Ljava.lang.String;@221a2068,[Ljava.lang.String;@338766de),Annotation([Ljava.lang.String;@3b7eac14,[Ljava.lang.String;@4976085,[Ledu.cmu.lti.nlp.amr.Entity;@777d191f))
AMR:
(x0 / 来说-01, location, x3 / 你)
(x0 / 来说-01, location, x4 / 狐狸)
(x0 / 来说-01, prep-through, x2 / 我)
(x10 / 狐狸, mod, x12 / 其他)
(x10 / 狐狸, quant, x11 / 千万)
(x4 / 狐狸, manner, x7 / 不过)
(x4 / 狐狸, manner, x8 / 也)
(x9 / 一样-02, prep-into, x10 / 狐狸)
(x9 / 一样-02, time, x4 / 狐狸)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.3
WARNING: makeIds can't find span Id: 0.2.3.0
WARNING: makeIds can't find span Id: 0.2.3.0.1
WARNING: makeIds can't find span Id: 0.2.3.0.0
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 39,415 microseconds
Sentence: 但是 ， 如果 你 驯服 了 我 ， 我们 就 互相 不可 缺少 了 。

Oracle Span 1:  互相 => 互相
Oracle Span 2:  你 => 你
Oracle Span 3:  我 => 我
Oracle Span 4:  我们 => 我们
Oracle Span 5:  缺少 => 缺少-01
Oracle Span 6:  驯服 => 驯服-01
Spans:
Span 10-11:  互相 => 互相
Span 3-4:  你 => 你
Span 6-7:  我 => 我
Span 8-9:  我们 => 我们
Span 12-13:  缺少 => 缺少-01
Span 4-5:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  互相 => 互相
Oracle Span 3-4:  你 => 你
Oracle Span 6-7:  我 => 我
Oracle Span 8-9:  我们 => 我们
Oracle Span 12-13:  缺少 => 缺少-01
Oracle Span 4-5:  驯服 => 驯服-01

Dependencies:
1	但是	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	如果	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	驯服	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	5	dobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	我们	_	PN	PN	_	13	nsubj	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	互相	_	AD	AD	_	13	advmod	_	_
12	不可	_	AD	AD	_	13	advmod	_	_
13	缺少	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 缺少-01, arg0, x14 / 我们)
(x13 / 缺少-01, manner, x16 / 互相)
(x3 / 驯服-01, arg0, x4 / 你)
(x3 / 驯服-01, arg1, x5 / 我)

Input(Some(Graph((contrast :arg2 (condition :arg1 (驯服-01 :arg1 我 :arg0 你) :arg2 (可-02 :polarity - :arg0 (缺少-01 :manner 互相 :arg1 x14 :arg0 我们)))),ArrayBuffer(Span(4,5,List(0),驯服,驯服-01,false), Span(6,7,List(1),我,我,false), Span(3,4,List(2),你,你,false), Span(12,13,List(3),缺少,缺少-01,false), Span(10,11,List(4),互相,互相,false), Span(8,9,List(5),我们,我们,false)),Map(2 -> 你, 5 -> 我们, 1 -> 我, 4 -> 互相, 0 -> 驯服-01, 3 -> 缺少-01),Map(x16 -> 互相, x13 -> 缺少-01, x5 -> 我, x4 -> 你, x3 -> 驯服-01, x14 -> 我们))),[Ljava.lang.String;@7fc420b8,Annotation([Ljava.lang.String;@31142d58,[Ljava.lang.String;@e38f0b7,[Ljava.lang.String;@1192b58e),Annotation([Ljava.lang.String;@4f8d86e4,[Ljava.lang.String;@5f631ca0,[Ledu.cmu.lti.nlp.amr.Dependency;@1697f2b3),Annotation([Ljava.lang.String;@12ad1b2a,[Ljava.lang.String;@3134153d,[Ljava.lang.String;@767599a7),Annotation([Ljava.lang.String;@5f5effb0,[Ljava.lang.String;@25d0cb3a,[Ledu.cmu.lti.nlp.amr.Entity;@345cbf40))
AMR:
(x13 / 缺少-01, age, x4 / 你)
(x13 / 缺少-01, manner, x16 / 互相)
(x13 / 缺少-01, op, x14 / 我们)
(x3 / 驯服-01, beneficiary, x5 / 我)
(x3 / 驯服-01, compared-to, x4 / 你)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 14,460 microseconds
Sentence: 对 我 来说 ， 你 就 是 世界 上 唯一 的 了 ；

Oracle Span 1:  世界 => 世界
Oracle Span 2:  你 => 你
Oracle Span 3:  唯一 => 唯一
Oracle Span 4:  就 => 就
Oracle Span 5:  我 => 我
Oracle Span 6:  来说 => 来说-01
Spans:
Span 7-8:  世界 => 世界
Span 4-5:  你 => 你
Span 9-10:  唯一 => 唯一
Span 5-6:  就 => 就
Span 1-2:  我 => 我
Span 2-3:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  世界 => 世界
Oracle Span 4-5:  你 => 你
Oracle Span 9-10:  唯一 => 唯一
Oracle Span 5-6:  就 => 就
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  来说 => 来说-01

Dependencies:
1	对	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	你	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	世界	_	NN	NN	_	9	nsubj	_	_
9	上	_	VV	VV	_	7	attr	_	_
10	唯一	_	JJ	JJ	_	9	dobj	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	了	_	SP	SP	_	9	dep	_	_
13	；	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来说-01, arg1, x2 / 我)
(x0 / 来说-01, arg2, x3 / 唯一)
(x3 / 唯一, domain, x4 / 你)
(x3 / 唯一, location, x5 / 世界)
(x3 / 唯一, manner, x8 / 就)

Input(Some(Graph((来说-01 :arg0 x4 :arg2 (唯一 :manner 就 :location 世界 :domain 你) :arg1 我),ArrayBuffer(Span(2,3,List(0),来说,来说-01,false), Span(9,10,List(1),唯一,唯一,false), Span(5,6,List(2),就,就,false), Span(7,8,List(3),世界,世界,false), Span(4,5,List(4),你,你,false), Span(1,2,List(5),我,我,false)),Map(2 -> 就, 5 -> 我, 1 -> 唯一, 4 -> 你, 0 -> 来说-01, 3 -> 世界),Map(x2 -> 我, x5 -> 世界, x8 -> 就, x4 -> 你, x3 -> 唯一, x0 -> 来说-01))),[Ljava.lang.String;@6e3eb0cd,Annotation([Ljava.lang.String;@463561c5,[Ljava.lang.String;@659feb22,[Ljava.lang.String;@3468ee6e),Annotation([Ljava.lang.String;@2f4b98f6,[Ljava.lang.String;@421def93,[Ledu.cmu.lti.nlp.amr.Dependency;@58c1da09),Annotation([Ljava.lang.String;@2b2954e1,[Ljava.lang.String;@58d6e55a,[Ljava.lang.String;@751ae8a4),Annotation([Ljava.lang.String;@235d659c,[Ljava.lang.String;@4232b34a,[Ledu.cmu.lti.nlp.amr.Entity;@2da16263))
AMR:
(x0 / 来说-01, mode, x2 / 我)
(x0 / 来说-01, snt5, x4 / 你)
(x3 / 唯一, domain, x4 / 你)
(x3 / 唯一, location, x5 / 世界)
(x3 / 唯一, manner, x8 / 就)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,967 microseconds
Sentence: 我 对 你 来说 ， 也 是 世界 上 唯一 的 了 。 ”

Oracle Span 1:  世界 => 世界
Oracle Span 2:  也 => 也
Oracle Span 3:  你 => 你
Oracle Span 4:  唯一 => 唯一
Oracle Span 5:  我 => 我
Oracle Span 6:  来说 => 来说-01
Spans:
Span 7-8:  世界 => 世界
Span 5-6:  也 => 也
Span 2-3:  你 => 你
Span 9-10:  唯一 => 唯一
Span 0-1:  我 => 我
Span 3-4:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  世界 => 世界
Oracle Span 5-6:  也 => 也
Oracle Span 2-3:  你 => 你
Oracle Span 9-10:  唯一 => 唯一
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  来说 => 来说-01

Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	对	_	P	P	_	7	prep	_	_
3	你	_	PN	PN	_	4	nn	_	_
4	来说	_	NN	NN	_	2	pobj	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	世界	_	NN	NN	_	9	nn	_	_
9	上	_	NN	NN	_	10	dep	_	_
10	唯一	_	JJ	JJ	_	7	dep	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	了	_	SP	SP	_	7	dep	_	_
13	。	_	PU	PU	_	7	punct	_	_
14	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 来说-01, arg0, x12 / 我)
(x11 / 来说-01, arg1, x13 / 你)

Input(Some(Graph((say :arg1 (来说-01 :arg2 (person :mod 唯一 :location 世界 :domain x12 :manner 也) :arg1 你 :arg0 我)),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(9,10,List(1),唯一,唯一,false), Span(7,8,List(2),世界,世界,false), Span(5,6,List(3),也,也,false), Span(2,3,List(4),你,你,false), Span(0,1,List(5),我,我,false)),Map(2 -> 世界, 5 -> 我, 1 -> 唯一, 4 -> 你, 0 -> 来说-01, 3 -> 也),Map(x16 -> 唯一, x19 -> 也, x13 -> 你, x12 -> 我, x11 -> 来说-01, x17 -> 世界))),[Ljava.lang.String;@f5ce0bb,Annotation([Ljava.lang.String;@47e51549,[Ljava.lang.String;@101a461c,[Ljava.lang.String;@360e9c06),Annotation([Ljava.lang.String;@5ebffb44,[Ljava.lang.String;@311ff287,[Ledu.cmu.lti.nlp.amr.Dependency;@7377781e),Annotation([Ljava.lang.String;@31db34da,[Ljava.lang.String;@109f8c7e,[Ljava.lang.String;@5edacf20),Annotation([Ljava.lang.String;@16a5eb6d,[Ljava.lang.String;@7e307087,[Ledu.cmu.lti.nlp.amr.Entity;@1220ef43))
AMR:
(x11 / 来说-01, mode, x17 / 世界)
(x11 / 来说-01, mode, x19 / 也)
(x11 / 来说-01, quant, x12 / 我)
(x11 / 来说-01, scale, x13 / 你)
(x16 / 唯一, location, x17 / 世界)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.3
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,385 microseconds
Sentence: “ 我 有点 明白 了 。 ” 小 王子 说 ，

Oracle Span 1:  小 => 小-01
Oracle Span 2:  明白 => 明白-01
Oracle Span 3:  有点 => 有点
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 7-8:  小 => 小-01
Span 3-4:  明白 => 明白-01
Span 2-3:  有点 => 有点
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  小 => 小-01
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 2-3:  有点 => 有点
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	有点	_	AD	AD	_	4	advmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	了	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, degree, x6 / 有点)

Input(Some(Graph((说-01 :arg1 (明白-01 :degree 有点 :arg0 x2) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(3,4,List(1),明白,明白-01,false), Span(2,3,List(2),有点,有点,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小-01,false)),Map(2 -> 有点, 1 -> 明白-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x4 -> 明白-01, x3 -> 小-01, x6 -> 有点, x0 -> 说-01))),[Ljava.lang.String;@1a8b81e8,Annotation([Ljava.lang.String;@234cff57,[Ljava.lang.String;@5e8507f1,[Ljava.lang.String;@4bcaa195),Annotation([Ljava.lang.String;@d08edc5,[Ljava.lang.String;@49fa1d74,[Ledu.cmu.lti.nlp.amr.Dependency;@3f362135),Annotation([Ljava.lang.String;@21eee94f,[Ljava.lang.String;@6bc24e72,[Ljava.lang.String;@724aefc3),Annotation([Ljava.lang.String;@7cfb4736,[Ljava.lang.String;@2a097d77,[Ledu.cmu.lti.nlp.amr.Entity;@53c1179a))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, purpose, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, degree, x6 / 有点)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,581 microseconds
Sentence: “ 有 一 朵 花 … ，

Oracle Span 1:  有 => 有-01
Oracle Span 2:  花 => 花
Spans:
Span 1-2:  有 => 有-01
Span 4-5:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  花 => 花

Dependencies:
1	“	_	NR	NR	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	5	clf	_	_
5	花	_	NN	NN	_	2	dobj	_	_
6	…	_	PU	PU	_	7	punct	_	_
7	,	_	NN	NN	_	5	prnmod	_	_

Oracle:
(x6 / 有-01, arg1, x7 / 花)

Input(Some(Graph((say :arg1 (有-01 :arg1 (花 :quant 1))),ArrayBuffer(Span(1,2,List(0),有,有-01,false), Span(4,5,List(1),花,花,false)),Map(1 -> 花, 0 -> 有-01),Map(x7 -> 花, x6 -> 有-01))),[Ljava.lang.String;@7650ded6,Annotation([Ljava.lang.String;@5034f5dd,[Ljava.lang.String;@31b7d869,[Ljava.lang.String;@6a916402),Annotation([Ljava.lang.String;@1a47a1e8,[Ljava.lang.String;@6d2a2560,[Ledu.cmu.lti.nlp.amr.Dependency;@62d1dc3c),Annotation([Ljava.lang.String;@3811510,[Ljava.lang.String;@24eeac69,[Ljava.lang.String;@18539cb1),Annotation([Ljava.lang.String;@748f93bb,[Ljava.lang.String;@7f2d31af,[Ledu.cmu.lti.nlp.amr.Entity;@2e7157c7))
AMR:
(x6 / 有-01, prep-following, x7 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,075 microseconds
Sentence: 我 想 ， 她 把 我 驯服 了 … ”

Oracle Span 1:  她 => 她
Oracle Span 2:  想 => 想-01
Oracle Span 3:  我 => 我
Oracle Span 4:  驯服 => 驯服-01
Spans:
Span 3-4:  她 => 她
Span 1-2:  想 => 想-01
Span 0-1:  我 => 我
Span 6-7:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  她 => 她
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  驯服 => 驯服-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	她	_	PN	PN	_	7	nsubj	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	驯服	_	VV	VV	_	2	ccomp	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	…	_	NN	NN	_	7	dobj	_	_
10	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 驯服-01, arg0, x11 / 她)
(x8 / 想-01, arg0, x9 / 我)
(x8 / 想-01, arg1, x10 / 驯服-01)

Input(Some(Graph((say :arg1 (想-01 :arg1 (驯服-01 :arg1 x9 :arg0 她) :arg0 我)),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(6,7,List(1),驯服,驯服-01,false), Span(3,4,List(2),她,她,false), Span(0,1,List(3),我,我,false)),Map(2 -> 她, 1 -> 驯服-01, 0 -> 想-01, 3 -> 我),Map(x10 -> 驯服-01, x8 -> 想-01, x11 -> 她, x9 -> 我))),[Ljava.lang.String;@2a43e0ac,Annotation([Ljava.lang.String;@22d9bc14,[Ljava.lang.String;@346f41a9,[Ljava.lang.String;@1084f78c),Annotation([Ljava.lang.String;@25f723b0,[Ljava.lang.String;@4aa11206,[Ledu.cmu.lti.nlp.amr.Dependency;@40d60f2),Annotation([Ljava.lang.String;@3382cf68,[Ljava.lang.String;@2f74900b,[Ljava.lang.String;@6d8796c1),Annotation([Ljava.lang.String;@2e26173,[Ljava.lang.String;@27be17c8,[Ledu.cmu.lti.nlp.amr.Entity;@2c413ffc))
AMR:
(x10 / 驯服-01, prep-along-with, x11 / 她)
(x8 / 想-01, decade, x9 / 我)
(x8 / 想-01, prep-along-with, x11 / 她)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,575 microseconds
Sentence: “ 这 是 可能 的 。 ” 狐狸 说 ，

Oracle Span 1:  可能 => 可能-01
Oracle Span 2:  狐狸 => 狐狸
Oracle Span 3:  说 => 说-01
Oracle Span 4:  这 => 这
Spans:
Span 3-4:  可能 => 可能-01
Span 7-8:  狐狸 => 狐狸
Span 8-9:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  可能 => 可能-01
Oracle Span 7-8:  狐狸 => 狐狸
Oracle Span 8-9:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	可能	_	VV	VV	_	3	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	狐狸	_	NN	NN	_	9	dep	_	_
9	说	_	VV	VV	_	3	dep	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 可能-01)
(x3 / 可能-01, domain, x4 / 这)

Input(Some(Graph((说-01 :arg1 (可能-01 :domain 这) :arg0 狐狸),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),可能,可能-01,false), Span(1,2,List(2),这,这,false), Span(7,8,List(3),狐狸,狐狸,false)),Map(2 -> 这, 1 -> 可能-01, 0 -> 说-01, 3 -> 狐狸),Map(x2 -> 狐狸, x4 -> 这, x3 -> 可能-01, x0 -> 说-01))),[Ljava.lang.String;@7d21852b,Annotation([Ljava.lang.String;@6cd98a05,[Ljava.lang.String;@3b8ec001,[Ljava.lang.String;@1e95b653),Annotation([Ljava.lang.String;@6f6c6077,[Ljava.lang.String;@4fc5563d,[Ledu.cmu.lti.nlp.amr.Dependency;@286090c),Annotation([Ljava.lang.String;@31120021,[Ljava.lang.String;@3df1a1ac,[Ljava.lang.String;@58606c91),Annotation([Ljava.lang.String;@6a9cd0f8,[Ljava.lang.String;@4baed682,[Ledu.cmu.lti.nlp.amr.Entity;@7be2f29a))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x3 / 可能-01, domain, x4 / 这)
(x3 / 可能-01, purpose, x2 / 狐狸)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,315 microseconds
Sentence: “ 世界 上 什么样 的 事 都 可能 看到 … ”

Oracle Span 1:  世界 => 世界
Oracle Span 2:  事 => 事
Oracle Span 3:  什么样 => 什么样
Oracle Span 4:  可能 => 可能-02
Oracle Span 5:  看到 => 看到-01
Oracle Span 6:  都 => 都
Spans:
Span 1-2:  世界 => 世界
Span 5-6:  事 => 事
Span 3-4:  什么样 => 什么样
Span 7-8:  可能 => 可能-02
Span 8-9:  看到 => 看到-01
Span 6-7:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  世界 => 世界
Oracle Span 5-6:  事 => 事
Oracle Span 3-4:  什么样 => 什么样
Oracle Span 7-8:  可能 => 可能-02
Oracle Span 8-9:  看到 => 看到-01
Oracle Span 6-7:  都 => 都

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	世界	_	NN	NN	_	3	lobj	_	_
3	上	_	LC	LC	_	4	dep	_	_
4	什么样	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	事	_	NN	NN	_	8	nsubj	_	_
7	都	_	AD	AD	_	8	advmod	_	_
8	可能	_	VV	VV	_	0	root	_	_
9	看到	_	VV	VV	_	8	comod	_	_
10	…	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 可能-02, arg0, x14 / 看到-01)
(x13 / 可能-02, manner, x15 / 都)
(x14 / 看到-01, arg1, x16 / 事)
(x14 / 看到-01, location, x18 / 世界)
(x16 / 事, mod, x17 / 什么样)

Input(Some(Graph((say :arg1 (可能-02 :manner 都 :arg0 (看到-01 :location 世界 :arg1 (事 :mod 什么样)))),ArrayBuffer(Span(7,8,List(0),可能,可能-02,false), Span(6,7,List(1),都,都,false), Span(8,9,List(2),看到,看到-01,false), Span(1,2,List(3),世界,世界,false), Span(5,6,List(4),事,事,false), Span(3,4,List(5),什么样,什么样,false)),Map(2 -> 看到-01, 5 -> 什么样, 1 -> 都, 4 -> 事, 0 -> 可能-02, 3 -> 世界),Map(x16 -> 事, x13 -> 可能-02, x15 -> 都, x18 -> 世界, x14 -> 看到-01, x17 -> 什么样))),[Ljava.lang.String;@203d1d93,Annotation([Ljava.lang.String;@2c2a027c,[Ljava.lang.String;@118dcbbd,[Ljava.lang.String;@7d979d34),Annotation([Ljava.lang.String;@350ec690,[Ljava.lang.String;@49cb1baf,[Ledu.cmu.lti.nlp.amr.Dependency;@3664f108),Annotation([Ljava.lang.String;@77dba4cd,[Ljava.lang.String;@34a2d6e0,[Ljava.lang.String;@2525a5b8),Annotation([Ljava.lang.String;@3458eca5,[Ljava.lang.String;@1e0fdb2f,[Ledu.cmu.lti.nlp.amr.Entity;@3c380bd8))
AMR:
(x13 / 可能-02, example, x16 / 事)
(x13 / 可能-02, manner, x15 / 都)
(x14 / 看到-01, manner, x13 / 可能-02)
(x16 / 事, mod, x17 / 什么样)
(x17 / 什么样, location, x18 / 世界)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 14,044 microseconds
Sentence: “ 啊 ， 这 不 是 在 地球 上 的 事 。 ” 小 王子 说 。

Oracle Span 1:  事 => 事
Oracle Span 2:  啊 => 啊
Oracle Span 3:  地球 => 地球
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Spans:
Span 10-11:  事 => 事
Span 1-2:  啊 => 啊
Span 7-8:  地球 => 地球
Span 13-14:  小 => 小-01
Span 14-15:  王子 => 王子
Span 15-16:  说 => 说-01
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  事 => 事
Oracle Span 1-2:  啊 => 啊
Oracle Span 7-8:  地球 => 地球
Oracle Span 13-14:  小 => 小-01
Oracle Span 14-15:  王子 => 王子
Oracle Span 15-16:  说 => 说-01
Oracle Span 3-4:  这 => 这

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	VV	VV	_	16	dep	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	是	_	VC	VC	_	2	ccomp	_	_
7	在	_	P	P	_	11	assmod	_	_
8	地球	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	7	plmod	_	_
10	的	_	DEG	DEG	_	7	assm	_	_
11	事	_	NN	NN	_	6	attr	_	_
12	。	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	16	nsubj	_	_
16	说	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x8 / 事, domain, x9 / 这)
(x8 / 事, location, x10 / 地球)

Input(Some(Graph((说-01 :arg1 (and :op 啊 :op (事 :polarity - :location 地球 :domain 这)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(15,16,List(0),说,说-01,false), Span(1,2,List(1),啊,啊,false), Span(10,11,List(2),事,事,false), Span(7,8,List(3),地球,地球,false), Span(3,4,List(4),这,这,false), Span(14,15,List(5),王子,王子,false), Span(13,14,List(6),小,小-01,false)),Map(2 -> 事, 5 -> 王子, 1 -> 啊, 4 -> 这, 6 -> 小-01, 0 -> 说-01, 3 -> 地球),Map(x2 -> 王子, x10 -> 地球, x5 -> 啊, x8 -> 事, x3 -> 小-01, x9 -> 这, x0 -> 说-01))),[Ljava.lang.String;@34b87182,Annotation([Ljava.lang.String;@47768e74,[Ljava.lang.String;@2740e316,[Ljava.lang.String;@5b5a4aed),Annotation([Ljava.lang.String;@2c991465,[Ljava.lang.String;@5fef2aac,[Ledu.cmu.lti.nlp.amr.Dependency;@7f973a14),Annotation([Ljava.lang.String;@76130a29,[Ljava.lang.String;@124d02b2,[Ljava.lang.String;@3451f01d),Annotation([Ljava.lang.String;@72503b19,[Ljava.lang.String;@1cfc2538,[Ledu.cmu.lti.nlp.amr.Entity;@66deec87))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 啊, mod, x9 / 这)
(x8 / 事, domain, x9 / 这)
(x8 / 事, location, x10 / 地球)
(x8 / 事, topic, x2 / 王子)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,242 microseconds
Sentence: 狐狸 感到 十分 蹊跷 。

Oracle Span 1:  十分 => 十分
Oracle Span 2:  感到 => 感到-01
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  蹊跷 => 蹊跷
Spans:
Span 2-3:  十分 => 十分
Span 1-2:  感到 => 感到-01
Span 0-1:  狐狸 => 狐狸
Span 3-4:  蹊跷 => 蹊跷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  十分 => 十分
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 0-1:  狐狸 => 狐狸
Oracle Span 3-4:  蹊跷 => 蹊跷

Dependencies:
1	狐狸	_	NN	NN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	十分	_	AD	AD	_	4	advmod	_	_
4	蹊跷	_	VA	VA	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	狐狸	_	NN	NN	_	4	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 狐狸)
(x0 / 感到-01, arg1, x3 / 蹊跷)
(x3 / 蹊跷, degree, x4 / 十分)

Input(Some(Graph((感到-01 :arg1 (蹊跷 :degree 十分) :arg0 狐狸),ArrayBuffer(Span(1,2,List(0),感到,感到-01,false), Span(3,4,List(1),蹊跷,蹊跷,false), Span(2,3,List(2),十分,十分,false), Span(0,1,List(3),狐狸,狐狸,false)),Map(2 -> 十分, 1 -> 蹊跷, 0 -> 感到-01, 3 -> 狐狸),Map(x2 -> 狐狸, x4 -> 十分, x3 -> 蹊跷, x0 -> 感到-01))),[Ljava.lang.String;@5d342959,Annotation([Ljava.lang.String;@2ecf5915,[Ljava.lang.String;@53e76c11,[Ljava.lang.String;@42cc183e),Annotation([Ljava.lang.String;@3e4e8fdf,[Ljava.lang.String;@6a1d6ef2,[Ledu.cmu.lti.nlp.amr.Dependency;@2721044),Annotation([Ljava.lang.String;@205df5dc,[Ljava.lang.String;@6aa7b67f,[Ljava.lang.String;@6bcc3f27),Annotation([Ljava.lang.String;@79aee22a,[Ljava.lang.String;@36920bd6,[Ledu.cmu.lti.nlp.amr.Entity;@61514735))
AMR:
(x0 / 感到-01, domain, x2 / 狐狸)
(x0 / 感到-01, extent, x3 / 蹊跷)
(x3 / 蹊跷, degree, x4 / 十分)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,369 microseconds
Sentence: “ 在 另 一 个 星球 上 ？ ”

Oracle Span 1:  另 => 另
Oracle Span 2:  星球 => 星球
Spans:
Span 2-3:  另 => 另
Span 5-6:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  另 => 另
Oracle Span 5-6:  星球 => 星球

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	在	_	P	P	_	0	root	_	_
3	另	_	DT	DT	_	6	det	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	3	dep	_	_
6	星球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	2	plmod	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 星球, mod, x12 / 另)

Input(Some(Graph((say :arg1 (thing :location (星球 :quant 1 :mod 另)) :mode interrogative),ArrayBuffer(Span(5,6,List(0),星球,星球,false), Span(2,3,List(1),另,另,false)),Map(1 -> 另, 0 -> 星球),Map(x12 -> 另, x11 -> 星球))),[Ljava.lang.String;@6bee793f,Annotation([Ljava.lang.String;@655f69da,[Ljava.lang.String;@43b5021c,[Ljava.lang.String;@28369db0),Annotation([Ljava.lang.String;@30893e08,[Ljava.lang.String;@2e86807a,[Ledu.cmu.lti.nlp.amr.Dependency;@4548d254),Annotation([Ljava.lang.String;@590f0c50,[Ljava.lang.String;@208f0007,[Ljava.lang.String;@3a90c13c),Annotation([Ljava.lang.String;@39c96e48,[Ljava.lang.String;@188598ad,[Ledu.cmu.lti.nlp.amr.Entity;@40d23c82))
AMR:
(x11 / 星球, mod, x12 / 另)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 2,949 microseconds
Sentence: “ 是 的 。 ”

Oracle Span 1:  是 => 是-03
Spans:
Span 1-2:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	的	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 是-03),ArrayBuffer(Span(1,2,List(0),是,是-03,false)),Map(0 -> 是-03),Map(x6 -> 是-03))),[Ljava.lang.String;@7cf78c85,Annotation([Ljava.lang.String;@ebe067d,[Ljava.lang.String;@3a4ab7f7,[Ljava.lang.String;@6badba10),Annotation([Ljava.lang.String;@2b7e8044,[Ljava.lang.String;@550de6b8,[Ledu.cmu.lti.nlp.amr.Dependency;@3a1706e1),Annotation([Ljava.lang.String;@3c6c4689,[Ljava.lang.String;@63cf9de0,[Ljava.lang.String;@594d9f07),Annotation([Ljava.lang.String;@5befbac1,[Ljava.lang.String;@5e9f73b,[Ledu.cmu.lti.nlp.amr.Entity;@1a565afb))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,194 microseconds
Sentence: “ 在 那 个 星球 上 ， 有 猎人 吗 ？ ”

Oracle Span 1:  星球 => 星球
Oracle Span 2:  有 => 有-03
Oracle Span 3:  猎人 => 猎人
Spans:
Span 4-5:  星球 => 星球
Span 7-8:  有 => 有-03
Span 8-9:  猎人 => 猎人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  星球 => 星球
Oracle Span 7-8:  有 => 有-03
Oracle Span 8-9:  猎人 => 猎人

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	在	_	P	P	_	8	prep	_	_
3	那	_	DT	DT	_	5	det	_	_
4	个	_	M	M	_	3	clf	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	2	plmod	_	_
7	,	_	PU	PU	_	8	punct	_	_
8	有	_	VE	VE	_	9	dep	_	_
9	猎人	_	VV	VV	_	0	root	_	_
10	吗	_	SP	SP	_	9	dep	_	_
11	？	_	PU	PU	_	9	punct	_	_
12	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x9 / 有-03, arg0, x10 / 星球)
(x9 / 有-03, arg1, x12 / 猎人)

Input(Some(Graph((say :arg1 (有-03 :mode interrogative :arg1 猎人 :arg0 (星球 :mod 那个))),ArrayBuffer(Span(7,8,List(0),有,有-03,false), Span(8,9,List(1),猎人,猎人,false), Span(4,5,List(2),星球,星球,false)),Map(2 -> 星球, 1 -> 猎人, 0 -> 有-03),Map(x10 -> 星球, x12 -> 猎人, x9 -> 有-03))),[Ljava.lang.String;@2fd64b11,Annotation([Ljava.lang.String;@949c598,[Ljava.lang.String;@43d3aba5,[Ljava.lang.String;@6bfaa0a6),Annotation([Ljava.lang.String;@76e9f00b,[Ljava.lang.String;@314b9e4b,[Ledu.cmu.lti.nlp.amr.Dependency;@6f1b8544),Annotation([Ljava.lang.String;@51dae791,[Ljava.lang.String;@688a2c09,[Ljava.lang.String;@5de5e95),Annotation([Ljava.lang.String;@365cdacf,[Ljava.lang.String;@303c55fa,[Ledu.cmu.lti.nlp.amr.Entity;@9efcd90))
AMR:
(x9 / 有-03, prep-for, x12 / 猎人)
(x9 / 有-03, snt3, x10 / 星球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,825 microseconds
Sentence: “ 没有 。 ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有-03 :polarity -)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@7eb200ce,Annotation([Ljava.lang.String;@2ee83775,[Ljava.lang.String;@7c2924d7,[Ljava.lang.String;@b5de58f),Annotation([Ljava.lang.String;@6587305a,[Ljava.lang.String;@abbe000,[Ledu.cmu.lti.nlp.amr.Dependency;@3f81621c),Annotation([Ljava.lang.String;@5b9499fe,[Ljava.lang.String;@74d6736,[Ljava.lang.String;@52a33c3f),Annotation([Ljava.lang.String;@668625f5,[Ljava.lang.String;@19a20bb2,[Ledu.cmu.lti.nlp.amr.Entity;@75babb67))
AMR:


Decoded in 1,156 microseconds
Sentence: “ 这 很 有 意思 。

Oracle Span 1:  很 => 很
Oracle Span 2:  意思 => 意思
Oracle Span 3:  有 => 有-05
Oracle Span 4:  这 => 这
Spans:
Span 2-3:  很 => 很
Span 4-5:  意思 => 意思
Span 3-4:  有 => 有-05
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 4-5:  意思 => 意思
Oracle Span 3-4:  有 => 有-05
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	意思	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 有-05, arg0, x8 / 这)
(x7 / 有-05, arg1, x10 / 意思)
(x7 / 有-05, degree, x9 / 很)

Input(Some(Graph((say :arg1 (有-05 :arg1 意思 :degree 很 :arg0 这)),ArrayBuffer(Span(3,4,List(0),有,有-05,false), Span(4,5,List(1),意思,意思,false), Span(2,3,List(2),很,很,false), Span(1,2,List(3),这,这,false)),Map(2 -> 很, 1 -> 意思, 0 -> 有-05, 3 -> 这),Map(x10 -> 意思, x8 -> 这, x7 -> 有-05, x9 -> 很))),[Ljava.lang.String;@3eb3232b,Annotation([Ljava.lang.String;@69cd1085,[Ljava.lang.String;@60bb7995,[Ljava.lang.String;@40fa8766),Annotation([Ljava.lang.String;@67774e29,[Ljava.lang.String;@663f237a,[Ledu.cmu.lti.nlp.amr.Dependency;@5d7399f9),Annotation([Ljava.lang.String;@49a6f486,[Ljava.lang.String;@14fded9d,[Ljava.lang.String;@bc6288b),Annotation([Ljava.lang.String;@4a3bd45b,[Ljava.lang.String;@34c70b5e,[Ledu.cmu.lti.nlp.amr.Entity;@4f2d995e))
AMR:
(x7 / 有-05, degree, x9 / 很)
(x7 / 有-05, domain, x8 / 这)
(x7 / 有-05, prep-for, x10 / 意思)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,378 microseconds
Sentence: 那么 ， 有 鸡 吗 ？ ”

Oracle Span 1:  有 => 有-03
Oracle Span 2:  鸡 => 鸡
Spans:
Span 2-3:  有 => 有-03
Span 3-4:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  有 => 有-03
Oracle Span 3-4:  鸡 => 鸡

Dependencies:
1	那么	_	AD	AD	_	3	advmod	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	有	_	VE	VE	_	0	root	_	_
4	鸡	_	NN	NN	_	3	dep	_	_
5	吗	_	SP	SP	_	3	dep	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-03, arg1, x14 / 鸡)

Input(Some(Graph((say :arg1 (temporal :arg2 (有-03 :mode interrogative :arg1 鸡))),ArrayBuffer(Span(2,3,List(0),有,有-03,false), Span(3,4,List(1),鸡,鸡,false)),Map(1 -> 鸡, 0 -> 有-03),Map(x13 -> 有-03, x14 -> 鸡))),[Ljava.lang.String;@75156240,Annotation([Ljava.lang.String;@6198e9b5,[Ljava.lang.String;@6d099323,[Ljava.lang.String;@4ecd00b5),Annotation([Ljava.lang.String;@10947c4e,[Ljava.lang.String;@3667faa8,[Ledu.cmu.lti.nlp.amr.Dependency;@1756f7cc),Annotation([Ljava.lang.String;@3138953b,[Ljava.lang.String;@27df95e,[Ljava.lang.String;@b46e103),Annotation([Ljava.lang.String;@2b0e9f30,[Ljava.lang.String;@5eea5627,[Ledu.cmu.lti.nlp.amr.Entity;@3330f3ad))
AMR:
(x13 / 有-03, ARG5, x14 / 鸡)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 2,836 microseconds
Sentence: “ 没有 。 ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (有-03 :polarity -)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@f425231,Annotation([Ljava.lang.String;@506aabf6,[Ljava.lang.String;@5cbd94b2,[Ljava.lang.String;@6824b913),Annotation([Ljava.lang.String;@756aadfc,[Ljava.lang.String;@705a8dbc,[Ledu.cmu.lti.nlp.amr.Dependency;@40729f01),Annotation([Ljava.lang.String;@d535a3d,[Ljava.lang.String;@2d760326,[Ljava.lang.String;@9e54c59),Annotation([Ljava.lang.String;@5dbb50f3,[Ljava.lang.String;@4a2e7bcb,[Ledu.cmu.lti.nlp.amr.Entity;@575c3e9b))
AMR:


Decoded in 1,115 microseconds
Sentence: “ 没有 十全十美 的 。 ” 狐狸 叹息 地 说道 。

Oracle Span 1:  十全十美 => 十全十美-01
Oracle Span 2:  叹息 => 叹息-01
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  说道 => 说道-01
Spans:
Span 2-3:  十全十美 => 十全十美-01
Span 7-8:  叹息 => 叹息-01
Span 6-7:  狐狸 => 狐狸
Span 9-10:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  十全十美 => 十全十美-01
Oracle Span 7-8:  叹息 => 叹息-01
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 9-10:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	没有	_	VE	VE	_	5	rcmod	_	_
3	十全十美	_	CD	CD	_	2	dep	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	10	nsubj	_	_
8	叹息	_	VA	VA	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	说道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 说道-01, manner, x15 / 叹息-01)
(x15 / 叹息-01, arg0, x17 / 狐狸)

Input(Some(Graph((说道-01 :arg1 (有-05 :polarity - :arg1 (thing :mod 十全十美-01)) :arg0 x17 :manner (叹息-01 :arg0 狐狸)),ArrayBuffer(Span(9,10,List(0),说道,说道-01,false), Span(2,3,List(1),十全十美,十全十美-01,false), Span(7,8,List(2),叹息,叹息-01,false), Span(6,7,List(3),狐狸,狐狸,false)),Map(2 -> 叹息-01, 1 -> 十全十美-01, 0 -> 说道-01, 3 -> 狐狸),Map(x13 -> 说道-01, x15 -> 叹息-01, x23 -> 十全十美-01, x17 -> 狐狸))),[Ljava.lang.String;@74f827ad,Annotation([Ljava.lang.String;@73c3cd09,[Ljava.lang.String;@4a8a0099,[Ljava.lang.String;@7c1447b5),Annotation([Ljava.lang.String;@49e4c2d5,[Ljava.lang.String;@24a2e565,[Ledu.cmu.lti.nlp.amr.Dependency;@3e36b7a0),Annotation([Ljava.lang.String;@60c1663c,[Ljava.lang.String;@f5cf29b,[Ljava.lang.String;@3c66b7d8),Annotation([Ljava.lang.String;@37e69c43,[Ljava.lang.String;@5c7dfc05,[Ledu.cmu.lti.nlp.amr.Entity;@345d053b))
AMR:
(x13 / 说道-01, manner, x15 / 叹息-01)
(x17 / 狐狸, purpose, x15 / 叹息-01)
(x23 / 十全十美-01, purpose, x15 / 叹息-01)

WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,314 microseconds
Sentence: 可是 ， 狐狸 又 把 话题 拉 回来 ：

Oracle Span 1:  又 => 又
Oracle Span 2:  回来 => 回来-02
Oracle Span 3:  拉 => 拉-01
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  话题 => 话题
Spans:
Span 3-4:  又 => 又
Span 7-8:  回来 => 回来-02
Span 6-7:  拉 => 拉-01
Span 2-3:  狐狸 => 狐狸
Span 5-6:  话题 => 话题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 7-8:  回来 => 回来-02
Oracle Span 6-7:  拉 => 拉-01
Oracle Span 2-3:  狐狸 => 狐狸
Oracle Span 5-6:  话题 => 话题

Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	狐狸	_	NN	NN	_	8	nsubj	_	_
4	又	_	AD	AD	_	8	advmod	_	_
5	把	_	BA	BA	_	8	ba	_	_
6	话题	_	NN	NN	_	8	nsubj	_	_
7	拉	_	AD	AD	_	8	advmod	_	_
8	回来	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 拉-01, arg0, x3 / 狐狸)
(x2 / 拉-01, arg1, x4 / 话题)
(x2 / 拉-01, arg2, x7 / 回来-02)
(x2 / 拉-01, manner, x8 / 又)

Input(Some(Graph((contrast :arg2 (拉-01 :manner 又 :arg2 回来-02 :arg1 话题 :arg0 狐狸)),ArrayBuffer(Span(6,7,List(0),拉,拉-01,false), Span(3,4,List(1),又,又,false), Span(7,8,List(2),回来,回来-02,false), Span(5,6,List(3),话题,话题,false), Span(2,3,List(4),狐狸,狐狸,false)),Map(2 -> 回来-02, 1 -> 又, 4 -> 狐狸, 0 -> 拉-01, 3 -> 话题),Map(x2 -> 拉-01, x8 -> 又, x7 -> 回来-02, x4 -> 话题, x3 -> 狐狸))),[Ljava.lang.String;@3d0cac1f,Annotation([Ljava.lang.String;@3e8b3b79,[Ljava.lang.String;@d257579,[Ljava.lang.String;@518ddd3b),Annotation([Ljava.lang.String;@939ff41,[Ljava.lang.String;@6e0e5dec,[Ledu.cmu.lti.nlp.amr.Dependency;@48a663e9),Annotation([Ljava.lang.String;@777d0bc3,[Ljava.lang.String;@3178219a,[Ljava.lang.String;@2d85fb64),Annotation([Ljava.lang.String;@56476c16,[Ljava.lang.String;@497b560e,[Ledu.cmu.lti.nlp.amr.Entity;@39ffda4a))
AMR:
(x2 / 拉-01, ARG5, x7 / 回来-02)
(x2 / 拉-01, manner, x4 / 话题)
(x2 / 拉-01, manner, x8 / 又)
(x3 / 狐狸, manner, x8 / 又)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,830 microseconds
Sentence: “ 我 的 生活 很 单调 。

Oracle Span 1:  单调 => 单调-01
Oracle Span 2:  很 => 很
Oracle Span 3:  我 => 我
Oracle Span 4:  生活 => 生活
Spans:
Span 5-6:  单调 => 单调-01
Span 4-5:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  生活 => 生活

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  单调 => 单调-01
Oracle Span 4-5:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  生活 => 生活

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	生活	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	单调	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 单调-01, arg0, x9 / 生活)
(x7 / 单调-01, degree, x8 / 很)
(x9 / 生活, poss, x10 / 我)

Input(Some(Graph((say :arg1 (单调-01 :arg0 (生活 :poss 我) :degree 很)),ArrayBuffer(Span(5,6,List(0),单调,单调-01,false), Span(3,4,List(1),生活,生活,false), Span(1,2,List(2),我,我,false), Span(4,5,List(3),很,很,false)),Map(2 -> 我, 1 -> 生活, 0 -> 单调-01, 3 -> 很),Map(x10 -> 我, x8 -> 很, x7 -> 单调-01, x9 -> 生活))),[Ljava.lang.String;@3ba348ca,Annotation([Ljava.lang.String;@56e9a474,[Ljava.lang.String;@45b15381,[Ljava.lang.String;@2dbfcf7),Annotation([Ljava.lang.String;@239f017e,[Ljava.lang.String;@38cedb7d,[Ledu.cmu.lti.nlp.amr.Dependency;@772caabe),Annotation([Ljava.lang.String;@2acdcce8,[Ljava.lang.String;@7102ac3e,[Ljava.lang.String;@3f598450),Annotation([Ljava.lang.String;@2db2a05f,[Ljava.lang.String;@695c938d,[Ledu.cmu.lti.nlp.amr.Entity;@d5bb1c4))
AMR:
(x7 / 单调-01, degree, x8 / 很)
(x7 / 单调-01, location, x9 / 生活)
(x9 / 生活, poss, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,567 microseconds
Sentence: 我 捕捉 鸡 ， 而 人 又 捕捉 我 。

Oracle Span 1:  人 => 人
Oracle Span 2:  又 => 又
Oracle Span 3:  我 => 我
Oracle Span 4:  捕捉 => 捕捉-01
Oracle Span 5:  捕捉 => 捕捉-01
Oracle Span 6:  鸡 => 鸡
Spans:
Span 5-6:  人 => 人
Span 6-7:  又 => 又
Span 0-1:  我 => 我
Span 1-2:  捕捉 => 捕捉-01
Span 7-8:  捕捉 => 捕捉-01
Span 2-3:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  又 => 又
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  捕捉 => 捕捉-01
Oracle Span 7-8:  捕捉 => 捕捉-01
Oracle Span 2-3:  鸡 => 鸡

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	捕捉	_	VV	VV	_	0	root	_	_
3	鸡	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	而	_	AD	AD	_	8	advmod	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	捕捉	_	VV	VV	_	2	conj	_	_
9	我	_	PN	PN	_	8	dobj	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 捕捉-01, arg0, x3 / 我)
(x2 / 捕捉-01, arg1, x4 / 鸡)
(x5 / 捕捉-01, arg0, x6 / 人)
(x5 / 捕捉-01, manner, x8 / 又)

Input(Some(Graph((contrast :arg1 (捕捉-01 :arg1 鸡 :arg0 我) :arg2 (捕捉-01 :manner 又 :arg1 x3 :arg0 人)),ArrayBuffer(Span(1,2,List(0),捕捉,捕捉-01,false), Span(2,3,List(1),鸡,鸡,false), Span(0,1,List(2),我,我,false), Span(7,8,List(3),捕捉,捕捉-01,false), Span(6,7,List(4),又,又,false), Span(5,6,List(5),人,人,false)),Map(2 -> 我, 5 -> 人, 1 -> 鸡, 4 -> 又, 0 -> 捕捉-01, 3 -> 捕捉-01),Map(x2 -> 捕捉-01, x5 -> 捕捉-01, x8 -> 又, x4 -> 鸡, x3 -> 我, x6 -> 人))),[Ljava.lang.String;@7ed3df3b,Annotation([Ljava.lang.String;@465b38e6,[Ljava.lang.String;@4b960b5b,[Ljava.lang.String;@1b13467c),Annotation([Ljava.lang.String;@7bd96822,[Ljava.lang.String;@64dae3b7,[Ledu.cmu.lti.nlp.amr.Dependency;@1fedf0a4),Annotation([Ljava.lang.String;@1e4c6583,[Ljava.lang.String;@2ee48610,[Ljava.lang.String;@1d901f20),Annotation([Ljava.lang.String;@6d08b4e6,[Ljava.lang.String;@1015a4b9,[Ledu.cmu.lti.nlp.amr.Entity;@1acb74ad))
AMR:
(x2 / 捕捉-01, ARG5, x8 / 又)
(x2 / 捕捉-01, quant, x4 / 鸡)
(x2 / 捕捉-01, value, x3 / 我)
(x5 / 捕捉-01, location, x6 / 人)
(x5 / 捕捉-01, manner, x8 / 又)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 14,248 microseconds
Sentence: 所有 的 鸡 全 都 一样 ， 所有 的 人 也 全 都 一样 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  一样 => 一样-01
Oracle Span 3:  人 => 人
Oracle Span 4:  全 => 全-01
Oracle Span 5:  全 => 全
Oracle Span 6:  所有 => 所有
Oracle Span 7:  所有 => 所有
Oracle Span 8:  都 => 都
Oracle Span 9:  都 => 都
Oracle Span 10:  鸡 => 鸡
Spans:
Span 5-6:  一样 => 一样-01
Span 13-14:  一样 => 一样-01
Span 9-10:  人 => 人
Span 3-4:  全 => 全-01
Span 11-12:  全 => 全
Span 0-1:  所有 => 所有
Span 7-8:  所有 => 所有
Span 4-5:  都 => 都
Span 12-13:  都 => 都
Span 2-3:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一样 => 一样-01
Oracle Span 13-14:  一样 => 一样-01
Oracle Span 9-10:  人 => 人
Oracle Span 3-4:  全 => 全-01
Oracle Span 11-12:  全 => 全
Oracle Span 0-1:  所有 => 所有
Oracle Span 7-8:  所有 => 所有
Oracle Span 4-5:  都 => 都
Oracle Span 12-13:  都 => 都
Oracle Span 2-3:  鸡 => 鸡

Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	鸡	_	NN	NN	_	6	nsubj	_	_
4	全	_	AD	AD	_	6	advmod	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	一样	_	VA	VA	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	所有	_	DT	DT	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	人	_	NN	NN	_	14	nsubj	_	_
11	也	_	AD	AD	_	14	advmod	_	_
12	全	_	AD	AD	_	14	advmod	_	_
13	都	_	AD	AD	_	14	advmod	_	_
14	一样	_	VA	VA	_	6	conj	_	_
15	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 一样-01, arg0, x3 / 鸡)
(x2 / 一样-01, manner, x5 / 都)
(x2 / 一样-01, manner, x6 / 全-01)
(x3 / 鸡, mod, x4 / 所有)
(x7 / 一样-01, arg0, x8 / 人)
(x7 / 一样-01, manner, x10 / 都)
(x7 / 一样-01, manner, x11 / 全)
(x8 / 人, mod, x9 / 所有)

Input(Some(Graph((and :op (一样-01 :manner 全-01 :manner 都 :arg0 (鸡 :mod 所有)) :op (一样-01 :manner 全 :manner 都 :arg0 (人 :mod 所有))),ArrayBuffer(Span(5,6,List(0),一样,一样-01,false), Span(3,4,List(1),全,全-01,false), Span(4,5,List(2),都,都,false), Span(2,3,List(3),鸡,鸡,false), Span(0,1,List(4),所有,所有,false), Span(13,14,List(5),一样,一样-01,false), Span(11,12,List(6),全,全,false), Span(12,13,List(7),都,都,false), Span(9,10,List(8),人,人,false), Span(7,8,List(9),所有,所有,false)),Map(2 -> 都, 5 -> 一样-01, 8 -> 人, 7 -> 都, 1 -> 全-01, 4 -> 所有, 6 -> 全, 9 -> 所有, 0 -> 一样-01, 3 -> 鸡),Map(x10 -> 都, x2 -> 一样-01, x5 -> 都, x8 -> 人, x7 -> 一样-01, x4 -> 所有, x11 -> 全, x3 -> 鸡, x6 -> 全-01, x9 -> 所有))),[Ljava.lang.String;@7bf01cb,Annotation([Ljava.lang.String;@2f382a5e,[Ljava.lang.String;@12b5736c,[Ljava.lang.String;@539a138b),Annotation([Ljava.lang.String;@2cd4e16a,[Ljava.lang.String;@42505474,[Ledu.cmu.lti.nlp.amr.Dependency;@7b477141),Annotation([Ljava.lang.String;@784223e9,[Ljava.lang.String;@7316523a,[Ljava.lang.String;@33a55bd8),Annotation([Ljava.lang.String;@73a8e994,[Ljava.lang.String;@1a1cc163,[Ledu.cmu.lti.nlp.amr.Entity;@5b5ac798))
AMR:
(x2 / 一样-01, manner, x5 / 都)
(x2 / 一样-01, manner, x6 / 全-01)
(x2 / 一样-01, prep-on-behalf, x3 / 鸡)
(x3 / 鸡, mod, x4 / 所有)
(x7 / 一样-01, manner, x10 / 都)
(x7 / 一样-01, manner, x11 / 全)
(x7 / 一样-01, manner, x6 / 全-01)
(x7 / 一样-01, snt3, x8 / 人)
(x8 / 人, mod, x9 / 所有)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 27,864 microseconds
Sentence: 因此 ， 我 感到 有些 厌烦 了 。

Oracle Span 1:  厌烦 => 厌烦-01
Oracle Span 2:  感到 => 感到-01
Oracle Span 3:  我 => 我
Oracle Span 4:  有些 => 有些
Spans:
Span 5-6:  厌烦 => 厌烦-01
Span 3-4:  感到 => 感到-01
Span 2-3:  我 => 我
Span 4-5:  有些 => 有些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  厌烦 => 厌烦-01
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  有些 => 有些

Dependencies:
1	因此	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	有些	_	AD	AD	_	6	advmod	_	_
6	厌烦	_	VV	VV	_	4	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x2 / 感到-01, arg0, x3 / 我)
(x2 / 感到-01, arg1, x4 / 厌烦-01)
(x4 / 厌烦-01, degree, x5 / 有些)

Input(Some(Graph((causation :arg2 (感到-01 :arg1 (厌烦-01 :arg0 x3 :degree 有些) :arg0 我)),ArrayBuffer(Span(3,4,List(0),感到,感到-01,false), Span(5,6,List(1),厌烦,厌烦-01,false), Span(4,5,List(2),有些,有些,false), Span(2,3,List(3),我,我,false)),Map(2 -> 有些, 1 -> 厌烦-01, 0 -> 感到-01, 3 -> 我),Map(x2 -> 感到-01, x5 -> 有些, x4 -> 厌烦-01, x3 -> 我))),[Ljava.lang.String;@42383cb0,Annotation([Ljava.lang.String;@7668892a,[Ljava.lang.String;@a83495d,[Ljava.lang.String;@7e83992),Annotation([Ljava.lang.String;@4364863,[Ljava.lang.String;@3625a016,[Ledu.cmu.lti.nlp.amr.Dependency;@267cde2e),Annotation([Ljava.lang.String;@609e57da,[Ljava.lang.String;@56dd6efa,[Ljava.lang.String;@4d634127),Annotation([Ljava.lang.String;@d2e6b0b,[Ljava.lang.String;@1f1cddf3,[Ledu.cmu.lti.nlp.amr.Entity;@228bda54))
AMR:
(x2 / 感到-01, prep-in-addition-to, x3 / 我)
(x2 / 感到-01, prep-in-addition-to, x4 / 厌烦-01)
(x4 / 厌烦-01, degree, x5 / 有些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,222 microseconds
Sentence: 但是 ， 如果 你 要是 驯服 了 我 ， 我 的 生活 就 一定 会 是 欢快 的 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  会 => 会-02
Oracle Span 3:  你 => 你
Oracle Span 4:  就 => 就
Oracle Span 5:  我 => 我
Oracle Span 6:  欢快 => 欢快
Oracle Span 7:  生活 => 生活-01
Oracle Span 8:  驯服 => 驯服-01
Spans:
Span 13-14:  一定 => 一定
Span 14-15:  会 => 会-02
Span 3-4:  你 => 你
Span 12-13:  就 => 就
Span 7-8:  我 => 我
Span 16-17:  欢快 => 欢快
Span 11-12:  生活 => 生活-01
Span 5-6:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  一定 => 一定
Oracle Span 14-15:  会 => 会-02
Oracle Span 3-4:  你 => 你
Oracle Span 12-13:  就 => 就
Oracle Span 7-8:  我 => 我
Oracle Span 16-17:  欢快 => 欢快
Oracle Span 11-12:  生活 => 生活-01
Oracle Span 5-6:  驯服 => 驯服-01

Dependencies:
1	但是	_	AD	AD	_	16	advmod	_	_
2	,	_	PU	PU	_	16	punct	_	_
3	如果	_	CS	CS	_	6	advmod	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	要是	_	AD	AD	_	6	advmod	_	_
6	驯服	_	VV	VV	_	16	pccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	我	_	PN	PN	_	6	dobj	_	_
9	,	_	PU	PU	_	16	punct	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	生活	_	NN	NN	_	16	nsubj	_	_
13	就	_	AD	AD	_	16	advmod	_	_
14	一定	_	AD	AD	_	16	advmod	_	_
15	会	_	VV	VV	_	16	mmod	_	_
16	是	_	VC	VC	_	0	root	_	_
17	欢快	_	VA	VA	_	16	attr	_	_
18	的	_	DEC	DEC	_	17	cpm	_	_
19	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x4 / 驯服-01, arg0, x5 / 你)
(x4 / 驯服-01, arg1, x6 / 我)
(x7 / 会-02, arg0, x8 / 欢快)
(x7 / 会-02, manner, x11 / 一定)
(x7 / 会-02, manner, x12 / 就)
(x8 / 欢快, arg0, x9 / 生活-01)

Input(Some(Graph((contrast :arg2 (condition :arg1 (驯服-01 :arg1 我 :arg0 你) :arg2 (会-02 :manner 就 :manner 一定 :arg0 (欢快 :arg0 (生活-01 :poss x6))))),ArrayBuffer(Span(5,6,List(0),驯服,驯服-01,false), Span(7,8,List(1),我,我,false), Span(3,4,List(2),你,你,false), Span(14,15,List(3),会,会-02,false), Span(12,13,List(4),就,就,false), Span(13,14,List(5),一定,一定,false), Span(16,17,List(6),欢快,欢快,false), Span(11,12,List(7),生活,生活-01,false)),Map(2 -> 你, 5 -> 一定, 7 -> 生活-01, 1 -> 我, 4 -> 就, 6 -> 欢快, 0 -> 驯服-01, 3 -> 会-02),Map(x5 -> 你, x8 -> 欢快, x12 -> 就, x7 -> 会-02, x4 -> 驯服-01, x11 -> 一定, x6 -> 我, x9 -> 生活-01))),[Ljava.lang.String;@75b6dd5b,Annotation([Ljava.lang.String;@b3e86d5,[Ljava.lang.String;@72b43104,[Ljava.lang.String;@e111c7c),Annotation([Ljava.lang.String;@4d0e54e0,[Ljava.lang.String;@32f96bba,[Ledu.cmu.lti.nlp.amr.Dependency;@611640f0),Annotation([Ljava.lang.String;@67e25252,[Ljava.lang.String;@58f4b31a,[Ljava.lang.String;@21a9a705),Annotation([Ljava.lang.String;@72eb6200,[Ljava.lang.String;@76ececd,[Ledu.cmu.lti.nlp.amr.Entity;@7affc159))
AMR:
(x4 / 驯服-01, age, x8 / 欢快)
(x4 / 驯服-01, beneficiary, x6 / 我)
(x4 / 驯服-01, mode, x5 / 你)
(x7 / 会-02, ARG0, x8 / 欢快)
(x7 / 会-02, manner, x11 / 一定)
(x7 / 会-02, manner, x12 / 就)
(x8 / 欢快, age, x9 / 生活-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 26,259 microseconds
Sentence: 我 会 辨认 出 一 种 与众不同 的 脚步声 。

Oracle Span 1:  与众不同 => 与众不同-01
Oracle Span 2:  会 => 会-01
Oracle Span 3:  我 => 我
Oracle Span 4:  辨认 => 辨认-01
Spans:
Span 6-7:  与众不同 => 与众不同-01
Span 1-2:  会 => 会-01
Span 0-1:  我 => 我
Span 2-3:  辨认 => 辨认-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  与众不同 => 与众不同-01
Oracle Span 1-2:  会 => 会-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  辨认 => 辨认-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	辨认	_	VV	VV	_	0	root	_	_
4	出	_	VV	VV	_	9	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	7	clf	_	_
7	与众不同	_	NN	NN	_	4	dobj	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	脚步声	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 辨认-01)
(x2 / 辨认-01, arg0, x3 / 我)

Input(Some(Graph((会-01 :arg0 (辨认-01 :arg1 (声 :mod 脚步 :mod 与众不同-01 :quant 1) :arg0 我)),ArrayBuffer(Span(1,2,List(0),会,会-01,false), Span(2,3,List(1),辨认,辨认-01,false), Span(6,7,List(2),与众不同,与众不同-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 与众不同-01, 1 -> 辨认-01, 0 -> 会-01, 3 -> 我),Map(x2 -> 辨认-01, x3 -> 我, x9 -> 与众不同-01, x0 -> 会-01))),[Ljava.lang.String;@1682c08c,Annotation([Ljava.lang.String;@3fd05b3e,[Ljava.lang.String;@4eb9f2af,[Ljava.lang.String;@4a481728),Annotation([Ljava.lang.String;@4ace284d,[Ljava.lang.String;@77fa9381,[Ledu.cmu.lti.nlp.amr.Dependency;@76d72b5b),Annotation([Ljava.lang.String;@7cac93fe,[Ljava.lang.String;@479b5066,[Ljava.lang.String;@64deb58f),Annotation([Ljava.lang.String;@2b1cd7bc,[Ljava.lang.String;@33379242,[Ledu.cmu.lti.nlp.amr.Entity;@2e32fc22))
AMR:
(x0 / 会-01, mode, x2 / 辨认-01)
(x0 / 会-01, time, x9 / 与众不同-01)
(x2 / 辨认-01, snt1, x3 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,491 microseconds
Sentence: 其他 的 脚步声 会 使 我 躲到 地下 去 ，

Oracle Span 1:  会 => 会-02
Oracle Span 2:  其他 => 其他
Oracle Span 3:  地下 => 地下
Oracle Span 4:  我 => 我
Oracle Span 5:  脚步声 => 脚步声
Oracle Span 6:  躲到 => 躲到-01
Spans:
Span 3-4:  会 => 会-02
Span 0-1:  其他 => 其他
Span 7-8:  地下 => 地下
Span 5-6:  我 => 我
Span 2-3:  脚步声 => 脚步声
Span 6-7:  躲到 => 躲到-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-02
Oracle Span 0-1:  其他 => 其他
Oracle Span 7-8:  地下 => 地下
Oracle Span 5-6:  我 => 我
Oracle Span 2-3:  脚步声 => 脚步声
Oracle Span 6-7:  躲到 => 躲到-01

Dependencies:
1	其他	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	脚步声	_	NN	NN	_	5	nsubj	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	9	nsubj	_	_
7	躲到	_	NN	NN	_	9	nsubj	_	_
8	地下	_	AD	AD	_	9	advmod	_	_
9	去	_	VV	VV	_	5	ccomp	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x15 / 躲到-01, arg0, x16 / 我)
(x15 / 躲到-01, arg1, x17 / 地下)
(x18 / 脚步声, mod, x19 / 其他)
(x2 / 会-02, arg0, x15 / 躲到-01)
(x2 / 会-02, cause, x18 / 脚步声)

Input(Some(Graph((会-02 :cause (脚步声 :mod 其他) :arg0 (躲到-01 :arg1 地下 :arg0 我)),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(2,3,List(1),脚步声,脚步声,false), Span(0,1,List(2),其他,其他,false), Span(6,7,List(3),躲到,躲到-01,false), Span(7,8,List(4),地下,地下,false), Span(5,6,List(5),我,我,false)),Map(2 -> 其他, 5 -> 我, 1 -> 脚步声, 4 -> 地下, 0 -> 会-02, 3 -> 躲到-01),Map(x16 -> 我, x19 -> 其他, x2 -> 会-02, x15 -> 躲到-01, x18 -> 脚步声, x17 -> 地下))),[Ljava.lang.String;@3f5156a6,Annotation([Ljava.lang.String;@72bdd7c7,[Ljava.lang.String;@7d17ee50,[Ljava.lang.String;@44fdce3c),Annotation([Ljava.lang.String;@712c5463,[Ljava.lang.String;@6d33a66e,[Ledu.cmu.lti.nlp.amr.Dependency;@2f14b0f6),Annotation([Ljava.lang.String;@5b20706,[Ljava.lang.String;@16aed49f,[Ljava.lang.String;@66de00f2),Annotation([Ljava.lang.String;@6c479fdf,[Ljava.lang.String;@79d82f66,[Ledu.cmu.lti.nlp.amr.Entity;@19b206ee))
AMR:
(x15 / 躲到-01, ARG3, x16 / 我)
(x15 / 躲到-01, degree, x17 / 地下)
(x18 / 脚步声, mod, x19 / 其他)
(x2 / 会-02, degree, x18 / 脚步声)
(x2 / 会-02, manner, x15 / 躲到-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,657 microseconds
Sentence: 而 你 的 脚步声 就 会 象 音乐 一样 让 我 从 洞 里 走 出来 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  出来 => 出来-01
Oracle Span 4:  我 => 我
Oracle Span 5:  洞 => 洞
Oracle Span 6:  让 => 让-02
Oracle Span 7:  走 => 走-05
Oracle Span 8:  音乐 => 音乐
Spans:
Span 5-6:  会 => 会-02
Span 1-2:  你 => 你
Span 15-16:  出来 => 出来-01
Span 10-11:  我 => 我
Span 12-13:  洞 => 洞
Span 9-10:  让 => 让-02
Span 14-15:  走 => 走-05
Span 7-8:  音乐 => 音乐

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 1-2:  你 => 你
Oracle Span 15-16:  出来 => 出来-01
Oracle Span 10-11:  我 => 我
Oracle Span 12-13:  洞 => 洞
Oracle Span 9-10:  让 => 让-02
Oracle Span 14-15:  走 => 走-05
Oracle Span 7-8:  音乐 => 音乐

Dependencies:
1	而	_	AD	AD	_	10	advmod	_	_
2	你	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脚步声	_	NN	NN	_	10	nsubj	_	_
5	就	_	P	P	_	10	prep	_	_
6	会	_	VV	VV	_	9	mmod	_	_
7	象	_	P	P	_	9	prep	_	_
8	音乐	_	NN	NN	_	7	pobj	_	_
9	一样	_	VA	VA	_	5	pccomp	_	_
10	让	_	VV	VV	_	0	root	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	从	_	P	P	_	15	prep	_	_
13	洞	_	NN	NN	_	14	lobj	_	_
14	里	_	LC	LC	_	12	plmod	_	_
15	走	_	VV	VV	_	10	dep	_	_
16	出来	_	VV	VV	_	15	comod	_	_
17	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x24 / 让-02, arg1, x26 / 我)
(x24 / 让-02, arg2, x27 / 走-05)
(x27 / 走-05, arg1, x30 / 洞)
(x27 / 走-05, direction, x28 / 出来-01)

Input(Some(Graph((contrast :arg2 (会-02 :arg0 (像-01 :arg0 (声 :mod 脚步 :poss 你) :arg1 音乐 :arg2 (让-02 :arg2 (走-05 :arg1 洞 :arg0 x26 :direction 出来-01) :arg1 我 :arg0 x20)))),ArrayBuffer(Span(5,6,List(0),会,会-02,false), Span(1,2,List(1),你,你,false), Span(7,8,List(2),音乐,音乐,false), Span(9,10,List(3),让,让-02,false), Span(14,15,List(4),走,走-05,false), Span(12,13,List(5),洞,洞,false), Span(15,16,List(6),出来,出来-01,false), Span(10,11,List(7),我,我,false)),Map(2 -> 音乐, 5 -> 洞, 7 -> 我, 1 -> 你, 4 -> 走-05, 6 -> 出来-01, 0 -> 会-02, 3 -> 让-02),Map(x28 -> 出来-01, x22 -> 你, x2 -> 会-02, x30 -> 洞, x27 -> 走-05, x24 -> 让-02, x23 -> 音乐, x26 -> 我))),[Ljava.lang.String;@ffd4cba,Annotation([Ljava.lang.String;@5f1483fd,[Ljava.lang.String;@670f2466,[Ljava.lang.String;@6e03db1f),Annotation([Ljava.lang.String;@bfec2f9,[Ljava.lang.String;@708eb310,[Ledu.cmu.lti.nlp.amr.Dependency;@6ebc9573),Annotation([Ljava.lang.String;@1e977098,[Ljava.lang.String;@630390b9,[Ljava.lang.String;@6690b9fa),Annotation([Ljava.lang.String;@6c8dbf56,[Ljava.lang.String;@493b01ef,[Ledu.cmu.lti.nlp.amr.Entity;@36c2d629))
AMR:
(x22 / 你, prep-on-behalf, x24 / 让-02)
(x24 / 让-02, ARG0, x23 / 音乐)
(x24 / 让-02, subevent, x27 / 走-05)
(x24 / 让-02, value, x26 / 我)
(x27 / 走-05, direction, x28 / 出来-01)
(x27 / 走-05, location, x2 / 会-02)
(x27 / 走-05, prep-following, x30 / 洞)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.2
WARNING: makeIds can't find span Id: 0.0.0.2.2.2
WARNING: makeIds can't find span Id: 0.0.0.2.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.1
Decoded in 21,382 microseconds
Sentence: 再 说 ， 你 看 ！ 你 看到 那边 的 麦田 没有 ？

Oracle Span 1:  你 => 你
Oracle Span 2:  看 => 看-02
Oracle Span 3:  看到 => 看到-01
Oracle Span 4:  那边 => 那边
Oracle Span 5:  麦田 => 麦田
Spans:
Span 3-4:  你 => 你
Span 4-5:  看 => 看-02
Span 7-8:  看到 => 看到-01
Span 8-9:  那边 => 那边
Span 10-11:  麦田 => 麦田

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 4-5:  看 => 看-02
Oracle Span 7-8:  看到 => 看到-01
Oracle Span 8-9:  那边 => 那边
Oracle Span 10-11:  麦田 => 麦田

Dependencies:
1	再	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	看	_	VV	VV	_	2	ccomp	_	_
6	！	_	PU	PU	_	2	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	看到	_	VV	VV	_	2	dep	_	_
9	那边	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	麦田	_	NN	NN	_	8	dobj	_	_
12	没有	_	VV	VV	_	8	dep	_	_
13	？	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 看-02, arg0, x3 / 你)
(x4 / 看到-01, arg1, x6 / 麦田)
(x6 / 麦田, location, x7 / 那边)

Input(Some(Graph((multi-sentence :snt1 (看-02 :manner 再说-01 :mode expressive :arg0 你) :snt2 (看到-01 :mode interrogative :arg1 (麦田 :location 那边) :arg0 x3)),ArrayBuffer(Span(4,5,List(0),看,看-02,false), Span(3,4,List(1),你,你,false), Span(7,8,List(2),看到,看到-01,false), Span(10,11,List(3),麦田,麦田,false), Span(8,9,List(4),那边,那边,false)),Map(2 -> 看到-01, 1 -> 你, 4 -> 那边, 0 -> 看-02, 3 -> 麦田),Map(x2 -> 看-02, x7 -> 那边, x4 -> 看到-01, x3 -> 你, x6 -> 麦田))),[Ljava.lang.String;@55fee662,Annotation([Ljava.lang.String;@54089484,[Ljava.lang.String;@45adc393,[Ljava.lang.String;@65fe2691),Annotation([Ljava.lang.String;@479111ba,[Ljava.lang.String;@57ad1178,[Ledu.cmu.lti.nlp.amr.Dependency;@7c37f145),Annotation([Ljava.lang.String;@68699afc,[Ljava.lang.String;@273a5a8a,[Ljava.lang.String;@1823b9c4),Annotation([Ljava.lang.String;@5b5dce5c,[Ljava.lang.String;@7f4701b1,[Ledu.cmu.lti.nlp.amr.Entity;@adcfad9))
AMR:
(x2 / 看-02, snt1, x4 / 看到-01)
(x2 / 看-02, value, x3 / 你)
(x4 / 看到-01, op, x6 / 麦田)
(x6 / 麦田, location, x7 / 那边)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 11,473 microseconds
Sentence: 我 不 吃 面包 ，

Oracle Span 1:  吃 => 吃-01
Oracle Span 2:  我 => 我
Oracle Span 3:  面包 => 面包
Spans:
Span 2-3:  吃 => 吃-01
Span 0-1:  我 => 我
Span 3-4:  面包 => 面包

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  吃 => 吃-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  面包 => 面包

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	吃	_	VV	VV	_	0	root	_	_
4	面包	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 吃-01, arg0, x3 / 我)
(x0 / 吃-01, arg1, x4 / 面包)

Input(Some(Graph((吃-01 :arg1 面包 :arg0 我 :polarity -),ArrayBuffer(Span(2,3,List(0),吃,吃-01,false), Span(3,4,List(1),面包,面包,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 面包, 0 -> 吃-01),Map(x4 -> 面包, x3 -> 我, x0 -> 吃-01))),[Ljava.lang.String;@fb49fdf,Annotation([Ljava.lang.String;@3a2e9f5b,[Ljava.lang.String;@7da34b26,[Ljava.lang.String;@10c47c79),Annotation([Ljava.lang.String;@3b2553d9,[Ljava.lang.String;@753fd7a1,[Ledu.cmu.lti.nlp.amr.Dependency;@12a2585b),Annotation([Ljava.lang.String;@21b6c9c2,[Ljava.lang.String;@309cedb6,[Ljava.lang.String;@3b95a6db),Annotation([Ljava.lang.String;@3bf54172,[Ljava.lang.String;@2c9a6717,[Ledu.cmu.lti.nlp.amr.Entity;@7b3cde6f))
AMR:
(x0 / 吃-01, beneficiary, x3 / 我)
(x0 / 吃-01, quant, x4 / 面包)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 4,247 microseconds
Sentence: 麦子 对 我 来说 ， 一点 用 也 没有 。

Oracle Span 1:  一点 => 一点
Oracle Span 2:  我 => 我
Oracle Span 3:  来说 => 来说-01
Oracle Span 4:  麦子 => 麦子
Spans:
Span 5-6:  一点 => 一点
Span 2-3:  我 => 我
Span 3-4:  来说 => 来说-01
Span 0-1:  麦子 => 麦子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一点 => 一点
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 0-1:  麦子 => 麦子

Dependencies:
1	麦子	_	NN	NN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	一点	_	AD	AD	_	7	advmod	_	_
7	用	_	VV	VV	_	4	dep	_	_
8	也	_	AD	AD	_	7	dep	_	_
9	没有	_	VV	VV	_	7	dep	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 麦子)
(x0 / 来说-01, arg1, x3 / 我)

Input(Some(Graph((来说-01 :arg2 (有用-01 :degree 一点 :polarity -) :arg1 我 :arg0 麦子),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(5,6,List(1),一点,一点,false), Span(2,3,List(2),我,我,false), Span(0,1,List(3),麦子,麦子,false)),Map(2 -> 我, 1 -> 一点, 0 -> 来说-01, 3 -> 麦子),Map(x2 -> 麦子, x3 -> 我, x9 -> 一点, x0 -> 来说-01))),[Ljava.lang.String;@6d091cad,Annotation([Ljava.lang.String;@7c663eaf,[Ljava.lang.String;@3bb5ceb,[Ljava.lang.String;@1e692555),Annotation([Ljava.lang.String;@3ba0ae41,[Ljava.lang.String;@76fe6cdc,[Ledu.cmu.lti.nlp.amr.Dependency;@2ffb3aec),Annotation([Ljava.lang.String;@786ff1cb,[Ljava.lang.String;@46039a21,[Ljava.lang.String;@431e86b1),Annotation([Ljava.lang.String;@35c4e864,[Ljava.lang.String;@32a2a6be,[Ledu.cmu.lti.nlp.amr.Entity;@682af059))
AMR:
(x0 / 来说-01, direction, x3 / 我)
(x0 / 来说-01, prep-on-behalf, x2 / 麦子)
(x3 / 我, location, x9 / 一点)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,214 microseconds
Sentence: 我 对 麦田 无动于衷 。

Oracle Span 1:  我 => 我
Oracle Span 2:  无动于衷 => 无动于衷-01
Oracle Span 3:  麦田 => 麦田
Spans:
Span 0-1:  我 => 我
Span 3-4:  无动于衷 => 无动于衷-01
Span 2-3:  麦田 => 麦田

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  无动于衷 => 无动于衷-01
Oracle Span 2-3:  麦田 => 麦田

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	麦田	_	NN	NN	_	2	pobj	_	_
4	无动于衷	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 无动于衷-01, arg0, x9 / 我)
(x7 / 无动于衷-01, arg1, x10 / 麦田)

Input(Some(Graph((无动于衷-01 :arg1 麦田 :arg0 我),ArrayBuffer(Span(3,4,List(0),无动于衷,无动于衷-01,false), Span(2,3,List(1),麦田,麦田,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 麦田, 0 -> 无动于衷-01),Map(x10 -> 麦田, x7 -> 无动于衷-01, x9 -> 我))),[Ljava.lang.String;@5f36c8e3,Annotation([Ljava.lang.String;@4da39ca9,[Ljava.lang.String;@6a9344f5,[Ljava.lang.String;@5584d9c6),Annotation([Ljava.lang.String;@3c9c6245,[Ljava.lang.String;@6d0be7ab,[Ledu.cmu.lti.nlp.amr.Dependency;@1d4fb213),Annotation([Ljava.lang.String;@6ef60295,[Ljava.lang.String;@3127cb44,[Ljava.lang.String;@3234474),Annotation([Ljava.lang.String;@631cb129,[Ljava.lang.String;@3d20e575,[Ledu.cmu.lti.nlp.amr.Entity;@3252747e))
AMR:
(x7 / 无动于衷-01, accompanier, x10 / 麦田)
(x7 / 无动于衷-01, op, x9 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,229 microseconds
Sentence: 而 这 ， 真 使 人 扫兴 。

Oracle Span 1:  人 => 人
Oracle Span 2:  扫兴 => 扫兴
Oracle Span 3:  真 => 真
Oracle Span 4:  这 => 这
Spans:
Span 5-6:  人 => 人
Span 6-7:  扫兴 => 扫兴
Span 3-4:  真 => 真
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  扫兴 => 扫兴
Oracle Span 3-4:  真 => 真
Oracle Span 1-2:  这 => 这

Dependencies:
1	而	_	AD	AD	_	5	advmod	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	真	_	AD	AD	_	5	advmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	人	_	NN	NN	_	5	dobj	_	_
7	扫兴	_	VV	VV	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 扫兴, arg0, x8 / 人)
(x7 / 扫兴, cause, x10 / 这)
(x7 / 扫兴, degree, x9 / 真)

Input(Some(Graph((contrast :arg2 (扫兴 :cause 这 :degree 真 :arg0 人)),ArrayBuffer(Span(6,7,List(0),扫兴,扫兴,false), Span(1,2,List(1),这,这,false), Span(3,4,List(2),真,真,false), Span(5,6,List(3),人,人,false)),Map(2 -> 真, 1 -> 这, 0 -> 扫兴, 3 -> 人),Map(x10 -> 这, x8 -> 人, x7 -> 扫兴, x9 -> 真))),[Ljava.lang.String;@2b4b96a4,Annotation([Ljava.lang.String;@2dd8ff1d,[Ljava.lang.String;@17e9bc9e,[Ljava.lang.String;@36b9cb99),Annotation([Ljava.lang.String;@4130955c,[Ljava.lang.String;@2bfaba70,[Ledu.cmu.lti.nlp.amr.Dependency;@71adfedd),Annotation([Ljava.lang.String;@9301672,[Ljava.lang.String;@4ceff87d,[Ljava.lang.String;@3238e2aa),Annotation([Ljava.lang.String;@2c7db926,[Ljava.lang.String;@2577a95d,[Ledu.cmu.lti.nlp.amr.Entity;@1668919e))
AMR:
(x7 / 扫兴, degree, x9 / 真)
(x7 / 扫兴, mod, x8 / 人)
(x7 / 扫兴, quant, x10 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,427 microseconds
Sentence: 但是 ， 你 有 着 金黄色 的 头发 。

Oracle Span 1:  你 => 你
Oracle Span 2:  头发 => 头发
Oracle Span 3:  有 => 有-01
Oracle Span 4:  金黄色 => 金黄色
Spans:
Span 2-3:  你 => 你
Span 7-8:  头发 => 头发
Span 3-4:  有 => 有-01
Span 5-6:  金黄色 => 金黄色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 7-8:  头发 => 头发
Oracle Span 3-4:  有 => 有-01
Oracle Span 5-6:  金黄色 => 金黄色

Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	你	_	PN	PN	_	4	top	_	_
4	有	_	VE	VE	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	金黄色	_	JJ	JJ	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	头发	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 有-01, arg0, x3 / 你)
(x2 / 有-01, arg1, x4 / 头发)
(x4 / 头发, mod, x5 / 金黄色)

Input(Some(Graph((contrast :arg2 (有-01 :arg1 (头发 :mod 金黄色) :arg0 你)),ArrayBuffer(Span(3,4,List(0),有,有-01,false), Span(7,8,List(1),头发,头发,false), Span(5,6,List(2),金黄色,金黄色,false), Span(2,3,List(3),你,你,false)),Map(2 -> 金黄色, 1 -> 头发, 0 -> 有-01, 3 -> 你),Map(x2 -> 有-01, x5 -> 金黄色, x4 -> 头发, x3 -> 你))),[Ljava.lang.String;@63300c4b,Annotation([Ljava.lang.String;@22c53d82,[Ljava.lang.String;@3a6045c6,[Ljava.lang.String;@68d6d775),Annotation([Ljava.lang.String;@b67cc70,[Ljava.lang.String;@45c9b3,[Ledu.cmu.lti.nlp.amr.Dependency;@38b3f208),Annotation([Ljava.lang.String;@6680f714,[Ljava.lang.String;@53b1a3f8,[Ljava.lang.String;@7d97e06c),Annotation([Ljava.lang.String;@5a936e64,[Ljava.lang.String;@3b4a1a75,[Ledu.cmu.lti.nlp.amr.Entity;@65bad087))
AMR:
(x2 / 有-01, ARG5, x3 / 你)
(x2 / 有-01, part, x4 / 头发)
(x4 / 头发, mod, x5 / 金黄色)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,420 microseconds
Sentence: 那么 ， 一旦 你 驯服 了 我 ， 这 就 会 十分 美妙 。

Oracle Span 1:  你 => 你
Oracle Span 2:  十分 => 十分
Oracle Span 3:  就 => 就
Oracle Span 4:  我 => 我
Oracle Span 5:  美妙 => 美妙-01
Oracle Span 6:  这 => 这
Oracle Span 7:  驯服 => 驯服-01
Spans:
Span 3-4:  你 => 你
Span 11-12:  十分 => 十分
Span 9-10:  就 => 就
Span 6-7:  我 => 我
Span 12-13:  美妙 => 美妙-01
Span 8-9:  这 => 这
Span 4-5:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 11-12:  十分 => 十分
Oracle Span 9-10:  就 => 就
Oracle Span 6-7:  我 => 我
Oracle Span 12-13:  美妙 => 美妙-01
Oracle Span 8-9:  这 => 这
Oracle Span 4-5:  驯服 => 驯服-01

Dependencies:
1	那么	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	一旦	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	驯服	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	5	dobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	这	_	PN	PN	_	13	nsubj	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	会	_	VV	VV	_	13	mmod	_	_
12	十分	_	AD	AD	_	13	advmod	_	_
13	美妙	_	VV	VV	_	0	root	_	_
14	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 美妙-01, arg0, x14 / 这)
(x11 / 美妙-01, degree, x12 / 十分)
(x11 / 美妙-01, manner, x13 / 就)
(x3 / 驯服-01, arg0, x4 / 你)
(x3 / 驯服-01, arg1, x5 / 我)

Input(Some(Graph((temporal :arg2 (condition :arg1 (驯服-01 :arg1 我 :arg0 你) :arg2 (美妙-01 :arg0 这 :manner 就 :degree 十分))),ArrayBuffer(Span(4,5,List(0),驯服,驯服-01,false), Span(6,7,List(1),我,我,false), Span(3,4,List(2),你,你,false), Span(12,13,List(3),美妙,美妙-01,false), Span(8,9,List(4),这,这,false), Span(9,10,List(5),就,就,false), Span(11,12,List(6),十分,十分,false)),Map(2 -> 你, 5 -> 就, 1 -> 我, 4 -> 这, 6 -> 十分, 0 -> 驯服-01, 3 -> 美妙-01),Map(x13 -> 就, x5 -> 我, x12 -> 十分, x4 -> 你, x11 -> 美妙-01, x3 -> 驯服-01, x14 -> 这))),[Ljava.lang.String;@276cc8dc,Annotation([Ljava.lang.String;@66cd621b,[Ljava.lang.String;@d3f4505,[Ljava.lang.String;@3eb292cd),Annotation([Ljava.lang.String;@7fd987ef,[Ljava.lang.String;@7209ffb5,[Ledu.cmu.lti.nlp.amr.Dependency;@5e99b9c),Annotation([Ljava.lang.String;@2fe74516,[Ljava.lang.String;@1c3259fa,[Ljava.lang.String;@217bf99e),Annotation([Ljava.lang.String;@6807a356,[Ljava.lang.String;@7ddd84b5,[Ledu.cmu.lti.nlp.amr.Entity;@73aeef7d))
AMR:
(x11 / 美妙-01, degree, x12 / 十分)
(x11 / 美妙-01, manner, x13 / 就)
(x11 / 美妙-01, polite, x14 / 这)
(x13 / 就, condition, x3 / 驯服-01)
(x3 / 驯服-01, beneficiary, x5 / 我)
(x3 / 驯服-01, compared-to, x4 / 你)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 18,424 microseconds
Sentence: 麦子 ， 是 金黄色 的 ， 它 就 会 使 我 想起 你 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  想起 => 想起-01
Oracle Span 4:  我 => 我
Oracle Span 5:  金黄色 => 金黄色
Oracle Span 6:  麦子 => 麦子
Spans:
Span 8-9:  会 => 会-02
Span 12-13:  你 => 你
Span 11-12:  想起 => 想起-01
Span 10-11:  我 => 我
Span 3-4:  金黄色 => 金黄色
Span 0-1:  麦子 => 麦子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 12-13:  你 => 你
Oracle Span 11-12:  想起 => 想起-01
Oracle Span 10-11:  我 => 我
Oracle Span 3-4:  金黄色 => 金黄色
Oracle Span 0-1:  麦子 => 麦子

Dependencies:
1	麦子	_	NN	NN	_	3	dep	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	是	_	VC	VC	_	0	root	_	_
4	金黄色	_	JJ	JJ	_	3	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	它	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	使	_	VV	VV	_	3	conj	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	想起	_	VV	VV	_	10	dep	_	_
13	你	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 会-02, arg0, x13 / 想起-01)
(x11 / 会-02, cause, x16 / 金黄色)
(x13 / 想起-01, arg0, x14 / 我)
(x13 / 想起-01, arg1, x15 / 你)
(x16 / 金黄色, domain, x17 / 麦子)

Input(Some(Graph((会-02 :cause (金黄色 :domain 麦子) :arg0 (想起-01 :arg1 你 :arg0 我)),ArrayBuffer(Span(8,9,List(0),会,会-02,false), Span(3,4,List(1),金黄色,金黄色,false), Span(0,1,List(2),麦子,麦子,false), Span(11,12,List(3),想起,想起-01,false), Span(12,13,List(4),你,你,false), Span(10,11,List(5),我,我,false)),Map(2 -> 麦子, 5 -> 我, 1 -> 金黄色, 4 -> 你, 0 -> 会-02, 3 -> 想起-01),Map(x16 -> 金黄色, x13 -> 想起-01, x15 -> 你, x11 -> 会-02, x14 -> 我, x17 -> 麦子))),[Ljava.lang.String;@d675f9f,Annotation([Ljava.lang.String;@58af5076,[Ljava.lang.String;@49469ffa,[Ljava.lang.String;@4d9754a8),Annotation([Ljava.lang.String;@7a3b7122,[Ljava.lang.String;@58b5a2f3,[Ledu.cmu.lti.nlp.amr.Dependency;@25f15f50),Annotation([Ljava.lang.String;@52b46d52,[Ljava.lang.String;@7327a447,[Ljava.lang.String;@67022ea),Annotation([Ljava.lang.String;@2954f6ab,[Ljava.lang.String;@58fbd02e,[Ledu.cmu.lti.nlp.amr.Entity;@163042ea))
AMR:
(x11 / 会-02, ARG0, x13 / 想起-01)
(x11 / 会-02, time, x16 / 金黄色)
(x13 / 想起-01, beneficiary, x14 / 我)
(x13 / 想起-01, dayperiod, x15 / 你)
(x16 / 金黄色, domain, x17 / 麦子)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,973 microseconds
Sentence: 而且 ， 我 甚至 会 喜欢 那 风 吹 麦浪 的 声音 … ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  吹 => 吹-01
Oracle Span 3:  喜欢 => 喜欢-01
Oracle Span 4:  声音 => 声音
Oracle Span 5:  我 => 我
Oracle Span 6:  甚至 => 甚至
Oracle Span 7:  那 => 那
Oracle Span 8:  风 => 风
Oracle Span 9:  麦浪 => 麦浪
Spans:
Span 4-5:  会 => 会-02
Span 8-9:  吹 => 吹-01
Span 5-6:  喜欢 => 喜欢-01
Span 11-12:  声音 => 声音
Span 2-3:  我 => 我
Span 3-4:  甚至 => 甚至
Span 6-7:  那 => 那
Span 7-8:  风 => 风
Span 9-10:  麦浪 => 麦浪

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  会 => 会-02
Oracle Span 8-9:  吹 => 吹-01
Oracle Span 5-6:  喜欢 => 喜欢-01
Oracle Span 11-12:  声音 => 声音
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  甚至 => 甚至
Oracle Span 6-7:  那 => 那
Oracle Span 7-8:  风 => 风
Oracle Span 9-10:  麦浪 => 麦浪

Dependencies:
1	而且	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	甚至	_	AD	AD	_	5	advmod	_	_
5	会	_	VV	VV	_	0	root	_	_
6	喜欢	_	VV	VV	_	12	rcmod	_	_
7	那	_	DT	DT	_	8	det	_	_
8	风	_	NN	NN	_	6	dobj	_	_
9	吹	_	VV	VV	_	6	dep	_	_
10	麦浪	_	NN	NN	_	9	dobj	_	_
11	的	_	DEC	DEC	_	6	cpm	_	_
12	声音	_	NN	NN	_	5	dobj	_	_
13	…	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 会-02, arg0, x15 / 喜欢-01)
(x14 / 会-02, manner, x18 / 甚至)
(x15 / 喜欢-01, arg0, x16 / 我)
(x15 / 喜欢-01, arg1, x17 / 声音)
(x17 / 声音, mod, x19 / 那)
(x17 / 声音, mod, x21 / 吹-01)
(x21 / 吹-01, arg0, x22 / 风)
(x21 / 吹-01, arg1, x23 / 麦浪)

Input(Some(Graph((say :arg1 (progression :arg2 (会-02 :manner 甚至 :arg0 (喜欢-01 :arg1 (声音 :mod (吹-01 :arg1 麦浪 :arg0 风) :mod 那) :arg0 我)))),ArrayBuffer(Span(4,5,List(0),会,会-02,false), Span(3,4,List(1),甚至,甚至,false), Span(5,6,List(2),喜欢,喜欢-01,false), Span(11,12,List(3),声音,声音,false), Span(8,9,List(4),吹,吹-01,false), Span(9,10,List(5),麦浪,麦浪,false), Span(7,8,List(6),风,风,false), Span(6,7,List(7),那,那,false), Span(2,3,List(8),我,我,false)),Map(2 -> 喜欢-01, 5 -> 麦浪, 8 -> 我, 7 -> 那, 1 -> 甚至, 4 -> 吹-01, 6 -> 风, 0 -> 会-02, 3 -> 声音),Map(x16 -> 我, x22 -> 风, x19 -> 那, x21 -> 吹-01, x15 -> 喜欢-01, x18 -> 甚至, x23 -> 麦浪, x14 -> 会-02, x17 -> 声音))),[Ljava.lang.String;@11d045b4,Annotation([Ljava.lang.String;@1fbf088b,[Ljava.lang.String;@1943c1f2,[Ljava.lang.String;@d70f722),Annotation([Ljava.lang.String;@1e1eeedd,[Ljava.lang.String;@798256c5,[Ledu.cmu.lti.nlp.amr.Dependency;@7ec95456),Annotation([Ljava.lang.String;@748a654a,[Ljava.lang.String;@1d8b0500,[Ljava.lang.String;@76544c0a),Annotation([Ljava.lang.String;@428bdd72,[Ljava.lang.String;@650c405c,[Ledu.cmu.lti.nlp.amr.Entity;@20eaeaf8))
AMR:
(x14 / 会-02, manner, x18 / 甚至)
(x14 / 会-02, prep-to, x15 / 喜欢-01)
(x15 / 喜欢-01, mod, x19 / 那)
(x17 / 声音, mod, x19 / 那)
(x17 / 声音, mod, x21 / 吹-01)
(x18 / 甚至, mod, x16 / 我)
(x21 / 吹-01, ARG5, x23 / 麦浪)
(x22 / 风, mod, x21 / 吹-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 22,577 microseconds
Sentence: 狐狸 沉默 不语 ， 久久 地 看 着 小 王子 。

Oracle Span 1:  不语 => 不语
Oracle Span 2:  久久 => 久久
Oracle Span 3:  小 => 小-01
Oracle Span 4:  沉默 => 沉默-01
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  王子 => 王子
Oracle Span 7:  看 => 看-02
Spans:
Span 2-3:  不语 => 不语
Span 4-5:  久久 => 久久
Span 8-9:  小 => 小-01
Span 1-2:  沉默 => 沉默-01
Span 0-1:  狐狸 => 狐狸
Span 9-10:  王子 => 王子
Span 6-7:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  不语 => 不语
Oracle Span 4-5:  久久 => 久久
Oracle Span 8-9:  小 => 小-01
Oracle Span 1-2:  沉默 => 沉默-01
Oracle Span 0-1:  狐狸 => 狐狸
Oracle Span 9-10:  王子 => 王子
Oracle Span 6-7:  看 => 看-02

Dependencies:
1	狐狸	_	NN	NN	_	2	nsubj	_	_
2	沉默	_	VV	VV	_	0	root	_	_
3	不语	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	久久	_	AD	AD	_	7	advmod	_	_
6	地	_	NN	NN	_	7	prep	_	_
7	看	_	VV	VV	_	2	conj	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 不语, manner, x3 / 沉默-01)
(x3 / 沉默-01, arg0, x4 / 狐狸)
(x5 / 看-02, arg1, x6 / 王子)
(x5 / 看-02, manner, x8 / 久久)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph((and :op (不语 :manner (沉默-01 :arg0 狐狸)) :op (看-02 :manner 久久 :arg1 (王子 :mod 小-01))),ArrayBuffer(Span(2,3,List(0),不语,不语,false), Span(1,2,List(1),沉默,沉默-01,false), Span(0,1,List(2),狐狸,狐狸,false), Span(6,7,List(3),看,看-02,false), Span(4,5,List(4),久久,久久,false), Span(9,10,List(5),王子,王子,false), Span(8,9,List(6),小,小-01,false)),Map(2 -> 狐狸, 5 -> 王子, 1 -> 沉默-01, 4 -> 久久, 6 -> 小-01, 0 -> 不语, 3 -> 看-02),Map(x2 -> 不语, x5 -> 看-02, x8 -> 久久, x7 -> 小-01, x4 -> 狐狸, x3 -> 沉默-01, x6 -> 王子))),[Ljava.lang.String;@748ac6f3,Annotation([Ljava.lang.String;@68f6e55d,[Ljava.lang.String;@6fff46bf,[Ljava.lang.String;@1835dc92),Annotation([Ljava.lang.String;@3aaa3c39,[Ljava.lang.String;@65a9ea3c,[Ledu.cmu.lti.nlp.amr.Dependency;@70f68288),Annotation([Ljava.lang.String;@46911148,[Ljava.lang.String;@2db1b657,[Ljava.lang.String;@7e351d7),Annotation([Ljava.lang.String;@43c57161,[Ljava.lang.String;@d902300,[Ledu.cmu.lti.nlp.amr.Entity;@2db33feb))
AMR:
(x2 / 不语, manner, x3 / 沉默-01)
(x3 / 沉默-01, manner, x4 / 狐狸)
(x5 / 看-02, age, x2 / 不语)
(x5 / 看-02, beneficiary, x6 / 王子)
(x5 / 看-02, manner, x8 / 久久)
(x6 / 王子, mod, x7 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 15,108 microseconds
Sentence: “ 请 你 驯服 我 吧 ！ ” 他 说 。

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  我 => 我
Oracle Span 4:  说 => 说-01
Oracle Span 5:  请 => 请-01
Oracle Span 6:  驯服 => 驯服-01
Spans:
Span 8-9:  他 => 他
Span 2-3:  你 => 你
Span 4-5:  我 => 我
Span 9-10:  说 => 说-01
Span 1-2:  请 => 请-01
Span 3-4:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  他 => 他
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  我 => 我
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  请 => 请-01
Oracle Span 3-4:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	请	_	VV	VV	_	10	dep	_	_
3	你	_	PN	PN	_	5	nsubj	_	_
4	驯服	_	NR	NR	_	5	nsubj	_	_
5	我	_	PN	PN	_	2	ccomp	_	_
6	吧	_	SP	SP	_	5	dep	_	_
7	！	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 请-01)
(x3 / 请-01, arg1, x6 / 你)
(x3 / 请-01, arg2, x7 / 驯服-01)
(x7 / 驯服-01, arg1, x9 / 我)

Input(Some(Graph((说-01 :arg1 (请-01 :mode expressive :arg2 (驯服-01 :arg1 我 :arg0 x6) :arg1 你) :arg0 他),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(1,2,List(1),请,请-01,false), Span(3,4,List(2),驯服,驯服-01,false), Span(4,5,List(3),我,我,false), Span(2,3,List(4),你,你,false), Span(8,9,List(5),他,他,false)),Map(2 -> 驯服-01, 5 -> 他, 1 -> 请-01, 4 -> 你, 0 -> 说-01, 3 -> 我),Map(x2 -> 他, x7 -> 驯服-01, x3 -> 请-01, x6 -> 你, x9 -> 我, x0 -> 说-01))),[Ljava.lang.String;@30c3ae63,Annotation([Ljava.lang.String;@58658f63,[Ljava.lang.String;@54e12f4c,[Ljava.lang.String;@60990e5c),Annotation([Ljava.lang.String;@4d84049a,[Ljava.lang.String;@39ee94de,[Ledu.cmu.lti.nlp.amr.Dependency;@642857e0),Annotation([Ljava.lang.String;@4c6b4ed7,[Ljava.lang.String;@21263314,[Ljava.lang.String;@6ca30b8a),Annotation([Ljava.lang.String;@4a92c6a9,[Ljava.lang.String;@5c9934da,[Ledu.cmu.lti.nlp.amr.Entity;@4cb702ce))
AMR:
(x0 / 说-01, conj-as-if, x2 / 他)
(x0 / 说-01, time, x3 / 请-01)
(x3 / 请-01, extent, x7 / 驯服-01)
(x3 / 请-01, prep-for, x6 / 你)
(x7 / 驯服-01, subset, x9 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,028 microseconds
Sentence: “ 我 是 很 愿意 的 。 ” 小 王子 回答 道 ，

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  愿意 => 愿意-01
Oracle Span 5:  我 => 我
Oracle Span 6:  王子 => 王子
Spans:
Span 10-11:  回答 => 回答-01
Span 8-9:  小 => 小-01
Span 3-4:  很 => 很
Span 4-5:  愿意 => 愿意-01
Span 1-2:  我 => 我
Span 9-10:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  回答 => 回答-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 3-4:  很 => 很
Oracle Span 4-5:  愿意 => 愿意-01
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  王子 => 王子

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	vmod	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	愿意	_	VV	VV	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	。	_	NN	NN	_	3	attr	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	回答	_	VV	VV	_	12	mmod	_	_
12	道	_	CD	CD	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x0 / 回答-01, arg2, x4 / 愿意-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 愿意-01, arg0, x6 / 我)
(x4 / 愿意-01, degree, x5 / 很)

Input(Some(Graph((回答-01 :arg2 (愿意-01 :arg0 我 :degree 很) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(10,11,List(0),回答,回答-01,false), Span(4,5,List(1),愿意,愿意-01,false), Span(1,2,List(2),我,我,false), Span(3,4,List(3),很,很,false), Span(9,10,List(4),王子,王子,false), Span(8,9,List(5),小,小-01,false)),Map(2 -> 我, 5 -> 小-01, 1 -> 愿意-01, 4 -> 王子, 0 -> 回答-01, 3 -> 很),Map(x2 -> 王子, x5 -> 很, x4 -> 愿意-01, x3 -> 小-01, x6 -> 我, x0 -> 回答-01))),[Ljava.lang.String;@383caf89,Annotation([Ljava.lang.String;@64c781a9,[Ljava.lang.String;@71ed560f,[Ljava.lang.String;@5b88b8e),Annotation([Ljava.lang.String;@58253c57,[Ljava.lang.String;@b73433,[Ledu.cmu.lti.nlp.amr.Dependency;@1bf14704),Annotation([Ljava.lang.String;@5a545b0f,[Ljava.lang.String;@2be21396,[Ljava.lang.String;@124dac75),Annotation([Ljava.lang.String;@315105f,[Ljava.lang.String;@7b61bf11,[Ledu.cmu.lti.nlp.amr.Entity;@40247d48))
AMR:
(x0 / 回答-01, ARG1, x2 / 王子)
(x0 / 回答-01, degree, x4 / 愿意-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 愿意-01, degree, x5 / 很)
(x4 / 愿意-01, location, x6 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,156 microseconds
Sentence: “ 可 我 的 时间 不 多 了 。

Oracle Span 1:  多 => 多-03
Oracle Span 2:  我 => 我
Oracle Span 3:  时间 => 时间
Spans:
Span 6-7:  多 => 多-03
Span 2-3:  我 => 我
Span 4-5:  时间 => 时间

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  多 => 多-03
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  时间 => 时间

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	可	_	VV	VV	_	5	rcmod	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	时间	_	NN	NN	_	7	nsubj	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	多	_	VA	VA	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 时间, poss, x12 / 我)
(x9 / 多-03, arg0, x11 / 时间)

Input(Some(Graph((say :arg1 (contrast :arg2 (多-03 :arg0 (时间 :poss 我) :polarity -))),ArrayBuffer(Span(6,7,List(0),多,多-03,false), Span(4,5,List(1),时间,时间,false), Span(2,3,List(2),我,我,false)),Map(2 -> 我, 1 -> 时间, 0 -> 多-03),Map(x12 -> 我, x11 -> 时间, x9 -> 多-03))),[Ljava.lang.String;@3ff54f3d,Annotation([Ljava.lang.String;@14c93774,[Ljava.lang.String;@62a68bcb,[Ljava.lang.String;@18b74ea),Annotation([Ljava.lang.String;@14924f41,[Ljava.lang.String;@493da830,[Ledu.cmu.lti.nlp.amr.Dependency;@1f939a0f),Annotation([Ljava.lang.String;@45658133,[Ljava.lang.String;@430b2699,[Ljava.lang.String;@67536ae0),Annotation([Ljava.lang.String;@6413d7e7,[Ljava.lang.String;@d16be4f,[Ledu.cmu.lti.nlp.amr.Entity;@17b37e9a))
AMR:
(x11 / 时间, poss, x12 / 我)
(x9 / 多-03, degree, x11 / 时间)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 4,259 microseconds
Sentence: 我 还 要 去 寻找 朋友 ， 还 有 许多 事物 要 了解 。 ”

Oracle Span 1:  了解 => 了解-02
Oracle Span 2:  事物 => 事物
Oracle Span 3:  去 => 去-01
Oracle Span 4:  寻找 => 寻找-01
Oracle Span 5:  我 => 我
Oracle Span 6:  有 => 有-01
Oracle Span 7:  朋友 => 朋友
Oracle Span 8:  要 => 要-03
Oracle Span 9:  要 => 要
Oracle Span 10:  许多 => 许多
Oracle Span 11:  还 => 还
Oracle Span 12:  还 => 还
Spans:
Span 12-13:  了解 => 了解-02
Span 10-11:  事物 => 事物
Span 3-4:  去 => 去-01
Span 4-5:  寻找 => 寻找-01
Span 0-1:  我 => 我
Span 8-9:  有 => 有-01
Span 5-6:  朋友 => 朋友
Span 2-3:  要 => 要-03
Span 11-12:  要 => 要
Span 9-10:  许多 => 许多
Span 1-2:  还 => 还
Span 7-8:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  了解 => 了解-02
Oracle Span 10-11:  事物 => 事物
Oracle Span 3-4:  去 => 去-01
Oracle Span 4-5:  寻找 => 寻找-01
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  有 => 有-01
Oracle Span 5-6:  朋友 => 朋友
Oracle Span 2-3:  要 => 要-03
Oracle Span 11-12:  要 => 要
Oracle Span 9-10:  许多 => 许多
Oracle Span 1-2:  还 => 还
Oracle Span 7-8:  还 => 还

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	要	_	VV	VV	_	5	mmod	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	寻找	_	VV	VV	_	0	root	_	_
6	朋友	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	还	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	5	conj	_	_
10	许多	_	CD	CD	_	11	nummod	_	_
11	事物	_	NN	NN	_	9	dobj	_	_
12	要	_	VV	VV	_	5	conj	_	_
13	了解	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	5	punct	_	_
15	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x18 / 要-03, arg0, x20 / 去-01)
(x18 / 要-03, manner, x19 / 还)
(x20 / 去-01, arg0, x21 / 我)
(x20 / 去-01, arg1, x22 / 寻找-01)
(x22 / 寻找-01, arg1, x24 / 朋友)
(x30 / 有-01, arg1, x32 / 事物)
(x30 / 有-01, manner, x31 / 还)
(x32 / 事物, mod, x33 / 许多)
(x34 / 了解-02, arg1, x32 / 事物)
(x36 / 要, arg0, x34 / 了解-02)

Input(Some(Graph((say :arg1 (and :op (要-03 :arg0 (去-01 :arg1 (寻找-01 :arg1 朋友 :arg0 x21) :arg0 我) :manner 还) :op (有-01 :arg1 (事物 :arg1-of (了解-02 :arg0-of 要 :arg0 x21) :mod 许多) :manner 还))),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(3,4,List(1),去,去-01,false), Span(4,5,List(2),寻找,寻找-01,false), Span(5,6,List(3),朋友,朋友,false), Span(0,1,List(4),我,我,false), Span(1,2,List(5),还,还,false), Span(8,9,List(6),有,有-01,false), Span(10,11,List(7),事物,事物,false), Span(12,13,List(8),了解,了解-02,false), Span(11,12,List(9),要,要,false), Span(9,10,List(10),许多,许多,false), Span(7,8,List(11),还,还,false)),Map(2 -> 寻找-01, 5 -> 还, 8 -> 了解-02, 7 -> 事物, 1 -> 去-01, 4 -> 我, 11 -> 还, 6 -> 有-01, 9 -> 要, 0 -> 要-03, 10 -> 许多, 3 -> 朋友),Map(x34 -> 了解-02, x22 -> 寻找-01, x31 -> 还, x19 -> 还, x30 -> 有-01, x33 -> 许多, x21 -> 我, x36 -> 要, x24 -> 朋友, x18 -> 要-03, x32 -> 事物, x20 -> 去-01))),[Ljava.lang.String;@6bcb12e6,Annotation([Ljava.lang.String;@111d5c97,[Ljava.lang.String;@29c17c3d,[Ljava.lang.String;@250a9031),Annotation([Ljava.lang.String;@1665fa54,[Ljava.lang.String;@6d67f5eb,[Ledu.cmu.lti.nlp.amr.Dependency;@4f654cee),Annotation([Ljava.lang.String;@3e1fd62b,[Ljava.lang.String;@7112ce6,[Ljava.lang.String;@558b4942),Annotation([Ljava.lang.String;@30ec7d21,[Ljava.lang.String;@70025b99,[Ledu.cmu.lti.nlp.amr.Entity;@7efa3f63))
AMR:
(x18 / 要-03, manner, x19 / 还)
(x18 / 要-03, mode, x20 / 去-01)
(x20 / 去-01, scale, x22 / 寻找-01)
(x20 / 去-01, snt3, x21 / 我)
(x22 / 寻找-01, direction, x24 / 朋友)
(x30 / 有-01, manner, x31 / 还)
(x30 / 有-01, snt11, x33 / 许多)
(x30 / 有-01, time, x22 / 寻找-01)
(x32 / 事物, mod, x33 / 许多)
(x36 / 要, domain, x32 / 事物)
(x36 / 要, mode, x34 / 了解-02)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 38,349 microseconds
Sentence: “ 只有 被 驯服 了 的 事物 ， 才 会 被 了解 。 ” 狐狸 说 ，

Oracle Span 1:  了解 => 了解-02
Oracle Span 2:  事物 => 事物
Oracle Span 3:  会 => 会-03
Oracle Span 4:  才 => 才
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  说 => 说-01
Oracle Span 7:  驯服 => 驯服-01
Spans:
Span 11-12:  了解 => 了解-02
Span 6-7:  事物 => 事物
Span 9-10:  会 => 会-03
Span 8-9:  才 => 才
Span 14-15:  狐狸 => 狐狸
Span 15-16:  说 => 说-01
Span 3-4:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  了解 => 了解-02
Oracle Span 6-7:  事物 => 事物
Oracle Span 9-10:  会 => 会-03
Oracle Span 8-9:  才 => 才
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 15-16:  说 => 说-01
Oracle Span 3-4:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	只有	_	CS	CS	_	12	advmod	_	_
3	被	_	LB	LB	_	12	pass	_	_
4	驯服	_	VV	VV	_	7	rcmod	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	事物	_	NN	NN	_	12	nsubj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	才	_	AD	AD	_	12	advmod	_	_
10	会	_	VV	VV	_	12	mmod	_	_
11	被	_	SB	SB	_	12	pass	_	_
12	了解	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	12	punct	_	_
15	狐狸	_	NN	NN	_	16	dep	_	_
16	说	_	VV	VV	_	12	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x4 / 驯服-01, arg1, x5 / 事物)
(x9 / 会-03, arg0, x10 / 了解-02)
(x9 / 会-03, manner, x12 / 才)

Input(Some(Graph((说-01 :arg1 (condition :arg1 (驯服-01 :arg1 事物) :arg2 (会-03 :manner 才 :arg0 (了解-02 :arg1 x5))) :arg0 狐狸),ArrayBuffer(Span(15,16,List(0),说,说-01,false), Span(3,4,List(1),驯服,驯服-01,false), Span(6,7,List(2),事物,事物,false), Span(9,10,List(3),会,会-03,false), Span(8,9,List(4),才,才,false), Span(11,12,List(5),了解,了解-02,false), Span(14,15,List(6),狐狸,狐狸,false)),Map(2 -> 事物, 5 -> 了解-02, 1 -> 驯服-01, 4 -> 才, 6 -> 狐狸, 0 -> 说-01, 3 -> 会-03),Map(x2 -> 狐狸, x10 -> 了解-02, x5 -> 事物, x12 -> 才, x4 -> 驯服-01, x9 -> 会-03, x0 -> 说-01))),[Ljava.lang.String;@7134b8a7,Annotation([Ljava.lang.String;@2262d6d5,[Ljava.lang.String;@40de8f93,[Ljava.lang.String;@6ff0b1cc),Annotation([Ljava.lang.String;@3b55dd15,[Ljava.lang.String;@f3560d4,[Ledu.cmu.lti.nlp.amr.Dependency;@3ba3d4b6),Annotation([Ljava.lang.String;@51b77cdf,[Ljava.lang.String;@441fbe89,[Ljava.lang.String;@6088451e),Annotation([Ljava.lang.String;@45ab3bdd,[Ljava.lang.String;@2f10f633,[Ledu.cmu.lti.nlp.amr.Entity;@1642eeae))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, time, x10 / 了解-02)
(x10 / 了解-02, time, x9 / 会-03)
(x4 / 驯服-01, location, x5 / 事物)
(x9 / 会-03, location, x5 / 事物)
(x9 / 会-03, manner, x12 / 才)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,762 microseconds
Sentence: “ 人 不 会 再 有 时间 去 了解 任何 东西 的 。

Oracle Span 1:  东西 => 东西
Oracle Span 2:  了解 => 了解-02
Oracle Span 3:  人 => 人
Oracle Span 4:  任何 => 任何
Oracle Span 5:  会 => 会-02
Oracle Span 6:  再 => 再
Oracle Span 7:  去 => 去-01
Oracle Span 8:  时间 => 时间
Oracle Span 9:  有 => 有-01
Spans:
Span 10-11:  东西 => 东西
Span 8-9:  了解 => 了解-02
Span 1-2:  人 => 人
Span 9-10:  任何 => 任何
Span 3-4:  会 => 会-02
Span 4-5:  再 => 再
Span 7-8:  去 => 去-01
Span 6-7:  时间 => 时间
Span 5-6:  有 => 有-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  东西 => 东西
Oracle Span 8-9:  了解 => 了解-02
Oracle Span 1-2:  人 => 人
Oracle Span 9-10:  任何 => 任何
Oracle Span 3-4:  会 => 会-02
Oracle Span 4-5:  再 => 再
Oracle Span 7-8:  去 => 去-01
Oracle Span 6-7:  时间 => 时间
Oracle Span 5-6:  有 => 有-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	人	_	NN	NN	_	6	nsubj	_	_
3	不	_	AD	AD	_	6	neg	_	_
4	会	_	VV	VV	_	6	mmod	_	_
5	再	_	AD	AD	_	6	advmod	_	_
6	有	_	VE	VE	_	0	root	_	_
7	时间	_	NN	NN	_	9	nsubj	_	_
8	去	_	MSP	MSP	_	9	prtmod	_	_
9	了解	_	VV	VV	_	6	dobj	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	东西	_	NN	NN	_	9	dobj	_	_
12	的	_	DEC	DEC	_	9	cpm	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x13 / 会-02, arg0, x15 / 有-01)
(x15 / 有-01, arg0, x17 / 人)
(x15 / 有-01, arg1, x18 / 时间)
(x15 / 有-01, manner, x16 / 再)
(x15 / 有-01, purpose, x19 / 去-01)
(x19 / 去-01, arg1, x21 / 了解-02)
(x21 / 了解-02, arg1, x23 / 东西)
(x23 / 东西, mod, x24 / 任何)

Input(Some(Graph((say :arg1 (会-02 :arg0 (有-01 :purpose (去-01 :arg1 (了解-02 :arg1 (东西 :mod 任何) :arg0 x17) :arg0 x17) :arg1 时间 :arg0 人 :manner 再) :polarity -)),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(5,6,List(1),有,有-01,false), Span(7,8,List(2),去,去-01,false), Span(8,9,List(3),了解,了解-02,false), Span(10,11,List(4),东西,东西,false), Span(9,10,List(5),任何,任何,false), Span(6,7,List(6),时间,时间,false), Span(1,2,List(7),人,人,false), Span(4,5,List(8),再,再,false)),Map(2 -> 去-01, 5 -> 任何, 8 -> 再, 7 -> 人, 1 -> 有-01, 4 -> 东西, 6 -> 时间, 0 -> 会-02, 3 -> 了解-02),Map(x16 -> 再, x19 -> 去-01, x13 -> 会-02, x21 -> 了解-02, x15 -> 有-01, x24 -> 任何, x18 -> 时间, x23 -> 东西, x17 -> 人))),[Ljava.lang.String;@3440e9cd,Annotation([Ljava.lang.String;@28a9494b,[Ljava.lang.String;@a09303,[Ljava.lang.String;@1163a27),Annotation([Ljava.lang.String;@322ba549,[Ljava.lang.String;@502a4156,[Ledu.cmu.lti.nlp.amr.Dependency;@5416f8db),Annotation([Ljava.lang.String;@64e1377c,[Ljava.lang.String;@b0fd744,[Ljava.lang.String;@92d1782),Annotation([Ljava.lang.String;@6a1ef65c,[Ljava.lang.String;@72976b4,[Ledu.cmu.lti.nlp.amr.Entity;@726934e2))
AMR:
(x13 / 会-02, conj-as-if, x17 / 人)
(x13 / 会-02, location, x16 / 再)
(x15 / 有-01, manner, x16 / 再)
(x15 / 有-01, purpose, x19 / 去-01)
(x19 / 去-01, duration, x18 / 时间)
(x21 / 了解-02, direction, x19 / 去-01)
(x23 / 东西, location, x21 / 了解-02)
(x23 / 东西, mod, x24 / 任何)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.1
WARNING: makeIds can't find span Id: 0.0.1.3.1.1
WARNING: makeIds can't find span Id: 0.0.1.3.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 21,269 microseconds
Sentence: 他们 总是 到 商人 那里 去 购买 现成 的 东西 。

Oracle Span 1:  东西 => 东西
Oracle Span 2:  他们 => 他们
Oracle Span 3:  到 => 到-01
Oracle Span 4:  商人 => 商人
Oracle Span 5:  总是 => 总是
Oracle Span 6:  现成 => 现成
Oracle Span 7:  购买 => 购买-01
Oracle Span 8:  那里 => 那里
Spans:
Span 9-10:  东西 => 东西
Span 0-1:  他们 => 他们
Span 2-3:  到 => 到-01
Span 3-4:  商人 => 商人
Span 1-2:  总是 => 总是
Span 7-8:  现成 => 现成
Span 6-7:  购买 => 购买-01
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  东西 => 东西
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  到 => 到-01
Oracle Span 3-4:  商人 => 商人
Oracle Span 1-2:  总是 => 总是
Oracle Span 7-8:  现成 => 现成
Oracle Span 6-7:  购买 => 购买-01
Oracle Span 4-5:  那里 => 那里

Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	总是	_	AD	AD	_	3	advmod	_	_
3	到	_	VV	VV	_	0	root	_	_
4	商人	_	NN	NN	_	3	dobj	_	_
5	那里	_	PN	PN	_	7	nsubj	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	购买	_	VV	VV	_	3	conj	_	_
8	现成	_	JJ	JJ	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	东西	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 到-01, arg0, x2 / 他们)
(x0 / 到-01, arg1, x3 / 那里)
(x0 / 到-01, manner, x5 / 总是)
(x0 / 到-01, purpose, x6 / 购买-01)
(x3 / 那里, mod, x4 / 商人)
(x6 / 购买-01, arg1, x8 / 东西)
(x8 / 东西, mod, x9 / 现成)

Input(Some(Graph((到-01 :purpose (购买-01 :arg1 (东西 :mod 现成) :arg0 x2) :manner 总是 :arg1 (那里 :mod 商人) :arg0 他们),ArrayBuffer(Span(2,3,List(0),到,到-01,false), Span(6,7,List(1),购买,购买-01,false), Span(9,10,List(2),东西,东西,false), Span(7,8,List(3),现成,现成,false), Span(1,2,List(4),总是,总是,false), Span(4,5,List(5),那里,那里,false), Span(3,4,List(6),商人,商人,false), Span(0,1,List(7),他们,他们,false)),Map(2 -> 东西, 5 -> 那里, 7 -> 他们, 1 -> 购买-01, 4 -> 总是, 6 -> 商人, 0 -> 到-01, 3 -> 现成),Map(x2 -> 他们, x5 -> 总是, x8 -> 东西, x4 -> 商人, x3 -> 那里, x6 -> 购买-01, x9 -> 现成, x0 -> 到-01))),[Ljava.lang.String;@1319bc2a,Annotation([Ljava.lang.String;@e280403,[Ljava.lang.String;@42f85fa4,[Ljava.lang.String;@798dad3d),Annotation([Ljava.lang.String;@27abb6ca,[Ljava.lang.String;@696db620,[Ledu.cmu.lti.nlp.amr.Dependency;@6968c1d6),Annotation([Ljava.lang.String;@7d986d83,[Ljava.lang.String;@77f991c,[Ljava.lang.String;@3a7e365),Annotation([Ljava.lang.String;@2ceee4b6,[Ljava.lang.String;@12a470dd,[Ledu.cmu.lti.nlp.amr.Entity;@6968bcec))
AMR:
(x0 / 到-01, ARG0, x3 / 那里)
(x0 / 到-01, ARG6, x2 / 他们)
(x0 / 到-01, manner, x5 / 总是)
(x0 / 到-01, purpose, x6 / 购买-01)
(x3 / 那里, mod, x4 / 商人)
(x6 / 购买-01, ARG0, x8 / 东西)
(x8 / 东西, mod, x9 / 现成)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,249 microseconds
Sentence: 因为 世界 上 还 没有 购买 朋友 的 商店 ， 所以 人 也 就 没有 朋友 。

Oracle Span 1:  世界 => 世界
Oracle Span 2:  也 => 也
Oracle Span 3:  人 => 人
Oracle Span 4:  商店 => 商店
Oracle Span 5:  就 => 就
Oracle Span 6:  朋友 => 朋友
Oracle Span 7:  朋友 => 朋友
Oracle Span 8:  购买 => 购买-01
Spans:
Span 1-2:  世界 => 世界
Span 12-13:  也 => 也
Span 11-12:  人 => 人
Span 8-9:  商店 => 商店
Span 13-14:  就 => 就
Span 6-7:  朋友 => 朋友
Span 15-16:  朋友 => 朋友
Span 5-6:  购买 => 购买-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  世界 => 世界
Oracle Span 12-13:  也 => 也
Oracle Span 11-12:  人 => 人
Oracle Span 8-9:  商店 => 商店
Oracle Span 13-14:  就 => 就
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 15-16:  朋友 => 朋友
Oracle Span 5-6:  购买 => 购买-01

Dependencies:
1	因为	_	P	P	_	15	prep	_	_
2	世界	_	NN	NN	_	3	lobj	_	_
3	上	_	LC	LC	_	5	loc	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	1	pccomp	_	_
6	购买	_	VV	VV	_	9	rcmod	_	_
7	朋友	_	NN	NN	_	6	dobj	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	商店	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	15	punct	_	_
11	所以	_	AD	AD	_	15	advmod	_	_
12	人	_	NN	NN	_	15	nsubj	_	_
13	也	_	AD	AD	_	15	advmod	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	没有	_	VE	VE	_	0	root	_	_
16	朋友	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x25 / 购买-01, arg1, x26 / 朋友)
(x25 / 购买-01, location, x17 / 商店)

Input(Some(Graph((causation :arg1 (有-03 :arg0 世界 :polarity - :arg1 (商店 :location-of (购买-01 :arg1 朋友))) :arg2 (有-01 :polarity - :manner 就 :manner 也 :arg1 朋友 :arg0 人)),ArrayBuffer(Span(1,2,List(0),世界,世界,false), Span(8,9,List(1),商店,商店,false), Span(5,6,List(2),购买,购买-01,false), Span(6,7,List(3),朋友,朋友,false), Span(13,14,List(4),就,就,false), Span(12,13,List(5),也,也,false), Span(15,16,List(6),朋友,朋友,false), Span(11,12,List(7),人,人,false)),Map(2 -> 购买-01, 5 -> 也, 7 -> 人, 1 -> 商店, 4 -> 就, 6 -> 朋友, 0 -> 世界, 3 -> 朋友),Map(x22 -> 就, x25 -> 购买-01, x27 -> 人, x15 -> 世界, x24 -> 朋友, x23 -> 也, x26 -> 朋友, x17 -> 商店))),[Ljava.lang.String;@5568c66f,Annotation([Ljava.lang.String;@e784320,[Ljava.lang.String;@3f6bf8aa,[Ljava.lang.String;@13c8ac77),Annotation([Ljava.lang.String;@4bdf,[Ljava.lang.String;@4cad79bc,[Ledu.cmu.lti.nlp.amr.Dependency;@2c63762b),Annotation([Ljava.lang.String;@7a9eccc4,[Ljava.lang.String;@78422efb,[Ljava.lang.String;@5f05c8d6),Annotation([Ljava.lang.String;@68e02f33,[Ljava.lang.String;@64942607,[Ledu.cmu.lti.nlp.amr.Entity;@d48e998))
AMR:
(x17 / 商店, domain, x15 / 世界)
(x17 / 商店, mod, x23 / 也)
(x22 / 就, ARG4, x27 / 人)
(x23 / 也, ARG4, x27 / 人)
(x25 / 购买-01, location, x17 / 商店)
(x25 / 购买-01, quant, x26 / 朋友)
(x27 / 人, age, x24 / 朋友)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.4
Decoded in 22,889 microseconds
Sentence: 如果 你 想 要 一 个 朋友 ， 那 就 驯服 我 吧 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  朋友 => 朋友
Oracle Span 4:  驯服 => 驯服-01
Spans:
Span 1-2:  你 => 你
Span 11-12:  我 => 我
Span 6-7:  朋友 => 朋友
Span 10-11:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 11-12:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 10-11:  驯服 => 驯服-01

Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	想	_	VV	VV	_	11	pccomp	_	_
4	要	_	VV	VV	_	3	ccomp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	朋友	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	11	punct	_	_
9	那	_	PN	PN	_	11	nsubj	_	_
10	就	_	AD	AD	_	11	advmod	_	_
11	驯服	_	VV	VV	_	0	root	_	_
12	我	_	PN	PN	_	11	dobj	_	_
13	吧	_	SP	SP	_	11	dep	_	_
14	！	_	PU	PU	_	11	punct	_	_
15	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x18 / 驯服-01, arg1, x20 / 我)

Input(Some(Graph((say :arg1 (condition :arg1 (想要-02 :arg0 你 :arg1 (朋友 :quant 1) :mode expressive) :arg2 (驯服-01 :arg1 我 :arg0 x15))),ArrayBuffer(Span(1,2,List(0),你,你,false), Span(6,7,List(1),朋友,朋友,false), Span(10,11,List(2),驯服,驯服-01,false), Span(11,12,List(3),我,我,false)),Map(2 -> 驯服-01, 1 -> 朋友, 0 -> 你, 3 -> 我),Map(x16 -> 朋友, x15 -> 你, x18 -> 驯服-01, x20 -> 我))),[Ljava.lang.String;@7cfac39f,Annotation([Ljava.lang.String;@158ae284,[Ljava.lang.String;@50eb4a2c,[Ljava.lang.String;@1a256d80),Annotation([Ljava.lang.String;@3069a360,[Ljava.lang.String;@7235f92b,[Ledu.cmu.lti.nlp.amr.Dependency;@7885776b),Annotation([Ljava.lang.String;@497d4c96,[Ljava.lang.String;@3472947a,[Ljava.lang.String;@69d3cf7e),Annotation([Ljava.lang.String;@3a3ed300,[Ljava.lang.String;@1984212d,[Ledu.cmu.lti.nlp.amr.Entity;@39f5b723))
AMR:
(x16 / 朋友, conj-as-if, x18 / 驯服-01)
(x16 / 朋友, mod, x15 / 你)
(x18 / 驯服-01, decade, x20 / 我)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 7,370 microseconds
Sentence: “ 那么 应当 做 些 什么 呢 ？ ” 小 王子 说 。

Oracle Span 1:  做 => 做-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  应当 => 应当-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 3-4:  做 => 做-01
Span 9-10:  小 => 小-01
Span 2-3:  应当 => 应当-01
Span 10-11:  王子 => 王子
Span 11-12:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  做 => 做-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 2-3:  应当 => 应当-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	应当	_	VV	VV	_	12	dep	_	_
4	做	_	VV	VV	_	3	dobj	_	_
5	些	_	M	M	_	6	dep	_	_
6	什么	_	PN	PN	_	4	dobj	_	_
7	呢	_	SP	SP	_	4	dep	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 应当-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 应当-01, arg0, x5 / 做-01)

Input(Some(Graph((说-01 :mode interrogative :arg1 (应当-01 :arg0 (做-01 :arg1 amr-unknown)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(2,3,List(1),应当,应当-01,false), Span(3,4,List(2),做,做-01,false), Span(10,11,List(3),王子,王子,false), Span(9,10,List(4),小,小-01,false)),Map(2 -> 做-01, 1 -> 应当-01, 4 -> 小-01, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 做-01, x4 -> 应当-01, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@4eaa375c,Annotation([Ljava.lang.String;@2404b5a,[Ljava.lang.String;@3af58f76,[Ljava.lang.String;@2ead6ba4),Annotation([Ljava.lang.String;@31a2a9fa,[Ljava.lang.String;@31b82e0f,[Ledu.cmu.lti.nlp.amr.Dependency;@27a09971),Annotation([Ljava.lang.String;@6215366a,[Ljava.lang.String;@46dcbeab,[Ljava.lang.String;@36e43829),Annotation([Ljava.lang.String;@152c4495,[Ljava.lang.String;@5ec1963c,[Ledu.cmu.lti.nlp.amr.Entity;@7dcb42a9))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x5 / 做-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 做-01, example, x4 / 应当-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,746 microseconds
Sentence: “ 应当 非常 耐心 。 ” 狐狸 回答 道 ，

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  应当 => 应当-01
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  耐心 => 耐心-01
Oracle Span 5:  非常 => 非常-01
Spans:
Span 7-8:  回答 => 回答-01
Span 1-2:  应当 => 应当-01
Span 6-7:  狐狸 => 狐狸
Span 3-4:  耐心 => 耐心-01
Span 2-3:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  回答 => 回答-01
Oracle Span 1-2:  应当 => 应当-01
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 3-4:  耐心 => 耐心-01
Oracle Span 2-3:  非常 => 非常-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	应当	_	VV	VV	_	4	mmod	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	耐心	_	VV	VV	_	5	rcmod	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	9	nsubj	_	_
8	回答	_	VV	VV	_	9	mmod	_	_
9	道	_	CD	CD	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 狐狸)
(x0 / 回答-01, arg2, x3 / 应当-01)
(x3 / 应当-01, arg0, x4 / 耐心-01)
(x4 / 耐心-01, degree, x5 / 非常-01)

Input(Some(Graph((回答-01 :arg2 (应当-01 :arg0 (耐心-01 :degree 非常-01)) :arg0 狐狸),ArrayBuffer(Span(7,8,List(0),回答,回答-01,false), Span(1,2,List(1),应当,应当-01,false), Span(3,4,List(2),耐心,耐心-01,false), Span(2,3,List(3),非常,非常-01,false), Span(6,7,List(4),狐狸,狐狸,false)),Map(2 -> 耐心-01, 1 -> 应当-01, 4 -> 狐狸, 0 -> 回答-01, 3 -> 非常-01),Map(x2 -> 狐狸, x5 -> 非常-01, x4 -> 耐心-01, x3 -> 应当-01, x0 -> 回答-01))),[Ljava.lang.String;@6af90849,Annotation([Ljava.lang.String;@1d06f16f,[Ljava.lang.String;@4fa4f485,[Ljava.lang.String;@68dd39d2),Annotation([Ljava.lang.String;@4a44cfc0,[Ljava.lang.String;@60e3c26e,[Ledu.cmu.lti.nlp.amr.Dependency;@80b122b),Annotation([Ljava.lang.String;@999b951,[Ljava.lang.String;@65cf4d6d,[Ljava.lang.String;@1b410308),Annotation([Ljava.lang.String;@4b0bd001,[Ljava.lang.String;@f9cab00,[Ledu.cmu.lti.nlp.amr.Entity;@10272bbb))
AMR:
(x0 / 回答-01, example, x2 / 狐狸)
(x0 / 回答-01, topic, x4 / 耐心-01)
(x4 / 耐心-01, degree, x3 / 应当-01)
(x4 / 耐心-01, degree, x5 / 非常-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,826 microseconds
Sentence: “ 开始 你 就 这样 坐 在 草丛 中 ， 坐 得 离 我 稍微 远 些 。

Oracle Span 1:  你 => 你
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  就 => 就
Oracle Span 4:  开始 => 开始
Oracle Span 5:  我 => 我
Oracle Span 6:  离 => 离-02
Oracle Span 7:  稍微 => 稍微
Oracle Span 8:  草丛 => 草丛
Oracle Span 9:  这样 => 这样
Oracle Span 10:  远 => 远-01
Spans:
Span 2-3:  你 => 你
Span 5-6:  坐 => 坐-01
Span 3-4:  就 => 就
Span 1-2:  开始 => 开始
Span 13-14:  我 => 我
Span 12-13:  离 => 离-02
Span 14-15:  稍微 => 稍微
Span 7-8:  草丛 => 草丛
Span 4-5:  这样 => 这样
Span 15-16:  远 => 远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  坐 => 坐-01
Oracle Span 3-4:  就 => 就
Oracle Span 1-2:  开始 => 开始
Oracle Span 13-14:  我 => 我
Oracle Span 12-13:  离 => 离-02
Oracle Span 14-15:  稍微 => 稍微
Oracle Span 7-8:  草丛 => 草丛
Oracle Span 4-5:  这样 => 这样
Oracle Span 15-16:  远 => 远-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	开始	_	VV	VV	_	6	dep	_	_
3	你	_	PN	PN	_	6	nsubj	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	这样	_	AD	AD	_	6	advmod	_	_
6	坐	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	草丛	_	NN	NN	_	9	lobj	_	_
9	中	_	LC	LC	_	7	plmod	_	_
10	,	_	PU	PU	_	6	punct	_	_
11	坐	_	VV	VV	_	16	dep	_	_
12	得	_	DER	DER	_	16	dep	_	_
13	离	_	P	P	_	16	prep	_	_
14	我	_	PN	PN	_	13	pobj	_	_
15	稍微	_	AD	AD	_	16	advmod	_	_
16	远	_	VA	VA	_	6	conj	_	_
17	些	_	M	M	_	16	dep	_	_
18	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x29 / 坐-01, arg0, x32 / 你)
(x29 / 坐-01, arg1, x33 / 草丛)
(x29 / 坐-01, manner, x30 / 这样)
(x29 / 坐-01, manner, x31 / 就)
(x29 / 坐-01, manner, x35 / 离-02)
(x29 / 坐-01, time, x34 / 开始)
(x35 / 离-02, arg1, x37 / 我)
(x35 / 离-02, arg2, x38 / 远-01)
(x38 / 远-01, degree, x39 / 稍微)

Input(Some(Graph((say :arg1 (坐-01 :manner (离-02 :arg2 (远-01 :degree 稍微) :arg1 我 :arg0 x32) :time 开始 :arg1 草丛 :arg0 你 :manner 就 :manner 这样)),ArrayBuffer(Span(5,6,List(0),坐,坐-01,false), Span(12,13,List(1),离,离-02,false), Span(15,16,List(2),远,远-01,false), Span(14,15,List(3),稍微,稍微,false), Span(13,14,List(4),我,我,false), Span(1,2,List(5),开始,开始,false), Span(7,8,List(6),草丛,草丛,false), Span(2,3,List(7),你,你,false), Span(3,4,List(8),就,就,false), Span(4,5,List(9),这样,这样,false)),Map(2 -> 远-01, 5 -> 开始, 8 -> 就, 7 -> 你, 1 -> 离-02, 4 -> 我, 6 -> 草丛, 9 -> 这样, 0 -> 坐-01, 3 -> 稍微),Map(x34 -> 开始, x37 -> 我, x31 -> 就, x30 -> 这样, x39 -> 稍微, x33 -> 草丛, x38 -> 远-01, x32 -> 你, x35 -> 离-02, x29 -> 坐-01))),[Ljava.lang.String;@36d33f4,Annotation([Ljava.lang.String;@16736040,[Ljava.lang.String;@7c5d1d25,[Ljava.lang.String;@550e9be6),Annotation([Ljava.lang.String;@3f96f020,[Ljava.lang.String;@32eae6f2,[Ledu.cmu.lti.nlp.amr.Dependency;@26ca61bf),Annotation([Ljava.lang.String;@73a0f2b,[Ljava.lang.String;@fa5f81c,[Ljava.lang.String;@6a1d526c),Annotation([Ljava.lang.String;@1f2f0109,[Ljava.lang.String;@483b0690,[Ledu.cmu.lti.nlp.amr.Entity;@687e6293))
AMR:
(x29 / 坐-01, manner, x30 / 这样)
(x29 / 坐-01, manner, x31 / 就)
(x29 / 坐-01, manner, x35 / 离-02)
(x29 / 坐-01, prep-through, x33 / 草丛)
(x29 / 坐-01, time, x34 / 开始)
(x32 / 你, location, x34 / 开始)
(x35 / 离-02, subset, x37 / 我)
(x38 / 远-01, degree, x35 / 离-02)
(x38 / 远-01, degree, x39 / 稍微)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.5
WARNING: makeIds can't find span Id: 0.0.5.2
WARNING: makeIds can't find span Id: 0.0.5.2.0
WARNING: makeIds can't find span Id: 0.0.5.1
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 26,786 microseconds
Sentence: 我 用 眼角 瞅着 你 ， 你 什么 也 不 要 说 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  你 => 你
Oracle Span 4:  我 => 我
Oracle Span 5:  眼角 => 眼角
Oracle Span 6:  要 => 要-03
Oracle Span 7:  说 => 说-01
Spans:
Span 8-9:  也 => 也
Span 7-8:  什么 => 什么
Span 4-5:  你 => 你
Span 0-1:  我 => 我
Span 2-3:  眼角 => 眼角
Span 10-11:  要 => 要-03
Span 11-12:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 7-8:  什么 => 什么
Oracle Span 4-5:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  眼角 => 眼角
Oracle Span 10-11:  要 => 要-03
Oracle Span 11-12:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	用	_	P	P	_	4	prep	_	_
3	眼角	_	NN	NN	_	2	pobj	_	_
4	瞅着	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	12	nsubj	_	_
8	什么	_	PN	PN	_	12	nsubj	_	_
9	也	_	AD	AD	_	12	advmod	_	_
10	不	_	AD	AD	_	12	neg	_	_
11	要	_	VV	VV	_	12	dep	_	_
12	说	_	VV	VV	_	4	conj	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 说-01, arg1, x14 / 什么)
(x8 / 要-03, arg0, x10 / 说-01)

Input(Some(Graph((and :op (要-03 :arg0 (说-01 :arg1 什么 :arg0 x7) :polarity (- :manner 也)) :op (瞅-01 :arg0 我 :arg1 你 :instrument 眼角)),ArrayBuffer(Span(10,11,List(0),要,要-03,false), Span(11,12,List(1),说,说-01,false), Span(7,8,List(2),什么,什么,false), Span(8,9,List(3),也,也,false), Span(0,1,List(4),我,我,false), Span(4,5,List(5),你,你,false), Span(2,3,List(6),眼角,眼角,false)),Map(2 -> 什么, 5 -> 你, 1 -> 说-01, 4 -> 我, 6 -> 眼角, 0 -> 要-03, 3 -> 也),Map(x16 -> 我, x10 -> 说-01, x13 -> 也, x8 -> 要-03, x18 -> 眼角, x14 -> 什么, x17 -> 你))),[Ljava.lang.String;@6870c3c2,Annotation([Ljava.lang.String;@fb0a08c,[Ljava.lang.String;@1faf386c,[Ljava.lang.String;@4debbf0),Annotation([Ljava.lang.String;@6a5e167a,[Ljava.lang.String;@60e06f7d,[Ledu.cmu.lti.nlp.amr.Dependency;@66a5755),Annotation([Ljava.lang.String;@771a7d53,[Ljava.lang.String;@6d6d480c,[Ljava.lang.String;@e95595b),Annotation([Ljava.lang.String;@5a917723,[Ljava.lang.String;@7e4579c7,[Ledu.cmu.lti.nlp.amr.Entity;@796f632b))
AMR:
(x10 / 说-01, prep-from, x14 / 什么)
(x13 / 也, mod, x17 / 你)
(x18 / 眼角, location, x16 / 我)
(x18 / 眼角, location, x17 / 你)
(x8 / 要-03, compared-to, x10 / 说-01)
(x8 / 要-03, time, x13 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 15,111 microseconds
Sentence: 话语 是 误会 的 根源 。

Oracle Span 1:  根源 => 根源
Oracle Span 2:  话语 => 话语
Oracle Span 3:  误会 => 误会-01
Spans:
Span 4-5:  根源 => 根源
Span 0-1:  话语 => 话语
Span 2-3:  误会 => 误会-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  根源 => 根源
Oracle Span 0-1:  话语 => 话语
Oracle Span 2-3:  误会 => 误会-01

Dependencies:
1	话语	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	误会	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	根源	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 根源, domain, x3 / 话语)
(x0 / 根源, mod, x2 / 误会-01)

Input(Some(Graph((根源 :domain 话语 :mod 误会-01),ArrayBuffer(Span(4,5,List(0),根源,根源,false), Span(0,1,List(1),话语,话语,false), Span(2,3,List(2),误会,误会-01,false)),Map(2 -> 误会-01, 1 -> 话语, 0 -> 根源),Map(x2 -> 误会-01, x3 -> 话语, x0 -> 根源))),[Ljava.lang.String;@5d94a2dc,Annotation([Ljava.lang.String;@cedee22,[Ljava.lang.String;@59b32539,[Ljava.lang.String;@5b47731f),Annotation([Ljava.lang.String;@233db8e9,[Ljava.lang.String;@40c2ce52,[Ledu.cmu.lti.nlp.amr.Dependency;@18a19e),Annotation([Ljava.lang.String;@60a7e509,[Ljava.lang.String;@2e13f304,[Ljava.lang.String;@787508ca),Annotation([Ljava.lang.String;@3d24420b,[Ljava.lang.String;@6274670b,[Ledu.cmu.lti.nlp.amr.Entity;@53ce2392))
AMR:
(x0 / 根源, domain, x3 / 话语)
(x0 / 根源, mod, x2 / 误会-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,512 microseconds
Sentence: 但是 ， 每 天 ， 你 坐 得 靠 我 更 近 些 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  天 => 天
Oracle Span 4:  我 => 我
Oracle Span 5:  更 => 更
Oracle Span 6:  每 => 每
Oracle Span 7:  近 => 近-01
Oracle Span 8:  靠 => 靠-03
Spans:
Span 5-6:  你 => 你
Span 6-7:  坐 => 坐-01
Span 3-4:  天 => 天
Span 9-10:  我 => 我
Span 10-11:  更 => 更
Span 2-3:  每 => 每
Span 11-12:  近 => 近-01
Span 8-9:  靠 => 靠-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 6-7:  坐 => 坐-01
Oracle Span 3-4:  天 => 天
Oracle Span 9-10:  我 => 我
Oracle Span 10-11:  更 => 更
Oracle Span 2-3:  每 => 每
Oracle Span 11-12:  近 => 近-01
Oracle Span 8-9:  靠 => 靠-03

Dependencies:
1	但是	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	每	_	DT	DT	_	14	dep	_	_
4	天	_	M	M	_	3	clf	_	_
5	,	_	PU	PU	_	14	punct	_	_
6	你	_	PN	PN	_	14	nsubj	_	_
7	坐	_	VV	VV	_	14	dep	_	_
8	得	_	DER	DER	_	14	dep	_	_
9	靠	_	P	P	_	14	prep	_	_
10	我	_	PN	PN	_	9	pobj	_	_
11	更	_	AD	AD	_	14	advmod	_	_
12	近	_	AD	AD	_	13	advmod	_	_
13	些	_	CD	CD	_	14	dep	_	_
14	…	_	VV	VV	_	0	root	_	_
15	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x15 / 坐-01, arg0, x16 / 你)
(x15 / 坐-01, frequency, x22 / 天)
(x15 / 坐-01, manner, x17 / 靠-03)
(x17 / 靠-03, arg1, x19 / 我)
(x17 / 靠-03, manner, x20 / 近-01)
(x20 / 近-01, degree, x21 / 更)
(x22 / 天, mod, x23 / 每)

Input(Some(Graph((say :arg1 (contrast :arg2 (坐-01 :frequency (天 :mod 每) :manner (靠-03 :manner (近-01 :degree 更) :arg1 我 :arg0 x16) :arg0 你))),ArrayBuffer(Span(6,7,List(0),坐,坐-01,false), Span(3,4,List(1),天,天,false), Span(2,3,List(2),每,每,false), Span(8,9,List(3),靠,靠-03,false), Span(11,12,List(4),近,近-01,false), Span(10,11,List(5),更,更,false), Span(9,10,List(6),我,我,false), Span(5,6,List(7),你,你,false)),Map(2 -> 每, 5 -> 更, 7 -> 你, 1 -> 天, 4 -> 近-01, 6 -> 我, 0 -> 坐-01, 3 -> 靠-03),Map(x16 -> 你, x22 -> 天, x19 -> 我, x21 -> 更, x15 -> 坐-01, x23 -> 每, x20 -> 近-01, x17 -> 靠-03))),[Ljava.lang.String;@32d5279,Annotation([Ljava.lang.String;@1c067c0d,[Ljava.lang.String;@5d0b0cb9,[Ljava.lang.String;@7f7b6639),Annotation([Ljava.lang.String;@16ac5d35,[Ljava.lang.String;@3965bdf9,[Ledu.cmu.lti.nlp.amr.Dependency;@3c0e00a8),Annotation([Ljava.lang.String;@1860f3be,[Ljava.lang.String;@6cd15072,[Ljava.lang.String;@78cfa264),Annotation([Ljava.lang.String;@3408f695,[Ljava.lang.String;@2b6a0ea9,[Ledu.cmu.lti.nlp.amr.Entity;@4dde8976))
AMR:
(x15 / 坐-01, frequency, x22 / 天)
(x15 / 坐-01, manner, x16 / 你)
(x15 / 坐-01, manner, x17 / 靠-03)
(x17 / 靠-03, manner, x20 / 近-01)
(x17 / 靠-03, prep-at, x19 / 我)
(x20 / 近-01, degree, x21 / 更)
(x22 / 天, mod, x23 / 每)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 17,722 microseconds
Sentence: 第二 天 ， 小 王子 又 来 了 。

Oracle Span 1:  又 => 又
Oracle Span 2:  天 => 天
Oracle Span 3:  小 => 小-01
Oracle Span 4:  来 => 来-01
Oracle Span 5:  王子 => 王子
Spans:
Span 5-6:  又 => 又
Span 1-2:  天 => 天
Span 3-4:  小 => 小-01
Span 6-7:  来 => 来-01
Span 4-5:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  又 => 又
Oracle Span 1-2:  天 => 天
Oracle Span 3-4:  小 => 小-01
Oracle Span 6-7:  来 => 来-01
Oracle Span 4-5:  王子 => 王子

Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	7	nsubj	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	来	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来-01, arg0, x3 / 王子)
(x0 / 来-01, manner, x2 / 又)
(x0 / 来-01, time, x5 / 天)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((来-01 :time (天 :ord (ordinal-entity :value 2)) :arg0 (王子 :mod 小-01) :manner 又),ArrayBuffer(Span(6,7,List(0),来,来-01,false), Span(1,2,List(1),天,天,false), Span(4,5,List(2),王子,王子,false), Span(3,4,List(3),小,小-01,false), Span(5,6,List(4),又,又,false)),Map(2 -> 王子, 1 -> 天, 4 -> 又, 0 -> 来-01, 3 -> 小-01),Map(x2 -> 又, x5 -> 天, x4 -> 小-01, x3 -> 王子, x0 -> 来-01))),[Ljava.lang.String;@4887de2b,Annotation([Ljava.lang.String;@3b4825f0,[Ljava.lang.String;@40ac6b76,[Ljava.lang.String;@7980cf2c),Annotation([Ljava.lang.String;@f0020b1,[Ljava.lang.String;@759de304,[Ledu.cmu.lti.nlp.amr.Dependency;@5649d11a),Annotation([Ljava.lang.String;@294f9d50,[Ljava.lang.String;@27443560,[Ljava.lang.String;@3ddb774f),Annotation([Ljava.lang.String;@2582b0ef,[Ljava.lang.String;@70721c12,[Ledu.cmu.lti.nlp.amr.Entity;@769bd849))
AMR:
(x0 / 来-01, manner, x2 / 又)
(x0 / 来-01, time, x5 / 天)
(x0 / 来-01, value, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,854 microseconds
Sentence: “ 最好 还是 在 原来 的 那个 时间 来 。 ” 狐狸 说道 ，

Oracle Span 1:  原来 => 原来-01
Oracle Span 2:  时间 => 时间
Oracle Span 3:  最好 => 最好
Oracle Span 4:  来 => 来-01
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  说道 => 说道-01
Oracle Span 7:  还是 => 还是
Spans:
Span 4-5:  原来 => 原来-01
Span 7-8:  时间 => 时间
Span 1-2:  最好 => 最好
Span 8-9:  来 => 来-01
Span 11-12:  狐狸 => 狐狸
Span 12-13:  说道 => 说道-01
Span 2-3:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  原来 => 原来-01
Oracle Span 7-8:  时间 => 时间
Oracle Span 1-2:  最好 => 最好
Oracle Span 8-9:  来 => 来-01
Oracle Span 11-12:  狐狸 => 狐狸
Oracle Span 12-13:  说道 => 说道-01
Oracle Span 2-3:  还是 => 还是

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	最好	_	JJ	JJ	_	0	root	_	_
3	还是	_	CC	CC	_	2	cc	_	_
4	在	_	P	P	_	9	prep	_	_
5	原来	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	那个	_	NN	NN	_	4	pobj	_	_
8	时间	_	NN	NN	_	9	prep	_	_
9	来	_	VV	VV	_	2	dep	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	2	punct	_	_
12	狐狸	_	NN	NN	_	13	dep	_	_
13	说道	_	VV	VV	_	2	dep	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 狐狸)
(x0 / 说道-01, arg1, x3 / 来-01)
(x3 / 来-01, manner, x7 / 最好)
(x3 / 来-01, time, x4 / 时间)
(x4 / 时间, mod, x6 / 原来-01)
(x4 / 时间, mod, x8 / 还是)

Input(Some(Graph((说道-01 :arg1 (来-01 :manner 最好 :time (时间 :mod 还是 :mod 原来-01 :mod 那)) :arg0 狐狸),ArrayBuffer(Span(12,13,List(0),说道,说道-01,false), Span(8,9,List(1),来,来-01,false), Span(1,2,List(2),最好,最好,false), Span(7,8,List(3),时间,时间,false), Span(2,3,List(4),还是,还是,false), Span(4,5,List(5),原来,原来-01,false), Span(11,12,List(6),狐狸,狐狸,false)),Map(2 -> 最好, 5 -> 原来-01, 1 -> 来-01, 4 -> 还是, 6 -> 狐狸, 0 -> 说道-01, 3 -> 时间),Map(x2 -> 狐狸, x8 -> 还是, x7 -> 最好, x4 -> 时间, x3 -> 来-01, x6 -> 原来-01, x0 -> 说道-01))),[Ljava.lang.String;@101ca8da,Annotation([Ljava.lang.String;@20a967fe,[Ljava.lang.String;@405b6d75,[Ljava.lang.String;@682abca7),Annotation([Ljava.lang.String;@1d858300,[Ljava.lang.String;@76f881d9,[Ledu.cmu.lti.nlp.amr.Dependency;@6dd36ab6),Annotation([Ljava.lang.String;@50a13c2f,[Ljava.lang.String;@610d28b8,[Ljava.lang.String;@53c99b09),Annotation([Ljava.lang.String;@2539cd1c,[Ljava.lang.String;@7c20cdd0,[Ledu.cmu.lti.nlp.amr.Entity;@74606204))
AMR:
(x0 / 说道-01, example, x2 / 狐狸)
(x0 / 说道-01, example, x3 / 来-01)
(x3 / 来-01, manner, x7 / 最好)
(x3 / 来-01, time, x4 / 时间)
(x4 / 时间, mod, x6 / 原来-01)
(x7 / 最好, location, x8 / 还是)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,461 microseconds
Sentence: “ 比如 说 ， 你 下午 四点钟 来 ， 那么 从 三点钟 起 ， 我 就 开始 感到 幸福 。

Oracle Span 1:  下午 => 下午
Oracle Span 2:  你 => 你
Oracle Span 3:  幸福 => 幸福-01
Oracle Span 4:  开始 => 开始-01
Oracle Span 5:  感到 => 感到-01
Oracle Span 6:  我 => 我
Oracle Span 7:  来 => 来-01
Oracle Span 8:  比如 => 比如-01
Spans:
Span 5-6:  下午 => 下午
Span 4-5:  你 => 你
Span 18-19:  幸福 => 幸福-01
Span 16-17:  开始 => 开始-01
Span 17-18:  感到 => 感到-01
Span 14-15:  我 => 我
Span 7-8:  来 => 来-01
Span 1-2:  比如 => 比如-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  下午 => 下午
Oracle Span 4-5:  你 => 你
Oracle Span 18-19:  幸福 => 幸福-01
Oracle Span 16-17:  开始 => 开始-01
Oracle Span 17-18:  感到 => 感到-01
Oracle Span 14-15:  我 => 我
Oracle Span 7-8:  来 => 来-01
Oracle Span 1-2:  比如 => 比如-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	比如	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	你	_	PN	PN	_	18	nsubj	_	_
6	下午	_	NT	NT	_	18	dep	_	_
7	四点钟	_	CD	CD	_	8	lobj	_	_
8	来	_	LC	LC	_	18	loc	_	_
9	,	_	PU	PU	_	18	punct	_	_
10	那么	_	AD	AD	_	18	advmod	_	_
11	从	_	P	P	_	18	prep	_	_
12	三点钟	_	CD	CD	_	13	lobj	_	_
13	起	_	LC	LC	_	11	plmod	_	_
14	,	_	PU	PU	_	18	punct	_	_
15	我	_	PN	PN	_	18	nsubj	_	_
16	就	_	AD	AD	_	18	advmod	_	_
17	开始	_	VV	VV	_	18	mmod	_	_
18	感到	_	VV	VV	_	3	ccomp	_	_
19	幸福	_	NN	NN	_	18	dobj	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x27 / 来-01, arg0, x35 / 你)
(x33 / 开始-01, arg0, x34 / 我)
(x33 / 开始-01, arg1, x36 / 感到-01)
(x36 / 感到-01, arg1, x41 / 幸福-01)

Input(Some(Graph((say :arg1 (比如-01 :arg1 (condition :arg1 (来-01 :arg0 你 :time (date-entity :dayperiod 下午 :time "4:00")) :arg2 (开始-01 :time (date-entity :dayperiod x46 :time "3:00") :arg1 (感到-01 :arg1 幸福-01 :arg0 x34) :arg0 我)))),ArrayBuffer(Span(1,2,List(0),比如,比如-01,false), Span(7,8,List(1),来,来-01,false), Span(4,5,List(2),你,你,false), Span(5,6,List(3),下午,下午,false), Span(16,17,List(4),开始,开始-01,false), Span(17,18,List(5),感到,感到-01,false), Span(18,19,List(6),幸福,幸福-01,false), Span(14,15,List(7),我,我,false)),Map(2 -> 你, 5 -> 感到-01, 7 -> 我, 1 -> 来-01, 4 -> 开始-01, 6 -> 幸福-01, 0 -> 比如-01, 3 -> 下午),Map(x46 -> 下午, x34 -> 我, x25 -> 比如-01, x33 -> 开始-01, x27 -> 来-01, x36 -> 感到-01, x41 -> 幸福-01, x35 -> 你))),[Ljava.lang.String;@6b6eae52,Annotation([Ljava.lang.String;@d4df0e,[Ljava.lang.String;@7ae0cc89,[Ljava.lang.String;@de7e193),Annotation([Ljava.lang.String;@13e5d243,[Ljava.lang.String;@35ef439e,[Ledu.cmu.lti.nlp.amr.Dependency;@4997552e),Annotation([Ljava.lang.String;@7bcecef6,[Ljava.lang.String;@46046c06,[Ljava.lang.String;@93824eb),Annotation([Ljava.lang.String;@7af52ec7,[Ljava.lang.String;@77c1e611,[Ledu.cmu.lti.nlp.amr.Entity;@12c0c0b3))
AMR:
(x27 / 来-01, manner, x46 / 下午)
(x27 / 来-01, time, x25 / 比如-01)
(x33 / 开始-01, manner, x34 / 我)
(x33 / 开始-01, purpose, x36 / 感到-01)
(x33 / 开始-01, unit, x27 / 来-01)
(x36 / 感到-01, extent, x41 / 幸福-01)
(x46 / 下午, location, x35 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 19,399 microseconds
Sentence: 时间 越 临近 ， 我 就 越 感到 幸福 。

Oracle Span 1:  临近 => 临近-01
Oracle Span 2:  就 => 就
Oracle Span 3:  幸福 => 幸福-01
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  我 => 我
Oracle Span 6:  时间 => 时间
Oracle Span 7:  越 => 越
Oracle Span 8:  越 => 越
Spans:
Span 2-3:  临近 => 临近-01
Span 5-6:  就 => 就
Span 8-9:  幸福 => 幸福-01
Span 7-8:  感到 => 感到-01
Span 4-5:  我 => 我
Span 0-1:  时间 => 时间
Span 1-2:  越 => 越
Span 6-7:  越 => 越

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  临近 => 临近-01
Oracle Span 5-6:  就 => 就
Oracle Span 8-9:  幸福 => 幸福-01
Oracle Span 7-8:  感到 => 感到-01
Oracle Span 4-5:  我 => 我
Oracle Span 0-1:  时间 => 时间
Oracle Span 1-2:  越 => 越
Oracle Span 6-7:  越 => 越

Dependencies:
1	时间	_	NN	NN	_	3	nn	_	_
2	越	_	NR	NR	_	3	nn	_	_
3	临近	_	NN	NN	_	8	nsubj	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	我	_	PN	PN	_	8	nsubj	_	_
6	就	_	AD	AD	_	8	advmod	_	_
7	越	_	AD	AD	_	8	advmod	_	_
8	感到	_	VV	VV	_	0	root	_	_
9	幸福	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 临近-01, arg0, x3 / 时间)
(x2 / 临近-01, manner, x10 / 越)
(x5 / 感到-01, arg0, x6 / 我)
(x5 / 感到-01, arg1, x9 / 幸福-01)
(x5 / 感到-01, manner, x11 / 越)
(x5 / 感到-01, manner, x8 / 就)

Input(Some(Graph((condition :arg1 (临近-01 :manner 越 :arg0 时间) :arg2 (感到-01 :manner 越 :arg1 幸福-01 :manner 就 :arg0 我)),ArrayBuffer(Span(2,3,List(0),临近,临近-01,false), Span(1,2,List(1),越,越,false), Span(0,1,List(2),时间,时间,false), Span(7,8,List(3),感到,感到-01,false), Span(6,7,List(4),越,越,false), Span(8,9,List(5),幸福,幸福-01,false), Span(5,6,List(6),就,就,false), Span(4,5,List(7),我,我,false)),Map(2 -> 时间, 5 -> 幸福-01, 7 -> 我, 1 -> 越, 4 -> 越, 6 -> 就, 0 -> 临近-01, 3 -> 感到-01),Map(x10 -> 越, x2 -> 临近-01, x5 -> 感到-01, x8 -> 就, x11 -> 越, x3 -> 时间, x6 -> 我, x9 -> 幸福-01))),[Ljava.lang.String;@5a97b17c,Annotation([Ljava.lang.String;@9c73fff,[Ljava.lang.String;@71cea1b8,[Ljava.lang.String;@659f226a),Annotation([Ljava.lang.String;@2e463f4,[Ljava.lang.String;@32ec9c90,[Ledu.cmu.lti.nlp.amr.Dependency;@36ab3814),Annotation([Ljava.lang.String;@2abbd0d9,[Ljava.lang.String;@b61edb9,[Ljava.lang.String;@5d3ff859),Annotation([Ljava.lang.String;@32bb0072,[Ljava.lang.String;@467233e4,[Ledu.cmu.lti.nlp.amr.Entity;@427a12b6))
AMR:
(x2 / 临近-01, ARG1, x3 / 时间)
(x2 / 临近-01, degree, x6 / 我)
(x2 / 临近-01, manner, x10 / 越)
(x5 / 感到-01, beneficiary, x6 / 我)
(x5 / 感到-01, manner, x11 / 越)
(x5 / 感到-01, manner, x8 / 就)
(x5 / 感到-01, prep-within, x9 / 幸福-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 17,166 microseconds
Sentence: 到 了 四点钟 的 时候 ， 我 就 会 坐立不安 ；

Oracle Span 1:  会 => 会-01
Oracle Span 2:  坐立不安 => 坐立不安-01
Oracle Span 3:  我 => 我
Spans:
Span 8-9:  会 => 会-01
Span 9-10:  坐立不安 => 坐立不安-01
Span 6-7:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-01
Oracle Span 9-10:  坐立不安 => 坐立不安-01
Oracle Span 6-7:  我 => 我

Dependencies:
1	到	_	VV	VV	_	5	rcmod	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	四点钟	_	CD	CD	_	1	dep	_	_
4	的	_	DEC	DEC	_	1	cpm	_	_
5	时候	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	我	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	dep	_	_
10	坐立不安	_	VV	VV	_	0	root	_	_
11	；	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 坐立不安-01)
(x2 / 坐立不安-01, arg0, x3 / 我)

Input(Some(Graph((会-01 :time (date-entity :time "4:00") :arg0 (坐立不安-01 :arg0 我)),ArrayBuffer(Span(8,9,List(0),会,会-01,false), Span(9,10,List(1),坐立不安,坐立不安-01,false), Span(6,7,List(2),我,我,false)),Map(2 -> 我, 1 -> 坐立不安-01, 0 -> 会-01),Map(x2 -> 坐立不安-01, x3 -> 我, x0 -> 会-01))),[Ljava.lang.String;@6025d790,Annotation([Ljava.lang.String;@af7e376,[Ljava.lang.String;@5dcd0cdf,[Ljava.lang.String;@4fb04a72),Annotation([Ljava.lang.String;@1e79d43,[Ljava.lang.String;@343e225a,[Ledu.cmu.lti.nlp.amr.Dependency;@1a07bf6),Annotation([Ljava.lang.String;@4c0e426a,[Ljava.lang.String;@713ec32d,[Ljava.lang.String;@34d713a2),Annotation([Ljava.lang.String;@36aab105,[Ljava.lang.String;@889a8a8,[Ledu.cmu.lti.nlp.amr.Entity;@f29353f))
AMR:
(x0 / 会-01, beneficiary, x3 / 我)
(x0 / 会-01, ord, x2 / 坐立不安-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,673 microseconds
Sentence: 我 就 会 发现 幸福 的 代价 。

Oracle Span 1:  代价 => 代价
Oracle Span 2:  会 => 会-02
Oracle Span 3:  发现 => 发现-01
Oracle Span 4:  就 => 就
Oracle Span 5:  幸福 => 幸福-01
Oracle Span 6:  我 => 我
Spans:
Span 6-7:  代价 => 代价
Span 2-3:  会 => 会-02
Span 3-4:  发现 => 发现-01
Span 1-2:  就 => 就
Span 4-5:  幸福 => 幸福-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  代价 => 代价
Oracle Span 2-3:  会 => 会-02
Oracle Span 3-4:  发现 => 发现-01
Oracle Span 1-2:  就 => 就
Oracle Span 4-5:  幸福 => 幸福-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	发现	_	VV	VV	_	0	root	_	_
5	幸福	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	代价	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 发现-01)
(x0 / 会-02, manner, x4 / 就)
(x2 / 发现-01, arg0, x3 / 我)
(x2 / 发现-01, arg1, x5 / 代价)
(x5 / 代价, mod, x6 / 幸福-01)

Input(Some(Graph((会-02 :manner 就 :arg0 (发现-01 :arg1 (代价 :mod 幸福-01) :arg0 我)),ArrayBuffer(Span(2,3,List(0),会,会-02,false), Span(1,2,List(1),就,就,false), Span(3,4,List(2),发现,发现-01,false), Span(6,7,List(3),代价,代价,false), Span(4,5,List(4),幸福,幸福-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 发现-01, 5 -> 我, 1 -> 就, 4 -> 幸福-01, 0 -> 会-02, 3 -> 代价),Map(x2 -> 发现-01, x5 -> 代价, x4 -> 就, x3 -> 我, x6 -> 幸福-01, x0 -> 会-02))),[Ljava.lang.String;@36f7d7b,Annotation([Ljava.lang.String;@60aec68a,[Ljava.lang.String;@25a7fedf,[Ljava.lang.String;@6361b799),Annotation([Ljava.lang.String;@1b9d9a2b,[Ljava.lang.String;@d919544,[Ledu.cmu.lti.nlp.amr.Dependency;@17dad32f),Annotation([Ljava.lang.String;@79696332,[Ljava.lang.String;@ed2f2f6,[Ljava.lang.String;@fe87ddd),Annotation([Ljava.lang.String;@4eea94a4,[Ljava.lang.String;@7c281eb8,[Ledu.cmu.lti.nlp.amr.Entity;@65f40689))
AMR:
(x0 / 会-02, manner, x4 / 就)
(x0 / 会-02, op, x2 / 发现-01)
(x2 / 发现-01, ARG0, x5 / 代价)
(x2 / 发现-01, season, x3 / 我)
(x5 / 代价, mod, x6 / 幸福-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,013 microseconds
Sentence: 但是 ， 如果 你 随便 什么 时候 来 ， 我 就 不 知道 在 什么 时候 该 准备 好 我 的 心情 …

Oracle Span 1:  你 => 你
Oracle Span 2:  准备 => 准备-01
Oracle Span 3:  就 => 就
Oracle Span 4:  心情 => 心情
Oracle Span 5:  我 => 我
Oracle Span 6:  来 => 来-01
Oracle Span 7:  知道 => 知道-01
Oracle Span 8:  该 => 该-01
Oracle Span 9:  随便 => 随便-01
Spans:
Span 3-4:  你 => 你
Span 17-18:  准备 => 准备-01
Span 10-11:  就 => 就
Span 21-22:  心情 => 心情
Span 9-10:  我 => 我
Span 7-8:  来 => 来-01
Span 12-13:  知道 => 知道-01
Span 16-17:  该 => 该-01
Span 4-5:  随便 => 随便-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 17-18:  准备 => 准备-01
Oracle Span 10-11:  就 => 就
Oracle Span 21-22:  心情 => 心情
Oracle Span 9-10:  我 => 我
Oracle Span 7-8:  来 => 来-01
Oracle Span 12-13:  知道 => 知道-01
Oracle Span 16-17:  该 => 该-01
Oracle Span 4-5:  随便 => 随便-01

Dependencies:
1	但是	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	如果	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	随便	_	VV	VV	_	13	pccomp	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	时候	_	NN	NN	_	8	lobj	_	_
8	来	_	LC	LC	_	5	loc	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	就	_	AD	AD	_	13	advmod	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	知道	_	VV	VV	_	0	root	_	_
14	在	_	P	P	_	19	prep	_	_
15	什么	_	DT	DT	_	16	det	_	_
16	时候	_	NN	NN	_	18	nn	_	_
17	该	_	DT	DT	_	18	det	_	_
18	准备	_	NN	NN	_	14	pobj	_	_
19	好	_	VV	VV	_	13	dobj	_	_
20	我	_	PN	PN	_	19	dobj	_	_
21	的	_	DEC	DEC	_	19	cpm	_	_
22	心情	_	PU	PU	_	13	punct	_	_
23	…	_	PU	PU	_	13	punct	_	_

Oracle:
(x12 / 该-01, arg0, x13 / 准备-01)
(x13 / 准备-01, arg1, x15 / 心情)
(x3 / 来-01, arg0, x4 / 你)
(x3 / 来-01, manner, x5 / 随便-01)
(x7 / 知道-01, arg0, x11 / 我)
(x7 / 知道-01, arg1, x12 / 该-01)
(x7 / 知道-01, manner, x10 / 就)

Input(Some(Graph((contrast :arg2 (condition :arg1 (来-01 :time anytime :manner 随便-01 :arg0 你) :arg2 (知道-01 :arg1 (该-01 :arg0 (准备-01 :time amr-unknown :arg1 (心情 :poss x11) :arg0 x11)) :arg0 我 :manner 就 :polarity -))),ArrayBuffer(Span(7,8,List(0),来,来-01,false), Span(4,5,List(1),随便,随便-01,false), Span(3,4,List(2),你,你,false), Span(12,13,List(3),知道,知道-01,false), Span(16,17,List(4),该,该-01,false), Span(17,18,List(5),准备,准备-01,false), Span(21,22,List(6),心情,心情,false), Span(9,10,List(7),我,我,false), Span(10,11,List(8),就,就,false)),Map(2 -> 你, 5 -> 准备-01, 8 -> 就, 7 -> 我, 1 -> 随便-01, 4 -> 该-01, 6 -> 心情, 0 -> 来-01, 3 -> 知道-01),Map(x10 -> 就, x5 -> 随便-01, x13 -> 准备-01, x12 -> 该-01, x15 -> 心情, x7 -> 知道-01, x4 -> 你, x11 -> 我, x3 -> 来-01))),[Ljava.lang.String;@29be997f,Annotation([Ljava.lang.String;@33eb6758,[Ljava.lang.String;@f8a6243,[Ljava.lang.String;@4a8ffd75),Annotation([Ljava.lang.String;@1727e03a,[Ljava.lang.String;@7f9e8421,[Ledu.cmu.lti.nlp.amr.Dependency;@23da79eb),Annotation([Ljava.lang.String;@168b4cb0,[Ljava.lang.String;@3e05586b,[Ljava.lang.String;@35b17c06),Annotation([Ljava.lang.String;@45545e7a,[Ljava.lang.String;@9f674ac,[Ledu.cmu.lti.nlp.amr.Entity;@1da4b3f9))
AMR:
(x12 / 该-01, ARG5, x13 / 准备-01)
(x13 / 准备-01, op, x15 / 心情)
(x3 / 来-01, manner, x5 / 随便-01)
(x3 / 来-01, snt5, x11 / 我)
(x4 / 你, prep-on, x5 / 随便-01)
(x7 / 知道-01, manner, x10 / 就)
(x7 / 知道-01, prep-at, x13 / 准备-01)
(x7 / 知道-01, prep-out, x3 / 来-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.0
WARNING: makeIds can't find span Id: 0.0.1.3.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 29,373 microseconds
Sentence: 应当 有 一定 的 仪式 。 ”

Oracle Span 1:  一定 => 一定
Oracle Span 2:  仪式 => 仪式
Oracle Span 3:  应当 => 应当-01
Oracle Span 4:  有 => 有-04
Spans:
Span 2-3:  一定 => 一定
Span 4-5:  仪式 => 仪式
Span 0-1:  应当 => 应当-01
Span 1-2:  有 => 有-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一定 => 一定
Oracle Span 4-5:  仪式 => 仪式
Oracle Span 0-1:  应当 => 应当-01
Oracle Span 1-2:  有 => 有-04

Dependencies:
1	应当	_	VV	VV	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	一定	_	JJ	JJ	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	仪式	_	NN	NN	_	2	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 应当-01, arg0, x8 / 有-04)
(x8 / 有-04, arg1, x9 / 仪式)
(x9 / 仪式, mod, x10 / 一定)

Input(Some(Graph((say :arg1 (应当-01 :arg0 (有-04 :arg1 (仪式 :mod 一定)))),ArrayBuffer(Span(0,1,List(0),应当,应当-01,false), Span(1,2,List(1),有,有-04,false), Span(4,5,List(2),仪式,仪式,false), Span(2,3,List(3),一定,一定,false)),Map(2 -> 仪式, 1 -> 有-04, 0 -> 应当-01, 3 -> 一定),Map(x10 -> 一定, x8 -> 有-04, x7 -> 应当-01, x9 -> 仪式))),[Ljava.lang.String;@23cbbd07,Annotation([Ljava.lang.String;@448b808a,[Ljava.lang.String;@7e62cfa3,[Ljava.lang.String;@46e190ed),Annotation([Ljava.lang.String;@383c3eb3,[Ljava.lang.String;@20ab76ee,[Ledu.cmu.lti.nlp.amr.Dependency;@485caa8f),Annotation([Ljava.lang.String;@2703d91,[Ljava.lang.String;@5be052ca,[Ljava.lang.String;@2007435e),Annotation([Ljava.lang.String;@da28d03,[Ljava.lang.String;@ebda593,[Ledu.cmu.lti.nlp.amr.Entity;@5792c08c))
AMR:
(x8 / 有-04, degree, x7 / 应当-01)
(x8 / 有-04, manner, x10 / 一定)
(x9 / 仪式, mod, x10 / 一定)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 5,924 microseconds
Sentence: “ 仪式 是 什么 ？ ” 小 王子 问道 。

Oracle Span 1:  仪式 => 仪式
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  问道 => 问道-01
Spans:
Span 1-2:  仪式 => 仪式
Span 6-7:  小 => 小-01
Span 7-8:  王子 => 王子
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  仪式 => 仪式
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	仪式	_	NN	NN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	什么	_	PN	PN	_	8	vmod	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	问道	_	VA	VA	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((问道-01 :mode interrogative :arg1 (amr-unknown :domain 仪式) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),问道,问道-01,false), Span(1,2,List(1),仪式,仪式,false), Span(7,8,List(2),王子,王子,false), Span(6,7,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 仪式, 0 -> 问道-01, 3 -> 小-01),Map(x2 -> 王子, x5 -> 仪式, x3 -> 小-01, x0 -> 问道-01))),[Ljava.lang.String;@4d157493,Annotation([Ljava.lang.String;@54c622a7,[Ljava.lang.String;@37348491,[Ljava.lang.String;@76e3b45b),Annotation([Ljava.lang.String;@10b4e7f8,[Ljava.lang.String;@75023c53,[Ledu.cmu.lti.nlp.amr.Dependency;@66813e6e),Annotation([Ljava.lang.String;@dab1f89,[Ljava.lang.String;@3a17b2e3,[Ljava.lang.String;@5e13f156),Annotation([Ljava.lang.String;@310ed6b4,[Ljava.lang.String;@640cc04b,[Ledu.cmu.lti.nlp.amr.Entity;@630bf683))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, location, x5 / 仪式)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,378 microseconds
Sentence: “ 这 也 是 一 种 早 已 被 人 忘却 了 的 事 。 ” 狐狸 说 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  事 => 事
Oracle Span 3:  人 => 人
Oracle Span 4:  忘却 => 忘却-01
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Spans:
Span 2-3:  也 => 也
Span 13-14:  事 => 事
Span 9-10:  人 => 人
Span 10-11:  忘却 => 忘却-01
Span 16-17:  狐狸 => 狐狸
Span 17-18:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 13-14:  事 => 事
Oracle Span 9-10:  人 => 人
Oracle Span 10-11:  忘却 => 忘却-01
Oracle Span 16-17:  狐狸 => 狐狸
Oracle Span 17-18:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	14	clf	_	_
7	早	_	AD	AD	_	11	advmod	_	_
8	已	_	AD	AD	_	11	advmod	_	_
9	被	_	LB	LB	_	11	pass	_	_
10	人	_	NN	NN	_	11	nsubj	_	_
11	忘却	_	VV	VV	_	14	rcmod	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	的	_	DEC	DEC	_	11	cpm	_	_
14	事	_	NN	NN	_	4	attr	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	”	_	PU	PU	_	4	punct	_	_
17	狐狸	_	NN	NN	_	18	dep	_	_
18	说	_	VV	VV	_	4	dep	_	_
19	,	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 事)
(x3 / 事, domain, x10 / 这)
(x3 / 事, manner, x9 / 也)
(x5 / 忘却-01, arg0, x6 / 人)
(x5 / 忘却-01, arg1, x3 / 事)

Input(Some(Graph((说-01 :arg1 (事 :quant 1 :domain 这 :manner 也 :arg1-of (忘却-01 :time 早已 :arg0 人)) :arg0 狐狸),ArrayBuffer(Span(17,18,List(0),说,说-01,false), Span(13,14,List(1),事,事,false), Span(1,2,List(2),这,这,false), Span(2,3,List(3),也,也,false), Span(10,11,List(4),忘却,忘却-01,false), Span(9,10,List(5),人,人,false), Span(16,17,List(6),狐狸,狐狸,false)),Map(2 -> 这, 5 -> 人, 1 -> 事, 4 -> 忘却-01, 6 -> 狐狸, 0 -> 说-01, 3 -> 也),Map(x2 -> 狐狸, x10 -> 这, x5 -> 忘却-01, x3 -> 事, x6 -> 人, x9 -> 也, x0 -> 说-01))),[Ljava.lang.String;@22d322f5,Annotation([Ljava.lang.String;@65afeb6d,[Ljava.lang.String;@6723610b,[Ljava.lang.String;@5ba03c82),Annotation([Ljava.lang.String;@60df7989,[Ljava.lang.String;@7ab1127c,[Ledu.cmu.lti.nlp.amr.Dependency;@6e60f18),Annotation([Ljava.lang.String;@5cf8676a,[Ljava.lang.String;@47f04e4d,[Ljava.lang.String;@3520963d),Annotation([Ljava.lang.String;@388d14e,[Ljava.lang.String;@1cd43562,[Ledu.cmu.lti.nlp.amr.Entity;@59939293))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, purpose, x3 / 事)
(x3 / 事, domain, x10 / 这)
(x3 / 事, location, x5 / 忘却-01)
(x5 / 忘却-01, location, x6 / 人)
(x9 / 也, domain, x10 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,664 microseconds
Sentence: “ 它 就 是 使 某 一 天 与 其他 日子 不同 ， 使 某 一 时刻 与 其他 时刻 不同 。

Oracle Span 1:  使 => 使-01
Oracle Span 2:  使 => 使-01
Oracle Span 3:  其他 => 其他
Oracle Span 4:  其他 => 其他
Oracle Span 5:  天 => 天
Oracle Span 6:  它 => 它
Oracle Span 7:  就 => 就
Oracle Span 8:  日子 => 日子
Oracle Span 9:  时刻 => 时刻
Oracle Span 10:  时刻 => 时刻
Oracle Span 11:  某 => 某
Oracle Span 12:  某 => 某
Spans:
Span 4-5:  使 => 使-01
Span 13-14:  使 => 使-01
Span 9-10:  其他 => 其他
Span 18-19:  其他 => 其他
Span 7-8:  天 => 天
Span 1-2:  它 => 它
Span 2-3:  就 => 就
Span 10-11:  日子 => 日子
Span 16-17:  时刻 => 时刻
Span 19-20:  时刻 => 时刻
Span 5-6:  某 => 某
Span 14-15:  某 => 某

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  使 => 使-01
Oracle Span 13-14:  使 => 使-01
Oracle Span 9-10:  其他 => 其他
Oracle Span 18-19:  其他 => 其他
Oracle Span 7-8:  天 => 天
Oracle Span 1-2:  它 => 它
Oracle Span 2-3:  就 => 就
Oracle Span 10-11:  日子 => 日子
Oracle Span 16-17:  时刻 => 时刻
Oracle Span 19-20:  时刻 => 时刻
Oracle Span 5-6:  某 => 某
Oracle Span 14-15:  某 => 某

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	它	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	使	_	VV	VV	_	4	ccomp	_	_
6	某	_	DT	DT	_	12	dep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	天	_	M	M	_	6	dep	_	_
9	与	_	P	P	_	12	prep	_	_
10	其他	_	DT	DT	_	11	det	_	_
11	日子	_	NN	NN	_	9	pobj	_	_
12	不同	_	VA	VA	_	5	ccomp	_	_
13	,	_	PU	PU	_	5	punct	_	_
14	使	_	VV	VV	_	5	dep	_	_
15	某	_	DT	DT	_	17	det	_	_
16	一	_	CD	CD	_	15	dep	_	_
17	时刻	_	NN	NN	_	14	dobj	_	_
18	与	_	P	P	_	21	prep	_	_
19	其他	_	DT	DT	_	20	det	_	_
20	时刻	_	NN	NN	_	18	pobj	_	_
21	不同	_	VA	VA	_	14	dep	_	_
22	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x18 / 使-01, arg0, x20 / 它)
(x18 / 使-01, manner, x19 / 就)
(x24 / 日子, mod, x25 / 其他)
(x26 / 天, mod, x28 / 某)
(x32 / 时刻, mod, x34 / 某)
(x35 / 时刻, mod, x36 / 其他)

Input(Some(Graph((say :arg1 (and :op (使-01 :arg2 (同-01 :polarity - :arg1 (日子 :mod 其他) :arg0 (天 :mod 某 :quant 1)) :arg0 它 :manner 就) :op (使-01 :arg2 (同-01 :polarity - :arg0 (时刻 :mod 某 :quant 1) :arg1 (时刻 :mod 其他))))),ArrayBuffer(Span(4,5,List(0),使,使-01,false), Span(10,11,List(1),日子,日子,false), Span(9,10,List(2),其他,其他,false), Span(7,8,List(3),天,天,false), Span(5,6,List(4),某,某,false), Span(1,2,List(5),它,它,false), Span(2,3,List(6),就,就,false), Span(13,14,List(7),使,使-01,false), Span(16,17,List(8),时刻,时刻,false), Span(14,15,List(9),某,某,false), Span(19,20,List(10),时刻,时刻,false), Span(18,19,List(11),其他,其他,false)),Map(2 -> 其他, 5 -> 它, 8 -> 时刻, 7 -> 使-01, 1 -> 日子, 4 -> 某, 11 -> 其他, 6 -> 就, 9 -> 某, 0 -> 使-01, 10 -> 时刻, 3 -> 天),Map(x34 -> 某, x28 -> 某, x25 -> 其他, x19 -> 就, x36 -> 其他, x24 -> 日子, x18 -> 使-01, x32 -> 时刻, x26 -> 天, x35 -> 时刻, x29 -> 使-01, x20 -> 它))),[Ljava.lang.String;@68b366e2,Annotation([Ljava.lang.String;@2d74c81b,[Ljava.lang.String;@10b687f2,[Ljava.lang.String;@55f4887d),Annotation([Ljava.lang.String;@26837057,[Ljava.lang.String;@2dbc408c,[Ledu.cmu.lti.nlp.amr.Dependency;@991cbde),Annotation([Ljava.lang.String;@78d71df1,[Ljava.lang.String;@456bcb74,[Ljava.lang.String;@a9c5b75),Annotation([Ljava.lang.String;@dd4aec3,[Ljava.lang.String;@4dac121d,[Ledu.cmu.lti.nlp.amr.Entity;@568750b7))
AMR:
(x18 / 使-01, manner, x19 / 就)
(x18 / 使-01, prep-for, x28 / 某)
(x18 / 使-01, quant, x20 / 它)
(x24 / 日子, mod, x25 / 其他)
(x24 / 日子, mod, x26 / 天)
(x24 / 日子, purpose, x29 / 使-01)
(x26 / 天, mod, x28 / 某)
(x29 / 使-01, prep-for, x34 / 某)
(x32 / 时刻, mod, x34 / 某)
(x32 / 时刻, mod, x36 / 其他)
(x35 / 时刻, mod, x36 / 其他)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.0.2.2
WARNING: makeIds can't find span Id: 0.0.0.2.2.1
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.2.0
Decoded in 41,686 microseconds
Sentence: 比如 说 ， 我 的 那些 猎人 就 有 一 种 仪式 。

Oracle Span 1:  仪式 => 仪式
Oracle Span 2:  就 => 就
Oracle Span 3:  我 => 我
Oracle Span 4:  有 => 有-05
Oracle Span 5:  比如 => 比如-01
Oracle Span 6:  猎人 => 猎人
Oracle Span 7:  那些 => 那些
Spans:
Span 11-12:  仪式 => 仪式
Span 7-8:  就 => 就
Span 3-4:  我 => 我
Span 8-9:  有 => 有-05
Span 0-1:  比如 => 比如-01
Span 6-7:  猎人 => 猎人
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  仪式 => 仪式
Oracle Span 7-8:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  有 => 有-05
Oracle Span 0-1:  比如 => 比如-01
Oracle Span 6-7:  猎人 => 猎人
Oracle Span 5-6:  那些 => 那些

Dependencies:
1	比如	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	我	_	PN	PN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	猎人	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	2	ccomp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	种	_	M	M	_	12	clf	_	_
12	仪式	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 比如-01, arg0, x2 / 有-05)
(x2 / 有-05, arg0, x3 / 猎人)
(x2 / 有-05, arg1, x7 / 仪式)
(x2 / 有-05, manner, x6 / 就)
(x3 / 猎人, mod, x4 / 那些)
(x3 / 猎人, poss, x5 / 我)

Input(Some(Graph((比如-01 :arg0 (有-05 :arg1 (仪式 :quant 1) :manner 就 :arg0 (猎人 :poss 我 :mod 那些))),ArrayBuffer(Span(0,1,List(0),比如,比如-01,false), Span(8,9,List(1),有,有-05,false), Span(11,12,List(2),仪式,仪式,false), Span(7,8,List(3),就,就,false), Span(6,7,List(4),猎人,猎人,false), Span(3,4,List(5),我,我,false), Span(5,6,List(6),那些,那些,false)),Map(2 -> 仪式, 5 -> 我, 1 -> 有-05, 4 -> 猎人, 6 -> 那些, 0 -> 比如-01, 3 -> 就),Map(x2 -> 有-05, x5 -> 我, x7 -> 仪式, x4 -> 那些, x3 -> 猎人, x6 -> 就, x0 -> 比如-01))),[Ljava.lang.String;@3e28fee1,Annotation([Ljava.lang.String;@16a2ed51,[Ljava.lang.String;@3b332962,[Ljava.lang.String;@57ddd45b),Annotation([Ljava.lang.String;@2e7bf7b7,[Ljava.lang.String;@2fb25f4c,[Ledu.cmu.lti.nlp.amr.Dependency;@de81be1),Annotation([Ljava.lang.String;@342e690b,[Ljava.lang.String;@4519f676,[Ljava.lang.String;@78ec89a6),Annotation([Ljava.lang.String;@3596b249,[Ljava.lang.String;@7237f3c1,[Ledu.cmu.lti.nlp.amr.Entity;@781711b7))
AMR:
(x0 / 比如-01, time, x2 / 有-05)
(x2 / 有-05, ARG0, x3 / 猎人)
(x2 / 有-05, manner, x6 / 就)
(x2 / 有-05, prep-following, x7 / 仪式)
(x3 / 猎人, mod, x4 / 那些)
(x3 / 猎人, poss, x5 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 16,138 microseconds
Sentence: 他们 每 星期四 都 和 村子 里 的 姑娘们 跳舞 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  姑娘们 => 姑娘们
Oracle Span 3:  星期四 => 星期四
Oracle Span 4:  村子 => 村子
Oracle Span 5:  跳舞 => 跳舞-01
Oracle Span 6:  都 => 都
Spans:
Span 0-1:  他们 => 他们
Span 8-9:  姑娘们 => 姑娘们
Span 2-3:  星期四 => 星期四
Span 5-6:  村子 => 村子
Span 9-10:  跳舞 => 跳舞-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 8-9:  姑娘们 => 姑娘们
Oracle Span 2-3:  星期四 => 星期四
Oracle Span 5-6:  村子 => 村子
Oracle Span 9-10:  跳舞 => 跳舞-01
Oracle Span 3-4:  都 => 都

Dependencies:
1	他们	_	PN	PN	_	10	nsubj	_	_
2	每	_	DT	DT	_	3	det	_	_
3	星期四	_	NT	NT	_	10	nsubj	_	_
4	都	_	AD	AD	_	10	advmod	_	_
5	和	_	P	P	_	10	prep	_	_
6	村子	_	NN	NN	_	7	lobj	_	_
7	里	_	LC	LC	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	姑娘们	_	NN	NN	_	5	pobj	_	_
10	跳舞	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 跳舞-01, accompanier, x8 / 姑娘们)
(x0 / 跳舞-01, arg0, x2 / 他们)
(x0 / 跳舞-01, frequency, x11 / 星期四)
(x0 / 跳舞-01, manner, x7 / 都)
(x8 / 姑娘们, location, x9 / 村子)

Input(Some(Graph((跳舞-01 :frequency 星期四 :accompanier (姑娘们 :location 村子) :manner 都 :arg0 他们),ArrayBuffer(Span(9,10,List(0),跳舞,跳舞-01,false), Span(2,3,List(1),星期四,星期四,false), Span(8,9,List(2),姑娘们,姑娘们,false), Span(5,6,List(3),村子,村子,false), Span(3,4,List(4),都,都,false), Span(0,1,List(5),他们,他们,false)),Map(2 -> 姑娘们, 5 -> 他们, 1 -> 星期四, 4 -> 都, 0 -> 跳舞-01, 3 -> 村子),Map(x2 -> 他们, x8 -> 姑娘们, x7 -> 都, x11 -> 星期四, x9 -> 村子, x0 -> 跳舞-01))),[Ljava.lang.String;@642a16aa,Annotation([Ljava.lang.String;@642ee49c,[Ljava.lang.String;@294aba23,[Ljava.lang.String;@69909c14),Annotation([Ljava.lang.String;@5d3b58ca,[Ljava.lang.String;@4e224df5,[Ledu.cmu.lti.nlp.amr.Dependency;@32456db0),Annotation([Ljava.lang.String;@5f5827d0,[Ljava.lang.String;@58a2d9f9,[Ljava.lang.String;@4337afd),Annotation([Ljava.lang.String;@1d02af26,[Ljava.lang.String;@3fa7df1,[Ledu.cmu.lti.nlp.amr.Entity;@4dd90166))
AMR:
(x0 / 跳舞-01, accompanier, x8 / 姑娘们)
(x0 / 跳舞-01, frequency, x11 / 星期四)
(x0 / 跳舞-01, manner, x7 / 都)
(x0 / 跳舞-01, op, x2 / 他们)
(x8 / 姑娘们, location, x9 / 村子)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,444 microseconds
Sentence: 于是 ， 星期四 就 是 一 个 美好 的 日子 ！

Oracle Span 1:  就 => 就
Oracle Span 2:  日子 => 日子
Oracle Span 3:  星期四 => 星期四
Oracle Span 4:  美好 => 美好-01
Spans:
Span 3-4:  就 => 就
Span 9-10:  日子 => 日子
Span 2-3:  星期四 => 星期四
Span 7-8:  美好 => 美好-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  就 => 就
Oracle Span 9-10:  日子 => 日子
Oracle Span 2-3:  星期四 => 星期四
Oracle Span 7-8:  美好 => 美好-01

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	星期四	_	NT	NT	_	5	dep	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	10	clf	_	_
8	美好	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	日子	_	NN	NN	_	5	attr	_	_
11	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 日子, manner, x6 / 就)
(x2 / 日子, mod, x4 / 美好-01)

Input(Some(Graph((temporal :arg2 (日子 :mode expressive :domain (date-entity :weekday 星期四) :quant 1 :manner 就 :mod 美好-01)),ArrayBuffer(Span(9,10,List(0),日子,日子,false), Span(2,3,List(1),星期四,星期四,false), Span(3,4,List(2),就,就,false), Span(7,8,List(3),美好,美好-01,false)),Map(2 -> 就, 1 -> 星期四, 0 -> 日子, 3 -> 美好-01),Map(x10 -> 星期四, x2 -> 日子, x4 -> 美好-01, x6 -> 就))),[Ljava.lang.String;@52227eb2,Annotation([Ljava.lang.String;@5ad1904f,[Ljava.lang.String;@a146b11,[Ljava.lang.String;@f438904),Annotation([Ljava.lang.String;@4ed5a1b0,[Ljava.lang.String;@18d003cd,[Ledu.cmu.lti.nlp.amr.Dependency;@3135bf25),Annotation([Ljava.lang.String;@22ad1bae,[Ljava.lang.String;@4116f66a,[Ljava.lang.String;@59c04bee),Annotation([Ljava.lang.String;@45900b64,[Ljava.lang.String;@f2a1813,[Ledu.cmu.lti.nlp.amr.Entity;@79f90a3a))
AMR:
(x2 / 日子, manner, x10 / 星期四)
(x2 / 日子, manner, x6 / 就)
(x2 / 日子, mod, x4 / 美好-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,169 microseconds
Sentence: 我 可以 一直 散步 到 葡萄园 去 。

Oracle Span 1:  一直 => 一直
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  我 => 我
Oracle Span 4:  散步 => 散步-01
Oracle Span 5:  葡萄园 => 葡萄园
Spans:
Span 2-3:  一直 => 一直
Span 1-2:  可以 => 可以-01
Span 0-1:  我 => 我
Span 3-4:  散步 => 散步-01
Span 5-6:  葡萄园 => 葡萄园

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一直 => 一直
Oracle Span 1-2:  可以 => 可以-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  散步 => 散步-01
Oracle Span 5-6:  葡萄园 => 葡萄园

Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	可以	_	VV	VV	_	7	mmod	_	_
3	一直	_	AD	AD	_	7	advmod	_	_
4	散步	_	AD	AD	_	7	advmod	_	_
5	到	_	P	P	_	7	prep	_	_
6	葡萄园	_	NN	NN	_	5	pobj	_	_
7	去	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 可以-01, arg0, x2 / 散步-01)
(x2 / 散步-01, arg0, x3 / 我)
(x2 / 散步-01, direction, x6 / 葡萄园)
(x2 / 散步-01, manner, x4 / 一直)

Input(Some(Graph((可以-01 :arg0 (散步-01 :direction 葡萄园 :manner 一直 :arg0 我)),ArrayBuffer(Span(1,2,List(0),可以,可以-01,false), Span(3,4,List(1),散步,散步-01,false), Span(5,6,List(2),葡萄园,葡萄园,false), Span(2,3,List(3),一直,一直,false), Span(0,1,List(4),我,我,false)),Map(2 -> 葡萄园, 1 -> 散步-01, 4 -> 我, 0 -> 可以-01, 3 -> 一直),Map(x2 -> 散步-01, x4 -> 一直, x3 -> 我, x6 -> 葡萄园, x0 -> 可以-01))),[Ljava.lang.String;@22bdb1d0,Annotation([Ljava.lang.String;@67b355c8,[Ljava.lang.String;@388623ad,[Ljava.lang.String;@91f565d),Annotation([Ljava.lang.String;@46e3559f,[Ljava.lang.String;@3b83459e,[Ledu.cmu.lti.nlp.amr.Dependency;@32118208),Annotation([Ljava.lang.String;@414f87a9,[Ljava.lang.String;@1ddc6db2,[Ljava.lang.String;@3cd26422),Annotation([Ljava.lang.String;@2eda072,[Ljava.lang.String;@3fa21d49,[Ledu.cmu.lti.nlp.amr.Entity;@416d56f2))
AMR:
(x0 / 可以-01, ARG6, x2 / 散步-01)
(x2 / 散步-01, direction, x6 / 葡萄园)
(x2 / 散步-01, manner, x4 / 一直)
(x2 / 散步-01, time, x3 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,798 microseconds
Sentence: 如果 猎人们 什么 时候 都 跳舞 ， 天天 又 全 都 一样 ， 那么 我 也 就 没有 假日 了 。 ”

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  也 => 也
Oracle Span 3:  什么 => 什么
Oracle Span 4:  假日 => 假日
Oracle Span 5:  全 => 全-01
Oracle Span 6:  又 => 又
Oracle Span 7:  天天 => 天天
Oracle Span 8:  就 => 就
Oracle Span 9:  我 => 我
Oracle Span 10:  时候 => 时候
Oracle Span 11:  猎人们 => 猎人们
Oracle Span 12:  跳舞 => 跳舞-01
Oracle Span 13:  都 => 都
Oracle Span 14:  都 => 都
Spans:
Span 11-12:  一样 => 一样-01
Span 15-16:  也 => 也
Span 2-3:  什么 => 什么
Span 18-19:  假日 => 假日
Span 9-10:  全 => 全-01
Span 8-9:  又 => 又
Span 7-8:  天天 => 天天
Span 16-17:  就 => 就
Span 14-15:  我 => 我
Span 3-4:  时候 => 时候
Span 1-2:  猎人们 => 猎人们
Span 5-6:  跳舞 => 跳舞-01
Span 4-5:  都 => 都
Span 10-11:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一样 => 一样-01
Oracle Span 15-16:  也 => 也
Oracle Span 2-3:  什么 => 什么
Oracle Span 18-19:  假日 => 假日
Oracle Span 9-10:  全 => 全-01
Oracle Span 8-9:  又 => 又
Oracle Span 7-8:  天天 => 天天
Oracle Span 16-17:  就 => 就
Oracle Span 14-15:  我 => 我
Oracle Span 3-4:  时候 => 时候
Oracle Span 1-2:  猎人们 => 猎人们
Oracle Span 5-6:  跳舞 => 跳舞-01
Oracle Span 4-5:  都 => 都
Oracle Span 10-11:  都 => 都

Dependencies:
1	如果	_	CS	CS	_	6	advmod	_	_
2	猎人们	_	NR	NR	_	4	nn	_	_
3	什么	_	DT	DT	_	4	det	_	_
4	时候	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	跳舞	_	VV	VV	_	12	pccomp	_	_
7	,	_	PU	PU	_	12	punct	_	_
8	天天	_	NN	NN	_	12	nsubj	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	全	_	AD	AD	_	12	advmod	_	_
11	都	_	AD	AD	_	12	advmod	_	_
12	一样	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	那么	_	AD	AD	_	18	advmod	_	_
15	我	_	PN	PN	_	18	nsubj	_	_
16	也	_	AD	AD	_	18	advmod	_	_
17	就	_	AD	AD	_	18	advmod	_	_
18	没有	_	VE	VE	_	12	conj	_	_
19	假日	_	NN	NN	_	18	dobj	_	_
20	了	_	SP	SP	_	12	dep	_	_
21	。	_	PU	PU	_	12	punct	_	_
22	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x27 / 跳舞-01, arg0, x28 / 猎人们)
(x27 / 跳舞-01, manner, x29 / 都)
(x27 / 跳舞-01, time, x30 / 时候)
(x30 / 时候, mod, x31 / 什么)
(x32 / 一样-01, manner, x35 / 又)
(x32 / 一样-01, manner, x36 / 全-01)
(x32 / 一样-01, manner, x37 / 都)
(x32 / 一样-01, time, x34 / 天天)

Input(Some(Graph((say :arg1 (condition :arg1 (and :op (跳舞-01 :time (时候 :mod 什么) :manner 都 :arg0 猎人们) :op (一样-01 :manner 都 :manner 全-01 :manner 又 :time 天天 :arg0 x27)) :arg2 (有-01 :polarity - :manner 就 :manner 也 :arg0 我 :arg1 假日))),ArrayBuffer(Span(5,6,List(0),跳舞,跳舞-01,false), Span(3,4,List(1),时候,时候,false), Span(2,3,List(2),什么,什么,false), Span(4,5,List(3),都,都,false), Span(1,2,List(4),猎人们,猎人们,false), Span(11,12,List(5),一样,一样-01,false), Span(10,11,List(6),都,都,false), Span(9,10,List(7),全,全-01,false), Span(8,9,List(8),又,又,false), Span(7,8,List(9),天天,天天,false), Span(16,17,List(10),就,就,false), Span(15,16,List(11),也,也,false), Span(14,15,List(12),我,我,false), Span(18,19,List(13),假日,假日,false)),Map(2 -> 什么, 5 -> 一样-01, 12 -> 我, 8 -> 又, 7 -> 全-01, 1 -> 时候, 4 -> 猎人们, 11 -> 也, 6 -> 都, 9 -> 天天, 0 -> 跳舞-01, 10 -> 就, 3 -> 都, 13 -> 假日),Map(x34 -> 天天, x28 -> 猎人们, x40 -> 就, x43 -> 假日, x37 -> 都, x31 -> 什么, x30 -> 时候, x27 -> 跳舞-01, x42 -> 我, x36 -> 全-01, x41 -> 也, x32 -> 一样-01, x35 -> 又, x29 -> 都))),[Ljava.lang.String;@6e31d989,Annotation([Ljava.lang.String;@1b01a0d,[Ljava.lang.String;@2ed71727,[Ljava.lang.String;@5261ec9),Annotation([Ljava.lang.String;@65bb6275,[Ljava.lang.String;@64da6cbd,[Ledu.cmu.lti.nlp.amr.Dependency;@72a2312e),Annotation([Ljava.lang.String;@47c7a9e5,[Ljava.lang.String;@7951c3a2,[Ljava.lang.String;@4ed9f7b1),Annotation([Ljava.lang.String;@2d119405,[Ljava.lang.String;@57e388c3,[Ledu.cmu.lti.nlp.amr.Entity;@20580d4e))
AMR:
(x27 / 跳舞-01, manner, x29 / 都)
(x27 / 跳舞-01, time, x28 / 猎人们)
(x27 / 跳舞-01, time, x30 / 时候)
(x27 / 跳舞-01, time, x34 / 天天)
(x30 / 时候, mod, x31 / 什么)
(x32 / 一样-01, manner, x36 / 全-01)
(x32 / 一样-01, manner, x37 / 都)
(x32 / 一样-01, prep-on-behalf, x42 / 我)
(x32 / 一样-01, snt2, x43 / 假日)
(x32 / 一样-01, time, x34 / 天天)
(x35 / 又, snt2, x36 / 全-01)
(x40 / 就, prep-on-behalf, x43 / 假日)
(x41 / 也, prep-on-behalf, x43 / 假日)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.4
WARNING: makeIds can't find span Id: 0.0.0.1.3
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.4
Decoded in 49,220 microseconds
Sentence: 就 这样 ， 小 王子 驯服 了 狐狸 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  就 => 就
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  王子 => 王子
Oracle Span 5:  这样 => 这样
Oracle Span 6:  驯服 => 驯服-01
Spans:
Span 3-4:  小 => 小-01
Span 0-1:  就 => 就
Span 7-8:  狐狸 => 狐狸
Span 4-5:  王子 => 王子
Span 1-2:  这样 => 这样
Span 5-6:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  小 => 小-01
Oracle Span 0-1:  就 => 就
Oracle Span 7-8:  狐狸 => 狐狸
Oracle Span 4-5:  王子 => 王子
Oracle Span 1-2:  这样 => 这样
Oracle Span 5-6:  驯服 => 驯服-01

Dependencies:
1	就	_	P	P	_	6	prep	_	_
2	这样	_	PN	PN	_	1	pobj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	6	nsubj	_	_
6	驯服	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	狐狸	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 驯服-01, arg0, x2 / 王子)
(x0 / 驯服-01, arg1, x4 / 狐狸)
(x0 / 驯服-01, manner, x6 / 这样)
(x2 / 王子, mod, x3 / 小-01)
(x6 / 这样, manner, x7 / 就)

Input(Some(Graph((驯服-01 :manner (这样 :manner 就) :arg1 狐狸 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(5,6,List(0),驯服,驯服-01,false), Span(1,2,List(1),这样,这样,false), Span(0,1,List(2),就,就,false), Span(7,8,List(3),狐狸,狐狸,false), Span(4,5,List(4),王子,王子,false), Span(3,4,List(5),小,小-01,false)),Map(2 -> 就, 5 -> 小-01, 1 -> 这样, 4 -> 王子, 0 -> 驯服-01, 3 -> 狐狸),Map(x2 -> 王子, x7 -> 就, x4 -> 狐狸, x3 -> 小-01, x6 -> 这样, x0 -> 驯服-01))),[Ljava.lang.String;@21bd128b,Annotation([Ljava.lang.String;@2d0b05,[Ljava.lang.String;@4b432e53,[Ljava.lang.String;@2b916808),Annotation([Ljava.lang.String;@62f11ebb,[Ljava.lang.String;@a6c54c3,[Ledu.cmu.lti.nlp.amr.Dependency;@580fd26b),Annotation([Ljava.lang.String;@78fe204a,[Ljava.lang.String;@1290ed28,[Ljava.lang.String;@7a3269f5),Annotation([Ljava.lang.String;@5c887052,[Ljava.lang.String;@55fdf7f9,[Ledu.cmu.lti.nlp.amr.Entity;@4091b9c3))
AMR:
(x0 / 驯服-01, direction, x2 / 王子)
(x0 / 驯服-01, manner, x6 / 这样)
(x0 / 驯服-01, mod, x4 / 狐狸)
(x2 / 王子, mod, x3 / 小-01)
(x6 / 这样, manner, x7 / 就)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,750 microseconds
Sentence: 当 出发 的 时刻 就 快 要 来到 时： “ 啊 ！ ” 狐狸 说 ， “ 我 一定 会 哭 的 。 ”

Oracle Span 1:  一定 => 一定
Oracle Span 2:  会 => 会-02
Oracle Span 3:  出发 => 出发-01
Oracle Span 4:  哭 => 哭-01
Oracle Span 5:  啊 => 啊
Oracle Span 6:  快 => 快-01
Oracle Span 7:  我 => 我
Oracle Span 8:  时刻 => 时刻
Oracle Span 9:  狐狸 => 狐狸
Oracle Span 10:  要 => 要-03
Oracle Span 11:  说 => 说-01
Spans:
Span 19-20:  一定 => 一定
Span 20-21:  会 => 会-02
Span 1-2:  出发 => 出发-01
Span 21-22:  哭 => 哭-01
Span 11-12:  啊 => 啊
Span 5-6:  快 => 快-01
Span 18-19:  我 => 我
Span 3-4:  时刻 => 时刻
Span 14-15:  狐狸 => 狐狸
Span 6-7:  要 => 要-03
Span 15-16:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  一定 => 一定
Oracle Span 20-21:  会 => 会-02
Oracle Span 1-2:  出发 => 出发-01
Oracle Span 21-22:  哭 => 哭-01
Oracle Span 11-12:  啊 => 啊
Oracle Span 5-6:  快 => 快-01
Oracle Span 18-19:  我 => 我
Oracle Span 3-4:  时刻 => 时刻
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 6-7:  要 => 要-03
Oracle Span 15-16:  说 => 说-01

Dependencies:
1	当	_	AD	AD	_	2	advmod	_	_
2	出发	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	时刻	_	NN	NN	_	8	nsubj	_	_
5	就	_	P	P	_	8	prep	_	_
6	快	_	VA	VA	_	5	pccomp	_	_
7	要	_	VV	VV	_	8	mmod	_	_
8	来到	_	VV	VV	_	0	root	_	_
9	时：	_	NR	NR	_	14	nn	_	_
10	“	_	PU	PU	_	12	punct	_	_
11	啊	_	JJ	JJ	_	12	amod	_	_
12	！	_	NN	NN	_	14	nn	_	_
13	”	_	PU	PU	_	12	punct	_	_
14	狐狸	_	NN	NN	_	15	nsubj	_	_
15	说	_	VV	VV	_	8	dobj	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	“	_	PU	PU	_	20	punct	_	_
18	我	_	PN	PN	_	20	nsubj	_	_
19	一定	_	AD	AD	_	20	advmod	_	_
20	会	_	VV	VV	_	15	ccomp	_	_
21	哭	_	NN	NN	_	20	dobj	_	_
22	的	_	DEC	DEC	_	15	cpm	_	_
23	。	_	PU	PU	_	8	punct	_	_
24	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 说-01, arg0, x15 / 狐狸)
(x18 / 会-02, arg0, x19 / 哭-01)
(x18 / 会-02, manner, x21 / 一定)
(x19 / 哭-01, arg0, x20 / 我)
(x25 / 时刻, mod, x26 / 出发-01)
(x29 / 要-03, manner, x30 / 快-01)

Input(Some(Graph((说-01 :arg1 (and :op 啊 :op (会-02 :manner 一定 :arg0 (哭-01 :time (到来-01 :arg0 (时刻 :mod 出发-01) :time (要-03 :manner 快-01)) :arg0 我))) :arg0 狐狸),ArrayBuffer(Span(15,16,List(0),说,说-01,false), Span(11,12,List(1),啊,啊,false), Span(20,21,List(2),会,会-02,false), Span(19,20,List(3),一定,一定,false), Span(21,22,List(4),哭,哭-01,false), Span(3,4,List(5),时刻,时刻,false), Span(1,2,List(6),出发,出发-01,false), Span(6,7,List(7),要,要-03,false), Span(5,6,List(8),快,快-01,false), Span(18,19,List(9),我,我,false), Span(14,15,List(10),狐狸,狐狸,false)),Map(2 -> 会-02, 5 -> 时刻, 8 -> 快-01, 7 -> 要-03, 1 -> 啊, 4 -> 哭-01, 6 -> 出发-01, 9 -> 我, 0 -> 说-01, 10 -> 狐狸, 3 -> 一定),Map(x25 -> 时刻, x19 -> 哭-01, x13 -> 说-01, x30 -> 快-01, x15 -> 狐狸, x21 -> 一定, x18 -> 会-02, x26 -> 出发-01, x29 -> 要-03, x20 -> 我, x17 -> 啊))),[Ljava.lang.String;@29050de5,Annotation([Ljava.lang.String;@3610f277,[Ljava.lang.String;@c689973,[Ljava.lang.String;@41fa769c),Annotation([Ljava.lang.String;@40113163,[Ljava.lang.String;@71a3e05c,[Ledu.cmu.lti.nlp.amr.Dependency;@39c85c1a),Annotation([Ljava.lang.String;@2b148329,[Ljava.lang.String;@62c72501,[Ljava.lang.String;@c889805),Annotation([Ljava.lang.String;@77db3d02,[Ljava.lang.String;@78d9f51b,[Ledu.cmu.lti.nlp.amr.Entity;@23ed382c))
AMR:
(x13 / 说-01, manner, x15 / 狐狸)
(x13 / 说-01, manner, x17 / 啊)
(x13 / 说-01, manner, x30 / 快-01)
(x13 / 说-01, snt3, x19 / 哭-01)
(x18 / 会-02, manner, x19 / 哭-01)
(x18 / 会-02, manner, x21 / 一定)
(x21 / 一定, manner, x20 / 我)
(x25 / 时刻, mod, x26 / 出发-01)
(x26 / 出发-01, manner, x30 / 快-01)
(x29 / 要-03, manner, x30 / 快-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 38,850 microseconds
Sentence: “ 这 是 你 的 过错 ， ” 小 王子 说 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Oracle Span 5:  过错 => 过错
Oracle Span 6:  这 => 这
Spans:
Span 3-4:  你 => 你
Span 8-9:  小 => 小-01
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-01
Span 5-6:  过错 => 过错
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01
Oracle Span 5-6:  过错 => 过错
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	你	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	过错	_	NN	NN	_	3	attr	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	3	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 过错)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 过错, domain, x7 / 这)
(x4 / 过错, poss, x5 / 你)

Input(Some(Graph((说-01 :arg1 (过错 :domain 这 :poss 你) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(5,6,List(1),过错,过错,false), Span(1,2,List(2),这,这,false), Span(3,4,List(3),你,你,false), Span(9,10,List(4),王子,王子,false), Span(8,9,List(5),小,小-01,false)),Map(2 -> 这, 5 -> 小-01, 1 -> 过错, 4 -> 王子, 0 -> 说-01, 3 -> 你),Map(x2 -> 王子, x5 -> 你, x7 -> 这, x4 -> 过错, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@6bedd4e4,Annotation([Ljava.lang.String;@4570d7b6,[Ljava.lang.String;@72b6832e,[Ljava.lang.String;@3850e90c),Annotation([Ljava.lang.String;@3d9f5016,[Ljava.lang.String;@7e91ed74,[Ledu.cmu.lti.nlp.amr.Dependency;@3878be7b),Annotation([Ljava.lang.String;@7df28f1,[Ljava.lang.String;@4087c7fc,[Ljava.lang.String;@318c68d5),Annotation([Ljava.lang.String;@4cfa83f9,[Ljava.lang.String;@321ca237,[Ledu.cmu.lti.nlp.amr.Entity;@4c5a2baf))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, location, x4 / 过错)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 过错, domain, x7 / 这)
(x4 / 过错, poss, x5 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,307 microseconds
Sentence: “ 我 本来 并 不 想 给 你 任何 痛苦 ， 可 你 却 要 我 驯服 你 … ”

Oracle Span 1:  任何 => 任何
Oracle Span 2:  你 => 你
Oracle Span 3:  想 => 想-02
Oracle Span 4:  我 => 我
Oracle Span 5:  本来 => 本来
Oracle Span 6:  痛苦 => 痛苦-01
Oracle Span 7:  给 => 给-01
Oracle Span 8:  要 => 要-04
Oracle Span 9:  驯服 => 驯服-01
Spans:
Span 8-9:  任何 => 任何
Span 7-8:  你 => 你
Span 5-6:  想 => 想-02
Span 1-2:  我 => 我
Span 2-3:  本来 => 本来
Span 9-10:  痛苦 => 痛苦-01
Span 6-7:  给 => 给-01
Span 14-15:  要 => 要-04
Span 16-17:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 8-9:  任何 => 任何
Oracle Span 7-8:  你 => 你
Oracle Span 5-6:  想 => 想-02
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  本来 => 本来
Oracle Span 9-10:  痛苦 => 痛苦-01
Oracle Span 6-7:  给 => 给-01
Oracle Span 14-15:  要 => 要-04
Oracle Span 16-17:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	本来	_	AD	AD	_	6	advmod	_	_
4	并	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	想	_	VV	VV	_	17	conj	_	_
7	给	_	P	P	_	15	prep	_	_
8	你	_	PN	PN	_	10	nn	_	_
9	任何	_	DT	DT	_	10	det	_	_
10	痛苦	_	NN	NN	_	7	pobj	_	_
11	,	_	PU	PU	_	15	punct	_	_
12	可	_	AD	AD	_	15	advmod	_	_
13	你	_	PN	PN	_	15	nsubj	_	_
14	却	_	AD	AD	_	15	advmod	_	_
15	要	_	VV	VV	_	6	ccomp	_	_
16	我	_	PN	PN	_	17	nsubj	_	_
17	驯服	_	VV	VV	_	0	root	_	_
18	你	_	PN	PN	_	19	nn	_	_
19	…	_	NN	NN	_	17	dobj	_	_
20	”	_	PU	PU	_	17	punct	_	_

Oracle:
(x23 / 想-02, arg0, x25 / 我)
(x23 / 想-02, arg1, x27 / 给-01)
(x23 / 想-02, manner, x26 / 本来)
(x27 / 给-01, arg1, x29 / 痛苦-01)
(x27 / 给-01, arg2, x31 / 你)
(x29 / 痛苦-01, mod, x30 / 任何)
(x32 / 要-04, arg2, x39 / 驯服-01)

Input(Some(Graph((say :arg1 (contrast :arg1 (想-02 :arg1 (给-01 :arg2 你 :arg1 (痛苦-01 :mod 任何) :arg0 x25) :manner 本来 :arg0 我 :polarity -) :arg2 (要-04 :arg2 (驯服-01 :arg1 x31 :arg0 x25) :arg1 x25 :arg0 x31))),ArrayBuffer(Span(5,6,List(0),想,想-02,false), Span(6,7,List(1),给,给-01,false), Span(7,8,List(2),你,你,false), Span(9,10,List(3),痛苦,痛苦-01,false), Span(8,9,List(4),任何,任何,false), Span(2,3,List(5),本来,本来,false), Span(1,2,List(6),我,我,false), Span(14,15,List(7),要,要-04,false), Span(16,17,List(8),驯服,驯服-01,false)),Map(2 -> 你, 5 -> 本来, 8 -> 驯服-01, 7 -> 要-04, 1 -> 给-01, 4 -> 任何, 6 -> 我, 0 -> 想-02, 3 -> 痛苦-01),Map(x25 -> 我, x31 -> 你, x39 -> 驯服-01, x30 -> 任何, x27 -> 给-01, x23 -> 想-02, x32 -> 要-04, x26 -> 本来, x29 -> 痛苦-01))),[Ljava.lang.String;@1ec22831,Annotation([Ljava.lang.String;@63f855b,[Ljava.lang.String;@516592b1,[Ljava.lang.String;@4cffcc61),Annotation([Ljava.lang.String;@4373f66f,[Ljava.lang.String;@399ca607,[Ledu.cmu.lti.nlp.amr.Dependency;@44114b9f),Annotation([Ljava.lang.String;@76bf1bb8,[Ljava.lang.String;@2a235b8e,[Ljava.lang.String;@76536c53),Annotation([Ljava.lang.String;@38d08cb5,[Ljava.lang.String;@363c32cc,[Ledu.cmu.lti.nlp.amr.Entity;@6f3f0ae))
AMR:
(x23 / 想-02, manner, x26 / 本来)
(x26 / 本来, beneficiary, x25 / 我)
(x27 / 给-01, subset, x29 / 痛苦-01)
(x27 / 给-01, subset, x31 / 你)
(x27 / 给-01, time, x23 / 想-02)
(x29 / 痛苦-01, mod, x30 / 任何)
(x32 / 要-04, degree, x29 / 痛苦-01)
(x32 / 要-04, example, x39 / 驯服-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.2
WARNING: makeIds can't find span Id: 0.0.0.3.1
WARNING: makeIds can't find span Id: 0.0.0.3.1.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
Decoded in 23,593 microseconds
Sentence: “ 是 这样 的 。 ” 狐狸 说 。

Oracle Span 1:  狐狸 => 狐狸
Oracle Span 2:  说 => 说-01
Oracle Span 3:  这样 => 这样-01
Spans:
Span 6-7:  狐狸 => 狐狸
Span 7-8:  说 => 说-01
Span 2-3:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 7-8:  说 => 说-01
Oracle Span 2-3:  这样 => 这样-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	是	_	VC	VC	_	5	rcmod	_	_
3	这样	_	PN	PN	_	2	attr	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 这样-01)

Input(Some(Graph((说-01 :arg1 这样-01 :arg0 狐狸),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(2,3,List(1),这样,这样-01,false), Span(6,7,List(2),狐狸,狐狸,false)),Map(2 -> 狐狸, 1 -> 这样-01, 0 -> 说-01),Map(x2 -> 狐狸, x3 -> 这样-01, x0 -> 说-01))),[Ljava.lang.String;@6baf25d7,Annotation([Ljava.lang.String;@57a6a933,[Ljava.lang.String;@5b5b59,[Ljava.lang.String;@1934ad7c),Annotation([Ljava.lang.String;@b27b210,[Ljava.lang.String;@69aa7d76,[Ledu.cmu.lti.nlp.amr.Dependency;@33f17289),Annotation([Ljava.lang.String;@f1266c6,[Ljava.lang.String;@3913f206,[Ljava.lang.String;@3e8799f),Annotation([Ljava.lang.String;@3b353651,[Ljava.lang.String;@270d43a7,[Ledu.cmu.lti.nlp.amr.Entity;@1280682))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, time, x3 / 这样-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,573 microseconds
Sentence: “ 你 可 就 要 哭 了 ！ ” 小 王子 说 。

Oracle Span 1:  你 => 你
Oracle Span 2:  哭 => 哭-01
Oracle Span 3:  小 => 小
Oracle Span 4:  就 => 就
Oracle Span 5:  王子 => 王子
Oracle Span 6:  要 => 要-03
Oracle Span 7:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 5-6:  哭 => 哭-01
Span 9-10:  小 => 小
Span 3-4:  就 => 就
Span 10-11:  王子 => 王子
Span 4-5:  要 => 要-03
Span 11-12:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  哭 => 哭-01
Oracle Span 9-10:  小 => 小
Oracle Span 3-4:  就 => 就
Oracle Span 10-11:  王子 => 王子
Oracle Span 4-5:  要 => 要-03
Oracle Span 11-12:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你	_	PN	PN	_	6	xsubj	_	_
3	可	_	VV	VV	_	6	mmod	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	哭	_	VV	VV	_	11	vmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	！	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_
14	你	_	PN	PN	_	6	nsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 要-03)
(x2 / 王子, mod, x3 / 小)
(x4 / 要-03, arg0, x5 / 哭-01)
(x4 / 要-03, manner, x7 / 就)
(x5 / 哭-01, arg0, x6 / 你)

Input(Some(Graph((说-01 :arg1 (要-03 :mode expressive :manner 就 :arg0 (哭-01 :arg0 你)) :arg0 (王子 :mod 小)),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(4,5,List(1),要,要-03,false), Span(3,4,List(2),就,就,false), Span(5,6,List(3),哭,哭-01,false), Span(1,2,List(4),你,你,false), Span(10,11,List(5),王子,王子,false), Span(9,10,List(6),小,小,false)),Map(2 -> 就, 5 -> 王子, 1 -> 要-03, 4 -> 你, 6 -> 小, 0 -> 说-01, 3 -> 哭-01),Map(x2 -> 王子, x5 -> 哭-01, x7 -> 就, x4 -> 要-03, x3 -> 小, x6 -> 你, x0 -> 说-01))),[Ljava.lang.String;@41ccb3b9,Annotation([Ljava.lang.String;@53d9826f,[Ljava.lang.String;@1e84f3c8,[Ljava.lang.String;@5f59ea8c),Annotation([Ljava.lang.String;@7b2ccba5,[Ljava.lang.String;@64f9f455,[Ledu.cmu.lti.nlp.amr.Dependency;@5d5a51b1),Annotation([Ljava.lang.String;@4dc7cd1c,[Ljava.lang.String;@50ab56e2,[Ljava.lang.String;@7b5b5bfe),Annotation([Ljava.lang.String;@74834afd,[Ljava.lang.String;@75fd65c,[Ledu.cmu.lti.nlp.amr.Entity;@d499c13))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小)
(x3 / 小, topic, x5 / 哭-01)
(x4 / 要-03, manner, x7 / 就)
(x4 / 要-03, prep-through, x5 / 哭-01)
(x5 / 哭-01, topic, x6 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,092 microseconds
Sentence: “ 当然 罗 。 ” 狐狸 说 。

Oracle Span 1:  当然 => 当然
Oracle Span 2:  狐狸 => 狐狸
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  当然 => 当然
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  当然 => 当然
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	罗	_	VV	VV	_	6	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 当然)

Input(Some(Graph((说-01 :arg1 当然 :arg0 狐狸),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(1,2,List(1),当然,当然,false), Span(5,6,List(2),狐狸,狐狸,false)),Map(2 -> 狐狸, 1 -> 当然, 0 -> 说-01),Map(x2 -> 狐狸, x3 -> 当然, x0 -> 说-01))),[Ljava.lang.String;@2ceca2ef,Annotation([Ljava.lang.String;@42d6c12d,[Ljava.lang.String;@3b42121d,[Ljava.lang.String;@7a2ab862),Annotation([Ljava.lang.String;@33188612,[Ljava.lang.String;@4733f6f5,[Ledu.cmu.lti.nlp.amr.Dependency;@6ccac6f4),Annotation([Ljava.lang.String;@438c9aa7,[Ljava.lang.String;@3453acd2,[Ljava.lang.String;@6c8f60f3),Annotation([Ljava.lang.String;@56c8e6f0,[Ljava.lang.String;@71b6172c,[Ledu.cmu.lti.nlp.amr.Entity;@58aa10f4))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, time, x3 / 当然)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,657 microseconds
Sentence: “ 那么 你 什么 好处 也 没 得到 。 ”

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  你 => 你
Oracle Span 4:  好处 => 好处
Oracle Span 5:  得到 => 得到-01
Spans:
Span 5-6:  也 => 也
Span 3-4:  什么 => 什么
Span 2-3:  你 => 你
Span 4-5:  好处 => 好处
Span 7-8:  得到 => 得到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 3-4:  什么 => 什么
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  好处 => 好处
Oracle Span 7-8:  得到 => 得到-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	好处	_	NN	NN	_	8	dep	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	没	_	AD	AD	_	8	neg	_	_
8	得到	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 得到-01, arg0, x12 / 你)
(x10 / 得到-01, arg1, x13 / 好处)
(x10 / 得到-01, manner, x15 / 也)
(x13 / 好处, mod, x14 / 什么)

Input(Some(Graph((say :arg1 (causation :arg2 (得到-01 :manner 也 :arg1 (好处 :mod 什么) :arg0 你 :polarity -))),ArrayBuffer(Span(7,8,List(0),得到,得到-01,false), Span(5,6,List(1),也,也,false), Span(4,5,List(2),好处,好处,false), Span(3,4,List(3),什么,什么,false), Span(2,3,List(4),你,你,false)),Map(2 -> 好处, 1 -> 也, 4 -> 你, 0 -> 得到-01, 3 -> 什么),Map(x10 -> 得到-01, x13 -> 好处, x12 -> 你, x15 -> 也, x14 -> 什么))),[Ljava.lang.String;@4fb56bea,Annotation([Ljava.lang.String;@5e5beb8a,[Ljava.lang.String;@1f95881a,[Ljava.lang.String;@17b016ac),Annotation([Ljava.lang.String;@733ec58b,[Ljava.lang.String;@723877dd,[Ledu.cmu.lti.nlp.amr.Dependency;@415ef4d8),Annotation([Ljava.lang.String;@56cc9f29,[Ljava.lang.String;@535b1ae6,[Ljava.lang.String;@626c19cf),Annotation([Ljava.lang.String;@54a2d96e,[Ljava.lang.String;@66a53104,[Ledu.cmu.lti.nlp.amr.Entity;@6d229b1c))
AMR:
(x10 / 得到-01, manner, x15 / 也)
(x10 / 得到-01, unit, x13 / 好处)
(x13 / 好处, domain, x12 / 你)
(x13 / 好处, mod, x14 / 什么)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 9,245 microseconds
Sentence: “ 由于 麦子 颜色 的 缘故 ， 我 还是 得到 了 好处 。 ” 狐狸 说 。

Oracle Span 1:  好处 => 好处
Oracle Span 2:  得到 => 得到-01
Oracle Span 3:  我 => 我
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  缘故 => 缘故
Oracle Span 6:  说 => 说-01
Oracle Span 7:  还是 => 还是
Oracle Span 8:  颜色 => 颜色
Oracle Span 9:  麦子 => 麦子
Spans:
Span 11-12:  好处 => 好处
Span 9-10:  得到 => 得到-01
Span 7-8:  我 => 我
Span 14-15:  狐狸 => 狐狸
Span 5-6:  缘故 => 缘故
Span 15-16:  说 => 说-01
Span 8-9:  还是 => 还是
Span 3-4:  颜色 => 颜色
Span 2-3:  麦子 => 麦子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  好处 => 好处
Oracle Span 9-10:  得到 => 得到-01
Oracle Span 7-8:  我 => 我
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 5-6:  缘故 => 缘故
Oracle Span 15-16:  说 => 说-01
Oracle Span 8-9:  还是 => 还是
Oracle Span 3-4:  颜色 => 颜色
Oracle Span 2-3:  麦子 => 麦子

Dependencies:
1	“	_	PU	PU	_	10	punct	_	_
2	由于	_	P	P	_	10	prep	_	_
3	麦子	_	VV	VV	_	2	pccomp	_	_
4	颜色	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	缘故	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	还是	_	AD	AD	_	10	advmod	_	_
10	得到	_	VV	VV	_	15	vmod	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	好处	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	10	punct	_	_
14	”	_	PU	PU	_	10	punct	_	_
15	狐狸	_	NN	NN	_	16	nsubj	_	_
16	说	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x4 / 缘故, mod, x5 / 颜色)
(x5 / 颜色, poss, x6 / 麦子)
(x8 / 得到-01, arg0, x9 / 我)
(x8 / 得到-01, arg1, x11 / 好处)
(x8 / 得到-01, manner, x10 / 还是)

Input(Some(Graph((说-01 :arg1 (causation :arg1 (缘故 :mod (颜色 :poss 麦子)) :arg2 (得到-01 :arg1 好处 :manner 还是 :arg0 我)) :arg0 狐狸),ArrayBuffer(Span(15,16,List(0),说,说-01,false), Span(5,6,List(1),缘故,缘故,false), Span(3,4,List(2),颜色,颜色,false), Span(2,3,List(3),麦子,麦子,false), Span(9,10,List(4),得到,得到-01,false), Span(11,12,List(5),好处,好处,false), Span(8,9,List(6),还是,还是,false), Span(7,8,List(7),我,我,false), Span(14,15,List(8),狐狸,狐狸,false)),Map(2 -> 颜色, 5 -> 好处, 8 -> 狐狸, 7 -> 我, 1 -> 缘故, 4 -> 得到-01, 6 -> 还是, 0 -> 说-01, 3 -> 麦子),Map(x2 -> 狐狸, x10 -> 还是, x5 -> 颜色, x8 -> 得到-01, x4 -> 缘故, x11 -> 好处, x6 -> 麦子, x9 -> 我, x0 -> 说-01))),[Ljava.lang.String;@6f825516,Annotation([Ljava.lang.String;@2da99821,[Ljava.lang.String;@62cba181,[Ljava.lang.String;@1b482cbf),Annotation([Ljava.lang.String;@661fe025,[Ljava.lang.String;@7161457,[Ledu.cmu.lti.nlp.amr.Dependency;@38ee7a9d),Annotation([Ljava.lang.String;@629984eb,[Ljava.lang.String;@7b1e5e55,[Ljava.lang.String;@4c1d59cd),Annotation([Ljava.lang.String;@76cf841,[Ljava.lang.String;@297c9a9b,[Ledu.cmu.lti.nlp.amr.Entity;@20999517))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, topic, x11 / 好处)
(x4 / 缘故, mod, x5 / 颜色)
(x4 / 缘故, purpose, x8 / 得到-01)
(x5 / 颜色, poss, x6 / 麦子)
(x8 / 得到-01, example, x9 / 我)
(x8 / 得到-01, manner, x10 / 还是)
(x8 / 得到-01, unit, x11 / 好处)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 22,468 microseconds
Sentence: 然后 ， 他 又 接着 说 。 “ 再 去 看看 那些 玫瑰花 吧 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再 => 再-01
Oracle Span 3:  去 => 去-01
Oracle Span 4:  接着 => 接着-01
Oracle Span 5:  玫瑰花 => 玫瑰花
Oracle Span 6:  看看 => 看看-01
Oracle Span 7:  说 => 说-01
Oracle Span 8:  那些 => 那些
Spans:
Span 2-3:  他 => 他
Span 8-9:  再 => 再-01
Span 9-10:  去 => 去-01
Span 4-5:  接着 => 接着-01
Span 12-13:  玫瑰花 => 玫瑰花
Span 10-11:  看看 => 看看-01
Span 5-6:  说 => 说-01
Span 11-12:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 8-9:  再 => 再-01
Oracle Span 9-10:  去 => 去-01
Oracle Span 4-5:  接着 => 接着-01
Oracle Span 12-13:  玫瑰花 => 玫瑰花
Oracle Span 10-11:  看看 => 看看-01
Oracle Span 5-6:  说 => 说-01
Oracle Span 11-12:  那些 => 那些

Dependencies:
1	然后	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	dobj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	接着	_	VV	VV	_	0	root	_	_
6	说	_	VV	VV	_	5	comod	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	去	_	VV	VV	_	11	nsubj	_	_
11	看看	_	VV	VV	_	5	dep	_	_
12	那些	_	DT	DT	_	13	det	_	_
13	玫瑰花	_	NN	NN	_	11	dobj	_	_
14	吧	_	SP	SP	_	11	dep	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 接着-01, arg0, x3 / 他)
(x2 / 接着-01, arg1, x4 / 说-01)
(x4 / 说-01, arg1, x6 / 去-01)
(x6 / 去-01, arg1, x8 / 看看-01)
(x6 / 去-01, manner, x7 / 再-01)
(x8 / 看看-01, arg1, x9 / 玫瑰花)
(x9 / 玫瑰花, mod, x10 / 那些)

Input(Some(Graph((temporal :arg2 (接着-01 :arg1 (说-01 :arg1 (去-01 :arg1 (看看-01 :arg1 (玫瑰花 :mod 那些)) :manner 再-01) :arg0 x3) :arg0 他)),ArrayBuffer(Span(4,5,List(0),接着,接着-01,false), Span(5,6,List(1),说,说-01,false), Span(9,10,List(2),去,去-01,false), Span(10,11,List(3),看看,看看-01,false), Span(12,13,List(4),玫瑰花,玫瑰花,false), Span(11,12,List(5),那些,那些,false), Span(8,9,List(6),再,再-01,false), Span(2,3,List(7),他,他,false)),Map(2 -> 去-01, 5 -> 那些, 7 -> 他, 1 -> 说-01, 4 -> 玫瑰花, 6 -> 再-01, 0 -> 接着-01, 3 -> 看看-01),Map(x10 -> 那些, x2 -> 接着-01, x8 -> 看看-01, x7 -> 再-01, x4 -> 说-01, x3 -> 他, x6 -> 去-01, x9 -> 玫瑰花))),[Ljava.lang.String;@6ec63f8,Annotation([Ljava.lang.String;@66223d94,[Ljava.lang.String;@2bc7db89,[Ljava.lang.String;@479ac2cb),Annotation([Ljava.lang.String;@220c9a63,[Ljava.lang.String;@55b5cd2b,[Ledu.cmu.lti.nlp.amr.Dependency;@40bb4f87),Annotation([Ljava.lang.String;@51a651c1,[Ljava.lang.String;@173f1614,[Ljava.lang.String;@6c184d4d),Annotation([Ljava.lang.String;@7645f03e,[Ljava.lang.String;@158e9f6e,[Ledu.cmu.lti.nlp.amr.Entity;@7a6ea47d))
AMR:
(x2 / 接着-01, prep-on-behalf, x3 / 他)
(x4 / 说-01, ARG5, x7 / 再-01)
(x4 / 说-01, prep-in-addition-to, x2 / 接着-01)
(x6 / 去-01, manner, x7 / 再-01)
(x6 / 去-01, snt10, x8 / 看看-01)
(x8 / 看看-01, ARG5, x10 / 那些)
(x9 / 玫瑰花, mod, x10 / 那些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,059 microseconds
Sentence: 你 一定 会 明白 ， 你 的 那 朵 是 世界 上 独一无二 的 玫瑰 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  世界 => 世界
Oracle Span 3:  会 => 会-02
Oracle Span 4:  你 => 你
Oracle Span 5:  明白 => 明白-01
Oracle Span 6:  独一无二 => 独一无二-01
Oracle Span 7:  玫瑰 => 玫瑰
Oracle Span 8:  那 => 那
Spans:
Span 1-2:  一定 => 一定
Span 10-11:  世界 => 世界
Span 2-3:  会 => 会-02
Span 0-1:  你 => 你
Span 3-4:  明白 => 明白-01
Span 12-13:  独一无二 => 独一无二-01
Span 14-15:  玫瑰 => 玫瑰
Span 7-8:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一定 => 一定
Oracle Span 10-11:  世界 => 世界
Oracle Span 2-3:  会 => 会-02
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 12-13:  独一无二 => 独一无二-01
Oracle Span 14-15:  玫瑰 => 玫瑰
Oracle Span 7-8:  那 => 那

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	一定	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	你	_	PN	PN	_	8	dep	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	那	_	DT	DT	_	10	top	_	_
9	朵	_	M	M	_	8	clf	_	_
10	是	_	VC	VC	_	4	ccomp	_	_
11	世界	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	15	dep	_	_
13	独一无二	_	CD	CD	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	玫瑰	_	NN	NN	_	10	attr	_	_
16	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 明白-01)
(x0 / 会-02, manner, x4 / 一定)
(x2 / 明白-01, arg0, x3 / 你)
(x2 / 明白-01, arg1, x5 / 玫瑰)
(x5 / 玫瑰, domain, x6 / 那)
(x5 / 玫瑰, mod, x8 / 独一无二-01)
(x8 / 独一无二-01, location, x9 / 世界)

Input(Some(Graph((会-02 :manner 一定 :arg0 (明白-01 :arg1 (玫瑰 :mod (独一无二-01 :location 世界) :domain (那 :poss x3)) :arg0 你)),ArrayBuffer(Span(2,3,List(0),会,会-02,false), Span(1,2,List(1),一定,一定,false), Span(3,4,List(2),明白,明白-01,false), Span(14,15,List(3),玫瑰,玫瑰,false), Span(12,13,List(4),独一无二,独一无二-01,false), Span(10,11,List(5),世界,世界,false), Span(7,8,List(6),那,那,false), Span(0,1,List(7),你,你,false)),Map(2 -> 明白-01, 5 -> 世界, 7 -> 你, 1 -> 一定, 4 -> 独一无二-01, 6 -> 那, 0 -> 会-02, 3 -> 玫瑰),Map(x2 -> 明白-01, x5 -> 玫瑰, x8 -> 独一无二-01, x4 -> 一定, x3 -> 你, x6 -> 那, x9 -> 世界, x0 -> 会-02))),[Ljava.lang.String;@54b2fc58,Annotation([Ljava.lang.String;@daf22f0,[Ljava.lang.String;@6cbbb9c4,[Ljava.lang.String;@63f9b562),Annotation([Ljava.lang.String;@20ead579,[Ljava.lang.String;@5426cb36,[Ledu.cmu.lti.nlp.amr.Dependency;@65e22def),Annotation([Ljava.lang.String;@4b1ec694,[Ljava.lang.String;@3d299393,[Ljava.lang.String;@5f34907b),Annotation([Ljava.lang.String;@2b4d4327,[Ljava.lang.String;@16da1abc,[Ledu.cmu.lti.nlp.amr.Entity;@671ea6ff))
AMR:
(x0 / 会-02, op, x2 / 明白-01)
(x2 / 明白-01, op, x5 / 玫瑰)
(x2 / 明白-01, season, x3 / 你)
(x4 / 一定, degree, x0 / 会-02)
(x5 / 玫瑰, domain, x6 / 那)
(x5 / 玫瑰, mod, x8 / 独一无二-01)
(x8 / 独一无二-01, location, x9 / 世界)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 21,240 microseconds
Sentence: 你 回来 和 我 告别 时 ， 我 再 赠送 给 你 一 个 秘密 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  再 => 再-01
Oracle Span 3:  告别 => 告别-01
Oracle Span 4:  回来 => 回来-01
Oracle Span 5:  我 => 我
Oracle Span 6:  秘密 => 秘密
Oracle Span 7:  赠送 => 赠送-01
Spans:
Span 0-1:  你 => 你
Span 8-9:  再 => 再-01
Span 4-5:  告别 => 告别-01
Span 1-2:  回来 => 回来-01
Span 3-4:  我 => 我
Span 14-15:  秘密 => 秘密
Span 9-10:  赠送 => 赠送-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 8-9:  再 => 再-01
Oracle Span 4-5:  告别 => 告别-01
Oracle Span 1-2:  回来 => 回来-01
Oracle Span 3-4:  我 => 我
Oracle Span 14-15:  秘密 => 秘密
Oracle Span 9-10:  赠送 => 赠送-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	回来	_	VV	VV	_	6	lccomp	_	_
3	和	_	CC	CC	_	2	cc	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	告别	_	VV	VV	_	2	conj	_	_
6	时	_	LC	LC	_	10	loc	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	赠送	_	VV	VV	_	0	root	_	_
11	给	_	VV	VV	_	10	dobj	_	_
12	你	_	PN	PN	_	11	dobj	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	个	_	M	M	_	11	range	_	_
15	秘密	_	AD	AD	_	11	advmod	_	_
16	。	_	PU	PU	_	10	punct	_	_
17	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 赠送-01, arg0, x15 / 我)
(x13 / 赠送-01, arg1, x16 / 秘密)
(x13 / 赠送-01, arg2, x18 / 你)
(x13 / 赠送-01, manner, x14 / 再-01)
(x13 / 赠送-01, time, x19 / 回来-01)
(x19 / 回来-01, purpose, x22 / 告别-01)

Input(Some(Graph((say :arg1 (赠送-01 :time (回来-01 :purpose (告别-01 :arg1 x15 :arg0 x18) :arg0 x18) :arg2 你 :arg1 (秘密 :quant 1) :arg0 我 :manner 再-01)),ArrayBuffer(Span(9,10,List(0),赠送,赠送-01,false), Span(1,2,List(1),回来,回来-01,false), Span(4,5,List(2),告别,告别-01,false), Span(0,1,List(3),你,你,false), Span(14,15,List(4),秘密,秘密,false), Span(3,4,List(5),我,我,false), Span(8,9,List(6),再,再-01,false)),Map(2 -> 告别-01, 5 -> 我, 1 -> 回来-01, 4 -> 秘密, 6 -> 再-01, 0 -> 赠送-01, 3 -> 你),Map(x16 -> 秘密, x22 -> 告别-01, x19 -> 回来-01, x13 -> 赠送-01, x15 -> 我, x18 -> 你, x14 -> 再-01))),[Ljava.lang.String;@1c52552f,Annotation([Ljava.lang.String;@5dc769f9,[Ljava.lang.String;@1b0e9707,[Ljava.lang.String;@9b5f3c7),Annotation([Ljava.lang.String;@74024f3,[Ljava.lang.String;@61ae0d43,[Ledu.cmu.lti.nlp.amr.Dependency;@ef718de),Annotation([Ljava.lang.String;@287ae90c,[Ljava.lang.String;@2e1b374c,[Ljava.lang.String;@3fcee3d9),Annotation([Ljava.lang.String;@9c93d16,[Ljava.lang.String;@760487aa,[Ledu.cmu.lti.nlp.amr.Entity;@1526f71))
AMR:
(x13 / 赠送-01, manner, x14 / 再-01)
(x13 / 赠送-01, time, x16 / 秘密)
(x13 / 赠送-01, time, x19 / 回来-01)
(x15 / 我, accompanier, x22 / 告别-01)
(x19 / 回来-01, manner, x18 / 你)
(x19 / 回来-01, purpose, x22 / 告别-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.4.1
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 16,115 microseconds
Sentence: 于是 小 王子 又 去 看 那些 玫瑰 。

Oracle Span 1:  去 => 去-02
Oracle Span 2:  又 => 又
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  玫瑰 => 玫瑰
Oracle Span 6:  看 => 看-02
Oracle Span 7:  那些 => 那些
Spans:
Span 4-5:  去 => 去-02
Span 3-4:  又 => 又
Span 1-2:  小 => 小-01
Span 2-3:  王子 => 王子
Span 7-8:  玫瑰 => 玫瑰
Span 5-6:  看 => 看-02
Span 6-7:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-02
Oracle Span 3-4:  又 => 又
Oracle Span 1-2:  小 => 小-01
Oracle Span 2-3:  王子 => 王子
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 5-6:  看 => 看-02
Oracle Span 6-7:  那些 => 那些

Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	6	nsubj	_	_
4	又	_	AD	AD	_	6	advmod	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	看	_	VV	VV	_	0	root	_	_
7	那些	_	DT	DT	_	8	det	_	_
8	玫瑰	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 去-02, arg0, x13 / 王子)
(x12 / 去-02, arg1, x16 / 看-02)
(x12 / 去-02, manner, x15 / 又)
(x13 / 王子, mod, x14 / 小-01)
(x16 / 看-02, arg1, x18 / 玫瑰)
(x18 / 玫瑰, mod, x19 / 那些)

Input(Some(Graph((causation :arg2 (去-02 :arg1 (看-02 :arg1 (玫瑰 :mod 那些) :arg0 x13) :manner 又 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(4,5,List(0),去,去-02,false), Span(5,6,List(1),看,看-02,false), Span(7,8,List(2),玫瑰,玫瑰,false), Span(6,7,List(3),那些,那些,false), Span(3,4,List(4),又,又,false), Span(2,3,List(5),王子,王子,false), Span(1,2,List(6),小,小-01,false)),Map(2 -> 玫瑰, 5 -> 王子, 1 -> 看-02, 4 -> 又, 6 -> 小-01, 0 -> 去-02, 3 -> 那些),Map(x16 -> 看-02, x19 -> 那些, x13 -> 王子, x12 -> 去-02, x15 -> 又, x18 -> 玫瑰, x14 -> 小-01))),[Ljava.lang.String;@49ca94a9,Annotation([Ljava.lang.String;@9ab310b,[Ljava.lang.String;@5b40de43,[Ljava.lang.String;@49fb0bbd),Annotation([Ljava.lang.String;@5489b1f7,[Ljava.lang.String;@4faf104,[Ledu.cmu.lti.nlp.amr.Dependency;@5995851e),Annotation([Ljava.lang.String;@48a2db72,[Ljava.lang.String;@51bddd98,[Ljava.lang.String;@21c747a),Annotation([Ljava.lang.String;@77d4ac52,[Ljava.lang.String;@29f38091,[Ledu.cmu.lti.nlp.amr.Entity;@161dd92a))
AMR:
(x12 / 去-02, ARG6, x13 / 王子)
(x12 / 去-02, manner, x15 / 又)
(x12 / 去-02, prep-through, x16 / 看-02)
(x13 / 王子, mod, x14 / 小-01)
(x16 / 看-02, op, x18 / 玫瑰)
(x18 / 玫瑰, mod, x19 / 那些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 15,656 microseconds
Sentence: “ 你们 一点 也 不 象 我 的 那 朵 玫瑰 ，

Oracle Span 1:  一点 => 一点
Oracle Span 2:  也 => 也
Oracle Span 3:  你们 => 你们
Oracle Span 4:  我 => 我
Oracle Span 5:  玫瑰 => 玫瑰
Oracle Span 6:  那 => 那
Spans:
Span 2-3:  一点 => 一点
Span 3-4:  也 => 也
Span 1-2:  你们 => 你们
Span 6-7:  我 => 我
Span 10-11:  玫瑰 => 玫瑰
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  一点 => 一点
Oracle Span 3-4:  也 => 也
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  我 => 我
Oracle Span 10-11:  玫瑰 => 玫瑰
Oracle Span 8-9:  那 => 那

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你们	_	PN	PN	_	6	nsubj	_	_
3	一点	_	AD	AD	_	6	advmod	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	象	_	VA	VA	_	0	root	_	_
7	我	_	PN	PN	_	11	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	那	_	DT	DT	_	11	det	_	_
10	朵	_	M	M	_	9	clf	_	_
11	玫瑰	_	NN	NN	_	6	conj	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x16 / 玫瑰, mod, x17 / 那)
(x16 / 玫瑰, poss, x18 / 我)

Input(Some(Graph((say :arg1 (像-01 :polarity - :arg0 你们 :manner 也 :degree 一点 :arg1 (玫瑰 :poss 我 :mod 那))),ArrayBuffer(Span(1,2,List(0),你们,你们,false), Span(3,4,List(1),也,也,false), Span(2,3,List(2),一点,一点,false), Span(10,11,List(3),玫瑰,玫瑰,false), Span(6,7,List(4),我,我,false), Span(8,9,List(5),那,那,false)),Map(2 -> 一点, 5 -> 那, 1 -> 也, 4 -> 我, 0 -> 你们, 3 -> 玫瑰),Map(x16 -> 玫瑰, x13 -> 你们, x15 -> 一点, x18 -> 我, x14 -> 也, x17 -> 那))),[Ljava.lang.String;@77c3c037,Annotation([Ljava.lang.String;@252744a1,[Ljava.lang.String;@10e5bf9c,[Ljava.lang.String;@68c9e023),Annotation([Ljava.lang.String;@1624775,[Ljava.lang.String;@1e7f19b4,[Ledu.cmu.lti.nlp.amr.Dependency;@235b4cb8),Annotation([Ljava.lang.String;@4346808,[Ljava.lang.String;@17fede14,[Ljava.lang.String;@712ac7e6),Annotation([Ljava.lang.String;@86d6bf7,[Ljava.lang.String;@2fbe26da,[Ledu.cmu.lti.nlp.amr.Entity;@4ed15347))
AMR:
(x14 / 也, degree, x15 / 一点)
(x15 / 一点, location, x13 / 你们)
(x16 / 玫瑰, domain, x15 / 一点)
(x16 / 玫瑰, mod, x17 / 那)
(x16 / 玫瑰, poss, x18 / 我)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.4.1
WARNING: makeIds can't find span Id: 0.0.4.0
Decoded in 13,624 microseconds
Sentence: 你们 还 什么 都 不 是 呢 ！ ” 小 王子 对 她们 说 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  你们 => 你们
Oracle Span 3:  她们 => 她们
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说 => 说-01
Spans:
Span 2-3:  什么 => 什么
Span 0-1:  你们 => 你们
Span 12-13:  她们 => 她们
Span 9-10:  小 => 小-01
Span 10-11:  王子 => 王子
Span 13-14:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 0-1:  你们 => 你们
Oracle Span 12-13:  她们 => 她们
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 13-14:  说 => 说-01

Dependencies:
1	你们	_	PN	PN	_	2	nsubj	_	_
2	还	_	VV	VV	_	14	dep	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	都	_	NN	NN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	是	_	VC	VC	_	2	dobj	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	！	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	14	nsubj	_	_
12	对	_	P	P	_	14	prep	_	_
13	她们	_	PN	PN	_	12	pobj	_	_
14	说	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x13 / 什么, domain, x15 / 你们)
(x2 / 说-01, arg0, x4 / 王子)
(x2 / 说-01, arg1, x13 / 什么)
(x2 / 说-01, arg3, x6 / 她们)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph((说-01 :arg1 (什么 :domain 你们 :polarity -) :mode expressive :arg3 她们 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(13,14,List(0),说,说-01,false), Span(2,3,List(1),什么,什么,false), Span(0,1,List(2),你们,你们,false), Span(12,13,List(3),她们,她们,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false)),Map(2 -> 你们, 5 -> 小-01, 1 -> 什么, 4 -> 王子, 0 -> 说-01, 3 -> 她们),Map(x2 -> 说-01, x5 -> 小-01, x13 -> 什么, x15 -> 你们, x4 -> 王子, x6 -> 她们))),[Ljava.lang.String;@6963b88c,Annotation([Ljava.lang.String;@ab24484,[Ljava.lang.String;@54e43bfe,[Ljava.lang.String;@106b014e),Annotation([Ljava.lang.String;@64387c17,[Ljava.lang.String;@7c369270,[Ledu.cmu.lti.nlp.amr.Dependency;@9f86dc3),Annotation([Ljava.lang.String;@41d16cc3,[Ljava.lang.String;@662e682a,[Ljava.lang.String;@2e43c38d),Annotation([Ljava.lang.String;@649f25f3,[Ljava.lang.String;@2e62ead7,[Ledu.cmu.lti.nlp.amr.Entity;@3b98b809))
AMR:
(x13 / 什么, domain, x15 / 你们)
(x2 / 说-01, ARG4, x6 / 她们)
(x4 / 王子, mod, x13 / 什么)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 她们, prep-along-with, x4 / 王子)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,000 microseconds
Sentence: “ 没有 人 驯服 过 你们 ， 你们 也 没有 驯服 过 任何 人 。

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  任何 => 任何
Oracle Span 5:  你们 => 你们
Oracle Span 6:  驯服 => 驯服-01
Oracle Span 7:  驯服 => 驯服-01
Spans:
Span 8-9:  也 => 也
Span 2-3:  人 => 人
Span 13-14:  人 => 人
Span 12-13:  任何 => 任何
Span 5-6:  你们 => 你们
Span 3-4:  驯服 => 驯服-01
Span 10-11:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 2-3:  人 => 人
Oracle Span 13-14:  人 => 人
Oracle Span 12-13:  任何 => 任何
Oracle Span 5-6:  你们 => 你们
Oracle Span 3-4:  驯服 => 驯服-01
Oracle Span 10-11:  驯服 => 驯服-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	驯服	_	VV	VV	_	2	dep	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	你们	_	PN	PN	_	4	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	你们	_	PN	PN	_	11	nsubj	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	没有	_	VV	VV	_	11	neg	_	_
11	驯服	_	VV	VV	_	2	dep	_	_
12	过	_	AS	AS	_	11	asp	_	_
13	任何	_	DT	DT	_	14	det	_	_
14	人	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 驯服-01, arg0, x19 / 人)
(x21 / 驯服-01, arg1, x22 / 你们)
(x23 / 驯服-01, arg1, x27 / 人)
(x23 / 驯服-01, manner, x25 / 也)
(x27 / 人, mod, x28 / 任何)

Input(Some(Graph((say :arg1 (and :op (有-03 :arg1 (人 :arg0-of (驯服-01 :arg1 你们)) :polarity -) :op (驯服-01 :arg1 (人 :mod 任何) :arg0 x22 :manner 也 :polarity -))),ArrayBuffer(Span(2,3,List(0),人,人,false), Span(3,4,List(1),驯服,驯服-01,false), Span(5,6,List(2),你们,你们,false), Span(10,11,List(3),驯服,驯服-01,false), Span(13,14,List(4),人,人,false), Span(12,13,List(5),任何,任何,false), Span(8,9,List(6),也,也,false)),Map(2 -> 你们, 5 -> 任何, 1 -> 驯服-01, 4 -> 人, 6 -> 也, 0 -> 人, 3 -> 驯服-01),Map(x28 -> 任何, x22 -> 你们, x25 -> 也, x19 -> 人, x27 -> 人, x21 -> 驯服-01, x23 -> 驯服-01))),[Ljava.lang.String;@bf75b5c,Annotation([Ljava.lang.String;@16da476c,[Ljava.lang.String;@2fd72332,[Ljava.lang.String;@51f18e31),Annotation([Ljava.lang.String;@60ed12e8,[Ljava.lang.String;@24c8d8be,[Ledu.cmu.lti.nlp.amr.Dependency;@3290b1a6),Annotation([Ljava.lang.String;@6fcd31c3,[Ljava.lang.String;@67bf0480,[Ljava.lang.String;@5503de1),Annotation([Ljava.lang.String;@32faa16c,[Ljava.lang.String;@343fddd9,[Ledu.cmu.lti.nlp.amr.Entity;@2bbb44da))
AMR:
(x21 / 驯服-01, location, x19 / 人)
(x21 / 驯服-01, location, x22 / 你们)
(x23 / 驯服-01, location, x21 / 驯服-01)
(x23 / 驯服-01, location, x28 / 任何)
(x23 / 驯服-01, manner, x25 / 也)
(x27 / 人, mod, x28 / 任何)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.0
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 15,447 microseconds
Sentence: 你们 就 象 我 的 狐狸 过去 那样 ，

Oracle Span 1:  你们 => 你们
Oracle Span 2:  就 => 就
Oracle Span 3:  我 => 我
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  过去 => 过去-01
Spans:
Span 0-1:  你们 => 你们
Span 1-2:  就 => 就
Span 3-4:  我 => 我
Span 5-6:  狐狸 => 狐狸
Span 6-7:  过去 => 过去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  过去 => 过去-01

Dependencies:
1	你们	_	PN	PN	_	7	nsubj	_	_
2	就	_	AD	AD	_	7	advmod	_	_
3	象	_	P	P	_	7	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	狐狸	_	NN	NN	_	3	pobj	_	_
7	过去	_	VV	VV	_	0	root	_	_
8	那样	_	AD	AD	_	7	advmod	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 狐狸, poss, x5 / 我)
(x4 / 狐狸, time, x6 / 过去-01)

Input(Some(Graph((像-01 :arg0 你们 :manner 就 :arg1 (狐狸 :time 过去-01 :poss 我)),ArrayBuffer(Span(0,1,List(0),你们,你们,false), Span(1,2,List(1),就,就,false), Span(5,6,List(2),狐狸,狐狸,false), Span(6,7,List(3),过去,过去-01,false), Span(3,4,List(4),我,我,false)),Map(2 -> 狐狸, 1 -> 就, 4 -> 我, 0 -> 你们, 3 -> 过去-01),Map(x2 -> 你们, x5 -> 我, x4 -> 狐狸, x3 -> 就, x6 -> 过去-01))),[Ljava.lang.String;@2f80cb79,Annotation([Ljava.lang.String;@4816ee24,[Ljava.lang.String;@20d33ea,[Ljava.lang.String;@73613ae5),Annotation([Ljava.lang.String;@5a13fcf3,[Ljava.lang.String;@250b5e5b,[Ledu.cmu.lti.nlp.amr.Dependency;@4ef2ab73),Annotation([Ljava.lang.String;@34be065a,[Ljava.lang.String;@718f805a,[Ljava.lang.String;@e09f1b6),Annotation([Ljava.lang.String;@557b6a37,[Ljava.lang.String;@11b32a14,[Ledu.cmu.lti.nlp.amr.Entity;@1c33e528))
AMR:
(x4 / 狐狸, mod, x3 / 就)
(x4 / 狐狸, poss, x5 / 我)
(x4 / 狐狸, time, x6 / 过去-01)
(x5 / 我, location, x2 / 你们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 8,748 microseconds
Sentence: 它 那时 只 是 和 千万 只 别的 狐狸 一样 的 一 只 狐狸 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  别的 => 别的
Oracle Span 3:  它 => 它
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  狐狸 => 狐狸
Oracle Span 6:  那时 => 那时
Spans:
Span 9-10:  一样 => 一样-02
Span 7-8:  别的 => 别的
Span 0-1:  它 => 它
Span 8-9:  狐狸 => 狐狸
Span 13-14:  狐狸 => 狐狸
Span 1-2:  那时 => 那时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-02
Oracle Span 7-8:  别的 => 别的
Oracle Span 0-1:  它 => 它
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 13-14:  狐狸 => 狐狸
Oracle Span 1-2:  那时 => 那时

Dependencies:
1	它	_	PN	PN	_	4	nsubj	_	_
2	那时	_	NT	NT	_	4	dep	_	_
3	只	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	和	_	P	P	_	10	prep	_	_
6	千万	_	CD	CD	_	7	nummod	_	_
7	只	_	M	M	_	9	clf	_	_
8	别的	_	JJ	JJ	_	9	amod	_	_
9	狐狸	_	NN	NN	_	5	pobj	_	_
10	一样	_	VA	VA	_	14	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	狐狸	_	NN	NN	_	4	attr	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 狐狸, domain, x17 / 它)
(x10 / 狐狸, time, x18 / 那时)
(x13 / 一样-02, arg0, x10 / 狐狸)
(x13 / 一样-02, arg1, x14 / 狐狸)
(x14 / 狐狸, mod, x15 / 别的)

Input(Some(Graph((狐狸 :manner 只是 :time 那时 :domain 它 :arg0-of (一样-02 :arg1 (狐狸 :quant 10000000 :mod 别的)) :quant 1),ArrayBuffer(Span(8,9,List(0),狐狸,狐狸,false), Span(1,2,List(1),那时,那时,false), Span(0,1,List(2),它,它,false), Span(9,10,List(3),一样,一样-02,false), Span(13,14,List(4),狐狸,狐狸,false), Span(7,8,List(5),别的,别的,false)),Map(2 -> 它, 5 -> 别的, 1 -> 那时, 4 -> 狐狸, 0 -> 狐狸, 3 -> 一样-02),Map(x10 -> 狐狸, x13 -> 一样-02, x15 -> 别的, x18 -> 那时, x14 -> 狐狸, x17 -> 它))),[Ljava.lang.String;@5df63359,Annotation([Ljava.lang.String;@53d2d002,[Ljava.lang.String;@5b39a3e6,[Ljava.lang.String;@5820070c),Annotation([Ljava.lang.String;@34208baa,[Ljava.lang.String;@71370fec,[Ledu.cmu.lti.nlp.amr.Dependency;@6707a4bf),Annotation([Ljava.lang.String;@3fc7c734,[Ljava.lang.String;@f0a66bd,[Ljava.lang.String;@460b50df),Annotation([Ljava.lang.String;@1cf336fd,[Ljava.lang.String;@1d0cac30,[Ledu.cmu.lti.nlp.amr.Entity;@41ef1ea2))
AMR:
(x10 / 狐狸, ARG5, x15 / 别的)
(x10 / 狐狸, domain, x17 / 它)
(x10 / 狐狸, time, x18 / 那时)
(x13 / 一样-02, ARG6, x14 / 狐狸)
(x14 / 狐狸, mod, x15 / 别的)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 15,798 microseconds
Sentence: 但是 ， 我 现在 已经 把 它 当成 了 我 的 朋友 ， 于是 它 现在 就 是 世界 上 独一无二 的 了 。 ”

Oracle Span 1:  世界 => 世界
Oracle Span 2:  它 => 它
Oracle Span 3:  就 => 就
Oracle Span 4:  当成 => 当成-01
Oracle Span 5:  我 => 我
Oracle Span 6:  朋友 => 朋友
Oracle Span 7:  独一无二 => 独一无二-01
Oracle Span 8:  现在 => 现在
Oracle Span 9:  现在 => 现在
Spans:
Span 18-19:  世界 => 世界
Span 6-7:  它 => 它
Span 16-17:  就 => 就
Span 7-8:  当成 => 当成-01
Span 2-3:  我 => 我
Span 11-12:  朋友 => 朋友
Span 20-21:  独一无二 => 独一无二-01
Span 3-4:  现在 => 现在
Span 15-16:  现在 => 现在

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  世界 => 世界
Oracle Span 6-7:  它 => 它
Oracle Span 16-17:  就 => 就
Oracle Span 7-8:  当成 => 当成-01
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  朋友 => 朋友
Oracle Span 20-21:  独一无二 => 独一无二-01
Oracle Span 3-4:  现在 => 现在
Oracle Span 15-16:  现在 => 现在

Dependencies:
1	但是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	我	_	PN	PN	_	8	nsubj	_	_
4	现在	_	NT	NT	_	8	dep	_	_
5	已经	_	AD	AD	_	8	advmod	_	_
6	把	_	BA	BA	_	8	ba	_	_
7	它	_	PN	PN	_	8	nsubj	_	_
8	当成	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	朋友	_	NN	NN	_	8	dobj	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	于是	_	AD	AD	_	18	advmod	_	_
15	它	_	PN	PN	_	18	nsubj	_	_
16	现在	_	NT	NT	_	18	dep	_	_
17	就	_	AD	AD	_	18	advmod	_	_
18	是	_	VC	VC	_	8	conj	_	_
19	世界	_	NN	NN	_	20	nsubj	_	_
20	上	_	VV	VV	_	18	attr	_	_
21	独一无二	_	CD	CD	_	20	range	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	了	_	SP	SP	_	8	dep	_	_
24	。	_	PU	PU	_	8	punct	_	_
25	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x26 / 当成-01, arg0, x28 / 我)
(x26 / 当成-01, arg1, x29 / 它)
(x26 / 当成-01, arg2, x30 / 朋友)
(x26 / 当成-01, time, x27 / 现在)

Input(Some(Graph((say :arg1 (contrast :arg2 (causation :arg1 (当成-01 :arg2 (朋友 :poss x28) :arg1 它 :arg0 我 :time 现在) :arg2 (thing :mod 独一无二-01 :location 世界 :manner 就 :domain x29 :time 现在)))),ArrayBuffer(Span(7,8,List(0),当成,当成-01,false), Span(11,12,List(1),朋友,朋友,false), Span(6,7,List(2),它,它,false), Span(2,3,List(3),我,我,false), Span(3,4,List(4),现在,现在,false), Span(20,21,List(5),独一无二,独一无二-01,false), Span(18,19,List(6),世界,世界,false), Span(16,17,List(7),就,就,false), Span(15,16,List(8),现在,现在,false)),Map(2 -> 它, 5 -> 独一无二-01, 8 -> 现在, 7 -> 就, 1 -> 朋友, 4 -> 现在, 6 -> 世界, 0 -> 当成-01, 3 -> 我),Map(x34 -> 世界, x28 -> 我, x37 -> 现在, x30 -> 朋友, x33 -> 独一无二-01, x27 -> 现在, x26 -> 当成-01, x35 -> 就, x29 -> 它))),[Ljava.lang.String;@5dfe23e8,Annotation([Ljava.lang.String;@583fb274,[Ljava.lang.String;@202ae86f,[Ljava.lang.String;@1989e8c6),Annotation([Ljava.lang.String;@35c4697c,[Ljava.lang.String;@104dc1a2,[Ledu.cmu.lti.nlp.amr.Dependency;@67d32a54),Annotation([Ljava.lang.String;@314a31b0,[Ljava.lang.String;@2753316c,[Ljava.lang.String;@59edb4f5),Annotation([Ljava.lang.String;@2792b416,[Ljava.lang.String;@4735d6e5,[Ledu.cmu.lti.nlp.amr.Entity;@79d3473e))
AMR:
(x26 / 当成-01, snt5, x29 / 它)
(x26 / 当成-01, snt5, x30 / 朋友)
(x26 / 当成-01, time, x27 / 现在)
(x26 / 当成-01, time, x37 / 现在)
(x27 / 现在, poss, x28 / 我)
(x33 / 独一无二-01, location, x34 / 世界)
(x33 / 独一无二-01, manner, x35 / 就)
(x34 / 世界, domain, x37 / 现在)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.4
Decoded in 27,135 microseconds
Sentence: 这时 ， 那些 玫瑰花 显得 十分 难堪 。

Oracle Span 1:  十分 => 十分
Oracle Span 2:  显得 => 显得-01
Oracle Span 3:  玫瑰花 => 玫瑰花
Oracle Span 4:  这时 => 这时
Oracle Span 5:  那些 => 那些
Oracle Span 6:  难堪 => 难堪-01
Spans:
Span 5-6:  十分 => 十分
Span 4-5:  显得 => 显得-01
Span 3-4:  玫瑰花 => 玫瑰花
Span 0-1:  这时 => 这时
Span 2-3:  那些 => 那些
Span 6-7:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  十分 => 十分
Oracle Span 4-5:  显得 => 显得-01
Oracle Span 3-4:  玫瑰花 => 玫瑰花
Oracle Span 0-1:  这时 => 这时
Oracle Span 2-3:  那些 => 那些
Oracle Span 6-7:  难堪 => 难堪-01

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	那些	_	DT	DT	_	4	det	_	_
4	玫瑰花	_	NN	NN	_	5	nsubj	_	_
5	显得	_	VV	VV	_	0	root	_	_
6	十分	_	AD	AD	_	7	advmod	_	_
7	难堪	_	VV	VV	_	5	ccomp	_	_
8	。	_	PU	PU	_	5	punct	_	_
9	玫瑰花	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x0 / 显得-01, arg0, x2 / 玫瑰花)
(x0 / 显得-01, arg1, x4 / 难堪-01)
(x0 / 显得-01, time, x6 / 这时)
(x2 / 玫瑰花, mod, x3 / 那些)
(x4 / 难堪-01, degree, x5 / 十分)

Input(Some(Graph((显得-01 :time 这时 :arg1 (难堪-01 :degree 十分) :arg0 (玫瑰花 :mod 那些)),ArrayBuffer(Span(4,5,List(0),显得,显得-01,false), Span(0,1,List(1),这时,这时,false), Span(6,7,List(2),难堪,难堪-01,false), Span(5,6,List(3),十分,十分,false), Span(3,4,List(4),玫瑰花,玫瑰花,false), Span(2,3,List(5),那些,那些,false)),Map(2 -> 难堪-01, 5 -> 那些, 1 -> 这时, 4 -> 玫瑰花, 0 -> 显得-01, 3 -> 十分),Map(x2 -> 玫瑰花, x5 -> 十分, x4 -> 难堪-01, x3 -> 那些, x6 -> 这时, x0 -> 显得-01))),[Ljava.lang.String;@4dad0eed,Annotation([Ljava.lang.String;@7fad214a,[Ljava.lang.String;@164642a4,[Ljava.lang.String;@75cf0de5),Annotation([Ljava.lang.String;@50b0afd7,[Ljava.lang.String;@468173fa,[Ledu.cmu.lti.nlp.amr.Dependency;@62765aec),Annotation([Ljava.lang.String;@6f5bd362,[Ljava.lang.String;@3a401749,[Ljava.lang.String;@7793ad58),Annotation([Ljava.lang.String;@27e2287c,[Ljava.lang.String;@16132f21,[Ledu.cmu.lti.nlp.amr.Entity;@2cd388f5))
AMR:
(x0 / 显得-01, degree, x5 / 十分)
(x0 / 显得-01, manner, x2 / 玫瑰花)
(x0 / 显得-01, time, x6 / 这时)
(x2 / 玫瑰花, mod, x3 / 那些)
(x4 / 难堪-01, degree, x5 / 十分)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,212 microseconds
Sentence: “ 你们 很 美 ， 但 你们 是 空虚 的 。 ” 小 王子 继续 说 ，

Oracle Span 1:  你们 => 你们
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  王子 => 王子
Oracle Span 5:  空虚 => 空虚-01
Oracle Span 6:  继续 => 继续-01
Oracle Span 7:  美 => 美-01
Oracle Span 8:  说 => 说-01
Spans:
Span 1-2:  你们 => 你们
Span 12-13:  小 => 小-01
Span 2-3:  很 => 很
Span 13-14:  王子 => 王子
Span 8-9:  空虚 => 空虚-01
Span 14-15:  继续 => 继续-01
Span 3-4:  美 => 美-01
Span 15-16:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 12-13:  小 => 小-01
Oracle Span 2-3:  很 => 很
Oracle Span 13-14:  王子 => 王子
Oracle Span 8-9:  空虚 => 空虚-01
Oracle Span 14-15:  继续 => 继续-01
Oracle Span 3-4:  美 => 美-01
Oracle Span 15-16:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你们	_	PN	PN	_	8	dep	_	_
3	很	_	AD	AD	_	8	advmod	_	_
4	美	_	NR	NR	_	8	prep	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	但	_	AD	AD	_	8	advmod	_	_
7	你们	_	PN	PN	_	8	prep	_	_
8	是	_	VC	VC	_	0	root	_	_
9	空虚	_	VA	VA	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	。	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	16	nsubj	_	_
15	继续	_	VV	VV	_	16	advmod	_	_
16	说	_	VV	VV	_	8	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x12 / 美-01, arg0, x14 / 你们)
(x12 / 美-01, degree, x13 / 很)
(x5 / 继续-01, arg0, x7 / 王子)
(x5 / 继续-01, arg1, x9 / 说-01)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((继续-01 :arg1 (说-01 :arg1 (contrast :arg1 (美-01 :arg0 你们 :degree 很) :arg2 (空虚-01 :arg0 x14)) :arg0 x7) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(14,15,List(0),继续,继续-01,false), Span(15,16,List(1),说,说-01,false), Span(3,4,List(2),美,美-01,false), Span(1,2,List(3),你们,你们,false), Span(2,3,List(4),很,很,false), Span(8,9,List(5),空虚,空虚-01,false), Span(13,14,List(6),王子,王子,false), Span(12,13,List(7),小,小-01,false)),Map(2 -> 美-01, 5 -> 空虚-01, 7 -> 小-01, 1 -> 说-01, 4 -> 很, 6 -> 王子, 0 -> 继续-01, 3 -> 你们),Map(x13 -> 很, x5 -> 继续-01, x8 -> 小-01, x12 -> 美-01, x7 -> 王子, x15 -> 空虚-01, x14 -> 你们, x9 -> 说-01))),[Ljava.lang.String;@4640195a,Annotation([Ljava.lang.String;@70d77826,[Ljava.lang.String;@7f323b3a,[Ljava.lang.String;@4f169009),Annotation([Ljava.lang.String;@9dada78,[Ljava.lang.String;@4207852d,[Ledu.cmu.lti.nlp.amr.Dependency;@2c829dbc),Annotation([Ljava.lang.String;@57efc6fd,[Ljava.lang.String;@839df62,[Ljava.lang.String;@76e90da5),Annotation([Ljava.lang.String;@4e3e11b9,[Ljava.lang.String;@67cffead,[Ledu.cmu.lti.nlp.amr.Entity;@214beff9))
AMR:
(x12 / 美-01, degree, x13 / 很)
(x12 / 美-01, degree, x14 / 你们)
(x15 / 空虚-01, location, x12 / 美-01)
(x5 / 继续-01, beneficiary, x7 / 王子)
(x5 / 继续-01, purpose, x15 / 空虚-01)
(x7 / 王子, mod, x8 / 小-01)
(x9 / 说-01, direction, x5 / 继续-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,733 microseconds
Sentence: “ 没有 人 能 为 你们 去 死 。

Oracle Span 1:  人 => 人
Oracle Span 2:  你们 => 你们
Oracle Span 3:  死 => 死-01
Oracle Span 4:  能 => 能-01
Spans:
Span 2-3:  人 => 人
Span 5-6:  你们 => 你们
Span 7-8:  死 => 死-01
Span 3-4:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 5-6:  你们 => 你们
Oracle Span 7-8:  死 => 死-01
Oracle Span 3-4:  能 => 能-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	没有	_	VE	VE	_	8	dep	_	_
3	人	_	NN	NN	_	2	dobj	_	_
4	能	_	VV	VV	_	8	mmod	_	_
5	为	_	P	P	_	8	prep	_	_
6	你们	_	PN	PN	_	5	pobj	_	_
7	去	_	MSP	MSP	_	8	prtmod	_	_
8	死	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 死-01, arg0, x14 / 人)
(x13 / 死-01, beneficiary, x15 / 你们)

Input(Some(Graph((say :arg1 (能-01 :arg0 (有-04 :polarity - :arg0 (死-01 :beneficiary 你们 :arg0 人)))),ArrayBuffer(Span(3,4,List(0),能,能-01,false), Span(7,8,List(1),死,死-01,false), Span(5,6,List(2),你们,你们,false), Span(2,3,List(3),人,人,false)),Map(2 -> 你们, 1 -> 死-01, 0 -> 能-01, 3 -> 人),Map(x13 -> 死-01, x15 -> 你们, x14 -> 人, x9 -> 能-01))),[Ljava.lang.String;@1ff15a50,Annotation([Ljava.lang.String;@217c23ce,[Ljava.lang.String;@39de9bda,[Ljava.lang.String;@47148f3f),Annotation([Ljava.lang.String;@52226e57,[Ljava.lang.String;@1200458e,[Ledu.cmu.lti.nlp.amr.Dependency;@5fcd1c5f),Annotation([Ljava.lang.String;@3cc30dee,[Ljava.lang.String;@7d528cf7,[Ljava.lang.String;@6dee8ae6),Annotation([Ljava.lang.String;@5af64ce0,[Ljava.lang.String;@7e7e962d,[Ledu.cmu.lti.nlp.amr.Entity;@17229821))
AMR:
(x13 / 死-01, beneficiary, x15 / 你们)
(x13 / 死-01, purpose, x9 / 能-01)
(x9 / 能-01, manner, x14 / 人)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 5,835 microseconds
Sentence: 当然 ， 我 的 那 朵 玫瑰花 ， 一 个 普通 的 过路人 以为 她 和 你们 一样 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  以为 => 以为-02
Oracle Span 3:  你们 => 你们
Oracle Span 4:  我 => 我
Oracle Span 5:  普通 => 普通-01
Oracle Span 6:  玫瑰花 => 玫瑰花
Oracle Span 7:  那 => 那
Spans:
Span 17-18:  一样 => 一样-02
Span 13-14:  以为 => 以为-02
Span 16-17:  你们 => 你们
Span 2-3:  我 => 我
Span 10-11:  普通 => 普通-01
Span 6-7:  玫瑰花 => 玫瑰花
Span 4-5:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  一样 => 一样-02
Oracle Span 13-14:  以为 => 以为-02
Oracle Span 16-17:  你们 => 你们
Oracle Span 2-3:  我 => 我
Oracle Span 10-11:  普通 => 普通-01
Oracle Span 6-7:  玫瑰花 => 玫瑰花
Oracle Span 4-5:  那 => 那

Dependencies:
1	当然	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	我	_	PN	PN	_	7	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	那	_	DT	DT	_	7	det	_	_
6	朵	_	M	M	_	5	clf	_	_
7	玫瑰花	_	NN	NN	_	14	nsubj	_	_
8	,	_	PU	PU	_	14	punct	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	13	clf	_	_
11	普通	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	过路人	_	NN	NN	_	14	nsubj	_	_
14	以为	_	VV	VV	_	0	root	_	_
15	她	_	PN	PN	_	18	nsubj	_	_
16	和	_	P	P	_	18	prep	_	_
17	你们	_	PN	PN	_	16	pobj	_	_
18	一样	_	VA	VA	_	14	ccomp	_	_
19	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 以为-02, arg1, x5 / 玫瑰花)
(x0 / 以为-02, arg2, x8 / 一样-02)
(x5 / 玫瑰花, mod, x6 / 那)
(x5 / 玫瑰花, poss, x7 / 我)
(x8 / 一样-02, arg1, x10 / 你们)

Input(Some(Graph((以为-02 :arg0 (人 :quant 1 :arg0-of 过路 :mod 普通-01) :arg2 (一样-02 :arg1 你们 :arg0 x5) :arg1 (玫瑰花 :poss 我 :mod 那)),ArrayBuffer(Span(13,14,List(0),以为,以为-02,false), Span(10,11,List(1),普通,普通-01,false), Span(17,18,List(2),一样,一样-02,false), Span(16,17,List(3),你们,你们,false), Span(6,7,List(4),玫瑰花,玫瑰花,false), Span(2,3,List(5),我,我,false), Span(4,5,List(6),那,那,false)),Map(2 -> 一样-02, 5 -> 我, 1 -> 普通-01, 4 -> 玫瑰花, 6 -> 那, 0 -> 以为-02, 3 -> 你们),Map(x16 -> 普通-01, x10 -> 你们, x5 -> 玫瑰花, x8 -> 一样-02, x7 -> 我, x6 -> 那, x0 -> 以为-02))),[Ljava.lang.String;@e829999,Annotation([Ljava.lang.String;@66fb45e5,[Ljava.lang.String;@6cbe68e9,[Ljava.lang.String;@6f5e16cf),Annotation([Ljava.lang.String;@750a04ec,[Ljava.lang.String;@49e2b3c5,[Ledu.cmu.lti.nlp.amr.Dependency;@56846330),Annotation([Ljava.lang.String;@49f3ff41,[Ljava.lang.String;@6cfbbff7,[Ljava.lang.String;@30db5536),Annotation([Ljava.lang.String;@45b32dfe,[Ljava.lang.String;@136ccbfe,[Ledu.cmu.lti.nlp.amr.Entity;@22d9ca63))
AMR:
(x0 / 以为-02, ARG0, x16 / 普通-01)
(x0 / 以为-02, prep-through, x8 / 一样-02)
(x0 / 以为-02, time, x5 / 玫瑰花)
(x5 / 玫瑰花, mod, x6 / 那)
(x5 / 玫瑰花, poss, x7 / 我)
(x8 / 一样-02, ARG5, x10 / 你们)

WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 22,549 microseconds
Sentence: 可是 ， 她 单独 一 朵 就 比 你们 全体 更 重要 ， 因为 她 是 我 浇灌 的 。 因为 她 是 我 放 在 花罩 中 的 。 因为 她 是 我 用 屏风 保护 起来 的 。 因为 她 身上 的 毛虫 （ 除了 留下 两三 只 为了 变 蝴蝶 而外 ） 是 我 除灭 的 。 因为 我 倾听 过 她 的 怨艾 和 自诩 ， 甚至 有时 我 聆听 着 她 的 沉默 。

Oracle Span 1:  你们 => 你们
Oracle Span 2:  保护 => 保护-01
Oracle Span 3:  倾听 => 倾听-01
Oracle Span 4:  全体 => 全体
Oracle Span 5:  单独 => 单独
Oracle Span 6:  变 => 变-01
Oracle Span 7:  她 => 她
Oracle Span 8:  屏风 => 屏风
Oracle Span 9:  怨艾 => 怨艾
Oracle Span 10:  我 => 我
Oracle Span 11:  放 => 放-01
Oracle Span 12:  更 => 更
Oracle Span 13:  有时 => 有时
Oracle Span 14:  毛虫 => 毛虫
Oracle Span 15:  沉默 => 沉默-01
Oracle Span 16:  浇灌 => 浇灌-01
Oracle Span 17:  甚至 => 甚至
Oracle Span 18:  留下 => 留下-01
Oracle Span 19:  聆听 => 聆听-01
Oracle Span 20:  自诩 => 自诩-01
Oracle Span 21:  花罩 => 花罩
Oracle Span 22:  蝴蝶 => 蝴蝶
Oracle Span 23:  身上 => 身上
Oracle Span 24:  重要 => 重要-01
Oracle Span 25:  除了 => 除了
Oracle Span 26:  除灭 => 除灭
Spans:
Span 8-9:  你们 => 你们
Span 36-37:  保护 => 保护-01
Span 62-63:  倾听 => 倾听-01
Span 9-10:  全体 => 全体
Span 3-4:  单独 => 单独
Span 51-52:  变 => 变-01
Span 2-3:  她 => 她
Span 35-36:  屏风 => 屏风
Span 66-67:  怨艾 => 怨艾
Span 16-17:  我 => 我
Span 24-25:  放 => 放-01
Span 10-11:  更 => 更
Span 71-72:  有时 => 有时
Span 44-45:  毛虫 => 毛虫
Span 77-78:  沉默 => 沉默-01
Span 17-18:  浇灌 => 浇灌-01
Span 70-71:  甚至 => 甚至
Span 47-48:  留下 => 留下-01
Span 73-74:  聆听 => 聆听-01
Span 68-69:  自诩 => 自诩-01
Span 26-27:  花罩 => 花罩
Span 52-53:  蝴蝶 => 蝴蝶
Span 42-43:  身上 => 身上
Span 11-12:  重要 => 重要-01
Span 46-47:  除了 => 除了
Span 57-58:  除灭 => 除灭

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 8-9:  你们 => 你们
Oracle Span 36-37:  保护 => 保护-01
Oracle Span 62-63:  倾听 => 倾听-01
Oracle Span 9-10:  全体 => 全体
Oracle Span 3-4:  单独 => 单独
Oracle Span 51-52:  变 => 变-01
Oracle Span 2-3:  她 => 她
Oracle Span 35-36:  屏风 => 屏风
Oracle Span 66-67:  怨艾 => 怨艾
Oracle Span 16-17:  我 => 我
Oracle Span 24-25:  放 => 放-01
Oracle Span 10-11:  更 => 更
Oracle Span 71-72:  有时 => 有时
Oracle Span 44-45:  毛虫 => 毛虫
Oracle Span 77-78:  沉默 => 沉默-01
Oracle Span 17-18:  浇灌 => 浇灌-01
Oracle Span 70-71:  甚至 => 甚至
Oracle Span 47-48:  留下 => 留下-01
Oracle Span 73-74:  聆听 => 聆听-01
Oracle Span 68-69:  自诩 => 自诩-01
Oracle Span 26-27:  花罩 => 花罩
Oracle Span 52-53:  蝴蝶 => 蝴蝶
Oracle Span 42-43:  身上 => 身上
Oracle Span 11-12:  重要 => 重要-01
Oracle Span 46-47:  除了 => 除了
Oracle Span 57-58:  除灭 => 除灭

Dependencies:
1	可是	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	她	_	PN	PN	_	12	nsubj	_	_
4	单独	_	JJ	JJ	_	6	amod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	12	dep	_	_
7	就	_	AD	AD	_	12	advmod	_	_
8	比	_	P	P	_	12	prep	_	_
9	你们	_	PN	PN	_	10	dep	_	_
10	全体	_	DT	DT	_	8	pobj	_	_
11	更	_	AD	AD	_	12	advmod	_	_
12	重要	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	因为	_	CS	CS	_	16	advmod	_	_
15	她	_	PN	PN	_	16	top	_	_
16	是	_	VC	VC	_	12	dep	_	_
17	我	_	PN	PN	_	18	nsubj	_	_
18	浇灌	_	VA	VA	_	16	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	。	_	PU	PU	_	12	punct	_	_
21	因为	_	P	P	_	23	prep	_	_
22	她	_	PN	PN	_	21	pobj	_	_
23	是	_	VC	VC	_	12	conj	_	_
24	我	_	PN	PN	_	25	nsubj	_	_
25	放	_	VV	VV	_	23	attr	_	_
26	在	_	P	P	_	25	prep	_	_
27	花罩	_	NN	NN	_	28	lobj	_	_
28	中	_	LC	LC	_	26	plmod	_	_
29	的	_	DEC	DEC	_	25	cpm	_	_
30	。	_	PU	PU	_	12	punct	_	_
31	因为	_	P	P	_	33	prep	_	_
32	她	_	PN	PN	_	31	pobj	_	_
33	是	_	VC	VC	_	12	conj	_	_
34	我	_	PN	PN	_	38	nsubj	_	_
35	用	_	P	P	_	38	prep	_	_
36	屏风	_	NN	NN	_	37	nn	_	_
37	保护	_	NN	NN	_	35	pobj	_	_
38	起来	_	VV	VV	_	33	attr	_	_
39	的	_	DEC	DEC	_	38	cpm	_	_
40	。	_	PU	PU	_	12	punct	_	_
41	因为	_	P	P	_	43	prep	_	_
42	她	_	PN	PN	_	41	pobj	_	_
43	身上	_	VV	VV	_	45	rcmod	_	_
44	的	_	DEC	DEC	_	43	cpm	_	_
45	毛虫	_	NN	NN	_	56	top	_	_
46	（	_	PU	PU	_	54	punct	_	_
47	除了	_	P	P	_	54	prep	_	_
48	留下	_	VV	VV	_	47	pccomp	_	_
49	两三	_	CD	CD	_	50	nummod	_	_
50	只	_	M	M	_	48	range	_	_
51	为了	_	P	P	_	54	prep	_	_
52	变	_	VV	VV	_	51	pccomp	_	_
53	蝴蝶	_	NN	NN	_	52	dobj	_	_
54	而外	_	VV	VV	_	45	prnmod	_	_
55	）	_	PU	PU	_	54	punct	_	_
56	是	_	VC	VC	_	12	conj	_	_
57	我	_	PN	PN	_	58	nsubj	_	_
58	除灭	_	VA	VA	_	56	attr	_	_
59	的	_	DEC	DEC	_	58	cpm	_	_
60	。	_	PU	PU	_	12	punct	_	_
61	因为	_	P	P	_	74	prep	_	_
62	我	_	PN	PN	_	63	nsubj	_	_
63	倾听	_	VV	VV	_	61	pccomp	_	_
64	过	_	AS	AS	_	63	asp	_	_
65	她	_	PN	PN	_	69	assmod	_	_
66	的	_	DEG	DEG	_	65	assm	_	_
67	怨艾	_	NN	NN	_	69	conj	_	_
68	和	_	CC	CC	_	69	cc	_	_
69	自诩	_	NN	NN	_	63	dobj	_	_
70	,	_	PU	PU	_	74	punct	_	_
71	甚至	_	AD	AD	_	74	advmod	_	_
72	有时	_	AD	AD	_	74	advmod	_	_
73	我	_	PN	PN	_	74	nsubj	_	_
74	聆听	_	VV	VV	_	12	conj	_	_
75	着	_	AS	AS	_	74	asp	_	_
76	她	_	PN	PN	_	78	assmod	_	_
77	的	_	DEG	DEG	_	76	assm	_	_
78	沉默	_	NN	NN	_	74	dobj	_	_
79	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x26 / 除灭, arg1, x28 / 毛虫)
(x28 / 毛虫, location, x29 / 身上)
(x33 / 留下-01, arg2, x37 / 变-01)
(x33 / 留下-01, manner, x39 / 除了)
(x37 / 变-01, arg2, x38 / 蝴蝶)
(x48 / 聆听-01, arg1, x50 / 沉默-01)
(x48 / 聆听-01, degree, x53 / 甚至)
(x48 / 聆听-01, time, x52 / 有时)
(x59 / 浇灌-01, arg0, x60 / 我)
(x59 / 浇灌-01, arg1, x61 / 她)
(x62 / 重要-01, degree, x63 / 更)
(x74 / 放-01, arg2, x78 / 花罩)
(x79 / 保护-01, manner, x82 / 屏风)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg2 (causation :arg1 (浇灌-01 :arg1 她 :arg0 我) :arg2 (重要-01 :arg0 (x61 :arg0-of (mean :arg1 (thing :quant 1 :mod 单独)) :compared-to (你们 :arg0-of (mean :arg1 (thing :mod 全体)))) :degree 更))) :snt4 (除灭 :arg0 x60 :arg1 (毛虫 :arg0-of (mean :arg1 (留下-01 :arg0 x60 :manner 除了 :arg2 (变-01 :arg2 蝴蝶) :arg1 (x28 :quant (between :op 2 :op 3)))) :location (身上 :poss x61))) :snt5 (and :op (倾听-01 :arg0 x60 :arg1 (and :op (怨艾 :poss x61) :op (自诩-01 :poss x61))) :op (聆听-01 :arg0 x60 :degree 甚至 :time 有时 :arg1 (沉默-01 :poss x61))) :snt2 (causation :arg1 (放-01 :arg2 花罩 :arg1 x61 :arg0 x60)) :snt3 (保护-01 :manner 屏风 :arg1 x61 :arg0 x60)),ArrayBuffer(Span(17,18,List(0),浇灌,浇灌-01,false), Span(2,3,List(1),她,她,false), Span(16,17,List(2),我,我,false), Span(11,12,List(3),重要,重要-01,false), Span(3,4,List(4),单独,单独,false), Span(8,9,List(5),你们,你们,false), Span(9,10,List(6),全体,全体,false), Span(10,11,List(7),更,更,false), Span(57,58,List(8),除灭,除灭,false), Span(44,45,List(9),毛虫,毛虫,false), Span(47,48,List(10),留下,留下-01,false), Span(46,47,List(11),除了,除了,false), Span(51,52,List(12),变,变-01,false), Span(52,53,List(13),蝴蝶,蝴蝶,false), Span(42,43,List(14),身上,身上,false), Span(62,63,List(15),倾听,倾听-01,false), Span(66,67,List(16),怨艾,怨艾,false), Span(68,69,List(17),自诩,自诩-01,false), Span(73,74,List(18),聆听,聆听-01,false), Span(70,71,List(19),甚至,甚至,false), Span(71,72,List(20),有时,有时,false), Span(77,78,List(21),沉默,沉默-01,false), Span(24,25,List(22),放,放-01,false), Span(26,27,List(23),花罩,花罩,false), Span(36,37,List(24),保护,保护-01,false), Span(35,36,List(25),屏风,屏风,false)),Map(2 -> 我, 5 -> 你们, 12 -> 变-01, 8 -> 除灭, 15 -> 倾听-01, 21 -> 沉默-01, 18 -> 聆听-01, 24 -> 保护-01, 7 -> 更, 17 -> 自诩-01, 1 -> 她, 23 -> 花罩, 4 -> 单独, 11 -> 除了, 14 -> 身上, 20 -> 有时, 6 -> 全体, 9 -> 毛虫, 0 -> 浇灌-01, 22 -> 放-01, 16 -> 怨艾, 19 -> 甚至, 3 -> 重要-01, 10 -> 留下-01, 25 -> 屏风, 13 -> 蝴蝶),Map(x52 -> 有时, x46 -> 自诩-01, x28 -> 毛虫, x61 -> 她, x37 -> 变-01, x63 -> 更, x78 -> 花罩, x39 -> 除了, x72 -> 全体, x60 -> 我, x48 -> 聆听-01, x33 -> 留下-01, x69 -> 你们, x74 -> 放-01, x68 -> 单独, x62 -> 重要-01, x41 -> 倾听-01, x50 -> 沉默-01, x59 -> 浇灌-01, x44 -> 怨艾, x38 -> 蝴蝶, x26 -> 除灭, x53 -> 甚至, x29 -> 身上, x82 -> 屏风, x79 -> 保护-01))),[Ljava.lang.String;@484149eb,Annotation([Ljava.lang.String;@14c141c0,[Ljava.lang.String;@61874b9d,[Ljava.lang.String;@d611f1c),Annotation([Ljava.lang.String;@4f2d014a,[Ljava.lang.String;@51fc862e,[Ledu.cmu.lti.nlp.amr.Dependency;@a7cf42f),Annotation([Ljava.lang.String;@fe09383,[Ljava.lang.String;@28e0e464,[Ljava.lang.String;@1d98daa0),Annotation([Ljava.lang.String;@70a898b0,[Ljava.lang.String;@7bdf61ad,[Ledu.cmu.lti.nlp.amr.Entity;@54336976))
AMR:
(x26 / 除灭, mod, x37 / 变-01)
(x26 / 除灭, prep-within, x41 / 倾听-01)
(x28 / 毛虫, location, x29 / 身上)
(x28 / 毛虫, mod, x39 / 除了)
(x33 / 留下-01, manner, x39 / 除了)
(x33 / 留下-01, prep-within, x37 / 变-01)
(x37 / 变-01, ARG5, x38 / 蝴蝶)
(x41 / 倾听-01, part, x44 / 怨艾)
(x44 / 怨艾, mod, x46 / 自诩-01)
(x48 / 聆听-01, degree, x53 / 甚至)
(x48 / 聆听-01, prep-within, x50 / 沉默-01)
(x48 / 聆听-01, time, x46 / 自诩-01)
(x48 / 聆听-01, time, x52 / 有时)
(x59 / 浇灌-01, manner, x60 / 我)
(x59 / 浇灌-01, purpose, x62 / 重要-01)
(x62 / 重要-01, degree, x63 / 更)
(x62 / 重要-01, degree, x68 / 单独)
(x62 / 重要-01, manner, x69 / 你们)
(x68 / 单独, snt2, x61 / 她)
(x72 / 全体, degree, x63 / 更)
(x74 / 放-01, ARG6, x78 / 花罩)
(x74 / 放-01, manner, x59 / 浇灌-01)
(x78 / 花罩, mod, x82 / 屏风)
(x79 / 保护-01, location, x29 / 身上)
(x79 / 保护-01, manner, x82 / 屏风)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.1.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0.0
WARNING: makeIds can't find span Id: 0.2.0.0.1
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.2
WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.2
Decoded in 293,432 microseconds
Sentence: 因为 她 是 我 的 玫瑰 。 ”

Oracle Span 1:  她 => 她
Oracle Span 2:  我 => 我
Oracle Span 3:  玫瑰 => 玫瑰
Spans:
Span 1-2:  她 => 她
Span 3-4:  我 => 我
Span 5-6:  玫瑰 => 玫瑰

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  她 => 她
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  玫瑰 => 玫瑰

Dependencies:
1	因为	_	P	P	_	3	prep	_	_
2	她	_	PN	PN	_	1	pobj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	玫瑰	_	NN	NN	_	3	attr	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 玫瑰, domain, x14 / 她)
(x12 / 玫瑰, poss, x13 / 我)

Input(Some(Graph((say :arg1 (causation :arg1 (玫瑰 :domain 她 :poss 我))),ArrayBuffer(Span(5,6,List(0),玫瑰,玫瑰,false), Span(1,2,List(1),她,她,false), Span(3,4,List(2),我,我,false)),Map(2 -> 我, 1 -> 她, 0 -> 玫瑰),Map(x13 -> 我, x12 -> 玫瑰, x14 -> 她))),[Ljava.lang.String;@f25f48a,Annotation([Ljava.lang.String;@3b7c80c6,[Ljava.lang.String;@3b2e5c0d,[Ljava.lang.String;@7499eac7),Annotation([Ljava.lang.String;@5438c17a,[Ljava.lang.String;@b9d018b,[Ledu.cmu.lti.nlp.amr.Dependency;@429aeac1),Annotation([Ljava.lang.String;@79eeff87,[Ljava.lang.String;@6b4fc2d1,[Ljava.lang.String;@8bd076a),Annotation([Ljava.lang.String;@1de4285e,[Ljava.lang.String;@1378eea2,[Ledu.cmu.lti.nlp.amr.Entity;@634ff56))
AMR:
(x12 / 玫瑰, domain, x14 / 她)
(x12 / 玫瑰, poss, x13 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,182 microseconds
Sentence: 他 又 回到 了 狐狸 身边 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  回到 => 回到-01
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  身边 => 身边
Spans:
Span 0-1:  他 => 他
Span 1-2:  又 => 又
Span 2-3:  回到 => 回到-01
Span 4-5:  狐狸 => 狐狸
Span 5-6:  身边 => 身边

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  又 => 又
Oracle Span 2-3:  回到 => 回到-01
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  身边 => 身边

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	回到	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	狐狸	_	NN	NN	_	6	nn	_	_
6	身边	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回到-01, arg0, x2 / 他)
(x0 / 回到-01, arg1, x4 / 身边)
(x0 / 回到-01, manner, x3 / 又)
(x4 / 身边, mod, x5 / 狐狸)

Input(Some(Graph((回到-01 :arg1 (身边 :mod 狐狸) :manner 又 :arg0 他),ArrayBuffer(Span(2,3,List(0),回到,回到-01,false), Span(5,6,List(1),身边,身边,false), Span(4,5,List(2),狐狸,狐狸,false), Span(1,2,List(3),又,又,false), Span(0,1,List(4),他,他,false)),Map(2 -> 狐狸, 1 -> 身边, 4 -> 他, 0 -> 回到-01, 3 -> 又),Map(x2 -> 他, x5 -> 狐狸, x4 -> 身边, x3 -> 又, x0 -> 回到-01))),[Ljava.lang.String;@66522ead,Annotation([Ljava.lang.String;@5a484ce1,[Ljava.lang.String;@e91b4f4,[Ljava.lang.String;@2ffe243f),Annotation([Ljava.lang.String;@58ae402b,[Ljava.lang.String;@4099209b,[Ledu.cmu.lti.nlp.amr.Dependency;@43ac0a68),Annotation([Ljava.lang.String;@1dad01fe,[Ljava.lang.String;@3728a578,[Ljava.lang.String;@3e3cd6fe),Annotation([Ljava.lang.String;@1de0641b,[Ljava.lang.String;@68b734a8,[Ledu.cmu.lti.nlp.amr.Entity;@1a464fa3))
AMR:
(x0 / 回到-01, ARG6, x2 / 他)
(x0 / 回到-01, manner, x3 / 又)
(x0 / 回到-01, snt3, x4 / 身边)
(x4 / 身边, mod, x5 / 狐狸)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,519 microseconds
Sentence: “ 再见 了 。 ” 小 王子 说道 。

Oracle Span 1:  再见 => 再见
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说道 => 说道-01
Spans:
Span 1-2:  再见 => 再见
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	7	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x0 / 说道-01, arg1, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说道-01 :arg1 再见 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(1,2,List(1),再见,再见,false), Span(6,7,List(2),王子,王子,false), Span(5,6,List(3),小,小-01,false)),Map(2 -> 王子, 1 -> 再见, 0 -> 说道-01, 3 -> 小-01),Map(x2 -> 王子, x4 -> 再见, x3 -> 小-01, x0 -> 说道-01))),[Ljava.lang.String;@4215e133,Annotation([Ljava.lang.String;@5ccb85d6,[Ljava.lang.String;@d88f893,[Ljava.lang.String;@259b85d6),Annotation([Ljava.lang.String;@48eaf42f,[Ljava.lang.String;@488f3dd1,[Ledu.cmu.lti.nlp.amr.Dependency;@2091833),Annotation([Ljava.lang.String;@7bc58891,[Ljava.lang.String;@6411504a,[Ljava.lang.String;@554188ac),Annotation([Ljava.lang.String;@1f43cab7,[Ljava.lang.String;@481558ce,[Ledu.cmu.lti.nlp.amr.Entity;@2668c286))
AMR:
(x0 / 说道-01, conj-as-if, x2 / 王子)
(x0 / 说道-01, manner, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,477 microseconds
Sentence: “ 再见 。 ” 狐狸 说 。

Oracle Span 1:  再见 => 再见
Oracle Span 2:  狐狸 => 狐狸
Oracle Span 3:  说 => 说-01
Spans:
Span 1-2:  再见 => 再见
Span 4-5:  狐狸 => 狐狸
Span 5-6:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	狐狸	_	NN	NN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 再见)

Input(Some(Graph((说-01 :arg1 再见 :arg0 狐狸),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(1,2,List(1),再见,再见,false), Span(4,5,List(2),狐狸,狐狸,false)),Map(2 -> 狐狸, 1 -> 再见, 0 -> 说-01),Map(x2 -> 狐狸, x3 -> 再见, x0 -> 说-01))),[Ljava.lang.String;@7f353a0f,Annotation([Ljava.lang.String;@7ea2412c,[Ljava.lang.String;@1c93b51e,[Ljava.lang.String;@7c0f28f8),Annotation([Ljava.lang.String;@2abc8034,[Ljava.lang.String;@467b0f6e,[Ledu.cmu.lti.nlp.amr.Dependency;@474179fa),Annotation([Ljava.lang.String;@420cd102,[Ljava.lang.String;@c7f4457,[Ljava.lang.String;@12e12ac9),Annotation([Ljava.lang.String;@5e230fc6,[Ljava.lang.String;@7a8341c1,[Ledu.cmu.lti.nlp.amr.Entity;@ca8ef3a))
AMR:
(x0 / 说-01, ARG1, x2 / 狐狸)
(x0 / 说-01, topic, x3 / 再见)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,060 microseconds
Sentence: “ 喏 ， 这 就 是 我 的 秘密 。 很 简单 ： 只有 用 心 才 能 看 得 清 。 实质性 的 东西 ， 用 眼睛 是 看 不 见 的 。 ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  喏 => 喏
Oracle Span 3:  实质性 => 实质性
Oracle Span 4:  就 => 就
Oracle Span 5:  很 => 很
Oracle Span 6:  我 => 我
Oracle Span 7:  用 => 用-01
Oracle Span 8:  眼睛 => 眼睛
Oracle Span 9:  秘密 => 秘密
Oracle Span 10:  简单 => 简单-01
Oracle Span 11:  能 => 能-01
Oracle Span 12:  这 => 这
Spans:
Span 24-25:  东西 => 东西
Span 1-2:  喏 => 喏
Span 22-23:  实质性 => 实质性
Span 4-5:  就 => 就
Span 10-11:  很 => 很
Span 6-7:  我 => 我
Span 14-15:  用 => 用-01
Span 27-28:  眼睛 => 眼睛
Span 8-9:  秘密 => 秘密
Span 11-12:  简单 => 简单-01
Span 17-18:  能 => 能-01
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 24-25:  东西 => 东西
Oracle Span 1-2:  喏 => 喏
Oracle Span 22-23:  实质性 => 实质性
Oracle Span 4-5:  就 => 就
Oracle Span 10-11:  很 => 很
Oracle Span 6-7:  我 => 我
Oracle Span 14-15:  用 => 用-01
Oracle Span 27-28:  眼睛 => 眼睛
Oracle Span 8-9:  秘密 => 秘密
Oracle Span 11-12:  简单 => 简单-01
Oracle Span 17-18:  能 => 能-01
Oracle Span 3-4:  这 => 这

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	喏	_	VV	VV	_	12	dep	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	这	_	PN	PN	_	5	nsubj	_	_
5	就	_	P	P	_	2	ccomp	_	_
6	是	_	VC	VC	_	5	pccomp	_	_
7	我	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	秘密	_	AD	AD	_	6	advmod	_	_
10	。	_	PU	PU	_	2	punct	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	简单	_	VA	VA	_	0	root	_	_
13	：	_	PU	PU	_	12	punct	_	_
14	只有	_	CS	CS	_	21	advmod	_	_
15	用	_	P	P	_	21	prep	_	_
16	心	_	NN	NN	_	15	pobj	_	_
17	才	_	AD	AD	_	21	advmod	_	_
18	能	_	VV	VV	_	21	mmod	_	_
19	看	_	VV	VV	_	21	dep	_	_
20	得	_	DER	DER	_	21	dep	_	_
21	清	_	JJ	JJ	_	12	dep	_	_
22	。	_	PU	PU	_	12	punct	_	_
23	实质性	_	JJ	JJ	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	东西	_	NN	NN	_	30	nsubj	_	_
26	,	_	PU	PU	_	30	punct	_	_
27	用	_	P	P	_	30	prep	_	_
28	眼睛	_	NN	NN	_	27	pobj	_	_
29	是	_	VC	VC	_	30	cop	_	_
30	看	_	VV	VV	_	12	dep	_	_
31	不	_	AD	AD	_	32	neg	_	_
32	见	_	VV	VV	_	30	dobj	_	_
33	的	_	DEC	DEC	_	32	cpm	_	_
34	。	_	PU	PU	_	12	punct	_	_
35	”	_	PU	PU	_	12	punct	_	_
36	是	_	VC	VC	_	30	conj	_	_

Oracle:
(x24 / 秘密, domain, x27 / 这)
(x24 / 秘密, manner, x26 / 就)
(x24 / 秘密, mod, x28 / 简单-01)
(x24 / 秘密, poss, x25 / 我)
(x28 / 简单-01, degree, x29 / 很)
(x38 / 东西, mod, x39 / 实质性)
(x41 / 用-01, arg1, x40 / 眼睛)

Input(Some(Graph((say :arg1 (and :op 喏 :op (秘密 :arg0-of (mean :arg1 (and :op (condition :arg1 用心-01 :arg2 (能-01 :arg0 看清-01))) :op (看见-01 :polarity - :arg1 (东西 :mod 实质性) :instrument (眼睛 :arg1-of 用-01))) :mod (简单-01 :degree 很) :domain 这 :manner 就 :poss 我))),ArrayBuffer(Span(1,2,List(0),喏,喏,false), Span(8,9,List(1),秘密,秘密,false), Span(17,18,List(2),能,能-01,false), Span(24,25,List(3),东西,东西,false), Span(22,23,List(4),实质性,实质性,false), Span(27,28,List(5),眼睛,眼睛,false), Span(14,15,List(6),用,用-01,false), Span(11,12,List(7),简单,简单-01,false), Span(10,11,List(8),很,很,false), Span(3,4,List(9),这,这,false), Span(4,5,List(10),就,就,false), Span(6,7,List(11),我,我,false)),Map(2 -> 能-01, 5 -> 眼睛, 8 -> 很, 7 -> 简单-01, 1 -> 秘密, 4 -> 实质性, 11 -> 我, 6 -> 用-01, 9 -> 这, 0 -> 喏, 10 -> 就, 3 -> 东西),Map(x28 -> 简单-01, x34 -> 能-01, x40 -> 眼睛, x25 -> 我, x39 -> 实质性, x27 -> 这, x24 -> 秘密, x41 -> 用-01, x23 -> 喏, x38 -> 东西, x26 -> 就, x29 -> 很))),[Ljava.lang.String;@17043b04,Annotation([Ljava.lang.String;@511f5b1d,[Ljava.lang.String;@31f295b6,[Ljava.lang.String;@7a687d8d),Annotation([Ljava.lang.String;@4c82b5df,[Ljava.lang.String;@67eec8e1,[Ledu.cmu.lti.nlp.amr.Dependency;@4214ae8f),Annotation([Ljava.lang.String;@7ba93755,[Ljava.lang.String;@22dc59b2,[Ljava.lang.String;@33e434c8),Annotation([Ljava.lang.String;@546394ed,[Ljava.lang.String;@664212ab,[Ledu.cmu.lti.nlp.amr.Entity;@2693c618))
AMR:
(x24 / 秘密, domain, x23 / 喏)
(x24 / 秘密, domain, x27 / 这)
(x24 / 秘密, manner, x26 / 就)
(x24 / 秘密, mod, x28 / 简单-01)
(x24 / 秘密, poss, x25 / 我)
(x28 / 简单-01, degree, x29 / 很)
(x34 / 能-01, location, x39 / 实质性)
(x38 / 东西, location, x40 / 眼睛)
(x38 / 东西, mod, x39 / 实质性)
(x41 / 用-01, manner, x28 / 简单-01)
(x41 / 用-01, prep-as, x34 / 能-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.4.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.4.1.1
WARNING: makeIds can't find span Id: 0.0.1.4.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.4.1.2
WARNING: makeIds can't find span Id: 0.0.1.4.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.0
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 49,949 microseconds
Sentence: “ 实质性 的 东西 ， 用 眼睛 是 看 不 见 的 。 ” 小 王子 重复 着 这 句 话 ， 以便 能 把 它 记 在 心 间 。

Oracle Span 1:  东西 => 东西
Oracle Span 2:  实质性 => 实质性
Oracle Span 3:  小 => 小-01
Oracle Span 4:  心 => 心
Oracle Span 5:  王子 => 王子
Oracle Span 6:  眼睛 => 眼睛
Oracle Span 7:  能 => 能-01
Oracle Span 8:  记 => 记-02
Oracle Span 9:  话 => 话
Oracle Span 10:  这 => 这
Oracle Span 11:  重复 => 重复-01
Spans:
Span 3-4:  东西 => 东西
Span 1-2:  实质性 => 实质性
Span 14-15:  小 => 小-01
Span 28-29:  心 => 心
Span 15-16:  王子 => 王子
Span 6-7:  眼睛 => 眼睛
Span 23-24:  能 => 能-01
Span 26-27:  记 => 记-02
Span 20-21:  话 => 话
Span 18-19:  这 => 这
Span 16-17:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  东西 => 东西
Oracle Span 1-2:  实质性 => 实质性
Oracle Span 14-15:  小 => 小-01
Oracle Span 28-29:  心 => 心
Oracle Span 15-16:  王子 => 王子
Oracle Span 6-7:  眼睛 => 眼睛
Oracle Span 23-24:  能 => 能-01
Oracle Span 26-27:  记 => 记-02
Oracle Span 20-21:  话 => 话
Oracle Span 18-19:  这 => 这
Oracle Span 16-17:  重复 => 重复-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	实质性	_	JJ	JJ	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	东西	_	NN	NN	_	8	dep	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	用	_	P	P	_	8	prep	_	_
7	眼睛	_	NN	NN	_	6	pobj	_	_
8	是	_	VC	VC	_	27	dep	_	_
9	看	_	VV	VV	_	11	mmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	见	_	VV	VV	_	8	attr	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	。	_	PU	PU	_	8	punct	_	_
14	”	_	PU	PU	_	8	punct	_	_
15	小	_	JJ	JJ	_	16	amod	_	_
16	王子	_	NN	NN	_	27	nsubj	_	_
17	重复	_	JJ	JJ	_	21	amod	_	_
18	着	_	VV	VV	_	21	rcmod	_	_
19	这	_	DT	DT	_	21	det	_	_
20	句	_	CD	CD	_	19	dep	_	_
21	话	_	NN	NN	_	27	nsubj	_	_
22	,	_	PU	PU	_	27	punct	_	_
23	以便	_	AD	AD	_	27	advmod	_	_
24	能	_	VV	VV	_	27	mmod	_	_
25	把	_	BA	BA	_	27	ba	_	_
26	它	_	PN	PN	_	27	nsubj	_	_
27	记	_	VV	VV	_	0	root	_	_
28	在	_	P	P	_	27	prep	_	_
29	心	_	NN	NN	_	30	lobj	_	_
30	间	_	LC	LC	_	28	plmod	_	_
31	。	_	PU	PU	_	27	punct	_	_

Oracle:
(x21 / 重复-01, arg0, x23 / 王子)
(x21 / 重复-01, arg1, x25 / 话)
(x21 / 重复-01, purpose, x33 / 能-01)
(x23 / 王子, mod, x24 / 小-01)
(x25 / 话, mod, x26 / 这)
(x30 / 东西, mod, x31 / 实质性)
(x33 / 能-01, arg0, x34 / 记-02)
(x34 / 记-02, location, x37 / 心)

Input(Some(Graph((重复-01 :purpose (能-01 :arg0 (记-02 :location 心 :arg1 x25 :arg0 x23)) :arg1 (话 :arg0-of (mean :arg1 (看见-01 :polarity - :arg1 (东西 :mod 实质性) :instrument 眼睛)) :mod 这) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(16,17,List(0),重复,重复-01,false), Span(23,24,List(1),能,能-01,false), Span(26,27,List(2),记,记-02,false), Span(28,29,List(3),心,心,false), Span(20,21,List(4),话,话,false), Span(3,4,List(5),东西,东西,false), Span(1,2,List(6),实质性,实质性,false), Span(6,7,List(7),眼睛,眼睛,false), Span(18,19,List(8),这,这,false), Span(15,16,List(9),王子,王子,false), Span(14,15,List(10),小,小-01,false)),Map(2 -> 记-02, 5 -> 东西, 8 -> 这, 7 -> 眼睛, 1 -> 能-01, 4 -> 话, 6 -> 实质性, 9 -> 王子, 0 -> 重复-01, 10 -> 小-01, 3 -> 心),Map(x34 -> 记-02, x37 -> 心, x25 -> 话, x31 -> 实质性, x30 -> 东西, x33 -> 能-01, x21 -> 重复-01, x24 -> 小-01, x23 -> 王子, x26 -> 这, x32 -> 眼睛))),[Ljava.lang.String;@3443e476,Annotation([Ljava.lang.String;@7ccfdaef,[Ljava.lang.String;@a6e4897,[Ljava.lang.String;@32f5ecc4),Annotation([Ljava.lang.String;@19bedeb8,[Ljava.lang.String;@1ba467c2,[Ledu.cmu.lti.nlp.amr.Dependency;@63f6bed1),Annotation([Ljava.lang.String;@7ef8eda7,[Ljava.lang.String;@115ca7de,[Ljava.lang.String;@29fe4840),Annotation([Ljava.lang.String;@7f287b98,[Ljava.lang.String;@4684240f,[Ledu.cmu.lti.nlp.amr.Entity;@32120956))
AMR:
(x21 / 重复-01, manner, x32 / 眼睛)
(x21 / 重复-01, purpose, x25 / 话)
(x21 / 重复-01, topic, x23 / 王子)
(x23 / 王子, mod, x24 / 小-01)
(x25 / 话, mod, x26 / 这)
(x30 / 东西, location, x32 / 眼睛)
(x30 / 东西, mod, x31 / 实质性)
(x33 / 能-01, prep-through, x34 / 记-02)
(x33 / 能-01, time, x25 / 话)
(x34 / 记-02, location, x37 / 心)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 38,346 microseconds
Sentence: “ 正 因为 你 为 你 的 玫瑰 花费 了 时间 ， 这 才 使 你 的 玫瑰 变得 如此 重要 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  使 => 使-01
Oracle Span 3:  变得 => 变得-01
Oracle Span 4:  如此 => 如此-01
Oracle Span 5:  才 => 才
Oracle Span 6:  时间 => 时间
Oracle Span 7:  玫瑰 => 玫瑰
Oracle Span 8:  花费 => 花费-01
Oracle Span 9:  这 => 这
Oracle Span 10:  重要 => 重要-01
Spans:
Span 3-4:  你 => 你
Span 14-15:  使 => 使-01
Span 18-19:  变得 => 变得-01
Span 19-20:  如此 => 如此-01
Span 13-14:  才 => 才
Span 10-11:  时间 => 时间
Span 7-8:  玫瑰 => 玫瑰
Span 8-9:  花费 => 花费-01
Span 12-13:  这 => 这
Span 20-21:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 14-15:  使 => 使-01
Oracle Span 18-19:  变得 => 变得-01
Oracle Span 19-20:  如此 => 如此-01
Oracle Span 13-14:  才 => 才
Oracle Span 10-11:  时间 => 时间
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 8-9:  花费 => 花费-01
Oracle Span 12-13:  这 => 这
Oracle Span 20-21:  重要 => 重要-01

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	正	_	AD	AD	_	9	advmod	_	_
3	因为	_	P	P	_	9	prep	_	_
4	你	_	PN	PN	_	5	top	_	_
5	为	_	VC	VC	_	3	pccomp	_	_
6	你	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	玫瑰	_	NN	NN	_	5	attr	_	_
9	花费	_	VV	VV	_	15	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	时间	_	NN	NN	_	9	dobj	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	这	_	PN	PN	_	15	nsubj	_	_
14	才	_	AD	AD	_	15	advmod	_	_
15	使	_	VV	VV	_	0	root	_	_
16	你	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	玫瑰	_	NN	NN	_	15	dobj	_	_
19	变得	_	VV	VV	_	21	mmod	_	_
20	如此	_	AD	AD	_	21	advmod	_	_
21	重要	_	VA	VA	_	15	dep	_	_
22	。	_	PU	PU	_	15	punct	_	_
23	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x20 / 花费-01, arg0, x21 / 你)
(x20 / 花费-01, arg1, x22 / 时间)
(x20 / 花费-01, arg2, x23 / 玫瑰)
(x25 / 使-01, arg0, x27 / 这)
(x25 / 使-01, arg2, x29 / 变得-01)
(x25 / 使-01, manner, x26 / 才)
(x29 / 变得-01, arg1, x31 / 重要-01)
(x31 / 重要-01, degree, x32 / 如此-01)

Input(Some(Graph((say :arg1 (causation :arg1 (花费-01 :arg2 (玫瑰 :poss x21) :arg1 时间 :arg0 你) :arg2 (使-01 :arg2 (变得-01 :arg1 (重要-01 :degree 如此-01) :arg0 x23) :arg1 x23 :arg0 这 :manner 才))),ArrayBuffer(Span(8,9,List(0),花费,花费-01,false), Span(7,8,List(1),玫瑰,玫瑰,false), Span(10,11,List(2),时间,时间,false), Span(3,4,List(3),你,你,false), Span(14,15,List(4),使,使-01,false), Span(18,19,List(5),变得,变得-01,false), Span(20,21,List(6),重要,重要-01,false), Span(19,20,List(7),如此,如此-01,false), Span(12,13,List(8),这,这,false), Span(13,14,List(9),才,才,false)),Map(2 -> 时间, 5 -> 变得-01, 8 -> 这, 7 -> 如此-01, 1 -> 玫瑰, 4 -> 使-01, 6 -> 重要-01, 9 -> 才, 0 -> 花费-01, 3 -> 你),Map(x22 -> 时间, x25 -> 使-01, x31 -> 重要-01, x27 -> 这, x21 -> 你, x23 -> 玫瑰, x26 -> 才, x32 -> 如此-01, x29 -> 变得-01, x20 -> 花费-01))),[Ljava.lang.String;@6975fb1c,Annotation([Ljava.lang.String;@553da911,[Ljava.lang.String;@327e5be5,[Ljava.lang.String;@1084ac45),Annotation([Ljava.lang.String;@566f1852,[Ljava.lang.String;@6ea246af,[Ledu.cmu.lti.nlp.amr.Dependency;@2e4389ed),Annotation([Ljava.lang.String;@1b90fee4,[Ljava.lang.String;@3513c84c,[Ljava.lang.String;@4978777f),Annotation([Ljava.lang.String;@7bc6935c,[Ljava.lang.String;@67bd351e,[Ledu.cmu.lti.nlp.amr.Entity;@4cc7d00d))
AMR:
(x20 / 花费-01, prep-through, x22 / 时间)
(x20 / 花费-01, topic, x23 / 玫瑰)
(x23 / 玫瑰, poss, x21 / 你)
(x25 / 使-01, domain, x27 / 这)
(x25 / 使-01, manner, x26 / 才)
(x25 / 使-01, purpose, x29 / 变得-01)
(x25 / 使-01, time, x22 / 时间)
(x29 / 变得-01, example, x32 / 如此-01)
(x31 / 重要-01, degree, x32 / 如此-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3
WARNING: makeIds can't find span Id: 0.0.1.3.1
WARNING: makeIds can't find span Id: 0.0.1.3.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 31,925 microseconds
Sentence: “ 正 因为 你 为 你 的 玫瑰 花费 了 时间 … ” 小 王子 又 重复 着 ， 要 使 自己 记住 这些 。

Oracle Span 1:  你 => 你
Oracle Span 2:  使 => 使-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  时间 => 时间
Oracle Span 5:  王子 => 王子
Oracle Span 6:  玫瑰 => 玫瑰
Oracle Span 7:  花费 => 花费-01
Oracle Span 8:  记住 => 记住-01
Oracle Span 9:  重复 => 重复-01
Spans:
Span 3-4:  你 => 你
Span 20-21:  使 => 使-01
Span 13-14:  小 => 小-01
Span 10-11:  时间 => 时间
Span 14-15:  王子 => 王子
Span 7-8:  玫瑰 => 玫瑰
Span 8-9:  花费 => 花费-01
Span 22-23:  记住 => 记住-01
Span 16-17:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 20-21:  使 => 使-01
Oracle Span 13-14:  小 => 小-01
Oracle Span 10-11:  时间 => 时间
Oracle Span 14-15:  王子 => 王子
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 8-9:  花费 => 花费-01
Oracle Span 22-23:  记住 => 记住-01
Oracle Span 16-17:  重复 => 重复-01

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	正	_	AD	AD	_	9	advmod	_	_
3	因为	_	P	P	_	9	prep	_	_
4	你	_	PN	PN	_	5	top	_	_
5	为	_	VC	VC	_	3	pccomp	_	_
6	你	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	玫瑰	_	NN	NN	_	5	attr	_	_
9	花费	_	VV	VV	_	15	vmod	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	时间	_	NN	NN	_	12	nn	_	_
12	…	_	NN	NN	_	9	dobj	_	_
13	”	_	PU	PU	_	9	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	17	nsubj	_	_
16	又	_	AD	AD	_	17	advmod	_	_
17	重复	_	VV	VV	_	0	root	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_
20	要	_	VV	VV	_	21	mmod	_	_
21	使	_	VV	VV	_	17	dep	_	_
22	自己	_	PN	PN	_	23	nsubj	_	_
23	记住	_	VV	VV	_	21	ccomp	_	_
24	这些	_	PN	PN	_	23	dobj	_	_
25	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x19 / 重复-01, arg0, x21 / 王子)
(x19 / 重复-01, purpose, x29 / 使-01)
(x21 / 王子, mod, x22 / 小-01)
(x24 / 花费-01, arg0, x25 / 你)
(x24 / 花费-01, arg1, x26 / 时间)
(x24 / 花费-01, arg2, x27 / 玫瑰)
(x29 / 使-01, arg2, x32 / 记住-01)

Input(Some(Graph((重复-01 :purpose (使-01 :arg2 (记住-01 :arg1 x23) :arg1 x21 :arg0 x21) :arg1 (causation :arg1 (花费-01 :arg2 (玫瑰 :poss x25) :arg1 时间 :arg0 你)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(16,17,List(0),重复,重复-01,false), Span(20,21,List(1),使,使-01,false), Span(22,23,List(2),记住,记住-01,false), Span(8,9,List(3),花费,花费-01,false), Span(7,8,List(4),玫瑰,玫瑰,false), Span(10,11,List(5),时间,时间,false), Span(3,4,List(6),你,你,false), Span(14,15,List(7),王子,王子,false), Span(13,14,List(8),小,小-01,false)),Map(2 -> 记住-01, 5 -> 时间, 8 -> 小-01, 7 -> 王子, 1 -> 使-01, 4 -> 玫瑰, 6 -> 你, 0 -> 重复-01, 3 -> 花费-01),Map(x22 -> 小-01, x25 -> 你, x19 -> 重复-01, x27 -> 玫瑰, x21 -> 王子, x24 -> 花费-01, x26 -> 时间, x32 -> 记住-01, x29 -> 使-01))),[Ljava.lang.String;@468e8565,Annotation([Ljava.lang.String;@91da29b,[Ljava.lang.String;@7066363,[Ljava.lang.String;@75b38c36),Annotation([Ljava.lang.String;@47248a48,[Ljava.lang.String;@2349f14d,[Ledu.cmu.lti.nlp.amr.Dependency;@17e0933c),Annotation([Ljava.lang.String;@7edb6fca,[Ljava.lang.String;@1dcedc93,[Ljava.lang.String;@716185fe),Annotation([Ljava.lang.String;@628b819d,[Ljava.lang.String;@478b0739,[Ledu.cmu.lti.nlp.amr.Entity;@2cca611f))
AMR:
(x19 / 重复-01, purpose, x29 / 使-01)
(x19 / 重复-01, time, x26 / 时间)
(x19 / 重复-01, unit, x21 / 王子)
(x21 / 王子, mod, x22 / 小-01)
(x24 / 花费-01, prep-through, x26 / 时间)
(x24 / 花费-01, topic, x27 / 玫瑰)
(x27 / 玫瑰, poss, x25 / 你)
(x29 / 使-01, prep-for, x32 / 记住-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 29,215 microseconds
Sentence: “ 人们 已经 忘记 了 这个 道理 ， ” 狐狸 说 ，

Oracle Span 1:  人们 => 人们
Oracle Span 2:  已经 => 已经
Oracle Span 3:  忘记 => 忘记-01
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  说 => 说-02
Oracle Span 6:  这个 => 这个
Oracle Span 7:  道理 => 道理
Spans:
Span 1-2:  人们 => 人们
Span 2-3:  已经 => 已经
Span 3-4:  忘记 => 忘记-01
Span 9-10:  狐狸 => 狐狸
Span 10-11:  说 => 说-02
Span 5-6:  这个 => 这个
Span 6-7:  道理 => 道理

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人们 => 人们
Oracle Span 2-3:  已经 => 已经
Oracle Span 3-4:  忘记 => 忘记-01
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 10-11:  说 => 说-02
Oracle Span 5-6:  这个 => 这个
Oracle Span 6-7:  道理 => 道理

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	人们	_	NN	NN	_	4	nsubj	_	_
3	已经	_	AD	AD	_	4	advmod	_	_
4	忘记	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	道理	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	狐狸	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	4	conj	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-02, arg0, x2 / 狐狸)
(x0 / 说-02, arg1, x3 / 忘记-01)
(x3 / 忘记-01, arg0, x6 / 人们)
(x3 / 忘记-01, arg1, x7 / 道理)
(x3 / 忘记-01, time, x5 / 已经)
(x7 / 道理, mod, x9 / 这个)

Input(Some(Graph((说-02 :arg1 (忘记-01 :arg1 (道理 :mod 这个) :arg0 人们 :time 已经) :arg0 狐狸),ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(3,4,List(1),忘记,忘记-01,false), Span(6,7,List(2),道理,道理,false), Span(5,6,List(3),这个,这个,false), Span(1,2,List(4),人们,人们,false), Span(2,3,List(5),已经,已经,false), Span(9,10,List(6),狐狸,狐狸,false)),Map(2 -> 道理, 5 -> 已经, 1 -> 忘记-01, 4 -> 人们, 6 -> 狐狸, 0 -> 说-02, 3 -> 这个),Map(x2 -> 狐狸, x5 -> 已经, x7 -> 道理, x3 -> 忘记-01, x6 -> 人们, x9 -> 这个, x0 -> 说-02))),[Ljava.lang.String;@51f95f0d,Annotation([Ljava.lang.String;@6fc0bbc6,[Ljava.lang.String;@706ddbc8,[Ljava.lang.String;@fd09e43),Annotation([Ljava.lang.String;@144ab983,[Ljava.lang.String;@7ebe2e47,[Ledu.cmu.lti.nlp.amr.Dependency;@609319c3),Annotation([Ljava.lang.String;@6bbab114,[Ljava.lang.String;@2a7d9b41,[Ljava.lang.String;@25be445f),Annotation([Ljava.lang.String;@5d1b1c2a,[Ljava.lang.String;@6397248c,[Ledu.cmu.lti.nlp.amr.Entity;@25f61c2c))
AMR:
(x0 / 说-02, ARG1, x2 / 狐狸)
(x0 / 说-02, degree, x7 / 道理)
(x3 / 忘记-01, time, x5 / 已经)
(x3 / 忘记-01, time, x6 / 人们)
(x7 / 道理, mod, x9 / 这个)
(x9 / 这个, conj-as-if, x3 / 忘记-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,902 microseconds
Sentence: “ 可是 ， 你 不 应该 忘记 它 。

Oracle Span 1:  你 => 你
Oracle Span 2:  它 => 它
Oracle Span 3:  应该 => 应该-02
Oracle Span 4:  忘记 => 忘记-01
Spans:
Span 3-4:  你 => 你
Span 7-8:  它 => 它
Span 5-6:  应该 => 应该-02
Span 6-7:  忘记 => 忘记-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 7-8:  它 => 它
Oracle Span 5-6:  应该 => 应该-02
Oracle Span 6-7:  忘记 => 忘记-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	可是	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	应该	_	VV	VV	_	7	conj	_	_
7	忘记	_	VV	VV	_	0	root	_	_
8	它	_	PN	PN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 应该-02, arg0, x14 / 忘记-01)
(x14 / 忘记-01, arg0, x15 / 你)
(x14 / 忘记-01, arg1, x16 / 它)

Input(Some(Graph((say :arg1 (contrast :arg2 (应该-02 :arg0 (忘记-01 :arg1 它 :arg0 你) :polarity -))),ArrayBuffer(Span(5,6,List(0),应该,应该-02,false), Span(6,7,List(1),忘记,忘记-01,false), Span(7,8,List(2),它,它,false), Span(3,4,List(3),你,你,false)),Map(2 -> 它, 1 -> 忘记-01, 0 -> 应该-02, 3 -> 你),Map(x16 -> 它, x15 -> 你, x11 -> 应该-02, x14 -> 忘记-01))),[Ljava.lang.String;@72bd2871,Annotation([Ljava.lang.String;@77429040,[Ljava.lang.String;@2d2b6960,[Ljava.lang.String;@38291795),Annotation([Ljava.lang.String;@234c5e41,[Ljava.lang.String;@40ef0af8,[Ledu.cmu.lti.nlp.amr.Dependency;@36790bec),Annotation([Ljava.lang.String;@461c3709,[Ljava.lang.String;@7e3d7dd,[Ljava.lang.String;@3f63a513),Annotation([Ljava.lang.String;@413bef78,[Ljava.lang.String;@66383c29,[Ledu.cmu.lti.nlp.amr.Entity;@7f7c420c))
AMR:
(x11 / 应该-02, location, x15 / 你)
(x11 / 应该-02, subset, x14 / 忘记-01)
(x16 / 它, location, x14 / 忘记-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 5,957 microseconds
Sentence: 你 现在 要 对 你 驯服 过 的 一切 负责 到底 。

Oracle Span 1:  一切 => 一切
Oracle Span 2:  你 => 你
Oracle Span 3:  到底 => 到底
Oracle Span 4:  现在 => 现在
Oracle Span 5:  要 => 要-01
Oracle Span 6:  负责 => 负责-01
Oracle Span 7:  驯服 => 驯服-01
Spans:
Span 8-9:  一切 => 一切
Span 0-1:  你 => 你
Span 10-11:  到底 => 到底
Span 1-2:  现在 => 现在
Span 2-3:  要 => 要-01
Span 9-10:  负责 => 负责-01
Span 5-6:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  一切 => 一切
Oracle Span 0-1:  你 => 你
Oracle Span 10-11:  到底 => 到底
Oracle Span 1-2:  现在 => 现在
Oracle Span 2-3:  要 => 要-01
Oracle Span 9-10:  负责 => 负责-01
Oracle Span 5-6:  驯服 => 驯服-01

Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	现在	_	NT	NT	_	6	tmod	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	你	_	PN	PN	_	4	pobj	_	_
6	驯服	_	VV	VV	_	0	root	_	_
7	过	_	VV	VV	_	11	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	一切	_	DT	DT	_	11	det	_	_
10	负责	_	VV	VV	_	11	rcmod	_	_
11	到底	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 要-01, arg0, x2 / 负责-01)
(x0 / 要-01, time, x4 / 现在)
(x2 / 负责-01, arg0, x3 / 你)
(x2 / 负责-01, arg1, x5 / 一切)
(x2 / 负责-01, degree, x8 / 到底)
(x6 / 驯服-01, arg1, x5 / 一切)

Input(Some(Graph((要-01 :time 现在 :arg0 (负责-01 :degree 到底 :arg1 (一切 :arg1-of (驯服-01 :arg0 x3)) :arg0 你)),ArrayBuffer(Span(2,3,List(0),要,要-01,false), Span(1,2,List(1),现在,现在,false), Span(9,10,List(2),负责,负责-01,false), Span(10,11,List(3),到底,到底,false), Span(8,9,List(4),一切,一切,false), Span(5,6,List(5),驯服,驯服-01,false), Span(0,1,List(6),你,你,false)),Map(2 -> 负责-01, 5 -> 驯服-01, 1 -> 现在, 4 -> 一切, 6 -> 你, 0 -> 要-01, 3 -> 到底),Map(x2 -> 负责-01, x5 -> 一切, x8 -> 到底, x4 -> 现在, x3 -> 你, x6 -> 驯服-01, x0 -> 要-01))),[Ljava.lang.String;@5d152bcd,Annotation([Ljava.lang.String;@43cb5f38,[Ljava.lang.String;@6435fa1c,[Ljava.lang.String;@7944b8b4),Annotation([Ljava.lang.String;@d7bbf12,[Ljava.lang.String;@1450131a,[Ledu.cmu.lti.nlp.amr.Dependency;@5f7eee96),Annotation([Ljava.lang.String;@3a36cd5,[Ljava.lang.String;@53f0d09c,[Ljava.lang.String;@47acd13b),Annotation([Ljava.lang.String;@6f8e9d06,[Ljava.lang.String;@77d381e6,[Ledu.cmu.lti.nlp.amr.Entity;@2272cbb0))
AMR:
(x0 / 要-01, time, x2 / 负责-01)
(x0 / 要-01, time, x4 / 现在)
(x2 / 负责-01, ARG4, x5 / 一切)
(x2 / 负责-01, degree, x8 / 到底)
(x2 / 负责-01, location, x3 / 你)
(x6 / 驯服-01, ARG1, x5 / 一切)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,656 microseconds
Sentence: 你 要 对 你 的 玫瑰 负责 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  玫瑰 => 玫瑰
Oracle Span 3:  要 => 要-03
Oracle Span 4:  负责 => 负责-01
Spans:
Span 0-1:  你 => 你
Span 5-6:  玫瑰 => 玫瑰
Span 1-2:  要 => 要-03
Span 6-7:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 5-6:  玫瑰 => 玫瑰
Oracle Span 1-2:  要 => 要-03
Oracle Span 6-7:  负责 => 负责-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	要	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	8	assmod	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	的	_	DEG	DEG	_	3	assm	_	_
6	玫瑰	_	NN	NN	_	8	nn	_	_
7	负责	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	2	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x8 / 要-03, arg0, x9 / 负责-01)
(x9 / 负责-01, arg0, x10 / 你)
(x9 / 负责-01, arg1, x11 / 玫瑰)

Input(Some(Graph((say :arg1 (要-03 :arg0 (负责-01 :arg1 (玫瑰 :poss x10) :arg0 你))),ArrayBuffer(Span(1,2,List(0),要,要-03,false), Span(6,7,List(1),负责,负责-01,false), Span(5,6,List(2),玫瑰,玫瑰,false), Span(0,1,List(3),你,你,false)),Map(2 -> 玫瑰, 1 -> 负责-01, 0 -> 要-03, 3 -> 你),Map(x10 -> 你, x8 -> 要-03, x11 -> 玫瑰, x9 -> 负责-01))),[Ljava.lang.String;@3f6f3cc,Annotation([Ljava.lang.String;@180b3819,[Ljava.lang.String;@733c464f,[Ljava.lang.String;@47272cd3),Annotation([Ljava.lang.String;@73fbdf68,[Ljava.lang.String;@32f1fafe,[Ledu.cmu.lti.nlp.amr.Dependency;@236eccd1),Annotation([Ljava.lang.String;@5d512ddb,[Ljava.lang.String;@707ca986,[Ljava.lang.String;@4de79b7d),Annotation([Ljava.lang.String;@183ade54,[Ljava.lang.String;@4c51077d,[Ledu.cmu.lti.nlp.amr.Entity;@5974b7e8))
AMR:
(x11 / 玫瑰, accompanier, x9 / 负责-01)
(x8 / 要-03, accompanier, x9 / 负责-01)
(x8 / 要-03, quant, x10 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,123 microseconds
Sentence: “ 我 要 对 我 的 玫瑰 负责 … ” 小 王子 又 重复 着 ， 这样 他 能够 记住 … …

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  玫瑰 => 玫瑰
Oracle Span 4:  能够 => 能够-01
Oracle Span 5:  要 => 要-03
Oracle Span 6:  记住 => 记住-01
Oracle Span 7:  负责 => 负责-01
Oracle Span 8:  重复 => 重复-01
Spans:
Span 10-11:  小 => 小-01
Span 11-12:  王子 => 王子
Span 6-7:  玫瑰 => 玫瑰
Span 18-19:  能够 => 能够-01
Span 2-3:  要 => 要-03
Span 19-20:  记住 => 记住-01
Span 7-8:  负责 => 负责-01
Span 13-14:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  小 => 小-01
Oracle Span 11-12:  王子 => 王子
Oracle Span 6-7:  玫瑰 => 玫瑰
Oracle Span 18-19:  能够 => 能够-01
Oracle Span 2-3:  要 => 要-03
Oracle Span 19-20:  记住 => 记住-01
Oracle Span 7-8:  负责 => 负责-01
Oracle Span 13-14:  重复 => 重复-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	8	nsubj	_	_
3	要	_	VV	VV	_	8	mmod	_	_
4	对	_	P	P	_	8	prep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	玫瑰	_	NN	NN	_	4	pobj	_	_
8	负责	_	VV	VV	_	12	vmod	_	_
9	…	_	NN	NN	_	8	dobj	_	_
10	”	_	PU	PU	_	8	punct	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	14	nsubj	_	_
13	又	_	AD	AD	_	14	advmod	_	_
14	重复	_	VV	VV	_	0	root	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	,	_	PU	PU	_	14	punct	_	_
17	这样	_	AD	AD	_	19	advmod	_	_
18	他	_	PN	PN	_	19	nsubj	_	_
19	能够	_	VV	VV	_	14	conj	_	_
20	记住	_	NN	NN	_	19	dobj	_	_
21	…	_	PU	PU	_	14	punct	_	_
22	…	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 重复-01, arg0, x2 / 王子)
(x0 / 重复-01, arg1, x4 / 要-03)
(x0 / 重复-01, cause, x9 / 能够-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, arg0, x5 / 负责-01)
(x5 / 负责-01, arg1, x7 / 玫瑰)
(x9 / 能够-01, arg0, x10 / 记住-01)

Input(Some(Graph((重复-01 :cause (能够-01 :arg0 (记住-01 :arg0 x2)) :arg1 (要-03 :arg0 (负责-01 :arg1 (玫瑰 :poss x2) :arg0 x2)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(13,14,List(0),重复,重复-01,false), Span(18,19,List(1),能够,能够-01,false), Span(19,20,List(2),记住,记住-01,false), Span(2,3,List(3),要,要-03,false), Span(7,8,List(4),负责,负责-01,false), Span(6,7,List(5),玫瑰,玫瑰,false), Span(11,12,List(6),王子,王子,false), Span(10,11,List(7),小,小-01,false)),Map(2 -> 记住-01, 5 -> 玫瑰, 7 -> 小-01, 1 -> 能够-01, 4 -> 负责-01, 6 -> 王子, 0 -> 重复-01, 3 -> 要-03),Map(x2 -> 王子, x10 -> 记住-01, x5 -> 负责-01, x7 -> 玫瑰, x4 -> 要-03, x3 -> 小-01, x9 -> 能够-01, x0 -> 重复-01))),[Ljava.lang.String;@2839e3c8,Annotation([Ljava.lang.String;@66bf40e5,[Ljava.lang.String;@2291d9a0,[Ljava.lang.String;@5e26f1ed),Annotation([Ljava.lang.String;@39666e42,[Ljava.lang.String;@25c2a9e3,[Ledu.cmu.lti.nlp.amr.Dependency;@9b23822),Annotation([Ljava.lang.String;@60f21960,[Ljava.lang.String;@6a6c7f42,[Ljava.lang.String;@5a515e5d),Annotation([Ljava.lang.String;@423a0e1d,[Ljava.lang.String;@32f32623,[Ledu.cmu.lti.nlp.amr.Entity;@3becc950))
AMR:
(x0 / 重复-01, purpose, x9 / 能够-01)
(x0 / 重复-01, time, x5 / 负责-01)
(x0 / 重复-01, unit, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, prep-through, x5 / 负责-01)
(x5 / 负责-01, beneficiary, x7 / 玫瑰)
(x9 / 能够-01, example, x10 / 记住-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 24,512 microseconds
Sentence: XXII

Oracle Span 1:  XXII => XXII
Spans:
Span 0-1:  XXII => XXII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXII => XXII

Dependencies:
1	XXII	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph(XXII,ArrayBuffer(Span(0,1,List(0),XXII,XXII,false)),Map(0 -> XXII),Map(x0 -> XXII))),[Ljava.lang.String;@6b9fdbc6,Annotation([Ljava.lang.String;@79476a4e,[Ljava.lang.String;@52ae997b,[Ljava.lang.String;@f557c37),Annotation([Ljava.lang.String;@1a01d7f0,[Ljava.lang.String;@5856dbe4,[Ledu.cmu.lti.nlp.amr.Dependency;@7e15f4d4),Annotation([Ljava.lang.String;@5a058be5,[Ljava.lang.String;@4eaf7902,[Ljava.lang.String;@20c812c8),Annotation([Ljava.lang.String;@71aaf151,[Ljava.lang.String;@7061622,[Ledu.cmu.lti.nlp.amr.Entity;@32d418a9))
AMR:


Decoded in 985 microseconds
Sentence: “ 你 好 。 ” 小 王子 说道 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  说道 => 说道-01
Spans:
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说道-01 :arg1 你好 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说道,说道-01,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 说道-01),Map(x2 -> 王子, x3 -> 小-01, x0 -> 说道-01))),[Ljava.lang.String;@52ea0269,Annotation([Ljava.lang.String;@746c411c,[Ljava.lang.String;@43ecfeb5,[Ljava.lang.String;@51efb731),Annotation([Ljava.lang.String;@53940e2f,[Ljava.lang.String;@45e6d1e0,[Ledu.cmu.lti.nlp.amr.Dependency;@61db86bf),Annotation([Ljava.lang.String;@4da1f38a,[Ljava.lang.String;@3e377967,[Ljava.lang.String;@4dadd690),Annotation([Ljava.lang.String;@707e4fe4,[Ljava.lang.String;@3281dfc2,[Ledu.cmu.lti.nlp.amr.Entity;@377874b4))
AMR:
(x0 / 说道-01, conj-as-if, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,447 microseconds
Sentence: “ 你 好 。 ” 扳道工 说道 。

Oracle Span 1:  扳道工 => 扳道工
Oracle Span 2:  说道 => 说道-01
Spans:
Span 5-6:  扳道工 => 扳道工
Span 6-7:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  扳道工 => 扳道工
Oracle Span 6-7:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	7	conj	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	6	punct	_	_
6	扳道工	_	NT	NT	_	7	nn	_	_
7	说道	_	NN	NN	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 扳道工)

Input(Some(Graph((说道-01 :arg1 你好 :arg0 扳道工),ArrayBuffer(Span(6,7,List(0),说道,说道-01,false), Span(5,6,List(1),扳道工,扳道工,false)),Map(1 -> 扳道工, 0 -> 说道-01),Map(x2 -> 扳道工, x0 -> 说道-01))),[Ljava.lang.String;@14422d9d,Annotation([Ljava.lang.String;@16c1519e,[Ljava.lang.String;@2a02e34b,[Ljava.lang.String;@5eabff6b),Annotation([Ljava.lang.String;@5b000fe6,[Ljava.lang.String;@4751e8b9,[Ledu.cmu.lti.nlp.amr.Dependency;@7af443a3),Annotation([Ljava.lang.String;@7b25ab31,[Ljava.lang.String;@2001e48c,[Ljava.lang.String;@68ddd415),Annotation([Ljava.lang.String;@306c7bf6,[Ljava.lang.String;@664632e9,[Ledu.cmu.lti.nlp.amr.Entity;@494c8f29))
AMR:
(x0 / 说道-01, example, x2 / 扳道工)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,860 microseconds
Sentence: “ 你 在 这里 做 什么 ？ ” 小 王子 问 。

Oracle Span 1:  你 => 你
Oracle Span 2:  做 => 做-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  这里 => 这里
Oracle Span 6:  问 => 问-01
Spans:
Span 1-2:  你 => 你
Span 4-5:  做 => 做-01
Span 8-9:  小 => 小-01
Span 9-10:  王子 => 王子
Span 3-4:  这里 => 这里
Span 10-11:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  做 => 做-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 3-4:  这里 => 这里
Oracle Span 10-11:  问 => 问-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	dep	_	_
3	在	_	P	P	_	5	prep	_	_
4	这里	_	PN	PN	_	3	pobj	_	_
5	做	_	VV	VV	_	0	root	_	_
6	什么	_	PN	PN	_	5	dobj	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	问	_	NN	NN	_	5	dep	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 王子, mod, x11 / 小-01)
(x12 / 做-01, arg0, x13 / 你)
(x12 / 做-01, location, x15 / 这里)
(x8 / 问-01, arg0, x10 / 王子)
(x8 / 问-01, arg1, x12 / 做-01)

Input(Some(Graph((问-01 :arg1 (做-01 :mode interrogative :location 这里 :arg1 amr-unknown :arg0 你) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(10,11,List(0),问,问-01,false), Span(4,5,List(1),做,做-01,false), Span(3,4,List(2),这里,这里,false), Span(1,2,List(3),你,你,false), Span(9,10,List(4),王子,王子,false), Span(8,9,List(5),小,小-01,false)),Map(2 -> 这里, 5 -> 小-01, 1 -> 做-01, 4 -> 王子, 0 -> 问-01, 3 -> 你),Map(x10 -> 王子, x13 -> 你, x8 -> 问-01, x12 -> 做-01, x15 -> 这里, x11 -> 小-01))),[Ljava.lang.String;@4f379769,Annotation([Ljava.lang.String;@1c57f6b2,[Ljava.lang.String;@4b515eab,[Ljava.lang.String;@66c9b52f),Annotation([Ljava.lang.String;@1536ea40,[Ljava.lang.String;@36776c32,[Ledu.cmu.lti.nlp.amr.Dependency;@7792d851),Annotation([Ljava.lang.String;@5cd96b41,[Ljava.lang.String;@7e1ffe70,[Ljava.lang.String;@73041b7d),Annotation([Ljava.lang.String;@1235151c,[Ljava.lang.String;@5a1f778,[Ledu.cmu.lti.nlp.amr.Entity;@4cc65c2))
AMR:
(x10 / 王子, mod, x11 / 小-01)
(x12 / 做-01, location, x15 / 这里)
(x15 / 这里, poss, x13 / 你)
(x8 / 问-01, ARG1, x10 / 王子)
(x8 / 问-01, purpose, x12 / 做-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,315 microseconds
Sentence: “ 我 一 包 包 地 分选 旅客 ， 按 每 千 人 一 包 。 ” 扳道工 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  包 => 包
Oracle Span 3:  扳道工 => 扳道工
Oracle Span 4:  按 => 按-02
Oracle Span 5:  旅客 => 旅客
Oracle Span 6:  说 => 说-01
Spans:
Span 12-13:  人 => 人
Span 3-4:  包 => 包
Span 17-18:  扳道工 => 扳道工
Span 9-10:  按 => 按-02
Span 7-8:  旅客 => 旅客
Span 18-19:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  人 => 人
Oracle Span 3-4:  包 => 包
Oracle Span 17-18:  扳道工 => 扳道工
Oracle Span 9-10:  按 => 按-02
Oracle Span 7-8:  旅客 => 旅客
Oracle Span 18-19:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	4	nn	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	包	_	NN	NN	_	5	nn	_	_
5	包	_	NN	NN	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	分选	_	VV	VV	_	0	root	_	_
8	旅客	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	按	_	P	P	_	15	prep	_	_
11	每	_	DT	DT	_	13	det	_	_
12	千	_	CD	CD	_	11	dep	_	_
13	人	_	NN	NN	_	10	pobj	_	_
14	一	_	AD	AD	_	15	advmod	_	_
15	包	_	VV	VV	_	7	dep	_	_
16	。	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_
18	扳道工	_	AD	AD	_	19	advmod	_	_
19	说	_	VV	VV	_	7	dep	_	_
20	,	_	PU	PU	_	19	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)

Input(Some(Graph((说-01 :arg1 (and :op (分-01 :arg0 x2 :arg1 旅客) :op (选-02 :arg0 x2 :arg1 x35) :manner 一包包 :manner (按-02 :arg1 (thing :quant 1 :unit 包 :manner (人 :quant 1000)))) :arg0 扳道工),ArrayBuffer(Span(18,19,List(0),说,说-01,false), Span(7,8,List(1),旅客,旅客,false), Span(9,10,List(2),按,按-02,false), Span(3,4,List(3),包,包,false), Span(12,13,List(4),人,人,false), Span(17,18,List(5),扳道工,扳道工,false)),Map(2 -> 按-02, 5 -> 扳道工, 1 -> 旅客, 4 -> 人, 0 -> 说-01, 3 -> 包),Map(x40 -> 按-02, x43 -> 包, x2 -> 扳道工, x44 -> 人, x35 -> 旅客, x0 -> 说-01))),[Ljava.lang.String;@574059d5,Annotation([Ljava.lang.String;@6d672bd4,[Ljava.lang.String;@67770b37,[Ljava.lang.String;@72906e),Annotation([Ljava.lang.String;@5529ff44,[Ljava.lang.String;@14447be,[Ledu.cmu.lti.nlp.amr.Dependency;@5eb5da12),Annotation([Ljava.lang.String;@4a50d04a,[Ljava.lang.String;@5099c59b,[Ljava.lang.String;@73c31181),Annotation([Ljava.lang.String;@3d620a1,[Ljava.lang.String;@4f486211,[Ledu.cmu.lti.nlp.amr.Entity;@51e3d37e))
AMR:
(x0 / 说-01, topic, x2 / 扳道工)
(x2 / 扳道工, domain, x44 / 人)
(x35 / 旅客, location, x43 / 包)
(x40 / 按-02, location, x35 / 旅客)
(x44 / 人, domain, x40 / 按-02)

WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.3.0.1
WARNING: makeIds can't find span Id: 0.1.3.0.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,808 microseconds
Sentence: “ 我 打发 这些 运载 旅客 的 列车 ， 一会儿 发往 右方 ， 一会儿 发往 左方 。 ”

Oracle Span 1:  一会儿 => 一会儿
Oracle Span 2:  一会儿 => 一会儿
Oracle Span 3:  列车 => 列车
Oracle Span 4:  右方 => 右方
Oracle Span 5:  左方 => 左方
Oracle Span 6:  我 => 我
Oracle Span 7:  打发 => 打发-01
Oracle Span 8:  旅客 => 旅客
Oracle Span 9:  运载 => 运载-01
Oracle Span 10:  这些 => 这些
Spans:
Span 9-10:  一会儿 => 一会儿
Span 13-14:  一会儿 => 一会儿
Span 7-8:  列车 => 列车
Span 11-12:  右方 => 右方
Span 15-16:  左方 => 左方
Span 1-2:  我 => 我
Span 2-3:  打发 => 打发-01
Span 5-6:  旅客 => 旅客
Span 4-5:  运载 => 运载-01
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一会儿 => 一会儿
Oracle Span 13-14:  一会儿 => 一会儿
Oracle Span 7-8:  列车 => 列车
Oracle Span 11-12:  右方 => 右方
Oracle Span 15-16:  左方 => 左方
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  打发 => 打发-01
Oracle Span 5-6:  旅客 => 旅客
Oracle Span 4-5:  运载 => 运载-01
Oracle Span 3-4:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	打发	_	VV	VV	_	0	root	_	_
4	这些	_	DT	DT	_	6	det	_	_
5	运载	_	JJ	JJ	_	6	amod	_	_
6	旅客	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	列车	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	一会儿	_	CD	CD	_	11	nummod	_	_
11	发往	_	NN	NN	_	12	nn	_	_
12	右方	_	NN	NN	_	16	nsubj	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	一会儿	_	CD	CD	_	15	nummod	_	_
15	发往	_	NN	NN	_	16	nsubj	_	_
16	左方	_	VV	VV	_	3	conj	_	_
17	。	_	PU	PU	_	3	punct	_	_
18	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x17 / 打发-01, arg0, x18 / 我)
(x17 / 打发-01, arg1, x19 / 列车)
(x19 / 列车, mod, x20 / 这些)
(x21 / 运载-01, arg0, x19 / 列车)
(x21 / 运载-01, arg1, x22 / 旅客)

Input(Some(Graph((say :arg1 (打发-01 :arg2 (and :op (发-01 :direction 右方 :time 一会儿) :op (发-01 :direction 左方 :time 一会儿)) :arg1 (列车 :arg0-of (运载-01 :arg1 旅客) :mod 这些) :arg0 我)),ArrayBuffer(Span(2,3,List(0),打发,打发-01,false), Span(11,12,List(1),右方,右方,false), Span(9,10,List(2),一会儿,一会儿,false), Span(15,16,List(3),左方,左方,false), Span(13,14,List(4),一会儿,一会儿,false), Span(7,8,List(5),列车,列车,false), Span(4,5,List(6),运载,运载-01,false), Span(5,6,List(7),旅客,旅客,false), Span(3,4,List(8),这些,这些,false), Span(1,2,List(9),我,我,false)),Map(2 -> 一会儿, 5 -> 列车, 8 -> 这些, 7 -> 旅客, 1 -> 右方, 4 -> 一会儿, 6 -> 运载-01, 9 -> 我, 0 -> 打发-01, 3 -> 左方),Map(x28 -> 右方, x22 -> 旅客, x19 -> 列车, x31 -> 左方, x21 -> 运载-01, x18 -> 我, x32 -> 一会儿, x29 -> 一会儿, x20 -> 这些, x17 -> 打发-01))),[Ljava.lang.String;@3a479fda,Annotation([Ljava.lang.String;@8a6631b,[Ljava.lang.String;@472d0f4,[Ljava.lang.String;@4bc59b27),Annotation([Ljava.lang.String;@4d7a64ca,[Ljava.lang.String;@76ff68c5,[Ledu.cmu.lti.nlp.amr.Dependency;@6418e39e),Annotation([Ljava.lang.String;@3635099,[Ljava.lang.String;@1da1380b,[Ljava.lang.String;@1095d23a),Annotation([Ljava.lang.String;@3332c7a5,[Ljava.lang.String;@2accaec2,[Ledu.cmu.lti.nlp.amr.Entity;@3e39baf0))
AMR:
(x17 / 打发-01, degree, x18 / 我)
(x17 / 打发-01, location, x20 / 这些)
(x17 / 打发-01, purpose, x21 / 运载-01)
(x21 / 运载-01, prep-through, x22 / 旅客)
(x21 / 运载-01, unit, x19 / 列车)
(x28 / 右方, location, x19 / 列车)
(x29 / 一会儿, poss, x19 / 列车)
(x31 / 左方, location, x32 / 一会儿)
(x32 / 一会儿, location, x28 / 右方)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 27,988 microseconds
Sentence: 这时 ， 一 列 灯火 明亮 的 快车 ， 雷鸣般 地 响 着 ， 把 扳道 房 震 得 颤颤悠悠 。

Oracle Span 1:  响 => 响-01
Oracle Span 2:  快车 => 快车
Oracle Span 3:  房 => 房
Oracle Span 4:  扳道 => 扳道-01
Oracle Span 5:  明亮 => 明亮-01
Oracle Span 6:  灯火 => 灯火
Oracle Span 7:  这时 => 这时
Oracle Span 8:  震 => 震-01
Oracle Span 9:  颤颤悠悠 => 颤颤悠悠
Spans:
Span 11-12:  响 => 响-01
Span 7-8:  快车 => 快车
Span 16-17:  房 => 房
Span 15-16:  扳道 => 扳道-01
Span 5-6:  明亮 => 明亮-01
Span 4-5:  灯火 => 灯火
Span 0-1:  这时 => 这时
Span 17-18:  震 => 震-01
Span 19-20:  颤颤悠悠 => 颤颤悠悠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 11-12:  响 => 响-01
Oracle Span 7-8:  快车 => 快车
Oracle Span 16-17:  房 => 房
Oracle Span 15-16:  扳道 => 扳道-01
Oracle Span 5-6:  明亮 => 明亮-01
Oracle Span 4-5:  灯火 => 灯火
Oracle Span 0-1:  这时 => 这时
Oracle Span 17-18:  震 => 震-01
Oracle Span 19-20:  颤颤悠悠 => 颤颤悠悠

Dependencies:
1	这时	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	一	_	CD	CD	_	8	nummod	_	_
4	列	_	VV	VV	_	8	rcmod	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	明亮	_	NN	NN	_	4	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	快车	_	NN	NN	_	12	dep	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	雷鸣般	_	JJ	JJ	_	12	dvpmod	_	_
11	地	_	DEV	DEV	_	10	dvpm	_	_
12	响	_	VV	VV	_	0	root	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	把	_	BA	BA	_	19	ba	_	_
16	扳道	_	NN	NN	_	18	nn	_	_
17	房	_	NN	NN	_	18	nn	_	_
18	震	_	NN	NN	_	19	nsubj	_	_
19	得	_	VV	VV	_	12	conj	_	_
20	颤颤悠悠	_	NN	NN	_	19	dobj	_	_
21	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x12 / 房, mod, x13 / 扳道-01)
(x14 / 颤颤悠悠, cause, x7 / 震-01)
(x17 / 明亮-01, arg0, x18 / 灯火)
(x2 / 响-01, arg0, x4 / 快车)
(x2 / 响-01, time, x15 / 这时)
(x4 / 快车, mod, x17 / 明亮-01)
(x7 / 震-01, arg1, x12 / 房)

Input(Some(Graph((and :op (响-01 :manner (般-01 :arg1 雷鸣-01) :time 这时 :arg0 (快车 :mod (明亮-01 :arg0 灯火) :quant 1)) :op (震-01 :cause-of 颤颤悠悠 :arg1 (房 :mod 扳道-01) :arg0 x4)),ArrayBuffer(Span(11,12,List(0),响,响-01,false), Span(0,1,List(1),这时,这时,false), Span(7,8,List(2),快车,快车,false), Span(5,6,List(3),明亮,明亮-01,false), Span(4,5,List(4),灯火,灯火,false), Span(17,18,List(5),震,震-01,false), Span(19,20,List(6),颤颤悠悠,颤颤悠悠,false), Span(16,17,List(7),房,房,false), Span(15,16,List(8),扳道,扳道-01,false)),Map(2 -> 快车, 5 -> 震-01, 8 -> 扳道-01, 7 -> 房, 1 -> 这时, 4 -> 灯火, 6 -> 颤颤悠悠, 0 -> 响-01, 3 -> 明亮-01),Map(x2 -> 响-01, x13 -> 扳道-01, x12 -> 房, x15 -> 这时, x7 -> 震-01, x18 -> 灯火, x4 -> 快车, x14 -> 颤颤悠悠, x17 -> 明亮-01))),[Ljava.lang.String;@83bb0f,Annotation([Ljava.lang.String;@25a94b55,[Ljava.lang.String;@6adc5b9c,[Ljava.lang.String;@19c1820d),Annotation([Ljava.lang.String;@40709f9,[Ljava.lang.String;@6b1b19cf,[Ledu.cmu.lti.nlp.amr.Dependency;@6393bf8b),Annotation([Ljava.lang.String;@76d7881e,[Ljava.lang.String;@4aa31ffc,[Ljava.lang.String;@7945b206),Annotation([Ljava.lang.String;@7d42542,[Ljava.lang.String;@4d09cade,[Ledu.cmu.lti.nlp.amr.Entity;@1f87607c))
AMR:
(x12 / 房, mod, x13 / 扳道-01)
(x14 / 颤颤悠悠, medium, x7 / 震-01)
(x17 / 明亮-01, snt1, x18 / 灯火)
(x2 / 响-01, time, x13 / 扳道-01)
(x2 / 响-01, time, x15 / 这时)
(x2 / 响-01, time, x4 / 快车)
(x4 / 快车, mod, x17 / 明亮-01)
(x7 / 震-01, snt1, x12 / 房)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 28,283 microseconds
Sentence: “ 他们 真 匆忙 呀 ， ” 小 王子 说 ，

Oracle Span 1:  他们 => 他们
Oracle Span 2:  匆忙 => 匆忙-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  真 => 真
Oracle Span 6:  说 => 说-01
Spans:
Span 1-2:  他们 => 他们
Span 3-4:  匆忙 => 匆忙-01
Span 7-8:  小 => 小-01
Span 8-9:  王子 => 王子
Span 2-3:  真 => 真
Span 9-10:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  匆忙 => 匆忙-01
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 2-3:  真 => 真
Oracle Span 9-10:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	匆忙	_	VV	VV	_	0	root	_	_
5	呀	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	conj	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 匆忙-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 匆忙-01, arg0, x5 / 他们)
(x4 / 匆忙-01, degree, x6 / 真)

Input(Some(Graph((说-01 :mode expressive :arg1 (匆忙-01 :degree 真 :arg0 他们) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(3,4,List(1),匆忙,匆忙-01,false), Span(2,3,List(2),真,真,false), Span(1,2,List(3),他们,他们,false), Span(8,9,List(4),王子,王子,false), Span(7,8,List(5),小,小-01,false)),Map(2 -> 真, 5 -> 小-01, 1 -> 匆忙-01, 4 -> 王子, 0 -> 说-01, 3 -> 他们),Map(x2 -> 王子, x5 -> 他们, x4 -> 匆忙-01, x3 -> 小-01, x6 -> 真, x0 -> 说-01))),[Ljava.lang.String;@4b862408,Annotation([Ljava.lang.String;@6ddee60f,[Ljava.lang.String;@6e829e50,[Ljava.lang.String;@4aa2877c),Annotation([Ljava.lang.String;@307e4c44,[Ljava.lang.String;@2a8a3ada,[Ledu.cmu.lti.nlp.amr.Dependency;@500051c5),Annotation([Ljava.lang.String;@ec7b5de,[Ljava.lang.String;@4c19d42e,[Ljava.lang.String;@373e6b9d),Annotation([Ljava.lang.String;@65629ac6,[Ljava.lang.String;@56b8aaf1,[Ledu.cmu.lti.nlp.amr.Entity;@5482bcac))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, purpose, x4 / 匆忙-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 匆忙-01, degree, x6 / 真)
(x4 / 匆忙-01, location, x5 / 他们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,781 microseconds
Sentence: “ 他们 要 寻找 什么 ？ ”

Oracle Span 1:  他们 => 他们
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  要 => 要-03
Spans:
Span 1-2:  他们 => 他们
Span 3-4:  寻找 => 寻找-01
Span 2-3:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  要 => 要-03

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	寻找	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 要-03, arg0, x9 / 寻找-01)
(x9 / 寻找-01, arg0, x10 / 他们)

Input(Some(Graph((say :arg1 (要-03 :mode interrogative :arg0 (寻找-01 :arg1 amr-unknown :arg0 他们))),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(3,4,List(1),寻找,寻找-01,false), Span(1,2,List(2),他们,他们,false)),Map(2 -> 他们, 1 -> 寻找-01, 0 -> 要-03),Map(x10 -> 他们, x8 -> 要-03, x9 -> 寻找-01))),[Ljava.lang.String;@10244722,Annotation([Ljava.lang.String;@61615b4a,[Ljava.lang.String;@721d8ab5,[Ljava.lang.String;@33bb3f86),Annotation([Ljava.lang.String;@1946384,[Ljava.lang.String;@6ac4c3f7,[Ledu.cmu.lti.nlp.amr.Dependency;@7412a438),Annotation([Ljava.lang.String;@1e3ff233,[Ljava.lang.String;@3c952a33,[Ljava.lang.String;@70029d2d),Annotation([Ljava.lang.String;@1150d471,[Ljava.lang.String;@709f0202,[Ledu.cmu.lti.nlp.amr.Entity;@654e6a90))
AMR:
(x8 / 要-03, location, x10 / 他们)
(x8 / 要-03, prep-through, x9 / 寻找-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,529 microseconds
Sentence: “ 开 机车 的 人 自己 也 不 知道 。 ” 扳道工 说道 。

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  开 => 开-03
Oracle Span 4:  扳道工 => 扳道工
Oracle Span 5:  机车 => 机车
Oracle Span 6:  知道 => 知道-01
Oracle Span 7:  说道 => 说道-01
Spans:
Span 6-7:  也 => 也
Span 4-5:  人 => 人
Span 1-2:  开 => 开-03
Span 11-12:  扳道工 => 扳道工
Span 2-3:  机车 => 机车
Span 8-9:  知道 => 知道-01
Span 12-13:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  也 => 也
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  开 => 开-03
Oracle Span 11-12:  扳道工 => 扳道工
Oracle Span 2-3:  机车 => 机车
Oracle Span 8-9:  知道 => 知道-01
Oracle Span 12-13:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	开	_	VV	VV	_	5	rcmod	_	_
3	机车	_	NN	NN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	人	_	NN	NN	_	9	nsubj	_	_
6	自己	_	PN	PN	_	9	nsubj	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	知道	_	VV	VV	_	12	conj	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	9	punct	_	_
12	扳道工	_	VV	VV	_	0	root	_	_
13	说道	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 扳道工)
(x0 / 说道-01, arg1, x3 / 知道-01)
(x3 / 知道-01, arg0, x6 / 人)
(x7 / 开-03, arg0, x6 / 人)
(x7 / 开-03, arg1, x8 / 机车)

Input(Some(Graph((说道-01 :arg1 (知道-01 :arg0 (人 :arg0-of (开-03 :arg1 机车)) :polarity (- :manner 也)) :arg0 扳道工),ArrayBuffer(Span(12,13,List(0),说道,说道-01,false), Span(8,9,List(1),知道,知道-01,false), Span(4,5,List(2),人,人,false), Span(1,2,List(3),开,开-03,false), Span(2,3,List(4),机车,机车,false), Span(6,7,List(5),也,也,false), Span(11,12,List(6),扳道工,扳道工,false)),Map(2 -> 人, 5 -> 也, 1 -> 知道-01, 4 -> 机车, 6 -> 扳道工, 0 -> 说道-01, 3 -> 开-03),Map(x2 -> 扳道工, x5 -> 也, x8 -> 机车, x7 -> 开-03, x3 -> 知道-01, x6 -> 人, x0 -> 说道-01))),[Ljava.lang.String;@14168e1,Annotation([Ljava.lang.String;@16a5c7e4,[Ljava.lang.String;@1e225820,[Ljava.lang.String;@8aeab9e),Annotation([Ljava.lang.String;@2a2dc0a,[Ljava.lang.String;@3a00b15d,[Ledu.cmu.lti.nlp.amr.Dependency;@36ef1d65),Annotation([Ljava.lang.String;@4be0a27d,[Ljava.lang.String;@5f366587,[Ljava.lang.String;@6003ad65),Annotation([Ljava.lang.String;@2ec99035,[Ljava.lang.String;@60743cdb,[Ledu.cmu.lti.nlp.amr.Entity;@c02670f))
AMR:
(x0 / 说道-01, example, x2 / 扳道工)
(x3 / 知道-01, manner, x5 / 也)
(x3 / 知道-01, prep-through, x2 / 扳道工)
(x3 / 知道-01, source, x6 / 人)
(x7 / 开-03, prep-through, x8 / 机车)
(x7 / 开-03, source, x6 / 人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 17,825 microseconds
Sentence: 于是 ， 第二 列 灯火 通明 的 快车 又 朝着 相反 的 方向 轰隆 轰隆 地 开 过去 。

Oracle Span 1:  开 => 开-02
Oracle Span 2:  快车 => 快车
Oracle Span 3:  方向 => 方向
Oracle Span 4:  相反 => 相反-01
Oracle Span 5:  轰隆 => 轰隆-01
Oracle Span 6:  轰隆 => 轰隆-01
Spans:
Span 16-17:  开 => 开-02
Span 7-8:  快车 => 快车
Span 12-13:  方向 => 方向
Span 10-11:  相反 => 相反-01
Span 13-14:  轰隆 => 轰隆-01
Span 14-15:  轰隆 => 轰隆-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  开 => 开-02
Oracle Span 7-8:  快车 => 快车
Oracle Span 12-13:  方向 => 方向
Oracle Span 10-11:  相反 => 相反-01
Oracle Span 13-14:  轰隆 => 轰隆-01
Oracle Span 14-15:  轰隆 => 轰隆-01

Dependencies:
1	于是	_	AD	AD	_	17	advmod	_	_
2	,	_	PU	PU	_	17	punct	_	_
3	第二	_	OD	OD	_	8	nummod	_	_
4	列	_	VV	VV	_	8	rcmod	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	通明	_	NN	NN	_	4	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	快车	_	NN	NN	_	17	nsubj	_	_
9	又	_	AD	AD	_	17	advmod	_	_
10	朝着	_	P	P	_	17	prep	_	_
11	相反	_	NR	NR	_	14	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	方向	_	NN	NN	_	14	nn	_	_
14	轰隆	_	NN	NN	_	10	pobj	_	_
15	轰隆	_	VA	VA	_	17	dvpmod	_	_
16	地	_	DEV	DEV	_	15	dvpm	_	_
17	开	_	VV	VV	_	0	root	_	_
18	过去	_	NT	NT	_	17	dobj	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x16 / 开-02, arg1, x17 / 快车)
(x16 / 开-02, direction, x21 / 方向)
(x16 / 开-02, manner, x23 / 轰隆-01)
(x16 / 开-02, manner, x24 / 轰隆-01)
(x21 / 方向, mod, x22 / 相反-01)

Input(Some(Graph((causation :arg2 (开-02 :manner 轰隆-01 :manner 轰隆-01 :direction (方向 :mod 相反-01) :arg1 (快车 :ord (ordinal-entity :value 2) :mod 灯火通明-01))),ArrayBuffer(Span(16,17,List(0),开,开-02,false), Span(13,14,List(1),轰隆,轰隆-01,false), Span(14,15,List(2),轰隆,轰隆-01,false), Span(12,13,List(3),方向,方向,false), Span(10,11,List(4),相反,相反-01,false), Span(7,8,List(5),快车,快车,false)),Map(2 -> 轰隆-01, 5 -> 快车, 1 -> 轰隆-01, 4 -> 相反-01, 0 -> 开-02, 3 -> 方向),Map(x22 -> 相反-01, x16 -> 开-02, x21 -> 方向, x24 -> 轰隆-01, x23 -> 轰隆-01, x17 -> 快车))),[Ljava.lang.String;@71179b6f,Annotation([Ljava.lang.String;@13bdf540,[Ljava.lang.String;@526e8108,[Ljava.lang.String;@4dcbae55),Annotation([Ljava.lang.String;@4a9860,[Ljava.lang.String;@7ca16adc,[Ledu.cmu.lti.nlp.amr.Dependency;@5ae1c281),Annotation([Ljava.lang.String;@4ac8768e,[Ljava.lang.String;@1e957e2f,[Ljava.lang.String;@691500ab),Annotation([Ljava.lang.String;@3db432c2,[Ljava.lang.String;@34414ffc,[Ledu.cmu.lti.nlp.amr.Entity;@1903b5d))
AMR:
(x16 / 开-02, direction, x21 / 方向)
(x16 / 开-02, manner, x23 / 轰隆-01)
(x16 / 开-02, manner, x24 / 轰隆-01)
(x16 / 开-02, op, x17 / 快车)
(x21 / 方向, mod, x22 / 相反-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,287 microseconds
Sentence: “ 他们 怎么 又 回来 了 呢 ？ ” 小 王子 问道 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  又 => 又
Oracle Span 3:  回来 => 回来-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  王子 => 王子
Oracle Span 6:  问道 => 问道-01
Spans:
Span 1-2:  他们 => 他们
Span 3-4:  又 => 又
Span 4-5:  回来 => 回来-01
Span 9-10:  小 => 小-01
Span 10-11:  王子 => 王子
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  回来 => 回来-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他们	_	PN	PN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	回来	_	VV	VV	_	11	vmod	_	_
6	了	_	VV	VV	_	5	dobj	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VA	VA	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 回来-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 回来-01, arg0, x6 / 他们)
(x4 / 回来-01, manner, x5 / 又)

Input(Some(Graph((问道-01 :mode interrogative :arg1 (回来-01 :cause amr-unknown :arg0 他们 :manner 又) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(4,5,List(1),回来,回来-01,false), Span(1,2,List(2),他们,他们,false), Span(3,4,List(3),又,又,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小-01,false)),Map(2 -> 他们, 5 -> 小-01, 1 -> 回来-01, 4 -> 王子, 0 -> 问道-01, 3 -> 又),Map(x2 -> 王子, x5 -> 又, x4 -> 回来-01, x3 -> 小-01, x6 -> 他们, x0 -> 问道-01))),[Ljava.lang.String;@4041739c,Annotation([Ljava.lang.String;@5cff6b74,[Ljava.lang.String;@627ff1b8,[Ljava.lang.String;@62b57479),Annotation([Ljava.lang.String;@29a33620,[Ljava.lang.String;@ea04cab,[Ledu.cmu.lti.nlp.amr.Dependency;@134f8ef6),Annotation([Ljava.lang.String;@5a90265a,[Ljava.lang.String;@6a32191e,[Ljava.lang.String;@66fbc5e7),Annotation([Ljava.lang.String;@9accff0,[Ljava.lang.String;@52559a69,[Ledu.cmu.lti.nlp.amr.Entity;@285583d4))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, location, x4 / 回来-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 回来-01, location, x6 / 他们)
(x4 / 回来-01, manner, x5 / 又)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,390 microseconds
Sentence: “ 他们 不 是 原来 那些 人 了 。 ” 扳道工 说 ，

Oracle Span 1:  人 => 人
Oracle Span 2:  他们 => 他们
Oracle Span 3:  原来 => 原来-01
Oracle Span 4:  扳道工 => 扳道工
Oracle Span 5:  说 => 说-01
Oracle Span 6:  那些 => 那些
Spans:
Span 6-7:  人 => 人
Span 1-2:  他们 => 他们
Span 4-5:  原来 => 原来-01
Span 10-11:  扳道工 => 扳道工
Span 11-12:  说 => 说-01
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  他们 => 他们
Oracle Span 4-5:  原来 => 原来-01
Oracle Span 10-11:  扳道工 => 扳道工
Oracle Span 11-12:  说 => 说-01
Oracle Span 5-6:  那些 => 那些

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	原来	_	AD	AD	_	8	advmod	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	人	_	NN	NN	_	8	prep	_	_
8	了	_	VV	VV	_	4	ccomp	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	4	punct	_	_
11	扳道工	_	AD	AD	_	12	advmod	_	_
12	说	_	VV	VV	_	4	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 人)
(x3 / 人, domain, x4 / 他们)
(x3 / 人, mod, x6 / 那些)
(x6 / 那些, mod, x7 / 原来-01)

Input(Some(Graph((说-01 :arg1 (人 :mod (那些 :mod 原来-01) :polarity - :domain 他们) :arg0 扳道工),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(6,7,List(1),人,人,false), Span(5,6,List(2),那些,那些,false), Span(4,5,List(3),原来,原来-01,false), Span(1,2,List(4),他们,他们,false), Span(10,11,List(5),扳道工,扳道工,false)),Map(2 -> 那些, 5 -> 扳道工, 1 -> 人, 4 -> 他们, 0 -> 说-01, 3 -> 原来-01),Map(x2 -> 扳道工, x7 -> 原来-01, x4 -> 他们, x3 -> 人, x6 -> 那些, x0 -> 说-01))),[Ljava.lang.String;@1039bfc4,Annotation([Ljava.lang.String;@7f85217c,[Ljava.lang.String;@1fd7a37,[Ljava.lang.String;@5b202ff),Annotation([Ljava.lang.String;@58a84a12,[Ljava.lang.String;@e700eba,[Ledu.cmu.lti.nlp.amr.Dependency;@6436e181),Annotation([Ljava.lang.String;@7186b202,[Ljava.lang.String;@6b649efa,[Ljava.lang.String;@65ef48f2),Annotation([Ljava.lang.String;@36068727,[Ljava.lang.String;@72543547,[Ledu.cmu.lti.nlp.amr.Entity;@3d88e6b9))
AMR:
(x0 / 说-01, location, x3 / 人)
(x0 / 说-01, topic, x2 / 扳道工)
(x3 / 人, domain, x4 / 他们)
(x3 / 人, mod, x6 / 那些)
(x6 / 那些, mod, x7 / 原来-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,496 microseconds
Sentence: “ 这 是 一 次 对开 列车 。 ”

Oracle Span 1:  列车 => 列车
Oracle Span 2:  对开 => 对开-01
Oracle Span 3:  这 => 这
Spans:
Span 6-7:  列车 => 列车
Span 5-6:  对开 => 对开-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  列车 => 列车
Oracle Span 5-6:  对开 => 对开-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	次	_	M	M	_	7	clf	_	_
6	对开	_	NN	NN	_	7	nn	_	_
7	列车	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 对开-01, arg0, x7 / 列车)
(x7 / 列车, domain, x9 / 这)

Input(Some(Graph((say :arg1 (列车 :arg0-of 对开-01 :domain 这 :quant 1)),ArrayBuffer(Span(6,7,List(0),列车,列车,false), Span(5,6,List(1),对开,对开-01,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 对开-01, 0 -> 列车),Map(x7 -> 列车, x11 -> 对开-01, x9 -> 这))),[Ljava.lang.String;@22bf9122,Annotation([Ljava.lang.String;@208205ed,[Ljava.lang.String;@73afe2b7,[Ljava.lang.String;@9687f55),Annotation([Ljava.lang.String;@5700c9db,[Ljava.lang.String;@671d03bb,[Ledu.cmu.lti.nlp.amr.Dependency;@6babffb5),Annotation([Ljava.lang.String;@2173a742,[Ljava.lang.String;@706ceca6,[Ljava.lang.String;@7f6329cb),Annotation([Ljava.lang.String;@4b8137c5,[Ljava.lang.String;@77f4c040,[Ledu.cmu.lti.nlp.amr.Entity;@606a1bc4))
AMR:
(x7 / 列车, domain, x9 / 这)
(x7 / 列车, mod, x11 / 对开-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 5,416 microseconds
Sentence: “ 他们 不 满意 他们 原来 所 住 的 地方 吗 ？ ”

Oracle Span 1:  他们 => 他们
Oracle Span 2:  住 => 住-01
Oracle Span 3:  原来 => 原来-01
Oracle Span 4:  地方 => 地方
Oracle Span 5:  满意 => 满意-01
Spans:
Span 1-2:  他们 => 他们
Span 7-8:  住 => 住-01
Span 5-6:  原来 => 原来-01
Span 9-10:  地方 => 地方
Span 3-4:  满意 => 满意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 7-8:  住 => 住-01
Oracle Span 5-6:  原来 => 原来-01
Oracle Span 9-10:  地方 => 地方
Oracle Span 3-4:  满意 => 满意-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	满意	_	VV	VV	_	0	root	_	_
5	他们	_	PN	PN	_	8	nsubj	_	_
6	原来	_	AD	AD	_	8	advmod	_	_
7	所	_	MSP	MSP	_	8	prtmod	_	_
8	住	_	VV	VV	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	地方	_	NN	NN	_	4	dobj	_	_
11	吗	_	SP	SP	_	4	dep	_	_
12	？	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 满意-01, arg0, x13 / 他们)
(x11 / 满意-01, arg1, x14 / 地方)
(x15 / 住-01, arg1, x14 / 地方)
(x15 / 住-01, time, x17 / 原来-01)

Input(Some(Graph((say :arg1 (满意-01 :mode interrogative :arg1 (地方 :arg1-of (住-01 :time 原来-01 :arg0 x13)) :arg0 他们 :polarity -)),ArrayBuffer(Span(3,4,List(0),满意,满意-01,false), Span(9,10,List(1),地方,地方,false), Span(7,8,List(2),住,住-01,false), Span(5,6,List(3),原来,原来-01,false), Span(1,2,List(4),他们,他们,false)),Map(2 -> 住-01, 1 -> 地方, 4 -> 他们, 0 -> 满意-01, 3 -> 原来-01),Map(x13 -> 他们, x15 -> 住-01, x11 -> 满意-01, x14 -> 地方, x17 -> 原来-01))),[Ljava.lang.String;@6a15b73,Annotation([Ljava.lang.String;@44dc7b7d,[Ljava.lang.String;@15fb4566,[Ljava.lang.String;@25ffd826),Annotation([Ljava.lang.String;@29896529,[Ljava.lang.String;@e29f4f6,[Ledu.cmu.lti.nlp.amr.Dependency;@41b64020),Annotation([Ljava.lang.String;@1a538ed8,[Ljava.lang.String;@78910096,[Ljava.lang.String;@39dec536),Annotation([Ljava.lang.String;@4a1a256d,[Ljava.lang.String;@4cb957b8,[Ledu.cmu.lti.nlp.amr.Entity;@3cdc7b09))
AMR:
(x11 / 满意-01, location, x13 / 他们)
(x11 / 满意-01, prep-through, x17 / 原来-01)
(x15 / 住-01, manner, x17 / 原来-01)
(x15 / 住-01, prep-through, x14 / 地方)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 8,937 microseconds
Sentence: “ 人们 是 从来 也 不 会 满意 自己 所 在 的 地方 的 。 ” 扳道工 说 。

Oracle Span 1:  也 => 也
Oracle Span 2:  人们 => 人们
Oracle Span 3:  从来 => 从来
Oracle Span 4:  会 => 会-02
Oracle Span 5:  地方 => 地方
Oracle Span 6:  扳道工 => 扳道工
Oracle Span 7:  满意 => 满意-01
Oracle Span 8:  说 => 说-01
Spans:
Span 4-5:  也 => 也
Span 1-2:  人们 => 人们
Span 3-4:  从来 => 从来
Span 6-7:  会 => 会-02
Span 12-13:  地方 => 地方
Span 16-17:  扳道工 => 扳道工
Span 7-8:  满意 => 满意-01
Span 17-18:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 1-2:  人们 => 人们
Oracle Span 3-4:  从来 => 从来
Oracle Span 6-7:  会 => 会-02
Oracle Span 12-13:  地方 => 地方
Oracle Span 16-17:  扳道工 => 扳道工
Oracle Span 7-8:  满意 => 满意-01
Oracle Span 17-18:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人们	_	NN	NN	_	3	top	_	_
3	是	_	VC	VC	_	18	dep	_	_
4	从来	_	AD	AD	_	8	advmod	_	_
5	也	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	会	_	NN	NN	_	8	prep	_	_
8	满意	_	VV	VV	_	3	ccomp	_	_
9	自己	_	PN	PN	_	11	nsubj	_	_
10	所	_	MSP	MSP	_	11	prtmod	_	_
11	在	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	地方	_	NN	NN	_	8	dobj	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	。	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	3	punct	_	_
17	扳道工	_	NR	NR	_	18	nsubj	_	_
18	说	_	VV	VV	_	0	root	_	_
19	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 满意-01)
(x3 / 会-02, manner, x7 / 也)
(x4 / 满意-01, arg0, x5 / 人们)
(x4 / 满意-01, arg1, x8 / 地方)
(x4 / 满意-01, duration, x11 / 从来)

Input(Some(Graph((说-01 :arg1 (会-02 :manner 也 :polarity - :arg0 (满意-01 :duration 从来 :arg1 (地方 :arg1-of (所在-01 :arg0 x5)) :arg0 人们)) :arg0 扳道工),ArrayBuffer(Span(17,18,List(0),说,说-01,false), Span(6,7,List(1),会,会-02,false), Span(4,5,List(2),也,也,false), Span(7,8,List(3),满意,满意-01,false), Span(3,4,List(4),从来,从来,false), Span(12,13,List(5),地方,地方,false), Span(1,2,List(6),人们,人们,false), Span(16,17,List(7),扳道工,扳道工,false)),Map(2 -> 也, 5 -> 地方, 7 -> 扳道工, 1 -> 会-02, 4 -> 从来, 6 -> 人们, 0 -> 说-01, 3 -> 满意-01),Map(x2 -> 扳道工, x5 -> 人们, x8 -> 地方, x7 -> 也, x4 -> 满意-01, x11 -> 从来, x3 -> 会-02, x0 -> 说-01))),[Ljava.lang.String;@7364eed1,Annotation([Ljava.lang.String;@684e8c9d,[Ljava.lang.String;@6ecc02bb,[Ljava.lang.String;@31973858),Annotation([Ljava.lang.String;@65514add,[Ljava.lang.String;@79e7188e,[Ledu.cmu.lti.nlp.amr.Dependency;@773014d3),Annotation([Ljava.lang.String;@7fedb795,[Ljava.lang.String;@10850d17,[Ljava.lang.String;@51e754e1),Annotation([Ljava.lang.String;@26865482,[Ljava.lang.String;@34451ed8,[Ledu.cmu.lti.nlp.amr.Entity;@c1050f2))
AMR:
(x0 / 说-01, location, x8 / 地方)
(x0 / 说-01, topic, x2 / 扳道工)
(x3 / 会-02, manner, x7 / 也)
(x3 / 会-02, purpose, x4 / 满意-01)
(x4 / 满意-01, duration, x11 / 从来)
(x4 / 满意-01, location, x5 / 人们)
(x4 / 满意-01, location, x8 / 地方)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,362 microseconds
Sentence: 此时 ， 第三 趟 灯火 明亮 的 快车 又 隆隆 而 过 。

Oracle Span 1:  快车 => 快车
Oracle Span 2:  明亮 => 明亮-01
Oracle Span 3:  此时 => 此时
Oracle Span 4:  灯火 => 灯火
Oracle Span 5:  过 => 过-05
Oracle Span 6:  隆隆 => 隆隆-01
Spans:
Span 7-8:  快车 => 快车
Span 5-6:  明亮 => 明亮-01
Span 0-1:  此时 => 此时
Span 4-5:  灯火 => 灯火
Span 11-12:  过 => 过-05
Span 9-10:  隆隆 => 隆隆-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  快车 => 快车
Oracle Span 5-6:  明亮 => 明亮-01
Oracle Span 0-1:  此时 => 此时
Oracle Span 4-5:  灯火 => 灯火
Oracle Span 11-12:  过 => 过-05
Oracle Span 9-10:  隆隆 => 隆隆-01

Dependencies:
1	此时	_	NT	NT	_	12	tmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	第三	_	OD	OD	_	4	nummod	_	_
4	趟	_	NN	NN	_	6	nn	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	明亮	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	快车	_	NN	NN	_	12	nsubj	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	隆隆	_	AD	AD	_	12	advmod	_	_
11	而	_	MSP	MSP	_	12	prtmod	_	_
12	过	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 过-05, arg0, x3 / 快车)
(x0 / 过-05, manner, x2 / 隆隆-01)
(x0 / 过-05, time, x8 / 此时)
(x10 / 明亮-01, arg0, x11 / 灯火)
(x3 / 快车, mod, x10 / 明亮-01)

Input(Some(Graph((过-05 :time 此时 :arg0 (快车 :ord (ordinal-entity :value 3) :mod (明亮-01 :arg0 灯火)) :manner 隆隆-01),ArrayBuffer(Span(11,12,List(0),过,过-05,false), Span(0,1,List(1),此时,此时,false), Span(7,8,List(2),快车,快车,false), Span(5,6,List(3),明亮,明亮-01,false), Span(4,5,List(4),灯火,灯火,false), Span(9,10,List(5),隆隆,隆隆-01,false)),Map(2 -> 快车, 5 -> 隆隆-01, 1 -> 此时, 4 -> 灯火, 0 -> 过-05, 3 -> 明亮-01),Map(x2 -> 隆隆-01, x10 -> 明亮-01, x8 -> 此时, x11 -> 灯火, x3 -> 快车, x0 -> 过-05))),[Ljava.lang.String;@67bb4dcd,Annotation([Ljava.lang.String;@738d37fc,[Ljava.lang.String;@6fa2448b,[Ljava.lang.String;@61bb1e4d),Annotation([Ljava.lang.String;@5c53f292,[Ljava.lang.String;@46fb0c33,[Ledu.cmu.lti.nlp.amr.Dependency;@3b009e7b),Annotation([Ljava.lang.String;@270a620,[Ljava.lang.String;@41f4039e,[Ljava.lang.String;@5ff00507),Annotation([Ljava.lang.String;@603cabc4,[Ljava.lang.String;@67fa5045,[Ledu.cmu.lti.nlp.amr.Entity;@6f347d7))
AMR:
(x0 / 过-05, beneficiary, x3 / 快车)
(x0 / 过-05, manner, x2 / 隆隆-01)
(x0 / 过-05, time, x8 / 此时)
(x10 / 明亮-01, snt1, x11 / 灯火)
(x3 / 快车, mod, x10 / 明亮-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,354 microseconds
Sentence: “ 他们 是 在 追随 第一 批 旅客 吗 ？ ” 小 王子 问道 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  小 => 小-01
Oracle Span 3:  批 => 批
Oracle Span 4:  旅客 => 旅客
Oracle Span 5:  王子 => 王子
Oracle Span 6:  追随 => 追随-01
Oracle Span 7:  问道 => 问道-01
Spans:
Span 1-2:  他们 => 他们
Span 11-12:  小 => 小-01
Span 6-7:  批 => 批
Span 7-8:  旅客 => 旅客
Span 12-13:  王子 => 王子
Span 4-5:  追随 => 追随-01
Span 13-14:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 11-12:  小 => 小-01
Oracle Span 6-7:  批 => 批
Oracle Span 7-8:  旅客 => 旅客
Oracle Span 12-13:  王子 => 王子
Oracle Span 4-5:  追随 => 追随-01
Oracle Span 13-14:  问道 => 问道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	在	_	AD	AD	_	5	advmod	_	_
5	追随	_	VV	VV	_	3	ccomp	_	_
6	第一	_	OD	OD	_	7	dep	_	_
7	批	_	VV	VV	_	5	ccomp	_	_
8	旅客	_	NN	NN	_	7	dobj	_	_
9	吗	_	SP	SP	_	7	dep	_	_
10	？	_	PU	PU	_	5	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	问道	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 追随-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 追随-01, arg0, x5 / 他们)
(x4 / 追随-01, arg1, x6 / 旅客)

Input(Some(Graph((问道-01 :arg1 (追随-01 :mode interrogative :arg1 (旅客 :ord (ordinal-entity :value 1 :unit 批)) :arg0 他们) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(13,14,List(0),问道,问道-01,false), Span(4,5,List(1),追随,追随-01,false), Span(7,8,List(2),旅客,旅客,false), Span(6,7,List(3),批,批,false), Span(1,2,List(4),他们,他们,false), Span(12,13,List(5),王子,王子,false), Span(11,12,List(6),小,小-01,false)),Map(2 -> 旅客, 5 -> 王子, 1 -> 追随-01, 4 -> 他们, 6 -> 小-01, 0 -> 问道-01, 3 -> 批),Map(x16 -> 批, x2 -> 王子, x5 -> 他们, x4 -> 追随-01, x3 -> 小-01, x6 -> 旅客, x0 -> 问道-01))),[Ljava.lang.String;@5974b233,Annotation([Ljava.lang.String;@5c134052,[Ljava.lang.String;@69de5bed,[Ljava.lang.String;@750f64fe),Annotation([Ljava.lang.String;@996a546,[Ljava.lang.String;@4fc165f6,[Ledu.cmu.lti.nlp.amr.Dependency;@545b5ed0),Annotation([Ljava.lang.String;@5a7df831,[Ljava.lang.String;@667dcaad,[Ljava.lang.String;@22d7fd41),Annotation([Ljava.lang.String;@2c748a15,[Ljava.lang.String;@19fd43da,[Ledu.cmu.lti.nlp.amr.Entity;@115dcaea))
AMR:
(x0 / 问道-01, ARG3, x2 / 王子)
(x0 / 问道-01, time, x4 / 追随-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 追随-01, location, x16 / 批)
(x4 / 追随-01, location, x5 / 他们)
(x6 / 旅客, location, x16 / 批)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,451 microseconds
Sentence: “ 他们 什么 也 不 追随 。 ” 扳道工 说 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  他们 => 他们
Oracle Span 4:  扳道工 => 扳道工
Oracle Span 5:  说 => 说-01
Oracle Span 6:  追随 => 追随-01
Spans:
Span 3-4:  也 => 也
Span 2-3:  什么 => 什么
Span 1-2:  他们 => 他们
Span 8-9:  扳道工 => 扳道工
Span 9-10:  说 => 说-01
Span 5-6:  追随 => 追随-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  什么 => 什么
Oracle Span 1-2:  他们 => 他们
Oracle Span 8-9:  扳道工 => 扳道工
Oracle Span 9-10:  说 => 说-01
Oracle Span 5-6:  追随 => 追随-01

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	他们	_	PN	PN	_	6	nsubj	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	追随	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_
9	扳道工	_	AD	AD	_	10	advmod	_	_
10	说	_	VV	VV	_	6	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 追随-01)
(x3 / 追随-01, arg0, x5 / 他们)
(x3 / 追随-01, arg1, x6 / 什么)
(x3 / 追随-01, manner, x7 / 也)

Input(Some(Graph((说-01 :arg1 (追随-01 :manner 也 :arg1 什么 :arg0 他们 :polarity -) :arg0 扳道工),ArrayBuffer(Span(9,10,List(0),说,说-01,false), Span(5,6,List(1),追随,追随-01,false), Span(3,4,List(2),也,也,false), Span(2,3,List(3),什么,什么,false), Span(1,2,List(4),他们,他们,false), Span(8,9,List(5),扳道工,扳道工,false)),Map(2 -> 也, 5 -> 扳道工, 1 -> 追随-01, 4 -> 他们, 0 -> 说-01, 3 -> 什么),Map(x2 -> 扳道工, x5 -> 他们, x7 -> 也, x3 -> 追随-01, x6 -> 什么, x0 -> 说-01))),[Ljava.lang.String;@cfd1075,Annotation([Ljava.lang.String;@45117dd,[Ljava.lang.String;@7741771e,[Ljava.lang.String;@834e986),Annotation([Ljava.lang.String;@6cae2e4d,[Ljava.lang.String;@604d23fa,[Ledu.cmu.lti.nlp.amr.Dependency;@1cc8416a),Annotation([Ljava.lang.String;@331ff3ac,[Ljava.lang.String;@2e5e6fc4,[Ljava.lang.String;@2785db06),Annotation([Ljava.lang.String;@79980d8d,[Ljava.lang.String;@35d60381,[Ledu.cmu.lti.nlp.amr.Entity;@68ab6ab0))
AMR:
(x0 / 说-01, purpose, x3 / 追随-01)
(x0 / 说-01, topic, x2 / 扳道工)
(x3 / 追随-01, location, x5 / 他们)
(x3 / 追随-01, manner, x7 / 也)
(x3 / 追随-01, snt3, x6 / 什么)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,838 microseconds
Sentence: “ 他们 在 里面 睡觉 ， 或是 在 打哈欠 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  打哈欠 => 打哈欠-01
Oracle Span 3:  睡觉 => 睡觉-01
Oracle Span 4:  里面 => 里面
Spans:
Span 1-2:  他们 => 他们
Span 8-9:  打哈欠 => 打哈欠-01
Span 4-5:  睡觉 => 睡觉-01
Span 3-4:  里面 => 里面

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 8-9:  打哈欠 => 打哈欠-01
Oracle Span 4-5:  睡觉 => 睡觉-01
Oracle Span 3-4:  里面 => 里面

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他们	_	PN	PN	_	5	nsubj	_	_
3	在	_	P	P	_	5	prep	_	_
4	里面	_	NN	NN	_	3	pobj	_	_
5	睡觉	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	或是	_	VV	VV	_	5	ccomp	_	_
8	在	_	P	P	_	7	prep	_	_
9	打哈欠	_	NR	NR	_	8	pobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 睡觉-01, arg0, x11 / 他们)
(x10 / 睡觉-01, location, x12 / 里面)

Input(Some(Graph((say :arg1 (or :op (睡觉-01 :location 里面 :arg0 他们) :op (打哈欠-01 :arg0 x11))),ArrayBuffer(Span(4,5,List(0),睡觉,睡觉-01,false), Span(3,4,List(1),里面,里面,false), Span(1,2,List(2),他们,他们,false), Span(8,9,List(3),打哈欠,打哈欠-01,false)),Map(2 -> 他们, 1 -> 里面, 0 -> 睡觉-01, 3 -> 打哈欠-01),Map(x10 -> 睡觉-01, x13 -> 打哈欠-01, x12 -> 里面, x11 -> 他们))),[Ljava.lang.String;@61ffd148,Annotation([Ljava.lang.String;@58324c9f,[Ljava.lang.String;@5d7d8613,[Ljava.lang.String;@6eb089e6),Annotation([Ljava.lang.String;@715a70e9,[Ljava.lang.String;@3bc69ce9,[Ledu.cmu.lti.nlp.amr.Dependency;@abad89c),Annotation([Ljava.lang.String;@602f8f94,[Ljava.lang.String;@42507640,[Ljava.lang.String;@4dfe8b37),Annotation([Ljava.lang.String;@11dcd42c,[Ljava.lang.String;@d13baac,[Ledu.cmu.lti.nlp.amr.Entity;@4c302f38))
AMR:
(x10 / 睡觉-01, location, x12 / 里面)
(x10 / 睡觉-01, purpose, x13 / 打哈欠-01)
(x12 / 里面, location, x11 / 他们)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 6,017 microseconds
Sentence: 只有 孩子们 把 鼻子 贴 在 玻璃窗 上 往 外 看 。 ”

Oracle Span 1:  外 => 外
Oracle Span 2:  孩子们 => 孩子们
Oracle Span 3:  玻璃窗 => 玻璃窗
Oracle Span 4:  看 => 看-02
Oracle Span 5:  贴 => 贴-01
Oracle Span 6:  鼻子 => 鼻子
Spans:
Span 9-10:  外 => 外
Span 1-2:  孩子们 => 孩子们
Span 6-7:  玻璃窗 => 玻璃窗
Span 10-11:  看 => 看-02
Span 4-5:  贴 => 贴-01
Span 3-4:  鼻子 => 鼻子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  外 => 外
Oracle Span 1-2:  孩子们 => 孩子们
Oracle Span 6-7:  玻璃窗 => 玻璃窗
Oracle Span 10-11:  看 => 看-02
Oracle Span 4-5:  贴 => 贴-01
Oracle Span 3-4:  鼻子 => 鼻子

Dependencies:
1	只有	_	AD	AD	_	2	advmod	_	_
2	孩子们	_	NN	NN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	鼻子	_	NN	NN	_	5	nsubj	_	_
5	贴	_	VV	VV	_	0	root	_	_
6	在	_	P	P	_	5	prep	_	_
7	玻璃窗	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	6	plmod	_	_
9	往	_	P	P	_	11	prep	_	_
10	外	_	NN	NN	_	9	pobj	_	_
11	看	_	VV	VV	_	5	dep	_	_
12	。	_	PU	PU	_	5	punct	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x42 / 看-02, arg0, x43 / 孩子们)
(x42 / 看-02, direction, x44 / 外)
(x42 / 看-02, manner, x45 / 贴-01)
(x45 / 贴-01, arg1, x47 / 鼻子)
(x45 / 贴-01, arg2, x48 / 玻璃窗)

Input(Some(Graph((say :arg1 (有-04 :manner 只 :arg0 (看-02 :manner (贴-01 :arg2 玻璃窗 :arg1 鼻子 :arg0 x43) :direction 外 :arg0 孩子们))),ArrayBuffer(Span(10,11,List(0),看,看-02,false), Span(4,5,List(1),贴,贴-01,false), Span(6,7,List(2),玻璃窗,玻璃窗,false), Span(3,4,List(3),鼻子,鼻子,false), Span(9,10,List(4),外,外,false), Span(1,2,List(5),孩子们,孩子们,false)),Map(2 -> 玻璃窗, 5 -> 孩子们, 1 -> 贴-01, 4 -> 外, 0 -> 看-02, 3 -> 鼻子),Map(x43 -> 孩子们, x45 -> 贴-01, x48 -> 玻璃窗, x42 -> 看-02, x44 -> 外, x47 -> 鼻子))),[Ljava.lang.String;@75aea2ba,Annotation([Ljava.lang.String;@2a47597,[Ljava.lang.String;@12f279b5,[Ljava.lang.String;@5ff6dd3c),Annotation([Ljava.lang.String;@5fcd1f0a,[Ljava.lang.String;@7e64c1a9,[Ledu.cmu.lti.nlp.amr.Dependency;@7fda2001),Annotation([Ljava.lang.String;@162c1dfb,[Ljava.lang.String;@21ae657b,[Ljava.lang.String;@799f916e),Annotation([Ljava.lang.String;@576b7c74,[Ljava.lang.String;@21de60a7,[Ledu.cmu.lti.nlp.amr.Entity;@73894c5a))
AMR:
(x42 / 看-02, direction, x44 / 外)
(x42 / 看-02, manner, x45 / 贴-01)
(x43 / 孩子们, part, x47 / 鼻子)
(x45 / 贴-01, degree, x47 / 鼻子)
(x45 / 贴-01, op, x48 / 玻璃窗)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.2
WARNING: makeIds can't find span Id: 0.0.1.2.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 11,222 microseconds
Sentence: “ 只有 孩子 知道 他们 自己 在 寻找 什么 。 ” 小 王子 说 ，

Oracle Span 1:  什么 => 什么
Oracle Span 2:  只有 => 只有
Oracle Span 3:  孩子 => 孩子
Oracle Span 4:  寻找 => 寻找-01
Oracle Span 5:  小 => 小-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  知道 => 知道-01
Oracle Span 8:  说 => 说-01
Spans:
Span 8-9:  什么 => 什么
Span 1-2:  只有 => 只有
Span 2-3:  孩子 => 孩子
Span 7-8:  寻找 => 寻找-01
Span 11-12:  小 => 小-01
Span 12-13:  王子 => 王子
Span 3-4:  知道 => 知道-01
Span 13-14:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  什么 => 什么
Oracle Span 1-2:  只有 => 只有
Oracle Span 2-3:  孩子 => 孩子
Oracle Span 7-8:  寻找 => 寻找-01
Oracle Span 11-12:  小 => 小-01
Oracle Span 12-13:  王子 => 王子
Oracle Span 3-4:  知道 => 知道-01
Oracle Span 13-14:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	只有	_	AD	AD	_	3	advmod	_	_
3	孩子	_	NN	NN	_	4	nsubj	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	他们	_	PN	PN	_	6	dep	_	_
6	自己	_	PN	PN	_	8	nsubj	_	_
7	在	_	AD	AD	_	8	advmod	_	_
8	寻找	_	VV	VV	_	4	ccomp	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	dep	_	_
14	说	_	VV	VV	_	4	conj	_	_
15	,	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 知道-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 知道-01, arg0, x5 / 孩子)
(x4 / 知道-01, arg1, x7 / 寻找-01)
(x5 / 孩子, mod, x6 / 只有)
(x7 / 寻找-01, arg1, x9 / 什么)

Input(Some(Graph((说-01 :arg1 (知道-01 :arg1 (寻找-01 :arg1 什么 :arg0 x5) :arg0 (孩子 :mod 只有)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(13,14,List(0),说,说-01,false), Span(3,4,List(1),知道,知道-01,false), Span(7,8,List(2),寻找,寻找-01,false), Span(8,9,List(3),什么,什么,false), Span(2,3,List(4),孩子,孩子,false), Span(1,2,List(5),只有,只有,false), Span(12,13,List(6),王子,王子,false), Span(11,12,List(7),小,小-01,false)),Map(2 -> 寻找-01, 5 -> 只有, 7 -> 小-01, 1 -> 知道-01, 4 -> 孩子, 6 -> 王子, 0 -> 说-01, 3 -> 什么),Map(x2 -> 王子, x5 -> 孩子, x7 -> 寻找-01, x4 -> 知道-01, x3 -> 小-01, x6 -> 只有, x9 -> 什么, x0 -> 说-01))),[Ljava.lang.String;@7698b7a4,Annotation([Ljava.lang.String;@7a9ceddf,[Ljava.lang.String;@28157173,[Ljava.lang.String;@11c713b7),Annotation([Ljava.lang.String;@2251b3bc,[Ljava.lang.String;@3fbe503c,[Ledu.cmu.lti.nlp.amr.Dependency;@3c232051),Annotation([Ljava.lang.String;@15d0d6c9,[Ljava.lang.String;@3ab35b9c,[Ljava.lang.String;@7741d346),Annotation([Ljava.lang.String;@52454457,[Ljava.lang.String;@4130a648,[Ledu.cmu.lti.nlp.amr.Entity;@61ff6a49))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x7 / 寻找-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 知道-01, direction, x5 / 孩子)
(x4 / 知道-01, prep-through, x7 / 寻找-01)
(x5 / 孩子, mod, x6 / 只有)
(x7 / 寻找-01, subset, x9 / 什么)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,091 microseconds
Sentence: “ 他们 为 一 个 布娃娃 花费 不少 时间 ， 这 个 布娃娃 就 成 了 很 重要 的 东西 ， 如果 有 人 夺走 的 他们 的 布娃娃 ， 他们 就 哭泣 … ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  人 => 人
Oracle Span 3:  他们 => 他们
Oracle Span 4:  哭泣 => 哭泣-01
Oracle Span 5:  夺走 => 夺走-01
Oracle Span 6:  就 => 就
Oracle Span 7:  就 => 就
Oracle Span 8:  布娃娃 => 布娃娃
Oracle Span 9:  布娃娃 => 布娃娃
Oracle Span 10:  很 => 很
Oracle Span 11:  成 => 成-01
Oracle Span 12:  时间 => 时间
Oracle Span 13:  有 => 有-03
Oracle Span 14:  花费 => 花费-01
Oracle Span 15:  重要 => 重要-01
Spans:
Span 19-20:  东西 => 东西
Span 23-24:  人 => 人
Span 1-2:  他们 => 他们
Span 32-33:  哭泣 => 哭泣-01
Span 24-25:  夺走 => 夺走-01
Span 13-14:  就 => 就
Span 31-32:  就 => 就
Span 5-6:  布娃娃 => 布娃娃
Span 12-13:  布娃娃 => 布娃娃
Span 16-17:  很 => 很
Span 14-15:  成 => 成-01
Span 8-9:  时间 => 时间
Span 22-23:  有 => 有-03
Span 6-7:  花费 => 花费-01
Span 17-18:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 19-20:  东西 => 东西
Oracle Span 23-24:  人 => 人
Oracle Span 1-2:  他们 => 他们
Oracle Span 32-33:  哭泣 => 哭泣-01
Oracle Span 24-25:  夺走 => 夺走-01
Oracle Span 13-14:  就 => 就
Oracle Span 31-32:  就 => 就
Oracle Span 5-6:  布娃娃 => 布娃娃
Oracle Span 12-13:  布娃娃 => 布娃娃
Oracle Span 16-17:  很 => 很
Oracle Span 14-15:  成 => 成-01
Oracle Span 8-9:  时间 => 时间
Oracle Span 22-23:  有 => 有-03
Oracle Span 6-7:  花费 => 花费-01
Oracle Span 17-18:  重要 => 重要-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	他们	_	PN	PN	_	7	nsubj	_	_
3	为	_	P	P	_	7	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	布娃娃	_	NN	NN	_	3	pobj	_	_
7	花费	_	VV	VV	_	0	root	_	_
8	不少	_	CD	CD	_	9	nummod	_	_
9	时间	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	7	punct	_	_
11	这	_	DT	DT	_	13	det	_	_
12	个	_	M	M	_	11	clf	_	_
13	布娃娃	_	NN	NN	_	15	nsubj	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	成	_	VV	VV	_	7	conj	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	很	_	AD	AD	_	18	advmod	_	_
18	重要	_	VA	VA	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	东西	_	NN	NN	_	15	dobj	_	_
21	,	_	PU	PU	_	7	punct	_	_
22	如果	_	CS	CS	_	23	advmod	_	_
23	有	_	VE	VE	_	7	conj	_	_
24	人	_	NN	NN	_	25	nn	_	_
25	夺走	_	NN	NN	_	29	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	他们	_	PN	PN	_	29	assmod	_	_
28	的	_	DEG	DEG	_	27	assm	_	_
29	布娃娃	_	NN	NN	_	23	dobj	_	_
30	,	_	PU	PU	_	7	punct	_	_
31	他们	_	PN	PN	_	33	dep	_	_
32	就	_	AD	AD	_	33	advmod	_	_
33	哭泣	_	VV	VV	_	7	conj	_	_
34	…	_	NN	NN	_	33	dobj	_	_
35	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x30 / 花费-01, arg0, x31 / 他们)
(x30 / 花费-01, arg1, x33 / 时间)
(x30 / 花费-01, arg2, x37 / 布娃娃)
(x39 / 成-01, arg1, x42 / 东西)
(x39 / 成-01, manner, x41 / 就)
(x42 / 东西, mod, x43 / 重要-01)
(x43 / 重要-01, degree, x44 / 很)
(x47 / 有-03, arg1, x48 / 人)
(x49 / 夺走-01, arg0, x48 / 人)
(x49 / 夺走-01, arg1, x50 / 布娃娃)
(x52 / 哭泣-01, manner, x53 / 就)

Input(Some(Graph((say :arg1 (and :op (causation :arg1 (花费-01 :arg2 (布娃娃 :quant 1) :arg1 (时间 :mod (少 :polarity -)) :arg0 他们) :arg2 (成-01 :arg1 (东西 :mod (重要-01 :degree 很)) :manner 就 :arg0 x37)) :op (condition :arg1 (有-03 :arg1 (人 :arg0-of (夺走-01 :arg1 (布娃娃 :poss x31)))) :arg2 (哭泣-01 :arg0 x31 :manner 就)))),ArrayBuffer(Span(6,7,List(0),花费,花费-01,false), Span(5,6,List(1),布娃娃,布娃娃,false), Span(8,9,List(2),时间,时间,false), Span(1,2,List(3),他们,他们,false), Span(14,15,List(4),成,成-01,false), Span(19,20,List(5),东西,东西,false), Span(17,18,List(6),重要,重要-01,false), Span(16,17,List(7),很,很,false), Span(13,14,List(8),就,就,false), Span(22,23,List(9),有,有-03,false), Span(23,24,List(10),人,人,false), Span(24,25,List(11),夺走,夺走-01,false), Span(12,13,List(12),布娃娃,布娃娃,false), Span(32,33,List(13),哭泣,哭泣-01,false), Span(31,32,List(14),就,就,false)),Map(2 -> 时间, 5 -> 东西, 12 -> 布娃娃, 8 -> 就, 7 -> 很, 1 -> 布娃娃, 4 -> 成-01, 11 -> 夺走-01, 14 -> 就, 6 -> 重要-01, 9 -> 有-03, 0 -> 花费-01, 10 -> 人, 3 -> 他们, 13 -> 哭泣-01),Map(x52 -> 哭泣-01, x49 -> 夺走-01, x43 -> 重要-01, x37 -> 布娃娃, x31 -> 他们, x39 -> 成-01, x30 -> 花费-01, x48 -> 人, x33 -> 时间, x42 -> 东西, x41 -> 就, x50 -> 布娃娃, x44 -> 很, x53 -> 就, x47 -> 有-03))),[Ljava.lang.String;@18dd5ed3,Annotation([Ljava.lang.String;@6042d663,[Ljava.lang.String;@24043ec5,[Ljava.lang.String;@3e33b52e),Annotation([Ljava.lang.String;@4c6a4ffd,[Ljava.lang.String;@3aed69dd,[Ledu.cmu.lti.nlp.amr.Dependency;@3f1a9a53),Annotation([Ljava.lang.String;@1ca3d25b,[Ljava.lang.String;@2287395,[Ljava.lang.String;@535a518c),Annotation([Ljava.lang.String;@38f981b6,[Ljava.lang.String;@3a4aadf8,[Ledu.cmu.lti.nlp.amr.Entity;@7bbfc5ff))
AMR:
(x30 / 花费-01, domain, x31 / 他们)
(x30 / 花费-01, prep-through, x33 / 时间)
(x30 / 花费-01, prep-through, x39 / 成-01)
(x30 / 花费-01, topic, x37 / 布娃娃)
(x39 / 成-01, manner, x41 / 就)
(x39 / 成-01, purpose, x43 / 重要-01)
(x39 / 成-01, time, x50 / 布娃娃)
(x42 / 东西, mod, x43 / 重要-01)
(x43 / 重要-01, degree, x44 / 很)
(x47 / 有-03, extent, x42 / 东西)
(x49 / 夺走-01, direction, x48 / 人)
(x49 / 夺走-01, example, x47 / 有-03)
(x52 / 哭泣-01, manner, x53 / 就)
(x52 / 哭泣-01, time, x49 / 夺走-01)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 70,642 microseconds
Sentence: “ 他们 真 幸运 。 ” 扳道工 说 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  幸运 => 幸运-01
Oracle Span 3:  扳道工 => 扳道工
Oracle Span 4:  真 => 真
Oracle Span 5:  说 => 说-01
Spans:
Span 1-2:  他们 => 他们
Span 3-4:  幸运 => 幸运-01
Span 6-7:  扳道工 => 扳道工
Span 2-3:  真 => 真
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  幸运 => 幸运-01
Oracle Span 6-7:  扳道工 => 扳道工
Oracle Span 2-3:  真 => 真
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	幸运	_	VA	VA	_	8	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	扳道工	_	NR	NR	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 幸运-01)
(x3 / 幸运-01, arg0, x5 / 他们)
(x3 / 幸运-01, degree, x4 / 真)

Input(Some(Graph((说-01 :arg1 (幸运-01 :arg0 他们 :degree 真) :arg0 扳道工),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(3,4,List(1),幸运,幸运-01,false), Span(1,2,List(2),他们,他们,false), Span(2,3,List(3),真,真,false), Span(6,7,List(4),扳道工,扳道工,false)),Map(2 -> 他们, 1 -> 幸运-01, 4 -> 扳道工, 0 -> 说-01, 3 -> 真),Map(x2 -> 扳道工, x5 -> 他们, x4 -> 真, x3 -> 幸运-01, x0 -> 说-01))),[Ljava.lang.String;@7a682d35,Annotation([Ljava.lang.String;@ee8e7ff,[Ljava.lang.String;@61a2aeb7,[Ljava.lang.String;@64b70f41),Annotation([Ljava.lang.String;@5f8d9767,[Ljava.lang.String;@16134476,[Ledu.cmu.lti.nlp.amr.Dependency;@62b09715),Annotation([Ljava.lang.String;@3e214105,[Ljava.lang.String;@da4cf09,[Ljava.lang.String;@1980a3f),Annotation([Ljava.lang.String;@67f63d26,[Ljava.lang.String;@536b71b4,[Ledu.cmu.lti.nlp.amr.Entity;@789c3057))
AMR:
(x0 / 说-01, purpose, x3 / 幸运-01)
(x0 / 说-01, topic, x2 / 扳道工)
(x3 / 幸运-01, degree, x4 / 真)
(x3 / 幸运-01, location, x5 / 他们)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,839 microseconds
Sentence: XXIII 。

Oracle Span 1:  XXIII => XXIII
Spans:
Span 0-1:  XXIII => XXIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXIII => XXIII

Dependencies:
1	XXIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXIII,ArrayBuffer(Span(0,1,List(0),XXIII,XXIII,false)),Map(0 -> XXIII),Map(x0 -> XXIII))),[Ljava.lang.String;@39941489,Annotation([Ljava.lang.String;@6f5d0190,[Ljava.lang.String;@67332b1e,[Ljava.lang.String;@7e34b127),Annotation([Ljava.lang.String;@679dd234,[Ljava.lang.String;@60cb1ed6,[Ledu.cmu.lti.nlp.amr.Dependency;@1e5eb20a),Annotation([Ljava.lang.String;@4538856f,[Ljava.lang.String;@4c3de38e,[Ljava.lang.String;@74b86971),Annotation([Ljava.lang.String;@1f9d4b0e,[Ljava.lang.String;@1e8fb66f,[Ledu.cmu.lti.nlp.amr.Entity;@3d8d17a3))
AMR:


Decoded in 1,132 microseconds
Sentence: “ 你 好 。 ” 小 王子 说 。

Oracle Span 1:  小 => 小-01
Oracle Span 2:  王子 => 王子
Oracle Span 3:  说 => 说-01
Spans:
Span 5-6:  小 => 小-01
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((说-01 :arg1 你好 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 说-01),Map(x2 -> 王子, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@ac91282,Annotation([Ljava.lang.String;@7f79edee,[Ljava.lang.String;@1ca610a0,[Ljava.lang.String;@49433c98),Annotation([Ljava.lang.String;@b5c6a30,[Ljava.lang.String;@3bfae028,[Ledu.cmu.lti.nlp.amr.Dependency;@1775c4e7),Annotation([Ljava.lang.String;@47829d6d,[Ljava.lang.String;@2f677247,[Ljava.lang.String;@43f03c23),Annotation([Ljava.lang.String;@7a1b8a46,[Ljava.lang.String;@2921199d,[Ledu.cmu.lti.nlp.amr.Entity;@3d40a3b4))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,331 microseconds
Sentence: “ 你 好 。 ” 商人 说道 。

Oracle Span 1:  你 => 你
Oracle Span 2:  商人 => 商人
Oracle Span 3:  好 => 好-01
Oracle Span 4:  说道 => 说道-01
Spans:
Span 1-2:  你 => 你
Span 5-6:  商人 => 商人
Span 2-3:  好 => 好-01
Span 6-7:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  商人 => 商人
Oracle Span 2-3:  好 => 好-01
Oracle Span 6-7:  说道 => 说道-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	商人	_	NN	NN	_	7	nsubj	_	_
7	说道	_	VA	VA	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 说道-01, arg0, x6 / 商人)
(x4 / 说道-01, arg1, x7 / 好-01)
(x7 / 好-01, arg0, x8 / 你)

Input(Some(Graph((说道-01 :arg1 (好-01 :arg0 你) :arg0 商人),ArrayBuffer(Span(6,7,List(0),说道,说道-01,false), Span(2,3,List(1),好,好-01,false), Span(1,2,List(2),你,你,false), Span(5,6,List(3),商人,商人,false)),Map(2 -> 你, 1 -> 好-01, 0 -> 说道-01, 3 -> 商人),Map(x8 -> 你, x7 -> 好-01, x4 -> 说道-01, x6 -> 商人))),[Ljava.lang.String;@7f13811b,Annotation([Ljava.lang.String;@59fc6d05,[Ljava.lang.String;@78307a56,[Ljava.lang.String;@40d52be7),Annotation([Ljava.lang.String;@23ad71bf,[Ljava.lang.String;@1983b48a,[Ledu.cmu.lti.nlp.amr.Dependency;@629a9f26),Annotation([Ljava.lang.String;@b791a81,[Ljava.lang.String;@4391a2d8,[Ljava.lang.String;@47b269c4),Annotation([Ljava.lang.String;@71e7adbb,[Ljava.lang.String;@32091c14,[Ledu.cmu.lti.nlp.amr.Entity;@7c40ffef))
AMR:
(x4 / 说道-01, degree, x6 / 商人)
(x4 / 说道-01, manner, x7 / 好-01)
(x7 / 好-01, beneficiary, x8 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,875 microseconds
Sentence: 这 是 一 位 贩卖 能够 止渴 的 精制 药丸 的 商人 。

Oracle Span 1:  商人 => 商人
Oracle Span 2:  止渴 => 止渴-01
Oracle Span 3:  精制 => 精制-01
Oracle Span 4:  能够 => 能够-01
Oracle Span 5:  药丸 => 药丸
Oracle Span 6:  贩卖 => 贩卖-01
Oracle Span 7:  这 => 这
Spans:
Span 11-12:  商人 => 商人
Span 6-7:  止渴 => 止渴-01
Span 8-9:  精制 => 精制-01
Span 5-6:  能够 => 能够-01
Span 9-10:  药丸 => 药丸
Span 4-5:  贩卖 => 贩卖-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  商人 => 商人
Oracle Span 6-7:  止渴 => 止渴-01
Oracle Span 8-9:  精制 => 精制-01
Oracle Span 5-6:  能够 => 能够-01
Oracle Span 9-10:  药丸 => 药丸
Oracle Span 4-5:  贩卖 => 贩卖-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	位	_	M	M	_	12	clf	_	_
5	贩卖	_	VV	VV	_	12	rcmod	_	_
6	能够	_	VV	VV	_	10	rcmod	_	_
7	止渴	_	NN	NN	_	6	dobj	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	精制	_	JJ	JJ	_	10	amod	_	_
10	药丸	_	NN	NN	_	5	dobj	_	_
11	的	_	DEC	DEC	_	5	cpm	_	_
12	商人	_	NN	NN	_	2	attr	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 商人, domain, x3 / 这)
(x10 / 精制-01, arg1, x5 / 药丸)
(x11 / 止渴-01, arg0, x5 / 药丸)
(x12 / 能够-01, arg0, x11 / 止渴-01)
(x4 / 贩卖-01, arg0, x0 / 商人)
(x4 / 贩卖-01, arg1, x5 / 药丸)

Input(Some(Graph((商人 :quant 1 :arg0-of (贩卖-01 :arg1 (药丸 :arg0-of (止渴-01 :arg0-of 能够-01) :arg1-of 精制-01)) :domain 这),ArrayBuffer(Span(11,12,List(0),商人,商人,false), Span(4,5,List(1),贩卖,贩卖-01,false), Span(9,10,List(2),药丸,药丸,false), Span(6,7,List(3),止渴,止渴-01,false), Span(5,6,List(4),能够,能够-01,false), Span(8,9,List(5),精制,精制-01,false), Span(0,1,List(6),这,这,false)),Map(2 -> 药丸, 5 -> 精制-01, 1 -> 贩卖-01, 4 -> 能够-01, 6 -> 这, 0 -> 商人, 3 -> 止渴-01),Map(x10 -> 精制-01, x5 -> 药丸, x12 -> 能够-01, x4 -> 贩卖-01, x3 -> 这, x11 -> 止渴-01, x0 -> 商人))),[Ljava.lang.String;@286855ea,Annotation([Ljava.lang.String;@64aeaf29,[Ljava.lang.String;@1e3df614,[Ljava.lang.String;@6579cdbb),Annotation([Ljava.lang.String;@fd413fb,[Ljava.lang.String;@1e1232cf,[Ledu.cmu.lti.nlp.amr.Dependency;@6f6efa4f),Annotation([Ljava.lang.String;@4451f60c,[Ljava.lang.String;@6b357eb6,[Ljava.lang.String;@64bebd55),Annotation([Ljava.lang.String;@7c1a8f0f,[Ljava.lang.String;@3730f716,[Ledu.cmu.lti.nlp.amr.Entity;@7730ef88))
AMR:
(x0 / 商人, domain, x3 / 这)
(x10 / 精制-01, ARG3, x5 / 药丸)
(x11 / 止渴-01, ARG3, x5 / 药丸)
(x12 / 能够-01, prep-within, x11 / 止渴-01)
(x4 / 贩卖-01, subset, x5 / 药丸)
(x4 / 贩卖-01, value, x0 / 商人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 16,086 microseconds
Sentence: 每 周 吞服 一 丸 就 不 会 感觉 口渴 。

Oracle Span 1:  丸 => 丸
Oracle Span 2:  会 => 会-02
Oracle Span 3:  口渴 => 口渴-01
Oracle Span 4:  吞服 => 吞服-01
Oracle Span 5:  周 => 周
Oracle Span 6:  就 => 就
Oracle Span 7:  每 => 每
Spans:
Span 4-5:  丸 => 丸
Span 7-8:  会 => 会-02
Span 9-10:  口渴 => 口渴-01
Span 2-3:  吞服 => 吞服-01
Span 1-2:  周 => 周
Span 5-6:  就 => 就
Span 0-1:  每 => 每

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  丸 => 丸
Oracle Span 7-8:  会 => 会-02
Oracle Span 9-10:  口渴 => 口渴-01
Oracle Span 2-3:  吞服 => 吞服-01
Oracle Span 1-2:  周 => 周
Oracle Span 5-6:  就 => 就
Oracle Span 0-1:  每 => 每

Dependencies:
1	每	_	DT	DT	_	3	det	_	_
2	周	_	M	M	_	1	clf	_	_
3	吞服	_	NN	NN	_	5	nn	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	丸	_	NN	NN	_	9	nsubj	_	_
6	就	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	mmod	_	_
9	感觉	_	VV	VV	_	0	root	_	_
10	口渴	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 会-02, manner, x14 / 就)
(x6 / 吞服-01, arg1, x7 / 丸)
(x6 / 吞服-01, frequency, x9 / 周)
(x9 / 周, mod, x10 / 每)

Input(Some(Graph((condition :arg1 (吞服-01 :frequency (周 :mod 每) :arg1 (丸 :quant 1)) :arg2 (会-02 :manner 就 :arg0 (感到-01 :arg1 口渴-01) :polarity -)),ArrayBuffer(Span(2,3,List(0),吞服,吞服-01,false), Span(1,2,List(1),周,周,false), Span(0,1,List(2),每,每,false), Span(4,5,List(3),丸,丸,false), Span(7,8,List(4),会,会-02,false), Span(5,6,List(5),就,就,false), Span(9,10,List(6),口渴,口渴-01,false)),Map(2 -> 每, 5 -> 就, 1 -> 周, 4 -> 会-02, 6 -> 口渴-01, 0 -> 吞服-01, 3 -> 丸),Map(x10 -> 每, x15 -> 口渴-01, x7 -> 丸, x11 -> 会-02, x14 -> 就, x6 -> 吞服-01, x9 -> 周))),[Ljava.lang.String;@66f5a02e,Annotation([Ljava.lang.String;@4e3f2908,[Ljava.lang.String;@7e87ef9e,[Ljava.lang.String;@e3b0369),Annotation([Ljava.lang.String;@45843650,[Ljava.lang.String;@72443081,[Ledu.cmu.lti.nlp.amr.Dependency;@33feda48),Annotation([Ljava.lang.String;@6588b715,[Ljava.lang.String;@15a3b42,[Ljava.lang.String;@52c9d3d0),Annotation([Ljava.lang.String;@17207f5b,[Ljava.lang.String;@373052b5,[Ledu.cmu.lti.nlp.amr.Entity;@67e0ff3a))
AMR:
(x11 / 会-02, manner, x14 / 就)
(x14 / 就, ARG5, x7 / 丸)
(x15 / 口渴-01, time, x7 / 丸)
(x6 / 吞服-01, ARG3, x7 / 丸)
(x6 / 吞服-01, frequency, x9 / 周)
(x9 / 周, mod, x10 / 每)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 16,619 microseconds
Sentence: “ 你 为什么 卖 这 玩艺儿 ？ ” 小 王子 说 。

Oracle Span 1:  你 => 你
Oracle Span 2:  卖 => 卖-03
Oracle Span 3:  小 => 小
Oracle Span 4:  王子 => 王子
Oracle Span 5:  玩艺儿 => 玩艺儿
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Spans:
Span 1-2:  你 => 你
Span 3-4:  卖 => 卖-03
Span 8-9:  小 => 小
Span 9-10:  王子 => 王子
Span 5-6:  玩艺儿 => 玩艺儿
Span 10-11:  说 => 说-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  卖 => 卖-03
Oracle Span 8-9:  小 => 小
Oracle Span 9-10:  王子 => 王子
Oracle Span 5-6:  玩艺儿 => 玩艺儿
Oracle Span 10-11:  说 => 说-01
Oracle Span 4-5:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	为什么	_	AD	AD	_	4	advmod	_	_
4	卖	_	VV	VV	_	10	vmod	_	_
5	这	_	DT	DT	_	6	det	_	_
6	玩艺儿	_	NN	NN	_	4	dobj	_	_
7	？	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 卖-03)
(x2 / 王子, mod, x3 / 小)
(x4 / 卖-03, arg0, x5 / 你)
(x4 / 卖-03, arg1, x7 / 玩艺儿)
(x7 / 玩艺儿, mod, x8 / 这)

Input(Some(Graph((说-01 :arg1 (卖-03 :mode interrogative :cause amr-unknown :arg1 (玩艺儿 :mod 这) :arg0 你) :arg0 (王子 :mod 小)),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(3,4,List(1),卖,卖-03,false), Span(5,6,List(2),玩艺儿,玩艺儿,false), Span(4,5,List(3),这,这,false), Span(1,2,List(4),你,你,false), Span(9,10,List(5),王子,王子,false), Span(8,9,List(6),小,小,false)),Map(2 -> 玩艺儿, 5 -> 王子, 1 -> 卖-03, 4 -> 你, 6 -> 小, 0 -> 说-01, 3 -> 这),Map(x2 -> 王子, x5 -> 你, x8 -> 这, x7 -> 玩艺儿, x4 -> 卖-03, x3 -> 小, x0 -> 说-01))),[Ljava.lang.String;@7b2bf745,Annotation([Ljava.lang.String;@6fe595dc,[Ljava.lang.String;@5af5d76f,[Ljava.lang.String;@3a8cea24),Annotation([Ljava.lang.String;@1eb9a3ef,[Ljava.lang.String;@5d318e91,[Ledu.cmu.lti.nlp.amr.Dependency;@298b64f7),Annotation([Ljava.lang.String;@740b6628,[Ljava.lang.String;@27fe059d,[Ljava.lang.String;@766a52f5),Annotation([Ljava.lang.String;@4342c13,[Ljava.lang.String;@2ba1209b,[Ledu.cmu.lti.nlp.amr.Entity;@7c241a9f))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小)
(x3 / 小, location, x7 / 玩艺儿)
(x4 / 卖-03, degree, x5 / 你)
(x4 / 卖-03, location, x7 / 玩艺儿)
(x7 / 玩艺儿, mod, x8 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,932 microseconds
Sentence: “ 这 就 大大 地 节约 了 时间 。 ” 商人 说 ，

Oracle Span 1:  商人 => 商人
Oracle Span 2:  大大 => 大大-01
Oracle Span 3:  就 => 就
Oracle Span 4:  时间 => 时间
Oracle Span 5:  节约 => 节约-01
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Spans:
Span 10-11:  商人 => 商人
Span 3-4:  大大 => 大大-01
Span 2-3:  就 => 就
Span 7-8:  时间 => 时间
Span 5-6:  节约 => 节约-01
Span 11-12:  说 => 说-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  商人 => 商人
Oracle Span 3-4:  大大 => 大大-01
Oracle Span 2-3:  就 => 就
Oracle Span 7-8:  时间 => 时间
Oracle Span 5-6:  节约 => 节约-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	dep	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	大大	_	AD	AD	_	6	advmod	_	_
5	地	_	NN	NN	_	6	prep	_	_
6	节约	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	时间	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_
11	商人	_	NN	NN	_	12	dep	_	_
12	说	_	VV	VV	_	6	dep	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 商人)
(x0 / 说-01, arg1, x3 / 节约-01)
(x3 / 节约-01, arg0, x4 / 这)
(x3 / 节约-01, arg1, x8 / 时间)
(x3 / 节约-01, degree, x6 / 大大-01)
(x3 / 节约-01, manner, x5 / 就)

Input(Some(Graph((说-01 :arg1 (节约-01 :arg1 时间 :degree 大大-01 :manner 就 :arg0 这) :arg0 商人),ArrayBuffer(Span(11,12,List(0),说,说-01,false), Span(5,6,List(1),节约,节约-01,false), Span(7,8,List(2),时间,时间,false), Span(3,4,List(3),大大,大大-01,false), Span(2,3,List(4),就,就,false), Span(1,2,List(5),这,这,false), Span(10,11,List(6),商人,商人,false)),Map(2 -> 时间, 5 -> 这, 1 -> 节约-01, 4 -> 就, 6 -> 商人, 0 -> 说-01, 3 -> 大大-01),Map(x2 -> 商人, x5 -> 就, x8 -> 时间, x4 -> 这, x3 -> 节约-01, x6 -> 大大-01, x0 -> 说-01))),[Ljava.lang.String;@58fd1214,Annotation([Ljava.lang.String;@7d8cf9ac,[Ljava.lang.String;@5f0bab7e,[Ljava.lang.String;@3a7b2e2),Annotation([Ljava.lang.String;@337a6d30,[Ljava.lang.String;@2921a36a,[Ledu.cmu.lti.nlp.amr.Dependency;@2b73bd6b),Annotation([Ljava.lang.String;@157d3a45,[Ljava.lang.String;@750ed637,[Ljava.lang.String;@5190010f),Annotation([Ljava.lang.String;@673e76b3,[Ljava.lang.String;@1bedc703,[Ledu.cmu.lti.nlp.amr.Entity;@18d11527))
AMR:
(x0 / 说-01, location, x2 / 商人)
(x3 / 节约-01, degree, x6 / 大大-01)
(x3 / 节约-01, manner, x5 / 就)
(x3 / 节约-01, prep-through, x8 / 时间)
(x4 / 这, prep-through, x6 / 大大-01)
(x8 / 时间, location, x2 / 商人)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 16,462 microseconds
Sentence: “ 专家们 计算 过 ，

Oracle Span 1:  专家们 => 专家们
Oracle Span 2:  计算 => 计算-01
Spans:
Span 1-2:  专家们 => 专家们
Span 2-3:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  专家们 => 专家们
Oracle Span 2-3:  计算 => 计算-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	专家们	_	NN	NN	_	3	nsubj	_	_
3	计算	_	VV	VV	_	0	root	_	_
4	过	_	VV	VV	_	3	dep	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 计算-01, arg0, x7 / 专家们)

Input(Some(Graph((say :arg1 (计算-01 :arg0 专家们)),ArrayBuffer(Span(2,3,List(0),计算,计算-01,false), Span(1,2,List(1),专家们,专家们,false)),Map(1 -> 专家们, 0 -> 计算-01),Map(x7 -> 专家们, x6 -> 计算-01))),[Ljava.lang.String;@4998e74b,Annotation([Ljava.lang.String;@5d878b25,[Ljava.lang.String;@28279a49,[Ljava.lang.String;@384fda47),Annotation([Ljava.lang.String;@3663d0ba,[Ljava.lang.String;@575cabf0,[Ledu.cmu.lti.nlp.amr.Dependency;@433d9680),Annotation([Ljava.lang.String;@566e142,[Ljava.lang.String;@2da81754,[Ljava.lang.String;@1f992a3a),Annotation([Ljava.lang.String;@30bf26df,[Ljava.lang.String;@261bd7b,[Ledu.cmu.lti.nlp.amr.Entity;@6f9e08d4))
AMR:
(x6 / 计算-01, location, x7 / 专家们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,660 microseconds
Sentence: 这样 ， 每 周 可以 节约 五十三 分钟 。 ”

Oracle Span 1:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 2:  可以 => 可以-01
Oracle Span 3:  周 => (temporal-quantity :unit 周)
Oracle Span 4:  节约 => 节约-01
Oracle Span 5:  这样 => 这样
Spans:
Span 7-8:  分钟 => (temporal-quantity :unit 分钟)
Span 4-5:  可以 => 可以-01
Span 3-4:  周 => (temporal-quantity :unit 周)
Span 5-6:  节约 => 节约-01
Span 0-1:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 3-4:  周 => (temporal-quantity :unit 周)
Oracle Span 5-6:  节约 => 节约-01
Oracle Span 0-1:  这样 => 这样

Dependencies:
1	这样	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	每	_	DT	DT	_	6	dep	_	_
4	周	_	M	M	_	3	clf	_	_
5	可以	_	VV	VV	_	6	mmod	_	_
6	节约	_	VV	VV	_	0	root	_	_
7	五十三	_	CD	CD	_	8	nummod	_	_
8	分钟	_	M	M	_	6	range	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x17 / 可以-01, arg0, x18 / 节约-01)
(x18 / 节约-01, arg0, x27 / 这样)
(x21 / temporal-quantity, unit, x28 / 分钟)
(x24 / temporal-quantity, unit, x29 / 周)

Input(Some(Graph((say :arg1 (可以-01 :arg0 (节约-01 :arg0 这样 :arg1 (rate-entity-91 :arg1 (temporal-quantity :unit 分钟 :quant 53) :arg2 (temporal-quantity :unit 周 :quant 1))))),ArrayBuffer(Span(4,5,List(0),可以,可以-01,false), Span(5,6,List(1),节约,节约-01,false), Span(0,1,List(2),这样,这样,false), Span(7,8,List(3, 4),分钟,(temporal-quantity :unit 分钟),false), Span(3,4,List(5, 6),周,(temporal-quantity :unit 周),false)),Map(2 -> 这样, 5 -> temporal-quantity, 1 -> 节约-01, 4 -> 分钟, 6 -> 周, 0 -> 可以-01, 3 -> temporal-quantity),Map(x28 -> 分钟, x27 -> 这样, x21 -> temporal-quantity, x24 -> temporal-quantity, x18 -> 节约-01, x29 -> 周, x17 -> 可以-01))),[Ljava.lang.String;@390037e7,Annotation([Ljava.lang.String;@704067c6,[Ljava.lang.String;@7f4596d0,[Ljava.lang.String;@6002e944),Annotation([Ljava.lang.String;@588545ac,[Ljava.lang.String;@2b08772d,[Ledu.cmu.lti.nlp.amr.Dependency;@78a8978a),Annotation([Ljava.lang.String;@f171912,[Ljava.lang.String;@7d4d8579,[Ljava.lang.String;@159424e2),Annotation([Ljava.lang.String;@29bcf51d,[Ljava.lang.String;@1e54a6b1,[Ledu.cmu.lti.nlp.amr.Entity;@f238e4f))
AMR:
(x17 / 可以-01, ARG5, x18 / 节约-01)
(x18 / 节约-01, op, x21 / temporal-quantity)
(x18 / 节约-01, time, x24 / temporal-quantity)
(x18 / 节约-01, time, x27 / 这样)
(x21 / temporal-quantity, unit, x28 / 分钟)
(x24 / temporal-quantity, unit, x29 / 周)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1
Decoded in 13,993 microseconds
Sentence: “ 那么 ， 用 这 五十三 分钟 做 什么 用 ？ ”

Oracle Span 1:  做 => 做-01
Oracle Span 2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3:  用 => 用-01
Oracle Span 4:  这 => 这
Spans:
Span 7-8:  做 => 做-01
Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Span 3-4:  用 => 用-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  做 => 做-01
Oracle Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3-4:  用 => 用-01
Oracle Span 4-5:  这 => 这

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	,	_	PU	PU	_	8	punct	_	_
4	用	_	VV	VV	_	8	conj	_	_
5	这	_	PN	PN	_	4	dobj	_	_
6	五十三	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	4	range	_	_
8	做	_	VV	VV	_	10	dep	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	用	_	VV	VV	_	0	root	_	_
11	？	_	PU	PU	_	10	punct	_	_
12	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x11 / 用-01, arg1, x17 / temporal-quantity)
(x11 / 用-01, arg2, x21 / 做-01)
(x17 / temporal-quantity, unit, x24 / 分钟)

Input(Some(Graph((say :arg1 (用-01 :mode interrogative :arg2 (做-01 :arg1 amr-unknown) :arg1 (temporal-quantity :unit 分钟 :quant (53 :mod 这)))),ArrayBuffer(Span(3,4,List(0),用,用-01,false), Span(7,8,List(1),做,做-01,false), Span(4,5,List(2),这,这,false), Span(6,7,List(3, 4),分钟,(temporal-quantity :unit 分钟),false)),Map(2 -> 这, 1 -> 做-01, 4 -> 分钟, 0 -> 用-01, 3 -> temporal-quantity),Map(x21 -> 做-01, x24 -> 分钟, x11 -> 用-01, x20 -> 这, x17 -> temporal-quantity))),[Ljava.lang.String;@3b24087d,Annotation([Ljava.lang.String;@75fe1619,[Ljava.lang.String;@4e245739,[Ljava.lang.String;@5d66e944),Annotation([Ljava.lang.String;@469a7575,[Ljava.lang.String;@4351ed61,[Ledu.cmu.lti.nlp.amr.Dependency;@2f20f7ad),Annotation([Ljava.lang.String;@45e617c4,[Ljava.lang.String;@5042e3d0,[Ljava.lang.String;@1c34365c),Annotation([Ljava.lang.String;@348137e8,[Ljava.lang.String;@412c5e8b,[Ledu.cmu.lti.nlp.amr.Entity;@637791d))
AMR:
(x11 / 用-01, prep-by, x20 / 这)
(x11 / 用-01, purpose, x21 / 做-01)
(x17 / temporal-quantity, unit, x24 / 分钟)
(x21 / 做-01, time, x17 / temporal-quantity)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 8,910 microseconds
Sentence: “ 随便 怎么 用 都 行 。

Oracle Span 1:  怎么 => 怎么
Oracle Span 2:  用 => 用-01
Oracle Span 3:  行 => 行-04
Oracle Span 4:  都 => 都
Oracle Span 5:  随便 => 随便-01
Spans:
Span 2-3:  怎么 => 怎么
Span 3-4:  用 => 用-01
Span 5-6:  行 => 行-04
Span 4-5:  都 => 都
Span 1-2:  随便 => 随便-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  怎么 => 怎么
Oracle Span 3-4:  用 => 用-01
Oracle Span 5-6:  行 => 行-04
Oracle Span 4-5:  都 => 都
Oracle Span 1-2:  随便 => 随便-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	随便	_	NN	NN	_	4	nsubj	_	_
3	怎么	_	AD	AD	_	4	advmod	_	_
4	用	_	VV	VV	_	0	root	_	_
5	都	_	AD	AD	_	4	dep	_	_
6	行	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 行-04, arg0, x14 / 用-01)
(x12 / 行-04, manner, x13 / 都)
(x14 / 用-01, manner, x15 / 怎么)
(x14 / 用-01, manner, x16 / 随便-01)

Input(Some(Graph((say :arg1 (行-04 :arg0 (用-01 :manner 随便-01 :manner 怎么) :manner 都)),ArrayBuffer(Span(5,6,List(0),行,行-04,false), Span(3,4,List(1),用,用-01,false), Span(1,2,List(2),随便,随便-01,false), Span(2,3,List(3),怎么,怎么,false), Span(4,5,List(4),都,都,false)),Map(2 -> 随便-01, 1 -> 用-01, 4 -> 都, 0 -> 行-04, 3 -> 怎么),Map(x16 -> 随便-01, x13 -> 都, x12 -> 行-04, x15 -> 怎么, x14 -> 用-01))),[Ljava.lang.String;@3b0c3951,Annotation([Ljava.lang.String;@60f77af,[Ljava.lang.String;@2574a9e3,[Ljava.lang.String;@18b6d3c1),Annotation([Ljava.lang.String;@422ab737,[Ljava.lang.String;@3fe512d2,[Ledu.cmu.lti.nlp.amr.Dependency;@3fde8f7c),Annotation([Ljava.lang.String;@11d86b9d,[Ljava.lang.String;@6dce59e,[Ljava.lang.String;@11381415),Annotation([Ljava.lang.String;@5ad6cc21,[Ljava.lang.String;@800d065,[Ledu.cmu.lti.nlp.amr.Entity;@691124ee))
AMR:
(x12 / 行-04, manner, x13 / 都)
(x12 / 行-04, time, x14 / 用-01)
(x14 / 用-01, manner, x15 / 怎么)
(x14 / 用-01, manner, x16 / 随便-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,454 microseconds
Sentence: … ” 小 王子 自言自语 地 说 ： “ 我 如果 有 五十三 分钟 可 支配 ， 我 就 悠哉悠哉 地 向 水泉 走去 … ”

Oracle Span 1:  分钟 => 分钟
Oracle Span 2:  小 => 小-01
Oracle Span 3:  悠哉悠哉 => 悠哉悠哉
Oracle Span 4:  支配 => 支配-01
Oracle Span 5:  有 => 有-01
Oracle Span 6:  水泉 => 水泉
Oracle Span 7:  王子 => 王子
Oracle Span 8:  自言自语 => 自言自语
Oracle Span 9:  说 => 说-01
Oracle Span 10:  走去 => 走去-01
Spans:
Span 13-14:  分钟 => 分钟
Span 2-3:  小 => 小-01
Span 19-20:  悠哉悠哉 => 悠哉悠哉
Span 15-16:  支配 => 支配-01
Span 11-12:  有 => 有-01
Span 22-23:  水泉 => 水泉
Span 3-4:  王子 => 王子
Span 4-5:  自言自语 => 自言自语
Span 6-7:  说 => 说-01
Span 23-24:  走去 => 走去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 13-14:  分钟 => 分钟
Oracle Span 2-3:  小 => 小-01
Oracle Span 19-20:  悠哉悠哉 => 悠哉悠哉
Oracle Span 15-16:  支配 => 支配-01
Oracle Span 11-12:  有 => 有-01
Oracle Span 22-23:  水泉 => 水泉
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  自言自语 => 自言自语
Oracle Span 6-7:  说 => 说-01
Oracle Span 23-24:  走去 => 走去-01

Dependencies:
1	…	_	PU	PU	_	2	punct	_	_
2	”	_	NN	NN	_	7	dep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	7	nsubj	_	_
5	自言自语	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	说	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	12	punct	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	如果	_	CS	CS	_	12	advmod	_	_
12	有	_	VE	VE	_	7	ccomp	_	_
13	五十三	_	CD	CD	_	14	nummod	_	_
14	分钟	_	M	M	_	15	nsubj	_	_
15	可	_	VV	VV	_	12	dep	_	_
16	支配	_	NN	NN	_	15	dobj	_	_
17	,	_	PU	PU	_	12	punct	_	_
18	我	_	PN	PN	_	25	nsubj	_	_
19	就	_	AD	AD	_	25	advmod	_	_
20	悠哉悠哉	_	VA	VA	_	25	dep	_	_
21	地	_	DEV	DEV	_	20	dvpm	_	_
22	向	_	P	P	_	25	prep	_	_
23	水泉	_	NN	NN	_	24	nn	_	_
24	走去	_	NN	NN	_	22	pobj	_	_
25	…	_	VV	VV	_	12	conj	_	_
26	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, manner, x4 / 自言自语)
(x11 / 支配-01, arg1, x9 / 分钟)
(x13 / 走去-01, arg1, x15 / 水泉)
(x13 / 走去-01, manner, x17 / 悠哉悠哉)
(x2 / 王子, mod, x3 / 小-01)
(x6 / 有-01, arg1, x9 / 分钟)

Input(Some(Graph((说-01 :arg1 (condition :arg1 (有-01 :arg1 (分钟 :quant 53 :arg1-of (支配-01 :arg0 x2)) :arg0 x2) :arg2 (走去-01 :manner 悠哉悠哉 :arg1 水泉 :arg0 x2)) :manner 自言自语 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(11,12,List(1),有,有-01,false), Span(13,14,List(2),分钟,分钟,false), Span(15,16,List(3),支配,支配-01,false), Span(23,24,List(4),走去,走去-01,false), Span(19,20,List(5),悠哉悠哉,悠哉悠哉,false), Span(22,23,List(6),水泉,水泉,false), Span(4,5,List(7),自言自语,自言自语,false), Span(3,4,List(8),王子,王子,false), Span(2,3,List(9),小,小-01,false)),Map(2 -> 分钟, 5 -> 悠哉悠哉, 8 -> 王子, 7 -> 自言自语, 1 -> 有-01, 4 -> 走去-01, 6 -> 水泉, 9 -> 小-01, 0 -> 说-01, 3 -> 支配-01),Map(x2 -> 王子, x13 -> 走去-01, x15 -> 水泉, x4 -> 自言自语, x3 -> 小-01, x11 -> 支配-01, x6 -> 有-01, x9 -> 分钟, x17 -> 悠哉悠哉, x0 -> 说-01))),[Ljava.lang.String;@38d80d65,Annotation([Ljava.lang.String;@5403799b,[Ljava.lang.String;@5a0e0886,[Ljava.lang.String;@3ad8717d),Annotation([Ljava.lang.String;@4293e066,[Ljava.lang.String;@d13960e,[Ledu.cmu.lti.nlp.amr.Dependency;@27f3f512),Annotation([Ljava.lang.String;@5e593b08,[Ljava.lang.String;@3946075,[Ljava.lang.String;@122635ef),Annotation([Ljava.lang.String;@2ac519dc,[Ljava.lang.String;@3d53e6f7,[Ledu.cmu.lti.nlp.amr.Entity;@1de4bee0))
AMR:
(x0 / 说-01, manner, x4 / 自言自语)
(x0 / 说-01, prep-within, x6 / 有-01)
(x11 / 支配-01, time, x9 / 分钟)
(x13 / 走去-01, direction, x15 / 水泉)
(x13 / 走去-01, manner, x17 / 悠哉悠哉)
(x17 / 悠哉悠哉, conj-as-if, x11 / 支配-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 自言自语, season, x2 / 王子)
(x6 / 有-01, prep-as, x9 / 分钟)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 30,689 microseconds
Sentence: XXIV 。

Oracle Span 1:  XXIV => XXIV
Spans:
Span 0-1:  XXIV => XXIV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXIV => XXIV

Dependencies:
1	XXIV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXIV,ArrayBuffer(Span(0,1,List(0),XXIV,XXIV,false)),Map(0 -> XXIV),Map(x0 -> XXIV))),[Ljava.lang.String;@3ece79fe,Annotation([Ljava.lang.String;@3cc79c02,[Ljava.lang.String;@1e01b133,[Ljava.lang.String;@262a1fad),Annotation([Ljava.lang.String;@6be6931f,[Ljava.lang.String;@6b4125ed,[Ledu.cmu.lti.nlp.amr.Dependency;@78da899f),Annotation([Ljava.lang.String;@e7b265e,[Ljava.lang.String;@51da32e5,[Ljava.lang.String;@33d60b7e),Annotation([Ljava.lang.String;@1fecfaea,[Ljava.lang.String;@4872669f,[Ledu.cmu.lti.nlp.amr.Entity;@483f286e))
AMR:


Decoded in 1,152 microseconds
Sentence: 这 是 我 在 沙漠 上 出 了 事故 的 第八 天 。 我 听 着 有关 这个 商人 的 故事 ， 喝 完 了 我 所 备用 的 最后 一 滴 水 。

Oracle Span 1:  事故 => 事故
Oracle Span 2:  出 => 出-04
Oracle Span 3:  听 => 听-01
Oracle Span 4:  商人 => 商人
Oracle Span 5:  备用 => 备用-01
Oracle Span 6:  天 => (temporal-quantity :unit 天)
Oracle Span 7:  故事 => 故事
Oracle Span 8:  最后 => 最后
Oracle Span 9:  水 => 水
Oracle Span 10:  沙漠 => 沙漠
Oracle Span 11:  这个 => 这个
Spans:
Span 8-9:  事故 => 事故
Span 6-7:  出 => 出-04
Span 14-15:  听 => 听-01
Span 18-19:  商人 => 商人
Span 27-28:  备用 => 备用-01
Span 11-12:  天 => (temporal-quantity :unit 天)
Span 20-21:  故事 => 故事
Span 29-30:  最后 => 最后
Span 32-33:  水 => 水
Span 4-5:  沙漠 => 沙漠
Span 17-18:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  事故 => 事故
Oracle Span 6-7:  出 => 出-04
Oracle Span 14-15:  听 => 听-01
Oracle Span 18-19:  商人 => 商人
Oracle Span 27-28:  备用 => 备用-01
Oracle Span 11-12:  天 => (temporal-quantity :unit 天)
Oracle Span 20-21:  故事 => 故事
Oracle Span 29-30:  最后 => 最后
Oracle Span 32-33:  水 => 水
Oracle Span 4-5:  沙漠 => 沙漠
Oracle Span 17-18:  这个 => 这个

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	我	_	PN	PN	_	7	nsubj	_	_
4	在	_	P	P	_	7	prep	_	_
5	沙漠	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	4	plmod	_	_
7	出	_	VV	VV	_	12	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	事故	_	NN	NN	_	7	dobj	_	_
10	的	_	DEC	DEC	_	7	cpm	_	_
11	第八	_	OD	OD	_	12	ordmod	_	_
12	天	_	M	M	_	2	attr	_	_
13	。	_	PU	PU	_	2	punct	_	_
14	我	_	PN	PN	_	15	nsubj	_	_
15	听	_	VV	VV	_	2	conj	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	有关	_	JJ	JJ	_	18	amod	_	_
18	这个	_	NN	NN	_	19	nn	_	_
19	商人	_	NN	NN	_	21	assmod	_	_
20	的	_	DEG	DEG	_	19	assm	_	_
21	故事	_	NN	NN	_	15	dobj	_	_
22	,	_	PU	PU	_	15	punct	_	_
23	喝	_	AD	AD	_	24	advmod	_	_
24	完	_	VV	VV	_	15	conj	_	_
25	了	_	AS	AS	_	24	asp	_	_
26	我	_	PN	PN	_	28	nsubj	_	_
27	所	_	MSP	MSP	_	28	prtmod	_	_
28	备用	_	VV	VV	_	33	rcmod	_	_
29	的	_	DEC	DEC	_	28	cpm	_	_
30	最后	_	JJ	JJ	_	33	amod	_	_
31	一	_	CD	CD	_	32	nummod	_	_
32	滴	_	NN	NN	_	33	nn	_	_
33	水	_	NN	NN	_	24	dobj	_	_
34	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 听-01, arg1, x12 / 故事)
(x12 / 故事, topic, x13 / 商人)
(x13 / 商人, mod, x14 / 这个)
(x18 / 水, mod, x20 / 最后)
(x21 / 备用-01, arg1, x18 / 水)
(x24 / temporal-quantity, unit, x31 / 天)
(x28 / 出-04, arg0, x29 / 沙漠)
(x28 / 出-04, arg1, x30 / 事故)

Input(Some(Graph((multi-sentence :snt2 (and :op (听-01 :arg0 x7 :arg1 (故事 :topic (商人 :mod 这个))) :op (喝完-01 :arg0 x7 :arg1 (水 :arg1-of (备用-01 :arg0 x7) :mod 最后 :quant 1))) :snt1 (pass :arg1 (temporal-quantity :unit 天 :quant 8) :time (since :op (出-04 :arg1 事故 :arg0 沙漠)))),ArrayBuffer(Span(14,15,List(0),听,听-01,false), Span(20,21,List(1),故事,故事,false), Span(18,19,List(2),商人,商人,false), Span(17,18,List(3),这个,这个,false), Span(32,33,List(4),水,水,false), Span(27,28,List(5),备用,备用-01,false), Span(29,30,List(6),最后,最后,false), Span(11,12,List(7, 8),天,(temporal-quantity :unit 天),false), Span(6,7,List(9),出,出-04,false), Span(8,9,List(10),事故,事故,false), Span(4,5,List(11),沙漠,沙漠,false)),Map(2 -> 商人, 5 -> 备用-01, 8 -> 天, 7 -> temporal-quantity, 1 -> 故事, 4 -> 水, 11 -> 沙漠, 6 -> 最后, 9 -> 出-04, 0 -> 听-01, 10 -> 事故, 3 -> 这个),Map(x28 -> 出-04, x10 -> 听-01, x31 -> 天, x13 -> 商人, x30 -> 事故, x12 -> 故事, x21 -> 备用-01, x24 -> temporal-quantity, x18 -> 水, x29 -> 沙漠, x20 -> 最后, x14 -> 这个))),[Ljava.lang.String;@4bb147ec,Annotation([Ljava.lang.String;@33f2cfda,[Ljava.lang.String;@68ef01a5,[Ljava.lang.String;@59a2388e),Annotation([Ljava.lang.String;@186d8a71,[Ljava.lang.String;@3dc40ab9,[Ledu.cmu.lti.nlp.amr.Dependency;@2db6d68d),Annotation([Ljava.lang.String;@6518fdfd,[Ljava.lang.String;@11d2dd2d,[Ljava.lang.String;@cde8c6c),Annotation([Ljava.lang.String;@174721c4,[Ljava.lang.String;@3592c1c4,[Ledu.cmu.lti.nlp.amr.Entity;@322e49ee))
AMR:
(x10 / 听-01, snt1, x12 / 故事)
(x12 / 故事, topic, x13 / 商人)
(x13 / 商人, location, x21 / 备用-01)
(x13 / 商人, mod, x14 / 这个)
(x18 / 水, mod, x20 / 最后)
(x21 / 备用-01, value, x18 / 水)
(x24 / temporal-quantity, ARG3, x10 / 听-01)
(x24 / temporal-quantity, unit, x31 / 天)
(x28 / 出-04, location, x29 / 沙漠)
(x28 / 出-04, mod, x30 / 事故)
(x30 / 事故, location, x24 / temporal-quantity)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
Decoded in 58,684 microseconds
Sentence: “ 啊 ！ ”

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x5 -> 啊))),[Ljava.lang.String;@4aeb0e2b,Annotation([Ljava.lang.String;@648c5fb3,[Ljava.lang.String;@47b33e07,[Ljava.lang.String;@7126e26),Annotation([Ljava.lang.String;@151ab2b9,[Ljava.lang.String;@13ed066e,[Ledu.cmu.lti.nlp.amr.Dependency;@4d705112),Annotation([Ljava.lang.String;@590765c4,[Ljava.lang.String;@19489b27,[Ljava.lang.String;@626d2016),Annotation([Ljava.lang.String;@2d5a1588,[Ljava.lang.String;@4f116ca2,[Ledu.cmu.lti.nlp.amr.Entity;@125d47c4))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,239 microseconds
Sentence: 我 对 小 王子 说 ， “ 你 回忆 的 这些 故事 真 美 。 可是 ， 我 还 没有 修 好 我 的 飞机 。 我 没有 喝 的 了 ， 假如 我 能 悠哉悠哉 地 走到 水泉 边 去 ， 我 一定 也 会 很 高兴 的 ！ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  会 => 会-02
Oracle Span 3:  你 => 你
Oracle Span 4:  修 => 修-01
Oracle Span 5:  喝 => (thing :arg1-of 喝-01)
Oracle Span 6:  回忆 => 回忆-01
Oracle Span 7:  好 => 好-01
Oracle Span 8:  很 => 很
Oracle Span 9:  悠哉悠哉 => 悠哉悠哉
Oracle Span 10:  我 => 我
Oracle Span 11:  故事 => 故事
Oracle Span 12:  水泉 => 水泉
Oracle Span 13:  真 => 真
Oracle Span 14:  美 => 美-01
Oracle Span 15:  能 => 能-01
Oracle Span 16:  说 => 说-01
Oracle Span 17:  走到 => 走到-01
Oracle Span 18:  还 => 还
Oracle Span 19:  这些 => 这些
Oracle Span 20:  飞机 => 飞机
Oracle Span 21:  高兴 => 高兴-01
Spans:
Span 44-45:  也 => 也
Span 45-46:  会 => 会-02
Span 7-8:  你 => 你
Span 20-21:  修 => 修-01
Span 28-29:  喝 => (thing :arg1-of 喝-01)
Span 8-9:  回忆 => 回忆-01
Span 21-22:  好 => 好-01
Span 46-47:  很 => 很
Span 35-36:  悠哉悠哉 => 悠哉悠哉
Span 0-1:  我 => 我
Span 11-12:  故事 => 故事
Span 38-39:  水泉 => 水泉
Span 12-13:  真 => 真
Span 13-14:  美 => 美-01
Span 34-35:  能 => 能-01
Span 4-5:  说 => 说-01
Span 37-38:  走到 => 走到-01
Span 18-19:  还 => 还
Span 10-11:  这些 => 这些
Span 24-25:  飞机 => 飞机
Span 47-48:  高兴 => 高兴-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 对 我 说 ： “ 我 的 朋友 狐狸 … ”

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  朋友 => 朋友
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说 => 说-01
Spans:
Span 0-1:  小 => 小-01
Span 3-4:  我 => 我
Span 9-10:  朋友 => 朋友
Span 10-11:  狐狸 => 狐狸
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  我 => 我
Oracle Span 9-10:  朋友 => 朋友
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	12	punct	_	_
8	我	_	PN	PN	_	11	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	朋友	_	NN	NN	_	11	nn	_	_
11	狐狸	_	NN	NN	_	12	nsubj	_	_
12	…	_	VA	VA	_	5	ccomp	_	_
13	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 朋友)
(x0 / 说-01, arg3, x4 / 我)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 朋友, domain, x7 / 狐狸)

Input(Some(Graph((说-01 :arg1 (朋友 :domain 狐狸 :poss x2) :arg3 我 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(9,10,List(1),朋友,朋友,false), Span(10,11,List(2),狐狸,狐狸,false), Span(3,4,List(3),我,我,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false)),Map(2 -> 狐狸, 5 -> 小-01, 1 -> 朋友, 4 -> 王子, 0 -> 说-01, 3 -> 我),Map(x2 -> 王子, x5 -> 朋友, x7 -> 狐狸, x4 -> 我, x3 -> 小-01, x0 -> 说-01))),[Ljava.lang.String;@64b018f3,Annotation([Ljava.lang.String;@20801cbb,[Ljava.lang.String;@581b1c08,[Ljava.lang.String;@1c240cf2),Annotation([Ljava.lang.String;@78b7f805,[Ljava.lang.String;@58f2466c,[Ledu.cmu.lti.nlp.amr.Dependency;@5809fa26),Annotation([Ljava.lang.String;@64763e49,[Ljava.lang.String;@23468512,[Ljava.lang.String;@69cd7630),Annotation([Ljava.lang.String;@7e8279e5,[Ljava.lang.String;@2b53840a,[Ledu.cmu.lti.nlp.amr.Entity;@3caafa67))
AMR:
(x0 / 说-01, op, x2 / 王子)
(x0 / 说-01, poss, x4 / 我)
(x0 / 说-01, purpose, x5 / 朋友)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 朋友, domain, x7 / 狐狸)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,200 microseconds
Sentence: “ 我 的 小家伙 ， 现在 还 说 什么 狐狸 ！ ”

Oracle Span 1:  什么 => 什么
Oracle Span 2:  我 => 我
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  说 => 说-01
Oracle Span 5:  还 => 还
Spans:
Span 8-9:  什么 => 什么
Span 1-2:  我 => 我
Span 9-10:  狐狸 => 狐狸
Span 7-8:  说 => 说-01
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  什么 => 什么
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 7-8:  说 => 说-01
Oracle Span 6-7:  还 => 还

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	小家伙	_	NN	NN	_	8	nsubj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	现在	_	NT	NT	_	8	tmod	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	0	root	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	狐狸	_	NN	NN	_	8	dobj	_	_
11	！	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 说-01, arg1, x15 / 狐狸)
(x10 / 说-01, manner, x14 / 还)
(x15 / 狐狸, mod, x16 / 什么)

Input(Some(Graph((say :arg1 (说-01 :arg1 (狐狸 :mod 什么) :manner 还 :arg0 (家伙 :mod 小-01 :poss 我)) :mode expressive),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(9,10,List(1),狐狸,狐狸,false), Span(8,9,List(2),什么,什么,false), Span(6,7,List(3),还,还,false), Span(1,2,List(4),我,我,false)),Map(2 -> 什么, 1 -> 狐狸, 4 -> 我, 0 -> 说-01, 3 -> 还),Map(x16 -> 什么, x10 -> 说-01, x13 -> 我, x15 -> 狐狸, x14 -> 还))),[Ljava.lang.String;@3e546734,Annotation([Ljava.lang.String;@53747c4a,[Ljava.lang.String;@64b0d1fa,[Ljava.lang.String;@f2276c9),Annotation([Ljava.lang.String;@12d2ddde,[Ljava.lang.String;@62b475e2,[Ledu.cmu.lti.nlp.amr.Dependency;@e9474f),Annotation([Ljava.lang.String;@1c61eda5,[Ljava.lang.String;@1859ffda,[Ljava.lang.String;@59838256),Annotation([Ljava.lang.String;@131a7516,[Ljava.lang.String;@5ae15,[Ledu.cmu.lti.nlp.amr.Entity;@577536e0))
AMR:
(x10 / 说-01, domain, x13 / 我)
(x10 / 说-01, manner, x14 / 还)
(x10 / 说-01, subset, x16 / 什么)
(x15 / 狐狸, mod, x16 / 什么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 8,584 microseconds
Sentence: “ 为什么 ？ ”

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	为什么	_	CD	CD	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (causation :arg1 (amr-unknown :mode interrogative))),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@12219f6a,Annotation([Ljava.lang.String;@52d3fafd,[Ljava.lang.String;@7f0b93b4,[Ljava.lang.String;@1376883),Annotation([Ljava.lang.String;@1f736d00,[Ljava.lang.String;@523a7801,[Ledu.cmu.lti.nlp.amr.Dependency;@718fd7c1),Annotation([Ljava.lang.String;@4bc6da03,[Ljava.lang.String;@4f59a516,[Ljava.lang.String;@4e22368c),Annotation([Ljava.lang.String;@411cd156,[Ljava.lang.String;@3c770db4,[Ledu.cmu.lti.nlp.amr.Entity;@3e046e39))
AMR:


Decoded in 1,048 microseconds
Sentence: “ 因为 我 就 要 渴 死 了 。 ”

Oracle Span 1:  就 => 就
Oracle Span 2:  我 => 我
Oracle Span 3:  死 => 死-01
Oracle Span 4:  渴 => 渴-01
Oracle Span 5:  要 => 要-03
Spans:
Span 3-4:  就 => 就
Span 2-3:  我 => 我
Span 6-7:  死 => 死-01
Span 5-6:  渴 => 渴-01
Span 4-5:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  死 => 死-01
Oracle Span 5-6:  渴 => 渴-01
Oracle Span 4-5:  要 => 要-03

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	因为	_	P	P	_	7	prep	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	2	pccomp	_	_
6	渴	_	AD	AD	_	7	advmod	_	_
7	死	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 要-03, arg0, x13 / 死-01)
(x10 / 要-03, manner, x11 / 就)
(x13 / 死-01, arg0, x14 / 我)
(x13 / 死-01, cause, x16 / 渴-01)

Input(Some(Graph((say :arg1 (causation :arg1 (要-03 :arg0 (死-01 :cause (渴-01 :arg0 x14) :arg0 我) :manner 就))),ArrayBuffer(Span(4,5,List(0),要,要-03,false), Span(6,7,List(1),死,死-01,false), Span(5,6,List(2),渴,渴-01,false), Span(2,3,List(3),我,我,false), Span(3,4,List(4),就,就,false)),Map(2 -> 渴-01, 1 -> 死-01, 4 -> 就, 0 -> 要-03, 3 -> 我),Map(x16 -> 渴-01, x10 -> 要-03, x13 -> 死-01, x11 -> 就, x14 -> 我))),[Ljava.lang.String;@61cda923,Annotation([Ljava.lang.String;@46fc522d,[Ljava.lang.String;@4262fdeb,[Ljava.lang.String;@5f0a2638),Annotation([Ljava.lang.String;@5382184b,[Ljava.lang.String;@77cb452c,[Ledu.cmu.lti.nlp.amr.Dependency;@2213639b),Annotation([Ljava.lang.String;@2c26ba07,[Ljava.lang.String;@6f25bf88,[Ljava.lang.String;@42ea7565),Annotation([Ljava.lang.String;@7b5cc918,[Ljava.lang.String;@62b3a2f6,[Ledu.cmu.lti.nlp.amr.Entity;@202898d7))
AMR:
(x10 / 要-03, manner, x11 / 就)
(x10 / 要-03, prep-through, x16 / 渴-01)
(x13 / 死-01, beneficiary, x14 / 我)
(x13 / 死-01, manner, x16 / 渴-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,067 microseconds
Sentence: 他 不 理解 我 的 思路 ， 他 回答 我 道 ： “ 即使 快 要 死 了 ， 有 过 一 个 朋友 也 好 么 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  好 => 好-01
Oracle Span 4:  快 => 快-01
Oracle Span 5:  思路 => 思路
Oracle Span 6:  我 => 我
Oracle Span 7:  有 => 有-01
Oracle Span 8:  朋友 => 朋友
Oracle Span 9:  死 => 死-01
Oracle Span 10:  理解 => 理解-01
Oracle Span 11:  要 => 要-03
Spans:
Span 0-1:  他 => 他
Span 8-9:  回答 => 回答-01
Span 25-26:  好 => 好-01
Span 14-15:  快 => 快-01
Span 5-6:  思路 => 思路
Span 3-4:  我 => 我
Span 19-20:  有 => 有-01
Span 23-24:  朋友 => 朋友
Span 16-17:  死 => 死-01
Span 2-3:  理解 => 理解-01
Span 15-16:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 25-26:  好 => 好-01
Oracle Span 14-15:  快 => 快-01
Oracle Span 5-6:  思路 => 思路
Oracle Span 3-4:  我 => 我
Oracle Span 19-20:  有 => 有-01
Oracle Span 23-24:  朋友 => 朋友
Oracle Span 16-17:  死 => 死-01
Oracle Span 2-3:  理解 => 理解-01
Oracle Span 15-16:  要 => 要-03

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	理解	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	思路	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	回答	_	VV	VV	_	3	conj	_	_
10	我	_	PN	PN	_	11	nsubj	_	_
11	道	_	VV	VV	_	27	vmod	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	26	punct	_	_
14	即使	_	CS	CS	_	17	advmod	_	_
15	快	_	VA	VA	_	17	dep	_	_
16	要	_	VV	VV	_	17	mmod	_	_
17	死	_	VV	VV	_	26	dep	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_
20	有	_	VE	VE	_	17	dep	_	_
21	过	_	AS	AS	_	20	asp	_	_
22	一	_	CD	CD	_	23	nummod	_	_
23	个	_	M	M	_	24	clf	_	_
24	朋友	_	NN	NN	_	20	dobj	_	_
25	也	_	AD	AD	_	26	advmod	_	_
26	好	_	VA	VA	_	11	ccomp	_	_
27	么	_	NN	NN	_	9	dobj	_	_
28	！	_	PU	PU	_	3	punct	_	_
29	我	_	PN	PN	_	26	xsubj	_	_

Oracle:
(x2 / 理解-01, arg0, x4 / 他)
(x2 / 理解-01, arg1, x5 / 思路)
(x23 / 要-03, arg0, x24 / 死-01)
(x24 / 死-01, manner, x25 / 快-01)
(x26 / 好-01, arg0, x27 / 有-01)
(x27 / 有-01, arg1, x28 / 朋友)
(x5 / 思路, poss, x6 / 我)

Input(Some(Graph((and :op (理解-01 :arg1 (思路 :poss 我) :arg0 他 :polarity -) :op (回答-01 :arg2 (concession :arg1 (要-03 :arg0 (死-01 :manner 快-01)) :arg2 (好-01 :arg0 (有-01 :arg1 (朋友 :quant 1)))) :mode expressive :arg3 x6 :arg0 x4)),ArrayBuffer(Span(2,3,List(0),理解,理解-01,false), Span(5,6,List(1),思路,思路,false), Span(3,4,List(2),我,我,false), Span(0,1,List(3),他,他,false), Span(8,9,List(4),回答,回答-01,false), Span(15,16,List(5),要,要-03,false), Span(16,17,List(6),死,死-01,false), Span(14,15,List(7),快,快-01,false), Span(25,26,List(8),好,好-01,false), Span(19,20,List(9),有,有-01,false), Span(23,24,List(10),朋友,朋友,false)),Map(2 -> 我, 5 -> 要-03, 8 -> 好-01, 7 -> 快-01, 1 -> 思路, 4 -> 回答-01, 6 -> 死-01, 9 -> 有-01, 0 -> 理解-01, 10 -> 朋友, 3 -> 他),Map(x28 -> 朋友, x25 -> 快-01, x2 -> 理解-01, x5 -> 思路, x27 -> 有-01, x7 -> 回答-01, x24 -> 死-01, x4 -> 他, x23 -> 要-03, x26 -> 好-01, x6 -> 我))),[Ljava.lang.String;@317890ea,Annotation([Ljava.lang.String;@2c719bd4,[Ljava.lang.String;@53aa38be,[Ljava.lang.String;@37a0ec3c),Annotation([Ljava.lang.String;@422ad5e2,[Ljava.lang.String;@62a54948,[Ledu.cmu.lti.nlp.amr.Dependency;@6048e26a),Annotation([Ljava.lang.String;@50b93353,[Ljava.lang.String;@44286963,[Ljava.lang.String;@c8f97a7),Annotation([Ljava.lang.String;@2b736fee,[Ljava.lang.String;@3249e278,[Ledu.cmu.lti.nlp.amr.Entity;@35adf623))
AMR:
(x2 / 理解-01, time, x4 / 他)
(x23 / 要-03, manner, x25 / 快-01)
(x24 / 死-01, manner, x25 / 快-01)
(x24 / 死-01, manner, x7 / 回答-01)
(x27 / 有-01, prep-following, x24 / 死-01)
(x27 / 有-01, topic, x28 / 朋友)
(x28 / 朋友, topic, x26 / 好-01)
(x5 / 思路, manner, x2 / 理解-01)
(x5 / 思路, poss, x6 / 我)
(x7 / 回答-01, time, x5 / 思路)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3.0
WARNING: makeIds can't find span Id: 0.1.3.0.0
WARNING: makeIds can't find span Id: 0.1.3.0.0.0
WARNING: makeIds can't find span Id: 0.1.3.1
WARNING: makeIds can't find span Id: 0.1.3.1.0
WARNING: makeIds can't find span Id: 0.1.3.1.0.0
Decoded in 37,258 microseconds
Sentence: 我 就 为 我 有 过 一 个 狐狸 朋友 而 感到 很 高兴 … ”

Oracle Span 1:  很 => 很
Oracle Span 2:  感到 => 感到-01
Oracle Span 3:  我 => 我
Oracle Span 4:  有 => 有-01
Oracle Span 5:  朋友 => 朋友
Oracle Span 6:  狐狸 => 狐狸
Oracle Span 7:  高兴 => 高兴
Spans:
Span 12-13:  很 => 很
Span 11-12:  感到 => 感到-01
Span 0-1:  我 => 我
Span 4-5:  有 => 有-01
Span 9-10:  朋友 => 朋友
Span 8-9:  狐狸 => 狐狸
Span 13-14:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  很 => 很
Oracle Span 11-12:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  有 => 有-01
Oracle Span 9-10:  朋友 => 朋友
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 13-14:  高兴 => 高兴

Dependencies:
1	我	_	PN	PN	_	12	nsubj	_	_
2	就	_	AD	AD	_	12	advmod	_	_
3	为	_	P	P	_	12	prep	_	_
4	我	_	PN	PN	_	5	top	_	_
5	有	_	VE	VE	_	3	pccomp	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	10	clf	_	_
9	狐狸	_	NN	NN	_	10	nn	_	_
10	朋友	_	NN	NN	_	5	dobj	_	_
11	而	_	MSP	MSP	_	12	prtmod	_	_
12	感到	_	VV	VV	_	0	root	_	_
13	很	_	AD	AD	_	14	advmod	_	_
14	高兴	_	VA	VA	_	12	ccomp	_	_
15	…	_	PU	PU	_	12	punct	_	_
16	”	_	PU	PU	_	12	punct	_	_
17	我	_	PN	PN	_	14	xsubj	_	_

Oracle:
(x17 / 感到-01, arg0, x18 / 我)
(x17 / 感到-01, arg1, x19 / 高兴)
(x19 / 高兴, arg1, x22 / 有-01)
(x19 / 高兴, degree, x20 / 很)
(x22 / 有-01, arg1, x24 / 朋友)
(x24 / 朋友, mod, x25 / 狐狸)

Input(Some(Graph((say :arg1 (感到-01 :arg1 (高兴 :arg1 (有-01 :arg1 (朋友 :quant 1 :mod 狐狸) :arg0 x18) :arg0 x18 :degree 很) :arg0 我)),ArrayBuffer(Span(11,12,List(0),感到,感到-01,false), Span(13,14,List(1),高兴,高兴,false), Span(4,5,List(2),有,有-01,false), Span(9,10,List(3),朋友,朋友,false), Span(8,9,List(4),狐狸,狐狸,false), Span(12,13,List(5),很,很,false), Span(0,1,List(6),我,我,false)),Map(2 -> 有-01, 5 -> 很, 1 -> 高兴, 4 -> 狐狸, 6 -> 我, 0 -> 感到-01, 3 -> 朋友),Map(x22 -> 有-01, x25 -> 狐狸, x19 -> 高兴, x18 -> 我, x24 -> 朋友, x20 -> 很, x17 -> 感到-01))),[Ljava.lang.String;@456f7d9e,Annotation([Ljava.lang.String;@75d366c2,[Ljava.lang.String;@8f40022,[Ljava.lang.String;@5232e3f1),Annotation([Ljava.lang.String;@6c8fe7a4,[Ljava.lang.String;@2047981,[Ledu.cmu.lti.nlp.amr.Dependency;@2ad99cf3),Annotation([Ljava.lang.String;@6f31df32,[Ljava.lang.String;@7c90b7b7,[Ljava.lang.String;@5d7911d5),Annotation([Ljava.lang.String;@3ba1308d,[Ljava.lang.String;@5a08b084,[Ledu.cmu.lti.nlp.amr.Entity;@235c997d))
AMR:
(x17 / 感到-01, prep-along-with, x19 / 高兴)
(x17 / 感到-01, time, x24 / 朋友)
(x19 / 高兴, degree, x20 / 很)
(x22 / 有-01, decade, x18 / 我)
(x22 / 有-01, mode, x25 / 狐狸)
(x24 / 朋友, mod, x25 / 狐狸)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.1
WARNING: makeIds can't find span Id: 0.0.1.2.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,280 microseconds
Sentence: “ 他 不 顾 危险 。 ”

Oracle Span 1:  他 => 他
Oracle Span 2:  危险 => 危险-01
Oracle Span 3:  顾 => 顾-01
Spans:
Span 1-2:  他 => 他
Span 4-5:  危险 => 危险-01
Span 3-4:  顾 => 顾-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  危险 => 危险-01
Oracle Span 3-4:  顾 => 顾-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	顾	_	VV	VV	_	0	root	_	_
5	危险	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 顾-01, arg0, x9 / 他)
(x7 / 顾-01, arg1, x10 / 危险-01)

Input(Some(Graph((say :arg1 (顾-01 :arg1 危险-01 :arg0 他 :polarity -)),ArrayBuffer(Span(3,4,List(0),顾,顾-01,false), Span(4,5,List(1),危险,危险-01,false), Span(1,2,List(2),他,他,false)),Map(2 -> 他, 1 -> 危险-01, 0 -> 顾-01),Map(x10 -> 危险-01, x7 -> 顾-01, x9 -> 他))),[Ljava.lang.String;@36bed37a,Annotation([Ljava.lang.String;@4a9a878,[Ljava.lang.String;@1b3ab4f9,[Ljava.lang.String;@5c6a5192),Annotation([Ljava.lang.String;@1c8f6c66,[Ljava.lang.String;@552cede7,[Ledu.cmu.lti.nlp.amr.Dependency;@1b7f06c7),Annotation([Ljava.lang.String;@151732fb,[Ljava.lang.String;@729c8063,[Ljava.lang.String;@40ed1802),Annotation([Ljava.lang.String;@23c767e6,[Ljava.lang.String;@feb098f,[Ledu.cmu.lti.nlp.amr.Entity;@19e21f89))
AMR:
(x7 / 顾-01, location, x9 / 他)
(x7 / 顾-01, purpose, x10 / 危险-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 4,008 microseconds
Sentence: 我 自己 思量 着 ，

Oracle Span 1:  思量 => 思量-01
Oracle Span 2:  我 => 我
Spans:
Span 2-3:  思量 => 思量-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  思量 => 思量-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	自己	_	PN	PN	_	3	dep	_	_
3	思量	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 思量-01, arg0, x2 / 我)

Input(Some(Graph((思量-01 :arg0 我),ArrayBuffer(Span(2,3,List(0),思量,思量-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 思量-01),Map(x2 -> 我, x0 -> 思量-01))),[Ljava.lang.String;@31e739bf,Annotation([Ljava.lang.String;@29079032,[Ljava.lang.String;@7e7743ec,[Ljava.lang.String;@776015fc),Annotation([Ljava.lang.String;@7f42e06e,[Ljava.lang.String;@6ad179b4,[Ledu.cmu.lti.nlp.amr.Dependency;@2efd2f21),Annotation([Ljava.lang.String;@59c500f7,[Ljava.lang.String;@316cda31,[Ljava.lang.String;@50110971),Annotation([Ljava.lang.String;@17d2b075,[Ljava.lang.String;@6661d8c0,[Ledu.cmu.lti.nlp.amr.Entity;@310b2b6f))
AMR:
(x0 / 思量-01, ARG4, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,808 microseconds
Sentence: “ 他 从来 不 知道 饥渴 。

Oracle Span 1:  从来 => 从来
Oracle Span 2:  他 => 他
Oracle Span 3:  知道 => 知道-01
Oracle Span 4:  饥渴 => 饥渴-01
Spans:
Span 2-3:  从来 => 从来
Span 1-2:  他 => 他
Span 4-5:  知道 => 知道-01
Span 5-6:  饥渴 => 饥渴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从来 => 从来
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  知道 => 知道-01
Oracle Span 5-6:  饥渴 => 饥渴-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	饥渴	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 知道-01, arg0, x10 / 他)
(x8 / 知道-01, arg1, x11 / 饥渴-01)
(x8 / 知道-01, time, x12 / 从来)

Input(Some(Graph((say :arg1 (知道-01 :time 从来 :arg1 饥渴-01 :arg0 他 :polarity -)),ArrayBuffer(Span(4,5,List(0),知道,知道-01,false), Span(2,3,List(1),从来,从来,false), Span(5,6,List(2),饥渴,饥渴-01,false), Span(1,2,List(3),他,他,false)),Map(2 -> 饥渴-01, 1 -> 从来, 0 -> 知道-01, 3 -> 他),Map(x10 -> 他, x8 -> 知道-01, x12 -> 从来, x11 -> 饥渴-01))),[Ljava.lang.String;@6909f6be,Annotation([Ljava.lang.String;@6b5ab2f2,[Ljava.lang.String;@315c081,[Ljava.lang.String;@6b2dd3df),Annotation([Ljava.lang.String;@4db77402,[Ljava.lang.String;@73c48264,[Ledu.cmu.lti.nlp.amr.Dependency;@5ef85555),Annotation([Ljava.lang.String;@5bcec67e,[Ljava.lang.String;@2dafae61,[Ljava.lang.String;@7a2fce12),Annotation([Ljava.lang.String;@66e17eff,[Ljava.lang.String;@4bb1b96b,[Ledu.cmu.lti.nlp.amr.Entity;@1bbddada))
AMR:
(x12 / 从来, location, x10 / 他)
(x8 / 知道-01, prep-through, x11 / 饥渴-01)
(x8 / 知道-01, time, x12 / 从来)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 5,558 microseconds
Sentence: 只要 有 点 阳光 ， 他 就 满足 了 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  就 => 就
Oracle Span 3:  有 => 有-03
Oracle Span 4:  满足 => 满足-01
Oracle Span 5:  点 => 点
Oracle Span 6:  阳光 => 阳光
Spans:
Span 5-6:  他 => 他
Span 6-7:  就 => 就
Span 1-2:  有 => 有-03
Span 7-8:  满足 => 满足-01
Span 2-3:  点 => 点
Span 3-4:  阳光 => 阳光

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 6-7:  就 => 就
Oracle Span 1-2:  有 => 有-03
Oracle Span 7-8:  满足 => 满足-01
Oracle Span 2-3:  点 => 点
Oracle Span 3-4:  阳光 => 阳光

Dependencies:
1	只要	_	CS	CS	_	2	advmod	_	_
2	有	_	VE	VE	_	8	pccomp	_	_
3	点	_	NN	NN	_	4	nn	_	_
4	阳光	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	满足	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x12 / 有-03, arg1, x13 / 阳光)
(x13 / 阳光, quant, x14 / 点)
(x15 / 满足-01, arg0, x17 / 他)
(x15 / 满足-01, manner, x16 / 就)

Input(Some(Graph((say :arg1 (condition :arg1 (有-03 :arg1 (阳光 :quant 点)) :arg2 (满足-01 :arg0 他 :manner 就))),ArrayBuffer(Span(1,2,List(0),有,有-03,false), Span(3,4,List(1),阳光,阳光,false), Span(2,3,List(2),点,点,false), Span(7,8,List(3),满足,满足-01,false), Span(5,6,List(4),他,他,false), Span(6,7,List(5),就,就,false)),Map(2 -> 点, 5 -> 就, 1 -> 阳光, 4 -> 他, 0 -> 有-03, 3 -> 满足-01),Map(x16 -> 就, x13 -> 阳光, x12 -> 有-03, x15 -> 满足-01, x14 -> 点, x17 -> 他))),[Ljava.lang.String;@1f66d8e1,Annotation([Ljava.lang.String;@721d5b74,[Ljava.lang.String;@3421debd,[Ljava.lang.String;@41bfa9e9),Annotation([Ljava.lang.String;@68b7d0ef,[Ljava.lang.String;@7069f076,[Ledu.cmu.lti.nlp.amr.Dependency;@4a070cf0),Annotation([Ljava.lang.String;@764b14b8,[Ljava.lang.String;@202d9236,[Ljava.lang.String;@1f782c05),Annotation([Ljava.lang.String;@6d6ac396,[Ljava.lang.String;@432af457,[Ledu.cmu.lti.nlp.amr.Entity;@f5a7226))
AMR:
(x12 / 有-03, prep-as, x13 / 阳光)
(x13 / 阳光, quant, x14 / 点)
(x15 / 满足-01, instrument, x17 / 他)
(x15 / 满足-01, manner, x16 / 就)
(x15 / 满足-01, time, x13 / 阳光)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 10,379 microseconds
Sentence: 他 看 着 我 ， 答复 着 我 的 思想 ： “ 我 也 渴 了 …

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  思想 => 思想
Oracle Span 4:  我 => 我
Oracle Span 5:  渴 => 渴-01
Oracle Span 6:  看 => 看-02
Oracle Span 7:  答复 => 答复-01
Spans:
Span 13-14:  也 => 也
Span 0-1:  他 => 他
Span 9-10:  思想 => 思想
Span 3-4:  我 => 我
Span 14-15:  渴 => 渴-01
Span 1-2:  看 => 看-02
Span 5-6:  答复 => 答复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  思想 => 思想
Oracle Span 3-4:  我 => 我
Oracle Span 14-15:  渴 => 渴-01
Oracle Span 1-2:  看 => 看-02
Oracle Span 5-6:  答复 => 答复-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	看	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	我	_	PN	PN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	答复	_	VV	VV	_	2	conj	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	思想	_	NN	NN	_	6	dobj	_	_
11	：	_	PU	PU	_	2	punct	_	_
12	“	_	PU	PU	_	2	punct	_	_
13	我	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	渴	_	VV	VV	_	2	conj	_	_
16	了	_	PU	PU	_	2	punct	_	_
17	…	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 渴-01, manner, x14 / 也)
(x4 / 看-02, arg0, x5 / 他)
(x4 / 看-02, arg1, x6 / 我)
(x7 / 答复-01, arg1, x10 / 思想)
(x7 / 答复-01, arg2, x12 / 渴-01)

Input(Some(Graph((and :op (看-02 :arg1 我 :arg0 他) :op (答复-01 :arg2 (渴-01 :manner 也 :arg0 x5) :arg1 (思想 :poss x6) :arg0 x5)),ArrayBuffer(Span(1,2,List(0),看,看-02,false), Span(3,4,List(1),我,我,false), Span(0,1,List(2),他,他,false), Span(5,6,List(3),答复,答复-01,false), Span(14,15,List(4),渴,渴-01,false), Span(13,14,List(5),也,也,false), Span(9,10,List(6),思想,思想,false)),Map(2 -> 他, 5 -> 也, 1 -> 我, 4 -> 渴-01, 6 -> 思想, 0 -> 看-02, 3 -> 答复-01),Map(x10 -> 思想, x5 -> 他, x12 -> 渴-01, x7 -> 答复-01, x4 -> 看-02, x14 -> 也, x6 -> 我))),[Ljava.lang.String;@519c6fcc,Annotation([Ljava.lang.String;@6ad1701a,[Ljava.lang.String;@7ecda95b,[Ljava.lang.String;@22da2fe6),Annotation([Ljava.lang.String;@100ad67e,[Ljava.lang.String;@713a35c5,[Ledu.cmu.lti.nlp.amr.Dependency;@62aeddc8),Annotation([Ljava.lang.String;@11787b64,[Ljava.lang.String;@5707f613,[Ljava.lang.String;@77b3752b),Annotation([Ljava.lang.String;@6367a688,[Ljava.lang.String;@319642db,[Ledu.cmu.lti.nlp.amr.Entity;@59498d94))
AMR:
(x10 / 思想, location, x12 / 渴-01)
(x12 / 渴-01, manner, x14 / 也)
(x4 / 看-02, direction, x5 / 他)
(x7 / 答复-01, manner, x6 / 我)
(x7 / 答复-01, time, x4 / 看-02)
(x7 / 答复-01, topic, x10 / 思想)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 14,996 microseconds
Sentence: 我们 去 找 一 口 井 吧 … ”

Oracle Span 1:  井 => 井
Oracle Span 2:  去 => 去-01
Oracle Span 3:  我们 => 我们
Oracle Span 4:  找 => 找-01
Spans:
Span 5-6:  井 => 井
Span 1-2:  去 => 去-01
Span 0-1:  我们 => 我们
Span 2-3:  找 => 找-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  井 => 井
Oracle Span 1-2:  去 => 去-01
Oracle Span 0-1:  我们 => 我们
Oracle Span 2-3:  找 => 找-01

Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	去	_	MSP	MSP	_	3	prtmod	_	_
3	找	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	口	_	M	M	_	8	clf	_	_
6	井	_	NN	NN	_	8	nn	_	_
7	吧	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	3	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 去-01, arg0, x11 / 我们)
(x10 / 去-01, arg1, x12 / 找-01)
(x12 / 找-01, arg1, x14 / 井)

Input(Some(Graph((say :arg1 (去-01 :arg1 (找-01 :arg1 (井 :quant 1) :arg0 x11) :arg0 我们)),ArrayBuffer(Span(1,2,List(0),去,去-01,false), Span(2,3,List(1),找,找-01,false), Span(5,6,List(2),井,井,false), Span(0,1,List(3),我们,我们,false)),Map(2 -> 井, 1 -> 找-01, 0 -> 去-01, 3 -> 我们),Map(x10 -> 去-01, x12 -> 找-01, x11 -> 我们, x14 -> 井))),[Ljava.lang.String;@35bfa1bb,Annotation([Ljava.lang.String;@6b321262,[Ljava.lang.String;@68b11545,[Ljava.lang.String;@7d0100ea),Annotation([Ljava.lang.String;@357bc488,[Ljava.lang.String;@4ea17147,[Ledu.cmu.lti.nlp.amr.Dependency;@2eda4eeb),Annotation([Ljava.lang.String;@5ba90d8a,[Ljava.lang.String;@309dcdf3,[Ljava.lang.String;@7573b9ee),Annotation([Ljava.lang.String;@9a20cbd,[Ljava.lang.String;@1af4955e,[Ledu.cmu.lti.nlp.amr.Entity;@445821a6))
AMR:
(x10 / 去-01, prep-following, x11 / 我们)
(x10 / 去-01, snt11, x12 / 找-01)
(x12 / 找-01, snt1, x14 / 井)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,566 microseconds
Sentence: 我 显出 厌烦 的 样子 ：

Oracle Span 1:  厌烦 => 厌烦-01
Oracle Span 2:  我 => 我
Oracle Span 3:  显出 => 显出-01
Oracle Span 4:  样子 => 样子
Spans:
Span 2-3:  厌烦 => 厌烦-01
Span 0-1:  我 => 我
Span 1-2:  显出 => 显出-01
Span 4-5:  样子 => 样子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  厌烦 => 厌烦-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  显出 => 显出-01
Oracle Span 4-5:  样子 => 样子

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	显出	_	VV	VV	_	0	root	_	_
3	厌烦	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	样子	_	NN	NN	_	2	dobj	_	_
6	：	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 显出-01, arg0, x2 / 我)
(x0 / 显出-01, arg1, x4 / 样子)
(x4 / 样子, mod, x5 / 厌烦-01)

Input(Some(Graph((显出-01 :arg1 (样子 :mod 厌烦-01) :arg0 我),ArrayBuffer(Span(1,2,List(0),显出,显出-01,false), Span(4,5,List(1),样子,样子,false), Span(2,3,List(2),厌烦,厌烦-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 厌烦-01, 1 -> 样子, 0 -> 显出-01, 3 -> 我),Map(x2 -> 我, x5 -> 厌烦-01, x4 -> 样子, x0 -> 显出-01))),[Ljava.lang.String;@2c0c4c0a,Annotation([Ljava.lang.String;@35d26ad2,[Ljava.lang.String;@bb25753,[Ljava.lang.String;@ee21292),Annotation([Ljava.lang.String;@40c06358,[Ljava.lang.String;@66e21568,[Ledu.cmu.lti.nlp.amr.Dependency;@7f73ce28),Annotation([Ljava.lang.String;@611b35d6,[Ljava.lang.String;@2282400e,[Ljava.lang.String;@543d5863),Annotation([Ljava.lang.String;@35dece42,[Ljava.lang.String;@dd3f8aa,[Ledu.cmu.lti.nlp.amr.Entity;@3d615b2e))
AMR:
(x0 / 显出-01, manner, x2 / 我)
(x0 / 显出-01, snt11, x5 / 厌烦-01)
(x4 / 样子, mod, x5 / 厌烦-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,473 microseconds
Sentence: 在 茫茫 的 大 沙漠 上 盲目 地 去 找 水井 ， 真 荒唐 。

Oracle Span 1:  去 => 去-01
Oracle Span 2:  大 => 大-01
Oracle Span 3:  找 => 找-01
Oracle Span 4:  水井 => 水井
Oracle Span 5:  沙漠 => 沙漠
Oracle Span 6:  盲目 => 盲目-01
Oracle Span 7:  茫茫 => 茫茫-01
Oracle Span 8:  荒唐 => 荒唐-01
Spans:
Span 8-9:  去 => 去-01
Span 3-4:  大 => 大-01
Span 9-10:  找 => 找-01
Span 10-11:  水井 => 水井
Span 4-5:  沙漠 => 沙漠
Span 6-7:  盲目 => 盲目-01
Span 1-2:  茫茫 => 茫茫-01
Span 13-14:  荒唐 => 荒唐-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  去 => 去-01
Oracle Span 3-4:  大 => 大-01
Oracle Span 9-10:  找 => 找-01
Oracle Span 10-11:  水井 => 水井
Oracle Span 4-5:  沙漠 => 沙漠
Oracle Span 6-7:  盲目 => 盲目-01
Oracle Span 1-2:  茫茫 => 茫茫-01
Oracle Span 13-14:  荒唐 => 荒唐-01

Dependencies:
1	在	_	P	P	_	10	prep	_	_
2	茫茫	_	NN	NN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	大	_	JJ	JJ	_	5	amod	_	_
5	沙漠	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	1	plmod	_	_
7	盲目	_	JJ	JJ	_	8	amod	_	_
8	地	_	NN	NN	_	10	nsubj	_	_
9	去	_	MSP	MSP	_	10	prtmod	_	_
10	找	_	VV	VV	_	0	root	_	_
11	水井	_	NN	NN	_	10	dobj	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	真	_	AD	AD	_	14	advmod	_	_
14	荒唐	_	VV	VV	_	10	conj	_	_
15	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 荒唐-01, arg0, x4 / 去-01)
(x4 / 去-01, arg1, x5 / 找-01)
(x5 / 找-01, arg1, x6 / 水井)
(x5 / 找-01, location, x8 / 沙漠)
(x5 / 找-01, manner, x7 / 盲目-01)
(x8 / 沙漠, mod, x10 / 茫茫-01)
(x8 / 沙漠, mod, x9 / 大-01)

Input(Some(Graph((荒唐-01 :arg0 (去-01 :arg1 (找-01 :location (沙漠 :mod 茫茫-01 :mod 大-01) :manner 盲目-01 :arg1 水井))),ArrayBuffer(Span(13,14,List(0),荒唐,荒唐-01,false), Span(8,9,List(1),去,去-01,false), Span(9,10,List(2),找,找-01,false), Span(4,5,List(3),沙漠,沙漠,false), Span(1,2,List(4),茫茫,茫茫-01,false), Span(3,4,List(5),大,大-01,false), Span(6,7,List(6),盲目,盲目-01,false), Span(10,11,List(7),水井,水井,false)),Map(2 -> 找-01, 5 -> 大-01, 7 -> 水井, 1 -> 去-01, 4 -> 茫茫-01, 6 -> 盲目-01, 0 -> 荒唐-01, 3 -> 沙漠),Map(x10 -> 茫茫-01, x5 -> 找-01, x8 -> 沙漠, x7 -> 盲目-01, x4 -> 去-01, x6 -> 水井, x9 -> 大-01, x0 -> 荒唐-01))),[Ljava.lang.String;@3a1f2a1,Annotation([Ljava.lang.String;@40ce9049,[Ljava.lang.String;@52ca2652,[Ljava.lang.String;@65c5bf0e),Annotation([Ljava.lang.String;@697d6ded,[Ljava.lang.String;@5d05f453,[Ledu.cmu.lti.nlp.amr.Dependency;@5efeb117),Annotation([Ljava.lang.String;@160b4809,[Ljava.lang.String;@149b4d20,[Ljava.lang.String;@664e848c),Annotation([Ljava.lang.String;@4d93f75b,[Ljava.lang.String;@114a5e0,[Ledu.cmu.lti.nlp.amr.Entity;@4f281aaf))
AMR:
(x0 / 荒唐-01, ARG3, x4 / 去-01)
(x4 / 去-01, prep-through, x5 / 找-01)
(x5 / 找-01, beneficiary, x6 / 水井)
(x5 / 找-01, location, x8 / 沙漠)
(x5 / 找-01, manner, x7 / 盲目-01)
(x8 / 沙漠, mod, x10 / 茫茫-01)
(x8 / 沙漠, mod, x9 / 大-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 23,580 microseconds
Sentence: 然而 我们 还是 开始 去 寻找 了 。

Oracle Span 1:  去 => 去-01
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  开始 => 开始-01
Oracle Span 4:  我们 => 我们
Oracle Span 5:  还是 => 还是
Spans:
Span 4-5:  去 => 去-01
Span 5-6:  寻找 => 寻找-01
Span 3-4:  开始 => 开始-01
Span 1-2:  我们 => 我们
Span 2-3:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-01
Oracle Span 5-6:  寻找 => 寻找-01
Oracle Span 3-4:  开始 => 开始-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 2-3:  还是 => 还是

Dependencies:
1	然而	_	AD	AD	_	6	advmod	_	_
2	我们	_	PN	PN	_	6	nsubj	_	_
3	还是	_	AD	AD	_	6	advmod	_	_
4	开始	_	VV	VV	_	6	mmod	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	寻找	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 开始-01, arg0, x3 / 我们)
(x2 / 开始-01, arg1, x6 / 去-01)
(x2 / 开始-01, manner, x4 / 还是)
(x6 / 去-01, arg1, x8 / 寻找-01)

Input(Some(Graph((contrast :arg2 (开始-01 :arg1 (去-01 :arg1 (寻找-01 :arg0 x3) :arg0 x3) :manner 还是 :arg0 我们)),ArrayBuffer(Span(3,4,List(0),开始,开始-01,false), Span(4,5,List(1),去,去-01,false), Span(5,6,List(2),寻找,寻找-01,false), Span(2,3,List(3),还是,还是,false), Span(1,2,List(4),我们,我们,false)),Map(2 -> 寻找-01, 1 -> 去-01, 4 -> 我们, 0 -> 开始-01, 3 -> 还是),Map(x2 -> 开始-01, x8 -> 寻找-01, x4 -> 还是, x3 -> 我们, x6 -> 去-01))),[Ljava.lang.String;@5d508d22,Annotation([Ljava.lang.String;@f2b90fc,[Ljava.lang.String;@2bb41f5c,[Ljava.lang.String;@24c685e7),Annotation([Ljava.lang.String;@7da635c0,[Ljava.lang.String;@2ed9f6f8,[Ledu.cmu.lti.nlp.amr.Dependency;@251c4280),Annotation([Ljava.lang.String;@35650279,[Ljava.lang.String;@79a13920,[Ljava.lang.String;@182e7eda),Annotation([Ljava.lang.String;@5f61371d,[Ljava.lang.String;@420a8042,[Ledu.cmu.lti.nlp.amr.Entity;@3292d91a))
AMR:
(x2 / 开始-01, ARG4, x6 / 去-01)
(x2 / 开始-01, manner, x4 / 还是)
(x2 / 开始-01, medium, x3 / 我们)
(x6 / 去-01, example, x8 / 寻找-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,105 microseconds
Sentence: 当 我们 默默 地 走 了 好 几 个 小时 以后 ， 天 黑 了 下来 ， 星星 开始 发出 光亮 。

Oracle Span 1:  光亮 => 光亮-01
Oracle Span 2:  几 => 几
Oracle Span 3:  发出 => 发出-02
Oracle Span 4:  天 => 天
Oracle Span 5:  好 => 好
Oracle Span 6:  小时 => 小时
Oracle Span 7:  开始 => 开始-01
Oracle Span 8:  我们 => 我们
Oracle Span 9:  星星 => 星星
Oracle Span 10:  走 => 走-01
Oracle Span 11:  黑 => 黑-01
Oracle Span 12:  默默 => 默默
Spans:
Span 20-21:  光亮 => 光亮-01
Span 7-8:  几 => 几
Span 19-20:  发出 => 发出-02
Span 12-13:  天 => 天
Span 6-7:  好 => 好
Span 9-10:  小时 => 小时
Span 18-19:  开始 => 开始-01
Span 1-2:  我们 => 我们
Span 17-18:  星星 => 星星
Span 4-5:  走 => 走-01
Span 13-14:  黑 => 黑-01
Span 2-3:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 20-21:  光亮 => 光亮-01
Oracle Span 7-8:  几 => 几
Oracle Span 19-20:  发出 => 发出-02
Oracle Span 12-13:  天 => 天
Oracle Span 6-7:  好 => 好
Oracle Span 9-10:  小时 => 小时
Oracle Span 18-19:  开始 => 开始-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 17-18:  星星 => 星星
Oracle Span 4-5:  走 => 走-01
Oracle Span 13-14:  黑 => 黑-01
Oracle Span 2-3:  默默 => 默默

Dependencies:
1	当	_	P	P	_	14	prep	_	_
2	我们	_	PN	PN	_	5	nsubj	_	_
3	默默	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	走	_	VV	VV	_	11	lccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	好	_	AD	AD	_	9	advmod	_	_
8	几	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	小时	_	NN	NN	_	5	dobj	_	_
11	以后	_	LC	LC	_	1	plmod	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	天	_	M	M	_	14	dep	_	_
14	黑	_	VA	VA	_	20	dep	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	下来	_	VV	VV	_	14	dep	_	_
17	,	_	PU	PU	_	20	punct	_	_
18	星星	_	NN	NN	_	20	nsubj	_	_
19	开始	_	VV	VV	_	20	mmod	_	_
20	发出	_	VV	VV	_	0	root	_	_
21	光亮	_	NN	NN	_	20	dobj	_	_
22	。	_	PU	PU	_	20	punct	_	_

Oracle:
(x11 / 发出-02, arg1, x12 / 光亮-01)
(x13 / 几, mod, x14 / 好)
(x2 / 走-01, arg0, x3 / 我们)
(x2 / 走-01, duration, x4 / 小时)
(x2 / 走-01, manner, x6 / 默默)
(x4 / 小时, quant, x13 / 几)
(x7 / 黑-01, arg0, x8 / 天)
(x9 / 开始-01, arg0, x10 / 星星)
(x9 / 开始-01, arg1, x11 / 发出-02)

Input(Some(Graph((temporal :arg1 (走-01 :manner 默默 :duration (小时 :quant (几 :mod 好)) :arg0 我们) :arg2 (黑-01 :arg0 天) :arg3 (开始-01 :arg1 (发出-02 :arg1 光亮-01) :arg0 星星)),ArrayBuffer(Span(4,5,List(0),走,走-01,false), Span(2,3,List(1),默默,默默,false), Span(9,10,List(2),小时,小时,false), Span(7,8,List(3),几,几,false), Span(6,7,List(4),好,好,false), Span(1,2,List(5),我们,我们,false), Span(13,14,List(6),黑,黑-01,false), Span(12,13,List(7),天,天,false), Span(18,19,List(8),开始,开始-01,false), Span(19,20,List(9),发出,发出-02,false), Span(20,21,List(10),光亮,光亮-01,false), Span(17,18,List(11),星星,星星,false)),Map(2 -> 小时, 5 -> 我们, 8 -> 开始-01, 7 -> 天, 1 -> 默默, 4 -> 好, 11 -> 星星, 6 -> 黑-01, 9 -> 发出-02, 0 -> 走-01, 10 -> 光亮-01, 3 -> 几),Map(x10 -> 星星, x2 -> 走-01, x13 -> 几, x8 -> 天, x12 -> 光亮-01, x7 -> 黑-01, x4 -> 小时, x11 -> 发出-02, x3 -> 我们, x6 -> 默默, x14 -> 好, x9 -> 开始-01))),[Ljava.lang.String;@5921b93c,Annotation([Ljava.lang.String;@faea4da,[Ljava.lang.String;@19b02dfd,[Ljava.lang.String;@3dce6dd8),Annotation([Ljava.lang.String;@69f2cb04,[Ljava.lang.String;@13803a94,[Ledu.cmu.lti.nlp.amr.Dependency;@b4732dc),Annotation([Ljava.lang.String;@45292ec1,[Ljava.lang.String;@3a7c678b,[Ljava.lang.String;@28babeca),Annotation([Ljava.lang.String;@1ad9b8d3,[Ljava.lang.String;@168ad26f,[Ledu.cmu.lti.nlp.amr.Entity;@4f93bf0a))
AMR:
(x11 / 发出-02, prep-within, x12 / 光亮-01)
(x13 / 几, mod, x14 / 好)
(x2 / 走-01, ARG3, x3 / 我们)
(x2 / 走-01, duration, x4 / 小时)
(x2 / 走-01, manner, x6 / 默默)
(x4 / 小时, quant, x13 / 几)
(x7 / 黑-01, ARG3, x8 / 天)
(x7 / 黑-01, location, x2 / 走-01)
(x7 / 黑-01, time, x12 / 光亮-01)
(x9 / 开始-01, degree, x10 / 星星)
(x9 / 开始-01, op, x11 / 发出-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 49,761 microseconds
Sentence: 由于 渴 我 有点 发烧 ， 我 看 着 这些 星星 ， 象是 在 做梦 一样 。

Oracle Span 1:  做梦 => 做梦-01
Oracle Span 2:  发烧 => 发烧-01
Oracle Span 3:  我 => 我
Oracle Span 4:  星星 => 星星
Oracle Span 5:  有点 => 有点
Oracle Span 6:  渴 => 渴-01
Oracle Span 7:  看 => 看-02
Oracle Span 8:  这些 => 这些
Spans:
Span 14-15:  做梦 => 做梦-01
Span 4-5:  发烧 => 发烧-01
Span 2-3:  我 => 我
Span 10-11:  星星 => 星星
Span 3-4:  有点 => 有点
Span 1-2:  渴 => 渴-01
Span 7-8:  看 => 看-02
Span 9-10:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  做梦 => 做梦-01
Oracle Span 4-5:  发烧 => 发烧-01
Oracle Span 2-3:  我 => 我
Oracle Span 10-11:  星星 => 星星
Oracle Span 3-4:  有点 => 有点
Oracle Span 1-2:  渴 => 渴-01
Oracle Span 7-8:  看 => 看-02
Oracle Span 9-10:  这些 => 这些

Dependencies:
1	由于	_	P	P	_	8	prep	_	_
2	渴	_	VV	VV	_	1	pccomp	_	_
3	我	_	PN	PN	_	5	nn	_	_
4	有点	_	NN	NN	_	5	nn	_	_
5	发烧	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	看	_	VV	VV	_	0	root	_	_
9	着	_	AS	AS	_	8	asp	_	_
10	这些	_	DT	DT	_	11	det	_	_
11	星星	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	象是	_	AD	AD	_	16	advmod	_	_
14	在	_	P	P	_	16	prep	_	_
15	做梦	_	NR	NR	_	14	pobj	_	_
16	一样	_	VA	VA	_	8	conj	_	_
17	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x15 / 发烧-01, arg0, x16 / 我)
(x15 / 发烧-01, cause, x18 / 渴-01)
(x15 / 发烧-01, degree, x17 / 有点)
(x25 / 看-02, arg1, x27 / 星星)
(x27 / 星星, mod, x28 / 这些)

Input(Some(Graph((causation :arg1 (发烧-01 :cause (渴-01 :arg0 x16) :degree 有点 :arg0 我) :arg2 (像-01 :arg0 (看-02 :arg1 (星星 :mod 这些) :arg0 x16) :arg1 (做梦-01 :arg0 x16))),ArrayBuffer(Span(4,5,List(0),发烧,发烧-01,false), Span(1,2,List(1),渴,渴-01,false), Span(3,4,List(2),有点,有点,false), Span(2,3,List(3),我,我,false), Span(7,8,List(4),看,看-02,false), Span(10,11,List(5),星星,星星,false), Span(9,10,List(6),这些,这些,false), Span(14,15,List(7),做梦,做梦-01,false)),Map(2 -> 有点, 5 -> 星星, 7 -> 做梦-01, 1 -> 渴-01, 4 -> 看-02, 6 -> 这些, 0 -> 发烧-01, 3 -> 我),Map(x28 -> 这些, x16 -> 我, x25 -> 看-02, x27 -> 星星, x15 -> 发烧-01, x18 -> 渴-01, x29 -> 做梦-01, x17 -> 有点))),[Ljava.lang.String;@322204dc,Annotation([Ljava.lang.String;@656a3d6b,[Ljava.lang.String;@25b38203,[Ljava.lang.String;@778a1250),Annotation([Ljava.lang.String;@55acec99,[Ljava.lang.String;@61191222,[Ledu.cmu.lti.nlp.amr.Dependency;@58833798),Annotation([Ljava.lang.String;@7f3ca64a,[Ljava.lang.String;@4d464510,[Ljava.lang.String;@64e7d698),Annotation([Ljava.lang.String;@2519026b,[Ljava.lang.String;@3f8dfe74,[Ledu.cmu.lti.nlp.amr.Entity;@401c4250))
AMR:
(x15 / 发烧-01, ARG4, x18 / 渴-01)
(x15 / 发烧-01, degree, x17 / 有点)
(x15 / 发烧-01, manner, x16 / 我)
(x17 / 有点, prep-out, x25 / 看-02)
(x25 / 看-02, snt3, x27 / 星星)
(x27 / 星星, mod, x28 / 这些)
(x29 / 做梦-01, time, x28 / 这些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 21,575 microseconds
Sentence: 小 王子 的 话 在 我 的 脑海 中 跳来跳去 。 “ 你 也 渴 吗 ？ ”

Oracle Span 1:  也 => 也
Oracle Span 2:  你 => 你
Oracle Span 3:  小 => 小-01
Oracle Span 4:  我 => 我
Oracle Span 5:  渴 => 渴-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  脑海 => 脑海
Oracle Span 8:  话 => 话
Oracle Span 9:  跳来跳去 => 跳来跳去
Spans:
Span 13-14:  也 => 也
Span 12-13:  你 => 你
Span 0-1:  小 => 小-01
Span 5-6:  我 => 我
Span 14-15:  渴 => 渴-01
Span 1-2:  王子 => 王子
Span 7-8:  脑海 => 脑海
Span 3-4:  话 => 话
Span 9-10:  跳来跳去 => 跳来跳去

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 12-13:  你 => 你
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  我 => 我
Oracle Span 14-15:  渴 => 渴-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  脑海 => 脑海
Oracle Span 3-4:  话 => 话
Oracle Span 9-10:  跳来跳去 => 跳来跳去

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	话	_	NN	NN	_	10	nsubj	_	_
5	在	_	P	P	_	10	prep	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	脑海	_	NN	NN	_	9	lobj	_	_
9	中	_	LC	LC	_	5	plmod	_	_
10	跳来跳去	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	15	punct	_	_
13	你	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	渴	_	VV	VV	_	10	conj	_	_
16	吗	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	10	punct	_	_
18	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 渴-01, arg0, x15 / 你)
(x13 / 渴-01, manner, x14 / 也)
(x2 / 跳来跳去, arg0, x3 / 话)
(x2 / 跳来跳去, location, x6 / 脑海)
(x3 / 话, poss, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 脑海, poss, x7 / 我)

Input(Some(Graph((multi-sentence :snt1 (跳来跳去 :location (脑海 :poss 我) :arg0 (话 :poss (王子 :mod 小-01))) :snt2 (say :arg1 (渴-01 :mode interrogative :arg0 你 :manner 也))),ArrayBuffer(Span(9,10,List(0),跳来跳去,跳来跳去,false), Span(7,8,List(1),脑海,脑海,false), Span(5,6,List(2),我,我,false), Span(3,4,List(3),话,话,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小-01,false), Span(14,15,List(6),渴,渴-01,false), Span(12,13,List(7),你,你,false), Span(13,14,List(8),也,也,false)),Map(2 -> 我, 5 -> 小-01, 8 -> 也, 7 -> 你, 1 -> 脑海, 4 -> 王子, 6 -> 渴-01, 0 -> 跳来跳去, 3 -> 话),Map(x2 -> 跳来跳去, x13 -> 渴-01, x5 -> 小-01, x15 -> 你, x7 -> 我, x4 -> 王子, x3 -> 话, x14 -> 也, x6 -> 脑海))),[Ljava.lang.String;@1a950fdd,Annotation([Ljava.lang.String;@77724cbe,[Ljava.lang.String;@27dc627a,[Ljava.lang.String;@570ba13),Annotation([Ljava.lang.String;@37a9b687,[Ljava.lang.String;@525b1b70,[Ledu.cmu.lti.nlp.amr.Dependency;@16d07cf3),Annotation([Ljava.lang.String;@16f0ec18,[Ljava.lang.String;@6c977dcf,[Ljava.lang.String;@661d6bb6),Annotation([Ljava.lang.String;@733fb462,[Ljava.lang.String;@623e0631,[Ledu.cmu.lti.nlp.amr.Entity;@359066bc))
AMR:
(x13 / 渴-01, manner, x14 / 也)
(x13 / 渴-01, poss, x15 / 你)
(x2 / 跳来跳去, location, x6 / 脑海)
(x2 / 跳来跳去, purpose, x13 / 渴-01)
(x3 / 话, poss, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 脑海, poss, x7 / 我)
(x6 / 脑海, time, x3 / 话)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 22,778 microseconds
Sentence: 我 问 他 。

Oracle Span 1:  他 => 他
Oracle Span 2:  我 => 我
Oracle Span 3:  问 => 问-01
Spans:
Span 2-3:  他 => 他
Span 0-1:  我 => 我
Span 1-2:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  问 => 问-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	问	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	2	ccomp	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 我)
(x0 / 问-01, arg2, x3 / 他)

Input(Some(Graph((问-01 :arg2 他 :arg0 我),ArrayBuffer(Span(1,2,List(0),问,问-01,false), Span(2,3,List(1),他,他,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 他, 0 -> 问-01),Map(x2 -> 我, x3 -> 他, x0 -> 问-01))),[Ljava.lang.String;@385dfb63,Annotation([Ljava.lang.String;@364fd4ae,[Ljava.lang.String;@245253d8,[Ljava.lang.String;@12417468),Annotation([Ljava.lang.String;@459003a0,[Ljava.lang.String;@d325518,[Ledu.cmu.lti.nlp.amr.Dependency;@3b481bf5),Annotation([Ljava.lang.String;@2233cac0,[Ljava.lang.String;@67fb5025,[Ljava.lang.String;@787e4357),Annotation([Ljava.lang.String;@392781e,[Ljava.lang.String;@3fcbc766,[Ledu.cmu.lti.nlp.amr.Entity;@28cd2c2))
AMR:
(x0 / 问-01, location, x3 / 他)
(x0 / 问-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 3,847 microseconds
Sentence: 他 却 不 回答 我 的 问题 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  我 => 我
Oracle Span 4:  问题 => 问题
Spans:
Span 0-1:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	回答	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 回答-01, arg0, x6 / 他)
(x5 / 回答-01, arg1, x8 / 问题)
(x8 / 问题, poss, x9 / 我)

Input(Some(Graph((contrast :arg2 (回答-01 :arg1 (问题 :poss 我) :polarity - :arg0 他)),ArrayBuffer(Span(3,4,List(0),回答,回答-01,false), Span(6,7,List(1),问题,问题,false), Span(4,5,List(2),我,我,false), Span(0,1,List(3),他,他,false)),Map(2 -> 我, 1 -> 问题, 0 -> 回答-01, 3 -> 他),Map(x5 -> 回答-01, x8 -> 问题, x6 -> 他, x9 -> 我))),[Ljava.lang.String;@8e25d3f,Annotation([Ljava.lang.String;@18a096b5,[Ljava.lang.String;@79b18230,[Ljava.lang.String;@1d4f5506),Annotation([Ljava.lang.String;@7dee835,[Ljava.lang.String;@1b57c345,[Ledu.cmu.lti.nlp.amr.Dependency;@6e02721d),Annotation([Ljava.lang.String;@902fdbe,[Ljava.lang.String;@796d33eb,[Ljava.lang.String;@5c059a68),Annotation([Ljava.lang.String;@21ea996f,[Ljava.lang.String;@3f9b7fe1,[Ledu.cmu.lti.nlp.amr.Entity;@2f79f192))
AMR:
(x5 / 回答-01, ARG0, x8 / 问题)
(x5 / 回答-01, op, x6 / 他)
(x8 / 问题, poss, x9 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,617 microseconds
Sentence: 只是 对 我 说 ： “ 水 对 心 也 是 有 益处 的 … ”

Oracle Span 1:  只是 => 只是
Oracle Span 2:  心 => 心
Oracle Span 3:  我 => 我
Oracle Span 4:  有 => 有-05
Oracle Span 5:  水 => 水
Oracle Span 6:  益处 => 益处
Oracle Span 7:  说 => 说-01
Spans:
Span 0-1:  只是 => 只是
Span 8-9:  心 => 心
Span 2-3:  我 => 我
Span 11-12:  有 => 有-05
Span 6-7:  水 => 水
Span 12-13:  益处 => 益处
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  只是 => 只是
Oracle Span 8-9:  心 => 心
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  有 => 有-05
Oracle Span 6-7:  水 => 水
Oracle Span 12-13:  益处 => 益处
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	只是	_	AD	AD	_	4	advmod	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	11	punct	_	_
7	水	_	NN	NN	_	11	nsubj	_	_
8	对	_	P	P	_	11	prep	_	_
9	心	_	NN	NN	_	8	pobj	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	是	_	VC	VC	_	4	ccomp	_	_
12	有	_	VE	VE	_	15	rcmod	_	_
13	益处	_	NN	NN	_	12	dobj	_	_
14	的	_	DEC	DEC	_	12	cpm	_	_
15	…	_	NN	NN	_	11	attr	_	_
16	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg1, x13 / 有-05)
(x0 / 说-01, arg3, x12 / 我)
(x0 / 说-01, manner, x11 / 只是)
(x13 / 有-05, arg0, x14 / 水)
(x13 / 有-05, arg1, x15 / 益处)
(x13 / 有-05, beneficiary, x16 / 心)

Input(Some(Graph((说-01 :arg1 (有-05 :beneficiary 心 :arg1 益处 :arg0 水) :arg3 我 :manner 只是),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(11,12,List(1),有,有-05,false), Span(8,9,List(2),心,心,false), Span(12,13,List(3),益处,益处,false), Span(6,7,List(4),水,水,false), Span(2,3,List(5),我,我,false), Span(0,1,List(6),只是,只是,false)),Map(2 -> 心, 5 -> 我, 1 -> 有-05, 4 -> 水, 6 -> 只是, 0 -> 说-01, 3 -> 益处),Map(x16 -> 心, x13 -> 有-05, x12 -> 我, x15 -> 益处, x11 -> 只是, x14 -> 水, x0 -> 说-01))),[Ljava.lang.String;@5fdfe8cf,Annotation([Ljava.lang.String;@2a8b33ba,[Ljava.lang.String;@4e8b357d,[Ljava.lang.String;@2e1eb85f),Annotation([Ljava.lang.String;@ea7a4c3,[Ljava.lang.String;@7d42404e,[Ledu.cmu.lti.nlp.amr.Dependency;@6af5b246),Annotation([Ljava.lang.String;@31723307,[Ljava.lang.String;@2401856,[Ljava.lang.String;@6d6f6860),Annotation([Ljava.lang.String;@2a4f8009,[Ljava.lang.String;@a85644c,[Ledu.cmu.lti.nlp.amr.Entity;@8054fe2))
AMR:
(x0 / 说-01, manner, x11 / 只是)
(x0 / 说-01, manner, x12 / 我)
(x0 / 说-01, snt1, x14 / 水)
(x13 / 有-05, beneficiary, x15 / 益处)
(x13 / 有-05, beneficiary, x16 / 心)
(x14 / 水, location, x16 / 心)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,701 microseconds
Sentence: 我 不 懂 他 的 话 是 什么 意思 ， 可 我 也 不 做声 …

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  做声 => 做声
Oracle Span 4:  懂 => 懂-01
Oracle Span 5:  我 => 我
Oracle Span 6:  话 => 话
Spans:
Span 12-13:  也 => 也
Span 3-4:  他 => 他
Span 14-15:  做声 => 做声
Span 2-3:  懂 => 懂-01
Span 0-1:  我 => 我
Span 5-6:  话 => 话

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  也 => 也
Oracle Span 3-4:  他 => 他
Oracle Span 14-15:  做声 => 做声
Oracle Span 2-3:  懂 => 懂-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  话 => 话

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	懂	_	VV	VV	_	0	root	_	_
4	他	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	话	_	NN	NN	_	3	dobj	_	_
7	是	_	VC	VC	_	3	conj	_	_
8	什么	_	DT	DT	_	9	det	_	_
9	意思	_	NN	NN	_	7	attr	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	可	_	VV	VV	_	3	conj	_	_
12	我	_	PN	PN	_	15	nsubj	_	_
13	也	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	做声	_	VV	VV	_	16	rcmod	_	_
16	…	_	NN	NN	_	11	dobj	_	_

Oracle:
(x2 / 懂-01, arg0, x4 / 我)
(x2 / 懂-01, arg1, x5 / 话)
(x5 / 话, poss, x6 / 他)
(x7 / 做声, manner, x9 / 也)

Input(Some(Graph((contrast :arg1 (懂-01 :arg1 (话 :poss 他) :arg0 我 :polarity -) :arg2 (做声 :arg0 x4 :manner 也 :polarity -)),ArrayBuffer(Span(2,3,List(0),懂,懂-01,false), Span(5,6,List(1),话,话,false), Span(3,4,List(2),他,他,false), Span(0,1,List(3),我,我,false), Span(14,15,List(4),做声,做声,false), Span(12,13,List(5),也,也,false)),Map(2 -> 他, 5 -> 也, 1 -> 话, 4 -> 做声, 0 -> 懂-01, 3 -> 我),Map(x2 -> 懂-01, x5 -> 话, x7 -> 做声, x4 -> 我, x6 -> 他, x9 -> 也))),[Ljava.lang.String;@1e3f0aea,Annotation([Ljava.lang.String;@48268eec,[Ljava.lang.String;@69a024a0,[Ljava.lang.String;@4bf80c29),Annotation([Ljava.lang.String;@2d7637e6,[Ljava.lang.String;@515b9d4a,[Ledu.cmu.lti.nlp.amr.Dependency;@39b626e5),Annotation([Ljava.lang.String;@32a4ecbe,[Ljava.lang.String;@2e71240b,[Ljava.lang.String;@23cd5d42),Annotation([Ljava.lang.String;@2b44d6d0,[Ljava.lang.String;@3e900e1a,[Ledu.cmu.lti.nlp.amr.Entity;@196624bf))
AMR:
(x2 / 懂-01, time, x4 / 我)
(x5 / 话, mod, x2 / 懂-01)
(x5 / 话, poss, x6 / 他)
(x7 / 做声, domain, x5 / 话)
(x7 / 做声, manner, x9 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 11,873 microseconds
Sentence: 我 知道 不 应该 去 问 他 。

Oracle Span 1:  去 => 去-01
Oracle Span 2:  应该 => 应该-02
Oracle Span 3:  我 => 我
Oracle Span 4:  知道 => 知道-01
Oracle Span 5:  问 => 问-01
Spans:
Span 4-5:  去 => 去-01
Span 3-4:  应该 => 应该-02
Span 0-1:  我 => 我
Span 1-2:  知道 => 知道-01
Span 5-6:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-01
Oracle Span 3-4:  应该 => 应该-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  知道 => 知道-01
Oracle Span 5-6:  问 => 问-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	知道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	应该	_	VV	VV	_	2	ccomp	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	问	_	VV	VV	_	2	dep	_	_
7	他	_	PN	PN	_	6	ccomp	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	我	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 我)
(x0 / 知道-01, arg1, x3 / 应该-02)
(x3 / 应该-02, arg0, x5 / 去-01)
(x5 / 去-01, arg1, x7 / 问-01)

Input(Some(Graph((知道-01 :arg1 (应该-02 :arg0 (去-01 :arg1 (问-01 :arg0 x2) :arg0 x2) :polarity -) :arg0 我),ArrayBuffer(Span(1,2,List(0),知道,知道-01,false), Span(3,4,List(1),应该,应该-02,false), Span(4,5,List(2),去,去-01,false), Span(5,6,List(3),问,问-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 去-01, 1 -> 应该-02, 4 -> 我, 0 -> 知道-01, 3 -> 问-01),Map(x2 -> 我, x5 -> 去-01, x7 -> 问-01, x3 -> 应该-02, x0 -> 知道-01))),[Ljava.lang.String;@50085d9c,Annotation([Ljava.lang.String;@5df7e31b,[Ljava.lang.String;@63a9c661,[Ljava.lang.String;@4b425577),Annotation([Ljava.lang.String;@5934153e,[Ljava.lang.String;@3bb9ca38,[Ledu.cmu.lti.nlp.amr.Dependency;@160e99e0),Annotation([Ljava.lang.String;@4f3e9fbb,[Ljava.lang.String;@365afe87,[Ljava.lang.String;@43471a7e),Annotation([Ljava.lang.String;@21e45a6f,[Ljava.lang.String;@1a1ccaaf,[Ledu.cmu.lti.nlp.amr.Entity;@7b53b1ad))
AMR:
(x0 / 知道-01, decade, x2 / 我)
(x0 / 知道-01, snt1, x3 / 应该-02)
(x3 / 应该-02, snt11, x5 / 去-01)
(x5 / 去-01, snt11, x7 / 问-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,184 microseconds
Sentence: 他 累 了 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  累 => 累-02
Spans:
Span 0-1:  他 => 他
Span 1-2:  累 => 累-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  累 => 累-02

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	累	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 累-02, arg0, x2 / 他)

Input(Some(Graph((累-02 :arg0 他),ArrayBuffer(Span(1,2,List(0),累,累-02,false), Span(0,1,List(1),他,他,false)),Map(1 -> 他, 0 -> 累-02),Map(x2 -> 他, x0 -> 累-02))),[Ljava.lang.String;@3cc053,Annotation([Ljava.lang.String;@388c519,[Ljava.lang.String;@7fbd3e75,[Ljava.lang.String;@198536f6),Annotation([Ljava.lang.String;@7fdd43cd,[Ljava.lang.String;@3a38f122,[Ledu.cmu.lti.nlp.amr.Dependency;@2ce03e86),Annotation([Ljava.lang.String;@1c628f6a,[Ljava.lang.String;@9b47400,[Ljava.lang.String;@747835f5),Annotation([Ljava.lang.String;@594131f2,[Ljava.lang.String;@51d0ec6f,[Ledu.cmu.lti.nlp.amr.Entity;@7bee8621))
AMR:
(x0 / 累-02, prep-from, x2 / 他)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,010 microseconds
Sentence: 他 坐 下来 。

Oracle Span 1:  下来 => 下来-01
Oracle Span 2:  他 => 他
Oracle Span 3:  坐 => 坐-01
Spans:
Span 2-3:  下来 => 下来-01
Span 0-1:  他 => 他
Span 1-2:  坐 => 坐-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  下来 => 下来-01
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  坐 => 坐-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	坐	_	VV	VV	_	0	root	_	_
3	下来	_	VV	VV	_	2	comod	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x4 / 他)
(x0 / 坐-01, direction, x3 / 下来-01)

Input(Some(Graph((坐-01 :arg0 他 :direction 下来-01),ArrayBuffer(Span(1,2,List(0),坐,坐-01,false), Span(0,1,List(1),他,他,false), Span(2,3,List(2),下来,下来-01,false)),Map(2 -> 下来-01, 1 -> 他, 0 -> 坐-01),Map(x4 -> 他, x3 -> 下来-01, x0 -> 坐-01))),[Ljava.lang.String;@4e0cc334,Annotation([Ljava.lang.String;@1e12a5a6,[Ljava.lang.String;@4877919f,[Ljava.lang.String;@47a7c93e),Annotation([Ljava.lang.String;@6f9ab79d,[Ljava.lang.String;@64ae105d,[Ledu.cmu.lti.nlp.amr.Dependency;@10a18e3e),Annotation([Ljava.lang.String;@69364b2d,[Ljava.lang.String;@53aa2fc9,[Ljava.lang.String;@4792f119),Annotation([Ljava.lang.String;@5bde57ab,[Ljava.lang.String;@ea00de,[Ledu.cmu.lti.nlp.amr.Entity;@23ca36d))
AMR:
(x0 / 坐-01, direction, x3 / 下来-01)
(x0 / 坐-01, prep-from, x4 / 他)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,800 microseconds
Sentence: 我 在 他 身 旁 坐下 。

Oracle Span 1:  他 => 他
Oracle Span 2:  坐下 => 坐下-01
Oracle Span 3:  我 => 我
Spans:
Span 2-3:  他 => 他
Span 5-6:  坐下 => 坐下-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 5-6:  坐下 => 坐下-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	在	_	P	P	_	6	prep	_	_
3	他	_	PN	PN	_	4	nn	_	_
4	身	_	NN	NN	_	5	lobj	_	_
5	旁	_	LC	LC	_	2	plmod	_	_
6	坐下	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 坐下-01, arg0, x2 / 我)

Input(Some(Graph((坐下-01 :location (身旁 :poss 他) :arg0 我),ArrayBuffer(Span(5,6,List(0),坐下,坐下-01,false), Span(2,3,List(1),他,他,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 他, 0 -> 坐下-01),Map(x2 -> 我, x4 -> 他, x0 -> 坐下-01))),[Ljava.lang.String;@52f6900a,Annotation([Ljava.lang.String;@7bbcf6f0,[Ljava.lang.String;@2b80e5a9,[Ljava.lang.String;@4cc01c7f),Annotation([Ljava.lang.String;@2a50b32d,[Ljava.lang.String;@36c7cbe1,[Ledu.cmu.lti.nlp.amr.Dependency;@1ac6dd3d),Annotation([Ljava.lang.String;@562919fe,[Ljava.lang.String;@794f11cd,[Ljava.lang.String;@715f45c6),Annotation([Ljava.lang.String;@5d5c41e5,[Ljava.lang.String;@43245559,[Ledu.cmu.lti.nlp.amr.Entity;@42e4e589))
AMR:
(x0 / 坐下-01, op, x2 / 我)
(x4 / 他, location, x2 / 我)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,068 microseconds
Sentence: 沉默 了 一会 ， 他 又 说道 ： “ 星星 是 很 美 的 ， 因为 有 一 朵 人们 看 不 到 的 花… ”

Oracle Span 1:  一会 => 一会
Oracle Span 2:  人们 => 人们
Oracle Span 3:  他 => 他
Oracle Span 4:  又 => 又
Oracle Span 5:  很 => 很
Oracle Span 6:  星星 => 星星
Oracle Span 7:  有 => 有-04
Oracle Span 8:  沉默 => 沉默-01
Oracle Span 9:  美 => 美-01
Oracle Span 10:  花 => 花
Spans:
Span 2-3:  一会 => 一会
Span 19-20:  人们 => 人们
Span 4-5:  他 => 他
Span 5-6:  又 => 又
Span 11-12:  很 => 很
Span 9-10:  星星 => 星星
Span 16-17:  有 => 有-04
Span 0-1:  沉默 => 沉默-01
Span 12-13:  美 => 美-01
Span 24-25:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一会 => 一会
Oracle Span 19-20:  人们 => 人们
Oracle Span 4-5:  他 => 他
Oracle Span 5-6:  又 => 又
Oracle Span 11-12:  很 => 很
Oracle Span 9-10:  星星 => 星星
Oracle Span 16-17:  有 => 有-04
Oracle Span 0-1:  沉默 => 沉默-01
Oracle Span 12-13:  美 => 美-01
Oracle Span 24-25:  花 => 花

Dependencies:
1	沉默	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	一会	_	CD	CD	_	1	dep	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	他	_	PN	PN	_	7	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说道	_	VV	VV	_	1	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	星星	_	NN	NN	_	11	nsubj	_	_
11	是	_	VC	VC	_	7	ccomp	_	_
12	很	_	AD	AD	_	13	advmod	_	_
13	美	_	JJ	JJ	_	11	dep	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	,	_	PU	PU	_	11	punct	_	_
16	因为	_	P	P	_	21	prep	_	_
17	有	_	VE	VE	_	16	pccomp	_	_
18	一	_	CD	CD	_	19	nummod	_	_
19	朵	_	M	M	_	20	clf	_	_
20	人们	_	NN	NN	_	17	dobj	_	_
21	看	_	VV	VV	_	11	dep	_	_
22	不	_	AD	AD	_	23	neg	_	_
23	到	_	VV	VV	_	25	rcmod	_	_
24	的	_	DEC	DEC	_	23	cpm	_	_
25	花…	_	NN	NN	_	21	dobj	_	_
26	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x3 / 他)
(x2 / 沉默-01, duration, x4 / 一会)
(x8 / 美-01, arg0, x9 / 星星)
(x8 / 美-01, cause, x17 / 有-04)
(x8 / 美-01, degree, x10 / 很)

Input(Some(Graph((temporal :arg1 (沉默-01 :duration 一会 :arg0 他) :arg2 (说-01 :manner 又 :arg0 x3 :arg1 (美-01 :cause (有-04 :arg0 (看到-01 :polarity - :arg0 人们 :arg1 (花 :quant 1))) :degree 很 :arg0 星星))),ArrayBuffer(Span(0,1,List(0),沉默,沉默-01,false), Span(2,3,List(1),一会,一会,false), Span(4,5,List(2),他,他,false), Span(5,6,List(3),又,又,false), Span(12,13,List(4),美,美-01,false), Span(16,17,List(5),有,有-04,false), Span(19,20,List(6),人们,人们,false), Span(24,25,List(7),花,花,false), Span(11,12,List(8),很,很,false), Span(9,10,List(9),星星,星星,false)),Map(2 -> 他, 5 -> 有-04, 8 -> 很, 7 -> 花, 1 -> 一会, 4 -> 美-01, 6 -> 人们, 9 -> 星星, 0 -> 沉默-01, 3 -> 又),Map(x10 -> 很, x2 -> 沉默-01, x8 -> 美-01, x21 -> 花, x4 -> 一会, x3 -> 他, x6 -> 又, x20 -> 人们, x9 -> 星星, x17 -> 有-04))),[Ljava.lang.String;@499ee966,Annotation([Ljava.lang.String;@76f2dad9,[Ljava.lang.String;@171dc7c3,[Ljava.lang.String;@72b0a004),Annotation([Ljava.lang.String;@4cdba2ed,[Ljava.lang.String;@2c1f8dbd,[Ledu.cmu.lti.nlp.amr.Dependency;@55c57422),Annotation([Ljava.lang.String;@22825e1e,[Ljava.lang.String;@335f5c69,[Ljava.lang.String;@63fd4dda),Annotation([Ljava.lang.String;@1d6751e3,[Ljava.lang.String;@2d258eff,[Ledu.cmu.lti.nlp.amr.Entity;@64502326))
AMR:
(x17 / 有-04, degree, x8 / 美-01)
(x17 / 有-04, prep-on-behalf, x20 / 人们)
(x2 / 沉默-01, duration, x3 / 他)
(x2 / 沉默-01, duration, x4 / 一会)
(x21 / 花, location, x20 / 人们)
(x4 / 一会, source, x6 / 又)
(x8 / 美-01, degree, x10 / 很)
(x8 / 美-01, degree, x4 / 一会)
(x8 / 美-01, degree, x9 / 星星)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.2.2.0.1
WARNING: makeIds can't find span Id: 0.1.2.2.0.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.0
Decoded in 32,706 microseconds
Sentence: 我 回答 道 ： “ 当然 。 ”

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  当然 => 当然
Oracle Span 3:  我 => 我
Spans:
Span 1-2:  回答 => 回答-01
Span 5-6:  当然 => 当然
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 5-6:  当然 => 当然
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	3	dep	_	_
3	道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	当然	_	VA	VA	_	3	ccomp	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)
(x0 / 回答-01, arg2, x3 / 当然)

Input(Some(Graph((回答-01 :arg2 当然 :arg0 我),ArrayBuffer(Span(1,2,List(0),回答,回答-01,false), Span(5,6,List(1),当然,当然,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 当然, 0 -> 回答-01),Map(x2 -> 我, x3 -> 当然, x0 -> 回答-01))),[Ljava.lang.String;@6dca31eb,Annotation([Ljava.lang.String;@4a058df8,[Ljava.lang.String;@4b56b031,[Ljava.lang.String;@2e7af36e),Annotation([Ljava.lang.String;@1283ca23,[Ljava.lang.String;@740fefc6,[Ledu.cmu.lti.nlp.amr.Dependency;@aa61e4e),Annotation([Ljava.lang.String;@733e6df7,[Ljava.lang.String;@7fe07361,[Ljava.lang.String;@741ac284),Annotation([Ljava.lang.String;@4ef4f627,[Ljava.lang.String;@4ea56bdb,[Ledu.cmu.lti.nlp.amr.Entity;@32227215))
AMR:
(x0 / 回答-01, manner, x2 / 我)
(x0 / 回答-01, snt11, x3 / 当然)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,463 microseconds
Sentence: 而 我 默默 地 看 着 月光 下 沙漠 的 褶皱 。

Oracle Span 1:  我 => 我
Oracle Span 2:  月光 => 月光
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  看 => 看-02
Oracle Span 5:  褶皱 => 褶皱
Oracle Span 6:  默默 => 默默
Spans:
Span 1-2:  我 => 我
Span 6-7:  月光 => 月光
Span 8-9:  沙漠 => 沙漠
Span 4-5:  看 => 看-02
Span 10-11:  褶皱 => 褶皱
Span 2-3:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  月光 => 月光
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 4-5:  看 => 看-02
Oracle Span 10-11:  褶皱 => 褶皱
Oracle Span 2-3:  默默 => 默默

Dependencies:
1	而	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	默默	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	看	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	月光	_	NN	NN	_	8	lobj	_	_
8	下	_	LC	LC	_	9	dep	_	_
9	沙漠	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	褶皱	_	NN	NN	_	5	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 看-02, arg0, x3 / 我)
(x2 / 看-02, arg1, x5 / 褶皱)
(x2 / 看-02, manner, x4 / 默默)
(x5 / 褶皱, poss, x6 / 沙漠)
(x6 / 沙漠, time, x7 / 月光)

Input(Some(Graph((contrast :arg2 (看-02 :arg1 (褶皱 :poss (沙漠 :time 月光)) :manner 默默 :arg0 我)),ArrayBuffer(Span(4,5,List(0),看,看-02,false), Span(10,11,List(1),褶皱,褶皱,false), Span(8,9,List(2),沙漠,沙漠,false), Span(6,7,List(3),月光,月光,false), Span(2,3,List(4),默默,默默,false), Span(1,2,List(5),我,我,false)),Map(2 -> 沙漠, 5 -> 我, 1 -> 褶皱, 4 -> 默默, 0 -> 看-02, 3 -> 月光),Map(x2 -> 看-02, x5 -> 褶皱, x7 -> 月光, x4 -> 默默, x3 -> 我, x6 -> 沙漠))),[Ljava.lang.String;@108e9837,Annotation([Ljava.lang.String;@79a201cf,[Ljava.lang.String;@1cbc5693,[Ljava.lang.String;@3d2f3dcb),Annotation([Ljava.lang.String;@59845579,[Ljava.lang.String;@30c19bff,[Ledu.cmu.lti.nlp.amr.Dependency;@4e375bba),Annotation([Ljava.lang.String;@ab2e6d2,[Ljava.lang.String;@71664560,[Ljava.lang.String;@4d4436d0),Annotation([Ljava.lang.String;@39da5e49,[Ljava.lang.String;@2443abd6,[Ledu.cmu.lti.nlp.amr.Entity;@674da77b))
AMR:
(x2 / 看-02, manner, x4 / 默默)
(x2 / 看-02, op, x3 / 我)
(x2 / 看-02, snt1, x5 / 褶皱)
(x5 / 褶皱, poss, x6 / 沙漠)
(x6 / 沙漠, time, x7 / 月光)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,140 microseconds
Sentence: “ 沙漠 是 美 的 。 ” 他 又 说道 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  美 => 美-01
Spans:
Span 7-8:  他 => 他
Span 8-9:  又 => 又
Span 1-2:  沙漠 => 沙漠
Span 3-4:  美 => 美-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 8-9:  又 => 又
Oracle Span 1-2:  沙漠 => 沙漠
Oracle Span 3-4:  美 => 美-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	沙漠	_	NN	NN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	美	_	NR	NR	_	10	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	他	_	PN	PN	_	10	nsubj	_	_
9	又	_	AD	AD	_	10	advmod	_	_
10	说道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x4 / 美-01, arg0, x5 / 沙漠)

Input(Some(Graph((说-01 :arg0 他 :manner 又 :arg1 (美-01 :arg0 沙漠)),ArrayBuffer(Span(7,8,List(0),他,他,false), Span(8,9,List(1),又,又,false), Span(3,4,List(2),美,美-01,false), Span(1,2,List(3),沙漠,沙漠,false)),Map(2 -> 美-01, 1 -> 又, 0 -> 他, 3 -> 沙漠),Map(x2 -> 他, x5 -> 沙漠, x4 -> 美-01, x3 -> 又))),[Ljava.lang.String;@bd3eff4,Annotation([Ljava.lang.String;@6010d0d1,[Ljava.lang.String;@5934ca1e,[Ljava.lang.String;@5348d83c),Annotation([Ljava.lang.String;@477021ee,[Ljava.lang.String;@2180e789,[Ledu.cmu.lti.nlp.amr.Dependency;@5e9bbd9d),Annotation([Ljava.lang.String;@4b87074a,[Ljava.lang.String;@d3e3085,[Ljava.lang.String;@2ba42204),Annotation([Ljava.lang.String;@285005b8,[Ljava.lang.String;@5b1efaaf,[Ledu.cmu.lti.nlp.amr.Entity;@27585351))
AMR:
(x3 / 又, part, x2 / 他)
(x4 / 美-01, purpose, x2 / 他)
(x4 / 美-01, topic, x5 / 沙漠)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 6,188 microseconds
Sentence: 确实 如此 。

Oracle Span 1:  如此 => 如此-01
Oracle Span 2:  确实 => 确实-01
Spans:
Span 1-2:  如此 => 如此-01
Span 0-1:  确实 => 确实-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  如此 => 如此-01
Oracle Span 0-1:  确实 => 确实-01

Dependencies:
1	确实	_	AD	AD	_	2	advmod	_	_
2	如此	_	PN	PN	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 如此-01, manner, x2 / 确实-01)

Input(Some(Graph((如此-01 :manner 确实-01),ArrayBuffer(Span(1,2,List(0),如此,如此-01,false), Span(0,1,List(1),确实,确实-01,false)),Map(1 -> 确实-01, 0 -> 如此-01),Map(x2 -> 确实-01, x0 -> 如此-01))),[Ljava.lang.String;@2de6f1bc,Annotation([Ljava.lang.String;@5b35c7d,[Ljava.lang.String;@29d405e6,[Ljava.lang.String;@4c731956),Annotation([Ljava.lang.String;@56826a75,[Ljava.lang.String;@49cd946c,[Ledu.cmu.lti.nlp.amr.Dependency;@40bf4386),Annotation([Ljava.lang.String;@14d25b6e,[Ljava.lang.String;@51c65a43,[Ljava.lang.String;@740dcae3),Annotation([Ljava.lang.String;@4e140497,[Ljava.lang.String;@481b2f10,[Ledu.cmu.lti.nlp.amr.Entity;@2b6c7012))
AMR:
(x0 / 如此-01, manner, x2 / 确实-01)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,453 microseconds
Sentence: 我 一直 很 喜欢 沙漠 。

Oracle Span 1:  一直 => 一直
Oracle Span 2:  喜欢 => 喜欢-01
Oracle Span 3:  很 => 很
Oracle Span 4:  我 => 我
Oracle Span 5:  沙漠 => 沙漠
Spans:
Span 1-2:  一直 => 一直
Span 3-4:  喜欢 => 喜欢-01
Span 2-3:  很 => 很
Span 0-1:  我 => 我
Span 4-5:  沙漠 => 沙漠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一直 => 一直
Oracle Span 3-4:  喜欢 => 喜欢-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  沙漠 => 沙漠

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	一直	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	喜欢	_	VV	VV	_	0	root	_	_
5	沙漠	_	NN	NN	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 喜欢-01, arg0, x2 / 我)
(x0 / 喜欢-01, arg1, x5 / 沙漠)
(x0 / 喜欢-01, degree, x4 / 很)
(x0 / 喜欢-01, duration, x3 / 一直)

Input(Some(Graph((喜欢-01 :arg1 沙漠 :degree 很 :duration 一直 :arg0 我),ArrayBuffer(Span(3,4,List(0),喜欢,喜欢-01,false), Span(4,5,List(1),沙漠,沙漠,false), Span(2,3,List(2),很,很,false), Span(1,2,List(3),一直,一直,false), Span(0,1,List(4),我,我,false)),Map(2 -> 很, 1 -> 沙漠, 4 -> 我, 0 -> 喜欢-01, 3 -> 一直),Map(x2 -> 我, x5 -> 沙漠, x4 -> 很, x3 -> 一直, x0 -> 喜欢-01))),[Ljava.lang.String;@31acfd4e,Annotation([Ljava.lang.String;@5f726750,[Ljava.lang.String;@4e80a001,[Ljava.lang.String;@624b523),Annotation([Ljava.lang.String;@50b46e24,[Ljava.lang.String;@1c30cb85,[Ledu.cmu.lti.nlp.amr.Dependency;@577bf0aa),Annotation([Ljava.lang.String;@7455dacb,[Ljava.lang.String;@7634f2b,[Ljava.lang.String;@1d15c0a1),Annotation([Ljava.lang.String;@15639d09,[Ljava.lang.String;@4fba8eec,[Ledu.cmu.lti.nlp.amr.Entity;@52bd9a27))
AMR:
(x0 / 喜欢-01, ARG5, x5 / 沙漠)
(x0 / 喜欢-01, degree, x4 / 很)
(x0 / 喜欢-01, duration, x3 / 一直)
(x0 / 喜欢-01, op, x2 / 我)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,025 microseconds
Sentence: 坐 在 一 个 沙丘 上 ， 什么 也 看 不 见 、 听 不 见 。

Oracle Span 1:  什么 => 什么
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  沙丘 => 沙丘
Spans:
Span 7-8:  什么 => 什么
Span 0-1:  坐 => 坐-01
Span 4-5:  沙丘 => 沙丘

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  什么 => 什么
Oracle Span 0-1:  坐 => 坐-01
Oracle Span 4-5:  沙丘 => 沙丘

Dependencies:
1	坐	_	VV	VV	_	0	root	_	_
2	在	_	P	P	_	1	prep	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	沙丘	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	2	plmod	_	_
7	,	_	PU	PU	_	1	punct	_	_
8	什么	_	PN	PN	_	10	nsubj	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	看	_	VV	VV	_	1	dep	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	见	_	VV	VV	_	10	dep	_	_
13	、	_	PU	PU	_	12	punct	_	_
14	听	_	VV	VV	_	12	dep	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	见	_	VV	VV	_	12	dep	_	_
17	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x12 / 坐-01, arg1, x13 / 沙丘)

Input(Some(Graph((and :op (看见-01 :polarity - :arg1 什么) :op (听见-01 :polarity - :arg1 什么 :time (坐-01 :arg1 (沙丘 :quant 1)))),ArrayBuffer(Span(7,8,List(0),什么,什么,false), Span(0,1,List(1),坐,坐-01,false), Span(4,5,List(2),沙丘,沙丘,false)),Map(2 -> 沙丘, 1 -> 坐-01, 0 -> 什么),Map(x13 -> 沙丘, x8 -> 什么, x12 -> 坐-01))),[Ljava.lang.String;@611e5819,Annotation([Ljava.lang.String;@681c0ae6,[Ljava.lang.String;@73ca34e7,[Ljava.lang.String;@4d98e41b),Annotation([Ljava.lang.String;@5ed5b321,[Ljava.lang.String;@5696c927,[Ledu.cmu.lti.nlp.amr.Dependency;@7459a21e),Annotation([Ljava.lang.String;@7eeb38b2,[Ljava.lang.String;@d54d0f5,[Ljava.lang.String;@6d6bff89),Annotation([Ljava.lang.String;@541bf968,[Ljava.lang.String;@739265f1,[Ledu.cmu.lti.nlp.amr.Entity;@58eac00e))
AMR:
(x12 / 坐-01, topic, x13 / 沙丘)
(x8 / 什么, mod, x13 / 沙丘)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
Decoded in 5,566 microseconds
Sentence: 但是 ， 却 有 一 种 说 不 出 的 东西 在 默默 地 放 着 光芒 …

Oracle Span 1:  东西 => 东西
Oracle Span 2:  光芒 => 光芒
Oracle Span 3:  放 => 放-01
Oracle Span 4:  默默 => 默默
Spans:
Span 10-11:  东西 => 东西
Span 16-17:  光芒 => 光芒
Span 14-15:  放 => 放-01
Span 12-13:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  东西 => 东西
Oracle Span 16-17:  光芒 => 光芒
Oracle Span 14-15:  放 => 放-01
Oracle Span 12-13:  默默 => 默默

Dependencies:
1	但是	_	AD	AD	_	15	advmod	_	_
2	,	_	PU	PU	_	15	punct	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	11	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	7	nsubj	_	_
7	说	_	VV	VV	_	4	dep	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	出	_	VV	VV	_	7	ccomp	_	_
10	的	_	DEC	DEC	_	4	cpm	_	_
11	东西	_	NN	NN	_	15	nsubj	_	_
12	在	_	P	P	_	15	prep	_	_
13	默默	_	NN	NN	_	14	nn	_	_
14	地	_	NN	NN	_	12	pobj	_	_
15	放	_	VV	VV	_	0	root	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	光芒	_	PU	PU	_	15	punct	_	_
18	…	_	PU	PU	_	15	punct	_	_

Oracle:
(x14 / 放-01, arg0, x15 / 东西)
(x14 / 放-01, arg1, x19 / 光芒)
(x14 / 放-01, manner, x20 / 默默)

Input(Some(Graph((contrast :arg2 (放-01 :manner 默默 :arg1 光芒 :arg0 (东西 :arg1-of (说出-01 :polarity -) :quant 1))),ArrayBuffer(Span(14,15,List(0),放,放-01,false), Span(12,13,List(1),默默,默默,false), Span(16,17,List(2),光芒,光芒,false), Span(10,11,List(3),东西,东西,false)),Map(2 -> 光芒, 1 -> 默默, 0 -> 放-01, 3 -> 东西),Map(x19 -> 光芒, x15 -> 东西, x20 -> 默默, x14 -> 放-01))),[Ljava.lang.String;@6acffb2d,Annotation([Ljava.lang.String;@61149fa5,[Ljava.lang.String;@149c39b,[Ljava.lang.String;@f2d890c),Annotation([Ljava.lang.String;@1a2e0d57,[Ljava.lang.String;@5f025000,[Ledu.cmu.lti.nlp.amr.Dependency;@10980560),Annotation([Ljava.lang.String;@739e8b96,[Ljava.lang.String;@19b07407,[Ljava.lang.String;@54ffa561),Annotation([Ljava.lang.String;@49c099b,[Ljava.lang.String;@3d9f0a5,[Ledu.cmu.lti.nlp.amr.Entity;@1953bc95))
AMR:
(x14 / 放-01, manner, x20 / 默默)
(x14 / 放-01, snt5, x19 / 光芒)
(x15 / 东西, mod, x20 / 默默)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,700 microseconds
Sentence: “ 使 沙漠 更加 美丽 的 ， 就 是 在 某个 角落 里 ， 藏 着 一 口 井 … ”

Oracle Span 1:  井 => 井
Oracle Span 2:  使 => 使-01
Oracle Span 3:  更加 => 更加
Oracle Span 4:  沙漠 => 沙漠
Oracle Span 5:  美丽 => 美丽-01
Oracle Span 6:  藏 => 藏-01
Oracle Span 7:  角落 => 角落
Spans:
Span 18-19:  井 => 井
Span 1-2:  使 => 使-01
Span 3-4:  更加 => 更加
Span 2-3:  沙漠 => 沙漠
Span 4-5:  美丽 => 美丽-01
Span 14-15:  藏 => 藏-01
Span 11-12:  角落 => 角落

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  井 => 井
Oracle Span 1-2:  使 => 使-01
Oracle Span 3-4:  更加 => 更加
Oracle Span 2-3:  沙漠 => 沙漠
Oracle Span 4-5:  美丽 => 美丽-01
Oracle Span 14-15:  藏 => 藏-01
Oracle Span 11-12:  角落 => 角落

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	使	_	VV	VV	_	9	nsubj	_	_
3	沙漠	_	NN	NN	_	2	dobj	_	_
4	更加	_	AD	AD	_	5	advmod	_	_
5	美丽	_	VA	VA	_	2	dep	_	_
6	的	_	DEC	DEC	_	2	cpm	_	_
7	,	_	PU	PU	_	9	punct	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	在	_	P	P	_	9	prep	_	_
11	某个	_	NN	NN	_	12	nn	_	_
12	角落	_	NN	NN	_	13	lobj	_	_
13	里	_	LC	LC	_	10	plmod	_	_
14	,	_	PU	PU	_	9	punct	_	_
15	藏	_	VV	VV	_	9	conj	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	口	_	M	M	_	20	clf	_	_
19	井	_	NN	NN	_	20	nn	_	_
20	…	_	NN	NN	_	15	dobj	_	_
21	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x13 / 使-01, arg0, x14 / 藏-01)
(x13 / 使-01, arg1, x20 / 沙漠)
(x13 / 使-01, arg2, x21 / 美丽-01)
(x14 / 藏-01, arg1, x15 / 井)
(x14 / 藏-01, location, x18 / 角落)
(x21 / 美丽-01, degree, x22 / 更加)

Input(Some(Graph((say :arg1 (使-01 :arg2 (美丽-01 :degree 更加) :arg1 沙漠 :arg0 (藏-01 :location (角落 :mod 某) :arg1 (井 :quant 1)))),ArrayBuffer(Span(1,2,List(0),使,使-01,false), Span(4,5,List(1),美丽,美丽-01,false), Span(3,4,List(2),更加,更加,false), Span(2,3,List(3),沙漠,沙漠,false), Span(14,15,List(4),藏,藏-01,false), Span(11,12,List(5),角落,角落,false), Span(18,19,List(6),井,井,false)),Map(2 -> 更加, 5 -> 角落, 1 -> 美丽-01, 4 -> 藏-01, 6 -> 井, 0 -> 使-01, 3 -> 沙漠),Map(x22 -> 更加, x13 -> 使-01, x15 -> 井, x21 -> 美丽-01, x18 -> 角落, x14 -> 藏-01, x20 -> 沙漠))),[Ljava.lang.String;@30aec673,Annotation([Ljava.lang.String;@549ac12c,[Ljava.lang.String;@188a5fc2,[Ljava.lang.String;@1cb9ef52),Annotation([Ljava.lang.String;@5a622fe8,[Ljava.lang.String;@58f31629,[Ledu.cmu.lti.nlp.amr.Dependency;@124d26ba),Annotation([Ljava.lang.String;@415d88de,[Ljava.lang.String;@a0bf272,[Ljava.lang.String;@4a89ef44),Annotation([Ljava.lang.String;@310a7859,[Ljava.lang.String;@1cbc1dde,[Ledu.cmu.lti.nlp.amr.Entity;@4971f459))
AMR:
(x13 / 使-01, prep-for, x20 / 沙漠)
(x13 / 使-01, purpose, x21 / 美丽-01)
(x14 / 藏-01, location, x18 / 角落)
(x15 / 井, topic, x14 / 藏-01)
(x21 / 美丽-01, degree, x22 / 更加)
(x21 / 美丽-01, location, x18 / 角落)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 16,923 microseconds
Sentence: 我 很 惊讶 ， 突然 明白 了 为什么 沙漠 放 着 光芒 。

Oracle Span 1:  光芒 => 光芒
Oracle Span 2:  很 => 很
Oracle Span 3:  惊讶 => 惊讶-01
Oracle Span 4:  我 => 我
Oracle Span 5:  放 => 放-02
Oracle Span 6:  明白 => 明白-01
Oracle Span 7:  沙漠 => 沙漠
Oracle Span 8:  突然 => 突然
Spans:
Span 11-12:  光芒 => 光芒
Span 1-2:  很 => 很
Span 2-3:  惊讶 => 惊讶-01
Span 0-1:  我 => 我
Span 9-10:  放 => 放-02
Span 5-6:  明白 => 明白-01
Span 8-9:  沙漠 => 沙漠
Span 4-5:  突然 => 突然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  光芒 => 光芒
Oracle Span 1-2:  很 => 很
Oracle Span 2-3:  惊讶 => 惊讶-01
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  放 => 放-02
Oracle Span 5-6:  明白 => 明白-01
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 4-5:  突然 => 突然

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	惊讶	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	突然	_	AD	AD	_	6	advmod	_	_
6	明白	_	VV	VV	_	3	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	为什么	_	AD	AD	_	10	advmod	_	_
9	沙漠	_	NN	NN	_	10	prep	_	_
10	放	_	VV	VV	_	6	ccomp	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	光芒	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	我	_	PN	PN	_	10	xsubj	_	_

Oracle:
(x0 / 惊讶-01, arg0, x2 / 我)
(x0 / 惊讶-01, arg1, x4 / 明白-01)
(x0 / 惊讶-01, degree, x3 / 很)
(x4 / 明白-01, arg1, x7 / 放-02)
(x4 / 明白-01, manner, x6 / 突然)
(x7 / 放-02, arg0, x8 / 沙漠)
(x7 / 放-02, arg1, x9 / 光芒)

Input(Some(Graph((惊讶-01 :arg1 (明白-01 :arg1 (放-02 :cause amr-unknown :arg1 光芒 :arg0 沙漠) :manner 突然 :arg0 x2) :degree 很 :arg0 我),ArrayBuffer(Span(2,3,List(0),惊讶,惊讶-01,false), Span(5,6,List(1),明白,明白-01,false), Span(9,10,List(2),放,放-02,false), Span(11,12,List(3),光芒,光芒,false), Span(8,9,List(4),沙漠,沙漠,false), Span(4,5,List(5),突然,突然,false), Span(1,2,List(6),很,很,false), Span(0,1,List(7),我,我,false)),Map(2 -> 放-02, 5 -> 突然, 7 -> 我, 1 -> 明白-01, 4 -> 沙漠, 6 -> 很, 0 -> 惊讶-01, 3 -> 光芒),Map(x2 -> 我, x8 -> 沙漠, x7 -> 放-02, x4 -> 明白-01, x3 -> 很, x6 -> 突然, x9 -> 光芒, x0 -> 惊讶-01))),[Ljava.lang.String;@4c07d1fc,Annotation([Ljava.lang.String;@2eada095,[Ljava.lang.String;@52831a73,[Ljava.lang.String;@1416ff46),Annotation([Ljava.lang.String;@66ec4409,[Ljava.lang.String;@2506e949,[Ledu.cmu.lti.nlp.amr.Dependency;@6f1c3f18),Annotation([Ljava.lang.String;@4c531172,[Ljava.lang.String;@489bc8fd,[Ljava.lang.String;@5ac53c06),Annotation([Ljava.lang.String;@54af3cb9,[Ljava.lang.String;@236fdf,[Ledu.cmu.lti.nlp.amr.Entity;@16e99306))
AMR:
(x0 / 惊讶-01, degree, x3 / 很)
(x0 / 惊讶-01, mode, x4 / 明白-01)
(x0 / 惊讶-01, polite, x2 / 我)
(x4 / 明白-01, manner, x6 / 突然)
(x4 / 明白-01, mode, x7 / 放-02)
(x7 / 放-02, location, x8 / 沙漠)
(x7 / 放-02, prep-along-with, x9 / 光芒)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.1
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 18,730 microseconds
Sentence: 当 我 还 是 一 个 小 孩子 的 时候 ， 我 住 在 一 座 古老 的 房子 里 ， 而且 传说 ， 这个 房子 里 埋藏 着 一 个 宝贝 。

Oracle Span 1:  传说 => 传说-01
Oracle Span 2:  住 => 住-01
Oracle Span 3:  古老 => 古老-01
Oracle Span 4:  埋藏 => 埋藏-01
Oracle Span 5:  孩子 => 孩子
Oracle Span 6:  宝贝 => 宝贝
Oracle Span 7:  小 => 小-01
Oracle Span 8:  我 => 我
Oracle Span 9:  房子 => 房子
Spans:
Span 22-23:  传说 => 传说-01
Span 12-13:  住 => 住-01
Span 16-17:  古老 => 古老-01
Span 27-28:  埋藏 => 埋藏-01
Span 7-8:  孩子 => 孩子
Span 31-32:  宝贝 => 宝贝
Span 6-7:  小 => 小-01
Span 1-2:  我 => 我
Span 18-19:  房子 => 房子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 22-23:  传说 => 传说-01
Oracle Span 12-13:  住 => 住-01
Oracle Span 16-17:  古老 => 古老-01
Oracle Span 27-28:  埋藏 => 埋藏-01
Oracle Span 7-8:  孩子 => 孩子
Oracle Span 31-32:  宝贝 => 宝贝
Oracle Span 6-7:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 18-19:  房子 => 房子

Dependencies:
1	当	_	P	P	_	28	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	10	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	孩子	_	NN	NN	_	4	attr	_	_
9	的	_	DEC	DEC	_	4	cpm	_	_
10	时候	_	NN	NN	_	1	pobj	_	_
11	,	_	PU	PU	_	28	punct	_	_
12	我	_	PN	PN	_	13	nsubj	_	_
13	住	_	VV	VV	_	28	conj	_	_
14	在	_	P	P	_	13	prep	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	座	_	M	M	_	19	clf	_	_
17	古老	_	VA	VA	_	19	rcmod	_	_
18	的	_	DEC	DEC	_	17	cpm	_	_
19	房子	_	NN	NN	_	20	lobj	_	_
20	里	_	LC	LC	_	14	plmod	_	_
21	,	_	PU	PU	_	28	punct	_	_
22	而且	_	AD	AD	_	28	advmod	_	_
23	传说	_	NN	NN	_	28	nsubj	_	_
24	,	_	PU	PU	_	28	punct	_	_
25	这个	_	NN	NN	_	26	nn	_	_
26	房子	_	NN	NN	_	27	lobj	_	_
27	里	_	LC	LC	_	28	loc	_	_
28	埋藏	_	VV	VV	_	0	root	_	_
29	着	_	AS	AS	_	28	asp	_	_
30	一	_	CD	CD	_	31	nummod	_	_
31	个	_	M	M	_	32	clf	_	_
32	宝贝	_	NN	NN	_	28	dobj	_	_
33	。	_	PU	PU	_	28	punct	_	_

Oracle:
(x18 / 住-01, arg0, x19 / 我)
(x18 / 住-01, arg1, x20 / 房子)
(x18 / 住-01, time, x23 / 孩子)
(x20 / 房子, mod, x21 / 古老-01)
(x23 / 孩子, mod, x24 / 小-01)
(x27 / 传说-01, arg1, x28 / 埋藏-01)
(x28 / 埋藏-01, arg0, x29 / 宝贝)

Input(Some(Graph((progression :arg1 (住-01 :time (孩子 :domain x19 :quant 1 :mod 小-01) :arg1 (房子 :quant 1 :mod 古老-01) :arg0 我) :arg2 (传说-01 :arg1 (埋藏-01 :location (x20 :mod 这) :arg0 (宝贝 :quant 1)))),ArrayBuffer(Span(12,13,List(0),住,住-01,false), Span(7,8,List(1),孩子,孩子,false), Span(6,7,List(2),小,小-01,false), Span(18,19,List(3),房子,房子,false), Span(16,17,List(4),古老,古老-01,false), Span(1,2,List(5),我,我,false), Span(22,23,List(6),传说,传说-01,false), Span(27,28,List(7),埋藏,埋藏-01,false), Span(31,32,List(8),宝贝,宝贝,false)),Map(2 -> 小-01, 5 -> 我, 8 -> 宝贝, 7 -> 埋藏-01, 1 -> 孩子, 4 -> 古老-01, 6 -> 传说-01, 0 -> 住-01, 3 -> 房子),Map(x28 -> 埋藏-01, x19 -> 我, x27 -> 传说-01, x21 -> 古老-01, x24 -> 小-01, x18 -> 住-01, x23 -> 孩子, x29 -> 宝贝, x20 -> 房子))),[Ljava.lang.String;@653fb8d1,Annotation([Ljava.lang.String;@48581a3b,[Ljava.lang.String;@531ec978,[Ljava.lang.String;@93501be),Annotation([Ljava.lang.String;@11d4d979,[Ljava.lang.String;@195580ba,[Ledu.cmu.lti.nlp.amr.Dependency;@3c25cfe1),Annotation([Ljava.lang.String;@1d3c112a,[Ljava.lang.String;@2a140ce5,[Ljava.lang.String;@1f71194d),Annotation([Ljava.lang.String;@db99785,[Ljava.lang.String;@70716259,[Ledu.cmu.lti.nlp.amr.Entity;@7a083b96))
AMR:
(x18 / 住-01, location, x19 / 我)
(x18 / 住-01, time, x20 / 房子)
(x18 / 住-01, time, x23 / 孩子)
(x20 / 房子, mod, x21 / 古老-01)
(x23 / 孩子, mod, x24 / 小-01)
(x27 / 传说-01, ARG3, x28 / 埋藏-01)
(x28 / 埋藏-01, location, x20 / 房子)
(x28 / 埋藏-01, prep-for, x29 / 宝贝)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 43,458 microseconds
Sentence: 当然 ， 从来 没有 任何 人 能 发现 这个 宝贝 ， 可能 ， 甚至 也 没有 人 去 寻找 过 。

Oracle Span 1:  也 => 也
Oracle Span 2:  人 => 人
Oracle Span 3:  人 => 人
Oracle Span 4:  任何 => 任何
Oracle Span 5:  去 => 去-01
Oracle Span 6:  发现 => 发现-01
Oracle Span 7:  可能 => 可能-01
Oracle Span 8:  宝贝 => 宝贝
Oracle Span 9:  寻找 => 寻找-01
Oracle Span 10:  甚至 => 甚至
Oracle Span 11:  能 => 能-01
Spans:
Span 14-15:  也 => 也
Span 5-6:  人 => 人
Span 16-17:  人 => 人
Span 4-5:  任何 => 任何
Span 17-18:  去 => 去-01
Span 7-8:  发现 => 发现-01
Span 11-12:  可能 => 可能-01
Span 9-10:  宝贝 => 宝贝
Span 18-19:  寻找 => 寻找-01
Span 13-14:  甚至 => 甚至
Span 6-7:  能 => 能-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  也 => 也
Oracle Span 5-6:  人 => 人
Oracle Span 16-17:  人 => 人
Oracle Span 4-5:  任何 => 任何
Oracle Span 17-18:  去 => 去-01
Oracle Span 7-8:  发现 => 发现-01
Oracle Span 11-12:  可能 => 可能-01
Oracle Span 9-10:  宝贝 => 宝贝
Oracle Span 18-19:  寻找 => 寻找-01
Oracle Span 13-14:  甚至 => 甚至
Oracle Span 6-7:  能 => 能-01

Dependencies:
1	当然	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	从来	_	AD	AD	_	4	advmod	_	_
4	没有	_	VE	VE	_	0	root	_	_
5	任何	_	DT	DT	_	6	det	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	能	_	VV	VV	_	8	mmod	_	_
8	发现	_	VV	VV	_	4	dep	_	_
9	这个	_	NN	NN	_	10	nn	_	_
10	宝贝	_	NN	NN	_	8	dobj	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	可能	_	VV	VV	_	8	conj	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	甚至	_	AD	AD	_	16	advmod	_	_
15	也	_	AD	AD	_	16	advmod	_	_
16	没有	_	VE	VE	_	8	conj	_	_
17	人	_	NN	NN	_	16	dobj	_	_
18	去	_	MSP	MSP	_	19	prtmod	_	_
19	寻找	_	VV	VV	_	8	dep	_	_
20	过	_	AS	AS	_	19	asp	_	_
21	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x30 / 能-01, arg0, x31 / 发现-01)
(x31 / 发现-01, arg0, x32 / 人)
(x31 / 发现-01, arg1, x36 / 宝贝)
(x32 / 人, mod, x33 / 任何)
(x41 / 可能-01, arg0, x46 / 去-01)
(x46 / 去-01, arg0, x47 / 人)
(x46 / 去-01, arg1, x50 / 寻找-01)
(x46 / 去-01, manner, x54 / 甚至)

Input(Some(Graph((progression :arg1 (能-01 :arg0 (发现-01 :arg1 (宝贝 :mod 这) :arg0 (人 :arg1-of (有-02 :polarity -) :mod 任何))) :arg2 (可能-01 :arg0 (去-01 :manner 甚至 :arg1 (寻找-01 :arg1 x36 :arg0 x47) :arg0 (人 :arg1-of (有-02 :polarity - :manner 也))))),ArrayBuffer(Span(6,7,List(0),能,能-01,false), Span(7,8,List(1),发现,发现-01,false), Span(9,10,List(2),宝贝,宝贝,false), Span(5,6,List(3),人,人,false), Span(4,5,List(4),任何,任何,false), Span(11,12,List(5),可能,可能-01,false), Span(17,18,List(6),去,去-01,false), Span(13,14,List(7),甚至,甚至,false), Span(18,19,List(8),寻找,寻找-01,false), Span(16,17,List(9),人,人,false), Span(14,15,List(10),也,也,false)),Map(2 -> 宝贝, 5 -> 可能-01, 8 -> 寻找-01, 7 -> 甚至, 1 -> 发现-01, 4 -> 任何, 6 -> 去-01, 9 -> 人, 0 -> 能-01, 10 -> 也, 3 -> 人),Map(x52 -> 也, x46 -> 去-01, x31 -> 发现-01, x30 -> 能-01, x54 -> 甚至, x33 -> 任何, x36 -> 宝贝, x41 -> 可能-01, x50 -> 寻找-01, x32 -> 人, x47 -> 人))),[Ljava.lang.String;@6da4feeb,Annotation([Ljava.lang.String;@2c604965,[Ljava.lang.String;@57f8951a,[Ljava.lang.String;@6c17c0f8),Annotation([Ljava.lang.String;@260e3837,[Ljava.lang.String;@88b76f2,[Ledu.cmu.lti.nlp.amr.Dependency;@1b4872bc),Annotation([Ljava.lang.String;@498a612d,[Ljava.lang.String;@1e1237ab,[Ljava.lang.String;@4dfdfe7d),Annotation([Ljava.lang.String;@1578b8ec,[Ljava.lang.String;@f613067,[Ledu.cmu.lti.nlp.amr.Entity;@c1e14f))
AMR:
(x30 / 能-01, op, x31 / 发现-01)
(x31 / 发现-01, ARG0, x32 / 人)
(x31 / 发现-01, op, x36 / 宝贝)
(x32 / 人, mod, x33 / 任何)
(x41 / 可能-01, direction, x46 / 去-01)
(x46 / 去-01, ARG5, x47 / 人)
(x46 / 去-01, degree, x31 / 发现-01)
(x46 / 去-01, example, x50 / 寻找-01)
(x46 / 去-01, manner, x54 / 甚至)
(x47 / 人, degree, x52 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.1
Decoded in 38,128 microseconds
Sentence: 但是 ， 这个 宝贝 使 整个 房子 着 了 魔 似的 。

Oracle Span 1:  使 => 使-01
Oracle Span 2:  宝贝 => 宝贝
Oracle Span 3:  房子 => 房子
Oracle Span 4:  整个 => 整个
Spans:
Span 4-5:  使 => 使-01
Span 3-4:  宝贝 => 宝贝
Span 6-7:  房子 => 房子
Span 5-6:  整个 => 整个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  使 => 使-01
Oracle Span 3-4:  宝贝 => 宝贝
Oracle Span 6-7:  房子 => 房子
Oracle Span 5-6:  整个 => 整个

Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	这个	_	NN	NN	_	4	nn	_	_
4	宝贝	_	NN	NN	_	5	nsubj	_	_
5	使	_	VV	VV	_	0	root	_	_
6	整个	_	JJ	JJ	_	7	amod	_	_
7	房子	_	NN	NN	_	5	dobj	_	_
8	着	_	VV	VV	_	5	dep	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	魔	_	NN	NN	_	11	nn	_	_
11	似的	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 使-01, arg0, x11 / 宝贝)
(x10 / 使-01, arg1, x13 / 房子)
(x13 / 房子, mod, x14 / 整个)

Input(Some(Graph((contrast :arg2 (resemble :arg1 (使-01 :arg2 (着魔-01 :arg0 x13) :arg1 (房子 :mod 整个) :arg0 (宝贝 :mod 这)))),ArrayBuffer(Span(4,5,List(0),使,使-01,false), Span(6,7,List(1),房子,房子,false), Span(5,6,List(2),整个,整个,false), Span(3,4,List(3),宝贝,宝贝,false)),Map(2 -> 整个, 1 -> 房子, 0 -> 使-01, 3 -> 宝贝),Map(x10 -> 使-01, x13 -> 房子, x11 -> 宝贝, x14 -> 整个))),[Ljava.lang.String;@226de93c,Annotation([Ljava.lang.String;@72028a45,[Ljava.lang.String;@74667e6a,[Ljava.lang.String;@7b222230),Annotation([Ljava.lang.String;@364b1061,[Ljava.lang.String;@50fdf44f,[Ledu.cmu.lti.nlp.amr.Dependency;@172f4514),Annotation([Ljava.lang.String;@7df6d663,[Ljava.lang.String;@13d019a4,[Ljava.lang.String;@2c30c81d),Annotation([Ljava.lang.String;@415a3f6a,[Ljava.lang.String;@a54acec,[Ledu.cmu.lti.nlp.amr.Entity;@19da993b))
AMR:
(x10 / 使-01, ARG6, x13 / 房子)
(x10 / 使-01, manner, x11 / 宝贝)
(x13 / 房子, mod, x14 / 整个)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,531 microseconds
Sentence: 我 家 的 房子 在 它 的 心灵 深处 隐藏 着 一 个 秘密 …

Oracle Span 1:  它 => 它
Oracle Span 2:  心灵 => 心灵
Oracle Span 3:  房子 => 房子
Oracle Span 4:  深处 => 深处
Oracle Span 5:  秘密 => 秘密-01
Oracle Span 6:  隐藏 => 隐藏-01
Spans:
Span 5-6:  它 => 它
Span 7-8:  心灵 => 心灵
Span 3-4:  房子 => 房子
Span 8-9:  深处 => 深处
Span 13-14:  秘密 => 秘密-01
Span 9-10:  隐藏 => 隐藏-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  它 => 它
Oracle Span 7-8:  心灵 => 心灵
Oracle Span 3-4:  房子 => 房子
Oracle Span 8-9:  深处 => 深处
Oracle Span 13-14:  秘密 => 秘密-01
Oracle Span 9-10:  隐藏 => 隐藏-01

Dependencies:
1	我	_	PN	PN	_	2	nn	_	_
2	家	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	房子	_	NN	NN	_	10	nsubj	_	_
5	在	_	P	P	_	10	prep	_	_
6	它	_	PN	PN	_	9	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	心灵	_	NN	NN	_	9	nn	_	_
9	深处	_	NN	NN	_	5	pobj	_	_
10	隐藏	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	15	clf	_	_
14	秘密	_	JJ	JJ	_	15	amod	_	_
15	…	_	NN	NN	_	10	dobj	_	_

Oracle:
(x0 / 隐藏-01, arg0, x2 / 房子)
(x0 / 隐藏-01, arg1, x4 / 秘密-01)
(x0 / 隐藏-01, arg2, x7 / 心灵)
(x7 / 心灵, location, x8 / 深处)
(x7 / 心灵, poss, x9 / 它)

Input(Some(Graph((隐藏-01 :arg2 (心灵 :poss 它 :location 深处) :arg1 (秘密-01 :quant 1) :arg0 (房子 :poss 我家)),ArrayBuffer(Span(9,10,List(0),隐藏,隐藏-01,false), Span(7,8,List(1),心灵,心灵,false), Span(5,6,List(2),它,它,false), Span(8,9,List(3),深处,深处,false), Span(13,14,List(4),秘密,秘密-01,false), Span(3,4,List(5),房子,房子,false)),Map(2 -> 它, 5 -> 房子, 1 -> 心灵, 4 -> 秘密-01, 0 -> 隐藏-01, 3 -> 深处),Map(x2 -> 房子, x8 -> 深处, x7 -> 心灵, x4 -> 秘密-01, x9 -> 它, x0 -> 隐藏-01))),[Ljava.lang.String;@3380ca3d,Annotation([Ljava.lang.String;@23310248,[Ljava.lang.String;@c2df90e,[Ljava.lang.String;@41f3aaf1),Annotation([Ljava.lang.String;@741741d0,[Ljava.lang.String;@5f9f3e58,[Ledu.cmu.lti.nlp.amr.Dependency;@3c19592c),Annotation([Ljava.lang.String;@60e1d87c,[Ljava.lang.String;@2eb60c71,[Ljava.lang.String;@87d9a01),Annotation([Ljava.lang.String;@7e5b621b,[Ljava.lang.String;@10177794,[Ledu.cmu.lti.nlp.amr.Entity;@e5c2463))
AMR:
(x0 / 隐藏-01, location, x8 / 深处)
(x0 / 隐藏-01, year, x4 / 秘密-01)
(x7 / 心灵, location, x8 / 深处)
(x7 / 心灵, mod, x2 / 房子)
(x7 / 心灵, poss, x9 / 它)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,744 microseconds
Sentence: 是 的 ，

Oracle Span 1:  是 => 是-04
Spans:
Span 0-1:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  是 => 是-04

Dependencies:
1	是	_	VC	VC	_	3	rcmod	_	_
2	的	_	DEC	DEC	_	1	cpm	_	_
3	,	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(是-04,ArrayBuffer(Span(0,1,List(0),是,是-04,false)),Map(0 -> 是-04),Map(x4 -> 是-04))),[Ljava.lang.String;@6a950a3b,Annotation([Ljava.lang.String;@4f7be6c8,[Ljava.lang.String;@647b9364,[Ljava.lang.String;@b6bccb4),Annotation([Ljava.lang.String;@49edcb30,[Ljava.lang.String;@59303963,[Ledu.cmu.lti.nlp.amr.Dependency;@61e86192),Annotation([Ljava.lang.String;@34330f77,[Ljava.lang.String;@1320e68a,[Ljava.lang.String;@4b033eac),Annotation([Ljava.lang.String;@69c532af,[Ljava.lang.String;@45a1d057,[Ledu.cmu.lti.nlp.amr.Entity;@51a16adf))
AMR:


Decoded in 1,191 microseconds
Sentence: 我 对 小 王子 说道 ： “

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说道 => 说道-01
Spans:
Span 2-3:  小 => 小-01
Span 0-1:  我 => 我
Span 3-4:  王子 => 王子
Span 4-5:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  说道 => 说道-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	对	_	P	P	_	5	prep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	NN	NN	_	5	dobj	_	_

Oracle:
(x12 / 王子, mod, x13 / 小-01)
(x9 / 说道-01, arg0, x11 / 我)
(x9 / 说道-01, arg2, x12 / 王子)

Input(Some(Graph((说道-01 :arg2 (王子 :mod 小-01) :arg0 我),ArrayBuffer(Span(4,5,List(0),说道,说道-01,false), Span(3,4,List(1),王子,王子,false), Span(2,3,List(2),小,小-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 说道-01, 3 -> 我),Map(x13 -> 小-01, x12 -> 王子, x11 -> 我, x9 -> 说道-01))),[Ljava.lang.String;@385d819,Annotation([Ljava.lang.String;@4315c28c,[Ljava.lang.String;@8fd91d1,[Ljava.lang.String;@52d0f583),Annotation([Ljava.lang.String;@7fb8bad0,[Ljava.lang.String;@12d40609,[Ledu.cmu.lti.nlp.amr.Dependency;@76437e9b),Annotation([Ljava.lang.String;@236ae13d,[Ljava.lang.String;@193eb1ba,[Ljava.lang.String;@2be818da),Annotation([Ljava.lang.String;@46320c9a,[Ljava.lang.String;@32256e68,[Ledu.cmu.lti.nlp.amr.Entity;@5e7abaf7))
AMR:
(x12 / 王子, mod, x13 / 小-01)
(x9 / 说道-01, ARG4, x12 / 王子)
(x9 / 说道-01, decade, x11 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,583 microseconds
Sentence: 无论 是 房子 ， 星星 ， 或是 沙漠 ， 使 它们 美丽 的 东西 是 看 不 见 的 ！ ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  使 => 使-01
Oracle Span 3:  房子 => 房子
Oracle Span 4:  星星 => 星星
Oracle Span 5:  沙漠 => 沙漠
Oracle Span 6:  美丽 => 美丽-01
Spans:
Span 13-14:  东西 => 东西
Span 9-10:  使 => 使-01
Span 2-3:  房子 => 房子
Span 4-5:  星星 => 星星
Span 7-8:  沙漠 => 沙漠
Span 11-12:  美丽 => 美丽-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  东西 => 东西
Oracle Span 9-10:  使 => 使-01
Oracle Span 2-3:  房子 => 房子
Oracle Span 4-5:  星星 => 星星
Oracle Span 7-8:  沙漠 => 沙漠
Oracle Span 11-12:  美丽 => 美丽-01

Dependencies:
1	无论	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	14	rcmod	_	_
3	房子	_	NN	NN	_	2	attr	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	星星	_	VV	VV	_	2	conj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	或是	_	VV	VV	_	2	conj	_	_
8	沙漠	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	2	punct	_	_
10	使	_	VV	VV	_	2	conj	_	_
11	它们	_	PN	PN	_	10	dobj	_	_
12	美丽	_	VA	VA	_	10	dep	_	_
13	的	_	DEC	DEC	_	2	cpm	_	_
14	东西	_	NN	NN	_	15	top	_	_
15	是	_	VC	VC	_	0	root	_	_
16	看	_	VV	VV	_	18	mmod	_	_
17	不	_	AD	AD	_	18	neg	_	_
18	见	_	VV	VV	_	15	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	！	_	PU	PU	_	15	punct	_	_
21	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x32 / 使-01, arg0, x31 / 东西)
(x32 / 使-01, arg2, x38 / 美丽-01)

Input(Some(Graph((say :arg1 (possible :polarity - :arg0 (看见-01 :arg1 (东西 :arg0-of (使-01 :arg2 美丽-01 :arg1 (or :op 房子 :op 星星 :op 沙漠))) :mode expressive))),ArrayBuffer(Span(13,14,List(0),东西,东西,false), Span(9,10,List(1),使,使-01,false), Span(11,12,List(2),美丽,美丽-01,false), Span(2,3,List(3),房子,房子,false), Span(4,5,List(4),星星,星星,false), Span(7,8,List(5),沙漠,沙漠,false)),Map(2 -> 美丽-01, 5 -> 沙漠, 1 -> 使-01, 4 -> 星星, 0 -> 东西, 3 -> 房子),Map(x37 -> 沙漠, x31 -> 东西, x36 -> 星星, x38 -> 美丽-01, x32 -> 使-01, x35 -> 房子))),[Ljava.lang.String;@353f472a,Annotation([Ljava.lang.String;@63bfdbcb,[Ljava.lang.String;@7af0affa,[Ljava.lang.String;@71560f51),Annotation([Ljava.lang.String;@3e1f1046,[Ljava.lang.String;@23e3f5cd,[Ledu.cmu.lti.nlp.amr.Dependency;@5c931134),Annotation([Ljava.lang.String;@1d7eb170,[Ljava.lang.String;@5b251fb9,[Ljava.lang.String;@67d4c48d),Annotation([Ljava.lang.String;@230a73f2,[Ljava.lang.String;@4b97b3d2,[Ledu.cmu.lti.nlp.amr.Entity;@383cb5ce))
AMR:
(x31 / 东西, location, x38 / 美丽-01)
(x32 / 使-01, prep-for, x38 / 美丽-01)
(x32 / 使-01, subevent, x36 / 星星)
(x32 / 使-01, time, x37 / 沙漠)
(x36 / 星星, prep-on-behalf, x35 / 房子)

WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.2
Decoded in 14,294 microseconds
Sentence: “ 我 真 高兴 ， 你 和 我 的 狐狸 的 看法 一样 。 ” 小 王子 说 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  你 => 你
Oracle Span 3:  小 => 小-01
Oracle Span 4:  狐狸 => 狐狸
Oracle Span 5:  王子 => 王子
Oracle Span 6:  看法 => 看法
Oracle Span 7:  说 => 说-01
Oracle Span 8:  高兴 => 高兴-01
Spans:
Span 12-13:  一样 => 一样-01
Span 5-6:  你 => 你
Span 15-16:  小 => 小-01
Span 9-10:  狐狸 => 狐狸
Span 16-17:  王子 => 王子
Span 11-12:  看法 => 看法
Span 17-18:  说 => 说-01
Span 3-4:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  一样 => 一样-01
Oracle Span 5-6:  你 => 你
Oracle Span 15-16:  小 => 小-01
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 16-17:  王子 => 王子
Oracle Span 11-12:  看法 => 看法
Oracle Span 17-18:  说 => 说-01
Oracle Span 3-4:  高兴 => 高兴-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	高兴	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	你	_	PN	PN	_	13	nsubj	_	_
7	和	_	P	P	_	13	prep	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	狐狸	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	看法	_	NN	NN	_	7	pobj	_	_
13	一样	_	VA	VA	_	4	conj	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	”	_	PU	PU	_	4	punct	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	王子	_	NN	NN	_	18	nsubj	_	_
18	说	_	VV	VV	_	4	conj	_	_
19	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 高兴-01)
(x10 / 看法, poss, x11 / 狐狸)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 高兴-01, arg1, x7 / 一样-01)
(x7 / 一样-01, arg1, x10 / 看法)

Input(Some(Graph((说-01 :arg1 (高兴-01 :arg1 (一样-01 :arg1 (看法 :poss (狐狸 :poss x2)) :arg0 (看法 :poss 你)) :degree 很 :arg0 x2) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(17,18,List(0),说,说-01,false), Span(3,4,List(1),高兴,高兴-01,false), Span(12,13,List(2),一样,一样-01,false), Span(11,12,List(3),看法,看法,false), Span(9,10,List(4),狐狸,狐狸,false), Span(5,6,List(5),你,你,false), Span(16,17,List(6),王子,王子,false), Span(15,16,List(7),小,小-01,false)),Map(2 -> 一样-01, 5 -> 你, 7 -> 小-01, 1 -> 高兴-01, 4 -> 狐狸, 6 -> 王子, 0 -> 说-01, 3 -> 看法),Map(x2 -> 王子, x10 -> 看法, x7 -> 一样-01, x4 -> 高兴-01, x3 -> 小-01, x11 -> 狐狸, x9 -> 你, x0 -> 说-01))),[Ljava.lang.String;@798deee8,Annotation([Ljava.lang.String;@96897c8,[Ljava.lang.String;@7f97bc14,[Ljava.lang.String;@22d8f4ed),Annotation([Ljava.lang.String;@3434a4f0,[Ljava.lang.String;@79afa369,[Ledu.cmu.lti.nlp.amr.Dependency;@3b9ac754),Annotation([Ljava.lang.String;@5e002356,[Ljava.lang.String;@4f820f42,[Ljava.lang.String;@4b325930),Annotation([Ljava.lang.String;@267f9765,[Ljava.lang.String;@79ba0a6f,[Ledu.cmu.lti.nlp.amr.Entity;@261de205))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, manner, x7 / 一样-01)
(x10 / 看法, location, x4 / 高兴-01)
(x10 / 看法, poss, x11 / 狐狸)
(x2 / 王子, mod, x3 / 小-01)
(x7 / 一样-01, location, x10 / 看法)
(x9 / 你, location, x4 / 高兴-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 23,993 microseconds
Sentence: 小 王子 睡觉 了 ， 我 就 把 他 抱 在 怀里 ， 又 重新 上路 了 。

Oracle Span 1:  上路 => 上路-01
Oracle Span 2:  又 => 又
Oracle Span 3:  小 => 小-01
Oracle Span 4:  就 => 就
Oracle Span 5:  怀里 => 怀里
Oracle Span 6:  我 => 我
Oracle Span 7:  抱 => 抱-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  睡觉 => 睡觉-01
Oracle Span 10:  重新 => 重新-01
Spans:
Span 15-16:  上路 => 上路-01
Span 13-14:  又 => 又
Span 0-1:  小 => 小-01
Span 6-7:  就 => 就
Span 11-12:  怀里 => 怀里
Span 5-6:  我 => 我
Span 9-10:  抱 => 抱-01
Span 1-2:  王子 => 王子
Span 2-3:  睡觉 => 睡觉-01
Span 14-15:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  上路 => 上路-01
Oracle Span 13-14:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 6-7:  就 => 就
Oracle Span 11-12:  怀里 => 怀里
Oracle Span 5-6:  我 => 我
Oracle Span 9-10:  抱 => 抱-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  睡觉 => 睡觉-01
Oracle Span 14-15:  重新 => 重新-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	睡觉	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	我	_	PN	PN	_	16	nsubj	_	_
7	就	_	AD	AD	_	16	advmod	_	_
8	把	_	BA	BA	_	16	ba	_	_
9	他	_	PN	PN	_	16	nsubj	_	_
10	抱	_	VV	VV	_	16	mmod	_	_
11	在	_	P	P	_	16	prep	_	_
12	怀里	_	NR	NR	_	11	pobj	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	又	_	AD	AD	_	16	advmod	_	_
15	重新	_	AD	AD	_	16	advmod	_	_
16	上路	_	VV	VV	_	3	conj	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 上路-01, manner, x13 / 又)
(x11 / 上路-01, manner, x14 / 重新-01)
(x2 / 睡觉-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 抱-01, arg0, x6 / 我)
(x5 / 抱-01, location, x9 / 怀里)
(x5 / 抱-01, manner, x8 / 就)

Input(Some(Graph((temporal :arg1 (睡觉-01 :arg0 (王子 :mod 小-01)) :arg1 (抱-01 :location (怀里 :poss x6) :manner 就 :arg1 x3 :arg0 我) :arg3 (上路-01 :manner 重新-01 :manner 又 :arg0 x6)),ArrayBuffer(Span(2,3,List(0),睡觉,睡觉-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false), Span(9,10,List(3),抱,抱-01,false), Span(11,12,List(4),怀里,怀里,false), Span(6,7,List(5),就,就,false), Span(5,6,List(6),我,我,false), Span(15,16,List(7),上路,上路-01,false), Span(14,15,List(8),重新,重新-01,false), Span(13,14,List(9),又,又,false)),Map(2 -> 小-01, 5 -> 就, 8 -> 重新-01, 7 -> 上路-01, 1 -> 王子, 4 -> 怀里, 6 -> 我, 9 -> 又, 0 -> 睡觉-01, 3 -> 抱-01),Map(x2 -> 睡觉-01, x5 -> 抱-01, x13 -> 又, x8 -> 就, x4 -> 小-01, x11 -> 上路-01, x3 -> 王子, x6 -> 我, x14 -> 重新-01, x9 -> 怀里))),[Ljava.lang.String;@7f3fc42f,Annotation([Ljava.lang.String;@25a1a012,[Ljava.lang.String;@ce12fbb,[Ljava.lang.String;@4525e9e8),Annotation([Ljava.lang.String;@443a53df,[Ljava.lang.String;@6c33da7a,[Ledu.cmu.lti.nlp.amr.Dependency;@69aabcb0),Annotation([Ljava.lang.String;@32a72c4,[Ljava.lang.String;@15986dd5,[Ljava.lang.String;@678a9516),Annotation([Ljava.lang.String;@5bf9ea6b,[Ljava.lang.String;@b950f82,[Ledu.cmu.lti.nlp.amr.Entity;@5d352de0))
AMR:
(x11 / 上路-01, manner, x13 / 又)
(x11 / 上路-01, manner, x14 / 重新-01)
(x14 / 重新-01, manner, x5 / 抱-01)
(x2 / 睡觉-01, direction, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 抱-01, location, x9 / 怀里)
(x5 / 抱-01, manner, x8 / 就)
(x5 / 抱-01, prep-through, x6 / 我)
(x8 / 就, ARG1, x2 / 睡觉-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.1
Decoded in 29,130 microseconds
Sentence: 我 很 激动 。

Oracle Span 1:  很 => 很
Oracle Span 2:  我 => 我
Oracle Span 3:  激动 => 激动-01
Spans:
Span 1-2:  很 => 很
Span 0-1:  我 => 我
Span 2-3:  激动 => 激动-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  激动 => 激动-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	激动	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 激动-01, arg0, x3 / 我)
(x0 / 激动-01, degree, x2 / 很)

Input(Some(Graph((激动-01 :arg0 我 :degree 很),ArrayBuffer(Span(2,3,List(0),激动,激动-01,false), Span(0,1,List(1),我,我,false), Span(1,2,List(2),很,很,false)),Map(2 -> 很, 1 -> 我, 0 -> 激动-01),Map(x2 -> 很, x3 -> 我, x0 -> 激动-01))),[Ljava.lang.String;@6e243175,Annotation([Ljava.lang.String;@7a1a3468,[Ljava.lang.String;@59d0cdb6,[Ljava.lang.String;@2dfeb141),Annotation([Ljava.lang.String;@629e8212,[Ljava.lang.String;@498c535d,[Ledu.cmu.lti.nlp.amr.Dependency;@16ee9aa7),Annotation([Ljava.lang.String;@4e424582,[Ljava.lang.String;@58dad04a,[Ljava.lang.String;@73e776b7),Annotation([Ljava.lang.String;@113ee1ce,[Ljava.lang.String;@4d0cc83e,[Ledu.cmu.lti.nlp.amr.Entity;@43da0955))
AMR:
(x0 / 激动-01, degree, x2 / 很)
(x0 / 激动-01, op, x3 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 3,835 microseconds
Sentence: 就 好象 抱 着 一 个 脆弱 的 宝贝 。

Oracle Span 1:  宝贝 => 宝贝
Oracle Span 2:  就 => 就
Oracle Span 3:  抱 => 抱-01
Oracle Span 4:  脆弱 => 脆弱-01
Spans:
Span 8-9:  宝贝 => 宝贝
Span 0-1:  就 => 就
Span 2-3:  抱 => 抱-01
Span 6-7:  脆弱 => 脆弱-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  宝贝 => 宝贝
Oracle Span 0-1:  就 => 就
Oracle Span 2-3:  抱 => 抱-01
Oracle Span 6-7:  脆弱 => 脆弱-01

Dependencies:
1	就	_	P	P	_	3	prep	_	_
2	好象	_	NN	NN	_	1	pobj	_	_
3	抱	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	9	clf	_	_
7	脆弱	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	宝贝	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 抱-01, arg1, x3 / 宝贝)
(x3 / 宝贝, mod, x4 / 脆弱-01)

Input(Some(Graph((像-02 :arg1 (抱-01 :arg1 (宝贝 :quant 1 :mod 脆弱-01)) :manner 就),ArrayBuffer(Span(2,3,List(0),抱,抱-01,false), Span(8,9,List(1),宝贝,宝贝,false), Span(6,7,List(2),脆弱,脆弱-01,false), Span(0,1,List(3),就,就,false)),Map(2 -> 脆弱-01, 1 -> 宝贝, 0 -> 抱-01, 3 -> 就),Map(x2 -> 抱-01, x4 -> 脆弱-01, x3 -> 宝贝, x6 -> 就))),[Ljava.lang.String;@bc09d57,Annotation([Ljava.lang.String;@6d963d70,[Ljava.lang.String;@467045c4,[Ljava.lang.String;@55736cfe),Annotation([Ljava.lang.String;@5a566922,[Ljava.lang.String;@6f7a2a5,[Ledu.cmu.lti.nlp.amr.Dependency;@42ed89da),Annotation([Ljava.lang.String;@c3719e5,[Ljava.lang.String;@65c17e38,[Ljava.lang.String;@5e180aaf),Annotation([Ljava.lang.String;@7015ebef,[Ljava.lang.String;@44592c39,[Ledu.cmu.lti.nlp.amr.Entity;@2a87ba34))
AMR:
(x2 / 抱-01, snt1, x3 / 宝贝)
(x3 / 宝贝, mod, x4 / 脆弱-01)
(x6 / 就, prep-by, x2 / 抱-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 7,434 microseconds
Sentence: 就 好象 在 地球 上 没有 比 这 更 脆弱 的 了 。

Oracle Span 1:  地球 => 地球
Oracle Span 2:  就 => 就
Oracle Span 3:  更 => 更
Oracle Span 4:  脆弱 => 脆弱-01
Oracle Span 5:  这 => 这
Spans:
Span 3-4:  地球 => 地球
Span 0-1:  就 => 就
Span 8-9:  更 => 更
Span 9-10:  脆弱 => 脆弱-01
Span 7-8:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  地球 => 地球
Oracle Span 0-1:  就 => 就
Oracle Span 8-9:  更 => 更
Oracle Span 9-10:  脆弱 => 脆弱-01
Oracle Span 7-8:  这 => 这

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	好象	_	VV	VV	_	0	root	_	_
3	在	_	P	P	_	2	prep	_	_
4	地球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	3	plmod	_	_
6	没有	_	VE	VE	_	2	dep	_	_
7	比	_	P	P	_	10	prep	_	_
8	这	_	PN	PN	_	7	pobj	_	_
9	更	_	AD	AD	_	10	advmod	_	_
10	脆弱	_	VA	VA	_	6	dobj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	了	_	AS	AS	_	2	asp	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 脆弱-01, degree, x13 / 更)

Input(Some(Graph((像-01 :arg1 (有-03 :arg1 (thing :mod (脆弱-01 :degree 更) :compared-to 这) :polarity - :location 地球) :manner 就),ArrayBuffer(Span(9,10,List(0),脆弱,脆弱-01,false), Span(8,9,List(1),更,更,false), Span(7,8,List(2),这,这,false), Span(3,4,List(3),地球,地球,false), Span(0,1,List(4),就,就,false)),Map(2 -> 这, 1 -> 更, 4 -> 就, 0 -> 脆弱-01, 3 -> 地球),Map(x10 -> 就, x13 -> 更, x12 -> 脆弱-01, x11 -> 地球, x14 -> 这))),[Ljava.lang.String;@34d480b9,Annotation([Ljava.lang.String;@6b415f5f,[Ljava.lang.String;@66749eea,[Ljava.lang.String;@7135ce0a),Annotation([Ljava.lang.String;@617449dd,[Ljava.lang.String;@2e590b,[Ledu.cmu.lti.nlp.amr.Dependency;@42ef042a),Annotation([Ljava.lang.String;@1df5c7e3,[Ljava.lang.String;@5e0c4f21,[Ljava.lang.String;@2c18a3ea),Annotation([Ljava.lang.String;@166c2c17,[Ljava.lang.String;@25953be6,[Ledu.cmu.lti.nlp.amr.Entity;@19dc0d32))
AMR:
(x11 / 地球, mod, x13 / 更)
(x12 / 脆弱-01, degree, x13 / 更)
(x14 / 这, domain, x10 / 就)
(x14 / 这, manner, x13 / 更)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.1
Decoded in 10,358 microseconds
Sentence: 我 借 着 月光 看 着 这 惨白 的 面额 ， 这 双 紧闭 的 眼睛 ， 这 随 风 飘动 的 绺绺 头发 ， 这时 我 对 自己 说道 ： “ 我 所 看到 的 仅仅 是 外表 。

Oracle Span 1:  仅仅 => 仅仅
Oracle Span 2:  借 => 借-01
Oracle Span 3:  外表 => 外表
Oracle Span 4:  头发 => 头发
Oracle Span 5:  惨白 => 惨白
Oracle Span 6:  我 => 我
Oracle Span 7:  月光 => 月光
Oracle Span 8:  看 => 看-02
Oracle Span 9:  看到 => (thing :arg1-of 看到-01)
Oracle Span 10:  眼睛 => 眼睛
Oracle Span 11:  紧闭 => 紧闭-01
Oracle Span 12:  绺绺 => 绺绺
Oracle Span 13:  自己 => 自己
Oracle Span 14:  说道 => 说道-01
Oracle Span 15:  这 => 这
Oracle Span 16:  这 => 这
Oracle Span 17:  这 => 这
Oracle Span 18:  随 => 随-02
Oracle Span 19:  面额 => 面额
Oracle Span 20:  风 => 风
Oracle Span 21:  飘动 => 飘动-01
Spans:
Span 36-37:  仅仅 => 仅仅
Span 1-2:  借 => 借-01
Span 38-39:  外表 => 外表
Span 23-24:  头发 => 头发
Span 7-8:  惨白 => 惨白
Span 0-1:  我 => 我
Span 3-4:  月光 => 月光
Span 4-5:  看 => 看-02
Span 34-35:  看到 => (thing :arg1-of 看到-01)
Span 15-16:  眼睛 => 眼睛
Span 13-14:  紧闭 => 紧闭-01
Span 22-23:  绺绺 => 绺绺
Span 28-29:  自己 => 自己
Span 29-30:  说道 => 说道-01
Span 6-7:  这 => 这
Span 11-12:  这 => 这
Span 17-18:  这 => 这
Span 18-19:  随 => 随-02
Span 9-10:  面额 => 面额
Span 19-20:  风 => 风
Span 20-21:  飘动 => 飘动-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 最 重要 的 是 看 不 见 的 … ”

Oracle Span 1:  最 => 最
Oracle Span 2:  重要 => 重要-01
Spans:
Span 0-1:  最 => 最
Span 1-2:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  最 => 最
Oracle Span 1-2:  重要 => 重要-01

Dependencies:
1	最	_	AD	AD	_	2	advmod	_	_
2	重要	_	VA	VA	_	4	top	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	是	_	VC	VC	_	0	root	_	_
5	看	_	VV	VV	_	4	ccomp	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	见	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	…	_	NN	NN	_	5	dobj	_	_
10	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 重要-01, degree, x15 / 最)

Input(Some(Graph((say :arg1 (看见-01 :polarity - :arg1 (thing :mod (重要-01 :degree 最)))),ArrayBuffer(Span(1,2,List(0),重要,重要-01,false), Span(0,1,List(1),最,最,false)),Map(1 -> 最, 0 -> 重要-01),Map(x15 -> 最, x14 -> 重要-01))),[Ljava.lang.String;@7c96c85,Annotation([Ljava.lang.String;@b0f2d91,[Ljava.lang.String;@7243145f,[Ljava.lang.String;@15c6027d),Annotation([Ljava.lang.String;@5927f904,[Ljava.lang.String;@2bb62414,[Ledu.cmu.lti.nlp.amr.Dependency;@413d2cd1),Annotation([Ljava.lang.String;@644d1b61,[Ljava.lang.String;@2443135,[Ljava.lang.String;@184823ed),Annotation([Ljava.lang.String;@30bbcf91,[Ljava.lang.String;@3ca14cf4,[Ledu.cmu.lti.nlp.amr.Entity;@1f4f0fcc))
AMR:
(x14 / 重要-01, degree, x15 / 最)

WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 3,142 microseconds
Sentence: 由于 看到 他 稍稍 张开 的 嘴唇 露出 一 丝 微笑 ， 我 又 自言自语 地 说 ： “ 在 这 个 熟睡 了 的 小 王子 身上 ， 使 我 非常 感动 的 ， 是 他 对 他 那 朵 花 的 忠诚 ， 是 在 他 心 中 闪烁 的 那 朵 玫瑰花 的 形象 。 这 朵 玫瑰花 ， 即使 在 小 王子 睡着 了 的 时候 ， 也 象 一 盏 灯 的 火焰 一样 在 他 身上 闪耀 着 光辉 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  使 => 使-01
Oracle Span 3:  光辉 => 光辉
Oracle Span 4:  又 => 又
Oracle Span 5:  嘴唇 => 嘴唇
Oracle Span 6:  小 => 小-01
Oracle Span 7:  张开 => 张开-01
Oracle Span 8:  形象 => 形象-01
Oracle Span 9:  微笑 => 微笑-01
Oracle Span 10:  忠诚 => 忠诚-01
Oracle Span 11:  感动 => 感动-01
Oracle Span 12:  我 => 我
Oracle Span 13:  火焰 => 火焰
Oracle Span 14:  灯 => 灯
Oracle Span 15:  熟睡 => 熟睡-01
Oracle Span 16:  王子 => 王子
Oracle Span 17:  玫瑰花 => 玫瑰花
Oracle Span 18:  看到 => 看到-01
Oracle Span 19:  睡着 => 睡着-01
Oracle Span 20:  稍稍 => 稍稍
Oracle Span 21:  自言自语 => 自言自语
Oracle Span 22:  花 => 花
Oracle Span 23:  说 => 说-01
Oracle Span 24:  身上 => 身上
Oracle Span 25:  身上 => 身上
Oracle Span 26:  这 => 这
Oracle Span 27:  那 => 那
Oracle Span 28:  那 => 那
Oracle Span 29:  闪烁 => 闪烁-01
Oracle Span 30:  闪耀 => 闪耀-01
Oracle Span 31:  露出 => 露出-01
Oracle Span 32:  非常 => 非常-01
Spans:
Span 2-3:  他 => 他
Span 29-30:  使 => 使-01
Span 84-85:  光辉 => 光辉
Span 13-14:  又 => 又
Span 6-7:  嘴唇 => 嘴唇
Span 25-26:  小 => 小-01
Span 4-5:  张开 => 张开-01
Span 56-57:  形象 => 形象-01
Span 10-11:  微笑 => 微笑-01
Span 43-44:  忠诚 => 忠诚-01
Span 32-33:  感动 => 感动-01
Span 12-13:  我 => 我
Span 77-78:  火焰 => 火焰
Span 75-76:  灯 => 灯
Span 22-23:  熟睡 => 熟睡-01
Span 26-27:  王子 => 王子
Span 54-55:  玫瑰花 => 玫瑰花
Span 1-2:  看到 => 看到-01
Span 66-67:  睡着 => 睡着-01
Span 3-4:  稍稍 => 稍稍
Span 14-15:  自言自语 => 自言自语
Span 41-42:  花 => 花
Span 16-17:  说 => 说-01
Span 27-28:  身上 => 身上
Span 81-82:  身上 => 身上
Span 20-21:  这 => 这
Span 39-40:  那 => 那
Span 52-53:  那 => 那
Span 50-51:  闪烁 => 闪烁-01
Span 82-83:  闪耀 => 闪耀-01
Span 7-8:  露出 => 露出-01
Span 31-32:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 29-30:  使 => 使-01
Oracle Span 84-85:  光辉 => 光辉
Oracle Span 13-14:  又 => 又
Oracle Span 6-7:  嘴唇 => 嘴唇
Oracle Span 25-26:  小 => 小-01
Oracle Span 4-5:  张开 => 张开-01
Oracle Span 56-57:  形象 => 形象-01
Oracle Span 10-11:  微笑 => 微笑-01
Oracle Span 43-44:  忠诚 => 忠诚-01
Oracle Span 32-33:  感动 => 感动-01
Oracle Span 12-13:  我 => 我
Oracle Span 77-78:  火焰 => 火焰
Oracle Span 75-76:  灯 => 灯
Oracle Span 22-23:  熟睡 => 熟睡-01
Oracle Span 26-27:  王子 => 王子
Oracle Span 54-55:  玫瑰花 => 玫瑰花
Oracle Span 1-2:  看到 => 看到-01
Oracle Span 66-67:  睡着 => 睡着-01
Oracle Span 3-4:  稍稍 => 稍稍
Oracle Span 14-15:  自言自语 => 自言自语
Oracle Span 41-42:  花 => 花
Oracle Span 16-17:  说 => 说-01
Oracle Span 27-28:  身上 => 身上
Oracle Span 81-82:  身上 => 身上
Oracle Span 20-21:  这 => 这
Oracle Span 39-40:  那 => 那
Oracle Span 52-53:  那 => 那
Oracle Span 50-51:  闪烁 => 闪烁-01
Oracle Span 82-83:  闪耀 => 闪耀-01
Oracle Span 7-8:  露出 => 露出-01
Oracle Span 31-32:  非常 => 非常-01

Dependencies:
1	由于	_	P	P	_	17	prep	_	_
2	看到	_	VV	VV	_	1	pccomp	_	_
3	他	_	PN	PN	_	5	nn	_	_
4	稍稍	_	NN	NN	_	5	nn	_	_
5	张开	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	嘴唇	_	NN	NN	_	2	dobj	_	_
8	露出	_	VV	VV	_	2	dep	_	_
9	一	_	CD	CD	_	11	nummod	_	_
10	丝	_	NN	NN	_	11	nn	_	_
11	微笑	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	17	punct	_	_
13	我	_	PN	PN	_	17	nsubj	_	_
14	又	_	AD	AD	_	17	advmod	_	_
15	自言自语	_	VA	VA	_	17	dvpmod	_	_
16	地	_	DEV	DEV	_	15	dvpm	_	_
17	说	_	VV	VV	_	0	root	_	_
18	：	_	PU	PU	_	17	punct	_	_
19	“	_	PU	PU	_	28	punct	_	_
20	在	_	P	P	_	23	prep	_	_
21	这	_	DT	DT	_	20	pobj	_	_
22	个	_	M	M	_	21	clf	_	_
23	熟睡	_	VV	VV	_	27	rcmod	_	_
24	了	_	AS	AS	_	23	asp	_	_
25	的	_	DEC	DEC	_	23	cpm	_	_
26	小	_	JJ	JJ	_	27	amod	_	_
27	王子	_	NN	NN	_	28	nsubj	_	_
28	身上	_	VV	VV	_	17	ccomp	_	_
29	,	_	PU	PU	_	28	punct	_	_
30	使	_	VV	VV	_	36	nsubj	_	_
31	我	_	PN	PN	_	33	nsubj	_	_
32	非常	_	AD	AD	_	33	advmod	_	_
33	感动	_	VV	VV	_	30	ccomp	_	_
34	的	_	DEC	DEC	_	30	cpm	_	_
35	,	_	PU	PU	_	36	punct	_	_
36	是	_	VC	VC	_	28	ccomp	_	_
37	他	_	PN	PN	_	44	nn	_	_
38	对	_	P	P	_	44	assmod	_	_
39	他	_	PN	PN	_	42	nn	_	_
40	那	_	DT	DT	_	42	det	_	_
41	朵	_	M	M	_	40	clf	_	_
42	花	_	NN	NN	_	38	pobj	_	_
43	的	_	DEG	DEG	_	38	assm	_	_
44	忠诚	_	NN	NN	_	36	attr	_	_
45	,	_	PU	PU	_	36	punct	_	_
46	是	_	VC	VC	_	36	conj	_	_
47	在	_	P	P	_	51	prep	_	_
48	他	_	PN	PN	_	49	nn	_	_
49	心	_	NN	NN	_	50	lobj	_	_
50	中	_	LC	LC	_	47	plmod	_	_
51	闪烁	_	VV	VV	_	55	rcmod	_	_
52	的	_	DEC	DEC	_	51	cpm	_	_
53	那	_	DT	DT	_	55	det	_	_
54	朵	_	M	M	_	53	clf	_	_
55	玫瑰花	_	NN	NN	_	57	assmod	_	_
56	的	_	DEG	DEG	_	55	assm	_	_
57	形象	_	NN	NN	_	46	attr	_	_
58	。	_	PU	PU	_	28	punct	_	_
59	这	_	DT	DT	_	61	det	_	_
60	朵	_	M	M	_	59	clf	_	_
61	玫瑰花	_	NN	NN	_	83	nsubj	_	_
62	,	_	PU	PU	_	83	punct	_	_
63	即使	_	AD	AD	_	64	advmod	_	_
64	在	_	P	P	_	83	prep	_	_
65	小	_	JJ	JJ	_	66	amod	_	_
66	王子	_	NN	NN	_	67	nsubj	_	_
67	睡着	_	VV	VV	_	70	rcmod	_	_
68	了	_	AS	AS	_	67	asp	_	_
69	的	_	DEC	DEC	_	67	cpm	_	_
70	时候	_	NN	NN	_	64	pobj	_	_
71	,	_	PU	PU	_	83	punct	_	_
72	也	_	AD	AD	_	76	advmod	_	_
73	象	_	P	P	_	76	prep	_	_
74	一	_	CD	CD	_	75	nummod	_	_
75	盏	_	NN	NN	_	73	pobj	_	_
76	灯	_	VV	VV	_	78	rcmod	_	_
77	的	_	DEC	DEC	_	76	cpm	_	_
78	火焰	_	NN	NN	_	83	nsubj	_	_
79	一样	_	CD	CD	_	83	nsubj	_	_
80	在	_	P	P	_	83	prep	_	_
81	他	_	PN	PN	_	82	nn	_	_
82	身上	_	NN	NN	_	80	pobj	_	_
83	闪耀	_	VV	VV	_	28	conj	_	_
84	着	_	AS	AS	_	83	asp	_	_
85	光辉	_	NN	NN	_	83	dobj	_	_
86	…	_	PU	PU	_	17	punct	_	_
87	”	_	PU	PU	_	17	punct	_	_

Oracle:
(x10 / 张开-01, arg1, x8 / 嘴唇)
(x10 / 张开-01, manner, x12 / 稍稍)
(x15 / 说-01, arg1, x19 / 使-01)
(x15 / 说-01, manner, x16 / 自言自语)
(x16 / 自言自语, manner, x17 / 又)
(x19 / 使-01, arg2, x43 / 感动-01)
(x26 / 忠诚-01, arg1, x28 / 花)
(x28 / 花, mod, x29 / 那)
(x35 / 形象-01, arg1, x36 / 玫瑰花)
(x35 / 形象-01, mod, x40 / 闪烁-01)
(x36 / 玫瑰花, mod, x37 / 那)
(x4 / 看到-01, arg0, x5 / 我)
(x4 / 看到-01, arg1, x7 / 露出-01)
(x43 / 感动-01, degree, x44 / 非常-01)
(x43 / 感动-01, location, x45 / 身上)
(x46 / 王子, mod, x47 / 小-01)
(x46 / 王子, mod, x48 / 这)
(x46 / 王子, part, x45 / 身上)
(x49 / 熟睡-01, arg0, x46 / 王子)
(x7 / 露出-01, arg0, x8 / 嘴唇)
(x7 / 露出-01, arg1, x13 / 微笑-01)
(x75 / 火焰, poss, x76 / 灯)
(x78 / 闪耀-01, arg1, x79 / 光辉)
(x78 / 闪耀-01, location, x80 / 身上)
(x9 / 他, part, x8 / 嘴唇)

Input(Some(Graph((multi-sentence :snt1 (causation :arg1 (看到-01 :arg1 (露出-01 :arg1 (微笑-01 :quant 1) :arg0 (嘴唇 :arg1-of (张开-01 :manner 稍稍 :arg0 x9) :part-of 他)) :arg0 我) :arg2 (说-01 :arg1 (使-01 :arg2 (感动-01 :location (身上 :part-of (王子 :arg0-of 熟睡-01 :mod 这 :mod 小-01)) :degree 非常-01) :arg1 x5 :arg0 (and :op (忠诚-01 :arg1 (花 :poss x9 :mod 那) :arg0 x9) :op (形象-01 :mod (闪烁-01 :arg0 x36) :arg1 (玫瑰花 :location (心中 :part-of x9) :mod 那)))) :arg0 x5 :manner (自言自语 :manner 又))) :snt2 (concession :arg1 (睡着-01 :arg0 x46) :arg2 (像-01 :arg0 x36 :arg1 (火焰 :poss (灯 :quant 1)) :arg2 (闪耀-01 :location (身上 :poss x9) :arg1 光辉)))),ArrayBuffer(Span(1,2,List(0),看到,看到-01,false), Span(7,8,List(1),露出,露出-01,false), Span(10,11,List(2),微笑,微笑-01,false), Span(6,7,List(3),嘴唇,嘴唇,false), Span(4,5,List(4),张开,张开-01,false), Span(3,4,List(5),稍稍,稍稍,false), Span(2,3,List(6),他,他,false), Span(12,13,List(7),我,我,false), Span(16,17,List(8),说,说-01,false), Span(29,30,List(9),使,使-01,false), Span(32,33,List(10),感动,感动-01,false), Span(27,28,List(11),身上,身上,false), Span(26,27,List(12),王子,王子,false), Span(22,23,List(13),熟睡,熟睡-01,false), Span(20,21,List(14),这,这,false), Span(25,26,List(15),小,小-01,false), Span(31,32,List(16),非常,非常-01,false), Span(43,44,List(17),忠诚,忠诚-01,false), Span(41,42,List(18),花,花,false), Span(39,40,List(19),那,那,false), Span(56,57,List(20),形象,形象-01,false), Span(50,51,List(21),闪烁,闪烁-01,false), Span(54,55,List(22),玫瑰花,玫瑰花,false), Span(52,53,List(23),那,那,false), Span(14,15,List(24),自言自语,自言自语,false), Span(13,14,List(25),又,又,false), Span(66,67,List(26),睡着,睡着-01,false), Span(77,78,List(27),火焰,火焰,false), Span(75,76,List(28),灯,灯,false), Span(82,83,List(29),闪耀,闪耀-01,false), Span(81,82,List(30),身上,身上,false), Span(84,85,List(31),光辉,光辉,false)),Map(30 -> 身上, 2 -> 微笑-01, 5 -> 稍稍, 27 -> 火焰, 12 -> 王子, 8 -> 说-01, 15 -> 小-01, 21 -> 闪烁-01, 18 -> 花, 24 -> 自言自语, 7 -> 我, 17 -> 忠诚-01, 1 -> 露出-01, 23 -> 那, 26 -> 睡着-01, 4 -> 张开-01, 11 -> 身上, 14 -> 这, 29 -> 闪耀-01, 20 -> 形象-01, 28 -> 灯, 6 -> 他, 9 -> 使-01, 0 -> 看到-01, 22 -> 玫瑰花, 16 -> 非常-01, 19 -> 那, 3 -> 嘴唇, 10 -> 感动-01, 31 -> 光辉, 25 -> 又, 13 -> 熟睡-01),Map(x46 -> 王子, x28 -> 花, x76 -> 灯, x40 -> 闪烁-01, x49 -> 熟睡-01, x43 -> 感动-01, x37 -> 那, x16 -> 自言自语, x10 -> 张开-01, x19 -> 使-01, x5 -> 我, x13 -> 微笑-01, x75 -> 火焰, x8 -> 嘴唇, x78 -> 闪耀-01, x45 -> 身上, x12 -> 稍稍, x48 -> 这, x15 -> 说-01, x36 -> 玫瑰花, x7 -> 露出-01, x80 -> 身上, x4 -> 看到-01, x71 -> 睡着-01, x44 -> 非常-01, x26 -> 忠诚-01, x47 -> 小-01, x29 -> 那, x35 -> 形象-01, x79 -> 光辉, x9 -> 他, x17 -> 又))),[Ljava.lang.String;@46c10083,Annotation([Ljava.lang.String;@28e8888d,[Ljava.lang.String;@1e98b788,[Ljava.lang.String;@794eeaf8),Annotation([Ljava.lang.String;@37c5284a,[Ljava.lang.String;@5b8572df,[Ledu.cmu.lti.nlp.amr.Dependency;@7aaad0),Annotation([Ljava.lang.String;@eed890d,[Ljava.lang.String;@10f477e2,[Ljava.lang.String;@6097fca9),Annotation([Ljava.lang.String;@35eee641,[Ljava.lang.String;@5729b410,[Ledu.cmu.lti.nlp.amr.Entity;@64518270))
AMR:
(x10 / 张开-01, manner, x12 / 稍稍)
(x10 / 张开-01, part, x8 / 嘴唇)
(x13 / 微笑-01, century, x5 / 我)
(x15 / 说-01, manner, x13 / 微笑-01)
(x15 / 说-01, manner, x16 / 自言自语)
(x15 / 说-01, polarity, x49 / 熟睡-01)
(x16 / 自言自语, manner, x17 / 又)
(x19 / 使-01, century, x43 / 感动-01)
(x26 / 忠诚-01, degree, x40 / 闪烁-01)
(x26 / 忠诚-01, prep-along-with, x28 / 花)
(x28 / 花, mod, x29 / 那)
(x35 / 形象-01, degree, x71 / 睡着-01)
(x35 / 形象-01, mod, x40 / 闪烁-01)
(x35 / 形象-01, prep-along-with, x36 / 玫瑰花)
(x36 / 玫瑰花, mod, x37 / 那)
(x4 / 看到-01, part, x8 / 嘴唇)
(x43 / 感动-01, degree, x26 / 忠诚-01)
(x43 / 感动-01, degree, x44 / 非常-01)
(x43 / 感动-01, location, x45 / 身上)
(x46 / 王子, mod, x47 / 小-01)
(x46 / 王子, part, x45 / 身上)
(x49 / 熟睡-01, mod, x48 / 这)
(x49 / 熟睡-01, part, x45 / 身上)
(x7 / 露出-01, century, x13 / 微笑-01)
(x7 / 露出-01, manner, x8 / 嘴唇)
(x71 / 睡着-01, degree, x76 / 灯)
(x75 / 火焰, part, x80 / 身上)
(x75 / 火焰, poss, x76 / 灯)
(x78 / 闪耀-01, location, x80 / 身上)
(x78 / 闪耀-01, part, x79 / 光辉)
(x9 / 他, part, x8 / 嘴唇)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.2
WARNING: makeIds can't find span Id: 0.0.1.2.2.1
WARNING: makeIds can't find span Id: 0.0.1.2.2.1.0
WARNING: makeIds can't find span Id: 0.0.1.2.2.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.2.2.1.0.1
WARNING: makeIds can't find span Id: 0.0.1.2.2.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.2.2.0
WARNING: makeIds can't find span Id: 0.0.1.2.0.0
WARNING: makeIds can't find span Id: 0.0.1.2.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.2.0.1
WARNING: makeIds can't find span Id: 0.0.1.2.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.2.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.2.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.2.1
WARNING: makeIds can't find span Id: 0.1.1.2.0
Decoded in 430,119 microseconds
Sentence: 这时 ， 我 就 感觉 到 他 更加 脆弱 。

Oracle Span 1:  他 => 他
Oracle Span 2:  就 => 就
Oracle Span 3:  感觉 => 感觉-01
Oracle Span 4:  我 => 我
Oracle Span 5:  更加 => 更加
Oracle Span 6:  脆弱 => 脆弱-01
Oracle Span 7:  这时 => 这时
Spans:
Span 6-7:  他 => 他
Span 3-4:  就 => 就
Span 4-5:  感觉 => 感觉-01
Span 2-3:  我 => 我
Span 7-8:  更加 => 更加
Span 8-9:  脆弱 => 脆弱-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  他 => 他
Oracle Span 3-4:  就 => 就
Oracle Span 4-5:  感觉 => 感觉-01
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  更加 => 更加
Oracle Span 8-9:  脆弱 => 脆弱-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	感觉	_	VV	VV	_	0	root	_	_
6	到	_	P	P	_	9	prep	_	_
7	他	_	PN	PN	_	6	pobj	_	_
8	更加	_	AD	AD	_	9	advmod	_	_
9	脆弱	_	VA	VA	_	5	ccomp	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 感觉-01, arg0, x2 / 我)
(x0 / 感觉-01, arg1, x4 / 脆弱-01)
(x0 / 感觉-01, manner, x3 / 就)
(x0 / 感觉-01, time, x7 / 这时)
(x4 / 脆弱-01, arg0, x5 / 他)
(x4 / 脆弱-01, degree, x6 / 更加)

Input(Some(Graph((感觉-01 :time 这时 :arg1 (脆弱-01 :degree 更加 :arg0 他) :manner 就 :arg0 我),ArrayBuffer(Span(4,5,List(0),感觉,感觉-01,false), Span(0,1,List(1),这时,这时,false), Span(8,9,List(2),脆弱,脆弱-01,false), Span(7,8,List(3),更加,更加,false), Span(6,7,List(4),他,他,false), Span(3,4,List(5),就,就,false), Span(2,3,List(6),我,我,false)),Map(2 -> 脆弱-01, 5 -> 就, 1 -> 这时, 4 -> 他, 6 -> 我, 0 -> 感觉-01, 3 -> 更加),Map(x2 -> 我, x5 -> 他, x7 -> 这时, x4 -> 脆弱-01, x3 -> 就, x6 -> 更加, x0 -> 感觉-01))),[Ljava.lang.String;@3b7c58e7,Annotation([Ljava.lang.String;@79627d27,[Ljava.lang.String;@6371cf2f,[Ljava.lang.String;@b5b9333),Annotation([Ljava.lang.String;@52b959df,[Ljava.lang.String;@38588dea,[Ledu.cmu.lti.nlp.amr.Dependency;@553d2579),Annotation([Ljava.lang.String;@2a8f6e6,[Ljava.lang.String;@1ac730cd,[Ljava.lang.String;@668cc9a2),Annotation([Ljava.lang.String;@5aa62ee7,[Ljava.lang.String;@1f7cec93,[Ledu.cmu.lti.nlp.amr.Entity;@3c9ef6e9))
AMR:
(x0 / 感觉-01, ARG4, x4 / 脆弱-01)
(x0 / 感觉-01, manner, x2 / 我)
(x0 / 感觉-01, manner, x3 / 就)
(x0 / 感觉-01, time, x7 / 这时)
(x4 / 脆弱-01, degree, x6 / 更加)
(x4 / 脆弱-01, time, x5 / 他)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,535 microseconds
Sentence: 应该 保护 灯焰 ： 一 阵 风 就 可能 把 它 吹灭 …

Oracle Span 1:  保护 => 保护-01
Oracle Span 2:  可能 => 可能-01
Oracle Span 3:  吹灭 => 吹灭
Oracle Span 4:  就 => 就
Oracle Span 5:  应该 => 应该-02
Oracle Span 6:  灯焰 => 灯焰
Oracle Span 7:  风 => 风
Spans:
Span 1-2:  保护 => 保护-01
Span 8-9:  可能 => 可能-01
Span 11-12:  吹灭 => 吹灭
Span 7-8:  就 => 就
Span 0-1:  应该 => 应该-02
Span 2-3:  灯焰 => 灯焰
Span 6-7:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  保护 => 保护-01
Oracle Span 8-9:  可能 => 可能-01
Oracle Span 11-12:  吹灭 => 吹灭
Oracle Span 7-8:  就 => 就
Oracle Span 0-1:  应该 => 应该-02
Oracle Span 2-3:  灯焰 => 灯焰
Oracle Span 6-7:  风 => 风

Dependencies:
1	应该	_	NN	NN	_	3	nn	_	_
2	保护	_	NN	NN	_	3	nn	_	_
3	灯焰	_	NN	NN	_	12	nsubj	_	_
4	：	_	PU	PU	_	12	punct	_	_
5	一	_	CD	CD	_	7	nummod	_	_
6	阵	_	NN	NN	_	7	nn	_	_
7	风	_	NN	NN	_	12	nsubj	_	_
8	就	_	AD	AD	_	12	advmod	_	_
9	可能	_	VV	VV	_	12	mmod	_	_
10	把	_	BA	BA	_	12	ba	_	_
11	它	_	PN	PN	_	12	nsubj	_	_
12	吹灭	_	VV	VV	_	0	root	_	_
13	…	_	NN	NN	_	12	dobj	_	_

Oracle:
(x0 / 应该-02, arg0, x2 / 保护-01)
(x2 / 保护-01, arg1, x3 / 灯焰)
(x2 / 保护-01, cause, x4 / 可能-01)
(x4 / 可能-01, arg0, x6 / 吹灭)
(x4 / 可能-01, manner, x5 / 就)
(x7 / 风, arg0, x6 / 吹灭)

Input(Some(Graph((应该-02 :arg0 (保护-01 :cause (可能-01 :arg0 (吹灭 :arg1 x3 :arg0-of (风 :quant 1)) :manner 就) :arg1 灯焰)),ArrayBuffer(Span(0,1,List(0),应该,应该-02,false), Span(1,2,List(1),保护,保护-01,false), Span(8,9,List(2),可能,可能-01,false), Span(11,12,List(3),吹灭,吹灭,false), Span(6,7,List(4),风,风,false), Span(7,8,List(5),就,就,false), Span(2,3,List(6),灯焰,灯焰,false)),Map(2 -> 可能-01, 5 -> 就, 1 -> 保护-01, 4 -> 风, 6 -> 灯焰, 0 -> 应该-02, 3 -> 吹灭),Map(x2 -> 保护-01, x5 -> 就, x7 -> 风, x4 -> 可能-01, x3 -> 灯焰, x6 -> 吹灭, x0 -> 应该-02))),[Ljava.lang.String;@3cdff901,Annotation([Ljava.lang.String;@57e5396b,[Ljava.lang.String;@2f054f70,[Ljava.lang.String;@6467ddc7),Annotation([Ljava.lang.String;@27b337bb,[Ljava.lang.String;@59636c47,[Ledu.cmu.lti.nlp.amr.Dependency;@5c18d6d4),Annotation([Ljava.lang.String;@6cbb175,[Ljava.lang.String;@38fb50f8,[Ljava.lang.String;@7ab802f4),Annotation([Ljava.lang.String;@608cd501,[Ljava.lang.String;@3b97907c,[Ledu.cmu.lti.nlp.amr.Entity;@59096b66))
AMR:
(x0 / 应该-02, season, x2 / 保护-01)
(x2 / 保护-01, prep-in, x3 / 灯焰)
(x4 / 可能-01, manner, x5 / 就)
(x4 / 可能-01, prep-against, x6 / 吹灭)
(x4 / 可能-01, subset, x7 / 风)
(x7 / 风, location, x3 / 灯焰)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 15,274 microseconds
Sentence: 于是 ， 就 这样 走 着 ， 我 在 黎明 时 发现 了 水井 。

Oracle Span 1:  发现 => 发现-01
Oracle Span 2:  我 => 我
Oracle Span 3:  水井 => 水井
Oracle Span 4:  走 => 走-01
Oracle Span 5:  这样 => 这样
Oracle Span 6:  黎明 => 黎明
Spans:
Span 11-12:  发现 => 发现-01
Span 7-8:  我 => 我
Span 13-14:  水井 => 水井
Span 4-5:  走 => 走-01
Span 3-4:  这样 => 这样
Span 9-10:  黎明 => 黎明

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  发现 => 发现-01
Oracle Span 7-8:  我 => 我
Oracle Span 13-14:  水井 => 水井
Oracle Span 4-5:  走 => 走-01
Oracle Span 3-4:  这样 => 这样
Oracle Span 9-10:  黎明 => 黎明

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	就	_	AD	AD	_	5	advmod	_	_
4	这样	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	我	_	PN	PN	_	12	nsubj	_	_
9	在	_	P	P	_	12	prep	_	_
10	黎明	_	NN	NN	_	11	lobj	_	_
11	时	_	LC	LC	_	9	plmod	_	_
12	发现	_	VV	VV	_	5	dep	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	水井	_	NN	NN	_	12	dobj	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x17 / 走-01, manner, x18 / 这样)
(x20 / 发现-01, arg0, x21 / 我)
(x20 / 发现-01, arg1, x22 / 水井)
(x20 / 发现-01, time, x23 / 黎明)

Input(Some(Graph((and :op (走-01 :arg0 x21 :manner 这样) :op (发现-01 :time 黎明 :arg1 水井 :arg0 我)),ArrayBuffer(Span(4,5,List(0),走,走-01,false), Span(3,4,List(1),这样,这样,false), Span(11,12,List(2),发现,发现-01,false), Span(9,10,List(3),黎明,黎明,false), Span(13,14,List(4),水井,水井,false), Span(7,8,List(5),我,我,false)),Map(2 -> 发现-01, 5 -> 我, 1 -> 这样, 4 -> 水井, 0 -> 走-01, 3 -> 黎明),Map(x22 -> 水井, x21 -> 我, x18 -> 这样, x23 -> 黎明, x20 -> 发现-01, x17 -> 走-01))),[Ljava.lang.String;@631c6d11,Annotation([Ljava.lang.String;@65be88ae,[Ljava.lang.String;@62ade015,[Ljava.lang.String;@70ede57d),Annotation([Ljava.lang.String;@70997a94,[Ljava.lang.String;@61f377d1,[Ledu.cmu.lti.nlp.amr.Dependency;@6c538eb2),Annotation([Ljava.lang.String;@738a5848,[Ljava.lang.String;@487cd177,[Ljava.lang.String;@324b6a56),Annotation([Ljava.lang.String;@421d54b3,[Ljava.lang.String;@63f40ca0,[Ledu.cmu.lti.nlp.amr.Entity;@4dad8ec0))
AMR:
(x17 / 走-01, manner, x18 / 这样)
(x18 / 这样, prep-on-behalf, x20 / 发现-01)
(x20 / 发现-01, op, x22 / 水井)
(x20 / 发现-01, prep-through, x21 / 我)
(x20 / 发现-01, time, x23 / 黎明)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 14,031 microseconds
Sentence: XXV 。

Oracle Span 1:  XXV => XXV
Spans:
Span 0-1:  XXV => XXV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXV => XXV

Dependencies:
1	XXV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXV,ArrayBuffer(Span(0,1,List(0),XXV,XXV,false)),Map(0 -> XXV),Map(x0 -> XXV))),[Ljava.lang.String;@24dd44f9,Annotation([Ljava.lang.String;@ccd341d,[Ljava.lang.String;@4f1fb828,[Ljava.lang.String;@6ee5f485),Annotation([Ljava.lang.String;@20d19f2c,[Ljava.lang.String;@45592af7,[Ledu.cmu.lti.nlp.amr.Dependency;@77b5148c),Annotation([Ljava.lang.String;@36359723,[Ljava.lang.String;@1ab14636,[Ljava.lang.String;@16b3c905),Annotation([Ljava.lang.String;@49fdbe2b,[Ljava.lang.String;@53eba4b8,[Ledu.cmu.lti.nlp.amr.Entity;@437bd805))
AMR:


Decoded in 1,130 microseconds
Sentence: “ 那些 人们 ， 他们 往 快车 里 拥挤 ， 但是 他们 却 不 知道 要 寻找 什么 。

Oracle Span 1:  人们 => 人们
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  快车 => 快车
Oracle Span 4:  拥挤 => 拥挤-01
Oracle Span 5:  知道 => 知道-01
Oracle Span 6:  要 => 要-03
Oracle Span 7:  那些 => 那些
Spans:
Span 2-3:  人们 => 人们
Span 16-17:  寻找 => 寻找-01
Span 6-7:  快车 => 快车
Span 8-9:  拥挤 => 拥挤-01
Span 14-15:  知道 => 知道-01
Span 15-16:  要 => 要-03
Span 1-2:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  人们 => 人们
Oracle Span 16-17:  寻找 => 寻找-01
Oracle Span 6-7:  快车 => 快车
Oracle Span 8-9:  拥挤 => 拥挤-01
Oracle Span 14-15:  知道 => 知道-01
Oracle Span 15-16:  要 => 要-03
Oracle Span 1-2:  那些 => 那些

Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	那些	_	DT	DT	_	3	det	_	_
3	人们	_	NN	NN	_	9	nsubj	_	_
4	,	_	PU	PU	_	9	punct	_	_
5	他们	_	PN	PN	_	9	nsubj	_	_
6	往	_	P	P	_	9	prep	_	_
7	快车	_	NN	NN	_	8	lobj	_	_
8	里	_	LC	LC	_	6	plmod	_	_
9	拥挤	_	VA	VA	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	但是	_	AD	AD	_	15	advmod	_	_
12	他们	_	PN	PN	_	15	nsubj	_	_
13	却	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	知道	_	VV	VV	_	9	conj	_	_
16	要	_	VV	VV	_	17	mmod	_	_
17	寻找	_	VV	VV	_	15	ccomp	_	_
18	什么	_	PN	PN	_	17	dobj	_	_
19	。	_	PU	PU	_	9	punct	_	_
20	他们	_	PN	PN	_	17	xsubj	_	_

Oracle:
(x16 / 拥挤-01, arg0, x17 / 人们)
(x16 / 拥挤-01, direction, x19 / 快车)
(x17 / 人们, mod, x18 / 那些)
(x20 / 知道-01, arg1, x23 / 要-03)
(x23 / 要-03, arg0, x24 / 寻找-01)

Input(Some(Graph((say :arg1 (contrast :arg1 (拥挤-01 :direction 快车 :arg0 (人们 :mod 那些)) :arg2 (知道-01 :arg1 (要-03 :arg0 (寻找-01 :arg1 amr-unknown :arg0 x17)) :arg0 x17 :polarity -))),ArrayBuffer(Span(8,9,List(0),拥挤,拥挤-01,false), Span(6,7,List(1),快车,快车,false), Span(2,3,List(2),人们,人们,false), Span(1,2,List(3),那些,那些,false), Span(14,15,List(4),知道,知道-01,false), Span(15,16,List(5),要,要-03,false), Span(16,17,List(6),寻找,寻找-01,false)),Map(2 -> 人们, 5 -> 要-03, 1 -> 快车, 4 -> 知道-01, 6 -> 寻找-01, 0 -> 拥挤-01, 3 -> 那些),Map(x16 -> 拥挤-01, x19 -> 快车, x24 -> 寻找-01, x18 -> 那些, x23 -> 要-03, x20 -> 知道-01, x17 -> 人们))),[Ljava.lang.String;@4b88ca8e,Annotation([Ljava.lang.String;@6fa02932,[Ljava.lang.String;@61608e1a,[Ljava.lang.String;@7c46c9c3),Annotation([Ljava.lang.String;@7197b07f,[Ljava.lang.String;@1f10fec6,[Ledu.cmu.lti.nlp.amr.Dependency;@7a65a360),Annotation([Ljava.lang.String;@30a7653e,[Ljava.lang.String;@7cff3f1d,[Ljava.lang.String;@6401188a),Annotation([Ljava.lang.String;@33a8c9c9,[Ljava.lang.String;@382dc417,[Ledu.cmu.lti.nlp.amr.Entity;@3daf03d8))
AMR:
(x16 / 拥挤-01, direction, x17 / 人们)
(x16 / 拥挤-01, direction, x19 / 快车)
(x16 / 拥挤-01, unit, x24 / 寻找-01)
(x17 / 人们, mod, x18 / 那些)
(x20 / 知道-01, prep-through, x23 / 要-03)
(x23 / 要-03, prep-through, x24 / 寻找-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
Decoded in 22,566 microseconds
Sentence: 于是 ， 他们 就 忙忙碌碌 ， 来回 转 圈子 … ”

Oracle Span 1:  他们 => 他们
Oracle Span 2:  忙忙碌碌 => 忙忙碌碌
Oracle Span 3:  来回 => 来回-01
Spans:
Span 2-3:  他们 => 他们
Span 4-5:  忙忙碌碌 => 忙忙碌碌
Span 6-7:  来回 => 来回-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他们 => 他们
Oracle Span 4-5:  忙忙碌碌 => 忙忙碌碌
Oracle Span 6-7:  来回 => 来回-01

Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他们	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	忙忙碌碌	_	VV	VV	_	8	conj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	来回	_	NR	NR	_	8	nsubj	_	_
8	转	_	VV	VV	_	0	root	_	_
9	圈子	_	NN	NN	_	10	nn	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x11 / 忙忙碌碌, arg0, x13 / 他们)

Input(Some(Graph((say :arg1 (causation :arg2 (and :op (忙忙碌碌 :arg0 他们) :op (转圈-01 :arg0 x13 :manner (来回-01 :arg0 x13))))),ArrayBuffer(Span(4,5,List(0),忙忙碌碌,忙忙碌碌,false), Span(2,3,List(1),他们,他们,false), Span(6,7,List(2),来回,来回-01,false)),Map(2 -> 来回-01, 1 -> 他们, 0 -> 忙忙碌碌),Map(x13 -> 他们, x11 -> 忙忙碌碌, x20 -> 来回-01))),[Ljava.lang.String;@510689af,Annotation([Ljava.lang.String;@2415e4c7,[Ljava.lang.String;@72ce812e,[Ljava.lang.String;@373afd6c),Annotation([Ljava.lang.String;@521441d5,[Ljava.lang.String;@592ca48c,[Ledu.cmu.lti.nlp.amr.Dependency;@5fed9976),Annotation([Ljava.lang.String;@3fdcde7a,[Ljava.lang.String;@4f363abd,[Ljava.lang.String;@7302ff13),Annotation([Ljava.lang.String;@4017fe2c,[Ljava.lang.String;@1961d75a,[Ledu.cmu.lti.nlp.amr.Entity;@677ce519))
AMR:
(x11 / 忙忙碌碌, prep-on-behalf, x13 / 他们)
(x20 / 来回-01, degree, x11 / 忙忙碌碌)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.1
Decoded in 8,502 microseconds
Sentence: 他 接着 又 说 ： “ 这 没有 必要 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  必要 => 必要-01
Oracle Span 4:  说 => 说-01
Oracle Span 5:  这 => 这
Spans:
Span 0-1:  他 => 他
Span 2-3:  又 => 又
Span 8-9:  必要 => 必要-01
Span 3-4:  说 => 说-01
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 8-9:  必要 => 必要-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 6-7:  这 => 这

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	接着	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	这	_	PN	PN	_	8	top	_	_
8	没有	_	VE	VE	_	4	ccomp	_	_
9	必要	_	JJ	JJ	_	10	amod	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 说-01, arg0, x4 / 他)
(x2 / 说-01, arg1, x9 / 必要-01)
(x2 / 说-01, manner, x3 / 又)
(x9 / 必要-01, arg0, x11 / 这)

Input(Some(Graph((temporal :arg2 (说-01 :arg1 (必要-01 :arg0 这 :polarity -) :arg0 他 :manner 又)),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(8,9,List(1),必要,必要-01,false), Span(6,7,List(2),这,这,false), Span(0,1,List(3),他,他,false), Span(2,3,List(4),又,又,false)),Map(2 -> 这, 1 -> 必要-01, 4 -> 又, 0 -> 说-01, 3 -> 他),Map(x2 -> 说-01, x4 -> 他, x3 -> 又, x11 -> 这, x9 -> 必要-01))),[Ljava.lang.String;@3e26482,Annotation([Ljava.lang.String;@7cfb0c4c,[Ljava.lang.String;@6b37df8e,[Ljava.lang.String;@6b63abdc),Annotation([Ljava.lang.String;@7b351446,[Ljava.lang.String;@5f08fe00,[Ledu.cmu.lti.nlp.amr.Dependency;@a1691c0),Annotation([Ljava.lang.String;@7c5df615,[Ljava.lang.String;@2f995afc,[Ljava.lang.String;@377949f1),Annotation([Ljava.lang.String;@9df564f,[Ljava.lang.String;@1a21f43f,[Ledu.cmu.lti.nlp.amr.Entity;@7f0a133d))
AMR:
(x2 / 说-01, manner, x3 / 又)
(x2 / 说-01, quant, x4 / 他)
(x2 / 说-01, subevent, x9 / 必要-01)
(x9 / 必要-01, domain, x11 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,760 microseconds
Sentence: 我们 终于 找到 的 这 口 井 ， 不同 于 撒哈拉 的 那些 井 。

Oracle Span 1:  井 => 井
Oracle Span 2:  井 => 井
Oracle Span 3:  我们 => 我们
Oracle Span 4:  找到 => 找到-01
Oracle Span 5:  撒哈拉 => 撒哈拉
Oracle Span 6:  终于 => 终于
Oracle Span 7:  这 => 这
Oracle Span 8:  那些 => 那些
NER Entity: (country :name (name :op "撒哈拉"))
Spans:
Span 6-7:  井 => 井
Span 13-14:  井 => 井
Span 0-1:  我们 => 我们
Span 2-3:  找到 => 找到-01
Span 10-11:  撒哈拉 => 撒哈拉
Span 1-2:  终于 => 终于
Span 4-5:  这 => 这
Span 12-13:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  井 => 井
Oracle Span 13-14:  井 => 井
Oracle Span 0-1:  我们 => 我们
Oracle Span 2-3:  找到 => 找到-01
Oracle Span 10-11:  撒哈拉 => 撒哈拉
Oracle Span 1-2:  终于 => 终于
Oracle Span 4-5:  这 => 这
Oracle Span 12-13:  那些 => 那些

Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	终于	_	AD	AD	_	3	advmod	_	_
3	找到	_	VV	VV	_	6	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	这	_	DT	DT	_	6	det	_	_
6	口	_	NN	NN	_	7	nsubj	_	_
7	井	_	VV	VV	_	0	root	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	不同	_	VA	VA	_	7	dep	_	_
10	于	_	P	P	_	9	prep	_	_
11	撒哈拉	_	NN	NN	_	14	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	那些	_	DT	DT	_	14	det	_	_
14	井	_	NN	NN	_	10	pobj	_	_
15	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 井, mod, x5 / 这)
(x6 / 找到-01, arg0, x7 / 我们)
(x6 / 找到-01, arg1, x4 / 井)
(x6 / 找到-01, manner, x8 / 终于)
(x9 / 井, location, x11 / 撒哈拉)
(x9 / 井, mod, x10 / 那些)

Input(Some(Graph((同-01 :polarity - :arg0 (井 :arg1-of (找到-01 :manner 终于 :arg0 我们) :mod 这) :arg1 (井 :location 撒哈拉 :mod 那些)),ArrayBuffer(Span(6,7,List(0),井,井,false), Span(2,3,List(1),找到,找到-01,false), Span(1,2,List(2),终于,终于,false), Span(0,1,List(3),我们,我们,false), Span(4,5,List(4),这,这,false), Span(13,14,List(5),井,井,false), Span(10,11,List(6),撒哈拉,撒哈拉,false), Span(12,13,List(7),那些,那些,false)),Map(2 -> 终于, 5 -> 井, 7 -> 那些, 1 -> 找到-01, 4 -> 这, 6 -> 撒哈拉, 0 -> 井, 3 -> 我们),Map(x10 -> 那些, x5 -> 这, x8 -> 终于, x7 -> 我们, x4 -> 井, x11 -> 撒哈拉, x6 -> 找到-01, x9 -> 井))),[Ljava.lang.String;@241fbec,Annotation([Ljava.lang.String;@715fa8c5,[Ljava.lang.String;@644a3add,[Ljava.lang.String;@4b765e92),Annotation([Ljava.lang.String;@4665428b,[Ljava.lang.String;@4a70d302,[Ledu.cmu.lti.nlp.amr.Dependency;@7fd99443),Annotation([Ljava.lang.String;@622d7e4,[Ljava.lang.String;@6a3fbcb1,[Ljava.lang.String;@261b9a37),Annotation([Ljava.lang.String;@15d3793b,[Ljava.lang.String;@55e1192,[Ledu.cmu.lti.nlp.amr.Entity;@1213ffbc))
AMR:
(x11 / 撒哈拉, part, x6 / 找到-01)
(x4 / 井, mod, x5 / 这)
(x6 / 找到-01, ARG0, x4 / 井)
(x6 / 找到-01, ARG6, x7 / 我们)
(x6 / 找到-01, manner, x8 / 终于)
(x9 / 井, location, x11 / 撒哈拉)
(x9 / 井, mod, x10 / 那些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 22,108 microseconds
Sentence: 撒哈拉 的 井 只 是 沙漠 中 挖 的 洞 。

Oracle Span 1:  井 => 井
Oracle Span 2:  只 => 只
Oracle Span 3:  挖 => 挖-01
Oracle Span 4:  撒哈拉 => 撒哈拉
Oracle Span 5:  沙漠 => 沙漠
Oracle Span 6:  洞 => 洞
NER Entity: (country :name (name :op "撒哈拉"))
Spans:
Span 2-3:  井 => 井
Span 3-4:  只 => 只
Span 7-8:  挖 => 挖-01
Span 0-1:  撒哈拉 => 撒哈拉
Span 5-6:  沙漠 => 沙漠
Span 9-10:  洞 => 洞

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  井 => 井
Oracle Span 3-4:  只 => 只
Oracle Span 7-8:  挖 => 挖-01
Oracle Span 0-1:  撒哈拉 => 撒哈拉
Oracle Span 5-6:  沙漠 => 沙漠
Oracle Span 9-10:  洞 => 洞

Dependencies:
1	撒哈拉	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	井	_	NN	NN	_	5	nsubj	_	_
4	只	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	沙漠	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	8	loc	_	_
8	挖	_	VV	VV	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	洞	_	NN	NN	_	5	attr	_	_
11	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 洞, domain, x2 / 井)
(x0 / 洞, mod, x3 / 只)
(x2 / 井, location, x6 / 撒哈拉)
(x4 / 挖-01, arg1, x0 / 洞)
(x4 / 挖-01, location, x5 / 沙漠)

Input(Some(Graph((洞 :arg1-of (挖-01 :location 沙漠) :mod 只 :domain (井 :location 撒哈拉)),ArrayBuffer(Span(9,10,List(0),洞,洞,false), Span(7,8,List(1),挖,挖-01,false), Span(5,6,List(2),沙漠,沙漠,false), Span(3,4,List(3),只,只,false), Span(2,3,List(4),井,井,false), Span(0,1,List(5),撒哈拉,撒哈拉,false)),Map(2 -> 沙漠, 5 -> 撒哈拉, 1 -> 挖-01, 4 -> 井, 0 -> 洞, 3 -> 只),Map(x2 -> 井, x5 -> 沙漠, x4 -> 挖-01, x3 -> 只, x6 -> 撒哈拉, x0 -> 洞))),[Ljava.lang.String;@68a305eb,Annotation([Ljava.lang.String;@6637a365,[Ljava.lang.String;@1310fcb0,[Ljava.lang.String;@1ef31f71),Annotation([Ljava.lang.String;@6e8fdd19,[Ljava.lang.String;@35787726,[Ledu.cmu.lti.nlp.amr.Dependency;@2199e845),Annotation([Ljava.lang.String;@27976390,[Ljava.lang.String;@37e0056e,[Ljava.lang.String;@415795f3),Annotation([Ljava.lang.String;@2fe2965c,[Ljava.lang.String;@3375ebd3,[Ledu.cmu.lti.nlp.amr.Entity;@40943a6))
AMR:
(x0 / 洞, domain, x2 / 井)
(x0 / 洞, mod, x3 / 只)
(x2 / 井, location, x6 / 撒哈拉)
(x4 / 挖-01, location, x5 / 沙漠)
(x4 / 挖-01, op, x0 / 洞)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,369 microseconds
Sentence: 这 口 井 则 很 象 村子 中 的 井 。

Oracle Span 1:  井 => 井
Oracle Span 2:  井 => 井
Oracle Span 3:  很 => 很
Oracle Span 4:  村子 => 村子
Oracle Span 5:  这 => 这
Spans:
Span 2-3:  井 => 井
Span 9-10:  井 => 井
Span 4-5:  很 => 很
Span 6-7:  村子 => 村子
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  井 => 井
Oracle Span 9-10:  井 => 井
Oracle Span 4-5:  很 => 很
Oracle Span 6-7:  村子 => 村子
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	口	_	NN	NN	_	3	nsubj	_	_
3	井	_	VV	VV	_	0	root	_	_
4	则	_	AD	AD	_	6	advmod	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	象	_	P	P	_	10	assmod	_	_
7	村子	_	NN	NN	_	8	lobj	_	_
8	中	_	LC	LC	_	6	plmod	_	_
9	的	_	DEG	DEG	_	6	assm	_	_
10	井	_	NN	NN	_	3	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 井, mod, x3 / 这)
(x5 / 井, location, x6 / 村子)

Input(Some(Graph((像-01 :arg0 (井 :mod 这) :degree 很 :arg1 (井 :location 村子)),ArrayBuffer(Span(2,3,List(0),井,井,false), Span(0,1,List(1),这,这,false), Span(4,5,List(2),很,很,false), Span(9,10,List(3),井,井,false), Span(6,7,List(4),村子,村子,false)),Map(2 -> 很, 1 -> 这, 4 -> 村子, 0 -> 井, 3 -> 井),Map(x2 -> 井, x5 -> 井, x4 -> 很, x3 -> 这, x6 -> 村子))),[Ljava.lang.String;@798cb6d9,Annotation([Ljava.lang.String;@42679fc2,[Ljava.lang.String;@5e50df2e,[Ljava.lang.String;@100aa331),Annotation([Ljava.lang.String;@c2cf597,[Ljava.lang.String;@724bf25f,[Ledu.cmu.lti.nlp.amr.Dependency;@2abafa97),Annotation([Ljava.lang.String;@6f6cc7da,[Ljava.lang.String;@40717ed,[Ljava.lang.String;@29f3c438),Annotation([Ljava.lang.String;@5460edd3,[Ljava.lang.String;@5dbbb292,[Ledu.cmu.lti.nlp.amr.Entity;@613f7eb7))
AMR:
(x2 / 井, location, x6 / 村子)
(x2 / 井, mod, x3 / 这)
(x4 / 很, age, x5 / 井)
(x5 / 井, location, x6 / 村子)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 9,612 microseconds
Sentence: 可是 ， 那里 又 没有 任何 村庄 ， 我 还 以为 是 在 做梦 呢 。

Oracle Span 1:  以为 => 以为-01
Oracle Span 2:  任何 => 任何
Oracle Span 3:  做梦 => 做梦-01
Oracle Span 4:  我 => 我
Oracle Span 5:  村庄 => 村庄
Oracle Span 6:  还 => 还
Oracle Span 7:  那里 => 那里
Spans:
Span 10-11:  以为 => 以为-01
Span 5-6:  任何 => 任何
Span 13-14:  做梦 => 做梦-01
Span 8-9:  我 => 我
Span 6-7:  村庄 => 村庄
Span 9-10:  还 => 还
Span 2-3:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  以为 => 以为-01
Oracle Span 5-6:  任何 => 任何
Oracle Span 13-14:  做梦 => 做梦-01
Oracle Span 8-9:  我 => 我
Oracle Span 6-7:  村庄 => 村庄
Oracle Span 9-10:  还 => 还
Oracle Span 2-3:  那里 => 那里

Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	那里	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	11	dep	_	_
6	任何	_	DT	DT	_	7	det	_	_
7	村庄	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	11	punct	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	还	_	AD	AD	_	11	advmod	_	_
11	以为	_	VV	VV	_	0	root	_	_
12	是	_	VC	VC	_	11	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	做梦	_	NR	NR	_	13	pobj	_	_
15	呢	_	SP	SP	_	11	dep	_	_
16	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 村庄, mod, x12 / 任何)
(x13 / 以为-01, arg0, x15 / 我)
(x13 / 以为-01, arg1, x16 / 做梦-01)
(x13 / 以为-01, manner, x14 / 还)

Input(Some(Graph((contrast :arg2 (and :op (有-03 :polarity - :arg0 那里 :arg1 (村庄 :mod 任何)) :op (以为-01 :arg1 (做梦-01 :arg0 x15) :arg0 我 :manner 还))),ArrayBuffer(Span(2,3,List(0),那里,那里,false), Span(6,7,List(1),村庄,村庄,false), Span(5,6,List(2),任何,任何,false), Span(10,11,List(3),以为,以为-01,false), Span(13,14,List(4),做梦,做梦-01,false), Span(8,9,List(5),我,我,false), Span(9,10,List(6),还,还,false)),Map(2 -> 任何, 5 -> 我, 1 -> 村庄, 4 -> 做梦-01, 6 -> 还, 0 -> 那里, 3 -> 以为-01),Map(x16 -> 做梦-01, x10 -> 那里, x13 -> 以为-01, x12 -> 任何, x15 -> 我, x11 -> 村庄, x14 -> 还))),[Ljava.lang.String;@565aa4ac,Annotation([Ljava.lang.String;@587c5c1,[Ljava.lang.String;@528c8c1,[Ljava.lang.String;@1f78d415),Annotation([Ljava.lang.String;@1c046c92,[Ljava.lang.String;@27960b1e,[Ledu.cmu.lti.nlp.amr.Dependency;@643ba1ed),Annotation([Ljava.lang.String;@3d3a1903,[Ljava.lang.String;@26582ca,[Ljava.lang.String;@153cb763),Annotation([Ljava.lang.String;@2c3158e0,[Ljava.lang.String;@412ebe64,[Ledu.cmu.lti.nlp.amr.Entity;@6f731759))
AMR:
(x10 / 那里, part, x11 / 村庄)
(x11 / 村庄, location, x15 / 我)
(x11 / 村庄, mod, x12 / 任何)
(x13 / 以为-01, manner, x14 / 还)
(x13 / 以为-01, manner, x16 / 做梦-01)
(x13 / 以为-01, value, x15 / 我)

WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 18,125 microseconds
Sentence: “ 真 怪 ， ”

Oracle Span 1:  怪 => 怪-02
Oracle Span 2:  真 => 真
Spans:
Span 2-3:  怪 => 怪-02
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  怪 => 怪-02
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	真	_	NN	NN	_	3	nsubj	_	_
3	怪	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 怪-02, degree, x6 / 真)

Input(Some(Graph((say :arg1 (怪-02 :degree 真)),ArrayBuffer(Span(2,3,List(0),怪,怪-02,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 怪-02),Map(x5 -> 怪-02, x6 -> 真))),[Ljava.lang.String;@1f84327b,Annotation([Ljava.lang.String;@39549f33,[Ljava.lang.String;@dbddbe3,[Ljava.lang.String;@7a83ccd2),Annotation([Ljava.lang.String;@44aa2e13,[Ljava.lang.String;@599a9cb2,[Ledu.cmu.lti.nlp.amr.Dependency;@3a1b36a1),Annotation([Ljava.lang.String;@5e1a986c,[Ljava.lang.String;@4b55ff0a,[Ljava.lang.String;@46a795de),Annotation([Ljava.lang.String;@256a0d95,[Ljava.lang.String;@2f3928ac,[Ledu.cmu.lti.nlp.amr.Entity;@4bf03fee))
AMR:
(x5 / 怪-02, degree, x6 / 真)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,558 microseconds
Sentence: 我 对 小 王子 说 ：

Oracle Span 1:  小 => 小-01
Oracle Span 2:  我 => 我
Oracle Span 3:  王子 => 王子
Oracle Span 4:  说 => 说-01
Spans:
Span 2-3:  小 => 小-01
Span 0-1:  我 => 我
Span 3-4:  王子 => 王子
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	对	_	P	P	_	5	prep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg3, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph((说-01 :arg3 (王子 :mod 小-01) :arg0 我),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(3,4,List(1),王子,王子,false), Span(2,3,List(2),小,小-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 说-01, 3 -> 我),Map(x2 -> 我, x4 -> 小-01, x3 -> 王子, x0 -> 说-01))),[Ljava.lang.String;@31834a2b,Annotation([Ljava.lang.String;@44f0ff2b,[Ljava.lang.String;@22ead351,[Ljava.lang.String;@68af87ad),Annotation([Ljava.lang.String;@43d65a81,[Ljava.lang.String;@9cfc77,[Ledu.cmu.lti.nlp.amr.Dependency;@7418d76e),Annotation([Ljava.lang.String;@601eb4af,[Ljava.lang.String;@11ede87f,[Ljava.lang.String;@7675c171),Annotation([Ljava.lang.String;@44e4cb76,[Ljava.lang.String;@51cab489,[Ledu.cmu.lti.nlp.amr.Entity;@2f9a10df))
AMR:
(x0 / 说-01, decade, x2 / 我)
(x0 / 说-01, direction, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,865 microseconds
Sentence: “ 一切 都 是 现成 的 ： 辘轳 、 水桶 、 绳子 … ”

Oracle Span 1:  一切 => 一切
Oracle Span 2:  水桶 => 水桶
Oracle Span 3:  现成 => 现成
Oracle Span 4:  绳子 => 绳子
Oracle Span 5:  辘轳 => 辘轳
Oracle Span 6:  都 => 都
Spans:
Span 1-2:  一切 => 一切
Span 9-10:  水桶 => 水桶
Span 4-5:  现成 => 现成
Span 11-12:  绳子 => 绳子
Span 7-8:  辘轳 => 辘轳
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一切 => 一切
Oracle Span 9-10:  水桶 => 水桶
Oracle Span 4-5:  现成 => 现成
Oracle Span 11-12:  绳子 => 绳子
Oracle Span 7-8:  辘轳 => 辘轳
Oracle Span 2-3:  都 => 都

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一切	_	CD	CD	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	现成	_	JJ	JJ	_	4	dep	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	：	_	PU	PU	_	4	punct	_	_
8	辘轳	_	AD	AD	_	13	advmod	_	_
9	、	_	PU	PU	_	8	punct	_	_
10	水桶	_	AD	AD	_	8	conj	_	_
11	、	_	PU	PU	_	8	punct	_	_
12	绳子	_	AD	AD	_	8	conj	_	_
13	…	_	VV	VV	_	4	conj	_	_
14	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x15 / 现成, domain, x17 / 一切)
(x15 / 现成, manner, x16 / 都)

Input(Some(Graph((say :arg1 (现成 :domain (一切 :arg0-of (mean :arg1 (and :op 辘轳 :op 水桶 :op 绳子))) :manner 都)),ArrayBuffer(Span(4,5,List(0),现成,现成,false), Span(1,2,List(1),一切,一切,false), Span(7,8,List(2),辘轳,辘轳,false), Span(9,10,List(3),水桶,水桶,false), Span(11,12,List(4),绳子,绳子,false), Span(2,3,List(5),都,都,false)),Map(2 -> 辘轳, 5 -> 都, 1 -> 一切, 4 -> 绳子, 0 -> 现成, 3 -> 水桶),Map(x16 -> 都, x22 -> 绳子, x21 -> 水桶, x15 -> 现成, x20 -> 辘轳, x17 -> 一切))),[Ljava.lang.String;@773c2214,Annotation([Ljava.lang.String;@15e1f8fe,[Ljava.lang.String;@110b7837,[Ljava.lang.String;@6ee88e21),Annotation([Ljava.lang.String;@78d23d6a,[Ljava.lang.String;@626e0c86,[Ledu.cmu.lti.nlp.amr.Dependency;@28ee0a3c),Annotation([Ljava.lang.String;@2dd1086,[Ljava.lang.String;@6b8d54da,[Ljava.lang.String;@79957f11),Annotation([Ljava.lang.String;@217235f5,[Ljava.lang.String;@4b41587d,[Ledu.cmu.lti.nlp.amr.Entity;@4aebee4b))
AMR:
(x15 / 现成, domain, x17 / 一切)
(x15 / 现成, manner, x16 / 都)
(x20 / 辘轳, location, x15 / 现成)
(x20 / 辘轳, location, x21 / 水桶)
(x22 / 绳子, degree, x21 / 水桶)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0.0.2
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,064 microseconds
Sentence: 他 笑 了 ， 拿 着 绳子 ， 转动 着 辘轳 。

Oracle Span 1:  他 => 他
Oracle Span 2:  拿 => 拿-03
Oracle Span 3:  笑 => 笑-01
Oracle Span 4:  绳子 => 绳子
Oracle Span 5:  转动 => 转动-01
Oracle Span 6:  辘轳 => 辘轳
Spans:
Span 0-1:  他 => 他
Span 4-5:  拿 => 拿-03
Span 1-2:  笑 => 笑-01
Span 6-7:  绳子 => 绳子
Span 8-9:  转动 => 转动-01
Span 10-11:  辘轳 => 辘轳

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  拿 => 拿-03
Oracle Span 1-2:  笑 => 笑-01
Oracle Span 6-7:  绳子 => 绳子
Oracle Span 8-9:  转动 => 转动-01
Oracle Span 10-11:  辘轳 => 辘轳

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	笑	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	拿	_	VV	VV	_	2	conj	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	绳子	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	转动	_	VV	VV	_	2	conj	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	辘轳	_	NN	NN	_	9	dobj	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 笑-01, arg0, x13 / 他)
(x14 / 拿-03, arg1, x16 / 绳子)
(x17 / 转动-01, arg1, x19 / 辘轳)

Input(Some(Graph((temporal :arg1 (笑-01 :arg0 他) :arg2 (拿-03 :arg1 绳子 :arg0 x13) :arg3 (转动-01 :arg1 辘轳 :arg0 x13)),ArrayBuffer(Span(1,2,List(0),笑,笑-01,false), Span(0,1,List(1),他,他,false), Span(4,5,List(2),拿,拿-03,false), Span(6,7,List(3),绳子,绳子,false), Span(8,9,List(4),转动,转动-01,false), Span(10,11,List(5),辘轳,辘轳,false)),Map(2 -> 拿-03, 5 -> 辘轳, 1 -> 他, 4 -> 转动-01, 0 -> 笑-01, 3 -> 绳子),Map(x16 -> 绳子, x19 -> 辘轳, x13 -> 他, x12 -> 笑-01, x14 -> 拿-03, x17 -> 转动-01))),[Ljava.lang.String;@18d47df0,Annotation([Ljava.lang.String;@28393e82,[Ljava.lang.String;@697a0948,[Ljava.lang.String;@7cf63b9a),Annotation([Ljava.lang.String;@4776e209,[Ljava.lang.String;@265a094b,[Ledu.cmu.lti.nlp.amr.Dependency;@1f536481),Annotation([Ljava.lang.String;@5234b61a,[Ljava.lang.String;@22a260ff,[Ljava.lang.String;@54c425b1),Annotation([Ljava.lang.String;@50b734c4,[Ljava.lang.String;@2744dcae,[Ledu.cmu.lti.nlp.amr.Entity;@16d0e521))
AMR:
(x12 / 笑-01, prep-from, x13 / 他)
(x12 / 笑-01, unit, x17 / 转动-01)
(x14 / 拿-03, ARG0, x13 / 他)
(x14 / 拿-03, mod, x16 / 绳子)
(x17 / 转动-01, mod, x19 / 辘轳)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
Decoded in 12,564 microseconds
Sentence: 辘轳 就 象 是 一 个 长期 没有 风 来 吹动 的 旧 风标 一样 ， 吱吱 作响 。

Oracle Span 1:  作响 => 作响-01
Oracle Span 2:  吱吱 => 吱吱
Oracle Span 3:  吹动 => 吹动-01
Oracle Span 4:  旧 => 旧-01
Oracle Span 5:  辘轳 => 辘轳
Oracle Span 6:  长期 => 长期
Oracle Span 7:  风 => 风
Oracle Span 8:  风标 => 风标
Spans:
Span 17-18:  作响 => 作响-01
Span 16-17:  吱吱 => 吱吱
Span 10-11:  吹动 => 吹动-01
Span 12-13:  旧 => 旧-01
Span 0-1:  辘轳 => 辘轳
Span 6-7:  长期 => 长期
Span 8-9:  风 => 风
Span 13-14:  风标 => 风标

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  作响 => 作响-01
Oracle Span 16-17:  吱吱 => 吱吱
Oracle Span 10-11:  吹动 => 吹动-01
Oracle Span 12-13:  旧 => 旧-01
Oracle Span 0-1:  辘轳 => 辘轳
Oracle Span 6-7:  长期 => 长期
Oracle Span 8-9:  风 => 风
Oracle Span 13-14:  风标 => 风标

Dependencies:
1	辘轳	_	NN	NN	_	15	nsubj	_	_
2	就	_	AD	AD	_	15	advmod	_	_
3	象	_	P	P	_	15	prep	_	_
4	是	_	VC	VC	_	14	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	4	attr	_	_
7	长期	_	AD	AD	_	8	advmod	_	_
8	没有	_	VE	VE	_	4	conj	_	_
9	风	_	NN	NN	_	8	dobj	_	_
10	来	_	MSP	MSP	_	11	prtmod	_	_
11	吹动	_	VV	VV	_	4	dep	_	_
12	的	_	DEC	DEC	_	4	cpm	_	_
13	旧	_	JJ	JJ	_	14	amod	_	_
14	风标	_	NN	NN	_	3	pobj	_	_
15	一样	_	VA	VA	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	吱吱	_	VV	VV	_	15	dep	_	_
18	作响	_	NN	NN	_	17	dobj	_	_
19	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x18 / 作响-01, arg1, x19 / 吱吱)
(x4 / 风标, mod, x5 / 旧-01)
(x7 / 吹动-01, arg0, x8 / 风)
(x7 / 吹动-01, arg1, x4 / 风标)

Input(Some(Graph((像-01 :arg0 辘轳 :arg1 (风标 :arg1-of (吹动-01 :arg0 (风 :arg1-of (有-04 :polarity - :time 长期))) :quant 1 :mod 旧-01) :arg2 (作响-01 :arg1 吱吱)),ArrayBuffer(Span(0,1,List(0),辘轳,辘轳,false), Span(13,14,List(1),风标,风标,false), Span(10,11,List(2),吹动,吹动-01,false), Span(8,9,List(3),风,风,false), Span(6,7,List(4),长期,长期,false), Span(12,13,List(5),旧,旧-01,false), Span(17,18,List(6),作响,作响-01,false), Span(16,17,List(7),吱吱,吱吱,false)),Map(2 -> 吹动-01, 5 -> 旧-01, 7 -> 吱吱, 1 -> 风标, 4 -> 长期, 6 -> 作响-01, 0 -> 辘轳, 3 -> 风),Map(x19 -> 吱吱, x2 -> 辘轳, x5 -> 旧-01, x8 -> 风, x7 -> 吹动-01, x18 -> 作响-01, x4 -> 风标, x17 -> 长期))),[Ljava.lang.String;@634ca3e7,Annotation([Ljava.lang.String;@ab4aa5e,[Ljava.lang.String;@b14b60a,[Ljava.lang.String;@1a7cb3a4),Annotation([Ljava.lang.String;@1c297897,[Ljava.lang.String;@33e0c716,[Ledu.cmu.lti.nlp.amr.Dependency;@1d6a8386),Annotation([Ljava.lang.String;@6274f21c,[Ljava.lang.String;@35cec305,[Ljava.lang.String;@237add),Annotation([Ljava.lang.String;@491cafec,[Ljava.lang.String;@cbd40c1,[Ledu.cmu.lti.nlp.amr.Entity;@4fa86cb8))
AMR:
(x18 / 作响-01, location, x19 / 吱吱)
(x18 / 作响-01, time, x4 / 风标)
(x2 / 辘轳, part, x17 / 长期)
(x4 / 风标, mod, x5 / 旧-01)
(x7 / 吹动-01, ARG0, x4 / 风标)
(x7 / 吹动-01, direction, x8 / 风)
(x7 / 吹动-01, time, x17 / 长期)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.0.0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 24,895 microseconds
Sentence: “ 你 听 ， ” 小 王子 说 ：

Oracle Span 1:  你 => 你
Oracle Span 2:  听 => 听-01
Oracle Span 3:  小 => 小
Oracle Span 4:  王子 => 王子
Oracle Span 5:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  听 => 听-01
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  听 => 听-01
Oracle Span 5-6:  小 => 小
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	听	_	VV	VV	_	8	dep	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	”	_	PU	PU	_	8	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 听-01)
(x2 / 王子, mod, x3 / 小)
(x4 / 听-01, arg0, x5 / 你)

Input(Some(Graph((说-01 :arg1 (听-01 :arg0 你) :arg0 (王子 :mod 小)),ArrayBuffer(Span(7,8,List(0),说,说-01,false), Span(2,3,List(1),听,听-01,false), Span(1,2,List(2),你,你,false), Span(6,7,List(3),王子,王子,false), Span(5,6,List(4),小,小,false)),Map(2 -> 你, 1 -> 听-01, 4 -> 小, 0 -> 说-01, 3 -> 王子),Map(x2 -> 王子, x5 -> 你, x4 -> 听-01, x3 -> 小, x0 -> 说-01))),[Ljava.lang.String;@54c60202,Annotation([Ljava.lang.String;@7889b4b9,[Ljava.lang.String;@1e545821,[Ljava.lang.String;@12952aff),Annotation([Ljava.lang.String;@76a7fcbd,[Ljava.lang.String;@433ea2ac,[Ledu.cmu.lti.nlp.amr.Dependency;@7f977fba),Annotation([Ljava.lang.String;@446e7065,[Ljava.lang.String;@d653e41,[Ljava.lang.String;@3b78c683),Annotation([Ljava.lang.String;@7f5614f9,[Ljava.lang.String;@480cbe2e,[Ledu.cmu.lti.nlp.amr.Entity;@6c3f1658))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x2 / 王子, mod, x3 / 小)
(x3 / 小, location, x4 / 听-01)
(x4 / 听-01, location, x5 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,258 microseconds
Sentence: “ 我们 唤醒 了 这 口 井 ， 它 现在 唱 起 歌 来 了 … ”

Oracle Span 1:  井 => 井
Oracle Span 2:  唤醒 => 唤醒-01
Oracle Span 3:  我们 => 我们
Oracle Span 4:  现在 => 现在
Oracle Span 5:  这 => 这
Spans:
Span 6-7:  井 => 井
Span 2-3:  唤醒 => 唤醒-01
Span 1-2:  我们 => 我们
Span 9-10:  现在 => 现在
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  井 => 井
Oracle Span 2-3:  唤醒 => 唤醒-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 9-10:  现在 => 现在
Oracle Span 4-5:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	nsubj	_	_
3	唤醒	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	这	_	DT	DT	_	7	det	_	_
6	口	_	M	M	_	5	clf	_	_
7	井	_	NN	NN	_	3	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	它	_	PN	PN	_	13	nn	_	_
10	现在	_	NT	NT	_	12	dep	_	_
11	唱	_	CD	CD	_	12	nummod	_	_
12	起	_	M	M	_	13	clf	_	_
13	歌	_	NN	NN	_	14	dep	_	_
14	来	_	VV	VV	_	3	conj	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	…	_	NN	NN	_	14	dobj	_	_
17	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 唤醒-01, arg0, x13 / 我们)
(x12 / 唤醒-01, arg1, x14 / 井)
(x14 / 井, mod, x15 / 这)

Input(Some(Graph((say :arg1 (and :op (唤醒-01 :arg1 (井 :mod 这) :arg0 我们) :op (唱歌-01 :arg0 x14 :time 现在))),ArrayBuffer(Span(2,3,List(0),唤醒,唤醒-01,false), Span(6,7,List(1),井,井,false), Span(4,5,List(2),这,这,false), Span(1,2,List(3),我们,我们,false), Span(9,10,List(4),现在,现在,false)),Map(2 -> 这, 1 -> 井, 4 -> 现在, 0 -> 唤醒-01, 3 -> 我们),Map(x13 -> 我们, x12 -> 唤醒-01, x15 -> 这, x18 -> 现在, x14 -> 井))),[Ljava.lang.String;@110e9982,Annotation([Ljava.lang.String;@5eb0a686,[Ljava.lang.String;@73608eb0,[Ljava.lang.String;@67f9cb52),Annotation([Ljava.lang.String;@2de9ca6,[Ljava.lang.String;@59018eed,[Ledu.cmu.lti.nlp.amr.Dependency;@2ee39e73),Annotation([Ljava.lang.String;@76973a6,[Ljava.lang.String;@71a4f441,[Ljava.lang.String;@24876a7e),Annotation([Ljava.lang.String;@1625789b,[Ljava.lang.String;@5a1dddba,[Ledu.cmu.lti.nlp.amr.Entity;@c4d2c44))
AMR:
(x12 / 唤醒-01, direction, x13 / 我们)
(x12 / 唤醒-01, polite, x14 / 井)
(x14 / 井, location, x18 / 现在)
(x14 / 井, mod, x15 / 这)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 11,342 microseconds
Sentence: 我 不 愿 让 他 费劲 。

Oracle Span 1:  他 => 他
Oracle Span 2:  愿 => 愿-01
Oracle Span 3:  我 => 我
Oracle Span 4:  让 => 让-02
Oracle Span 5:  费劲 => 费劲-01
Spans:
Span 4-5:  他 => 他
Span 2-3:  愿 => 愿-01
Span 0-1:  我 => 我
Span 3-4:  让 => 让-02
Span 5-6:  费劲 => 费劲-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 2-3:  愿 => 愿-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  让 => 让-02
Oracle Span 5-6:  费劲 => 费劲-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	愿	_	VV	VV	_	0	root	_	_
4	让	_	VV	VV	_	3	ccomp	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	费劲	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 愿-01, arg0, x3 / 我)
(x0 / 愿-01, arg1, x4 / 让-02)
(x4 / 让-02, arg1, x6 / 他)
(x4 / 让-02, arg2, x7 / 费劲-01)

Input(Some(Graph((愿-01 :arg1 (让-02 :arg2 费劲-01 :arg1 他 :arg0 x3) :arg0 我 :polarity -),ArrayBuffer(Span(2,3,List(0),愿,愿-01,false), Span(3,4,List(1),让,让-02,false), Span(5,6,List(2),费劲,费劲-01,false), Span(4,5,List(3),他,他,false), Span(0,1,List(4),我,我,false)),Map(2 -> 费劲-01, 1 -> 让-02, 4 -> 我, 0 -> 愿-01, 3 -> 他),Map(x7 -> 费劲-01, x4 -> 让-02, x3 -> 我, x6 -> 他, x0 -> 愿-01))),[Ljava.lang.String;@13866329,Annotation([Ljava.lang.String;@2eda2062,[Ljava.lang.String;@1a9ec80e,[Ljava.lang.String;@7fd4e815),Annotation([Ljava.lang.String;@5f6b53ed,[Ljava.lang.String;@20cdb152,[Ledu.cmu.lti.nlp.amr.Dependency;@4cffd3fd),Annotation([Ljava.lang.String;@14b31e37,[Ljava.lang.String;@1142d377,[Ljava.lang.String;@5c48b72c),Annotation([Ljava.lang.String;@6e1ae763,[Ljava.lang.String;@62d40e31,[Ledu.cmu.lti.nlp.amr.Entity;@650aa077))
AMR:
(x0 / 愿-01, beneficiary, x3 / 我)
(x0 / 愿-01, prep-along-with, x4 / 让-02)
(x4 / 让-02, prep-on-behalf, x7 / 费劲-01)
(x4 / 让-02, purpose, x6 / 他)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
Decoded in 10,870 microseconds
Sentence: “ 让 我 来 干 吧 。

Oracle Span 1:  干 => 干-01
Oracle Span 2:  我 => 我
Oracle Span 3:  来 => 来-05
Oracle Span 4:  让 => 让-02
Spans:
Span 4-5:  干 => 干-01
Span 2-3:  我 => 我
Span 3-4:  来 => 来-05
Span 1-2:  让 => 让-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  干 => 干-01
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  来 => 来-05
Oracle Span 1-2:  让 => 让-02

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	让	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	干	_	VV	VV	_	2	dep	_	_
6	吧	_	SP	SP	_	2	dep	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 让-02, arg1, x11 / 我)
(x10 / 让-02, arg2, x12 / 来-05)
(x12 / 来-05, arg1, x14 / 干-01)

Input(Some(Graph((say :arg1 (让-02 :arg2 (来-05 :arg1 干-01 :arg0 x11) :arg1 我)),ArrayBuffer(Span(1,2,List(0),让,让-02,false), Span(3,4,List(1),来,来-05,false), Span(4,5,List(2),干,干-01,false), Span(2,3,List(3),我,我,false)),Map(2 -> 干-01, 1 -> 来-05, 0 -> 让-02, 3 -> 我),Map(x10 -> 让-02, x12 -> 来-05, x11 -> 我, x14 -> 干-01))),[Ljava.lang.String;@7ce29a2d,Annotation([Ljava.lang.String;@457a5b2d,[Ljava.lang.String;@79d7035,[Ljava.lang.String;@372461a9),Annotation([Ljava.lang.String;@5fffb692,[Ljava.lang.String;@48cb2d73,[Ledu.cmu.lti.nlp.amr.Dependency;@243bf087),Annotation([Ljava.lang.String;@3086f480,[Ljava.lang.String;@126f8f24,[Ljava.lang.String;@35e98af),Annotation([Ljava.lang.String;@781aff8b,[Ljava.lang.String;@7fbf26fc,[Ledu.cmu.lti.nlp.amr.Entity;@11c78080))
AMR:
(x12 / 来-05, example, x11 / 我)
(x12 / 来-05, example, x14 / 干-01)
(x12 / 来-05, purpose, x10 / 让-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,035 microseconds
Sentence: 我 对 他 说 ：

Oracle Span 1:  他 => 他
Oracle Span 2:  我 => 我
Oracle Span 3:  说 => 说-01
Spans:
Span 2-3:  他 => 他
Span 0-1:  我 => 我
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg3, x3 / 他)

Input(Some(Graph((说-01 :arg3 他 :arg0 我),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(2,3,List(1),他,他,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 他, 0 -> 说-01),Map(x2 -> 我, x3 -> 他, x0 -> 说-01))),[Ljava.lang.String;@662be9f7,Annotation([Ljava.lang.String;@4962b41e,[Ljava.lang.String;@4fecf308,[Ljava.lang.String;@6282b9f5),Annotation([Ljava.lang.String;@5b5f9003,[Ljava.lang.String;@7c11d32,[Ledu.cmu.lti.nlp.amr.Dependency;@2f9dda71),Annotation([Ljava.lang.String;@58278366,[Ljava.lang.String;@7f5fcfe9,[Ljava.lang.String;@707865bd),Annotation([Ljava.lang.String;@31f77791,[Ljava.lang.String;@552fee7a,[Ledu.cmu.lti.nlp.amr.Entity;@548e43b1))
AMR:
(x0 / 说-01, decade, x3 / 他)
(x0 / 说-01, snt3, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,212 microseconds
Sentence: 这 活 对 你 太 重 了 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  太 => 太
Oracle Span 3:  活 => 活
Oracle Span 4:  这 => 这
Oracle Span 5:  重 => 重-02
Spans:
Span 3-4:  你 => 你
Span 4-5:  太 => 太
Span 1-2:  活 => 活
Span 0-1:  这 => 这
Span 5-6:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  你 => 你
Oracle Span 4-5:  太 => 太
Oracle Span 1-2:  活 => 活
Oracle Span 0-1:  这 => 这
Oracle Span 5-6:  重 => 重-02

Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	活	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	6	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	太	_	AD	AD	_	6	advmod	_	_
6	重	_	VV	VV	_	2	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	这	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x12 / 重-02, degree, x13 / 太)
(x9 / 活, mod, x10 / 这)

Input(Some(Graph((say :arg1 (laishuo :arg0 (活 :mod 这) :arg1 你 :arg2 (重-02 :degree 太))),ArrayBuffer(Span(1,2,List(0),活,活,false), Span(0,1,List(1),这,这,false), Span(3,4,List(2),你,你,false), Span(5,6,List(3),重,重-02,false), Span(4,5,List(4),太,太,false)),Map(2 -> 你, 1 -> 这, 4 -> 太, 0 -> 活, 3 -> 重-02),Map(x10 -> 这, x13 -> 太, x12 -> 重-02, x11 -> 你, x9 -> 活))),[Ljava.lang.String;@67688110,Annotation([Ljava.lang.String;@6d293993,[Ljava.lang.String;@475f5672,[Ljava.lang.String;@616a06e3),Annotation([Ljava.lang.String;@42297bdf,[Ljava.lang.String;@66e827a8,[Ledu.cmu.lti.nlp.amr.Dependency;@5bb911c1),Annotation([Ljava.lang.String;@6a55594b,[Ljava.lang.String;@632b305d,[Ljava.lang.String;@44598ef7),Annotation([Ljava.lang.String;@57fdb8a4,[Ljava.lang.String;@17222c11,[Ledu.cmu.lti.nlp.amr.Entity;@2db15f70))
AMR:
(x12 / 重-02, degree, x13 / 太)
(x9 / 活, mod, x10 / 这)
(x9 / 活, source, x11 / 你)
(x9 / 活, source, x12 / 重-02)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
Decoded in 9,562 microseconds
Sentence: 我 慢慢 地 把 水桶 提到 井栏 上 。 我 把 它 稳稳 地 放在 那里 。

Oracle Span 1:  井栏 => 井栏
Oracle Span 2:  慢慢 => 慢慢-01
Oracle Span 3:  我 => 我
Oracle Span 4:  提到 => 提到-02
Oracle Span 5:  放在 => 放在-03
Oracle Span 6:  水桶 => 水桶
Oracle Span 7:  稳稳 => 稳稳
Oracle Span 8:  那里 => 那里
Spans:
Span 6-7:  井栏 => 井栏
Span 1-2:  慢慢 => 慢慢-01
Span 0-1:  我 => 我
Span 5-6:  提到 => 提到-02
Span 14-15:  放在 => 放在-03
Span 4-5:  水桶 => 水桶
Span 12-13:  稳稳 => 稳稳
Span 15-16:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  井栏 => 井栏
Oracle Span 1-2:  慢慢 => 慢慢-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  提到 => 提到-02
Oracle Span 14-15:  放在 => 放在-03
Oracle Span 4-5:  水桶 => 水桶
Oracle Span 12-13:  稳稳 => 稳稳
Oracle Span 15-16:  那里 => 那里

Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	慢慢	_	AD	AD	_	6	advmod	_	_
3	地	_	NN	NN	_	6	prep	_	_
4	把	_	BA	BA	_	6	ba	_	_
5	水桶	_	NN	NN	_	6	nsubj	_	_
6	提到	_	VV	VV	_	0	root	_	_
7	井栏	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	6	loc	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	我	_	PN	PN	_	15	nsubj	_	_
11	把	_	BA	BA	_	15	ba	_	_
12	它	_	PN	PN	_	15	nsubj	_	_
13	稳稳	_	AD	AD	_	15	advmod	_	_
14	地	_	NN	NN	_	15	prep	_	_
15	放在	_	VV	VV	_	6	conj	_	_
16	那里	_	PN	PN	_	15	dobj	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 提到-02, arg0, x3 / 我)
(x2 / 提到-02, arg1, x5 / 水桶)
(x2 / 提到-02, arg2, x6 / 井栏)
(x2 / 提到-02, manner, x4 / 慢慢-01)
(x7 / 放在-03, arg2, x11 / 那里)
(x7 / 放在-03, manner, x10 / 稳稳)

Input(Some(Graph((multi-sentence :snt1 (提到-02 :arg2 井栏 :arg1 水桶 :manner 慢慢-01 :arg0 我) :snt2 (放在-03 :arg2 那里 :manner 稳稳 :arg1 x5 :arg0 x3)),ArrayBuffer(Span(5,6,List(0),提到,提到-02,false), Span(6,7,List(1),井栏,井栏,false), Span(4,5,List(2),水桶,水桶,false), Span(1,2,List(3),慢慢,慢慢-01,false), Span(0,1,List(4),我,我,false), Span(14,15,List(5),放在,放在-03,false), Span(15,16,List(6),那里,那里,false), Span(12,13,List(7),稳稳,稳稳,false)),Map(2 -> 水桶, 5 -> 放在-03, 7 -> 稳稳, 1 -> 井栏, 4 -> 我, 6 -> 那里, 0 -> 提到-02, 3 -> 慢慢-01),Map(x10 -> 稳稳, x2 -> 提到-02, x5 -> 水桶, x7 -> 放在-03, x4 -> 慢慢-01, x11 -> 那里, x3 -> 我, x6 -> 井栏))),[Ljava.lang.String;@25974207,Annotation([Ljava.lang.String;@1f15e689,[Ljava.lang.String;@195113de,[Ljava.lang.String;@3ebc955b),Annotation([Ljava.lang.String;@21a46ff1,[Ljava.lang.String;@11b5f4e2,[Ledu.cmu.lti.nlp.amr.Dependency;@6bcae9),Annotation([Ljava.lang.String;@5aa781f2,[Ljava.lang.String;@58feb6b0,[Ljava.lang.String;@66d25ba9),Annotation([Ljava.lang.String;@3830f918,[Ljava.lang.String;@5efe47fd,[Ledu.cmu.lti.nlp.amr.Entity;@739831a4))
AMR:
(x2 / 提到-02, manner, x4 / 慢慢-01)
(x2 / 提到-02, op, x3 / 我)
(x2 / 提到-02, prep-from, x5 / 水桶)
(x2 / 提到-02, snt3, x6 / 井栏)
(x7 / 放在-03, location, x5 / 水桶)
(x7 / 放在-03, manner, x10 / 稳稳)
(x7 / 放在-03, purpose, x11 / 那里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 31,942 microseconds
Sentence: 我 的 耳朵 里 还 响 着 辘轳 的 歌声 。 依然 还 在 晃荡 的 水面 上 ， 我 看见 太阳 的 影子 在 跳动 。

Oracle Span 1:  依然 => 依然
Oracle Span 2:  响 => 响-01
Oracle Span 3:  太阳 => 太阳
Oracle Span 4:  影子 => 影子
Oracle Span 5:  我 => 我
Oracle Span 6:  我 => 我
Oracle Span 7:  晃荡 => 晃荡-01
Oracle Span 8:  歌声 => 歌声
Oracle Span 9:  水面 => 水面
Oracle Span 10:  看见 => 看见-01
Oracle Span 11:  耳朵 => 耳朵
Oracle Span 12:  跳动 => 跳动-01
Oracle Span 13:  辘轳 => 辘轳
Oracle Span 14:  还 => 还
Spans:
Span 11-12:  依然 => 依然
Span 5-6:  响 => 响-01
Span 21-22:  太阳 => 太阳
Span 23-24:  影子 => 影子
Span 0-1:  我 => 我
Span 19-20:  我 => 我
Span 14-15:  晃荡 => 晃荡-01
Span 9-10:  歌声 => 歌声
Span 16-17:  水面 => 水面
Span 20-21:  看见 => 看见-01
Span 2-3:  耳朵 => 耳朵
Span 25-26:  跳动 => 跳动-01
Span 7-8:  辘轳 => 辘轳
Span 4-5:  还 => 还

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  依然 => 依然
Oracle Span 5-6:  响 => 响-01
Oracle Span 21-22:  太阳 => 太阳
Oracle Span 23-24:  影子 => 影子
Oracle Span 0-1:  我 => 我
Oracle Span 19-20:  我 => 我
Oracle Span 14-15:  晃荡 => 晃荡-01
Oracle Span 9-10:  歌声 => 歌声
Oracle Span 16-17:  水面 => 水面
Oracle Span 20-21:  看见 => 看见-01
Oracle Span 2-3:  耳朵 => 耳朵
Oracle Span 25-26:  跳动 => 跳动-01
Oracle Span 7-8:  辘轳 => 辘轳
Oracle Span 4-5:  还 => 还

Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	耳朵	_	NN	NN	_	4	lobj	_	_
4	里	_	LC	LC	_	6	loc	_	_
5	还	_	AD	AD	_	6	advmod	_	_
6	响	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	辘轳	_	NN	NN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	歌声	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_
12	依然	_	AD	AD	_	26	advmod	_	_
13	还	_	AD	AD	_	26	advmod	_	_
14	在	_	P	P	_	26	prep	_	_
15	晃荡	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	水面	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	14	plmod	_	_
19	,	_	PU	PU	_	26	punct	_	_
20	我	_	PN	PN	_	21	nsubj	_	_
21	看见	_	VV	VV	_	24	rcmod	_	_
22	太阳	_	NN	NN	_	21	dobj	_	_
23	的	_	DEC	DEC	_	21	cpm	_	_
24	影子	_	NN	NN	_	26	dobj	_	_
25	在	_	AD	AD	_	26	advmod	_	_
26	跳动	_	VV	VV	_	6	dep	_	_
27	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 我, part, x9 / 耳朵)
(x2 / 响-01, arg0, x8 / 歌声)
(x2 / 响-01, location, x9 / 耳朵)
(x20 / 看见-01, arg0, x21 / 我)
(x20 / 看见-01, arg1, x22 / 跳动-01)
(x22 / 跳动-01, arg0, x23 / 影子)
(x22 / 跳动-01, location, x27 / 水面)
(x22 / 跳动-01, manner, x31 / 依然)
(x22 / 跳动-01, manner, x32 / 还)
(x23 / 影子, poss, x25 / 太阳)
(x27 / 水面, mod, x28 / 晃荡-01)
(x8 / 歌声, mod, x19 / 辘轳)

Input(Some(Graph((multi-sentence :snt1 (响-01 :location (耳朵 :part-of 我) :arg0 (歌声 :mod 辘轳)) :snt2 (看见-01 :arg1 (跳动-01 :manner 还 :manner 依然 :location (水面 :mod 晃荡-01) :arg0 (影子 :poss 太阳)) :arg0 我)),ArrayBuffer(Span(5,6,List(0),响,响-01,false), Span(2,3,List(1),耳朵,耳朵,false), Span(0,1,List(2),我,我,false), Span(9,10,List(3),歌声,歌声,false), Span(7,8,List(4),辘轳,辘轳,false), Span(20,21,List(5),看见,看见-01,false), Span(25,26,List(6),跳动,跳动-01,false), Span(4,5,List(7),还,还,false), Span(11,12,List(8),依然,依然,false), Span(16,17,List(9),水面,水面,false), Span(14,15,List(10),晃荡,晃荡-01,false), Span(23,24,List(11),影子,影子,false), Span(21,22,List(12),太阳,太阳,false), Span(19,20,List(13),我,我,false)),Map(2 -> 我, 5 -> 看见-01, 12 -> 太阳, 8 -> 依然, 7 -> 还, 1 -> 耳朵, 4 -> 辘轳, 11 -> 影子, 6 -> 跳动-01, 9 -> 水面, 0 -> 响-01, 10 -> 晃荡-01, 3 -> 歌声, 13 -> 我),Map(x28 -> 晃荡-01, x22 -> 跳动-01, x25 -> 太阳, x10 -> 我, x31 -> 依然, x19 -> 辘轳, x2 -> 响-01, x8 -> 歌声, x27 -> 水面, x21 -> 我, x23 -> 影子, x32 -> 还, x20 -> 看见-01, x9 -> 耳朵))),[Ljava.lang.String;@7e3236d,Annotation([Ljava.lang.String;@38a4e2b0,[Ljava.lang.String;@14c99bf6,[Ljava.lang.String;@266e9dda),Annotation([Ljava.lang.String;@38883a31,[Ljava.lang.String;@27a6fef2,[Ledu.cmu.lti.nlp.amr.Dependency;@7fe8c7db),Annotation([Ljava.lang.String;@2dba05b1,[Ljava.lang.String;@541afb85,[Ljava.lang.String;@445bce9a),Annotation([Ljava.lang.String;@7db40fd5,[Ljava.lang.String;@5e1a5f,[Ledu.cmu.lti.nlp.amr.Entity;@31b0f02))
AMR:
(x10 / 我, part, x9 / 耳朵)
(x2 / 响-01, location, x9 / 耳朵)
(x2 / 响-01, snt1, x8 / 歌声)
(x20 / 看见-01, ARG6, x22 / 跳动-01)
(x20 / 看见-01, prep-for, x21 / 我)
(x22 / 跳动-01, location, x27 / 水面)
(x22 / 跳动-01, manner, x31 / 依然)
(x22 / 跳动-01, manner, x32 / 还)
(x22 / 跳动-01, op, x23 / 影子)
(x23 / 影子, poss, x25 / 太阳)
(x27 / 水面, mod, x28 / 晃荡-01)
(x32 / 还, direction, x2 / 响-01)
(x8 / 歌声, mod, x19 / 辘轳)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.3
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 88,333 microseconds
Sentence: “ 我 正 需要 喝 这 种 水 。 ” 小 王子 说 ：

Oracle Span 1:  喝 => 喝-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  正 => 正
Oracle Span 4:  水 => 水
Oracle Span 5:  王子 => 王子
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Oracle Span 8:  需要 => 需要-02
Spans:
Span 4-5:  喝 => 喝-01
Span 10-11:  小 => 小-01
Span 2-3:  正 => 正
Span 7-8:  水 => 水
Span 11-12:  王子 => 王子
Span 12-13:  说 => 说-01
Span 5-6:  这 => 这
Span 3-4:  需要 => 需要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  喝 => 喝-01
Oracle Span 10-11:  小 => 小-01
Oracle Span 2-3:  正 => 正
Oracle Span 7-8:  水 => 水
Oracle Span 11-12:  王子 => 王子
Oracle Span 12-13:  说 => 说-01
Oracle Span 5-6:  这 => 这
Oracle Span 3-4:  需要 => 需要-02

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	正	_	AD	AD	_	4	advmod	_	_
4	需要	_	VV	VV	_	12	vmod	_	_
5	喝	_	NR	NR	_	8	nn	_	_
6	这	_	DT	DT	_	8	det	_	_
7	种	_	M	M	_	6	clf	_	_
8	水	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_
10	”	_	PU	PU	_	4	punct	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	13	nsubj	_	_
13	说	_	VV	VV	_	0	root	_	_
14	：	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 需要-02)
(x10 / 水, mod, x11 / 这)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 需要-02, arg1, x8 / 喝-01)
(x4 / 需要-02, manner, x5 / 正)
(x8 / 喝-01, arg1, x10 / 水)

Input(Some(Graph((说-01 :arg1 (需要-02 :arg1 (喝-01 :arg1 (水 :mod 这) :arg0 x2) :arg0 x2 :manner 正) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(12,13,List(0),说,说-01,false), Span(3,4,List(1),需要,需要-02,false), Span(4,5,List(2),喝,喝-01,false), Span(7,8,List(3),水,水,false), Span(5,6,List(4),这,这,false), Span(2,3,List(5),正,正,false), Span(11,12,List(6),王子,王子,false), Span(10,11,List(7),小,小-01,false)),Map(2 -> 喝-01, 5 -> 正, 7 -> 小-01, 1 -> 需要-02, 4 -> 这, 6 -> 王子, 0 -> 说-01, 3 -> 水),Map(x2 -> 王子, x10 -> 水, x5 -> 正, x8 -> 喝-01, x4 -> 需要-02, x3 -> 小-01, x11 -> 这, x0 -> 说-01))),[Ljava.lang.String;@19ae2ee5,Annotation([Ljava.lang.String;@44b940a2,[Ljava.lang.String;@34c53688,[Ljava.lang.String;@6ffd4c0d),Annotation([Ljava.lang.String;@74c9e11,[Ljava.lang.String;@9fe720a,[Ledu.cmu.lti.nlp.amr.Dependency;@149274cb),Annotation([Ljava.lang.String;@118acf70,[Ljava.lang.String;@72557746,[Ljava.lang.String;@8c12524),Annotation([Ljava.lang.String;@f723cdb,[Ljava.lang.String;@4844930a,[Ledu.cmu.lti.nlp.amr.Entity;@11f23203))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x8 / 喝-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 需要-02, manner, x5 / 正)
(x8 / 喝-01, direction, x4 / 需要-02)
(x8 / 喝-01, domain, x10 / 水)
(x8 / 喝-01, mod, x11 / 这)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 19,057 microseconds
Sentence: “ 给 我 喝 点 … ”

Oracle Span 1:  喝 => 喝-01
Oracle Span 2:  我 => 我
Oracle Span 3:  点 => 点
Oracle Span 4:  给 => 给-01
Spans:
Span 3-4:  喝 => 喝-01
Span 2-3:  我 => 我
Span 4-5:  点 => 点
Span 1-2:  给 => 给-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 3-4:  喝 => 喝-01
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  点 => 点
Oracle Span 1-2:  给 => 给-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	给	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	6	nn	_	_
4	喝	_	CD	CD	_	5	nummod	_	_
5	点	_	M	M	_	6	clf	_	_
6	…	_	NN	NN	_	2	dobj	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 给-01, arg2, x7 / 我)
(x6 / 给-01, arg3, x8 / 喝-01)

Input(Some(Graph((say :arg1 (给-01 :arg3 (喝-01 :arg1 (thing :quant 点) :arg0 x7) :arg2 我)),ArrayBuffer(Span(1,2,List(0),给,给-01,false), Span(3,4,List(1),喝,喝-01,false), Span(4,5,List(2),点,点,false), Span(2,3,List(3),我,我,false)),Map(2 -> 点, 1 -> 喝-01, 0 -> 给-01, 3 -> 我),Map(x8 -> 喝-01, x7 -> 我, x11 -> 点, x6 -> 给-01))),[Ljava.lang.String;@101bdd1c,Annotation([Ljava.lang.String;@e91af20,[Ljava.lang.String;@6221b13b,[Ljava.lang.String;@62c3f556),Annotation([Ljava.lang.String;@2cfe272f,[Ljava.lang.String;@2f95653f,[Ledu.cmu.lti.nlp.amr.Dependency;@4052b19f),Annotation([Ljava.lang.String;@3dc68586,[Ljava.lang.String;@60dc1a4e,[Ljava.lang.String;@646427f7),Annotation([Ljava.lang.String;@31efacad,[Ljava.lang.String;@380ce5a3,[Ledu.cmu.lti.nlp.amr.Entity;@38029686))
AMR:
(x11 / 点, topic, x8 / 喝-01)
(x6 / 给-01, subset, x7 / 我)
(x6 / 给-01, subset, x8 / 喝-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,040 microseconds
Sentence: 这时 我 才 明白 了 他 所 要 寻找 的 是 什么 ！

Oracle Span 1:  什么 => 什么
Oracle Span 2:  他 => 他
Oracle Span 3:  寻找 => 寻找-01
Oracle Span 4:  我 => 我
Oracle Span 5:  才 => 才
Oracle Span 6:  明白 => 明白-01
Oracle Span 7:  这时 => 这时
Spans:
Span 11-12:  什么 => 什么
Span 5-6:  他 => 他
Span 8-9:  寻找 => 寻找-01
Span 1-2:  我 => 我
Span 2-3:  才 => 才
Span 3-4:  明白 => 明白-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  什么 => 什么
Oracle Span 5-6:  他 => 他
Oracle Span 8-9:  寻找 => 寻找-01
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  才 => 才
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	才	_	AD	AD	_	4	advmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	9	nsubj	_	_
7	所	_	MSP	MSP	_	9	prtmod	_	_
8	要	_	VV	VV	_	9	dep	_	_
9	寻找	_	VV	VV	_	11	top	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	是	_	VC	VC	_	4	ccomp	_	_
12	什么	_	PN	PN	_	11	attr	_	_
13	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 明白-01, arg0, x2 / 我)
(x0 / 明白-01, arg1, x5 / 寻找-01)
(x0 / 明白-01, manner, x3 / 才)
(x0 / 明白-01, time, x4 / 这时)
(x5 / 寻找-01, arg0, x6 / 他)
(x5 / 寻找-01, arg1, x7 / 什么)

Input(Some(Graph((明白-01 :arg1 (寻找-01 :arg1 什么 :arg0 他) :time 这时 :manner 才 :arg0 我),ArrayBuffer(Span(3,4,List(0),明白,明白-01,false), Span(8,9,List(1),寻找,寻找-01,false), Span(11,12,List(2),什么,什么,false), Span(5,6,List(3),他,他,false), Span(0,1,List(4),这时,这时,false), Span(2,3,List(5),才,才,false), Span(1,2,List(6),我,我,false)),Map(2 -> 什么, 5 -> 才, 1 -> 寻找-01, 4 -> 这时, 6 -> 我, 0 -> 明白-01, 3 -> 他),Map(x2 -> 我, x5 -> 寻找-01, x7 -> 什么, x4 -> 这时, x3 -> 才, x6 -> 他, x0 -> 明白-01))),[Ljava.lang.String;@7d9c45ee,Annotation([Ljava.lang.String;@31da0434,[Ljava.lang.String;@6e24ce51,[Ljava.lang.String;@423ed3b5),Annotation([Ljava.lang.String;@5d124d29,[Ljava.lang.String;@3c88191b,[Ledu.cmu.lti.nlp.amr.Dependency;@74960e9d),Annotation([Ljava.lang.String;@4001d8c1,[Ljava.lang.String;@fb5aeed,[Ljava.lang.String;@73893ec1),Annotation([Ljava.lang.String;@37af24cb,[Ljava.lang.String;@7926352f,[Ledu.cmu.lti.nlp.amr.Entity;@5bc63e20))
AMR:
(x0 / 明白-01, ARG4, x6 / 他)
(x0 / 明白-01, manner, x3 / 才)
(x0 / 明白-01, time, x2 / 我)
(x0 / 明白-01, time, x4 / 这时)
(x5 / 寻找-01, ARG5, x7 / 什么)
(x5 / 寻找-01, subevent, x0 / 明白-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,556 microseconds
Sentence: 我 把 水桶 提到 他 的 嘴边 。

Oracle Span 1:  他 => 他
Oracle Span 2:  嘴边 => 嘴边
Oracle Span 3:  我 => 我
Oracle Span 4:  提到 => 提到-01
Oracle Span 5:  水桶 => 水桶
Spans:
Span 4-5:  他 => 他
Span 6-7:  嘴边 => 嘴边
Span 0-1:  我 => 我
Span 3-4:  提到 => 提到-01
Span 2-3:  水桶 => 水桶

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 6-7:  嘴边 => 嘴边
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  提到 => 提到-01
Oracle Span 2-3:  水桶 => 水桶

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	水桶	_	NN	NN	_	4	nsubj	_	_
4	提到	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	嘴边	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 提到-01, arg0, x2 / 我)
(x0 / 提到-01, arg1, x3 / 水桶)
(x0 / 提到-01, arg2, x6 / 嘴边)
(x6 / 嘴边, poss, x7 / 他)

Input(Some(Graph((提到-01 :arg2 (嘴边 :poss 他) :arg1 水桶 :arg0 我),ArrayBuffer(Span(3,4,List(0),提到,提到-01,false), Span(6,7,List(1),嘴边,嘴边,false), Span(4,5,List(2),他,他,false), Span(2,3,List(3),水桶,水桶,false), Span(0,1,List(4),我,我,false)),Map(2 -> 他, 1 -> 嘴边, 4 -> 我, 0 -> 提到-01, 3 -> 水桶),Map(x2 -> 我, x7 -> 他, x3 -> 水桶, x6 -> 嘴边, x0 -> 提到-01))),[Ljava.lang.String;@61037caf,Annotation([Ljava.lang.String;@2fc49538,[Ljava.lang.String;@670342a2,[Ljava.lang.String;@d5e575c),Annotation([Ljava.lang.String;@7742a45c,[Ljava.lang.String;@7ca492d9,[Ledu.cmu.lti.nlp.amr.Dependency;@14fc9bd),Annotation([Ljava.lang.String;@7ed49a7f,[Ljava.lang.String;@1cd6b1bd,[Ljava.lang.String;@443cdaa4),Annotation([Ljava.lang.String;@3b41e1bf,[Ljava.lang.String;@619c93ca,[Ledu.cmu.lti.nlp.amr.Entity;@486e9d1d))
AMR:
(x0 / 提到-01, op, x2 / 我)
(x0 / 提到-01, prep-from, x3 / 水桶)
(x0 / 提到-01, snt3, x6 / 嘴边)
(x6 / 嘴边, poss, x7 / 他)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,465 microseconds
Sentence: 他 闭 着 眼睛 喝 水 。

Oracle Span 1:  他 => 他
Oracle Span 2:  喝 => 喝-01
Oracle Span 3:  水 => 水
Oracle Span 4:  眼睛 => 眼睛
Oracle Span 5:  闭 => 闭-01
Spans:
Span 0-1:  他 => 他
Span 4-5:  喝 => 喝-01
Span 5-6:  水 => 水
Span 3-4:  眼睛 => 眼睛
Span 1-2:  闭 => 闭-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  喝 => 喝-01
Oracle Span 5-6:  水 => 水
Oracle Span 3-4:  眼睛 => 眼睛
Oracle Span 1-2:  闭 => 闭-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	闭	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	眼睛	_	NN	NN	_	5	nsubj	_	_
5	喝	_	VV	VV	_	2	ccomp	_	_
6	水	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 闭-01, arg1, x12 / 眼睛)
(x6 / 喝-01, arg0, x8 / 他)
(x6 / 喝-01, arg1, x9 / 水)
(x6 / 喝-01, manner, x10 / 闭-01)

Input(Some(Graph((喝-01 :manner (闭-01 :arg1 眼睛 :arg0 x8) :arg1 水 :arg0 他),ArrayBuffer(Span(4,5,List(0),喝,喝-01,false), Span(1,2,List(1),闭,闭-01,false), Span(3,4,List(2),眼睛,眼睛,false), Span(5,6,List(3),水,水,false), Span(0,1,List(4),他,他,false)),Map(2 -> 眼睛, 1 -> 闭-01, 4 -> 他, 0 -> 喝-01, 3 -> 水),Map(x10 -> 闭-01, x8 -> 他, x12 -> 眼睛, x6 -> 喝-01, x9 -> 水))),[Ljava.lang.String;@6aa5974e,Annotation([Ljava.lang.String;@5e5ddfbc,[Ljava.lang.String;@5bda157e,[Ljava.lang.String;@67e0fd6d),Annotation([Ljava.lang.String;@21390938,[Ljava.lang.String;@1129829c,[Ledu.cmu.lti.nlp.amr.Dependency;@1a531422),Annotation([Ljava.lang.String;@7a388990,[Ljava.lang.String;@13213f26,[Ljava.lang.String;@4e4162bc),Annotation([Ljava.lang.String;@4c319d52,[Ljava.lang.String;@72fbf94d,[Ledu.cmu.lti.nlp.amr.Entity;@6839203b))
AMR:
(x10 / 闭-01, ARG6, x12 / 眼睛)
(x6 / 喝-01, manner, x10 / 闭-01)
(x6 / 喝-01, op, x8 / 他)
(x6 / 喝-01, quant, x9 / 水)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,380 microseconds
Sentence: 就 象 节日 一般 舒适 愉快 。

Oracle Span 1:  就 => 就
Oracle Span 2:  愉快 => 愉快-01
Oracle Span 3:  舒适 => 舒适-01
Oracle Span 4:  节日 => 节日
Spans:
Span 0-1:  就 => 就
Span 5-6:  愉快 => 愉快-01
Span 4-5:  舒适 => 舒适-01
Span 2-3:  节日 => 节日

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 5-6:  愉快 => 愉快-01
Oracle Span 4-5:  舒适 => 舒适-01
Oracle Span 2-3:  节日 => 节日

Dependencies:
1	就	_	AD	AD	_	5	advmod	_	_
2	象	_	P	P	_	5	prep	_	_
3	节日	_	NN	NN	_	2	pobj	_	_
4	一般	_	AD	AD	_	5	advmod	_	_
5	舒适	_	VA	VA	_	0	root	_	_
6	愉快	_	VA	VA	_	5	comod	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph((像-01 :arg1 节日 :arg2 (and :op 舒适-01 :op 愉快-01) :manner 就),ArrayBuffer(Span(2,3,List(0),节日,节日,false), Span(4,5,List(1),舒适,舒适-01,false), Span(5,6,List(2),愉快,愉快-01,false), Span(0,1,List(3),就,就,false)),Map(2 -> 愉快-01, 1 -> 舒适-01, 0 -> 节日, 3 -> 就),Map(x10 -> 就, x8 -> 舒适-01, x3 -> 节日, x9 -> 愉快-01))),[Ljava.lang.String;@2d28fb02,Annotation([Ljava.lang.String;@6db328f8,[Ljava.lang.String;@402f8592,[Ljava.lang.String;@61b65d54),Annotation([Ljava.lang.String;@b2c4a8b,[Ljava.lang.String;@7f2c57fe,[Ledu.cmu.lti.nlp.amr.Dependency;@43935e9c),Annotation([Ljava.lang.String;@101cf747,[Ljava.lang.String;@790d8fdd,[Ljava.lang.String;@6403a4a5),Annotation([Ljava.lang.String;@3dbd7107,[Ljava.lang.String;@4a6c0f38,[Ledu.cmu.lti.nlp.amr.Entity;@5f8a02cf))
AMR:
(x10 / 就, condition, x9 / 愉快-01)
(x3 / 节日, ARG4, x8 / 舒适-01)
(x9 / 愉快-01, ARG3, x8 / 舒适-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.2
Decoded in 6,348 microseconds
Sentence: 这 水 远 不 只 是 一 种 饮料 ，

Oracle Span 1:  只 => 只
Oracle Span 2:  水 => 水
Oracle Span 3:  种 => 种
Oracle Span 4:  这 => 这
Oracle Span 5:  远 => 远
Oracle Span 6:  饮料 => 饮料
Spans:
Span 4-5:  只 => 只
Span 1-2:  水 => 水
Span 7-8:  种 => 种
Span 0-1:  这 => 这
Span 2-3:  远 => 远
Span 8-9:  饮料 => 饮料

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  只 => 只
Oracle Span 1-2:  水 => 水
Oracle Span 7-8:  种 => 种
Oracle Span 0-1:  这 => 这
Oracle Span 2-3:  远 => 远
Oracle Span 8-9:  饮料 => 饮料

Dependencies:
1	这	_	PN	PN	_	6	nsubj	_	_
2	水	_	NN	NN	_	6	nsubj	_	_
3	远	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	只	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	种	_	M	M	_	9	clf	_	_
9	饮料	_	NN	NN	_	6	attr	_	_
10	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 饮料, domain, x2 / 水)
(x0 / 饮料, manner, x10 / 只)
(x0 / 饮料, unit, x9 / 种)
(x10 / 只, degree, x12 / 远)
(x2 / 水, mod, x3 / 这)

Input(Some(Graph((饮料 :manner (只 :degree 远 :polarity -) :unit 种 :quant 1 :domain (水 :mod 这)),ArrayBuffer(Span(8,9,List(0),饮料,饮料,false), Span(4,5,List(1),只,只,false), Span(2,3,List(2),远,远,false), Span(7,8,List(3),种,种,false), Span(1,2,List(4),水,水,false), Span(0,1,List(5),这,这,false)),Map(2 -> 远, 5 -> 这, 1 -> 只, 4 -> 水, 0 -> 饮料, 3 -> 种),Map(x2 -> 水, x10 -> 只, x12 -> 远, x3 -> 这, x9 -> 种, x0 -> 饮料))),[Ljava.lang.String;@26d5a317,Annotation([Ljava.lang.String;@70b6db83,[Ljava.lang.String;@5a090f62,[Ljava.lang.String;@559af296),Annotation([Ljava.lang.String;@5edc3e29,[Ljava.lang.String;@18709cb2,[Ledu.cmu.lti.nlp.amr.Dependency;@a90e2c1),Annotation([Ljava.lang.String;@89caf47,[Ljava.lang.String;@370ef50b,[Ljava.lang.String;@2b877a54),Annotation([Ljava.lang.String;@268c030f,[Ljava.lang.String;@4b87760e,[Ledu.cmu.lti.nlp.amr.Entity;@be164d8))
AMR:
(x0 / 饮料, domain, x2 / 水)
(x0 / 饮料, manner, x10 / 只)
(x0 / 饮料, unit, x9 / 种)
(x10 / 只, degree, x12 / 远)
(x2 / 水, mod, x3 / 这)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,157 microseconds
Sentence: 它 是 披星戴月 走 了 许多 路 才 找到 的 ， 是 在 辘轳 的 歌声 中 ， 经过 我 双臂 的 努力 得来 的 。

Oracle Span 1:  努力 => 努力-01
Oracle Span 2:  它 => 它
Oracle Span 3:  得来 => 得来-01
Oracle Span 4:  我 => 我
Oracle Span 5:  才 => 才
Oracle Span 6:  找到 => 找到-01
Oracle Span 7:  披星戴月 => 披星戴月-01
Oracle Span 8:  歌声 => 歌声
Oracle Span 9:  经过 => 经过-01
Oracle Span 10:  许多 => 许多
Oracle Span 11:  走 => 走-01
Oracle Span 12:  路 => 路
Oracle Span 13:  辘轳 => 辘轳
Spans:
Span 22-23:  努力 => 努力-01
Span 0-1:  它 => 它
Span 23-24:  得来 => 得来-01
Span 19-20:  我 => 我
Span 7-8:  才 => 才
Span 8-9:  找到 => 找到-01
Span 2-3:  披星戴月 => 披星戴月-01
Span 15-16:  歌声 => 歌声
Span 18-19:  经过 => 经过-01
Span 5-6:  许多 => 许多
Span 3-4:  走 => 走-01
Span 6-7:  路 => 路
Span 13-14:  辘轳 => 辘轳

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 22-23:  努力 => 努力-01
Oracle Span 0-1:  它 => 它
Oracle Span 23-24:  得来 => 得来-01
Oracle Span 19-20:  我 => 我
Oracle Span 7-8:  才 => 才
Oracle Span 8-9:  找到 => 找到-01
Oracle Span 2-3:  披星戴月 => 披星戴月-01
Oracle Span 15-16:  歌声 => 歌声
Oracle Span 18-19:  经过 => 经过-01
Oracle Span 5-6:  许多 => 许多
Oracle Span 3-4:  走 => 走-01
Oracle Span 6-7:  路 => 路
Oracle Span 13-14:  辘轳 => 辘轳

Dependencies:
1	它	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	披星戴月	_	AD	AD	_	4	advmod	_	_
4	走	_	VV	VV	_	2	attr	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	许多	_	CD	CD	_	7	nummod	_	_
7	路	_	NN	NN	_	4	dobj	_	_
8	才	_	AD	AD	_	9	advmod	_	_
9	找到	_	VV	VV	_	4	dep	_	_
10	的	_	DEC	DEC	_	4	cpm	_	_
11	,	_	PU	PU	_	2	punct	_	_
12	是	_	VC	VC	_	2	conj	_	_
13	在	_	P	P	_	24	prep	_	_
14	辘轳	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	歌声	_	NN	NN	_	17	lobj	_	_
17	中	_	LC	LC	_	13	plmod	_	_
18	,	_	PU	PU	_	24	punct	_	_
19	经过	_	P	P	_	24	prep	_	_
20	我	_	PN	PN	_	21	nn	_	_
21	双臂	_	NN	NN	_	23	assmod	_	_
22	的	_	DEG	DEG	_	21	assm	_	_
23	努力	_	NN	NN	_	19	pobj	_	_
24	得来	_	VV	VV	_	12	attr	_	_
25	的	_	DEC	DEC	_	24	cpm	_	_
26	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x19 / 找到-01, arg0, x27 / 我)
(x19 / 找到-01, arg0, x30 / 它)
(x19 / 找到-01, manner, x24 / 才)
(x19 / 找到-01, manner, x31 / 走-01)
(x31 / 走-01, arg1, x33 / 路)
(x31 / 走-01, manner, x35 / 披星戴月-01)
(x33 / 路, mod, x34 / 许多)
(x37 / 得来-01, manner, x39 / 经过-01)
(x39 / 经过-01, accompanier, x44 / 歌声)
(x39 / 经过-01, arg1, x40 / 努力-01)
(x44 / 歌声, poss, x45 / 辘轳)

Input(Some(Graph((and :op (找到-01 :manner (走-01 :manner (披星戴月-01 :arg0 x27) :arg1 (路 :mod 许多) :arg0 x27) :arg0 它 :arg0 我 :manner 才) :op (得来-01 :manner (经过-01 :accompanier (歌声 :poss 辘轳) :arg1 (努力-01 :instrument (臂 :quant 2) :arg0 x27)) :arg1 x30)),ArrayBuffer(Span(8,9,List(0),找到,找到-01,false), Span(3,4,List(1),走,走-01,false), Span(2,3,List(2),披星戴月,披星戴月-01,false), Span(6,7,List(3),路,路,false), Span(5,6,List(4),许多,许多,false), Span(0,1,List(5),它,它,false), Span(19,20,List(6),我,我,false), Span(7,8,List(7),才,才,false), Span(23,24,List(8),得来,得来-01,false), Span(18,19,List(9),经过,经过-01,false), Span(15,16,List(10),歌声,歌声,false), Span(13,14,List(11),辘轳,辘轳,false), Span(22,23,List(12),努力,努力-01,false)),Map(2 -> 披星戴月-01, 5 -> 它, 12 -> 努力-01, 8 -> 得来-01, 7 -> 才, 1 -> 走-01, 4 -> 许多, 11 -> 辘轳, 6 -> 我, 9 -> 经过-01, 0 -> 找到-01, 10 -> 歌声, 3 -> 路),Map(x34 -> 许多, x40 -> 努力-01, x37 -> 得来-01, x31 -> 走-01, x19 -> 找到-01, x39 -> 经过-01, x45 -> 辘轳, x30 -> 它, x27 -> 我, x33 -> 路, x24 -> 才, x44 -> 歌声, x35 -> 披星戴月-01))),[Ljava.lang.String;@1b24ea2a,Annotation([Ljava.lang.String;@5df6163a,[Ljava.lang.String;@2d313c8c,[Ljava.lang.String;@2df65a56),Annotation([Ljava.lang.String;@113f9078,[Ljava.lang.String;@7c1503a3,[Ledu.cmu.lti.nlp.amr.Dependency;@586495f1),Annotation([Ljava.lang.String;@47df5041,[Ljava.lang.String;@2a0ea492,[Ljava.lang.String;@7e52a26b),Annotation([Ljava.lang.String;@2e56b4d,[Ljava.lang.String;@3f857e08,[Ledu.cmu.lti.nlp.amr.Entity;@6070775e))
AMR:
(x19 / 找到-01, location, x27 / 我)
(x19 / 找到-01, manner, x24 / 才)
(x19 / 找到-01, manner, x30 / 它)
(x19 / 找到-01, manner, x31 / 走-01)
(x27 / 我, ARG0, x40 / 努力-01)
(x31 / 走-01, manner, x35 / 披星戴月-01)
(x31 / 走-01, snt3, x33 / 路)
(x33 / 路, mod, x34 / 许多)
(x37 / 得来-01, manner, x39 / 经过-01)
(x39 / 经过-01, ARG3, x40 / 努力-01)
(x39 / 经过-01, accompanier, x44 / 歌声)
(x44 / 歌声, mod, x45 / 辘轳)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.2
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.1.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 60,985 microseconds
Sentence: 它 象 是 一 件 礼品 慰藉 着 心田 。

Oracle Span 1:  它 => 它
Oracle Span 2:  心田 => 心田
Oracle Span 3:  慰藉 => 慰藉-01
Oracle Span 4:  礼品 => 礼品
Spans:
Span 0-1:  它 => 它
Span 8-9:  心田 => 心田
Span 6-7:  慰藉 => 慰藉-01
Span 5-6:  礼品 => 礼品

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它 => 它
Oracle Span 8-9:  心田 => 心田
Oracle Span 6-7:  慰藉 => 慰藉-01
Oracle Span 5-6:  礼品 => 礼品

Dependencies:
1	它	_	PN	PN	_	7	nsubj	_	_
2	象	_	P	P	_	7	prep	_	_
3	是	_	VC	VC	_	2	pccomp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	件	_	M	M	_	6	clf	_	_
6	礼品	_	NN	NN	_	3	attr	_	_
7	慰藉	_	VV	VV	_	0	root	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	心田	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x7 / 慰藉-01, arg0, x5 / 礼品)
(x7 / 慰藉-01, arg1, x8 / 心田)

Input(Some(Graph((像-01 :arg0 它 :arg1 (礼品 :arg0-of (慰藉-01 :arg1 心田) :quant 1)),ArrayBuffer(Span(0,1,List(0),它,它,false), Span(5,6,List(1),礼品,礼品,false), Span(6,7,List(2),慰藉,慰藉-01,false), Span(8,9,List(3),心田,心田,false)),Map(2 -> 慰藉-01, 1 -> 礼品, 0 -> 它, 3 -> 心田),Map(x2 -> 它, x5 -> 礼品, x8 -> 心田, x7 -> 慰藉-01))),[Ljava.lang.String;@b5ac0c1,Annotation([Ljava.lang.String;@224c7de4,[Ljava.lang.String;@36ad229b,[Ljava.lang.String;@55846997),Annotation([Ljava.lang.String;@805e72e,[Ljava.lang.String;@49671897,[Ledu.cmu.lti.nlp.amr.Dependency;@168142da),Annotation([Ljava.lang.String;@60bf494c,[Ljava.lang.String;@47a4eee2,[Ljava.lang.String;@36f6e521),Annotation([Ljava.lang.String;@2afdf6b7,[Ljava.lang.String;@30922f8d,[Ledu.cmu.lti.nlp.amr.Entity;@50211483))
AMR:
(x2 / 它, mod, x5 / 礼品)
(x7 / 慰藉-01, degree, x5 / 礼品)
(x7 / 慰藉-01, mod, x8 / 心田)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 11,809 microseconds
Sentence: 在 我 小 的 时候 ， 圣诞树 的 灯光 ， 午夜 的 弥撒 的 音乐 ， 甜蜜 的 微笑 ， 这 一切 都 使 圣诞节 时 我 收到 的 礼品 辉映 着 幸福 的 光彩 。

Oracle Span 1:  使 => 使-01
Oracle Span 2:  光彩 => 光彩
Oracle Span 3:  午夜 => 午夜
Oracle Span 4:  圣诞树 => 圣诞树
Oracle Span 5:  圣诞节 => 圣诞节
Oracle Span 6:  小 => 小-01
Oracle Span 7:  幸福 => 幸福-01
Oracle Span 8:  弥撒 => 弥撒
Oracle Span 9:  微笑 => 微笑
Oracle Span 10:  我 => 我
Oracle Span 11:  收到 => 收到-01
Oracle Span 12:  灯光 => 灯光
Oracle Span 13:  甜蜜 => 甜蜜-01
Oracle Span 14:  礼品 => 礼品
Oracle Span 15:  辉映 => 辉映-01
Oracle Span 16:  都 => 都
Oracle Span 17:  音乐 => 音乐
Spans:
Span 23-24:  使 => 使-01
Span 34-35:  光彩 => 光彩
Span 10-11:  午夜 => 午夜
Span 6-7:  圣诞树 => 圣诞树
Span 24-25:  圣诞节 => 圣诞节
Span 2-3:  小 => 小-01
Span 32-33:  幸福 => 幸福-01
Span 12-13:  弥撒 => 弥撒
Span 18-19:  微笑 => 微笑
Span 1-2:  我 => 我
Span 27-28:  收到 => 收到-01
Span 8-9:  灯光 => 灯光
Span 16-17:  甜蜜 => 甜蜜-01
Span 29-30:  礼品 => 礼品
Span 30-31:  辉映 => 辉映-01
Span 22-23:  都 => 都
Span 14-15:  音乐 => 音乐

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 23-24:  使 => 使-01
Oracle Span 34-35:  光彩 => 光彩
Oracle Span 10-11:  午夜 => 午夜
Oracle Span 6-7:  圣诞树 => 圣诞树
Oracle Span 24-25:  圣诞节 => 圣诞节
Oracle Span 2-3:  小 => 小-01
Oracle Span 32-33:  幸福 => 幸福-01
Oracle Span 12-13:  弥撒 => 弥撒
Oracle Span 18-19:  微笑 => 微笑
Oracle Span 1-2:  我 => 我
Oracle Span 27-28:  收到 => 收到-01
Oracle Span 8-9:  灯光 => 灯光
Oracle Span 16-17:  甜蜜 => 甜蜜-01
Oracle Span 29-30:  礼品 => 礼品
Oracle Span 30-31:  辉映 => 辉映-01
Oracle Span 22-23:  都 => 都
Oracle Span 14-15:  音乐 => 音乐

Dependencies:
1	在	_	P	P	_	24	prep	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	小	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	24	punct	_	_
7	圣诞树	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	灯光	_	NN	NN	_	24	nsubj	_	_
10	,	_	PU	PU	_	24	punct	_	_
11	午夜	_	NT	NT	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	弥撒	_	NN	NN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	音乐	_	NN	NN	_	24	nsubj	_	_
16	,	_	PU	PU	_	24	punct	_	_
17	甜蜜	_	NN	NN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	微笑	_	NN	NN	_	24	nsubj	_	_
20	,	_	PU	PU	_	24	punct	_	_
21	这	_	PN	PN	_	22	dep	_	_
22	一切	_	PN	PN	_	24	nsubj	_	_
23	都	_	AD	AD	_	24	advmod	_	_
24	使	_	VV	VV	_	0	root	_	_
25	圣诞节	_	NN	NN	_	26	lobj	_	_
26	时	_	LC	LC	_	28	loc	_	_
27	我	_	PN	PN	_	28	nsubj	_	_
28	收到	_	VV	VV	_	30	rcmod	_	_
29	的	_	DEC	DEC	_	28	cpm	_	_
30	礼品	_	NN	NN	_	24	dobj	_	_
31	辉映	_	VV	VV	_	24	dep	_	_
32	着	_	AS	AS	_	31	asp	_	_
33	幸福	_	NN	NN	_	35	assmod	_	_
34	的	_	DEG	DEG	_	33	assm	_	_
35	光彩	_	NN	NN	_	31	dobj	_	_
36	。	_	PU	PU	_	24	punct	_	_

Oracle:
(x0 / 使-01, arg1, x18 / 礼品)
(x0 / 使-01, arg2, x15 / 辉映-01)
(x0 / 使-01, manner, x22 / 都)
(x0 / 使-01, time, x23 / 小-01)
(x15 / 辉映-01, arg1, x16 / 光彩)
(x16 / 光彩, mod, x17 / 幸福-01)
(x19 / 收到-01, arg0, x20 / 我)
(x19 / 收到-01, arg1, x18 / 礼品)
(x19 / 收到-01, time, x21 / 圣诞节)
(x3 / 灯光, poss, x4 / 圣诞树)
(x5 / 音乐, mod, x6 / 弥撒)
(x6 / 弥撒, time, x7 / 午夜)
(x8 / 微笑, mod, x9 / 甜蜜-01)

Input(Some(Graph((使-01 :time (小-01 :arg0 x20) :manner 都 :arg1 (礼品 :arg1-of (收到-01 :time 圣诞节 :arg0 我)) :arg2 (辉映-01 :arg1 (光彩 :mod 幸福-01)) :arg0 (and :op (灯光 :poss 圣诞树) :op (音乐 :mod (弥撒 :time 午夜)) :op (微笑 :mod 甜蜜-01))),ArrayBuffer(Span(23,24,List(0),使,使-01,false), Span(2,3,List(1),小,小-01,false), Span(22,23,List(2),都,都,false), Span(29,30,List(3),礼品,礼品,false), Span(27,28,List(4),收到,收到-01,false), Span(24,25,List(5),圣诞节,圣诞节,false), Span(1,2,List(6),我,我,false), Span(30,31,List(7),辉映,辉映-01,false), Span(34,35,List(8),光彩,光彩,false), Span(32,33,List(9),幸福,幸福-01,false), Span(8,9,List(10),灯光,灯光,false), Span(6,7,List(11),圣诞树,圣诞树,false), Span(14,15,List(12),音乐,音乐,false), Span(12,13,List(13),弥撒,弥撒,false), Span(10,11,List(14),午夜,午夜,false), Span(18,19,List(15),微笑,微笑,false), Span(16,17,List(16),甜蜜,甜蜜-01,false)),Map(2 -> 都, 5 -> 圣诞节, 12 -> 音乐, 15 -> 微笑, 8 -> 光彩, 7 -> 辉映-01, 1 -> 小-01, 4 -> 收到-01, 11 -> 圣诞树, 14 -> 午夜, 6 -> 我, 9 -> 幸福-01, 0 -> 使-01, 16 -> 甜蜜-01, 10 -> 灯光, 3 -> 礼品, 13 -> 弥撒),Map(x22 -> 都, x16 -> 光彩, x19 -> 收到-01, x5 -> 音乐, x8 -> 微笑, x15 -> 辉映-01, x21 -> 圣诞节, x7 -> 午夜, x18 -> 礼品, x4 -> 圣诞树, x23 -> 小-01, x3 -> 灯光, x6 -> 弥撒, x20 -> 我, x9 -> 甜蜜-01, x17 -> 幸福-01, x0 -> 使-01))),[Ljava.lang.String;@51ff3c4b,Annotation([Ljava.lang.String;@1472208d,[Ljava.lang.String;@35bd8bc9,[Ljava.lang.String;@6de004f1),Annotation([Ljava.lang.String;@45d56062,[Ljava.lang.String;@4026461d,[Ledu.cmu.lti.nlp.amr.Dependency;@191c6e13),Annotation([Ljava.lang.String;@7436364d,[Ljava.lang.String;@1a8e9ed9,[Ljava.lang.String;@68ea253b),Annotation([Ljava.lang.String;@12fcb2c3,[Ljava.lang.String;@57bd6a8f,[Ledu.cmu.lti.nlp.amr.Entity;@39ab5ef7))
AMR:
(x0 / 使-01, manner, x22 / 都)
(x0 / 使-01, prep-on-behalf, x15 / 辉映-01)
(x0 / 使-01, snt1, x18 / 礼品)
(x0 / 使-01, time, x23 / 小-01)
(x15 / 辉映-01, snt1, x16 / 光彩)
(x16 / 光彩, mod, x17 / 幸福-01)
(x19 / 收到-01, op, x18 / 礼品)
(x19 / 收到-01, time, x21 / 圣诞节)
(x23 / 小-01, ARG0, x20 / 我)
(x3 / 灯光, mod, x7 / 午夜)
(x3 / 灯光, poss, x4 / 圣诞树)
(x5 / 音乐, mod, x6 / 弥撒)
(x5 / 音乐, timezone, x9 / 甜蜜-01)
(x6 / 弥撒, time, x7 / 午夜)
(x8 / 微笑, condition, x0 / 使-01)
(x8 / 微笑, mod, x9 / 甜蜜-01)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
Decoded in 106,521 microseconds
Sentence: “ 你 这里 的 人 在 同 一 个 花园 中 种植 着 五千 朵 玫瑰 。 ” 小 王子 说 ： “ 可是 ， 他们 却 不 能 从 中 找到 自己 所 要 寻找 的 东西 … ”

Oracle Span 1:  东西 => 东西
Oracle Span 2:  人 => 人
Oracle Span 3:  你 => 你
Oracle Span 4:  同 => 同-01
Oracle Span 5:  寻找 => 寻找-01
Oracle Span 6:  小 => 小-01
Oracle Span 7:  找到 => 找到-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  玫瑰 => 玫瑰
Oracle Span 10:  种植 => 种植-01
Oracle Span 11:  能 => 能-01
Oracle Span 12:  花园 => 花园
Oracle Span 13:  要 => 要-03
Oracle Span 14:  说 => 说-01
Oracle Span 15:  这里 => 这里
Spans:
Span 37-38:  东西 => 东西
Span 4-5:  人 => 人
Span 1-2:  你 => 你
Span 6-7:  同 => 同-01
Span 35-36:  寻找 => 寻找-01
Span 18-19:  小 => 小-01
Span 31-32:  找到 => 找到-01
Span 19-20:  王子 => 王子
Span 15-16:  玫瑰 => 玫瑰
Span 11-12:  种植 => 种植-01
Span 28-29:  能 => 能-01
Span 9-10:  花园 => 花园
Span 34-35:  要 => 要-03
Span 20-21:  说 => 说-01
Span 2-3:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 37-38:  东西 => 东西
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  同 => 同-01
Oracle Span 35-36:  寻找 => 寻找-01
Oracle Span 18-19:  小 => 小-01
Oracle Span 31-32:  找到 => 找到-01
Oracle Span 19-20:  王子 => 王子
Oracle Span 15-16:  玫瑰 => 玫瑰
Oracle Span 11-12:  种植 => 种植-01
Oracle Span 28-29:  能 => 能-01
Oracle Span 9-10:  花园 => 花园
Oracle Span 34-35:  要 => 要-03
Oracle Span 20-21:  说 => 说-01
Oracle Span 2-3:  这里 => 这里

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	你	_	PN	PN	_	3	dep	_	_
3	这里	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	人	_	NN	NN	_	12	dep	_	_
6	在	_	P	P	_	12	prep	_	_
7	同	_	DT	DT	_	10	det	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	7	dep	_	_
10	花园	_	NN	NN	_	11	lobj	_	_
11	中	_	LC	LC	_	6	plmod	_	_
12	种植	_	VV	VV	_	21	dep	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	五千	_	CD	CD	_	15	nummod	_	_
15	朵	_	M	M	_	16	clf	_	_
16	玫瑰	_	NN	NN	_	12	dobj	_	_
17	。	_	PU	PU	_	12	punct	_	_
18	”	_	PU	PU	_	12	punct	_	_
19	小	_	JJ	JJ	_	20	amod	_	_
20	王子	_	NN	NN	_	21	nsubj	_	_
21	说	_	VV	VV	_	0	root	_	_
22	：	_	PU	PU	_	21	punct	_	_
23	“	_	PU	PU	_	32	punct	_	_
24	可是	_	AD	AD	_	32	advmod	_	_
25	,	_	PU	PU	_	32	punct	_	_
26	他们	_	PN	PN	_	32	nsubj	_	_
27	却	_	AD	AD	_	32	advmod	_	_
28	不	_	AD	AD	_	32	neg	_	_
29	能	_	VV	VV	_	32	mmod	_	_
30	从	_	P	P	_	32	prep	_	_
31	中	_	NR	NR	_	30	pobj	_	_
32	找到	_	VV	VV	_	21	ccomp	_	_
33	自己	_	PN	PN	_	35	nsubj	_	_
34	所	_	MSP	MSP	_	35	prtmod	_	_
35	要	_	VV	VV	_	39	rcmod	_	_
36	寻找	_	VV	VV	_	35	dep	_	_
37	的	_	DEC	DEC	_	35	cpm	_	_
38	东西	_	NN	NN	_	39	nn	_	_
39	…	_	NN	NN	_	32	dobj	_	_
40	”	_	PU	PU	_	32	punct	_	_

Oracle:
(x25 / 说-01, arg0, x27 / 王子)
(x27 / 王子, mod, x28 / 小-01)
(x30 / 种植-01, arg0, x31 / 人)
(x30 / 种植-01, arg1, x35 / 玫瑰)
(x30 / 种植-01, location, x37 / 花园)
(x31 / 人, location, x33 / 这里)
(x33 / 这里, poss, x34 / 你)
(x37 / 花园, mod, x39 / 同-01)
(x40 / 能-01, arg0, x42 / 找到-01)
(x42 / 找到-01, arg1, x51 / 东西)
(x52 / 寻找-01, arg1, x51 / 东西)
(x54 / 要-03, arg0, x52 / 寻找-01)

Input(Some(Graph((说-01 :arg1 (contrast :arg1 (种植-01 :location (花园 :mod 同-01 :quant 1) :arg1 (玫瑰 :quant 5000) :arg0 (人 :location (这里 :poss 你))) :arg2 (能-01 :arg0 (找到-01 :arg1 (东西 :arg1-of (寻找-01 :arg0-of 要-03 :arg0 x31)) :prep-from x35 :arg0 x31) :polarity -)) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(20,21,List(0),说,说-01,false), Span(11,12,List(1),种植,种植-01,false), Span(9,10,List(2),花园,花园,false), Span(6,7,List(3),同,同-01,false), Span(15,16,List(4),玫瑰,玫瑰,false), Span(4,5,List(5),人,人,false), Span(2,3,List(6),这里,这里,false), Span(1,2,List(7),你,你,false), Span(28,29,List(8),能,能-01,false), Span(31,32,List(9),找到,找到-01,false), Span(37,38,List(10),东西,东西,false), Span(35,36,List(11),寻找,寻找-01,false), Span(34,35,List(12),要,要-03,false), Span(19,20,List(13),王子,王子,false), Span(18,19,List(14),小,小-01,false)),Map(2 -> 花园, 5 -> 人, 12 -> 要-03, 8 -> 能-01, 7 -> 你, 1 -> 种植-01, 4 -> 玫瑰, 11 -> 寻找-01, 14 -> 小-01, 6 -> 这里, 9 -> 找到-01, 0 -> 说-01, 10 -> 东西, 3 -> 同-01, 13 -> 王子),Map(x52 -> 寻找-01, x28 -> 小-01, x34 -> 你, x40 -> 能-01, x37 -> 花园, x25 -> 说-01, x31 -> 人, x39 -> 同-01, x51 -> 东西, x30 -> 种植-01, x54 -> 要-03, x27 -> 王子, x33 -> 这里, x42 -> 找到-01, x35 -> 玫瑰))),[Ljava.lang.String;@517704,Annotation([Ljava.lang.String;@77cca767,[Ljava.lang.String;@4b195203,[Ljava.lang.String;@28a6e171),Annotation([Ljava.lang.String;@23444a36,[Ljava.lang.String;@31a136a6,[Ledu.cmu.lti.nlp.amr.Dependency;@30a9e3db),Annotation([Ljava.lang.String;@2f9b21d6,[Ljava.lang.String;@2e0fdbe9,[Ljava.lang.String;@16a3cc88),Annotation([Ljava.lang.String;@696b52bc,[Ljava.lang.String;@1f884bd6,[Ledu.cmu.lti.nlp.amr.Entity;@4f081b5d))
AMR:
(x25 / 说-01, direction, x27 / 王子)
(x25 / 说-01, location, x35 / 玫瑰)
(x25 / 说-01, purpose, x40 / 能-01)
(x27 / 王子, mod, x28 / 小-01)
(x30 / 种植-01, location, x37 / 花园)
(x30 / 种植-01, purpose, x35 / 玫瑰)
(x31 / 人, location, x33 / 这里)
(x33 / 这里, poss, x34 / 你)
(x37 / 花园, mod, x39 / 同-01)
(x39 / 同-01, instrument, x31 / 人)
(x42 / 找到-01, snt3, x40 / 能-01)
(x52 / 寻找-01, prep-through, x51 / 东西)
(x52 / 寻找-01, topic, x42 / 找到-01)
(x54 / 要-03, prep-through, x52 / 寻找-01)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.1
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1.2.0
WARNING: makeIds can't find span Id: 0.1.1.1.2.0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 76,452 microseconds
Sentence: “ 他们 是 找 不 到 的 。 ”

Oracle Span 1:  他们 => 他们
Spans:
Span 1-2:  他们 => 他们

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他们 => 他们

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	找	_	VV	VV	_	3	attr	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	到	_	VV	VV	_	4	dep	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (找到-01 :polarity - :arg0 他们)),ArrayBuffer(Span(1,2,List(0),他们,他们,false)),Map(0 -> 他们),Map(x8 -> 他们))),[Ljava.lang.String;@474749b8,Annotation([Ljava.lang.String;@740a0d5e,[Ljava.lang.String;@29013ef2,[Ljava.lang.String;@265c1a7c),Annotation([Ljava.lang.String;@5b2b8d86,[Ljava.lang.String;@7fef0b40,[Ledu.cmu.lti.nlp.amr.Dependency;@5f395ce1),Annotation([Ljava.lang.String;@19f02280,[Ljava.lang.String;@1e30db85,[Ljava.lang.String;@19827608),Annotation([Ljava.lang.String;@cc9ef8d,[Ljava.lang.String;@14b528b6,[Ledu.cmu.lti.nlp.amr.Entity;@c412556))
AMR:


WARNING: makeIds can't find span Id: 0.0.1
Decoded in 1,743 microseconds
Sentence: 我 回答 道 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  我 => 我
Spans:
Span 1-2:  回答 => 回答-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)

Input(Some(Graph((回答-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),回答,回答-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 回答-01),Map(x2 -> 我, x0 -> 回答-01))),[Ljava.lang.String;@6f930e0,Annotation([Ljava.lang.String;@450f0235,[Ljava.lang.String;@78c262ba,[Ljava.lang.String;@7d2c9361),Annotation([Ljava.lang.String;@329dc214,[Ljava.lang.String;@fbe70d8,[Ledu.cmu.lti.nlp.amr.Dependency;@64021427),Annotation([Ljava.lang.String;@7d2c345d,[Ljava.lang.String;@217dc48e,[Ljava.lang.String;@5db948c9),Annotation([Ljava.lang.String;@296edc75,[Ljava.lang.String;@357c9bd9,[Ledu.cmu.lti.nlp.amr.Entity;@7aea704c))
AMR:
(x0 / 回答-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,572 microseconds
Sentence: “ 然而 ， 他们 所 寻找 的 东西 却 是 可以 从 一 朵 玫瑰花 或 一点儿 水 中 找到 的 … ”

Oracle Span 1:  一点儿 => 一点儿
Oracle Span 2:  东西 => 东西
Oracle Span 3:  他们 => 他们
Oracle Span 4:  可以 => 可以-01
Oracle Span 5:  寻找 => 寻找-01
Oracle Span 6:  找到 => 找到-01
Oracle Span 7:  水 => 水
Oracle Span 8:  玫瑰花 => 玫瑰花
Spans:
Span 16-17:  一点儿 => 一点儿
Span 7-8:  东西 => 东西
Span 3-4:  他们 => 他们
Span 10-11:  可以 => 可以-01
Span 5-6:  寻找 => 寻找-01
Span 19-20:  找到 => 找到-01
Span 17-18:  水 => 水
Span 14-15:  玫瑰花 => 玫瑰花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  一点儿 => 一点儿
Oracle Span 7-8:  东西 => 东西
Oracle Span 3-4:  他们 => 他们
Oracle Span 10-11:  可以 => 可以-01
Oracle Span 5-6:  寻找 => 寻找-01
Oracle Span 19-20:  找到 => 找到-01
Oracle Span 17-18:  水 => 水
Oracle Span 14-15:  玫瑰花 => 玫瑰花

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	然而	_	AD	AD	_	11	advmod	_	_
3	,	_	PU	PU	_	11	punct	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	所	_	MSP	MSP	_	6	prtmod	_	_
6	寻找	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	东西	_	NN	NN	_	11	nsubj	_	_
9	却	_	AD	AD	_	11	advmod	_	_
10	是	_	VC	VC	_	11	cop	_	_
11	可以	_	VV	VV	_	22	dep	_	_
12	从	_	P	P	_	20	prep	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	朵	_	M	M	_	15	clf	_	_
15	玫瑰花	_	NN	NN	_	18	conj	_	_
16	或	_	CC	CC	_	18	cc	_	_
17	一点儿	_	CD	CD	_	18	nummod	_	_
18	水	_	NN	NN	_	19	lobj	_	_
19	中	_	LC	LC	_	12	plmod	_	_
20	找到	_	VV	VV	_	22	nsubj	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	…	_	VA	VA	_	0	root	_	_
23	”	_	PU	PU	_	22	punct	_	_

Oracle:
(x15 / 可以-01, arg0, x16 / 找到-01)
(x16 / 找到-01, arg0, x17 / 他们)
(x16 / 找到-01, arg1, x18 / 东西)
(x19 / 寻找-01, arg1, x18 / 东西)
(x24 / 水, quant, x25 / 一点儿)

Input(Some(Graph((say :arg1 (contrast :arg2 (可以-01 :arg0 (找到-01 :location (or :op (玫瑰花 :quant 1) :op (水 :quant 一点儿)) :arg1 (东西 :arg1-of (寻找-01 :arg0 x17)) :arg0 他们)))),ArrayBuffer(Span(10,11,List(0),可以,可以-01,false), Span(19,20,List(1),找到,找到-01,false), Span(14,15,List(2),玫瑰花,玫瑰花,false), Span(17,18,List(3),水,水,false), Span(16,17,List(4),一点儿,一点儿,false), Span(7,8,List(5),东西,东西,false), Span(5,6,List(6),寻找,寻找-01,false), Span(3,4,List(7),他们,他们,false)),Map(2 -> 玫瑰花, 5 -> 东西, 7 -> 他们, 1 -> 找到-01, 4 -> 一点儿, 6 -> 寻找-01, 0 -> 可以-01, 3 -> 水),Map(x22 -> 玫瑰花, x16 -> 找到-01, x25 -> 一点儿, x19 -> 寻找-01, x15 -> 可以-01, x24 -> 水, x18 -> 东西, x17 -> 他们))),[Ljava.lang.String;@6d0290d8,Annotation([Ljava.lang.String;@32507479,[Ljava.lang.String;@632383b9,[Ljava.lang.String;@4ae2e781),Annotation([Ljava.lang.String;@339f3a55,[Ljava.lang.String;@2dd63e3,[Ledu.cmu.lti.nlp.amr.Dependency;@7d1c164a),Annotation([Ljava.lang.String;@209f3887,[Ljava.lang.String;@6a98f353,[Ljava.lang.String;@3b35798),Annotation([Ljava.lang.String;@1e00bfe2,[Ljava.lang.String;@4702e7a5,[Ledu.cmu.lti.nlp.amr.Entity;@6a2d867d))
AMR:
(x15 / 可以-01, topic, x18 / 东西)
(x16 / 找到-01, topic, x24 / 水)
(x19 / 寻找-01, prep-through, x18 / 东西)
(x19 / 寻找-01, topic, x17 / 他们)
(x22 / 玫瑰花, mod, x18 / 东西)
(x24 / 水, quant, x25 / 一点儿)
(x25 / 一点儿, part, x22 / 玫瑰花)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 22,808 microseconds
Sentence: “ 一点 不错 。 ”

Oracle Span 1:  一点 => 一点
Spans:
Span 1-2:  一点 => 一点

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (错-01 :polarity - :degree 一点)),ArrayBuffer(Span(1,2,List(0),一点,一点,false)),Map(0 -> 一点),Map(x8 -> 一点))),[Ljava.lang.String;@73bb1337,Annotation([Ljava.lang.String;@685f5d0d,[Ljava.lang.String;@3830b06c,[Ljava.lang.String;@3e28d779),Annotation([Ljava.lang.String;@15214920,[Ljava.lang.String;@784d9bc,[Ledu.cmu.lti.nlp.amr.Dependency;@3a0aaaf0),Annotation([Ljava.lang.String;@426131d7,[Ljava.lang.String;@5d9618f2,[Ljava.lang.String;@7c7e73c5),Annotation([Ljava.lang.String;@13cc0b90,[Ljava.lang.String;@58687fb7,[Ledu.cmu.lti.nlp.amr.Entity;@3554bdc0))
AMR:


WARNING: makeIds can't find span Id: 0.0.1
Decoded in 1,422 microseconds
Sentence: 我 回答 道 。

Oracle Span 1:  回答 => 回答-01
Oracle Span 2:  我 => 我
Spans:
Span 1-2:  回答 => 回答-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)

Input(Some(Graph((回答-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),回答,回答-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 回答-01),Map(x2 -> 我, x0 -> 回答-01))),[Ljava.lang.String;@3a3b10f4,Annotation([Ljava.lang.String;@49580ca8,[Ljava.lang.String;@525647f3,[Ljava.lang.String;@42fc4ac4),Annotation([Ljava.lang.String;@20a24edf,[Ljava.lang.String;@29962b2f,[Ledu.cmu.lti.nlp.amr.Dependency;@491f8831),Annotation([Ljava.lang.String;@691541bc,[Ljava.lang.String;@5b733ef7,[Ljava.lang.String;@43a4a9e5),Annotation([Ljava.lang.String;@764fffa0,[Ljava.lang.String;@35145874,[Ledu.cmu.lti.nlp.amr.Entity;@77524ca7))
AMR:
(x0 / 回答-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,678 microseconds
Sentence: 小 王子 又 加 了 一 句 ： “ 眼睛 是 什么 也 看 不 见 的 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  加 => 加-01
Oracle Span 4:  又 => 又
Oracle Span 5:  句 => 句
Oracle Span 6:  小 => 小-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  眼睛 => 眼睛
Spans:
Span 12-13:  也 => 也
Span 11-12:  什么 => 什么
Span 3-4:  加 => 加-01
Span 2-3:  又 => 又
Span 6-7:  句 => 句
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 9-10:  眼睛 => 眼睛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  也 => 也
Oracle Span 11-12:  什么 => 什么
Oracle Span 3-4:  加 => 加-01
Oracle Span 2-3:  又 => 又
Oracle Span 6-7:  句 => 句
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 9-10:  眼睛 => 眼睛

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	加	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	句	_	NN	NN	_	4	dobj	_	_
8	：	_	PU	PU	_	4	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	眼睛	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	4	conj	_	_
12	什么	_	PN	PN	_	16	nsubj	_	_
13	也	_	AD	AD	_	16	advmod	_	_
14	看	_	VV	VV	_	16	mmod	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	见	_	VV	VV	_	11	attr	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 加-01, arg0, x2 / 王子)
(x0 / 加-01, arg1, x11 / 句)
(x0 / 加-01, manner, x4 / 又)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph((加-01 :arg1 (句 :arg0-of (mean :arg1 (possible :polarity - :arg0 (看见-01 :arg0 眼睛 :arg1 什么 :manner 也))) :quant 1) :manner 又 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(3,4,List(0),加,加-01,false), Span(6,7,List(1),句,句,false), Span(9,10,List(2),眼睛,眼睛,false), Span(11,12,List(3),什么,什么,false), Span(12,13,List(4),也,也,false), Span(2,3,List(5),又,又,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小-01,false)),Map(2 -> 眼睛, 5 -> 又, 7 -> 小-01, 1 -> 句, 4 -> 也, 6 -> 王子, 0 -> 加-01, 3 -> 什么),Map(x22 -> 眼睛, x2 -> 王子, x24 -> 也, x4 -> 又, x23 -> 什么, x3 -> 小-01, x11 -> 句, x0 -> 加-01))),[Ljava.lang.String;@11df2829,Annotation([Ljava.lang.String;@18e4674d,[Ljava.lang.String;@f245bdd,[Ljava.lang.String;@6af609ea),Annotation([Ljava.lang.String;@280fafd,[Ljava.lang.String;@39e53bef,[Ledu.cmu.lti.nlp.amr.Dependency;@14b275bd),Annotation([Ljava.lang.String;@4ed18798,[Ljava.lang.String;@4b03cbad,[Ljava.lang.String;@5b29ab61),Annotation([Ljava.lang.String;@5c313224,[Ljava.lang.String;@1e1e837d,[Ledu.cmu.lti.nlp.amr.Entity;@4b957db0))
AMR:
(x0 / 加-01, manner, x4 / 又)
(x0 / 加-01, unit, x11 / 句)
(x0 / 加-01, value, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x22 / 眼睛, poss, x11 / 句)
(x23 / 什么, mod, x11 / 句)
(x24 / 也, poss, x23 / 什么)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1.0.1.0
WARNING: makeIds can't find span Id: 0.2.1.0.1.1
WARNING: makeIds can't find span Id: 0.2.1.0.1.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 22,378 microseconds
Sentence: 应该 用 心 去 寻找 。 ”

Oracle Span 1:  去 => 去-01
Oracle Span 2:  寻找 => 寻找-01
Oracle Span 3:  应该 => 应该-02
Spans:
Span 3-4:  去 => 去-01
Span 4-5:  寻找 => 寻找-01
Span 0-1:  应该 => 应该-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  去 => 去-01
Oracle Span 4-5:  寻找 => 寻找-01
Oracle Span 0-1:  应该 => 应该-02

Dependencies:
1	应该	_	VV	VV	_	2	mmod	_	_
2	用	_	VV	VV	_	0	root	_	_
3	心	_	NN	NN	_	2	dobj	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	寻找	_	VV	VV	_	2	dep	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 去-01, arg1, x12 / 寻找-01)

Input(Some(Graph((say :arg1 (应该-02 :arg0 (用心-01 :arg1 (去-01 :arg1 寻找-01)))),ArrayBuffer(Span(0,1,List(0),应该,应该-02,false), Span(3,4,List(1),去,去-01,false), Span(4,5,List(2),寻找,寻找-01,false)),Map(2 -> 寻找-01, 1 -> 去-01, 0 -> 应该-02),Map(x12 -> 寻找-01, x11 -> 去-01, x9 -> 应该-02))),[Ljava.lang.String;@5d71b500,Annotation([Ljava.lang.String;@8840c98,[Ljava.lang.String;@626b639e,[Ljava.lang.String;@273fa9e),Annotation([Ljava.lang.String;@527a8665,[Ljava.lang.String;@7ab2a07e,[Ledu.cmu.lti.nlp.amr.Dependency;@437c4b25),Annotation([Ljava.lang.String;@5ec6fede,[Ljava.lang.String;@580902cd,[Ljava.lang.String;@3757e8e2),Annotation([Ljava.lang.String;@1653b84e,[Ljava.lang.String;@7f8a9454,[Ledu.cmu.lti.nlp.amr.Entity;@6f85ee02))
AMR:
(x11 / 去-01, ord, x12 / 寻找-01)
(x9 / 应该-02, prep-on-behalf, x11 / 去-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 3,777 microseconds
Sentence: 我 喝 了 水 。

Oracle Span 1:  喝 => 喝-01
Oracle Span 2:  我 => 我
Oracle Span 3:  水 => 水
Spans:
Span 1-2:  喝 => 喝-01
Span 0-1:  我 => 我
Span 3-4:  水 => 水

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  喝 => 喝-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  水 => 水

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	喝	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	水	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 喝-01, arg0, x2 / 我)
(x0 / 喝-01, arg1, x4 / 水)

Input(Some(Graph((喝-01 :arg1 水 :arg0 我),ArrayBuffer(Span(1,2,List(0),喝,喝-01,false), Span(3,4,List(1),水,水,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 水, 0 -> 喝-01),Map(x2 -> 我, x4 -> 水, x0 -> 喝-01))),[Ljava.lang.String;@679d0be8,Annotation([Ljava.lang.String;@6c075e9d,[Ljava.lang.String;@47044f7d,[Ljava.lang.String;@7b14c61),Annotation([Ljava.lang.String;@8fcc534,[Ljava.lang.String;@5e599100,[Ledu.cmu.lti.nlp.amr.Dependency;@3b435211),Annotation([Ljava.lang.String;@361cd35c,[Ljava.lang.String;@58a765ce,[Ljava.lang.String;@4a642e4b),Annotation([Ljava.lang.String;@6b162ecc,[Ljava.lang.String;@3b4086c1,[Ledu.cmu.lti.nlp.amr.Entity;@58aa1d72))
AMR:
(x0 / 喝-01, mod, x4 / 水)
(x0 / 喝-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,039 microseconds
Sentence: 我 痛快 地 呼吸 着 空气 。

Oracle Span 1:  呼吸 => 呼吸-01
Oracle Span 2:  我 => 我
Oracle Span 3:  痛快 => 痛快-01
Oracle Span 4:  空气 => 空气
Spans:
Span 3-4:  呼吸 => 呼吸-01
Span 0-1:  我 => 我
Span 1-2:  痛快 => 痛快-01
Span 5-6:  空气 => 空气

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  呼吸 => 呼吸-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  痛快 => 痛快-01
Oracle Span 5-6:  空气 => 空气

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	痛快	_	VA	VA	_	5	dep	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	呼吸	_	NN	NN	_	5	prep	_	_
5	着	_	VV	VV	_	0	root	_	_
6	空气	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 呼吸-01, arg0, x1 / 我)
(x0 / 呼吸-01, arg1, x4 / 空气)
(x0 / 呼吸-01, manner, x3 / 痛快-01)

Input(Some(Graph((呼吸-01 :arg1 空气 :manner 痛快-01 :arg0 我),ArrayBuffer(Span(3,4,List(0),呼吸,呼吸-01,false), Span(5,6,List(1),空气,空气,false), Span(1,2,List(2),痛快,痛快-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 痛快-01, 1 -> 空气, 0 -> 呼吸-01, 3 -> 我),Map(x1 -> 我, x4 -> 空气, x3 -> 痛快-01, x0 -> 呼吸-01))),[Ljava.lang.String;@33d7765a,Annotation([Ljava.lang.String;@69ed5ea2,[Ljava.lang.String;@56a4abd0,[Ljava.lang.String;@5eed6dfb),Annotation([Ljava.lang.String;@5600a5da,[Ljava.lang.String;@551be9f6,[Ledu.cmu.lti.nlp.amr.Dependency;@269222ae),Annotation([Ljava.lang.String;@13250132,[Ljava.lang.String;@40d848f9,[Ljava.lang.String;@4a864d4d),Annotation([Ljava.lang.String;@7d3691e1,[Ljava.lang.String;@46a123e4,[Ledu.cmu.lti.nlp.amr.Entity;@44bc2449))
AMR:
(x0 / 呼吸-01, ARG3, x4 / 空气)
(x0 / 呼吸-01, ARG5, x1 / 我)
(x0 / 呼吸-01, manner, x3 / 痛快-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,345 microseconds
Sentence: 沙漠 在 晨曦 中 泛出 蜂蜜 的 光泽 。

Oracle Span 1:  光泽 => 光泽
Oracle Span 2:  晨曦 => 晨曦
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  泛出 => 泛出
Oracle Span 5:  蜂蜜 => 蜂蜜
Spans:
Span 7-8:  光泽 => 光泽
Span 2-3:  晨曦 => 晨曦
Span 0-1:  沙漠 => 沙漠
Span 4-5:  泛出 => 泛出
Span 5-6:  蜂蜜 => 蜂蜜

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  光泽 => 光泽
Oracle Span 2-3:  晨曦 => 晨曦
Oracle Span 0-1:  沙漠 => 沙漠
Oracle Span 4-5:  泛出 => 泛出
Oracle Span 5-6:  蜂蜜 => 蜂蜜

Dependencies:
1	沙漠	_	NN	NN	_	5	nsubj	_	_
2	在	_	P	P	_	5	prep	_	_
3	晨曦	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	2	plmod	_	_
5	泛出	_	VV	VV	_	0	root	_	_
6	蜂蜜	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	光泽	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x4 / 泛出, arg0, x6 / 沙漠)
(x4 / 泛出, arg1, x7 / 光泽)
(x4 / 泛出, time, x9 / 晨曦)
(x7 / 光泽, mod, x8 / 蜂蜜)

Input(Some(Graph((泛出 :time 晨曦 :arg1 (光泽 :mod 蜂蜜) :arg0 沙漠),ArrayBuffer(Span(4,5,List(0),泛出,泛出,false), Span(2,3,List(1),晨曦,晨曦,false), Span(7,8,List(2),光泽,光泽,false), Span(5,6,List(3),蜂蜜,蜂蜜,false), Span(0,1,List(4),沙漠,沙漠,false)),Map(2 -> 光泽, 1 -> 晨曦, 4 -> 沙漠, 0 -> 泛出, 3 -> 蜂蜜),Map(x8 -> 蜂蜜, x7 -> 光泽, x4 -> 泛出, x6 -> 沙漠, x9 -> 晨曦))),[Ljava.lang.String;@3c28e5b6,Annotation([Ljava.lang.String;@7558c24b,[Ljava.lang.String;@3a296107,[Ljava.lang.String;@1f129467),Annotation([Ljava.lang.String;@646cd766,[Ljava.lang.String;@57151b3a,[Ledu.cmu.lti.nlp.amr.Dependency;@26457986),Annotation([Ljava.lang.String;@2dff7085,[Ljava.lang.String;@2faa55bb,[Ljava.lang.String;@501957bf),Annotation([Ljava.lang.String;@5d1d9d73,[Ljava.lang.String;@b30a50d,[Ledu.cmu.lti.nlp.amr.Entity;@764a3e5d))
AMR:
(x4 / 泛出, mod, x7 / 光泽)
(x4 / 泛出, source, x6 / 沙漠)
(x4 / 泛出, time, x9 / 晨曦)
(x7 / 光泽, mod, x8 / 蜂蜜)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 9,118 microseconds
Sentence: 这 蜂蜜 般 的 光泽 也 使 我 感到 幸福 。

Oracle Span 1:  也 => 也
Oracle Span 2:  使 => 使-01
Oracle Span 3:  光泽 => 光泽
Oracle Span 4:  幸福 => 幸福-01
Oracle Span 5:  感到 => 感到-01
Oracle Span 6:  我 => 我
Oracle Span 7:  这 => 这
Spans:
Span 5-6:  也 => 也
Span 6-7:  使 => 使-01
Span 4-5:  光泽 => 光泽
Span 9-10:  幸福 => 幸福-01
Span 8-9:  感到 => 感到-01
Span 7-8:  我 => 我
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 6-7:  使 => 使-01
Oracle Span 4-5:  光泽 => 光泽
Oracle Span 9-10:  幸福 => 幸福-01
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 7-8:  我 => 我
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	蜂蜜	_	NN	NN	_	3	nsubj	_	_
3	般	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	光泽	_	NN	NN	_	7	nsubj	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	使	_	VV	VV	_	0	root	_	_
8	我	_	PN	PN	_	7	dobj	_	_
9	感到	_	VV	VV	_	7	dep	_	_
10	幸福	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 使-01, arg0, x2 / 光泽)
(x0 / 使-01, arg1, x5 / 我)
(x0 / 使-01, arg2, x8 / 感到-01)
(x0 / 使-01, manner, x7 / 也)
(x2 / 光泽, mod, x4 / 这)
(x8 / 感到-01, arg1, x10 / 幸福-01)

Input(Some(Graph((使-01 :arg2 (感到-01 :arg1 幸福-01 :arg0 x5) :manner 也 :arg1 我 :arg0 (光泽 :mod 这 :mod 蜂蜜般)),ArrayBuffer(Span(6,7,List(0),使,使-01,false), Span(8,9,List(1),感到,感到-01,false), Span(9,10,List(2),幸福,幸福-01,false), Span(5,6,List(3),也,也,false), Span(7,8,List(4),我,我,false), Span(4,5,List(5),光泽,光泽,false), Span(0,1,List(6),这,这,false)),Map(2 -> 幸福-01, 5 -> 光泽, 1 -> 感到-01, 4 -> 我, 6 -> 这, 0 -> 使-01, 3 -> 也),Map(x2 -> 光泽, x10 -> 幸福-01, x5 -> 我, x8 -> 感到-01, x7 -> 也, x4 -> 这, x0 -> 使-01))),[Ljava.lang.String;@6c742b84,Annotation([Ljava.lang.String;@5db3d57c,[Ljava.lang.String;@53a50b0a,[Ljava.lang.String;@74ba6ff5),Annotation([Ljava.lang.String;@395f52ed,[Ljava.lang.String;@7a84788f,[Ledu.cmu.lti.nlp.amr.Dependency;@102c18e),Annotation([Ljava.lang.String;@26e0d39c,[Ljava.lang.String;@65eb3597,[Ljava.lang.String;@3c7279a5),Annotation([Ljava.lang.String;@2bebd114,[Ljava.lang.String;@b379bc6,[Ledu.cmu.lti.nlp.amr.Entity;@374c40ba))
AMR:
(x0 / 使-01, manner, x7 / 也)
(x0 / 使-01, mode, x2 / 光泽)
(x0 / 使-01, prep-on-behalf, x8 / 感到-01)
(x0 / 使-01, value, x5 / 我)
(x2 / 光泽, mod, x4 / 这)
(x8 / 感到-01, prep-within, x10 / 幸福-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 15,429 microseconds
Sentence: 为什么 我 要 难过 …

Oracle Span 1:  我 => 我
Oracle Span 2:  要 => 要-03
Oracle Span 3:  难过 => 难过-01
Spans:
Span 1-2:  我 => 我
Span 2-3:  要 => 要-03
Span 3-4:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 3-4:  难过 => 难过-01

Dependencies:
1	为什么	_	NR	NR	_	3	nsubj	_	_
2	我	_	PN	PN	_	3	dep	_	_
3	要	_	VV	VV	_	0	root	_	_
4	难过	_	PU	PU	_	3	punct	_	_
5	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 要-03, arg0, x2 / 难过-01)
(x2 / 难过-01, arg0, x3 / 我)

Input(Some(Graph((要-03 :arg0 (难过-01 :cause amr-unknown :arg0 我)),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(3,4,List(1),难过,难过-01,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 难过-01, 0 -> 要-03),Map(x2 -> 难过-01, x3 -> 我, x0 -> 要-03))),[Ljava.lang.String;@18dcb8a7,Annotation([Ljava.lang.String;@6dcab9d9,[Ljava.lang.String;@5a14e60d,[Ljava.lang.String;@f882465),Annotation([Ljava.lang.String;@72ecbcb3,[Ljava.lang.String;@4a50c746,[Ledu.cmu.lti.nlp.amr.Dependency;@3709748f),Annotation([Ljava.lang.String;@79ecc507,[Ljava.lang.String;@6ef2f7ad,[Ljava.lang.String;@22d477c2),Annotation([Ljava.lang.String;@5e85c21b,[Ljava.lang.String;@41def031,[Ledu.cmu.lti.nlp.amr.Entity;@38e83838))
AMR:
(x0 / 要-03, condition, x2 / 难过-01)
(x0 / 要-03, decade, x3 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,644 microseconds
Sentence: 小 王子 又 重新 在 我 的 身边 坐下 。 他 温柔 地 对 我 说 ： “ 你 应该 实践 你 的 诺言 。 ”

Oracle Span 1:  又 => 又
Oracle Span 2:  坐下 => 坐下-01
Oracle Span 3:  实践 => 实践-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  应该 => 应该-02
Oracle Span 6:  我 => 我
Oracle Span 7:  温柔 => 温柔-01
Oracle Span 8:  王子 => 王子
Oracle Span 9:  说 => 说-01
Oracle Span 10:  诺言 => 诺言
Oracle Span 11:  身边 => 身边
Oracle Span 12:  重新 => 重新-01
Spans:
Span 2-3:  又 => 又
Span 8-9:  坐下 => 坐下-01
Span 20-21:  实践 => 实践-01
Span 0-1:  小 => 小-01
Span 19-20:  应该 => 应该-02
Span 5-6:  我 => 我
Span 11-12:  温柔 => 温柔-01
Span 1-2:  王子 => 王子
Span 15-16:  说 => 说-01
Span 23-24:  诺言 => 诺言
Span 7-8:  身边 => 身边
Span 3-4:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 8-9:  坐下 => 坐下-01
Oracle Span 20-21:  实践 => 实践-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 19-20:  应该 => 应该-02
Oracle Span 5-6:  我 => 我
Oracle Span 11-12:  温柔 => 温柔-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  说 => 说-01
Oracle Span 23-24:  诺言 => 诺言
Oracle Span 7-8:  身边 => 身边
Oracle Span 3-4:  重新 => 重新-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	9	nsubj	_	_
3	又	_	AD	AD	_	9	advmod	_	_
4	重新	_	AD	AD	_	9	advmod	_	_
5	在	_	P	P	_	9	prep	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	身边	_	NN	NN	_	5	pobj	_	_
9	坐下	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	他	_	PN	PN	_	16	nsubj	_	_
12	温柔	_	NR	NR	_	13	nn	_	_
13	地	_	NN	NN	_	16	nsubj	_	_
14	对	_	P	P	_	16	prep	_	_
15	我	_	PN	PN	_	14	pobj	_	_
16	说	_	VV	VV	_	9	conj	_	_
17	：	_	PU	PU	_	16	punct	_	_
18	“	_	PU	PU	_	20	punct	_	_
19	你	_	PN	PN	_	20	nsubj	_	_
20	应该	_	VV	VV	_	16	ccomp	_	_
21	实践	_	NN	NN	_	24	nn	_	_
22	你	_	PN	PN	_	24	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	诺言	_	NN	NN	_	20	dobj	_	_
25	。	_	PU	PU	_	9	punct	_	_
26	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 应该-02, arg0, x12 / 实践-01)
(x12 / 实践-01, arg1, x15 / 诺言)
(x2 / 坐下-01, arg0, x3 / 王子)
(x2 / 坐下-01, location, x5 / 身边)
(x2 / 坐下-01, manner, x7 / 重新-01)
(x2 / 坐下-01, manner, x8 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 身边, location, x6 / 我)
(x9 / 说-01, arg1, x11 / 应该-02)
(x9 / 说-01, manner, x16 / 温柔-01)

Input(Some(Graph((multi-sentence :snt1 (坐下-01 :manner 又 :manner 重新-01 :location (身边 :location 我) :arg0 (王子 :mod 小-01)) :snt2 (说-01 :arg3 x6 :manner 温柔-01 :arg1 (应该-02 :arg0 (实践-01 :arg1 诺言 :arg0 x6)) :arg0 x3)),ArrayBuffer(Span(8,9,List(0),坐下,坐下-01,false), Span(2,3,List(1),又,又,false), Span(3,4,List(2),重新,重新-01,false), Span(7,8,List(3),身边,身边,false), Span(5,6,List(4),我,我,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小-01,false), Span(15,16,List(7),说,说-01,false), Span(11,12,List(8),温柔,温柔-01,false), Span(19,20,List(9),应该,应该-02,false), Span(20,21,List(10),实践,实践-01,false), Span(23,24,List(11),诺言,诺言,false)),Map(2 -> 重新-01, 5 -> 王子, 8 -> 温柔-01, 7 -> 说-01, 1 -> 又, 4 -> 我, 11 -> 诺言, 6 -> 小-01, 9 -> 应该-02, 0 -> 坐下-01, 10 -> 实践-01, 3 -> 身边),Map(x16 -> 温柔-01, x2 -> 坐下-01, x5 -> 身边, x8 -> 又, x12 -> 实践-01, x15 -> 诺言, x7 -> 重新-01, x4 -> 小-01, x11 -> 应该-02, x3 -> 王子, x6 -> 我, x9 -> 说-01))),[Ljava.lang.String;@39832280,Annotation([Ljava.lang.String;@4966bab1,[Ljava.lang.String;@7f0f84d4,[Ljava.lang.String;@6df4af5),Annotation([Ljava.lang.String;@26e8ff8c,[Ljava.lang.String;@5aa76ad2,[Ledu.cmu.lti.nlp.amr.Dependency;@590d6c76),Annotation([Ljava.lang.String;@25791d40,[Ljava.lang.String;@448c92fc,[Ljava.lang.String;@251c8145),Annotation([Ljava.lang.String;@17c0274c,[Ljava.lang.String;@7abeabe9,[Ledu.cmu.lti.nlp.amr.Entity;@5a05dd30))
AMR:
(x11 / 应该-02, value, x12 / 实践-01)
(x12 / 实践-01, degree, x15 / 诺言)
(x2 / 坐下-01, location, x5 / 身边)
(x2 / 坐下-01, manner, x7 / 重新-01)
(x2 / 坐下-01, purpose, x16 / 温柔-01)
(x3 / 王子, mod, x4 / 小-01)
(x3 / 王子, value, x7 / 重新-01)
(x5 / 身边, location, x6 / 我)
(x7 / 重新-01, manner, x8 / 又)
(x9 / 说-01, ARG6, x11 / 应该-02)
(x9 / 说-01, manner, x16 / 温柔-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
Decoded in 47,450 microseconds
Sentence: “ 什么 诺言 ？ ”

Oracle Span 1:  诺言 => 诺言
Spans:
Span 2-3:  诺言 => 诺言

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  诺言 => 诺言

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	诺言	_	VV	VV	_	0	root	_	_
4	？	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (诺言 :mode interrogative :topic amr-unknown)),ArrayBuffer(Span(2,3,List(0),诺言,诺言,false)),Map(0 -> 诺言),Map(x6 -> 诺言))),[Ljava.lang.String;@1b52699c,Annotation([Ljava.lang.String;@dbed7fd,[Ljava.lang.String;@250d440,[Ljava.lang.String;@76c86567),Annotation([Ljava.lang.String;@7e5efcab,[Ljava.lang.String;@5a4dda2,[Ledu.cmu.lti.nlp.amr.Dependency;@1d2fb82),Annotation([Ljava.lang.String;@34045582,[Ljava.lang.String;@3db65c0d,[Ljava.lang.String;@1edccfd4),Annotation([Ljava.lang.String;@8c43966,[Ljava.lang.String;@1efac5b9,[Ledu.cmu.lti.nlp.amr.Entity;@11a3a45f))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,291 microseconds
Sentence: “ 你 知道 … 给 我 的 小 羊 一 个 嘴套子 …

Oracle Span 1:  你 => 你
Oracle Span 2:  嘴套子 => 嘴套子
Oracle Span 3:  小 => 小-01
Oracle Span 4:  我 => 我
Oracle Span 5:  知道 => 知道-01
Oracle Span 6:  给 => 给-01
Oracle Span 7:  羊 => 羊
Spans:
Span 1-2:  你 => 你
Span 11-12:  嘴套子 => 嘴套子
Span 7-8:  小 => 小-01
Span 5-6:  我 => 我
Span 2-3:  知道 => 知道-01
Span 4-5:  给 => 给-01
Span 8-9:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 11-12:  嘴套子 => 嘴套子
Oracle Span 7-8:  小 => 小-01
Oracle Span 5-6:  我 => 我
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 4-5:  给 => 给-01
Oracle Span 8-9:  羊 => 羊

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	…	_	PU	PU	_	3	punct	_	_
5	给	_	P	P	_	9	assmod	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	的	_	DEG	DEG	_	5	assm	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	羊	_	NN	NN	_	11	nsubj	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	3	conj	_	_
12	嘴套子	_	PU	PU	_	3	punct	_	_
13	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 知道-01, arg0, x14 / 你)
(x13 / 知道-01, arg1, x15 / 给-01)
(x15 / 给-01, arg1, x16 / 嘴套子)
(x15 / 给-01, arg2, x18 / 羊)
(x18 / 羊, mod, x19 / 小-01)
(x18 / 羊, poss, x20 / 我)

Input(Some(Graph((say :arg1 (知道-01 :arg1 (给-01 :arg2 (羊 :poss 我 :mod 小-01) :arg1 (嘴套子 :quant 1)) :arg0 你)),ArrayBuffer(Span(2,3,List(0),知道,知道-01,false), Span(4,5,List(1),给,给-01,false), Span(8,9,List(2),羊,羊,false), Span(5,6,List(3),我,我,false), Span(7,8,List(4),小,小-01,false), Span(11,12,List(5),嘴套子,嘴套子,false), Span(1,2,List(6),你,你,false)),Map(2 -> 羊, 5 -> 嘴套子, 1 -> 给-01, 4 -> 小-01, 6 -> 你, 0 -> 知道-01, 3 -> 我),Map(x16 -> 嘴套子, x19 -> 小-01, x13 -> 知道-01, x15 -> 给-01, x18 -> 羊, x14 -> 你, x20 -> 我))),[Ljava.lang.String;@69796bd0,Annotation([Ljava.lang.String;@40df6090,[Ljava.lang.String;@8c0a23f,[Ljava.lang.String;@44d7e24),Annotation([Ljava.lang.String;@26c8b296,[Ljava.lang.String;@1d289d3f,[Ledu.cmu.lti.nlp.amr.Dependency;@10f405ff),Annotation([Ljava.lang.String;@7f27f59b,[Ljava.lang.String;@1c98b4eb,[Ljava.lang.String;@45801322),Annotation([Ljava.lang.String;@756b2d90,[Ljava.lang.String;@3520958b,[Ledu.cmu.lti.nlp.amr.Entity;@6cc64028))
AMR:
(x13 / 知道-01, direction, x14 / 你)
(x13 / 知道-01, prep-through, x15 / 给-01)
(x15 / 给-01, purpose, x18 / 羊)
(x15 / 给-01, subset, x20 / 我)
(x18 / 羊, location, x16 / 嘴套子)
(x18 / 羊, mod, x19 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 16,127 microseconds
Sentence: 我 要 对 我 的 花 负责 的 呀 ！ ”

Oracle Span 1:  我 => 我
Oracle Span 2:  我 => 我
Oracle Span 3:  花 => 花
Oracle Span 4:  要 => 要-03
Oracle Span 5:  负责 => 负责-01
Spans:
Span 0-1:  我 => 我
Span 3-4:  我 => 我
Span 5-6:  花 => 花
Span 1-2:  要 => 要-03
Span 6-7:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  花 => 花
Oracle Span 1-2:  要 => 要-03
Oracle Span 6-7:  负责 => 负责-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	要	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	7	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	花	_	NN	NN	_	3	pobj	_	_
7	负责	_	VV	VV	_	2	dobj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	呀	_	SP	SP	_	2	dep	_	_
10	！	_	PU	PU	_	2	punct	_	_
11	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 花, poss, x12 / 我)
(x8 / 要-03, arg0, x9 / 负责-01)
(x9 / 负责-01, arg0, x10 / 我)
(x9 / 负责-01, arg1, x11 / 花)

Input(Some(Graph((say :arg1 (要-03 :mode expressive :arg0 (负责-01 :arg1 (花 :poss 我) :arg0 我))),ArrayBuffer(Span(1,2,List(0),要,要-03,false), Span(6,7,List(1),负责,负责-01,false), Span(5,6,List(2),花,花,false), Span(0,1,List(3),我,我,false), Span(3,4,List(4),我,我,false)),Map(2 -> 花, 1 -> 负责-01, 4 -> 我, 0 -> 要-03, 3 -> 我),Map(x10 -> 我, x8 -> 要-03, x12 -> 我, x11 -> 花, x9 -> 负责-01))),[Ljava.lang.String;@291a4791,Annotation([Ljava.lang.String;@5b1e88f,[Ljava.lang.String;@340cb97f,[Ljava.lang.String;@6a1568d6),Annotation([Ljava.lang.String;@11c88cca,[Ljava.lang.String;@1b37fbec,[Ledu.cmu.lti.nlp.amr.Dependency;@4a216eb4),Annotation([Ljava.lang.String;@bb3ecfe,[Ljava.lang.String;@5ec88f9e,[Ljava.lang.String;@7a04f730),Annotation([Ljava.lang.String;@3b11620a,[Ljava.lang.String;@2fd1ad8a,[Ledu.cmu.lti.nlp.amr.Entity;@357f6391))
AMR:
(x8 / 要-03, decade, x12 / 我)
(x8 / 要-03, polite, x9 / 负责-01)
(x9 / 负责-01, beneficiary, x11 / 花)
(x9 / 负责-01, poss, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 9,459 microseconds
Sentence: 我 从 口袋 中 拿出 我 的 画稿 。

Oracle Span 1:  口袋 => 口袋
Oracle Span 2:  我 => 我
Oracle Span 3:  拿出 => 拿出-01
Oracle Span 4:  画稿 => 画稿
Spans:
Span 2-3:  口袋 => 口袋
Span 0-1:  我 => 我
Span 4-5:  拿出 => 拿出-01
Span 7-8:  画稿 => 画稿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  口袋 => 口袋
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  拿出 => 拿出-01
Oracle Span 7-8:  画稿 => 画稿

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	从	_	P	P	_	5	prep	_	_
3	口袋	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	2	plmod	_	_
5	拿出	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	画稿	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 拿出-01, arg0, x2 / 我)
(x0 / 拿出-01, arg1, x3 / 画稿)
(x3 / 画稿, location, x5 / 口袋)

Input(Some(Graph((拿出-01 :arg1 (画稿 :location 口袋 :poss x2) :arg0 我),ArrayBuffer(Span(4,5,List(0),拿出,拿出-01,false), Span(7,8,List(1),画稿,画稿,false), Span(2,3,List(2),口袋,口袋,false), Span(0,1,List(3),我,我,false)),Map(2 -> 口袋, 1 -> 画稿, 0 -> 拿出-01, 3 -> 我),Map(x2 -> 我, x5 -> 口袋, x3 -> 画稿, x0 -> 拿出-01))),[Ljava.lang.String;@689faf79,Annotation([Ljava.lang.String;@582e9152,[Ljava.lang.String;@7a31ca20,[Ljava.lang.String;@349c4d1c),Annotation([Ljava.lang.String;@21edd891,[Ljava.lang.String;@de579ff,[Ledu.cmu.lti.nlp.amr.Dependency;@7971c2a9),Annotation([Ljava.lang.String;@2fd39436,[Ljava.lang.String;@60b5e80d,[Ljava.lang.String;@46394f65),Annotation([Ljava.lang.String;@31aab981,[Ljava.lang.String;@26be9a6,[Ledu.cmu.lti.nlp.amr.Entity;@4d518c66))
AMR:
(x0 / 拿出-01, prep-through, x2 / 我)
(x0 / 拿出-01, snt3, x3 / 画稿)
(x3 / 画稿, location, x5 / 口袋)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,072 microseconds
Sentence: 小 王子 瞅见 了 ， 笑 着 说 ： “ 你 画 的 猴面包树 ， 有点 象 白菜 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  小 => 小-01
Oracle Span 3:  有点 => 有点
Oracle Span 4:  猴面包树 => 猴面包树
Oracle Span 5:  王子 => 王子
Oracle Span 6:  画 => 画-01
Oracle Span 7:  白菜 => 白菜
Oracle Span 8:  瞅见 => 瞅见-01
Oracle Span 9:  笑 => 笑-01
Oracle Span 10:  说 => 说-01
Spans:
Span 10-11:  你 => 你
Span 0-1:  小 => 小-01
Span 15-16:  有点 => 有点
Span 13-14:  猴面包树 => 猴面包树
Span 1-2:  王子 => 王子
Span 11-12:  画 => 画-01
Span 17-18:  白菜 => 白菜
Span 2-3:  瞅见 => 瞅见-01
Span 5-6:  笑 => 笑-01
Span 7-8:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  你 => 你
Oracle Span 0-1:  小 => 小-01
Oracle Span 15-16:  有点 => 有点
Oracle Span 13-14:  猴面包树 => 猴面包树
Oracle Span 1-2:  王子 => 王子
Oracle Span 11-12:  画 => 画-01
Oracle Span 17-18:  白菜 => 白菜
Oracle Span 2-3:  瞅见 => 瞅见-01
Oracle Span 5-6:  笑 => 笑-01
Oracle Span 7-8:  说 => 说-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	瞅见	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	笑	_	VV	VV	_	3	conj	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	说	_	VV	VV	_	14	rcmod	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	8	punct	_	_
11	你	_	PN	PN	_	12	nsubj	_	_
12	画	_	VA	VA	_	8	ccomp	_	_
13	的	_	DEC	DEC	_	8	cpm	_	_
14	猴面包树	_	NN	NN	_	6	dobj	_	_
15	,	_	PU	PU	_	3	punct	_	_
16	有点	_	VV	VV	_	3	conj	_	_
17	象	_	NN	NN	_	19	nn	_	_
18	白菜	_	NN	NN	_	19	nn	_	_
19	…	_	NN	NN	_	16	dobj	_	_
20	”	_	PU	PU	_	19	punct	_	_

Oracle:
(x10 / 画-01, arg0, x11 / 你)
(x2 / 瞅见-01, arg0, x3 / 王子)
(x2 / 瞅见-01, arg1, x5 / 猴面包树)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 说-01, arg1, x10 / 画-01)
(x6 / 说-01, manner, x8 / 笑-01)

Input(Some(Graph((temporal :arg1 (瞅见-01 :arg1 猴面包树 :arg0 (王子 :mod 小-01)) :arg1 (说-01 :arg1 (画-01 :arg1 (x5 :arg0-of (像-01 :degree 有点 :arg1 白菜)) :arg0 你) :manner (笑-01 :arg0 x3) :arg0 x3)),ArrayBuffer(Span(2,3,List(0),瞅见,瞅见-01,false), Span(13,14,List(1),猴面包树,猴面包树,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(7,8,List(4),说,说-01,false), Span(11,12,List(5),画,画-01,false), Span(15,16,List(6),有点,有点,false), Span(17,18,List(7),白菜,白菜,false), Span(10,11,List(8),你,你,false), Span(5,6,List(9),笑,笑-01,false)),Map(2 -> 王子, 5 -> 画-01, 8 -> 你, 7 -> 白菜, 1 -> 猴面包树, 4 -> 说-01, 6 -> 有点, 9 -> 笑-01, 0 -> 瞅见-01, 3 -> 小-01),Map(x10 -> 画-01, x2 -> 瞅见-01, x5 -> 猴面包树, x8 -> 笑-01, x15 -> 白菜, x4 -> 小-01, x11 -> 你, x3 -> 王子, x6 -> 说-01, x14 -> 有点))),[Ljava.lang.String;@411fa0ce,Annotation([Ljava.lang.String;@251d7fdd,[Ljava.lang.String;@78e68401,[Ljava.lang.String;@391515c7),Annotation([Ljava.lang.String;@5b0dbfb,[Ljava.lang.String;@4b9dbf07,[Ledu.cmu.lti.nlp.amr.Dependency;@797fcf9),Annotation([Ljava.lang.String;@16bd7ae1,[Ljava.lang.String;@15d114ce,[Ljava.lang.String;@3312f4f4),Annotation([Ljava.lang.String;@b5aa65b,[Ljava.lang.String;@76cdafa3,[Ledu.cmu.lti.nlp.amr.Entity;@6b27b2d0))
AMR:
(x10 / 画-01, purpose, x5 / 猴面包树)
(x10 / 画-01, value, x11 / 你)
(x15 / 白菜, degree, x14 / 有点)
(x2 / 瞅见-01, value, x3 / 王子)
(x2 / 瞅见-01, value, x8 / 笑-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 猴面包树, degree, x14 / 有点)
(x6 / 说-01, manner, x8 / 笑-01)
(x6 / 说-01, purpose, x10 / 画-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1.0.0
WARNING: makeIds can't find span Id: 0.1.2.1.0.1
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 27,660 microseconds
Sentence: “ 啊 ！ ”

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x7 -> 啊))),[Ljava.lang.String;@4fb64e14,Annotation([Ljava.lang.String;@118041c7,[Ljava.lang.String;@a2b54e3,[Ljava.lang.String;@5c4cc644),Annotation([Ljava.lang.String;@21f7e537,[Ljava.lang.String;@32ea16b7,[Ledu.cmu.lti.nlp.amr.Dependency;@62b6c045),Annotation([Ljava.lang.String;@58f254b1,[Ljava.lang.String;@46b2dcc5,[Ljava.lang.String;@240f350a),Annotation([Ljava.lang.String;@706f6d26,[Ljava.lang.String;@3af2f846,[Ledu.cmu.lti.nlp.amr.Entity;@6af65f29))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,135 microseconds
Sentence: 我 还 为 我 画 的 猴面包树 感到 骄傲 呢 ！

Oracle Span 1:  感到 => 感到-01
Oracle Span 2:  我 => 我
Oracle Span 3:  猴面包树 => 猴面包树
Oracle Span 4:  画 => 画-01
Oracle Span 5:  还 => 还
Oracle Span 6:  骄傲 => 骄傲-01
Spans:
Span 7-8:  感到 => 感到-01
Span 0-1:  我 => 我
Span 6-7:  猴面包树 => 猴面包树
Span 4-5:  画 => 画-01
Span 1-2:  还 => 还
Span 8-9:  骄傲 => 骄傲-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  猴面包树 => 猴面包树
Oracle Span 4-5:  画 => 画-01
Oracle Span 1-2:  还 => 还
Oracle Span 8-9:  骄傲 => 骄傲-01

Dependencies:
1	我	_	PN	PN	_	8	nsubj	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	为	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	画	_	VV	VV	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	猴面包树	_	NN	NN	_	8	nsubj	_	_
8	感到	_	VV	VV	_	0	root	_	_
9	骄傲	_	NN	NN	_	8	dobj	_	_
10	呢	_	SP	SP	_	8	dep	_	_
11	！	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 感到-01, arg0, x4 / 我)
(x2 / 感到-01, arg1, x5 / 骄傲-01)
(x5 / 骄傲-01, arg1, x7 / 画-01)
(x5 / 骄傲-01, manner, x10 / 还)
(x7 / 画-01, arg1, x9 / 猴面包树)

Input(Some(Graph((感到-01 :mode expressive :arg1 (骄傲-01 :manner 还 :arg1 (画-01 :arg1 猴面包树 :arg0 x4) :arg0 x4) :arg0 我),ArrayBuffer(Span(7,8,List(0),感到,感到-01,false), Span(8,9,List(1),骄傲,骄傲-01,false), Span(1,2,List(2),还,还,false), Span(4,5,List(3),画,画-01,false), Span(6,7,List(4),猴面包树,猴面包树,false), Span(0,1,List(5),我,我,false)),Map(2 -> 还, 5 -> 我, 1 -> 骄傲-01, 4 -> 猴面包树, 0 -> 感到-01, 3 -> 画-01),Map(x10 -> 还, x2 -> 感到-01, x5 -> 骄傲-01, x7 -> 画-01, x4 -> 我, x9 -> 猴面包树))),[Ljava.lang.String;@370c9018,Annotation([Ljava.lang.String;@3c81cd82,[Ljava.lang.String;@111c229c,[Ljava.lang.String;@49cb3881),Annotation([Ljava.lang.String;@1a14fdf0,[Ljava.lang.String;@284bdeed,[Ledu.cmu.lti.nlp.amr.Dependency;@58b311ba),Annotation([Ljava.lang.String;@482c351d,[Ljava.lang.String;@75eaba95,[Ljava.lang.String;@320be73),Annotation([Ljava.lang.String;@435e416c,[Ljava.lang.String;@6af310c7,[Ledu.cmu.lti.nlp.amr.Entity;@4aed311e))
AMR:
(x10 / 还, poss, x4 / 我)
(x2 / 感到-01, manner, x9 / 猴面包树)
(x5 / 骄傲-01, manner, x10 / 还)
(x5 / 骄傲-01, manner, x2 / 感到-01)
(x7 / 画-01, snt1, x9 / 猴面包树)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,267 microseconds
Sentence: “ 你 画 的 狐狸 … 它 那 双 耳朵 … 有点 象 犄角 … 而且 又 太 长 了 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  又 => 又
Oracle Span 3:  太 => 太
Oracle Span 4:  有点 => 有点
Oracle Span 5:  犄角 => 犄角
Oracle Span 6:  狐狸 => 狐狸
Oracle Span 7:  画 => 画-01
Oracle Span 8:  耳朵 => 耳朵
Oracle Span 9:  那 => 那
Oracle Span 10:  长 => 长-02
Spans:
Span 1-2:  你 => 你
Span 16-17:  又 => 又
Span 17-18:  太 => 太
Span 11-12:  有点 => 有点
Span 13-14:  犄角 => 犄角
Span 4-5:  狐狸 => 狐狸
Span 2-3:  画 => 画-01
Span 9-10:  耳朵 => 耳朵
Span 7-8:  那 => 那
Span 18-19:  长 => 长-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 16-17:  又 => 又
Oracle Span 17-18:  太 => 太
Oracle Span 11-12:  有点 => 有点
Oracle Span 13-14:  犄角 => 犄角
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 2-3:  画 => 画-01
Oracle Span 9-10:  耳朵 => 耳朵
Oracle Span 7-8:  那 => 那
Oracle Span 18-19:  长 => 长-02

Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	画	_	VV	VV	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	狐狸	_	NN	NN	_	12	nsubj	_	_
6	…	_	PU	PU	_	10	punct	_	_
7	它	_	PN	PN	_	10	nn	_	_
8	那	_	DT	DT	_	10	det	_	_
9	双	_	CD	CD	_	8	dep	_	_
10	耳朵	_	NN	NN	_	5	prnmod	_	_
11	…	_	PU	PU	_	10	punct	_	_
12	有点	_	VV	VV	_	0	root	_	_
13	象	_	P	P	_	12	prep	_	_
14	犄角	_	NN	NN	_	13	pobj	_	_
15	…	_	PU	PU	_	12	punct	_	_
16	而且	_	AD	AD	_	19	advmod	_	_
17	又	_	AD	AD	_	19	advmod	_	_
18	太	_	AD	AD	_	19	advmod	_	_
19	长	_	VA	VA	_	12	conj	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	！	_	PU	PU	_	12	punct	_	_
22	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x25 / 耳朵, mod, x26 / 那)
(x28 / 狐狸, part, x25 / 耳朵)
(x29 / 画-01, arg0, x30 / 你)
(x29 / 画-01, arg1, x28 / 狐狸)
(x33 / 长-02, degree, x34 / 太)
(x33 / 长-02, manner, x35 / 又)

Input(Some(Graph((say :arg1 (and :op (像-01 :arg0 (耳朵 :part-of (狐狸 :arg1-of (画-01 :arg0 你)) :quant 2 :mod 那) :arg1 犄角 :degree 有点) :op (长-02 :arg0 x25 :manner 又 :degree 太)) :mode expressive),ArrayBuffer(Span(9,10,List(0),耳朵,耳朵,false), Span(4,5,List(1),狐狸,狐狸,false), Span(2,3,List(2),画,画-01,false), Span(1,2,List(3),你,你,false), Span(7,8,List(4),那,那,false), Span(13,14,List(5),犄角,犄角,false), Span(11,12,List(6),有点,有点,false), Span(18,19,List(7),长,长-02,false), Span(16,17,List(8),又,又,false), Span(17,18,List(9),太,太,false)),Map(2 -> 画-01, 5 -> 犄角, 8 -> 又, 7 -> 长-02, 1 -> 狐狸, 4 -> 那, 6 -> 有点, 9 -> 太, 0 -> 耳朵, 3 -> 你),Map(x34 -> 太, x28 -> 狐狸, x25 -> 耳朵, x31 -> 犄角, x30 -> 你, x33 -> 长-02, x32 -> 有点, x26 -> 那, x35 -> 又, x29 -> 画-01))),[Ljava.lang.String;@4c38cd16,Annotation([Ljava.lang.String;@7ddcb0dc,[Ljava.lang.String;@f5bf288,[Ljava.lang.String;@2c1d57bc),Annotation([Ljava.lang.String;@26c77f54,[Ljava.lang.String;@3e856100,[Ledu.cmu.lti.nlp.amr.Dependency;@6e9a0bea),Annotation([Ljava.lang.String;@28fc1132,[Ljava.lang.String;@355ce6a6,[Ljava.lang.String;@20440c6c),Annotation([Ljava.lang.String;@1e3f86d5,[Ljava.lang.String;@560271a1,[Ledu.cmu.lti.nlp.amr.Entity;@4b9c411))
AMR:
(x25 / 耳朵, mod, x26 / 那)
(x29 / 画-01, location, x25 / 耳朵)
(x29 / 画-01, location, x30 / 你)
(x29 / 画-01, prep-through, x28 / 狐狸)
(x31 / 犄角, domain, x32 / 有点)
(x32 / 有点, location, x25 / 耳朵)
(x33 / 长-02, degree, x31 / 犄角)
(x33 / 长-02, degree, x34 / 太)
(x33 / 长-02, manner, x35 / 又)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 29,711 microseconds
Sentence: 这时 ， 他 又 笑 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  笑 => 笑-01
Oracle Span 4:  这时 => 这时
Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph((笑-01 :time 这时 :manner 又 :arg0 他),ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(0,1,List(1),这时,这时,false), Span(3,4,List(2),又,又,false), Span(2,3,List(3),他,他,false)),Map(2 -> 又, 1 -> 这时, 0 -> 笑-01, 3 -> 他),Map(x2 -> 他, x4 -> 这时, x3 -> 又, x0 -> 笑-01))),[Ljava.lang.String;@41e9f86,Annotation([Ljava.lang.String;@66f5b8fe,[Ljava.lang.String;@233f52f8,[Ljava.lang.String;@69ec93c2),Annotation([Ljava.lang.String;@19fec3d6,[Ljava.lang.String;@5287ba5f,[Ledu.cmu.lti.nlp.amr.Dependency;@b768a65),Annotation([Ljava.lang.String;@6897a4a,[Ljava.lang.String;@6986f93e,[Ljava.lang.String;@6bce313),Annotation([Ljava.lang.String;@39266403,[Ljava.lang.String;@74b00247,[Ledu.cmu.lti.nlp.amr.Entity;@2aa14ae6))
AMR:
(x0 / 笑-01, ARG6, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)
(x0 / 笑-01, time, x4 / 这时)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,088 microseconds
Sentence: “ 小家伙 ， 你 太 不 公正 了 。

Oracle Span 1:  公正 => 公正-01
Oracle Span 2:  太 => 太
Spans:
Span 6-7:  公正 => 公正-01
Span 4-5:  太 => 太

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  公正 => 公正-01
Oracle Span 4-5:  太 => 太

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	小家伙	_	NN	NN	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	你	_	PN	PN	_	7	nsubj	_	_
5	太	_	AD	AD	_	7	advmod	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	公正	_	VA	VA	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 公正-01, degree, x11 / 太)

Input(Some(Graph((say :arg1 (公正-01 :arg0 (家伙 :mod 小-01) :degree 太 :polarity -)),ArrayBuffer(Span(6,7,List(0),公正,公正-01,false), Span(4,5,List(1),太,太,false)),Map(1 -> 太, 0 -> 公正-01),Map(x8 -> 公正-01, x11 -> 太))),[Ljava.lang.String;@4be490da,Annotation([Ljava.lang.String;@4168f3d9,[Ljava.lang.String;@353e6389,[Ljava.lang.String;@15e8f9b2),Annotation([Ljava.lang.String;@7a65c995,[Ljava.lang.String;@7c950b3b,[Ledu.cmu.lti.nlp.amr.Dependency;@3af10d0b),Annotation([Ljava.lang.String;@6806468e,[Ljava.lang.String;@3c7b137a,[Ljava.lang.String;@68631b1d),Annotation([Ljava.lang.String;@5a48da4f,[Ljava.lang.String;@a0c5be,[Ledu.cmu.lti.nlp.amr.Entity;@6424e613))
AMR:
(x8 / 公正-01, degree, x11 / 太)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 2,958 microseconds
Sentence: 我 说

Oracle Span 1:  我 => 我
Oracle Span 2:  说 => 说-01
Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph((说-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-01),Map(x2 -> 我, x0 -> 说-01))),[Ljava.lang.String;@14efa279,Annotation([Ljava.lang.String;@8e99809,[Ljava.lang.String;@e62319f,[Ljava.lang.String;@4d354a3e),Annotation([Ljava.lang.String;@24a0c58b,[Ljava.lang.String;@604d28c6,[Ledu.cmu.lti.nlp.amr.Dependency;@7f3c0399),Annotation([Ljava.lang.String;@183fc2fa,[Ljava.lang.String;@3a11c0eb,[Ljava.lang.String;@3313d477),Annotation([Ljava.lang.String;@2c2c3947,[Ljava.lang.String;@4a62062a,[Ledu.cmu.lti.nlp.amr.Entity;@7ec08115))
AMR:
(x0 / 说-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,172 microseconds
Sentence: 我 过去 只 会 画 开着 肚皮 和 闭着 肚皮 的 巨蟒 。 ”

Oracle Span 1:  会 => 会-01
Oracle Span 2:  只 => 只
Oracle Span 3:  巨蟒 => 巨蟒
Oracle Span 4:  我 => 我
Oracle Span 5:  画 => 画-01
Oracle Span 6:  肚皮 => 肚皮
Oracle Span 7:  肚皮 => 肚皮
Oracle Span 8:  过去 => 过去-01
Spans:
Span 3-4:  会 => 会-01
Span 2-3:  只 => 只
Span 11-12:  巨蟒 => 巨蟒
Span 0-1:  我 => 我
Span 4-5:  画 => 画-01
Span 6-7:  肚皮 => 肚皮
Span 9-10:  肚皮 => 肚皮
Span 1-2:  过去 => 过去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  会 => 会-01
Oracle Span 2-3:  只 => 只
Oracle Span 11-12:  巨蟒 => 巨蟒
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  画 => 画-01
Oracle Span 6-7:  肚皮 => 肚皮
Oracle Span 9-10:  肚皮 => 肚皮
Oracle Span 1-2:  过去 => 过去-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	过去	_	NT	NT	_	5	tmod	_	_
3	只	_	AD	AD	_	5	advmod	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	画	_	VV	VV	_	0	root	_	_
6	开着	_	NN	NN	_	10	nn	_	_
7	肚皮	_	NN	NN	_	10	conj	_	_
8	和	_	CC	CC	_	10	cc	_	_
9	闭着	_	NN	NN	_	10	nn	_	_
10	肚皮	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	巨蟒	_	NN	NN	_	5	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 会-01, arg0, x26 / 我)
(x14 / 会-01, arg1, x27 / 画-01)
(x14 / 会-01, manner, x15 / 只)
(x14 / 会-01, time, x16 / 过去-01)
(x27 / 画-01, arg1, x33 / 巨蟒)

Input(Some(Graph((say :arg1 (会-01 :arg1 (画-01 :arg1 (巨蟒 :arg0-of (and :op (开-02 :arg1 肚皮) :op (闭-01 :arg1 肚皮))) :arg0 x26) :arg0 我 :time 过去-01 :manner 只)),ArrayBuffer(Span(3,4,List(0),会,会-01,false), Span(4,5,List(1),画,画-01,false), Span(11,12,List(2),巨蟒,巨蟒,false), Span(6,7,List(3),肚皮,肚皮,false), Span(9,10,List(4),肚皮,肚皮,false), Span(0,1,List(5),我,我,false), Span(1,2,List(6),过去,过去-01,false), Span(2,3,List(7),只,只,false)),Map(2 -> 巨蟒, 5 -> 我, 7 -> 只, 1 -> 画-01, 4 -> 肚皮, 6 -> 过去-01, 0 -> 会-01, 3 -> 肚皮),Map(x16 -> 过去-01, x33 -> 巨蟒, x27 -> 画-01, x15 -> 只, x36 -> 肚皮, x38 -> 肚皮, x26 -> 我, x14 -> 会-01))),[Ljava.lang.String;@53dd42d6,Annotation([Ljava.lang.String;@1e76afeb,[Ljava.lang.String;@447fa959,[Ljava.lang.String;@3e4d40ea),Annotation([Ljava.lang.String;@73f6e07,[Ljava.lang.String;@2c9d90fc,[Ledu.cmu.lti.nlp.amr.Dependency;@1511d157),Annotation([Ljava.lang.String;@418f890f,[Ljava.lang.String;@3d3c886f,[Ljava.lang.String;@7d66e544),Annotation([Ljava.lang.String;@666618d6,[Ljava.lang.String;@5b1c32e4,[Ledu.cmu.lti.nlp.amr.Entity;@2bab618))
AMR:
(x14 / 会-01, manner, x15 / 只)
(x14 / 会-01, snt11, x27 / 画-01)
(x14 / 会-01, time, x16 / 过去-01)
(x16 / 过去-01, beneficiary, x26 / 我)
(x27 / 画-01, snt1, x36 / 肚皮)
(x38 / 肚皮, domain, x36 / 肚皮)
(x38 / 肚皮, prep-along-with, x33 / 巨蟒)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.3.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,444 microseconds
Sentence: “ 啊 ！ 这 就 行 了 。 ” 他 说 ： “ 孩子们 认 得 出来 。 ”

Oracle Span 1:  他 => 他
Oracle Span 2:  孩子们 => 孩子们
Oracle Span 3:  就 => 就
Oracle Span 4:  行 => 行-04
Oracle Span 5:  认 => 认-01
Oracle Span 6:  说 => 说-01
Oracle Span 7:  这 => 这
Spans:
Span 9-10:  他 => 他
Span 13-14:  孩子们 => 孩子们
Span 4-5:  就 => 就
Span 5-6:  行 => 行-04
Span 14-15:  认 => 认-01
Span 10-11:  说 => 说-01
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 13-14:  孩子们 => 孩子们
Oracle Span 4-5:  就 => 就
Oracle Span 5-6:  行 => 行-04
Oracle Span 14-15:  认 => 认-01
Oracle Span 10-11:  说 => 说-01
Oracle Span 3-4:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	AD	AD	_	3	advmod	_	_
3	！	_	VV	VV	_	11	dep	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	行	_	VV	VV	_	3	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	他	_	PN	PN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	11	punct	_	_
14	孩子们	_	NN	NN	_	17	nsubj	_	_
15	认	_	VV	VV	_	17	dep	_	_
16	得	_	DER	DER	_	17	dep	_	_
17	出来	_	VV	VV	_	11	ccomp	_	_
18	。	_	PU	PU	_	11	punct	_	_
19	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x16 / 说-01, arg0, x18 / 他)
(x20 / 行-04, arg0, x22 / 这)
(x20 / 行-04, manner, x21 / 就)
(x24 / 认-01, arg0, x25 / 孩子们)

Input(Some(Graph((说-01 :arg1 (multi-sentence :snt1 (行-04 :arg0 这 :manner 就) :snt2 (possible :arg0 (认-01 :arg0 孩子们))) :arg0 他),ArrayBuffer(Span(10,11,List(0),说,说-01,false), Span(5,6,List(1),行,行-04,false), Span(3,4,List(2),这,这,false), Span(4,5,List(3),就,就,false), Span(14,15,List(4),认,认-01,false), Span(13,14,List(5),孩子们,孩子们,false), Span(9,10,List(6),他,他,false)),Map(2 -> 这, 5 -> 孩子们, 1 -> 行-04, 4 -> 认-01, 6 -> 他, 0 -> 说-01, 3 -> 就),Map(x22 -> 这, x16 -> 说-01, x25 -> 孩子们, x21 -> 就, x18 -> 他, x24 -> 认-01, x20 -> 行-04))),[Ljava.lang.String;@48bc2fce,Annotation([Ljava.lang.String;@1eca3ea7,[Ljava.lang.String;@24fba488,[Ljava.lang.String;@73a6cc79),Annotation([Ljava.lang.String;@5a4d4f9c,[Ljava.lang.String;@153d6d74,[Ledu.cmu.lti.nlp.amr.Dependency;@6c9b44bf),Annotation([Ljava.lang.String;@299b9851,[Ljava.lang.String;@191a0351,[Ljava.lang.String;@67328bcb),Annotation([Ljava.lang.String;@51ba952e,[Ljava.lang.String;@2416c658,[Ledu.cmu.lti.nlp.amr.Entity;@6d5f4900))
AMR:
(x16 / 说-01, conj-as-if, x18 / 他)
(x16 / 说-01, purpose, x24 / 认-01)
(x16 / 说-01, time, x20 / 行-04)
(x20 / 行-04, example, x22 / 这)
(x20 / 行-04, manner, x21 / 就)
(x24 / 认-01, direction, x25 / 孩子们)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,307 microseconds
Sentence: 我 就 用 铅笔 勾画 了 一 个 嘴套 。

Oracle Span 1:  勾画 => 勾画-01
Oracle Span 2:  嘴套 => 嘴套
Oracle Span 3:  就 => 就
Oracle Span 4:  我 => 我
Oracle Span 5:  用 => 用-01
Oracle Span 6:  铅笔 => 铅笔
Spans:
Span 4-5:  勾画 => 勾画-01
Span 8-9:  嘴套 => 嘴套
Span 1-2:  就 => 就
Span 0-1:  我 => 我
Span 2-3:  用 => 用-01
Span 3-4:  铅笔 => 铅笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  勾画 => 勾画-01
Oracle Span 8-9:  嘴套 => 嘴套
Oracle Span 1-2:  就 => 就
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  用 => 用-01
Oracle Span 3-4:  铅笔 => 铅笔

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	就	_	AD	AD	_	5	advmod	_	_
3	用	_	P	P	_	5	prep	_	_
4	铅笔	_	NN	NN	_	3	pobj	_	_
5	勾画	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	嘴套	_	NN	NN	_	5	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 用-01, arg0, x2 / 我)
(x0 / 用-01, arg1, x4 / 铅笔)
(x0 / 用-01, arg2, x5 / 勾画-01)
(x0 / 用-01, manner, x3 / 就)
(x5 / 勾画-01, arg1, x7 / 嘴套)

Input(Some(Graph((用-01 :arg2 (勾画-01 :arg1 (嘴套 :quant 1) :arg0 x2) :arg1 铅笔 :manner 就 :arg0 我),ArrayBuffer(Span(2,3,List(0),用,用-01,false), Span(4,5,List(1),勾画,勾画-01,false), Span(8,9,List(2),嘴套,嘴套,false), Span(3,4,List(3),铅笔,铅笔,false), Span(1,2,List(4),就,就,false), Span(0,1,List(5),我,我,false)),Map(2 -> 嘴套, 5 -> 我, 1 -> 勾画-01, 4 -> 就, 0 -> 用-01, 3 -> 铅笔),Map(x2 -> 我, x5 -> 勾画-01, x7 -> 嘴套, x4 -> 铅笔, x3 -> 就, x0 -> 用-01))),[Ljava.lang.String;@1e40fbb3,Annotation([Ljava.lang.String;@1b560eb0,[Ljava.lang.String;@9e02f84,[Ljava.lang.String;@1e6060f1),Annotation([Ljava.lang.String;@7e49ded,[Ljava.lang.String;@2c6c302f,[Ledu.cmu.lti.nlp.amr.Dependency;@2478b629),Annotation([Ljava.lang.String;@39023dbf,[Ljava.lang.String;@1a2ac487,[Ljava.lang.String;@570a62a5),Annotation([Ljava.lang.String;@36224f93,[Ljava.lang.String;@1ee5632d,[Ledu.cmu.lti.nlp.amr.Entity;@52a7928a))
AMR:
(x0 / 用-01, ARG5, x2 / 我)
(x0 / 用-01, degree, x5 / 勾画-01)
(x0 / 用-01, instrument, x4 / 铅笔)
(x0 / 用-01, manner, x3 / 就)
(x5 / 勾画-01, prep-for, x7 / 嘴套)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,157 microseconds
Sentence: 当 我 把 它 递给 小 王子 时 ， 我 心里 很 难受 ：

Oracle Span 1:  它 => 它
Oracle Span 2:  小 => 小-01
Oracle Span 3:  很 => 很
Oracle Span 4:  心里 => 心里
Oracle Span 5:  我 => 我
Oracle Span 6:  王子 => 王子
Oracle Span 7:  递给 => 递给-01
Oracle Span 8:  难受 => 难受-01
Spans:
Span 3-4:  它 => 它
Span 5-6:  小 => 小-01
Span 11-12:  很 => 很
Span 10-11:  心里 => 心里
Span 1-2:  我 => 我
Span 6-7:  王子 => 王子
Span 4-5:  递给 => 递给-01
Span 12-13:  难受 => 难受-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  它 => 它
Oracle Span 5-6:  小 => 小-01
Oracle Span 11-12:  很 => 很
Oracle Span 10-11:  心里 => 心里
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  王子 => 王子
Oracle Span 4-5:  递给 => 递给-01
Oracle Span 12-13:  难受 => 难受-01

Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	递给	_	VV	VV	_	8	lccomp	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	5	dobj	_	_
8	时	_	LC	LC	_	1	plmod	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	心里	_	NN	NN	_	13	nsubj	_	_
12	很	_	AD	AD	_	13	advmod	_	_
13	难受	_	VV	VV	_	0	root	_	_
14	：	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 王子, mod, x14 / 小-01)
(x15 / 心里, poss, x16 / 我)
(x2 / 难受-01, arg0, x15 / 心里)
(x2 / 难受-01, degree, x7 / 很)
(x2 / 难受-01, time, x8 / 递给-01)
(x8 / 递给-01, arg1, x12 / 它)
(x8 / 递给-01, arg2, x13 / 王子)

Input(Some(Graph((难受-01 :arg0 (心里 :poss 我) :time (递给-01 :arg2 (王子 :mod 小-01) :arg1 它 :arg0 x6) :degree 很),ArrayBuffer(Span(12,13,List(0),难受,难受-01,false), Span(10,11,List(1),心里,心里,false), Span(1,2,List(2),我,我,false), Span(4,5,List(3),递给,递给-01,false), Span(6,7,List(4),王子,王子,false), Span(5,6,List(5),小,小-01,false), Span(3,4,List(6),它,它,false), Span(11,12,List(7),很,很,false)),Map(2 -> 我, 5 -> 小-01, 7 -> 很, 1 -> 心里, 4 -> 王子, 6 -> 它, 0 -> 难受-01, 3 -> 递给-01),Map(x16 -> 我, x2 -> 难受-01, x13 -> 王子, x8 -> 递给-01, x12 -> 它, x7 -> 很, x15 -> 心里, x14 -> 小-01))),[Ljava.lang.String;@563ccd31,Annotation([Ljava.lang.String;@72465eb2,[Ljava.lang.String;@478fb7dc,[Ljava.lang.String;@29d25e65),Annotation([Ljava.lang.String;@19b75b2b,[Ljava.lang.String;@59c43561,[Ledu.cmu.lti.nlp.amr.Dependency;@634f58d2),Annotation([Ljava.lang.String;@585513a8,[Ljava.lang.String;@7b18658a,[Ljava.lang.String;@30f28b5),Annotation([Ljava.lang.String;@1a1f79ce,[Ljava.lang.String;@6aa7e176,[Ledu.cmu.lti.nlp.amr.Entity;@52abed9d))
AMR:
(x13 / 王子, mod, x14 / 小-01)
(x14 / 小-01, degree, x8 / 递给-01)
(x2 / 难受-01, degree, x15 / 心里)
(x2 / 难受-01, degree, x7 / 很)
(x2 / 难受-01, time, x8 / 递给-01)
(x8 / 递给-01, time, x12 / 它)
(x8 / 递给-01, time, x16 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,006 microseconds
Sentence: “ 你 的 打算 ， 我 一点 也 不 知道 … ”

Oracle Span 1:  一点 => 一点
Oracle Span 2:  也 => 也
Oracle Span 3:  你 => 你
Oracle Span 4:  我 => 我
Oracle Span 5:  打算 => 打算-01
Oracle Span 6:  知道 => 知道-01
Spans:
Span 6-7:  一点 => 一点
Span 7-8:  也 => 也
Span 1-2:  你 => 你
Span 5-6:  我 => 我
Span 3-4:  打算 => 打算-01
Span 9-10:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一点 => 一点
Oracle Span 7-8:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  打算 => 打算-01
Oracle Span 9-10:  知道 => 知道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	打算	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	我	_	PN	PN	_	10	nsubj	_	_
7	一点	_	AD	AD	_	10	advmod	_	_
8	也	_	AD	AD	_	10	advmod	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	知道	_	VV	VV	_	4	ccomp	_	_
11	…	_	NN	NN	_	10	dobj	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 知道-01, arg0, x13 / 我)
(x11 / 知道-01, arg1, x14 / 打算-01)
(x11 / 知道-01, degree, x15 / 一点)
(x11 / 知道-01, manner, x16 / 也)
(x14 / 打算-01, arg0, x17 / 你)

Input(Some(Graph((say :arg1 (知道-01 :manner 也 :degree 一点 :arg1 (打算-01 :arg0 你) :arg0 我 :polarity -)),ArrayBuffer(Span(9,10,List(0),知道,知道-01,false), Span(7,8,List(1),也,也,false), Span(6,7,List(2),一点,一点,false), Span(3,4,List(3),打算,打算-01,false), Span(1,2,List(4),你,你,false), Span(5,6,List(5),我,我,false)),Map(2 -> 一点, 5 -> 我, 1 -> 也, 4 -> 你, 0 -> 知道-01, 3 -> 打算-01),Map(x16 -> 也, x13 -> 我, x15 -> 一点, x11 -> 知道-01, x14 -> 打算-01, x17 -> 你))),[Ljava.lang.String;@281b2dfd,Annotation([Ljava.lang.String;@492be039,[Ljava.lang.String;@1cd2143b,[Ljava.lang.String;@1118d539),Annotation([Ljava.lang.String;@601d6622,[Ljava.lang.String;@76216830,[Ledu.cmu.lti.nlp.amr.Dependency;@7aded903),Annotation([Ljava.lang.String;@2db86a7c,[Ljava.lang.String;@261f359f,[Ljava.lang.String;@5b02a984),Annotation([Ljava.lang.String;@57186526,[Ljava.lang.String;@391d1e33,[Ledu.cmu.lti.nlp.amr.Entity;@66f16742))
AMR:
(x11 / 知道-01, degree, x15 / 一点)
(x11 / 知道-01, manner, x16 / 也)
(x13 / 我, location, x14 / 打算-01)
(x15 / 一点, location, x14 / 打算-01)
(x17 / 你, location, x14 / 打算-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 10,969 microseconds
Sentence: 我 说

Oracle Span 1:  我 => 我
Oracle Span 2:  说 => 说-01
Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph((说-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-01),Map(x2 -> 我, x0 -> 说-01))),[Ljava.lang.String;@2871ac91,Annotation([Ljava.lang.String;@3c54ddec,[Ljava.lang.String;@6d69a0d3,[Ljava.lang.String;@4f114b),Annotation([Ljava.lang.String;@257f30f7,[Ljava.lang.String;@3fde2209,[Ledu.cmu.lti.nlp.amr.Dependency;@1f916219),Annotation([Ljava.lang.String;@67acfde9,[Ljava.lang.String;@3b088163,[Ljava.lang.String;@75882261),Annotation([Ljava.lang.String;@611d0763,[Ljava.lang.String;@615efd1c,[Ledu.cmu.lti.nlp.amr.Entity;@1e226bcd))
AMR:
(x0 / 说-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,419 microseconds
Sentence: 但是 ， 他 不 回答 我 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  我 => 我
Spans:
Span 2-3:  他 => 他
Span 4-5:  回答 => 回答-01
Span 5-6:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 5-6:  我 => 我

Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	不	_	NN	NN	_	5	nsubj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	5	dep	_	_
7	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x5 / 他)
(x2 / 回答-01, arg3, x6 / 我)

Input(Some(Graph((contrast :arg2 (回答-01 :arg3 我 :arg0 他 :polarity -)),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(5,6,List(1),我,我,false), Span(2,3,List(2),他,他,false)),Map(2 -> 他, 1 -> 我, 0 -> 回答-01),Map(x2 -> 回答-01, x5 -> 他, x6 -> 我))),[Ljava.lang.String;@2a8dd942,Annotation([Ljava.lang.String;@2322e56f,[Ljava.lang.String;@35025a0a,[Ljava.lang.String;@38732364),Annotation([Ljava.lang.String;@7c70aae1,[Ljava.lang.String;@48cd319d,[Ledu.cmu.lti.nlp.amr.Dependency;@6f38f084),Annotation([Ljava.lang.String;@4ef18604,[Ljava.lang.String;@372f0a99,[Ljava.lang.String;@16cf8438),Annotation([Ljava.lang.String;@3e5beab5,[Ljava.lang.String;@7c588adc,[Ledu.cmu.lti.nlp.amr.Entity;@33ec2c0c))
AMR:
(x2 / 回答-01, ARG3, x6 / 我)
(x2 / 回答-01, degree, x5 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 4,667 microseconds
Sentence: 他 对 我 说 ： “ 你 知道 ， 我 落 在 地球 上 …

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  地球 => 地球
Oracle Span 4:  我 => 我
Oracle Span 5:  我 => 我
Oracle Span 6:  知道 => 知道-01
Oracle Span 7:  说 => 说-01
Spans:
Span 0-1:  他 => 他
Span 6-7:  你 => 你
Span 12-13:  地球 => 地球
Span 2-3:  我 => 我
Span 9-10:  我 => 我
Span 7-8:  知道 => 知道-01
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 12-13:  地球 => 地球
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  我 => 我
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	知道	_	VV	VV	_	4	ccomp	_	_
9	,	_	PU	PU	_	8	punct	_	_
10	我	_	PN	PN	_	15	nsubj	_	_
11	落	_	AD	AD	_	15	advmod	_	_
12	在	_	P	P	_	15	prep	_	_
13	地球	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	12	plmod	_	_
15	…	_	VV	VV	_	8	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x6 / 知道-01)
(x0 / 说-01, arg3, x3 / 我)
(x6 / 知道-01, arg0, x7 / 你)

Input(Some(Graph((说-01 :arg1 (知道-01 :arg1 (落在-01 :arg0 我 :arg1 地球) :arg0 你) :arg3 我 :arg0 他),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(7,8,List(1),知道,知道-01,false), Span(2,3,List(2),我,我,false), Span(12,13,List(3),地球,地球,false), Span(6,7,List(4),你,你,false), Span(9,10,List(5),我,我,false), Span(0,1,List(6),他,他,false)),Map(2 -> 我, 5 -> 我, 1 -> 知道-01, 4 -> 你, 6 -> 他, 0 -> 说-01, 3 -> 地球),Map(x2 -> 他, x10 -> 地球, x7 -> 你, x3 -> 我, x6 -> 知道-01, x9 -> 我, x0 -> 说-01))),[Ljava.lang.String;@5968800d,Annotation([Ljava.lang.String;@3887c7d7,[Ljava.lang.String;@b1b471,[Ljava.lang.String;@526f6427),Annotation([Ljava.lang.String;@4f1afe8f,[Ljava.lang.String;@492521c4,[Ledu.cmu.lti.nlp.amr.Dependency;@443a06ad),Annotation([Ljava.lang.String;@6ddd1c51,[Ljava.lang.String;@752b69e3,[Ljava.lang.String;@15605d83),Annotation([Ljava.lang.String;@1fb2eec,[Ljava.lang.String;@4c18516,[Ledu.cmu.lti.nlp.amr.Entity;@2a0b901c))
AMR:
(x0 / 说-01, manner, x9 / 我)
(x0 / 说-01, quant, x2 / 他)
(x0 / 说-01, topic, x6 / 知道-01)
(x6 / 知道-01, location, x10 / 地球)
(x6 / 知道-01, quant, x7 / 你)
(x6 / 知道-01, subevent, x3 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.2.1.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,175 microseconds
Sentence: 到 明天 就 一 周年 了 … ”

Oracle Span 1:  到 => 到-01
Oracle Span 2:  周年 => 周年
Oracle Span 3:  就 => 就
Oracle Span 4:  明天 => 明天
Spans:
Span 0-1:  到 => 到-01
Span 4-5:  周年 => 周年
Span 2-3:  就 => 就
Span 1-2:  明天 => 明天

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  到 => 到-01
Oracle Span 4-5:  周年 => 周年
Oracle Span 2-3:  就 => 就
Oracle Span 1-2:  明天 => 明天

Dependencies:
1	到	_	P	P	_	5	prep	_	_
2	明天	_	NT	NT	_	1	pobj	_	_
3	就	_	P	P	_	5	prep	_	_
4	一	_	NT	NT	_	3	pobj	_	_
5	周年	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	…	_	NN	NN	_	5	dobj	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 周年, domain, x15 / 到-01)
(x13 / 周年, manner, x17 / 就)
(x15 / 到-01, arg1, x16 / 明天)

Input(Some(Graph((say :arg1 (周年 :manner 就 :domain (到-01 :arg1 明天) :quant 1)),ArrayBuffer(Span(4,5,List(0),周年,周年,false), Span(2,3,List(1),就,就,false), Span(0,1,List(2),到,到-01,false), Span(1,2,List(3),明天,明天,false)),Map(2 -> 到-01, 1 -> 就, 0 -> 周年, 3 -> 明天),Map(x16 -> 明天, x13 -> 周年, x15 -> 到-01, x17 -> 就))),[Ljava.lang.String;@3d104c9b,Annotation([Ljava.lang.String;@6544899b,[Ljava.lang.String;@6da54910,[Ljava.lang.String;@1bd8afc8),Annotation([Ljava.lang.String;@24134cbc,[Ljava.lang.String;@65da01f4,[Ledu.cmu.lti.nlp.amr.Dependency;@22f02996),Annotation([Ljava.lang.String;@7c8874ef,[Ljava.lang.String;@42c0a16e,[Ljava.lang.String;@77a0dd63),Annotation([Ljava.lang.String;@543fe698,[Ljava.lang.String;@6b2fdffc,[Ledu.cmu.lti.nlp.amr.Entity;@2ca3d826))
AMR:
(x13 / 周年, domain, x15 / 到-01)
(x13 / 周年, manner, x17 / 就)
(x15 / 到-01, degree, x16 / 明天)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 6,076 microseconds
Sentence: 接着 ， 沉默 了 一会儿 ， 他 又 说道 ： “ 我 就 落 在 这 附近 … ”

Oracle Span 1:  一会儿 => 一会儿
Oracle Span 2:  他 => 他
Oracle Span 3:  又 => 又
Oracle Span 4:  就 => 就
Oracle Span 5:  沉默 => 沉默-01
Oracle Span 6:  说道 => 说道-01
Oracle Span 7:  这 => 这
Oracle Span 8:  附近 => 附近-01
Spans:
Span 4-5:  一会儿 => 一会儿
Span 6-7:  他 => 他
Span 7-8:  又 => 又
Span 12-13:  就 => 就
Span 2-3:  沉默 => 沉默-01
Span 8-9:  说道 => 说道-01
Span 15-16:  这 => 这
Span 16-17:  附近 => 附近-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会儿 => 一会儿
Oracle Span 6-7:  他 => 他
Oracle Span 7-8:  又 => 又
Oracle Span 12-13:  就 => 就
Oracle Span 2-3:  沉默 => 沉默-01
Oracle Span 8-9:  说道 => 说道-01
Oracle Span 15-16:  这 => 这
Oracle Span 16-17:  附近 => 附近-01

Dependencies:
1	接着	_	NR	NR	_	3	nsubj	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一会儿	_	CD	CD	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	他	_	PN	PN	_	9	nsubj	_	_
8	又	_	AD	AD	_	9	advmod	_	_
9	说道	_	VV	VV	_	3	conj	_	_
10	：	_	PU	PU	_	9	punct	_	_
11	“	_	PU	PU	_	14	punct	_	_
12	我	_	PN	PN	_	14	nsubj	_	_
13	就	_	AD	AD	_	14	advmod	_	_
14	落	_	VV	VV	_	9	ccomp	_	_
15	在	_	P	P	_	18	prep	_	_
16	这	_	DT	DT	_	17	det	_	_
17	附近	_	NN	NN	_	15	pobj	_	_
18	…	_	NN	NN	_	14	dobj	_	_
19	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x10 / 附近-01, arg0, x11 / 这)
(x2 / 沉默-01, arg0, x3 / 他)
(x2 / 沉默-01, duration, x4 / 一会儿)
(x5 / 说道-01, manner, x7 / 又)

Input(Some(Graph((temporal :arg1 (沉默-01 :duration 一会儿 :arg0 他) :arg2 (说道-01 :arg1 (落在-01 :arg0 x3 :arg1 (附近-01 :arg0 这) :manner 就) :manner 又 :arg0 x3)),ArrayBuffer(Span(2,3,List(0),沉默,沉默-01,false), Span(4,5,List(1),一会儿,一会儿,false), Span(6,7,List(2),他,他,false), Span(8,9,List(3),说道,说道-01,false), Span(16,17,List(4),附近,附近-01,false), Span(15,16,List(5),这,这,false), Span(12,13,List(6),就,就,false), Span(7,8,List(7),又,又,false)),Map(2 -> 他, 5 -> 这, 7 -> 又, 1 -> 一会儿, 4 -> 附近-01, 6 -> 就, 0 -> 沉默-01, 3 -> 说道-01),Map(x10 -> 附近-01, x2 -> 沉默-01, x5 -> 说道-01, x12 -> 就, x7 -> 又, x4 -> 一会儿, x11 -> 这, x3 -> 他))),[Ljava.lang.String;@5d194314,Annotation([Ljava.lang.String;@76396509,[Ljava.lang.String;@637c840d,[Ljava.lang.String;@51ac12ac),Annotation([Ljava.lang.String;@463afa6e,[Ljava.lang.String;@7b96de8d,[Ledu.cmu.lti.nlp.amr.Dependency;@7ccd611e),Annotation([Ljava.lang.String;@4dc52559,[Ljava.lang.String;@5c3d4f05,[Ljava.lang.String;@119290b9),Annotation([Ljava.lang.String;@640d604,[Ljava.lang.String;@62cbc478,[Ledu.cmu.lti.nlp.amr.Entity;@5438fa43))
AMR:
(x10 / 附近-01, manner, x12 / 就)
(x10 / 附近-01, prep-on-behalf, x11 / 这)
(x2 / 沉默-01, duration, x4 / 一会儿)
(x5 / 说道-01, manner, x7 / 又)
(x5 / 说道-01, prep-on-behalf, x3 / 他)
(x5 / 说道-01, source, x4 / 一会儿)
(x5 / 说道-01, subevent, x10 / 附近-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 19,021 microseconds
Sentence: 此时 ， 他 的 面颊 绯红 。

Oracle Span 1:  他 => 他
Oracle Span 2:  此时 => 此时
Oracle Span 3:  绯红 => 绯红
Oracle Span 4:  面颊 => 面颊
Spans:
Span 2-3:  他 => 他
Span 0-1:  此时 => 此时
Span 5-6:  绯红 => 绯红
Span 4-5:  面颊 => 面颊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  此时 => 此时
Oracle Span 5-6:  绯红 => 绯红
Oracle Span 4-5:  面颊 => 面颊

Dependencies:
1	此时	_	NT	NT	_	6	tmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	面颊	_	NN	NN	_	6	nsubj	_	_
6	绯红	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 绯红, arg0, x2 / 面颊)
(x0 / 绯红, time, x4 / 此时)
(x3 / 他, part, x2 / 面颊)

Input(Some(Graph((绯红 :time 此时 :arg0 (面颊 :part-of 他)),ArrayBuffer(Span(5,6,List(0),绯红,绯红,false), Span(0,1,List(1),此时,此时,false), Span(4,5,List(2),面颊,面颊,false), Span(2,3,List(3),他,他,false)),Map(2 -> 面颊, 1 -> 此时, 0 -> 绯红, 3 -> 他),Map(x2 -> 面颊, x4 -> 此时, x3 -> 他, x0 -> 绯红))),[Ljava.lang.String;@512abf25,Annotation([Ljava.lang.String;@515ab3f2,[Ljava.lang.String;@6d0e45a5,[Ljava.lang.String;@7e7740a5),Annotation([Ljava.lang.String;@7aa01bd9,[Ljava.lang.String;@7e61e25c,[Ledu.cmu.lti.nlp.amr.Dependency;@615db358),Annotation([Ljava.lang.String;@256bb5be,[Ljava.lang.String;@5fef0c19,[Ljava.lang.String;@2e6d76ba),Annotation([Ljava.lang.String;@22a6d75c,[Ljava.lang.String;@5a9840f3,[Ledu.cmu.lti.nlp.amr.Entity;@7d30007d))
AMR:
(x0 / 绯红, mod, x2 / 面颊)
(x0 / 绯红, time, x4 / 此时)
(x3 / 他, part, x2 / 面颊)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,484 microseconds
Sentence: 我 不 知 为什么 ， 又 感到 一 阵 莫名其妙 的 心酸 。

Oracle Span 1:  又 => 又
Oracle Span 2:  心酸 => 心酸-01
Oracle Span 3:  感到 => 感到-01
Oracle Span 4:  我 => 我
Oracle Span 5:  知 => 知-01
Oracle Span 6:  莫名其妙 => 莫名其妙-01
Oracle Span 7:  阵 => 阵
Spans:
Span 5-6:  又 => 又
Span 11-12:  心酸 => 心酸-01
Span 6-7:  感到 => 感到-01
Span 0-1:  我 => 我
Span 2-3:  知 => 知-01
Span 9-10:  莫名其妙 => 莫名其妙-01
Span 8-9:  阵 => 阵

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  又 => 又
Oracle Span 11-12:  心酸 => 心酸-01
Oracle Span 6-7:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  知 => 知-01
Oracle Span 9-10:  莫名其妙 => 莫名其妙-01
Oracle Span 8-9:  阵 => 阵

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知	_	VV	VV	_	0	root	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	感到	_	VV	VV	_	3	ccomp	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	阵	_	NN	NN	_	10	nn	_	_
10	莫名其妙	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	心酸	_	NN	NN	_	7	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x12 / 知-01, arg0, x15 / 我)
(x12 / 知-01, arg1, x16 / 感到-01)
(x16 / 感到-01, arg1, x19 / 心酸-01)
(x16 / 感到-01, manner, x18 / 又)
(x19 / 心酸-01, mod, x20 / 莫名其妙-01)
(x19 / 心酸-01, unit, x26 / 阵)

Input(Some(Graph((知-01 :arg1 (感到-01 :arg1-of (cause-01 :arg0 amr-unknown) :arg1 (心酸-01 :unit 阵 :quant 1 :mod 莫名其妙-01) :manner 又 :arg0 x15) :arg0 我 :polarity -),ArrayBuffer(Span(2,3,List(0),知,知-01,false), Span(6,7,List(1),感到,感到-01,false), Span(11,12,List(2),心酸,心酸-01,false), Span(8,9,List(3),阵,阵,false), Span(9,10,List(4),莫名其妙,莫名其妙-01,false), Span(5,6,List(5),又,又,false), Span(0,1,List(6),我,我,false)),Map(2 -> 心酸-01, 5 -> 又, 1 -> 感到-01, 4 -> 莫名其妙-01, 6 -> 我, 0 -> 知-01, 3 -> 阵),Map(x16 -> 感到-01, x19 -> 心酸-01, x12 -> 知-01, x15 -> 我, x18 -> 又, x26 -> 阵, x20 -> 莫名其妙-01))),[Ljava.lang.String;@382d71c7,Annotation([Ljava.lang.String;@2ca54da9,[Ljava.lang.String;@34a20f16,[Ljava.lang.String;@496cc217),Annotation([Ljava.lang.String;@1a1c21b4,[Ljava.lang.String;@1cd2ff5b,[Ledu.cmu.lti.nlp.amr.Dependency;@38ac8968),Annotation([Ljava.lang.String;@17ff8810,[Ljava.lang.String;@6c951ada,[Ljava.lang.String;@67b61834),Annotation([Ljava.lang.String;@3b0d3a63,[Ljava.lang.String;@50598a1a,[Ledu.cmu.lti.nlp.amr.Entity;@14de1901))
AMR:
(x12 / 知-01, mode, x16 / 感到-01)
(x12 / 知-01, polite, x15 / 我)
(x16 / 感到-01, manner, x18 / 又)
(x16 / 感到-01, prep-along-with, x26 / 阵)
(x19 / 心酸-01, mod, x20 / 莫名其妙-01)
(x19 / 心酸-01, unit, x26 / 阵)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.2.2
WARNING: makeIds can't find span Id: 0.2.2.0
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1
Decoded in 15,028 microseconds
Sentence: 这时 ， 我 产生 了 一 个 问题 ： “ 一 星期 以前 ， 我 认识 你 的 那 天 早上 ， 你 单独 一 个 人 在 这 旷无人烟 的 地方 走 着 ； 这么 说 ， 这 并不 是 偶然 的 了 ？

Oracle Span 1:  产生 => 产生-02
Oracle Span 2:  人 => 人
Oracle Span 3:  以前 => 以前
Oracle Span 4:  你 => 你
Oracle Span 5:  偶然 => 偶然
Oracle Span 6:  单独 => 单独
Oracle Span 7:  地方 => 地方
Oracle Span 8:  我 => 我
Oracle Span 9:  早上 => 早上
Oracle Span 10:  旷无人烟 => 旷无人烟
Oracle Span 11:  星期 => (temporal-quantity :unit 星期)
Oracle Span 12:  认识 => 认识-01
Oracle Span 13:  走 => 走-01
Oracle Span 14:  这 => 这
Oracle Span 15:  这 => 这
Oracle Span 16:  这时 => 这时
Oracle Span 17:  问题 => 问题
Spans:
Span 3-4:  产生 => 产生-02
Span 26-27:  人 => 人
Span 12-13:  以前 => 以前
Span 16-17:  你 => 你
Span 41-42:  偶然 => 偶然
Span 23-24:  单独 => 单独
Span 31-32:  地方 => 地方
Span 2-3:  我 => 我
Span 20-21:  早上 => 早上
Span 29-30:  旷无人烟 => 旷无人烟
Span 11-12:  星期 => (temporal-quantity :unit 星期)
Span 15-16:  认识 => 认识-01
Span 32-33:  走 => 走-01
Span 28-29:  这 => 这
Span 38-39:  这 => 这
Span 0-1:  这时 => 这时
Span 7-8:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  产生 => 产生-02
Oracle Span 26-27:  人 => 人
Oracle Span 12-13:  以前 => 以前
Oracle Span 16-17:  你 => 你
Oracle Span 41-42:  偶然 => 偶然
Oracle Span 23-24:  单独 => 单独
Oracle Span 31-32:  地方 => 地方
Oracle Span 2-3:  我 => 我
Oracle Span 20-21:  早上 => 早上
Oracle Span 29-30:  旷无人烟 => 旷无人烟
Oracle Span 11-12:  星期 => (temporal-quantity :unit 星期)
Oracle Span 15-16:  认识 => 认识-01
Oracle Span 32-33:  走 => 走-01
Oracle Span 28-29:  这 => 这
Oracle Span 38-39:  这 => 这
Oracle Span 0-1:  这时 => 这时
Oracle Span 7-8:  问题 => 问题

Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	产生	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	8	clf	_	_
8	问题	_	NN	NN	_	4	dobj	_	_
9	：	_	PU	PU	_	4	punct	_	_
10	“	_	PU	PU	_	16	punct	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	星期	_	NN	NN	_	13	lobj	_	_
13	以前	_	LC	LC	_	16	dep	_	_
14	,	_	PU	PU	_	16	punct	_	_
15	我	_	PN	PN	_	16	nsubj	_	_
16	认识	_	VV	VV	_	4	conj	_	_
17	你	_	PN	PN	_	32	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	那	_	DT	DT	_	32	det	_	_
20	天	_	M	M	_	19	clf	_	_
21	早上	_	NT	NT	_	30	dep	_	_
22	,	_	PU	PU	_	30	punct	_	_
23	你	_	PN	PN	_	30	nsubj	_	_
24	单独	_	AD	AD	_	30	advmod	_	_
25	一	_	CD	CD	_	26	nummod	_	_
26	个	_	M	M	_	27	clf	_	_
27	人	_	NN	NN	_	30	dobj	_	_
28	在	_	P	P	_	30	prep	_	_
29	这	_	PN	PN	_	28	pobj	_	_
30	旷无人烟	_	VV	VV	_	32	rcmod	_	_
31	的	_	DEC	DEC	_	30	cpm	_	_
32	地方	_	NN	NN	_	16	dobj	_	_
33	走	_	VV	VV	_	16	conj	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	；	_	PU	PU	_	4	punct	_	_
36	这么	_	AD	AD	_	37	advmod	_	_
37	说	_	VV	VV	_	4	conj	_	_
38	,	_	PU	PU	_	37	punct	_	_
39	这	_	DT	DT	_	40	det	_	_
40	并不	_	NN	NN	_	41	top	_	_
41	是	_	VC	VC	_	37	ccomp	_	_
42	偶然	_	VA	VA	_	41	attr	_	_
43	的	_	DEC	DEC	_	42	cpm	_	_
44	了	_	SP	SP	_	41	dep	_	_
45	？	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 产生-02, arg0, x2 / 我)
(x0 / 产生-02, arg1, x3 / 问题)
(x0 / 产生-02, time, x5 / 这时)
(x15 / 走-01, arg0, x16 / 你)
(x15 / 走-01, location, x21 / 地方)
(x15 / 走-01, manner, x17 / 单独)
(x15 / 走-01, manner, x18 / 人)
(x15 / 走-01, time, x24 / 早上)
(x15 / 走-01, time, x30 / 以前)
(x21 / 地方, mod, x22 / 这)
(x21 / 地方, mod, x23 / 旷无人烟)
(x26 / 认识-01, time, x24 / 早上)
(x30 / 以前, quant, x34 / temporal-quantity)
(x34 / temporal-quantity, unit, x42 / 星期)
(x38 / 偶然, domain, x40 / 这)

Input(Some(Graph((产生-02 :mode interrogative :time 这时 :arg1 (问题 :arg0-of (mean :arg1 (走-01 :arg1-of (cause-01 :arg0 (偶然 :domain 这 :polarity -)) :time (以前 :quant (temporal-quantity :unit 星期 :quant 1) :op now) :time (早上 :time-of (认识-01 :arg1 x16 :arg0 x2) :mod 那天) :location (地方 :mod 旷无人烟 :mod 这) :manner (人 :quant 1) :manner 单独 :arg0 你)) :quant 1) :arg0 我),ArrayBuffer(Span(3,4,List(0),产生,产生-02,false), Span(0,1,List(1),这时,这时,false), Span(7,8,List(2),问题,问题,false), Span(32,33,List(3),走,走-01,false), Span(41,42,List(4),偶然,偶然,false), Span(28,29,List(5),这,这,false), Span(12,13,List(6),以前,以前,false), Span(11,12,List(7, 8),星期,(temporal-quantity :unit 星期),false), Span(20,21,List(9),早上,早上,false), Span(15,16,List(10),认识,认识-01,false), Span(31,32,List(11),地方,地方,false), Span(29,30,List(12),旷无人烟,旷无人烟,false), Span(38,39,List(13),这,这,false), Span(26,27,List(14),人,人,false), Span(23,24,List(15),单独,单独,false), Span(16,17,List(16),你,你,false), Span(2,3,List(17),我,我,false)),Map(2 -> 问题, 5 -> 这, 12 -> 旷无人烟, 15 -> 单独, 8 -> 星期, 7 -> temporal-quantity, 17 -> 我, 1 -> 这时, 4 -> 偶然, 11 -> 地方, 14 -> 人, 6 -> 以前, 9 -> 早上, 0 -> 产生-02, 16 -> 你, 10 -> 认识-01, 3 -> 走-01, 13 -> 这),Map(x34 -> temporal-quantity, x40 -> 这, x22 -> 这, x16 -> 你, x2 -> 我, x5 -> 这时, x30 -> 以前, x21 -> 地方, x15 -> 走-01, x42 -> 星期, x24 -> 早上, x18 -> 人, x23 -> 旷无人烟, x38 -> 偶然, x26 -> 认识-01, x3 -> 问题, x0 -> 产生-02, x17 -> 单独))),[Ljava.lang.String;@437ed416,Annotation([Ljava.lang.String;@11f23038,[Ljava.lang.String;@de77146,[Ljava.lang.String;@691567ea),Annotation([Ljava.lang.String;@5cfed0ba,[Ljava.lang.String;@5c8d58ed,[Ledu.cmu.lti.nlp.amr.Dependency;@6a567f7b),Annotation([Ljava.lang.String;@28be7fec,[Ljava.lang.String;@26f0141,[Ljava.lang.String;@34136bd1),Annotation([Ljava.lang.String;@6de7778f,[Ljava.lang.String;@367d34c0,[Ledu.cmu.lti.nlp.amr.Entity;@4ce25e47))
AMR:
(x0 / 产生-02, time, x2 / 我)
(x0 / 产生-02, time, x5 / 这时)
(x15 / 走-01, manner, x17 / 单独)
(x15 / 走-01, manner, x38 / 偶然)
(x15 / 走-01, time, x21 / 地方)
(x15 / 走-01, time, x24 / 早上)
(x18 / 人, mod, x23 / 旷无人烟)
(x21 / 地方, mod, x23 / 旷无人烟)
(x23 / 旷无人烟, mod, x40 / 这)
(x26 / 认识-01, direction, x16 / 你)
(x26 / 认识-01, time, x24 / 早上)
(x26 / 认识-01, time, x30 / 以前)
(x3 / 问题, mod, x30 / 以前)
(x3 / 问题, time, x0 / 产生-02)
(x30 / 以前, quant, x34 / temporal-quantity)
(x34 / temporal-quantity, unit, x42 / 星期)
(x38 / 偶然, domain, x22 / 这)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.6.0
WARNING: makeIds can't find span Id: 0.1.1.0.6.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.5
WARNING: makeIds can't find span Id: 0.1.1.0.5.1
WARNING: makeIds can't find span Id: 0.1.1.0.5.1.1
WARNING: makeIds can't find span Id: 0.1.1.0.4
WARNING: makeIds can't find span Id: 0.1.1.0.4.1
WARNING: makeIds can't find span Id: 0.1.1.0.3
WARNING: makeIds can't find span Id: 0.1.1.0.3.1
WARNING: makeIds can't find span Id: 0.1.1.0.3.0
WARNING: makeIds can't find span Id: 0.1.1.0.2
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 109,069 microseconds
Sentence: 你 是 要 回到 你 降落 的 地方 去 是 吗 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  回到 => 回到-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  要 => 要-03
Oracle Span 5:  降落 => 降落-01
Spans:
Span 0-1:  你 => 你
Span 3-4:  回到 => 回到-01
Span 7-8:  地方 => 地方
Span 2-3:  要 => 要-03
Span 5-6:  降落 => 降落-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  回到 => 回到-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 2-3:  要 => 要-03
Oracle Span 5-6:  降落 => 降落-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	是	_	VC	VC	_	0	root	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	回到	_	VV	VV	_	8	rcmod	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	降落	_	VV	VV	_	4	dep	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	地方	_	NN	NN	_	2	attr	_	_
9	去	_	VV	VV	_	2	conj	_	_
10	是	_	VC	VC	_	9	cop	_	_
11	吗	_	SP	SP	_	2	dep	_	_
12	！	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 要-03, arg0, x15 / 回到-01)
(x15 / 回到-01, arg0, x16 / 你)
(x15 / 回到-01, arg1, x17 / 地方)
(x19 / 降落-01, arg1, x17 / 地方)

Input(Some(Graph((say :arg1 (要-03 :mode interrogative :arg0 (回到-01 :arg1 (地方 :arg1-of (降落-01 :arg0 x16)) :arg0 你))),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(3,4,List(1),回到,回到-01,false), Span(7,8,List(2),地方,地方,false), Span(5,6,List(3),降落,降落-01,false), Span(0,1,List(4),你,你,false)),Map(2 -> 地方, 1 -> 回到-01, 4 -> 你, 0 -> 要-03, 3 -> 降落-01),Map(x16 -> 你, x19 -> 降落-01, x15 -> 回到-01, x14 -> 要-03, x17 -> 地方))),[Ljava.lang.String;@6380e9e9,Annotation([Ljava.lang.String;@350da119,[Ljava.lang.String;@6a09484c,[Ljava.lang.String;@34c7232c),Annotation([Ljava.lang.String;@50ec4bfc,[Ljava.lang.String;@8b13d91,[Ledu.cmu.lti.nlp.amr.Dependency;@285a4fe3),Annotation([Ljava.lang.String;@2589d787,[Ljava.lang.String;@1788cb61,[Ljava.lang.String;@16d431b4),Annotation([Ljava.lang.String;@6c0b51da,[Ljava.lang.String;@7558633,[Ledu.cmu.lti.nlp.amr.Entity;@5657967b))
AMR:
(x15 / 回到-01, manner, x14 / 要-03)
(x15 / 回到-01, quant, x16 / 你)
(x19 / 降落-01, manner, x15 / 回到-01)
(x19 / 降落-01, prep-on, x17 / 地方)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,716 microseconds
Sentence: 小 王子 的 脸 又 红 了 。

Oracle Span 1:  又 => 又
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Spans:
Span 4-5:  又 => 又
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脸	_	NN	NN	_	6	nsubj	_	_
5	又	_	AD	AD	_	6	advmod	_	_
6	红	_	VA	VA	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph((脸红-01 :manner 又 :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(4,5,List(0),又,又,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小-01,false)),Map(2 -> 小-01, 1 -> 王子, 0 -> 又),Map(x10 -> 小-01, x8 -> 又, x9 -> 王子))),[Ljava.lang.String;@61394494,Annotation([Ljava.lang.String;@578a5ce8,[Ljava.lang.String;@7c453c34,[Ljava.lang.String;@16cb9989),Annotation([Ljava.lang.String;@3dfd6220,[Ljava.lang.String;@3815146b,[Ledu.cmu.lti.nlp.amr.Dependency;@6de43bc1),Annotation([Ljava.lang.String;@27a9f025,[Ljava.lang.String;@71936a92,[Ljava.lang.String;@61359e87),Annotation([Ljava.lang.String;@2dc39b53,[Ljava.lang.String;@45037e16,[Ledu.cmu.lti.nlp.amr.Entity;@2f2e4bde))
AMR:
(x8 / 又, location, x9 / 王子)
(x9 / 王子, mod, x10 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 4,781 microseconds
Sentence: 我 犹豫不定 地 又 说 了 一 句 ： “ 可能 是 因为 周年 纪念 吧 ？ … ”

Oracle Span 1:  又 => 又
Oracle Span 2:  可能 => 可能-01
Oracle Span 3:  周年 => 周年
Oracle Span 4:  我 => 我
Oracle Span 5:  犹豫不定 => 犹豫不定
Oracle Span 6:  纪念 => 纪念-01
Oracle Span 7:  说 => 说-01
Spans:
Span 3-4:  又 => 又
Span 10-11:  可能 => 可能-01
Span 13-14:  周年 => 周年
Span 0-1:  我 => 我
Span 1-2:  犹豫不定 => 犹豫不定
Span 14-15:  纪念 => 纪念-01
Span 4-5:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 10-11:  可能 => 可能-01
Oracle Span 13-14:  周年 => 周年
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  犹豫不定 => 犹豫不定
Oracle Span 14-15:  纪念 => 纪念-01
Oracle Span 4-5:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	犹豫不定	_	VA	VA	_	5	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	说	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	NT	NT	_	8	dep	_	_
8	句	_	VV	VV	_	5	ccomp	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	15	punct	_	_
11	可能	_	NN	NN	_	15	top	_	_
12	是	_	VC	VC	_	15	cop	_	_
13	因为	_	P	P	_	15	prep	_	_
14	周年	_	NN	NN	_	13	pobj	_	_
15	纪念	_	VV	VV	_	8	dep	_	_
16	吧	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	5	punct	_	_
18	…	_	PU	PU	_	5	punct	_	_
19	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x9 / 可能-01)
(x0 / 说-01, manner, x3 / 犹豫不定)
(x0 / 说-01, manner, x4 / 又)
(x16 / 纪念-01, mod, x17 / 周年)

Input(Some(Graph((说-01 :mode interrogative :arg1 (可能-01 :arg0 (thing :arg1-of (cause-01 :arg0 (纪念-01 :mod 周年)))) :mode interrogative :manner 又 :manner 犹豫不定 :arg0 我),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(10,11,List(1),可能,可能-01,false), Span(14,15,List(2),纪念,纪念-01,false), Span(13,14,List(3),周年,周年,false), Span(3,4,List(4),又,又,false), Span(1,2,List(5),犹豫不定,犹豫不定,false), Span(0,1,List(6),我,我,false)),Map(2 -> 纪念-01, 5 -> 犹豫不定, 1 -> 可能-01, 4 -> 又, 6 -> 我, 0 -> 说-01, 3 -> 周年),Map(x16 -> 纪念-01, x2 -> 我, x4 -> 又, x3 -> 犹豫不定, x17 -> 周年, x9 -> 可能-01, x0 -> 说-01))),[Ljava.lang.String;@6222391a,Annotation([Ljava.lang.String;@538a2f0e,[Ljava.lang.String;@d2708a7,[Ljava.lang.String;@508ad266),Annotation([Ljava.lang.String;@2313db84,[Ljava.lang.String;@216372b7,[Ledu.cmu.lti.nlp.amr.Dependency;@14b4340c),Annotation([Ljava.lang.String;@12abcd1e,[Ljava.lang.String;@2fd9fb34,[Ljava.lang.String;@1595d2b2),Annotation([Ljava.lang.String;@20349058,[Ljava.lang.String;@6cbb7a7d,[Ledu.cmu.lti.nlp.amr.Entity;@cdb3c85))
AMR:
(x0 / 说-01, manner, x3 / 犹豫不定)
(x0 / 说-01, manner, x4 / 又)
(x0 / 说-01, mode, x9 / 可能-01)
(x16 / 纪念-01, mod, x17 / 周年)
(x17 / 周年, prep-following, x9 / 可能-01)
(x2 / 我, part, x3 / 犹豫不定)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.4.0.0.0
WARNING: makeIds can't find span Id: 0.4.0.0.0.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,878 microseconds
Sentence: 小 王子 脸 又 红 了 。

Oracle Span 1:  又 => 又
Oracle Span 2:  小 => 小-01
Oracle Span 3:  王子 => 王子
Oracle Span 4:  红 => 红-01
Oracle Span 5:  脸 => 脸
Spans:
Span 3-4:  又 => 又
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 4-5:  红 => 红-01
Span 2-3:  脸 => 脸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  红 => 红-01
Oracle Span 2-3:  脸 => 脸

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	脸	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	红	_	VA	VA	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 红-01, arg0, x2 / 脸)
(x0 / 红-01, manner, x6 / 又)
(x3 / 王子, mod, x5 / 小-01)
(x3 / 王子, part, x2 / 脸)

Input(Some(Graph((红-01 :manner 又 :arg0 (脸 :part-of (王子 :mod 小-01))),ArrayBuffer(Span(4,5,List(0),红,红-01,false), Span(3,4,List(1),又,又,false), Span(2,3,List(2),脸,脸,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小-01,false)),Map(2 -> 脸, 1 -> 又, 4 -> 小-01, 0 -> 红-01, 3 -> 王子),Map(x2 -> 脸, x5 -> 小-01, x3 -> 王子, x6 -> 又, x0 -> 红-01))),[Ljava.lang.String;@37606fee,Annotation([Ljava.lang.String;@33d28f0a,[Ljava.lang.String;@48d739f,[Ljava.lang.String;@51e7589f),Annotation([Ljava.lang.String;@65cc5252,[Ljava.lang.String;@42c12b3e,[Ledu.cmu.lti.nlp.amr.Dependency;@2dbfa972),Annotation([Ljava.lang.String;@46f73ffa,[Ljava.lang.String;@41aebbb4,[Ljava.lang.String;@afde064),Annotation([Ljava.lang.String;@5a592c70,[Ljava.lang.String;@252ec02e,[Ledu.cmu.lti.nlp.amr.Entity;@11e9ac24))
AMR:
(x0 / 红-01, manner, x6 / 又)
(x0 / 红-01, op, x2 / 脸)
(x3 / 王子, mod, x5 / 小-01)
(x3 / 王子, part, x2 / 脸)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,133 microseconds
Sentence: 他 从来 也 不 回答 这些 问题 ， 但是 ， 脸 红 ， 就 等于 说 “ 是 的 ” ， 是 吧 ？

Oracle Span 1:  也 => 也
Oracle Span 2:  从来 => 从来
Oracle Span 3:  他 => 他
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  就 => 就
Oracle Span 6:  是 => 是
Oracle Span 7:  等于 => 等于-01
Oracle Span 8:  这些 => 这些
Oracle Span 9:  问题 => 问题
Spans:
Span 2-3:  也 => 也
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 4-5:  回答 => 回答-01
Span 13-14:  就 => 就
Span 17-18:  是 => 是
Span 14-15:  等于 => 等于-01
Span 5-6:  这些 => 这些
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 13-14:  就 => 就
Oracle Span 17-18:  是 => 是
Oracle Span 14-15:  等于 => 等于-01
Oracle Span 5-6:  这些 => 这些
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	从来	_	AD	AD	_	5	advmod	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	这些	_	DT	DT	_	7	det	_	_
7	问题	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	但是	_	AD	AD	_	12	advmod	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	脸	_	NN	NN	_	12	nsubj	_	_
12	红	_	VA	VA	_	5	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	就	_	AD	AD	_	16	advmod	_	_
15	等于	_	VV	VV	_	16	mmod	_	_
16	说	_	VV	VV	_	22	dep	_	_
17	“	_	PU	PU	_	18	punct	_	_
18	是	_	VC	VC	_	16	dobj	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	”	_	PU	PU	_	18	punct	_	_
21	,	_	PU	PU	_	22	punct	_	_
22	是	_	VC	VC	_	12	conj	_	_
23	吧	_	SP	SP	_	5	dep	_	_
24	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x16 / 等于-01, arg1, x20 / 是)
(x16 / 等于-01, manner, x19 / 就)
(x2 / 回答-01, arg0, x6 / 他)
(x2 / 回答-01, arg1, x7 / 问题)
(x2 / 回答-01, manner, x4 / 也)
(x2 / 回答-01, mod, x5 / 从来)
(x7 / 问题, mod, x8 / 这些)

Input(Some(Graph((contrast :arg1 (回答-01 :arg1 (问题 :mod 这些) :arg0 他 :mod 从来 :manner 也 :polarity -) :arg2 (等于-01 :mode interrogative :arg1 是 :manner 就 :arg0 (脸红-01 :arg0 x6))),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(6,7,List(1),问题,问题,false), Span(5,6,List(2),这些,这些,false), Span(0,1,List(3),他,他,false), Span(1,2,List(4),从来,从来,false), Span(2,3,List(5),也,也,false), Span(14,15,List(6),等于,等于-01,false), Span(17,18,List(7),是,是,false), Span(13,14,List(8),就,就,false)),Map(2 -> 这些, 5 -> 也, 8 -> 就, 7 -> 是, 1 -> 问题, 4 -> 从来, 6 -> 等于-01, 0 -> 回答-01, 3 -> 他),Map(x16 -> 等于-01, x19 -> 就, x2 -> 回答-01, x5 -> 从来, x8 -> 这些, x7 -> 问题, x4 -> 也, x6 -> 他, x20 -> 是))),[Ljava.lang.String;@74f280bd,Annotation([Ljava.lang.String;@675b18ff,[Ljava.lang.String;@34279b8a,[Ljava.lang.String;@687389a6),Annotation([Ljava.lang.String;@8641b7d,[Ljava.lang.String;@37c7766e,[Ledu.cmu.lti.nlp.amr.Dependency;@3fb450d7),Annotation([Ljava.lang.String;@4b7ed03e,[Ljava.lang.String;@636985df,[Ljava.lang.String;@6f91fbda),Annotation([Ljava.lang.String;@723e3c17,[Ljava.lang.String;@4ffced4e,[Ledu.cmu.lti.nlp.amr.Entity;@6094de13))
AMR:
(x16 / 等于-01, degree, x7 / 问题)
(x16 / 等于-01, location, x20 / 是)
(x16 / 等于-01, manner, x19 / 就)
(x2 / 回答-01, manner, x4 / 也)
(x2 / 回答-01, mod, x5 / 从来)
(x2 / 回答-01, mod, x8 / 这些)
(x5 / 从来, quant, x6 / 他)
(x7 / 问题, mod, x8 / 这些)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.4.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 24,904 microseconds
Sentence: “ 啊 ！ ”

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (啊 :mode expressive)),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x5 -> 啊))),[Ljava.lang.String;@bbb6f0,Annotation([Ljava.lang.String;@3e6ec74,[Ljava.lang.String;@2bd8f7db,[Ljava.lang.String;@6d7ad0f5),Annotation([Ljava.lang.String;@30abf79c,[Ljava.lang.String;@49a38b1,[Ledu.cmu.lti.nlp.amr.Dependency;@681061d6),Annotation([Ljava.lang.String;@53d6e959,[Ljava.lang.String;@3caee3a8,[Ljava.lang.String;@69a40b3c),Annotation([Ljava.lang.String;@251c90f,[Ljava.lang.String;@6629643d,[Ledu.cmu.lti.nlp.amr.Entity;@2dd178f3))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,144 microseconds
Sentence: 我 对 他 说 ： “ 我 有点 怕 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  怕 => 怕-01
Oracle Span 3:  我 => 我
Oracle Span 4:  有点 => 有点-01
Oracle Span 5:  说 => 说-01
Spans:
Span 2-3:  他 => 他
Span 8-9:  怕 => 怕-01
Span 0-1:  我 => 我
Span 7-8:  有点 => 有点-01
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 8-9:  怕 => 怕-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  有点 => 有点-01
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	9	nsubj	_	_
8	有点	_	AD	AD	_	9	advmod	_	_
9	怕	_	VV	VV	_	4	ccomp	_	_
10	…	_	NN	NN	_	9	dobj	_	_
11	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x3 / 怕-01)
(x0 / 说-01, arg3, x6 / 他)
(x3 / 怕-01, degree, x5 / 有点-01)

Input(Some(Graph((说-01 :arg3 他 :arg1 (怕-01 :degree 有点-01 :arg0 x2) :arg0 我),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(2,3,List(1),他,他,false), Span(8,9,List(2),怕,怕-01,false), Span(7,8,List(3),有点,有点-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 怕-01, 1 -> 他, 4 -> 我, 0 -> 说-01, 3 -> 有点-01),Map(x2 -> 我, x5 -> 有点-01, x3 -> 怕-01, x6 -> 他, x0 -> 说-01))),[Ljava.lang.String;@64656b9e,Annotation([Ljava.lang.String;@6870cfac,[Ljava.lang.String;@45554613,[Ljava.lang.String;@63e5b8aa),Annotation([Ljava.lang.String;@2c9306d3,[Ljava.lang.String;@4270b142,[Ledu.cmu.lti.nlp.amr.Dependency;@2dfa02c1),Annotation([Ljava.lang.String;@6314df3c,[Ljava.lang.String;@5785e813,[Ljava.lang.String;@10b8b900),Annotation([Ljava.lang.String;@6d294ddc,[Ljava.lang.String;@2801827a,[Ledu.cmu.lti.nlp.amr.Entity;@50bc3219))
AMR:
(x0 / 说-01, decade, x6 / 他)
(x0 / 说-01, scale, x3 / 怕-01)
(x0 / 说-01, snt3, x2 / 我)
(x3 / 怕-01, degree, x5 / 有点-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,927 microseconds
Sentence: 但 他 却 回答 我 说 ：

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  我 => 我
Spans:
Span 1-2:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我

Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	回答	_	VV	VV	_	6	dep	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 他)
(x2 / 回答-01, arg3, x4 / 我)

Input(Some(Graph((contrast :arg2 (回答-01 :arg3 我 :arg0 他)),ArrayBuffer(Span(3,4,List(0),回答,回答-01,false), Span(4,5,List(1),我,我,false), Span(1,2,List(2),他,他,false)),Map(2 -> 他, 1 -> 我, 0 -> 回答-01),Map(x2 -> 回答-01, x4 -> 我, x3 -> 他))),[Ljava.lang.String;@599f1b7,Annotation([Ljava.lang.String;@22791b75,[Ljava.lang.String;@64f4f12,[Ljava.lang.String;@37d28938),Annotation([Ljava.lang.String;@7d0cd23c,[Ljava.lang.String;@17c4dc5b,[Ledu.cmu.lti.nlp.amr.Dependency;@6b0f266e),Annotation([Ljava.lang.String;@4837f97e,[Ljava.lang.String;@53314f76,[Ljava.lang.String;@62a6674f),Annotation([Ljava.lang.String;@70881123,[Ljava.lang.String;@703fa45,[Ledu.cmu.lti.nlp.amr.Entity;@5e905f2c))
AMR:
(x2 / 回答-01, prep-on-behalf, x3 / 他)
(x2 / 回答-01, prep-with, x4 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,135 microseconds
Sentence: “ 你 现在 该 工作 了 。

Oracle Span 1:  你 => 你
Oracle Span 2:  工作 => 工作-01
Oracle Span 3:  现在 => 现在
Oracle Span 4:  该 => 该-01
Spans:
Span 1-2:  你 => 你
Span 4-5:  工作 => 工作-01
Span 2-3:  现在 => 现在
Span 3-4:  该 => 该-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  工作 => 工作-01
Oracle Span 2-3:  现在 => 现在
Oracle Span 3-4:  该 => 该-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	现在	_	NT	NT	_	5	tmod	_	_
4	该	_	VV	VV	_	5	mmod	_	_
5	工作	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 该-01, arg0, x8 / 工作-01)
(x7 / 该-01, time, x10 / 现在)
(x8 / 工作-01, arg0, x9 / 你)

Input(Some(Graph((say :arg1 (该-01 :time 现在 :arg0 (工作-01 :arg0 你))),ArrayBuffer(Span(3,4,List(0),该,该-01,false), Span(2,3,List(1),现在,现在,false), Span(4,5,List(2),工作,工作-01,false), Span(1,2,List(3),你,你,false)),Map(2 -> 工作-01, 1 -> 现在, 0 -> 该-01, 3 -> 你),Map(x10 -> 现在, x8 -> 工作-01, x7 -> 该-01, x9 -> 你))),[Ljava.lang.String;@fddd7ae,Annotation([Ljava.lang.String;@3f6cce7f,[Ljava.lang.String;@2725ca05,[Ljava.lang.String;@7b9088f2),Annotation([Ljava.lang.String;@1a914089,[Ljava.lang.String;@43d76a92,[Ledu.cmu.lti.nlp.amr.Dependency;@4a2bf50f),Annotation([Ljava.lang.String;@350323a0,[Ljava.lang.String;@2506b881,[Ljava.lang.String;@5d7dd549),Annotation([Ljava.lang.String;@486bd064,[Ljava.lang.String;@6459f4ea,[Ledu.cmu.lti.nlp.amr.Entity;@740b9a50))
AMR:
(x7 / 该-01, example, x8 / 工作-01)
(x7 / 该-01, location, x9 / 你)
(x7 / 该-01, time, x10 / 现在)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 5,572 microseconds
Sentence: 你 应该 回到 你 的 机器 那里 去 。

Oracle Span 1:  你 => 你
Oracle Span 2:  回到 => 回到-01
Oracle Span 3:  应该 => 应该-01
Oracle Span 4:  机器 => 机器
Spans:
Span 0-1:  你 => 你
Span 2-3:  回到 => 回到-01
Span 1-2:  应该 => 应该-01
Span 5-6:  机器 => 机器

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  回到 => 回到-01
Oracle Span 1-2:  应该 => 应该-01
Oracle Span 5-6:  机器 => 机器

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	应该	_	VV	VV	_	3	mmod	_	_
3	回到	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	机器	_	NN	NN	_	3	dobj	_	_
7	那里	_	PN	PN	_	8	nsubj	_	_
8	去	_	VV	VV	_	3	conj	_	_
9	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 应该-01, arg0, x2 / 回到-01)
(x2 / 回到-01, arg0, x3 / 你)
(x2 / 回到-01, arg1, x7 / 机器)

Input(Some(Graph((应该-01 :arg0 (回到-01 :arg1 (机器 :poss x3) :arg0 你)),ArrayBuffer(Span(1,2,List(0),应该,应该-01,false), Span(2,3,List(1),回到,回到-01,false), Span(5,6,List(2),机器,机器,false), Span(0,1,List(3),你,你,false)),Map(2 -> 机器, 1 -> 回到-01, 0 -> 应该-01, 3 -> 你),Map(x2 -> 回到-01, x7 -> 机器, x3 -> 你, x0 -> 应该-01))),[Ljava.lang.String;@476fde05,Annotation([Ljava.lang.String;@5111de7c,[Ljava.lang.String;@7ac48e10,[Ljava.lang.String;@52354202),Annotation([Ljava.lang.String;@6b1321b7,[Ljava.lang.String;@342ee097,[Ledu.cmu.lti.nlp.amr.Dependency;@6ac45c0c),Annotation([Ljava.lang.String;@12192604,[Ljava.lang.String;@6075b369,[Ljava.lang.String;@231cdda8),Annotation([Ljava.lang.String;@6b70d1fb,[Ljava.lang.String;@3002e397,[Ledu.cmu.lti.nlp.amr.Entity;@7da1e005))
AMR:
(x0 / 应该-01, op, x2 / 回到-01)
(x2 / 回到-01, prep-on, x3 / 你)
(x2 / 回到-01, snt3, x7 / 机器)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,232 microseconds
Sentence: 我 在 这里 等 你 。

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  等 => 等-01
Oracle Span 4:  这里 => 这里
Spans:
Span 4-5:  你 => 你
Span 0-1:  我 => 我
Span 3-4:  等 => 等-01
Span 2-3:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  等 => 等-01
Oracle Span 2-3:  这里 => 这里

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	这里	_	PN	PN	_	2	pobj	_	_
4	等	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 等-01, arg0, x2 / 我)
(x0 / 等-01, arg1, x3 / 你)
(x0 / 等-01, location, x4 / 这里)

Input(Some(Graph((等-01 :location 这里 :arg1 你 :arg0 我),ArrayBuffer(Span(3,4,List(0),等,等-01,false), Span(2,3,List(1),这里,这里,false), Span(4,5,List(2),你,你,false), Span(0,1,List(3),我,我,false)),Map(2 -> 你, 1 -> 这里, 0 -> 等-01, 3 -> 我),Map(x2 -> 我, x4 -> 这里, x3 -> 你, x0 -> 等-01))),[Ljava.lang.String;@38159384,Annotation([Ljava.lang.String;@55877274,[Ljava.lang.String;@723e2d08,[Ljava.lang.String;@6d4a82),Annotation([Ljava.lang.String;@14f060b8,[Ljava.lang.String;@7a0ab480,[Ledu.cmu.lti.nlp.amr.Dependency;@79df80a4),Annotation([Ljava.lang.String;@130cfc47,[Ljava.lang.String;@4eeab3e,[Ljava.lang.String;@2b6fb197),Annotation([Ljava.lang.String;@2eb0cefe,[Ljava.lang.String;@5a2ae1ab,[Ledu.cmu.lti.nlp.amr.Entity;@2bec068b))
AMR:
(x0 / 等-01, ARG3, x3 / 你)
(x0 / 等-01, location, x4 / 这里)
(x0 / 等-01, op, x2 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,854 microseconds
Sentence: 你 明天 晚上 再 来 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  再 => 再
Oracle Span 3:  明天 => 明天
Oracle Span 4:  晚上 => 晚上
Oracle Span 5:  来 => 来-01
Spans:
Span 0-1:  你 => 你
Span 3-4:  再 => 再
Span 1-2:  明天 => 明天
Span 2-3:  晚上 => 晚上
Span 4-5:  来 => 来-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  再 => 再
Oracle Span 1-2:  明天 => 明天
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 4-5:  来 => 来-01

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	明天	_	NT	NT	_	3	nn	_	_
3	晚上	_	NT	NT	_	5	tmod	_	_
4	再	_	AD	AD	_	5	advmod	_	_
5	来	_	VV	VV	_	0	root	_	_
6	…	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 晚上, time, x13 / 明天)
(x8 / 来-01, arg0, x12 / 你)
(x8 / 来-01, manner, x9 / 再)
(x8 / 来-01, time, x10 / 晚上)

Input(Some(Graph((say :arg1 (来-01 :arg0 你 :time (晚上 :time 明天) :manner 再)),ArrayBuffer(Span(4,5,List(0),来,来-01,false), Span(0,1,List(1),你,你,false), Span(2,3,List(2),晚上,晚上,false), Span(1,2,List(3),明天,明天,false), Span(3,4,List(4),再,再,false)),Map(2 -> 晚上, 1 -> 你, 4 -> 再, 0 -> 来-01, 3 -> 明天),Map(x10 -> 晚上, x13 -> 明天, x8 -> 来-01, x12 -> 你, x9 -> 再))),[Ljava.lang.String;@7d59e968,Annotation([Ljava.lang.String;@55361f03,[Ljava.lang.String;@581c9bb7,[Ljava.lang.String;@138f0661),Annotation([Ljava.lang.String;@212fafd1,[Ljava.lang.String;@448462f0,[Ledu.cmu.lti.nlp.amr.Dependency;@787988f4),Annotation([Ljava.lang.String;@132e3594,[Ljava.lang.String;@4f235107,[Ljava.lang.String;@28d739f1),Annotation([Ljava.lang.String;@1c5d3a37,[Ljava.lang.String;@7e3d2ebd,[Ledu.cmu.lti.nlp.amr.Entity;@2b43f314))
AMR:
(x10 / 晚上, time, x13 / 明天)
(x13 / 明天, mod, x12 / 你)
(x8 / 来-01, manner, x9 / 再)
(x8 / 来-01, time, x10 / 晚上)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,424 microseconds
Sentence: 但是 ， 我 放心 不 下 。

Oracle Span 1:  我 => 我
Oracle Span 2:  放心 => 放心-01
Spans:
Span 2-3:  我 => 我
Span 3-4:  放心 => 放心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  放心 => 放心-01

Dependencies:
1	但是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	放心	_	VV	VV	_	6	mmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	下	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 放心-01, arg0, x3 / 我)

Input(Some(Graph((contrast :arg2 (放心-01 :polarity - :arg0 我)),ArrayBuffer(Span(3,4,List(0),放心,放心-01,false), Span(2,3,List(1),我,我,false)),Map(1 -> 我, 0 -> 放心-01),Map(x2 -> 放心-01, x3 -> 我))),[Ljava.lang.String;@3a4a5f3c,Annotation([Ljava.lang.String;@4f3356c0,[Ljava.lang.String;@586cc15d,[Ljava.lang.String;@6c835217),Annotation([Ljava.lang.String;@4584304,[Ljava.lang.String;@51888019,[Ledu.cmu.lti.nlp.amr.Dependency;@6f50d55c),Annotation([Ljava.lang.String;@19b5214b,[Ljava.lang.String;@5fb3111a,[Ljava.lang.String;@4aaecabd),Annotation([Ljava.lang.String;@23bd0c81,[Ljava.lang.String;@1332dec4,[Ledu.cmu.lti.nlp.amr.Entity;@544e3679))
AMR:
(x2 / 放心-01, medium, x3 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,464 microseconds
Sentence: 我 想起 了 狐狸 的 话 。

Oracle Span 1:  想起 => 想起-01
Oracle Span 2:  我 => 我
Oracle Span 3:  狐狸 => 狐狸
Oracle Span 4:  话 => 话-01
Spans:
Span 1-2:  想起 => 想起-01
Span 0-1:  我 => 我
Span 3-4:  狐狸 => 狐狸
Span 5-6:  话 => 话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  想起 => 想起-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  狐狸 => 狐狸
Oracle Span 5-6:  话 => 话-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想起	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	狐狸	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	话	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想起-01, arg0, x2 / 我)
(x0 / 想起-01, arg1, x3 / 话-01)
(x3 / 话-01, arg0, x5 / 狐狸)

Input(Some(Graph((想起-01 :arg1 (话-01 :arg0 狐狸) :arg0 我),ArrayBuffer(Span(1,2,List(0),想起,想起-01,false), Span(5,6,List(1),话,话-01,false), Span(3,4,List(2),狐狸,狐狸,false), Span(0,1,List(3),我,我,false)),Map(2 -> 狐狸, 1 -> 话-01, 0 -> 想起-01, 3 -> 我),Map(x2 -> 我, x5 -> 狐狸, x3 -> 话-01, x0 -> 想起-01))),[Ljava.lang.String;@6889f56f,Annotation([Ljava.lang.String;@231b35fb,[Ljava.lang.String;@26da1ba2,[Ljava.lang.String;@3820cfe),Annotation([Ljava.lang.String;@2407a36c,[Ljava.lang.String;@5ec9eefa,[Ledu.cmu.lti.nlp.amr.Dependency;@28b8f98a),Annotation([Ljava.lang.String;@3b4ef59f,[Ljava.lang.String;@22cb3d59,[Ljava.lang.String;@33e4b9c4),Annotation([Ljava.lang.String;@5cff729b,[Ljava.lang.String;@10d18696,[Ledu.cmu.lti.nlp.amr.Entity;@6b8b5020))
AMR:
(x0 / 想起-01, ARG4, x3 / 话-01)
(x0 / 想起-01, value, x2 / 我)
(x3 / 话-01, time, x5 / 狐狸)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,331 microseconds
Sentence: 如果 被 人 驯服 了 ， 就 可能 会 要 哭 的 …

Oracle Span 1:  人 => 人
Oracle Span 2:  会 => 会-02
Oracle Span 3:  可能 => 可能-01
Oracle Span 4:  哭 => 哭-01
Oracle Span 5:  驯服 => 驯服-01
Spans:
Span 2-3:  人 => 人
Span 8-9:  会 => 会-02
Span 7-8:  可能 => 可能-01
Span 10-11:  哭 => 哭-01
Span 3-4:  驯服 => 驯服-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 8-9:  会 => 会-02
Oracle Span 7-8:  可能 => 可能-01
Oracle Span 10-11:  哭 => 哭-01
Oracle Span 3-4:  驯服 => 驯服-01

Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	被	_	LB	LB	_	4	pass	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	驯服	_	VA	VA	_	8	dep	_	_
5	了	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	可能	_	VV	VV	_	0	root	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	要	_	VV	VV	_	13	rcmod	_	_
11	哭	_	NN	NN	_	10	dobj	_	_
12	的	_	DEC	DEC	_	10	cpm	_	_
13	…	_	NN	NN	_	8	dobj	_	_

Oracle:
(x10 / 会-02, arg0, x11 / 哭-01)
(x2 / 驯服-01, arg0, x3 / 人)
(x9 / 可能-01, arg0, x10 / 会-02)

Input(Some(Graph((condition :arg1 (驯服-01 :arg0 人) :arg2 (可能-01 :arg0 (会-02 :arg0 哭-01))),ArrayBuffer(Span(3,4,List(0),驯服,驯服-01,false), Span(2,3,List(1),人,人,false), Span(7,8,List(2),可能,可能-01,false), Span(8,9,List(3),会,会-02,false), Span(10,11,List(4),哭,哭-01,false)),Map(2 -> 可能-01, 1 -> 人, 4 -> 哭-01, 0 -> 驯服-01, 3 -> 会-02),Map(x10 -> 会-02, x2 -> 驯服-01, x11 -> 哭-01, x3 -> 人, x9 -> 可能-01))),[Ljava.lang.String;@7d37ee0c,Annotation([Ljava.lang.String;@5a7b309b,[Ljava.lang.String;@4602f874,[Ljava.lang.String;@7739aac4),Annotation([Ljava.lang.String;@353c6da1,[Ljava.lang.String;@36c07c75,[Ledu.cmu.lti.nlp.amr.Dependency;@6750e381),Annotation([Ljava.lang.String;@5d850a25,[Ljava.lang.String;@b022551,[Ljava.lang.String;@3e14d390),Annotation([Ljava.lang.String;@5eb87338,[Ljava.lang.String;@2b999ee8,[Ledu.cmu.lti.nlp.amr.Entity;@31ab1e67))
AMR:
(x10 / 会-02, prep-on-behalf, x11 / 哭-01)
(x2 / 驯服-01, snt2, x9 / 可能-01)
(x3 / 人, season, x2 / 驯服-01)
(x9 / 可能-01, prep-on-behalf, x11 / 哭-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 8,583 microseconds
Sentence: XXVI 。

Oracle Span 1:  XXVI => XXVI
Spans:
Span 0-1:  XXVI => XXVI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXVI => XXVI

Dependencies:
1	XXVI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXVI,ArrayBuffer(Span(0,1,List(0),XXVI,XXVI,false)),Map(0 -> XXVI),Map(x0 -> XXVI))),[Ljava.lang.String;@29bbc391,Annotation([Ljava.lang.String;@3487442d,[Ljava.lang.String;@530ee28b,[Ljava.lang.String;@3a3f96ab),Annotation([Ljava.lang.String;@4def7d36,[Ljava.lang.String;@43c7fe8a,[Ledu.cmu.lti.nlp.amr.Dependency;@67f946c3),Annotation([Ljava.lang.String;@21b51e59,[Ljava.lang.String;@1785d194,[Ljava.lang.String;@6b4a4e40),Annotation([Ljava.lang.String;@46a8c2b4,[Ljava.lang.String;@4f664bee,[Ledu.cmu.lti.nlp.amr.Entity;@76563ae7))
AMR:


Decoded in 1,081 microseconds
Sentence: 在 井 旁边 有 一 堵 残缺 的 石墙 。

Oracle Span 1:  井 => 井
Oracle Span 2:  旁边 => 旁边
Oracle Span 3:  有 => 有-01
Oracle Span 4:  残缺 => 残缺-01
Oracle Span 5:  石墙 => 石墙
Spans:
Span 1-2:  井 => 井
Span 2-3:  旁边 => 旁边
Span 3-4:  有 => 有-01
Span 6-7:  残缺 => 残缺-01
Span 8-9:  石墙 => 石墙

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  井 => 井
Oracle Span 2-3:  旁边 => 旁边
Oracle Span 3-4:  有 => 有-01
Oracle Span 6-7:  残缺 => 残缺-01
Oracle Span 8-9:  石墙 => 石墙

Dependencies:
1	在	_	P	P	_	4	prep	_	_
2	井	_	NR	NR	_	1	pobj	_	_
3	旁边	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	堵	_	NN	NN	_	7	nn	_	_
7	残缺	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	石墙	_	NN	NN	_	4	dobj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 旁边)
(x0 / 有-01, arg1, x4 / 石墙)
(x2 / 旁边, arg0, x7 / 井)
(x4 / 石墙, mod, x5 / 残缺-01)

Input(Some(Graph((有-01 :arg1 (石墙 :quant 1 :mod 残缺-01) :arg0 (旁边 :arg0 井)),ArrayBuffer(Span(3,4,List(0),有,有-01,false), Span(8,9,List(1),石墙,石墙,false), Span(6,7,List(2),残缺,残缺-01,false), Span(2,3,List(3),旁边,旁边,false), Span(1,2,List(4),井,井,false)),Map(2 -> 残缺-01, 1 -> 石墙, 4 -> 井, 0 -> 有-01, 3 -> 旁边),Map(x2 -> 旁边, x5 -> 残缺-01, x7 -> 井, x4 -> 石墙, x0 -> 有-01))),[Ljava.lang.String;@4fd74223,Annotation([Ljava.lang.String;@4fea840f,[Ljava.lang.String;@32ae8f27,[Ljava.lang.String;@75e80a97),Annotation([Ljava.lang.String;@5b8853,[Ljava.lang.String;@1b8aaeab,[Ledu.cmu.lti.nlp.amr.Dependency;@5d1bdd4a),Annotation([Ljava.lang.String;@6812c8cc,[Ljava.lang.String;@3457cc8d,[Ljava.lang.String;@7a66c35a),Annotation([Ljava.lang.String;@7994a0d1,[Ljava.lang.String;@73e4387,[Ledu.cmu.lti.nlp.amr.Entity;@d87d449))
AMR:
(x0 / 有-01, ARG0, x2 / 旁边)
(x0 / 有-01, prep-as, x4 / 石墙)
(x2 / 旁边, ARG6, x7 / 井)
(x4 / 石墙, mod, x5 / 残缺-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,279 microseconds
Sentence: 第二 天 晚上 我 工作 回来 的 时候 ， 我 远远 地 看见 了 小 王子 耷拉 着 双腿 坐 在 墙 上 。

Oracle Span 1:  回来 => 回来-01
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  天 => 天
Oracle Span 4:  小 => 小-01
Oracle Span 5:  工作 => 工作-01
Oracle Span 6:  我 => 我
Oracle Span 7:  晚上 => 晚上
Oracle Span 8:  王子 => 王子
Oracle Span 9:  看见 => 看见-01
Oracle Span 10:  耷拉 => 耷拉-01
Oracle Span 11:  远远 => 远远-01
Spans:
Span 5-6:  回来 => 回来-01
Span 19-20:  坐 => 坐-01
Span 1-2:  天 => 天
Span 14-15:  小 => 小-01
Span 4-5:  工作 => 工作-01
Span 3-4:  我 => 我
Span 2-3:  晚上 => 晚上
Span 15-16:  王子 => 王子
Span 12-13:  看见 => 看见-01
Span 16-17:  耷拉 => 耷拉-01
Span 10-11:  远远 => 远远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回来 => 回来-01
Oracle Span 19-20:  坐 => 坐-01
Oracle Span 1-2:  天 => 天
Oracle Span 14-15:  小 => 小-01
Oracle Span 4-5:  工作 => 工作-01
Oracle Span 3-4:  我 => 我
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 15-16:  王子 => 王子
Oracle Span 12-13:  看见 => 看见-01
Oracle Span 16-17:  耷拉 => 耷拉-01
Oracle Span 10-11:  远远 => 远远-01

Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	8	clf	_	_
3	晚上	_	NT	NT	_	6	tmod	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	工作	_	NN	NN	_	6	dep	_	_
6	回来	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	时候	_	NN	NN	_	13	nsubj	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	远远	_	VA	VA	_	13	dvpmod	_	_
12	地	_	DEV	DEV	_	11	dvpm	_	_
13	看见	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	小	_	JJ	JJ	_	16	amod	_	_
16	王子	_	NN	NN	_	13	dobj	_	_
17	耷拉	_	VV	VV	_	13	conj	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	双腿	_	NN	NN	_	17	dobj	_	_
20	坐	_	VV	VV	_	17	conj	_	_
21	在	_	P	P	_	20	prep	_	_
22	墙	_	NN	NN	_	23	lobj	_	_
23	上	_	LC	LC	_	21	plmod	_	_
24	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 看见-01, arg0, x2 / 我)
(x0 / 看见-01, arg1, x4 / 坐-01)
(x0 / 看见-01, manner, x3 / 远远-01)
(x0 / 看见-01, time, x12 / 回来-01)
(x12 / 回来-01, arg1, x14 / 工作-01)
(x12 / 回来-01, time, x15 / 晚上)
(x15 / 晚上, time, x21 / 天)
(x4 / 坐-01, arg0, x5 / 王子)
(x4 / 坐-01, manner, x8 / 耷拉-01)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph((看见-01 :time (回来-01 :time (晚上 :time (天 :ord (ordinal-entity :value 2))) :arg1 (工作-01 :arg0 x2) :arg0 x2) :arg1 (坐-01 :manner (耷拉-01 :arg0 (腿 :part-of x5 :quant 2)) :arg1 墙上 :arg0 (王子 :mod 小-01)) :manner 远远-01 :arg0 我),ArrayBuffer(Span(12,13,List(0),看见,看见-01,false), Span(5,6,List(1),回来,回来-01,false), Span(2,3,List(2),晚上,晚上,false), Span(1,2,List(3),天,天,false), Span(4,5,List(4),工作,工作-01,false), Span(19,20,List(5),坐,坐-01,false), Span(16,17,List(6),耷拉,耷拉-01,false), Span(15,16,List(7),王子,王子,false), Span(14,15,List(8),小,小-01,false), Span(10,11,List(9),远远,远远-01,false), Span(3,4,List(10),我,我,false)),Map(2 -> 晚上, 5 -> 坐-01, 8 -> 小-01, 7 -> 王子, 1 -> 回来-01, 4 -> 工作-01, 6 -> 耷拉-01, 9 -> 远远-01, 0 -> 看见-01, 10 -> 我, 3 -> 天),Map(x2 -> 我, x5 -> 王子, x8 -> 耷拉-01, x12 -> 回来-01, x21 -> 天, x15 -> 晚上, x4 -> 坐-01, x3 -> 远远-01, x6 -> 小-01, x14 -> 工作-01, x0 -> 看见-01))),[Ljava.lang.String;@4137aab0,Annotation([Ljava.lang.String;@1df9186f,[Ljava.lang.String;@682e422c,[Ljava.lang.String;@5bb8e6fc),Annotation([Ljava.lang.String;@2726a511,[Ljava.lang.String;@72c9ebfa,[Ledu.cmu.lti.nlp.amr.Dependency;@686cf8ad),Annotation([Ljava.lang.String;@747f6c5a,[Ljava.lang.String;@66e341e9,[Ljava.lang.String;@5b48f0f4),Annotation([Ljava.lang.String;@546ed2a0,[Ljava.lang.String;@5bfc79cb,[Ledu.cmu.lti.nlp.amr.Entity;@27ec8754))
AMR:
(x0 / 看见-01, manner, x3 / 远远-01)
(x0 / 看见-01, time, x12 / 回来-01)
(x0 / 看见-01, time, x2 / 我)
(x0 / 看见-01, time, x4 / 坐-01)
(x12 / 回来-01, ARG0, x14 / 工作-01)
(x12 / 回来-01, time, x15 / 晚上)
(x15 / 晚上, time, x21 / 天)
(x4 / 坐-01, manner, x8 / 耷拉-01)
(x4 / 坐-01, time, x5 / 王子)
(x5 / 王子, mod, x6 / 小-01)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.2
WARNING: makeIds can't find span Id: 0.3.2.0
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 40,569 microseconds
Sentence: 我 听见 他 在 说话 ： “ 你 怎么 不 记得 了 呢 ？ ”

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  听见 => 听见-01
Oracle Span 4:  我 => 我
Oracle Span 5:  记得 => 记得-01
Oracle Span 6:  说话 => 说话-01
Spans:
Span 2-3:  他 => 他
Span 7-8:  你 => 你
Span 1-2:  听见 => 听见-01
Span 0-1:  我 => 我
Span 10-11:  记得 => 记得-01
Span 4-5:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  你 => 你
Oracle Span 1-2:  听见 => 听见-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  记得 => 记得-01
Oracle Span 4-5:  说话 => 说话-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	听见	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	在	_	AD	AD	_	5	advmod	_	_
5	说话	_	VV	VV	_	2	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	你	_	PN	PN	_	11	nsubj	_	_
9	怎么	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	记得	_	VV	VV	_	5	conj	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	呢	_	SP	SP	_	2	dep	_	_
14	？	_	PU	PU	_	2	punct	_	_
15	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 听见-01, arg0, x2 / 我)
(x0 / 听见-01, arg1, x17 / 说话-01)
(x17 / 说话-01, arg0, x18 / 他)
(x17 / 说话-01, arg1, x19 / 记得-01)
(x19 / 记得-01, arg0, x21 / 你)

Input(Some(Graph((听见-01 :arg1 (说话-01 :mode interrogative :arg1 (记得-01 :arg1-of (cause-01 :arg0 amr-unknown) :arg0 你 :polarity -) :arg0 他) :arg0 我),ArrayBuffer(Span(1,2,List(0),听见,听见-01,false), Span(4,5,List(1),说话,说话-01,false), Span(10,11,List(2),记得,记得-01,false), Span(7,8,List(3),你,你,false), Span(2,3,List(4),他,他,false), Span(0,1,List(5),我,我,false)),Map(2 -> 记得-01, 5 -> 我, 1 -> 说话-01, 4 -> 他, 0 -> 听见-01, 3 -> 你),Map(x2 -> 我, x19 -> 记得-01, x21 -> 你, x18 -> 他, x17 -> 说话-01, x0 -> 听见-01))),[Ljava.lang.String;@3bbf1c0d,Annotation([Ljava.lang.String;@19662208,[Ljava.lang.String;@216c22ce,[Ljava.lang.String;@62f9c790),Annotation([Ljava.lang.String;@21e5f0b6,[Ljava.lang.String;@93bf0e0,[Ledu.cmu.lti.nlp.amr.Dependency;@4981d95b),Annotation([Ljava.lang.String;@656842bc,[Ljava.lang.String;@6b867ee7,[Ljava.lang.String;@3dec3f87),Annotation([Ljava.lang.String;@7a606260,[Ljava.lang.String;@5dbab232,[Ledu.cmu.lti.nlp.amr.Entity;@5939e24))
AMR:
(x0 / 听见-01, beneficiary, x2 / 我)
(x0 / 听见-01, mode, x17 / 说话-01)
(x0 / 听见-01, snt11, x18 / 他)
(x19 / 记得-01, polite, x17 / 说话-01)
(x19 / 记得-01, snt3, x21 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,777 microseconds
Sentence: 绝 不 是 在 这儿 。 ”

Oracle Span 1:  绝 => 绝
Oracle Span 2:  这儿 => 这儿
Spans:
Span 0-1:  绝 => 绝
Span 4-5:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  绝 => 绝
Oracle Span 4-5:  这儿 => 这儿

Dependencies:
1	绝	_	AD	AD	_	3	advmod	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	是	_	VC	VC	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这儿	_	PN	PN	_	4	pobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 这儿, manner, x8 / 绝)

Input(Some(Graph((say :arg1 (这儿 :manner 绝 :polarity -)),ArrayBuffer(Span(4,5,List(0),这儿,这儿,false), Span(0,1,List(1),绝,绝,false)),Map(1 -> 绝, 0 -> 这儿),Map(x8 -> 绝, x6 -> 这儿))),[Ljava.lang.String;@595f9916,Annotation([Ljava.lang.String;@2055833f,[Ljava.lang.String;@28768e25,[Ljava.lang.String;@310d57b1),Annotation([Ljava.lang.String;@143fefaf,[Ljava.lang.String;@18ffca6c,[Ledu.cmu.lti.nlp.amr.Dependency;@46468f0),Annotation([Ljava.lang.String;@5f8f1712,[Ljava.lang.String;@34a6d9db,[Ljava.lang.String;@52ecc989),Annotation([Ljava.lang.String;@756808cc,[Ljava.lang.String;@52f8a6f4,[Ledu.cmu.lti.nlp.amr.Entity;@5012c571))
AMR:
(x6 / 这儿, manner, x8 / 绝)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 2,826 microseconds
Sentence: 大概 还 有 另 一 个 声音 在 回答 他 ， 因为 他 答 着 腔 说道 ： “ 没错 ， 没错 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  另 => 另
Oracle Span 3:  回答 => 回答-01
Oracle Span 4:  声音 => 声音
Oracle Span 5:  大概 => 大概
Oracle Span 6:  没错 => 没错-01
Oracle Span 7:  没错 => 没错-01
Oracle Span 8:  答 => 答-02
Spans:
Span 9-10:  他 => 他
Span 3-4:  另 => 另
Span 8-9:  回答 => 回答-01
Span 6-7:  声音 => 声音
Span 0-1:  大概 => 大概
Span 19-20:  没错 => 没错-01
Span 21-22:  没错 => 没错-01
Span 13-14:  答 => 答-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 3-4:  另 => 另
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 6-7:  声音 => 声音
Oracle Span 0-1:  大概 => 大概
Oracle Span 19-20:  没错 => 没错-01
Oracle Span 21-22:  没错 => 没错-01
Oracle Span 13-14:  答 => 答-02

Dependencies:
1	大概	_	AD	AD	_	3	advmod	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	另	_	DT	DT	_	7	det	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	4	dep	_	_
7	声音	_	NN	NN	_	9	nsubj	_	_
8	在	_	AD	AD	_	9	advmod	_	_
9	回答	_	VV	VV	_	3	dep	_	_
10	他	_	PN	PN	_	17	nsubj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	因为	_	P	P	_	17	prep	_	_
13	他	_	PN	PN	_	14	nsubj	_	_
14	答	_	VV	VV	_	12	pccomp	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	腔	_	M	M	_	14	dobj	_	_
17	说道	_	VV	VV	_	3	dep	_	_
18	：	_	PU	PU	_	17	punct	_	_
19	“	_	PU	PU	_	22	punct	_	_
20	没错	_	NN	NN	_	22	nsubj	_	_
21	,	_	PU	PU	_	22	punct	_	_
22	没错	_	VV	VV	_	17	ccomp	_	_
23	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x19 / 答-02, arg0, x20 / 他)
(x24 / 回答-01, arg0, x25 / 声音)
(x24 / 回答-01, manner, x30 / 大概)
(x25 / 声音, mod, x27 / 另)

Input(Some(Graph((causation :arg1 (答-02 :arg1 (and :op 没错-01 :op 没错-01) :arg0 他) :arg2 (回答-01 :manner 大概 :arg1 x20 :arg0 (声音 :mod 另 :quant 1))),ArrayBuffer(Span(13,14,List(0),答,答-02,false), Span(19,20,List(1),没错,没错-01,false), Span(21,22,List(2),没错,没错-01,false), Span(9,10,List(3),他,他,false), Span(8,9,List(4),回答,回答-01,false), Span(0,1,List(5),大概,大概,false), Span(6,7,List(6),声音,声音,false), Span(3,4,List(7),另,另,false)),Map(2 -> 没错-01, 5 -> 大概, 7 -> 另, 1 -> 没错-01, 4 -> 回答-01, 6 -> 声音, 0 -> 答-02, 3 -> 他),Map(x22 -> 没错-01, x25 -> 声音, x19 -> 答-02, x30 -> 大概, x27 -> 另, x24 -> 回答-01, x23 -> 没错-01, x20 -> 他))),[Ljava.lang.String;@6486fe7b,Annotation([Ljava.lang.String;@511da44f,[Ljava.lang.String;@4645679e,[Ljava.lang.String;@3a0b6a),Annotation([Ljava.lang.String;@539c4830,[Ljava.lang.String;@6f1fa1d0,[Ledu.cmu.lti.nlp.amr.Dependency;@28b523a),Annotation([Ljava.lang.String;@52ba685a,[Ljava.lang.String;@63d677f5,[Ljava.lang.String;@71d55b7e),Annotation([Ljava.lang.String;@2997ddfc,[Ljava.lang.String;@28ee882c,[Ledu.cmu.lti.nlp.amr.Entity;@78d73b1b))
AMR:
(x19 / 答-02, degree, x25 / 声音)
(x19 / 答-02, op, x22 / 没错-01)
(x23 / 没错-01, degree, x22 / 没错-01)
(x24 / 回答-01, manner, x25 / 声音)
(x24 / 回答-01, manner, x30 / 大概)
(x24 / 回答-01, season, x20 / 他)
(x25 / 声音, mod, x27 / 另)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
Decoded in 20,010 microseconds
Sentence: 日子 是 对 的 ； 但 地点 不 是 这里 … ”

Oracle Span 1:  地点 => 地点
Oracle Span 2:  对 => 对-02
Oracle Span 3:  日子 => 日子
Oracle Span 4:  这里 => 这里
Spans:
Span 6-7:  地点 => 地点
Span 2-3:  对 => 对-02
Span 0-1:  日子 => 日子
Span 9-10:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  地点 => 地点
Oracle Span 2-3:  对 => 对-02
Oracle Span 0-1:  日子 => 日子
Oracle Span 9-10:  这里 => 这里

Dependencies:
1	日子	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	对	_	VA	VA	_	2	attr	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	；	_	PU	PU	_	2	punct	_	_
6	但	_	AD	AD	_	9	advmod	_	_
7	地点	_	NN	NN	_	9	nsubj	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	2	conj	_	_
10	这里	_	PN	PN	_	9	attr	_	_
11	…	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 对-02, arg0, x11 / 日子)
(x12 / 这里, domain, x14 / 地点)

Input(Some(Graph((say :arg1 (contrast :arg1 (对-02 :arg0 日子) :arg2 (这里 :domain 地点 :polarity -))),ArrayBuffer(Span(2,3,List(0),对,对-02,false), Span(0,1,List(1),日子,日子,false), Span(9,10,List(2),这里,这里,false), Span(6,7,List(3),地点,地点,false)),Map(2 -> 这里, 1 -> 日子, 0 -> 对-02, 3 -> 地点),Map(x10 -> 对-02, x12 -> 这里, x11 -> 日子, x14 -> 地点))),[Ljava.lang.String;@238291d4,Annotation([Ljava.lang.String;@34edd065,[Ljava.lang.String;@681e913c,[Ljava.lang.String;@29d070c7),Annotation([Ljava.lang.String;@1eeb5818,[Ljava.lang.String;@44dfdd58,[Ledu.cmu.lti.nlp.amr.Dependency;@58d4238e),Annotation([Ljava.lang.String;@72a8361b,[Ljava.lang.String;@36478bce,[Ljava.lang.String;@c48b543),Annotation([Ljava.lang.String;@75793f17,[Ljava.lang.String;@4652c74d,[Ledu.cmu.lti.nlp.amr.Entity;@4cc12db2))
AMR:
(x11 / 日子, destination, x10 / 对-02)
(x12 / 这里, domain, x14 / 地点)
(x14 / 地点, mod, x10 / 对-02)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 8,617 microseconds
Sentence: 我 继续 朝 墙 走去 。

Oracle Span 1:  墙 => 墙
Oracle Span 2:  我 => 我
Oracle Span 3:  继续 => 继续-01
Spans:
Span 3-4:  墙 => 墙
Span 0-1:  我 => 我
Span 1-2:  继续 => 继续-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  墙 => 墙
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  继续 => 继续-01

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	继续	_	VV	VV	_	5	mmod	_	_
3	朝	_	P	P	_	5	prep	_	_
4	墙	_	NN	NN	_	3	pobj	_	_
5	走去	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x5 / 继续-01, arg0, x7 / 我)

Input(Some(Graph((继续-01 :arg1 (走-01 :arg0 x7 :arg2 墙) :arg0 我),ArrayBuffer(Span(1,2,List(0),继续,继续-01,false), Span(3,4,List(1),墙,墙,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 墙, 0 -> 继续-01),Map(x10 -> 墙, x5 -> 继续-01, x7 -> 我))),[Ljava.lang.String;@5ea7bc4,Annotation([Ljava.lang.String;@39d77de9,[Ljava.lang.String;@696fad31,[Ljava.lang.String;@2c06b113),Annotation([Ljava.lang.String;@7a64cb0c,[Ljava.lang.String;@785ed99c,[Ledu.cmu.lti.nlp.amr.Dependency;@6c4ce583),Annotation([Ljava.lang.String;@755b5f30,[Ljava.lang.String;@29bbc63c,[Ljava.lang.String;@272778ae),Annotation([Ljava.lang.String;@2cccf134,[Ljava.lang.String;@3c18942,[Ledu.cmu.lti.nlp.amr.Entity;@743c3520))
AMR:
(x5 / 继续-01, ARG4, x10 / 墙)
(x5 / 继续-01, medium, x7 / 我)

WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,723 microseconds
Sentence: 我 还是 看 不 到 ， 也 听 不 见 任何 别人 。

Oracle Span 1:  也 => 也
Oracle Span 2:  任何 => 任何
Oracle Span 3:  别人 => 别人
Oracle Span 4:  我 => 我
Oracle Span 5:  还是 => 还是
Spans:
Span 6-7:  也 => 也
Span 10-11:  任何 => 任何
Span 11-12:  别人 => 别人
Span 0-1:  我 => 我
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  也 => 也
Oracle Span 10-11:  任何 => 任何
Oracle Span 11-12:  别人 => 别人
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	看	_	VV	VV	_	0	root	_	_
4	不	_	AD	AD	_	3	dep	_	_
5	到	_	VV	VV	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	也	_	AD	AD	_	8	advmod	_	_
8	听	_	VV	VV	_	3	dep	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	见	_	VV	VV	_	8	dep	_	_
11	任何	_	DT	DT	_	12	det	_	_
12	别人	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 别人, mod, x8 / 任何)

Input(Some(Graph((and :op (看到-01 :polarity - :arg0 我 :manner 还是 :arg1 (别人 :mod 任何)) :op (听见-01 :arg0 x5 :polarity - :manner 也 :arg2 x7)),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(1,2,List(1),还是,还是,false), Span(11,12,List(2),别人,别人,false), Span(10,11,List(3),任何,任何,false), Span(6,7,List(4),也,也,false)),Map(2 -> 别人, 1 -> 还是, 4 -> 也, 0 -> 我, 3 -> 任何),Map(x5 -> 我, x8 -> 任何, x12 -> 也, x7 -> 别人, x6 -> 还是))),[Ljava.lang.String;@6842c101,Annotation([Ljava.lang.String;@234cd86c,[Ljava.lang.String;@2c48cede,[Ljava.lang.String;@39c87b42),Annotation([Ljava.lang.String;@47fcefb3,[Ljava.lang.String;@236c098,[Ledu.cmu.lti.nlp.amr.Dependency;@68e2d03e),Annotation([Ljava.lang.String;@120aa40b,[Ljava.lang.String;@32ab408e,[Ljava.lang.String;@6ad6443),Annotation([Ljava.lang.String;@78b03788,[Ljava.lang.String;@3f5dfe69,[Ledu.cmu.lti.nlp.amr.Entity;@571a663c))
AMR:
(x12 / 也, mod, x7 / 别人)
(x6 / 还是, instrument, x5 / 我)
(x7 / 别人, mod, x6 / 还是)
(x7 / 别人, mod, x8 / 任何)

WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 9,952 microseconds
Sentence: 可是 小 王子 又 回答 道 ： “ … 那 当然 。

Oracle Span 1:  又 => 又
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  当然 => 当然
Oracle Span 5:  王子 => 王子
Oracle Span 6:  那 => 那
Spans:
Span 3-4:  又 => 又
Span 4-5:  回答 => 回答-01
Span 1-2:  小 => 小-01
Span 10-11:  当然 => 当然
Span 2-3:  王子 => 王子
Span 9-10:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 1-2:  小 => 小-01
Oracle Span 10-11:  当然 => 当然
Oracle Span 2-3:  王子 => 王子
Oracle Span 9-10:  那 => 那

Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	道	_	NN	NN	_	5	dobj	_	_
7	：	_	PU	PU	_	5	punct	_	_
8	“	_	PU	PU	_	5	punct	_	_
9	…	_	PU	PU	_	11	dep	_	_
10	那	_	PN	PN	_	11	advmod	_	_
11	当然	_	AD	AD	_	5	conj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 王子)
(x2 / 回答-01, arg2, x6 / 当然)
(x2 / 回答-01, manner, x5 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 当然, mod, x7 / 那)

Input(Some(Graph((contrast :arg2 (回答-01 :arg2 (当然 :mod 那) :manner 又 :arg0 (王子 :mod 小-01))),ArrayBuffer(Span(4,5,List(0),回答,回答-01,false), Span(10,11,List(1),当然,当然,false), Span(9,10,List(2),那,那,false), Span(3,4,List(3),又,又,false), Span(2,3,List(4),王子,王子,false), Span(1,2,List(5),小,小-01,false)),Map(2 -> 那, 5 -> 小-01, 1 -> 当然, 4 -> 王子, 0 -> 回答-01, 3 -> 又),Map(x2 -> 回答-01, x5 -> 又, x7 -> 那, x4 -> 小-01, x3 -> 王子, x6 -> 当然))),[Ljava.lang.String;@3a788fe0,Annotation([Ljava.lang.String;@430df350,[Ljava.lang.String;@1373e3ee,[Ljava.lang.String;@175c5c3a),Annotation([Ljava.lang.String;@69a5c6be,[Ljava.lang.String;@451e2fa9,[Ledu.cmu.lti.nlp.amr.Dependency;@497ed877),Annotation([Ljava.lang.String;@3cb6e0ee,[Ljava.lang.String;@7b6141f0,[Ljava.lang.String;@4fb64a52),Annotation([Ljava.lang.String;@70b48eb3,[Ljava.lang.String;@7b8ea1db,[Ledu.cmu.lti.nlp.amr.Entity;@a91119b))
AMR:
(x2 / 回答-01, manner, x5 / 又)
(x2 / 回答-01, mod, x7 / 那)
(x2 / 回答-01, prep-on-behalf, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 当然, mod, x7 / 那)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 10,932 microseconds
Sentence: 你 会 在 沙 上 看到 我 的 脚印 是 从 什么 地方 开始 的 。

Oracle Span 1:  会 => 会-01
Oracle Span 2:  你 => 你
Oracle Span 3:  地方 => 地方
Oracle Span 4:  开始 => 开始-02
Oracle Span 5:  我 => 我
Oracle Span 6:  沙 => 沙
Oracle Span 7:  看到 => 看到-01
Oracle Span 8:  脚印 => 脚印
Spans:
Span 1-2:  会 => 会-01
Span 0-1:  你 => 你
Span 12-13:  地方 => 地方
Span 13-14:  开始 => 开始-02
Span 6-7:  我 => 我
Span 3-4:  沙 => 沙
Span 5-6:  看到 => 看到-01
Span 8-9:  脚印 => 脚印

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-01
Oracle Span 0-1:  你 => 你
Oracle Span 12-13:  地方 => 地方
Oracle Span 13-14:  开始 => 开始-02
Oracle Span 6-7:  我 => 我
Oracle Span 3-4:  沙 => 沙
Oracle Span 5-6:  看到 => 看到-01
Oracle Span 8-9:  脚印 => 脚印

Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	会	_	VV	VV	_	6	mmod	_	_
3	在	_	P	P	_	6	prep	_	_
4	沙	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	3	plmod	_	_
6	看到	_	VV	VV	_	0	root	_	_
7	我	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	脚印	_	NN	NN	_	6	dobj	_	_
10	是	_	VC	VC	_	6	dep	_	_
11	从	_	P	P	_	14	prep	_	_
12	什么	_	DT	DT	_	13	det	_	_
13	地方	_	NN	NN	_	11	pobj	_	_
14	开始	_	VV	VV	_	10	attr	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 看到-01)
(x19 / 开始-02, arg0, x20 / 脚印)
(x19 / 开始-02, location, x18 / 地方)
(x2 / 看到-01, arg0, x3 / 你)
(x2 / 看到-01, arg1, x18 / 地方)
(x2 / 看到-01, location, x16 / 沙)
(x20 / 脚印, poss, x21 / 我)

Input(Some(Graph((会-01 :arg0 (看到-01 :arg1 (地方 :location-of (开始-02 :arg0 (脚印 :poss 我))) :location 沙 :arg0 你)),ArrayBuffer(Span(1,2,List(0),会,会-01,false), Span(5,6,List(1),看到,看到-01,false), Span(12,13,List(2),地方,地方,false), Span(13,14,List(3),开始,开始-02,false), Span(8,9,List(4),脚印,脚印,false), Span(6,7,List(5),我,我,false), Span(3,4,List(6),沙,沙,false), Span(0,1,List(7),你,你,false)),Map(2 -> 地方, 5 -> 我, 7 -> 你, 1 -> 看到-01, 4 -> 脚印, 6 -> 沙, 0 -> 会-01, 3 -> 开始-02),Map(x16 -> 沙, x19 -> 开始-02, x2 -> 看到-01, x21 -> 我, x18 -> 地方, x3 -> 你, x20 -> 脚印, x0 -> 会-01))),[Ljava.lang.String;@77083e41,Annotation([Ljava.lang.String;@231df705,[Ljava.lang.String;@2d130ac4,[Ljava.lang.String;@2f0ccb34),Annotation([Ljava.lang.String;@194012a2,[Ljava.lang.String;@55296b50,[Ledu.cmu.lti.nlp.amr.Dependency;@60591e1b),Annotation([Ljava.lang.String;@29c53c4f,[Ljava.lang.String;@3009eed7,[Ljava.lang.String;@2ee4706d),Annotation([Ljava.lang.String;@6650a6c,[Ljava.lang.String;@64279ab,[Ledu.cmu.lti.nlp.amr.Entity;@794240e2))
AMR:
(x0 / 会-01, prep-through, x2 / 看到-01)
(x19 / 开始-02, location, x18 / 地方)
(x19 / 开始-02, time, x20 / 脚印)
(x2 / 看到-01, location, x16 / 沙)
(x2 / 看到-01, subevent, x3 / 你)
(x2 / 看到-01, time, x18 / 地方)
(x20 / 脚印, poss, x21 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 20,862 microseconds
Sentence: 你 在 那里 等 着 我 就 行 了 。

Oracle Span 1:  你 => 你
Oracle Span 2:  就 => 就
Oracle Span 3:  我 => 我
Oracle Span 4:  等 => 等-01
Oracle Span 5:  行 => 行-04
Oracle Span 6:  那里 => 那里
Spans:
Span 0-1:  你 => 你
Span 6-7:  就 => 就
Span 5-6:  我 => 我
Span 3-4:  等 => 等-01
Span 7-8:  行 => 行-04
Span 2-3:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  就 => 就
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  等 => 等-01
Oracle Span 7-8:  行 => 行-04
Oracle Span 2-3:  那里 => 那里

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	那里	_	PN	PN	_	2	pobj	_	_
4	等	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	行	_	VV	VV	_	4	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 行-04, arg0, x8 / 等-01)
(x5 / 行-04, manner, x7 / 就)
(x8 / 等-01, arg0, x9 / 你)
(x8 / 等-01, arg1, x10 / 我)
(x8 / 等-01, location, x11 / 那里)

Input(Some(Graph((行-04 :arg0 (等-01 :location 那里 :arg1 我 :arg0 你) :manner 就),ArrayBuffer(Span(7,8,List(0),行,行-04,false), Span(3,4,List(1),等,等-01,false), Span(2,3,List(2),那里,那里,false), Span(5,6,List(3),我,我,false), Span(0,1,List(4),你,你,false), Span(6,7,List(5),就,就,false)),Map(2 -> 那里, 5 -> 就, 1 -> 等-01, 4 -> 你, 0 -> 行-04, 3 -> 我),Map(x10 -> 我, x5 -> 行-04, x8 -> 等-01, x7 -> 就, x11 -> 那里, x9 -> 你))),[Ljava.lang.String;@74a820bf,Annotation([Ljava.lang.String;@5a30722c,[Ljava.lang.String;@4f2ac7e0,[Ljava.lang.String;@2484dbb7),Annotation([Ljava.lang.String;@111cba40,[Ljava.lang.String;@48e41b5d,[Ledu.cmu.lti.nlp.amr.Dependency;@51e8d066),Annotation([Ljava.lang.String;@5333f08f,[Ljava.lang.String;@27898e13,[Ljava.lang.String;@4f5f474c),Annotation([Ljava.lang.String;@58a3d521,[Ljava.lang.String;@14d8e132,[Ledu.cmu.lti.nlp.amr.Entity;@7f4a1cac))
AMR:
(x5 / 行-04, ARG3, x8 / 等-01)
(x5 / 行-04, manner, x7 / 就)
(x8 / 等-01, location, x11 / 那里)
(x8 / 等-01, op, x10 / 我)
(x8 / 等-01, polarity, x9 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,672 microseconds
Sentence: 今天 夜里 我 去 那里 。 ”

Oracle Span 1:  今天 => 今天
Oracle Span 2:  去 => 去-01
Oracle Span 3:  夜里 => 夜里
Oracle Span 4:  我 => 我
Oracle Span 5:  那里 => 那里
Spans:
Span 0-1:  今天 => 今天
Span 3-4:  去 => 去-01
Span 1-2:  夜里 => 夜里
Span 2-3:  我 => 我
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  今天 => 今天
Oracle Span 3-4:  去 => 去-01
Oracle Span 1-2:  夜里 => 夜里
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  那里 => 那里

Dependencies:
1	今天	_	NT	NT	_	2	tmod	_	_
2	夜里	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	去	_	VV	VV	_	2	dep	_	_
5	那里	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 夜里, time, x13 / 今天)
(x8 / 去-01, arg0, x9 / 我)
(x8 / 去-01, arg1, x10 / 那里)
(x8 / 去-01, time, x11 / 夜里)

Input(Some(Graph((say :arg1 (去-01 :time (夜里 :time 今天) :arg1 那里 :arg0 我)),ArrayBuffer(Span(3,4,List(0),去,去-01,false), Span(1,2,List(1),夜里,夜里,false), Span(0,1,List(2),今天,今天,false), Span(4,5,List(3),那里,那里,false), Span(2,3,List(4),我,我,false)),Map(2 -> 今天, 1 -> 夜里, 4 -> 我, 0 -> 去-01, 3 -> 那里),Map(x10 -> 那里, x13 -> 今天, x8 -> 去-01, x11 -> 夜里, x9 -> 我))),[Ljava.lang.String;@4a1a412e,Annotation([Ljava.lang.String;@c568f91,[Ljava.lang.String;@5fd43e58,[Ljava.lang.String;@70d4f672),Annotation([Ljava.lang.String;@68dfda77,[Ljava.lang.String;@50cdfafa,[Ledu.cmu.lti.nlp.amr.Dependency;@2e952845),Annotation([Ljava.lang.String;@79252c83,[Ljava.lang.String;@6fbf5db2,[Ljava.lang.String;@509a6095),Annotation([Ljava.lang.String;@57cabdc3,[Ljava.lang.String;@75bd28d,[Ledu.cmu.lti.nlp.amr.Entity;@129c4d19))
AMR:
(x11 / 夜里, time, x13 / 今天)
(x8 / 去-01, polite, x9 / 我)
(x8 / 去-01, scale, x10 / 那里)
(x8 / 去-01, time, x11 / 夜里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 9,566 microseconds
Sentence: 我 离 墙 约 有 二十 米 远 ， 可 我 依然 什么 也 没有 看见 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  依然 => 依然
Oracle Span 4:  墙 => 墙
Oracle Span 5:  我 => 我
Oracle Span 6:  看见 => 看见-01
Oracle Span 7:  离 => 离-02
Oracle Span 8:  米 => (distance-quantity :unit 米)
Oracle Span 9:  约 => 约
Spans:
Span 13-14:  也 => 也
Span 12-13:  什么 => 什么
Span 11-12:  依然 => 依然
Span 2-3:  墙 => 墙
Span 0-1:  我 => 我
Span 15-16:  看见 => 看见-01
Span 1-2:  离 => 离-02
Span 6-7:  米 => (distance-quantity :unit 米)
Span 3-4:  约 => 约

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 12-13:  什么 => 什么
Oracle Span 11-12:  依然 => 依然
Oracle Span 2-3:  墙 => 墙
Oracle Span 0-1:  我 => 我
Oracle Span 15-16:  看见 => 看见-01
Oracle Span 1-2:  离 => 离-02
Oracle Span 6-7:  米 => (distance-quantity :unit 米)
Oracle Span 3-4:  约 => 约

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	离	_	P	P	_	5	prep	_	_
3	墙	_	NN	NN	_	2	pobj	_	_
4	约	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	0	root	_	_
6	二十	_	CD	CD	_	7	nummod	_	_
7	米	_	M	M	_	8	clf	_	_
8	远	_	NN	NN	_	5	dobj	_	_
9	,	_	PU	PU	_	5	punct	_	_
10	可	_	VV	VV	_	16	dep	_	_
11	我	_	PN	PN	_	16	nsubj	_	_
12	依然	_	AD	AD	_	16	advmod	_	_
13	什么	_	PN	PN	_	16	nsubj	_	_
14	也	_	AD	AD	_	16	advmod	_	_
15	没有	_	VV	VV	_	16	dep	_	_
16	看见	_	VV	VV	_	5	conj	_	_
17	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x15 / 约, op, x16 / distance-quantity)
(x16 / distance-quantity, unit, x18 / 米)
(x2 / 离-02, arg0, x3 / 我)
(x2 / 离-02, arg1, x4 / 墙)
(x2 / 离-02, arg2, x15 / 约)
(x8 / 看见-01, arg1, x13 / 什么)
(x8 / 看见-01, manner, x11 / 也)
(x8 / 看见-01, manner, x12 / 依然)

Input(Some(Graph((contrast :arg1 (离-02 :arg2 (约 :op (distance-quantity :unit 米 :quant 20)) :arg1 墙 :arg0 我) :arg2 (看见-01 :arg1 什么 :manner 依然 :manner 也 :polarity - :arg0 x3)),ArrayBuffer(Span(1,2,List(0),离,离-02,false), Span(3,4,List(1),约,约,false), Span(6,7,List(2, 3),米,(distance-quantity :unit 米),false), Span(2,3,List(4),墙,墙,false), Span(0,1,List(5),我,我,false), Span(15,16,List(6),看见,看见-01,false), Span(12,13,List(7),什么,什么,false), Span(11,12,List(8),依然,依然,false), Span(13,14,List(9),也,也,false)),Map(2 -> distance-quantity, 5 -> 我, 8 -> 依然, 7 -> 什么, 1 -> 约, 4 -> 墙, 6 -> 看见-01, 9 -> 也, 0 -> 离-02, 3 -> 米),Map(x16 -> distance-quantity, x2 -> 离-02, x13 -> 什么, x8 -> 看见-01, x12 -> 依然, x15 -> 约, x18 -> 米, x4 -> 墙, x11 -> 也, x3 -> 我))),[Ljava.lang.String;@11810917,Annotation([Ljava.lang.String;@13278a41,[Ljava.lang.String;@4a31ed12,[Ljava.lang.String;@3ab595c8),Annotation([Ljava.lang.String;@2365ea38,[Ljava.lang.String;@cbf1997,[Ledu.cmu.lti.nlp.amr.Dependency;@49232c6f),Annotation([Ljava.lang.String;@5faeeb56,[Ljava.lang.String;@5396eeb1,[Ljava.lang.String;@279126f5),Annotation([Ljava.lang.String;@7781263c,[Ljava.lang.String;@5fdd97c1,[Ledu.cmu.lti.nlp.amr.Entity;@3b5a19ed))
AMR:
(x15 / 约, op, x16 / distance-quantity)
(x16 / distance-quantity, unit, x18 / 米)
(x2 / 离-02, ARG0, x3 / 我)
(x2 / 离-02, ARG4, x15 / 约)
(x2 / 离-02, instrument, x4 / 墙)
(x8 / 看见-01, degree, x3 / 我)
(x8 / 看见-01, manner, x11 / 也)
(x8 / 看见-01, manner, x12 / 依然)
(x8 / 看见-01, season, x13 / 什么)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.4
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 33,265 microseconds
Sentence: 小 王子 沉默 了 一会 又 说 ： “ 你 的 毒液 管用 吗 ？

Oracle Span 1:  一会 => 一会
Oracle Span 2:  你 => 你
Oracle Span 3:  又 => 又
Oracle Span 4:  小 => 小-01
Oracle Span 5:  毒液 => 毒液
Oracle Span 6:  沉默 => 沉默-01
Oracle Span 7:  王子 => 王子
Oracle Span 8:  管用 => 管用-01
Oracle Span 9:  说 => 说-01
Spans:
Span 4-5:  一会 => 一会
Span 9-10:  你 => 你
Span 5-6:  又 => 又
Span 0-1:  小 => 小-01
Span 11-12:  毒液 => 毒液
Span 2-3:  沉默 => 沉默-01
Span 1-2:  王子 => 王子
Span 12-13:  管用 => 管用-01
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会 => 一会
Oracle Span 9-10:  你 => 你
Oracle Span 5-6:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  毒液 => 毒液
Oracle Span 2-3:  沉默 => 沉默-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 12-13:  管用 => 管用-01
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一会	_	CD	CD	_	3	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说	_	VV	VV	_	3	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	7	punct	_	_
10	你	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	毒液	_	NN	NN	_	13	nsubj	_	_
13	管用	_	VV	VV	_	7	ccomp	_	_
14	吗	_	SP	SP	_	3	dep	_	_
15	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 沉默-01, arg0, x15 / 王子)
(x14 / 沉默-01, duration, x17 / 一会)
(x15 / 王子, mod, x16 / 小-01)
(x18 / 说-01, arg1, x20 / 管用-01)
(x18 / 说-01, manner, x24 / 又)
(x20 / 管用-01, arg0, x21 / 毒液)
(x21 / 毒液, poss, x22 / 你)

Input(Some(Graph((temporal :arg1 (沉默-01 :duration 一会 :arg0 (王子 :mod 小-01)) :arg2 (说-01 :manner 又 :arg1 (管用-01 :mode interrogative :arg0 (毒液 :poss 你)) :arg0 x15)),ArrayBuffer(Span(2,3,List(0),沉默,沉默-01,false), Span(4,5,List(1),一会,一会,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小-01,false), Span(6,7,List(4),说,说-01,false), Span(5,6,List(5),又,又,false), Span(12,13,List(6),管用,管用-01,false), Span(11,12,List(7),毒液,毒液,false), Span(9,10,List(8),你,你,false)),Map(2 -> 王子, 5 -> 又, 8 -> 你, 7 -> 毒液, 1 -> 一会, 4 -> 说-01, 6 -> 管用-01, 0 -> 沉默-01, 3 -> 小-01),Map(x22 -> 你, x16 -> 小-01, x21 -> 毒液, x15 -> 王子, x24 -> 又, x18 -> 说-01, x20 -> 管用-01, x14 -> 沉默-01, x17 -> 一会))),[Ljava.lang.String;@15d236fd,Annotation([Ljava.lang.String;@6b9c42bd,[Ljava.lang.String;@584ca390,[Ljava.lang.String;@33324c05),Annotation([Ljava.lang.String;@37d3e140,[Ljava.lang.String;@3e53c4ad,[Ledu.cmu.lti.nlp.amr.Dependency;@33eb0d4),Annotation([Ljava.lang.String;@224d86d2,[Ljava.lang.String;@a3cba3a,[Ljava.lang.String;@2aea717c),Annotation([Ljava.lang.String;@5ca4dce5,[Ljava.lang.String;@1291aab5,[Ledu.cmu.lti.nlp.amr.Entity;@7d133fb7))
AMR:
(x14 / 沉默-01, duration, x17 / 一会)
(x14 / 沉默-01, value, x15 / 王子)
(x15 / 王子, mod, x16 / 小-01)
(x18 / 说-01, manner, x24 / 又)
(x18 / 说-01, poss, x17 / 一会)
(x18 / 说-01, purpose, x20 / 管用-01)
(x20 / 管用-01, mod, x21 / 毒液)
(x21 / 毒液, poss, x22 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
Decoded in 24,918 microseconds
Sentence: 你 保证 不 会 使 我 长时间 地 痛苦 吗 ？ ”

Oracle Span 1:  会 => 会-01
Oracle Span 2:  你 => 你
Oracle Span 3:  使 => 使-01
Oracle Span 4:  保证 => 保证-01
Oracle Span 5:  我 => 我
Oracle Span 6:  痛苦 => 痛苦-01
Spans:
Span 3-4:  会 => 会-01
Span 0-1:  你 => 你
Span 4-5:  使 => 使-01
Span 1-2:  保证 => 保证-01
Span 5-6:  我 => 我
Span 8-9:  痛苦 => 痛苦-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-01
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  使 => 使-01
Oracle Span 1-2:  保证 => 保证-01
Oracle Span 5-6:  我 => 我
Oracle Span 8-9:  痛苦 => 痛苦-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	保证	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	使	_	VV	VV	_	2	ccomp	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	长时间	_	VA	VA	_	9	dvpmod	_	_
8	地	_	DEV	DEV	_	7	dvpm	_	_
9	痛苦	_	VA	VA	_	5	dep	_	_
10	吗	_	SP	SP	_	2	dep	_	_
11	？	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_
13	你	_	PN	PN	_	5	xsubj	_	_

Oracle:
(x13 / 保证-01, arg0, x14 / 你)
(x13 / 保证-01, arg1, x15 / 会-01)
(x15 / 会-01, arg0, x17 / 使-01)
(x17 / 使-01, arg1, x18 / 我)
(x17 / 使-01, arg2, x19 / 痛苦-01)

Input(Some(Graph((say :arg1 (保证-01 :arg1 (会-01 :arg0 (使-01 :arg2 (痛苦-01 :mode interrogative :duration (时间 :mod 长)) :arg1 我) :polarity -) :arg0 你)),ArrayBuffer(Span(1,2,List(0),保证,保证-01,false), Span(3,4,List(1),会,会-01,false), Span(4,5,List(2),使,使-01,false), Span(8,9,List(3),痛苦,痛苦-01,false), Span(5,6,List(4),我,我,false), Span(0,1,List(5),你,你,false)),Map(2 -> 使-01, 5 -> 你, 1 -> 会-01, 4 -> 我, 0 -> 保证-01, 3 -> 痛苦-01),Map(x19 -> 痛苦-01, x13 -> 保证-01, x15 -> 会-01, x18 -> 我, x14 -> 你, x17 -> 使-01))),[Ljava.lang.String;@40bd0f8,Annotation([Ljava.lang.String;@7eb27768,[Ljava.lang.String;@6169be09,[Ljava.lang.String;@5e3db14),Annotation([Ljava.lang.String;@5fb54740,[Ljava.lang.String;@325162e9,[Ledu.cmu.lti.nlp.amr.Dependency;@1ee40b5c),Annotation([Ljava.lang.String;@5c448ef,[Ljava.lang.String;@703e8050,[Ljava.lang.String;@49c1e294),Annotation([Ljava.lang.String;@7741ae1b,[Ljava.lang.String;@50e5032c,[Ledu.cmu.lti.nlp.amr.Entity;@545d2560))
AMR:
(x13 / 保证-01, manner, x14 / 你)
(x15 / 会-01, time, x13 / 保证-01)
(x15 / 会-01, time, x17 / 使-01)
(x17 / 使-01, accompanier, x18 / 我)
(x17 / 使-01, accompanier, x19 / 痛苦-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,710 microseconds
Sentence: 我 焦虑 地 赶上 前 去 ， 但 我 仍然 不 明白 是 怎么 回 事 。

Oracle Span 1:  事 => 事
Oracle Span 2:  仍然 => 仍然
Oracle Span 3:  前 => 前
Oracle Span 4:  我 => 我
Oracle Span 5:  明白 => 明白-01
Oracle Span 6:  焦虑 => 焦虑-01
Spans:
Span 15-16:  事 => 事
Span 9-10:  仍然 => 仍然
Span 4-5:  前 => 前
Span 0-1:  我 => 我
Span 11-12:  明白 => 明白-01
Span 1-2:  焦虑 => 焦虑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  事 => 事
Oracle Span 9-10:  仍然 => 仍然
Oracle Span 4-5:  前 => 前
Oracle Span 0-1:  我 => 我
Oracle Span 11-12:  明白 => 明白-01
Oracle Span 1-2:  焦虑 => 焦虑-01

Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	焦虑	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	赶上	_	VV	VV	_	5	lccomp	_	_
5	前	_	LC	LC	_	6	loc	_	_
6	去	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	但	_	AD	AD	_	12	advmod	_	_
9	我	_	PN	PN	_	12	nsubj	_	_
10	仍然	_	AD	AD	_	12	advmod	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	明白	_	VV	VV	_	6	conj	_	_
13	是	_	VC	VC	_	15	cop	_	_
14	怎么	_	AD	AD	_	15	advmod	_	_
15	回	_	VV	VV	_	12	ccomp	_	_
16	事	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	6	punct	_	_
18	我	_	PN	PN	_	15	xsubj	_	_

Oracle:
(x6 / 明白-01, arg1, x9 / 事)
(x6 / 明白-01, manner, x11 / 仍然)

Input(Some(Graph((contrast :arg1 (赶-01 :arg0 我 :manner 焦虑-01 :direction 前) :arg2 (明白-01 :manner 仍然 :arg1 (事 :topic amr-unknown) :polarity - :arg0 x3)),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(1,2,List(1),焦虑,焦虑-01,false), Span(4,5,List(2),前,前,false), Span(11,12,List(3),明白,明白-01,false), Span(9,10,List(4),仍然,仍然,false), Span(15,16,List(5),事,事,false)),Map(2 -> 前, 5 -> 事, 1 -> 焦虑-01, 4 -> 仍然, 0 -> 我, 3 -> 明白-01),Map(x5 -> 前, x4 -> 焦虑-01, x11 -> 仍然, x3 -> 我, x6 -> 明白-01, x9 -> 事))),[Ljava.lang.String;@124eb83d,Annotation([Ljava.lang.String;@6885ed19,[Ljava.lang.String;@10817f46,[Ljava.lang.String;@2d4a3e13),Annotation([Ljava.lang.String;@4a22e4d7,[Ljava.lang.String;@d8835af,[Ledu.cmu.lti.nlp.amr.Dependency;@16681017),Annotation([Ljava.lang.String;@6aae0e6f,[Ljava.lang.String;@37775bb1,[Ljava.lang.String;@7b9e25bd),Annotation([Ljava.lang.String;@2d206a71,[Ljava.lang.String;@37e7c4cc,[Ledu.cmu.lti.nlp.amr.Entity;@3a40bb52))
AMR:
(x4 / 焦虑-01, manner, x3 / 我)
(x5 / 前, quant, x4 / 焦虑-01)
(x6 / 明白-01, manner, x11 / 仍然)
(x6 / 明白-01, manner, x5 / 前)
(x6 / 明白-01, mode, x9 / 事)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 12,438 microseconds
Sentence: “ 现在 你 去 吧 ， 小 王子 说 。

Oracle Span 1:  你 => 你
Oracle Span 2:  去 => 去-02
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  现在 => 现在
Oracle Span 6:  说 => 说-01
Spans:
Span 2-3:  你 => 你
Span 3-4:  去 => 去-02
Span 6-7:  小 => 小-01
Span 7-8:  王子 => 王子
Span 1-2:  现在 => 现在
Span 8-9:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 3-4:  去 => 去-02
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 1-2:  现在 => 现在
Oracle Span 8-9:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	现在	_	NT	NT	_	4	tmod	_	_
3	你	_	PN	PN	_	4	dep	_	_
4	去	_	VV	VV	_	0	root	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	4	conj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 去-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 去-02, arg0, x5 / 你)
(x4 / 去-02, time, x6 / 现在)

Input(Some(Graph((说-01 :mode imperative :arg1 (去-02 :time 现在 :arg0 你) :arg0 (王子 :mod 小-01)),ArrayBuffer(Span(8,9,List(0),说,说-01,false), Span(3,4,List(1),去,去-02,false), Span(1,2,List(2),现在,现在,false), Span(2,3,List(3),你,你,false), Span(7,8,List(4),王子,王子,false), Span(6,7,List(5),小,小-01,false)),Map(2 -> 现在, 5 -> 小-01, 1 -> 去-02, 4 -> 王子, 0 -> 说-01, 3 -> 你),Map(x2 -> 王子, x5 -> 你, x4 -> 去-02, x3 -> 小-01, x6 -> 现在, x0 -> 说-01))),[Ljava.lang.String;@3079c26a,Annotation([Ljava.lang.String;@1e2445f6,[Ljava.lang.String;@17ec335a,[Ljava.lang.String;@284990de),Annotation([Ljava.lang.String;@565d7d2f,[Ljava.lang.String;@6aea99e7,[Ledu.cmu.lti.nlp.amr.Dependency;@1c6a0103),Annotation([Ljava.lang.String;@7841bd30,[Ljava.lang.String;@45c80312,[Ljava.lang.String;@7bd38fed),Annotation([Ljava.lang.String;@377dfb8d,[Ljava.lang.String;@42a0786f,[Ledu.cmu.lti.nlp.amr.Entity;@477523ba))
AMR:
(x0 / 说-01, direction, x2 / 王子)
(x0 / 说-01, time, x4 / 去-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 去-02, location, x5 / 你)
(x4 / 去-02, time, x6 / 现在)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,630 microseconds
Sentence: 我 要 下来 了 ！ … ”

Oracle Span 1:  下来 => 下来-02
Oracle Span 2:  我 => 我
Oracle Span 3:  要 => 要-03
Spans:
Span 2-3:  下来 => 下来-02
Span 0-1:  我 => 我
Span 1-2:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  下来 => 下来-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  要 => 要-03

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	下来	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	！	_	PU	PU	_	6	punct	_	_
6	…	_	NN	NN	_	3	dobj	_	_
7	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 下来-02)
(x12 / 下来-02, arg0, x13 / 我)

Input(Some(Graph((say :arg1 (要-03 :mode expressive :arg0 (下来-02 :arg0 我))),ArrayBuffer(Span(1,2,List(0),要,要-03,false), Span(2,3,List(1),下来,下来-02,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 下来-02, 0 -> 要-03),Map(x13 -> 我, x12 -> 下来-02, x11 -> 要-03))),[Ljava.lang.String;@203e705e,Annotation([Ljava.lang.String;@78c74647,[Ljava.lang.String;@39652a30,[Ljava.lang.String;@5763a655),Annotation([Ljava.lang.String;@40c8067,[Ljava.lang.String;@46bb0bdf,[Ledu.cmu.lti.nlp.amr.Dependency;@561f9d92),Annotation([Ljava.lang.String;@1c84d80a,[Ljava.lang.String;@7ceb6c45,[Ljava.lang.String;@629075f4),Annotation([Ljava.lang.String;@48499739,[Ljava.lang.String;@723742b2,[Ledu.cmu.lti.nlp.amr.Entity;@559991f5))
AMR:
(x11 / 要-03, prep-along-with, x12 / 下来-02)
(x12 / 下来-02, polite, x13 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 4,103 microseconds
Sentence: 于是 ， 我 也 朝 墙脚 下 看 去 ， 我 吓 了 一 跳 。

Oracle Span 1:  墙脚 => 墙脚
Oracle Span 2:  我 => 我
Oracle Span 3:  看 => 看-02
Spans:
Span 5-6:  墙脚 => 墙脚
Span 2-3:  我 => 我
Span 7-8:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  墙脚 => 墙脚
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  看 => 看-02

Dependencies:
1	于是	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	我	_	PN	PN	_	9	nsubj	_	_
4	也	_	AD	AD	_	9	advmod	_	_
5	朝	_	P	P	_	9	prep	_	_
6	墙脚	_	NN	NN	_	7	lobj	_	_
7	下	_	LC	LC	_	5	plmod	_	_
8	看	_	VV	VV	_	9	dep	_	_
9	去	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	吓	_	VV	VV	_	9	conj	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	跳	_	NN	NN	_	12	dobj	_	_
16	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x20 / 看-02, arg0, x21 / 我)
(x20 / 看-02, direction, x22 / 墙脚)

Input(Some(Graph((causation :arg2 (and :op (看-02 :direction 墙脚 :arg0 我) :op (吓一跳 :arg0 x21))),ArrayBuffer(Span(7,8,List(0),看,看-02,false), Span(5,6,List(1),墙脚,墙脚,false), Span(2,3,List(2),我,我,false)),Map(2 -> 我, 1 -> 墙脚, 0 -> 看-02),Map(x22 -> 墙脚, x21 -> 我, x20 -> 看-02))),[Ljava.lang.String;@34c76167,Annotation([Ljava.lang.String;@30b3d899,[Ljava.lang.String;@78d92eef,[Ljava.lang.String;@61d60e38),Annotation([Ljava.lang.String;@6e95973c,[Ljava.lang.String;@404ced67,[Ledu.cmu.lti.nlp.amr.Dependency;@71531dd7),Annotation([Ljava.lang.String;@20256a0b,[Ljava.lang.String;@624b3544,[Ljava.lang.String;@454bcbbf),Annotation([Ljava.lang.String;@2c9fdb64,[Ljava.lang.String;@27e199ce,[Ledu.cmu.lti.nlp.amr.Entity;@1c3b6963))
AMR:
(x20 / 看-02, direction, x22 / 墙脚)
(x20 / 看-02, op, x21 / 我)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,277 microseconds
Sentence: 就 在 那里 ， 一 条 黄 蛇 直起 身子 冲 着 小 王子 。 这 种 黄 蛇 半 分钟 就 能 结果 你 的 性命 。

Oracle Span 1:  你 => 你
Oracle Span 2:  冲 => 冲-02
Oracle Span 3:  分钟 => 分钟
Oracle Span 4:  半 => 半
Oracle Span 5:  小 => 小-01
Oracle Span 6:  就 => 就-01
Oracle Span 7:  就 => 就-01
Oracle Span 8:  性命 => 性命
Oracle Span 9:  王子 => 王子
Oracle Span 10:  结果 => 结果
Oracle Span 11:  能 => 能
Oracle Span 12:  蛇 => 蛇
Oracle Span 13:  身子 => 身子
Oracle Span 14:  这 => 这
Oracle Span 15:  那里 => 那里
Oracle Span 16:  黄 => 黄-02
Spans:
Span 24-25:  你 => 你
Span 10-11:  冲 => 冲-02
Span 20-21:  分钟 => 分钟
Span 19-20:  半 => 半
Span 12-13:  小 => 小-01
Span 0-1:  就 => 就-01
Span 21-22:  就 => 就-01
Span 26-27:  性命 => 性命
Span 13-14:  王子 => 王子
Span 23-24:  结果 => 结果
Span 22-23:  能 => 能
Span 7-8:  蛇 => 蛇
Span 9-10:  身子 => 身子
Span 15-16:  这 => 这
Span 2-3:  那里 => 那里
Span 6-7:  黄 => 黄-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 24-25:  你 => 你
Oracle Span 10-11:  冲 => 冲-02
Oracle Span 20-21:  分钟 => 分钟
Oracle Span 19-20:  半 => 半
Oracle Span 12-13:  小 => 小-01
Oracle Span 0-1:  就 => 就-01
Oracle Span 21-22:  就 => 就-01
Oracle Span 26-27:  性命 => 性命
Oracle Span 13-14:  王子 => 王子
Oracle Span 23-24:  结果 => 结果
Oracle Span 22-23:  能 => 能
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 9-10:  身子 => 身子
Oracle Span 15-16:  这 => 这
Oracle Span 2-3:  那里 => 那里
Oracle Span 6-7:  黄 => 黄-02

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	在	_	P	P	_	11	prep	_	_
3	那里	_	PN	PN	_	2	pobj	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	条	_	M	M	_	8	clf	_	_
7	黄	_	JJ	JJ	_	8	amod	_	_
8	蛇	_	NN	NN	_	9	nn	_	_
9	直起	_	NN	NN	_	11	nsubj	_	_
10	身子	_	AD	AD	_	11	advmod	_	_
11	冲	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	11	punct	_	_
16	这	_	DT	DT	_	19	det	_	_
17	种	_	M	M	_	16	clf	_	_
18	黄	_	JJ	JJ	_	19	amod	_	_
19	蛇	_	NN	NN	_	23	nsubj	_	_
20	半	_	CD	CD	_	21	nummod	_	_
21	分钟	_	M	M	_	23	dep	_	_
22	就	_	AD	AD	_	23	advmod	_	_
23	能	_	VV	VV	_	11	conj	_	_
24	结果	_	NN	NN	_	27	nn	_	_
25	你	_	PN	PN	_	27	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	性命	_	NN	NN	_	23	dobj	_	_
28	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x12 / 那里, manner, x13 / 就-01)
(x14 / 能, arg0, x18 / 结果)
(x14 / 能, manner, x17 / 就-01)
(x18 / 结果, arg1, x21 / 性命)
(x18 / 结果, time, x23 / 分钟)
(x21 / 性命, poss, x22 / 你)
(x23 / 分钟, quant, x24 / 半)
(x3 / 冲-02, arg0, x4 / 蛇)
(x3 / 冲-02, arg1, x7 / 王子)
(x3 / 冲-02, location, x12 / 那里)
(x4 / 蛇, mod, x5 / 黄-02)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (冲-02 :location (那里 :manner 就-01) :arg1 (王子 :mod 小-01) :arg0 (蛇 :arg0-of (直-02 :arg1 (身子 :poss x4)) :quant 1 :mod 黄-02)) :snt2 (能 :arg0 (结果 :time (分钟 :quant 半) :arg1 (性命 :poss 你) :arg0 (x4 :mod 这)) :manner 就-01)),ArrayBuffer(Span(10,11,List(0),冲,冲-02,false), Span(2,3,List(1),那里,那里,false), Span(0,1,List(2),就,就-01,false), Span(13,14,List(3),王子,王子,false), Span(12,13,List(4),小,小-01,false), Span(7,8,List(5),蛇,蛇,false), Span(9,10,List(6),身子,身子,false), Span(6,7,List(7),黄,黄-02,false), Span(22,23,List(8),能,能,false), Span(23,24,List(9),结果,结果,false), Span(20,21,List(10),分钟,分钟,false), Span(19,20,List(11),半,半,false), Span(26,27,List(12),性命,性命,false), Span(24,25,List(13),你,你,false), Span(15,16,List(14),这,这,false), Span(21,22,List(15),就,就-01,false)),Map(2 -> 就-01, 5 -> 蛇, 12 -> 性命, 15 -> 就-01, 8 -> 能, 7 -> 黄-02, 1 -> 那里, 4 -> 小-01, 11 -> 半, 14 -> 这, 6 -> 身子, 9 -> 结果, 0 -> 冲-02, 10 -> 分钟, 3 -> 王子, 13 -> 你),Map(x22 -> 你, x10 -> 身子, x5 -> 黄-02, x13 -> 就-01, x8 -> 小-01, x12 -> 那里, x21 -> 性命, x7 -> 王子, x24 -> 半, x18 -> 结果, x4 -> 蛇, x23 -> 分钟, x3 -> 冲-02, x20 -> 这, x14 -> 能, x17 -> 就-01))),[Ljava.lang.String;@7364f68,Annotation([Ljava.lang.String;@55a0f011,[Ljava.lang.String;@7ea42c82,[Ljava.lang.String;@39133244),Annotation([Ljava.lang.String;@ceb7701,[Ljava.lang.String;@5e193ef5,[Ledu.cmu.lti.nlp.amr.Dependency;@106c988),Annotation([Ljava.lang.String;@21274afe,[Ljava.lang.String;@76a362a4,[Ljava.lang.String;@61da0413),Annotation([Ljava.lang.String;@5627cb29,[Ljava.lang.String;@4d4c1ba9,[Ledu.cmu.lti.nlp.amr.Entity;@2017f6e6))
AMR:
(x10 / 身子, direction, x3 / 冲-02)
(x12 / 那里, manner, x13 / 就-01)
(x14 / 能, manner, x17 / 就-01)
(x14 / 能, poss, x18 / 结果)
(x18 / 结果, quant, x21 / 性命)
(x18 / 结果, time, x23 / 分钟)
(x20 / 这, mod, x24 / 半)
(x20 / 这, mod, x3 / 冲-02)
(x21 / 性命, poss, x22 / 你)
(x23 / 分钟, quant, x24 / 半)
(x3 / 冲-02, location, x12 / 那里)
(x3 / 冲-02, manner, x4 / 蛇)
(x3 / 冲-02, snt3, x7 / 王子)
(x4 / 蛇, mod, x5 / 黄-02)
(x7 / 王子, mod, x8 / 小-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.2.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 75,946 microseconds
Sentence: 我 一面 赶紧 掏 口袋 ， 拔 出 手枪 ， 一面 跑 过去 。

Oracle Span 1:  出 => 出
Oracle Span 2:  口袋 => 口袋
Oracle Span 3:  我 => 我
Oracle Span 4:  手枪 => 手枪
Oracle Span 5:  拔 => 拔-01
Oracle Span 6:  掏 => 掏-01
Oracle Span 7:  赶紧 => 赶紧
Oracle Span 8:  跑 => 跑-01
Oracle Span 9:  过去 => 过去
Spans:
Span 7-8:  出 => 出
Span 4-5:  口袋 => 口袋
Span 0-1:  我 => 我
Span 8-9:  手枪 => 手枪
Span 6-7:  拔 => 拔-01
Span 3-4:  掏 => 掏-01
Span 2-3:  赶紧 => 赶紧
Span 11-12:  跑 => 跑-01
Span 12-13:  过去 => 过去

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
Oracle Span 7-8:  出 => 出
Oracle Span 4-5:  口袋 => 口袋
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  手枪 => 手枪
Oracle Span 6-7:  拔 => 拔-01
Oracle Span 3-4:  掏 => 掏-01
Oracle Span 2-3:  赶紧 => 赶紧
Oracle Span 11-12:  跑 => 跑-01
Oracle Span 12-13:  过去 => 过去

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	一面	_	CD	CD	_	4	dep	_	_
3	赶紧	_	AD	AD	_	4	advmod	_	_
4	掏	_	VV	VV	_	0	root	_	_
5	口袋	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	拔	_	AD	AD	_	8	advmod	_	_
8	出	_	VV	VV	_	4	dep	_	_
9	手枪	_	NN	NN	_	8	dobj	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	一面	_	CD	CD	_	12	nsubj	_	_
12	跑	_	VV	VV	_	4	conj	_	_
13	过去	_	NT	NT	_	12	dobj	_	_
14	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 跑-01, arg3, x13 / 过去)
(x2 / 掏-01, arg0, x3 / 我)
(x2 / 掏-01, location, x5 / 口袋)
(x2 / 掏-01, manner, x4 / 赶紧)
(x6 / 拔-01, arg1, x9 / 手枪)
(x6 / 拔-01, direction, x7 / 出)

Input(Some(Graph((and :op (掏-01 :location 口袋 :manner 赶紧 :arg0 我) :op (拔-01 :arg1 手枪 :arg0 x3 :direction 出) :op (跑-01 :arg3 过去 :arg0 x3)),ArrayBuffer(Span(3,4,List(0),掏,掏-01,false), Span(4,5,List(1),口袋,口袋,false), Span(2,3,List(2),赶紧,赶紧,false), Span(0,1,List(3),我,我,false), Span(6,7,List(4),拔,拔-01,false), Span(8,9,List(5),手枪,手枪,false), Span(7,8,List(6),出,出,false), Span(11,12,List(7),跑,跑-01,false), Span(12,13,List(8),过去,过去,false)),Map(2 -> 赶紧, 5 -> 手枪, 8 -> 过去, 7 -> 跑-01, 1 -> 口袋, 4 -> 拔-01, 6 -> 出, 0 -> 掏-01, 3 -> 我),Map(x2 -> 掏-01, x13 -> 过去, x5 -> 口袋, x7 -> 出, x4 -> 赶紧, x11 -> 跑-01, x3 -> 我, x6 -> 拔-01, x9 -> 手枪))),[Ljava.lang.String;@115c946b,Annotation([Ljava.lang.String;@79ca7bea,[Ljava.lang.String;@54f6b629,[Ljava.lang.String;@4bc9ca97),Annotation([Ljava.lang.String;@3e43f049,[Ljava.lang.String;@147cc940,[Ledu.cmu.lti.nlp.amr.Dependency;@755a7218),Annotation([Ljava.lang.String;@70c29356,[Ljava.lang.String;@5122e4bf,[Ljava.lang.String;@23e61112),Annotation([Ljava.lang.String;@58a7dc4,[Ljava.lang.String;@61b60600,[Ledu.cmu.lti.nlp.amr.Entity;@27f71195))
AMR:
(x11 / 跑-01, ARG5, x13 / 过去)
(x2 / 掏-01, li, x3 / 我)
(x2 / 掏-01, location, x5 / 口袋)
(x2 / 掏-01, manner, x4 / 赶紧)
(x4 / 赶紧, domain, x7 / 出)
(x6 / 拔-01, ARG2, x9 / 手枪)
(x6 / 拔-01, direction, x7 / 出)
(x7 / 出, ARG3, x11 / 跑-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
Decoded in 25,683 microseconds
Sentence: 可是 一 听到 我 的 脚步声 ， 蛇 却 象 一 股 干涸 了 的 水柱 一样 ， 慢慢 钻进 沙 里 去 。 它 不慌不忙 地 在 石头 的 缝隙 中 钻动 着 ， 发出 轻轻 的 金属 般 的 响声 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  不慌不忙 => 不慌不忙
Oracle Span 3:  发出 => 发出-01
Oracle Span 4:  听到 => 听到-01
Oracle Span 5:  响声 => 响声
Oracle Span 6:  干涸 => 干涸-01
Oracle Span 7:  慢慢 => 慢慢-01
Oracle Span 8:  我 => 我
Oracle Span 9:  水柱 => 水柱
Oracle Span 10:  沙 => 沙
Oracle Span 11:  石头 => 石头
Oracle Span 12:  缝隙 => 缝隙
Oracle Span 13:  蛇 => 蛇
Oracle Span 14:  轻轻 => 轻轻-01
Oracle Span 15:  钻动 => 钻动
Oracle Span 16:  钻进 => 钻进-01
Spans:
Span 16-17:  一样 => 一样-01
Span 25-26:  不慌不忙 => 不慌不忙
Span 35-36:  发出 => 发出-01
Span 2-3:  听到 => 听到-01
Span 41-42:  响声 => 响声
Span 12-13:  干涸 => 干涸-01
Span 18-19:  慢慢 => 慢慢-01
Span 3-4:  我 => 我
Span 15-16:  水柱 => 水柱
Span 20-21:  沙 => 沙
Span 28-29:  石头 => 石头
Span 30-31:  缝隙 => 缝隙
Span 7-8:  蛇 => 蛇
Span 36-37:  轻轻 => 轻轻-01
Span 32-33:  钻动 => 钻动
Span 19-20:  钻进 => 钻进-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  一样 => 一样-01
Oracle Span 25-26:  不慌不忙 => 不慌不忙
Oracle Span 35-36:  发出 => 发出-01
Oracle Span 2-3:  听到 => 听到-01
Oracle Span 41-42:  响声 => 响声
Oracle Span 12-13:  干涸 => 干涸-01
Oracle Span 18-19:  慢慢 => 慢慢-01
Oracle Span 3-4:  我 => 我
Oracle Span 15-16:  水柱 => 水柱
Oracle Span 20-21:  沙 => 沙
Oracle Span 28-29:  石头 => 石头
Oracle Span 30-31:  缝隙 => 缝隙
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 36-37:  轻轻 => 轻轻-01
Oracle Span 32-33:  钻动 => 钻动
Oracle Span 19-20:  钻进 => 钻进-01

Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	一	_	AD	AD	_	3	advmod	_	_
3	听到	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	脚步声	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	蛇	_	NN	NN	_	17	nsubj	_	_
9	却	_	AD	AD	_	17	advmod	_	_
10	象	_	P	P	_	17	prep	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	股	_	M	M	_	16	clf	_	_
13	干涸	_	VV	VV	_	16	rcmod	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	的	_	DEC	DEC	_	13	cpm	_	_
16	水柱	_	NN	NN	_	10	pobj	_	_
17	一样	_	VA	VA	_	3	conj	_	_
18	,	_	PU	PU	_	3	punct	_	_
19	慢慢	_	AD	AD	_	20	advmod	_	_
20	钻进	_	VV	VV	_	3	conj	_	_
21	沙	_	NN	NN	_	22	lobj	_	_
22	里	_	LC	LC	_	20	loc	_	_
23	去	_	VV	VV	_	20	conj	_	_
24	。	_	PU	PU	_	3	punct	_	_
25	它	_	PN	PN	_	33	nsubj	_	_
26	不慌不忙	_	VA	VA	_	33	dep	_	_
27	地	_	DEV	DEV	_	26	dvpm	_	_
28	在	_	P	P	_	33	prep	_	_
29	石头	_	NN	NN	_	31	assmod	_	_
30	的	_	DEG	DEG	_	29	assm	_	_
31	缝隙	_	NN	NN	_	32	lobj	_	_
32	中	_	LC	LC	_	28	plmod	_	_
33	钻动	_	VV	VV	_	3	conj	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	,	_	PU	PU	_	3	punct	_	_
36	发出	_	VV	VV	_	3	conj	_	_
37	轻轻	_	NN	NN	_	39	assmod	_	_
38	的	_	DEG	DEG	_	37	assm	_	_
39	金属	_	NN	NN	_	40	nsubj	_	_
40	般	_	VA	VA	_	42	rcmod	_	_
41	的	_	DEC	DEC	_	40	cpm	_	_
42	响声	_	NN	NN	_	36	dobj	_	_
43	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x20 / 钻动, location, x22 / 缝隙)
(x20 / 钻动, manner, x24 / 不慌不忙)
(x22 / 缝隙, poss, x23 / 石头)
(x25 / 发出-01, arg1, x27 / 响声)
(x27 / 响声, mod, x28 / 轻轻-01)
(x3 / 钻进-01, arg0, x4 / 蛇)
(x3 / 钻进-01, arg1, x5 / 沙)
(x3 / 钻进-01, manner, x6 / 慢慢-01)
(x3 / 钻进-01, time, x13 / 听到-01)
(x9 / 水柱, mod, x11 / 干涸-01)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg2 (钻进-01 :time (听到-01 :arg1 (声 :mod (脚步 :poss 我)) :arg0 x4) :manner (像-01 :arg0 x4 :arg1 (水柱 :mod 干涸-01 :quant 1) :arg2 一样-01) :manner 慢慢-01 :arg1 沙 :arg0 蛇)) :snt2 (and :op (钻动 :manner 不慌不忙 :location (缝隙 :poss 石头) :arg0 x4) :op (发出-01 :arg1 (响声 :mod 金属般 :mod 轻轻-01) :arg0 x4))),ArrayBuffer(Span(19,20,List(0),钻进,钻进-01,false), Span(2,3,List(1),听到,听到-01,false), Span(3,4,List(2),我,我,false), Span(15,16,List(3),水柱,水柱,false), Span(12,13,List(4),干涸,干涸-01,false), Span(16,17,List(5),一样,一样-01,false), Span(18,19,List(6),慢慢,慢慢-01,false), Span(20,21,List(7),沙,沙,false), Span(7,8,List(8),蛇,蛇,false), Span(32,33,List(9),钻动,钻动,false), Span(25,26,List(10),不慌不忙,不慌不忙,false), Span(30,31,List(11),缝隙,缝隙,false), Span(28,29,List(12),石头,石头,false), Span(35,36,List(13),发出,发出-01,false), Span(41,42,List(14),响声,响声,false), Span(36,37,List(15),轻轻,轻轻-01,false)),Map(2 -> 我, 5 -> 一样-01, 12 -> 石头, 15 -> 轻轻-01, 8 -> 蛇, 7 -> 沙, 1 -> 听到-01, 4 -> 干涸-01, 11 -> 缝隙, 14 -> 响声, 6 -> 慢慢-01, 9 -> 钻动, 0 -> 钻进-01, 10 -> 不慌不忙, 3 -> 水柱, 13 -> 发出-01),Map(x28 -> 轻轻-01, x22 -> 缝隙, x25 -> 发出-01, x5 -> 沙, x13 -> 听到-01, x12 -> 一样-01, x27 -> 响声, x24 -> 不慌不忙, x18 -> 我, x4 -> 蛇, x23 -> 石头, x3 -> 钻进-01, x11 -> 干涸-01, x6 -> 慢慢-01, x20 -> 钻动, x9 -> 水柱))),[Ljava.lang.String;@340afaf8,Annotation([Ljava.lang.String;@6238d5e0,[Ljava.lang.String;@336f49a1,[Ljava.lang.String;@2c8b8de0),Annotation([Ljava.lang.String;@4fb57fb3,[Ljava.lang.String;@6b063470,[Ledu.cmu.lti.nlp.amr.Dependency;@226d5af0),Annotation([Ljava.lang.String;@527937d0,[Ljava.lang.String;@36d582cb,[Ljava.lang.String;@6c2a95d5),Annotation([Ljava.lang.String;@24d8f87a,[Ljava.lang.String;@3f048c86,[Ledu.cmu.lti.nlp.amr.Entity;@255d9277))
AMR:
(x12 / 一样-01, location, x24 / 不慌不忙)
(x13 / 听到-01, ARG2, x18 / 我)
(x20 / 钻动, location, x22 / 缝隙)
(x20 / 钻动, manner, x24 / 不慌不忙)
(x20 / 钻动, mode, x28 / 轻轻-01)
(x22 / 缝隙, poss, x23 / 石头)
(x25 / 发出-01, snt1, x27 / 响声)
(x27 / 响声, mod, x28 / 轻轻-01)
(x3 / 钻进-01, ARG3, x12 / 一样-01)
(x3 / 钻进-01, manner, x6 / 慢慢-01)
(x3 / 钻进-01, snt3, x5 / 沙)
(x3 / 钻进-01, time, x13 / 听到-01)
(x3 / 钻进-01, unit, x4 / 蛇)
(x9 / 水柱, ARG5, x12 / 一样-01)
(x9 / 水柱, mod, x11 / 干涸-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.4
WARNING: makeIds can't find span Id: 0.0.0.4.1.0.0
WARNING: makeIds can't find span Id: 0.0.0.3.1
WARNING: makeIds can't find span Id: 0.0.0.3.1.1
WARNING: makeIds can't find span Id: 0.0.0.3.2
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
Decoded in 101,048 microseconds
Sentence: 我 到达 墙边 的 时候 ， 正好 把 我 的 这 位 小 王子 接 在 我 的 怀抱 中 。 他 的 脸色 雪 一样 惨白 。

Oracle Span 1:  一样 => 一样-02
Oracle Span 2:  到达 => 到达-01
Oracle Span 3:  墙边 => 墙边
Oracle Span 4:  小 => 小-01
Oracle Span 5:  怀抱 => 怀抱
Oracle Span 6:  惨白 => 惨白
Oracle Span 7:  我 => 我
Oracle Span 8:  接 => 接-01
Oracle Span 9:  正好 => 正好
Oracle Span 10:  王子 => 王子
Oracle Span 11:  脸色 => 脸色
Oracle Span 12:  这 => 这
Oracle Span 13:  雪 => 雪
Spans:
Span 25-26:  一样 => 一样-02
Span 1-2:  到达 => 到达-01
Span 2-3:  墙边 => 墙边
Span 12-13:  小 => 小-01
Span 18-19:  怀抱 => 怀抱
Span 26-27:  惨白 => 惨白
Span 0-1:  我 => 我
Span 14-15:  接 => 接-01
Span 6-7:  正好 => 正好
Span 13-14:  王子 => 王子
Span 23-24:  脸色 => 脸色
Span 10-11:  这 => 这
Span 24-25:  雪 => 雪

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 25-26:  一样 => 一样-02
Oracle Span 1-2:  到达 => 到达-01
Oracle Span 2-3:  墙边 => 墙边
Oracle Span 12-13:  小 => 小-01
Oracle Span 18-19:  怀抱 => 怀抱
Oracle Span 26-27:  惨白 => 惨白
Oracle Span 0-1:  我 => 我
Oracle Span 14-15:  接 => 接-01
Oracle Span 6-7:  正好 => 正好
Oracle Span 13-14:  王子 => 王子
Oracle Span 23-24:  脸色 => 脸色
Oracle Span 10-11:  这 => 这
Oracle Span 24-25:  雪 => 雪

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	到达	_	VV	VV	_	0	root	_	_
3	墙边	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	正好	_	AD	AD	_	15	advmod	_	_
8	把	_	BA	BA	_	15	ba	_	_
9	我	_	PN	PN	_	14	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	这	_	DT	DT	_	14	det	_	_
12	位	_	M	M	_	11	clf	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	15	nsubj	_	_
15	接	_	VV	VV	_	2	conj	_	_
16	在	_	P	P	_	15	prep	_	_
17	我	_	PN	PN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	怀抱	_	NN	NN	_	20	lobj	_	_
20	中	_	LC	LC	_	16	plmod	_	_
21	。	_	PU	PU	_	2	punct	_	_
22	他	_	PN	PN	_	25	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	脸色	_	NN	NN	_	25	nn	_	_
25	雪	_	NN	NN	_	26	nsubj	_	_
26	一样	_	VA	VA	_	2	conj	_	_
27	惨白	_	VA	VA	_	26	comod	_	_
28	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 到达-01, arg1, x13 / 墙边)
(x14 / 惨白, degree, x15 / 一样-02)
(x15 / 一样-02, arg0, x16 / 脸色)
(x15 / 一样-02, arg1, x18 / 雪)
(x2 / 接-01, arg0, x3 / 我)
(x2 / 接-01, arg1, x4 / 王子)
(x2 / 接-01, location, x8 / 怀抱)
(x2 / 接-01, manner, x10 / 正好)
(x2 / 接-01, time, x11 / 到达-01)
(x4 / 王子, mod, x5 / 小-01)
(x4 / 王子, mod, x7 / 这)

Input(Some(Graph((multi-sentence :snt1 (接-01 :time (到达-01 :arg1 墙边 :arg0 x3) :manner 正好 :location (怀抱 :poss x3) :arg1 (王子 :mod 这 :poss x3 :mod 小-01) :arg0 我) :snt2 (惨白 :degree (一样-02 :arg1 雪 :arg0 (脸色 :poss x4)))),ArrayBuffer(Span(14,15,List(0),接,接-01,false), Span(1,2,List(1),到达,到达-01,false), Span(2,3,List(2),墙边,墙边,false), Span(6,7,List(3),正好,正好,false), Span(18,19,List(4),怀抱,怀抱,false), Span(13,14,List(5),王子,王子,false), Span(10,11,List(6),这,这,false), Span(12,13,List(7),小,小-01,false), Span(0,1,List(8),我,我,false), Span(26,27,List(9),惨白,惨白,false), Span(25,26,List(10),一样,一样-02,false), Span(24,25,List(11),雪,雪,false), Span(23,24,List(12),脸色,脸色,false)),Map(2 -> 墙边, 5 -> 王子, 12 -> 脸色, 8 -> 我, 7 -> 小-01, 1 -> 到达-01, 4 -> 怀抱, 11 -> 雪, 6 -> 这, 9 -> 惨白, 0 -> 接-01, 10 -> 一样-02, 3 -> 正好),Map(x16 -> 脸色, x10 -> 正好, x2 -> 接-01, x5 -> 小-01, x13 -> 墙边, x8 -> 怀抱, x15 -> 一样-02, x7 -> 这, x18 -> 雪, x4 -> 王子, x3 -> 我, x11 -> 到达-01, x14 -> 惨白))),[Ljava.lang.String;@1de13f34,Annotation([Ljava.lang.String;@7e191fda,[Ljava.lang.String;@6562cc23,[Ljava.lang.String;@2ce524d2),Annotation([Ljava.lang.String;@3869a6e5,[Ljava.lang.String;@e3899fd,[Ledu.cmu.lti.nlp.amr.Dependency;@7d484fcd),Annotation([Ljava.lang.String;@788e3702,[Ljava.lang.String;@d25e878,[Ljava.lang.String;@47187f50),Annotation([Ljava.lang.String;@78116659,[Ljava.lang.String;@712e787e,[Ledu.cmu.lti.nlp.amr.Entity;@53ea380b))
AMR:
(x11 / 到达-01, ARG6, x13 / 墙边)
(x14 / 惨白, degree, x15 / 一样-02)
(x15 / 一样-02, ARG0, x16 / 脸色)
(x15 / 一样-02, prep-into, x18 / 雪)
(x2 / 接-01, direction, x4 / 王子)
(x2 / 接-01, domain, x3 / 我)
(x2 / 接-01, location, x16 / 脸色)
(x2 / 接-01, location, x8 / 怀抱)
(x2 / 接-01, manner, x10 / 正好)
(x2 / 接-01, time, x11 / 到达-01)
(x4 / 王子, mod, x5 / 小-01)
(x4 / 王子, mod, x7 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.4
WARNING: makeIds can't find span Id: 0.0.4.1
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 59,574 microseconds
Sentence: “ 这 是 搞 的 什么 名堂 ！

Oracle Span 1:  名堂 => 名堂
Oracle Span 2:  搞 => 搞-01
Oracle Span 3:  这 => 这
Spans:
Span 6-7:  名堂 => 名堂
Span 3-4:  搞 => 搞-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  名堂 => 名堂
Oracle Span 3-4:  搞 => 搞-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	搞	_	VV	VV	_	7	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	名堂	_	NN	NN	_	3	attr	_	_
8	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x9 / 搞-01, arg0, x10 / 这)
(x9 / 搞-01, arg1, x11 / 名堂)

Input(Some(Graph((say :arg1 (搞-01 :arg1 (名堂 :topic amr-unknown) :arg0 这)),ArrayBuffer(Span(3,4,List(0),搞,搞-01,false), Span(6,7,List(1),名堂,名堂,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 名堂, 0 -> 搞-01),Map(x10 -> 这, x11 -> 名堂, x9 -> 搞-01))),[Ljava.lang.String;@578c3fd9,Annotation([Ljava.lang.String;@245cb8df,[Ljava.lang.String;@26b3c9a2,[Ljava.lang.String;@241b971f),Annotation([Ljava.lang.String;@125f16b2,[Ljava.lang.String;@5384ce66,[Ledu.cmu.lti.nlp.amr.Dependency;@6b42e36d),Annotation([Ljava.lang.String;@13192275,[Ljava.lang.String;@79195c22,[Ljava.lang.String;@c9b5a99),Annotation([Ljava.lang.String;@70be89ec,[Ljava.lang.String;@2aee0704,[Ledu.cmu.lti.nlp.amr.Entity;@19a5b637))
AMR:
(x9 / 搞-01, domain, x10 / 这)
(x9 / 搞-01, location, x11 / 名堂)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,576 microseconds
Sentence: 我 埋怨 道 。

Oracle Span 1:  埋怨 => 埋怨-01
Oracle Span 2:  我 => 我
Spans:
Span 1-2:  埋怨 => 埋怨-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  埋怨 => 埋怨-01
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	埋怨	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 埋怨-01, arg0, x2 / 我)

Input(Some(Graph((埋怨-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),埋怨,埋怨-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 埋怨-01),Map(x2 -> 我, x0 -> 埋怨-01))),[Ljava.lang.String;@4f3c7808,Annotation([Ljava.lang.String;@4b4969ea,[Ljava.lang.String;@11c581a0,[Ljava.lang.String;@256589a1),Annotation([Ljava.lang.String;@935493d,[Ljava.lang.String;@9b367c8,[Ledu.cmu.lti.nlp.amr.Dependency;@34c62fdf),Annotation([Ljava.lang.String;@3de79067,[Ljava.lang.String;@1eb85a47,[Ljava.lang.String;@ca7e37f),Annotation([Ljava.lang.String;@99a8de3,[Ljava.lang.String;@87f501f,[Ledu.cmu.lti.nlp.amr.Entity;@54495935))
AMR:
(x0 / 埋怨-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,937 microseconds
Sentence: 你 怎么 竟然 和 蛇 也 谈起 心 来 了 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  怎么 => 怎么
Oracle Span 3:  竟然 => 竟然-01
Oracle Span 4:  蛇 => 蛇
Spans:
Span 0-1:  你 => 你
Span 1-2:  怎么 => 怎么
Span 2-3:  竟然 => 竟然-01
Span 4-5:  蛇 => 蛇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  怎么 => 怎么
Oracle Span 2-3:  竟然 => 竟然-01
Oracle Span 4-5:  蛇 => 蛇

Dependencies:
1	你	_	PN	PN	_	7	nsubj	_	_
2	怎么	_	AD	AD	_	7	advmod	_	_
3	竟然	_	AD	AD	_	7	advmod	_	_
4	和	_	CC	CC	_	3	cc	_	_
5	蛇	_	AD	AD	_	3	dep	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	谈起	_	VV	VV	_	0	root	_	_
8	心	_	NN	NN	_	9	lobj	_	_
9	来	_	LC	LC	_	7	loc	_	_
10	了	_	SP	SP	_	7	dep	_	_
11	！	_	PU	PU	_	7	punct	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 你, accompanier, x11 / 蛇)

Input(Some(Graph((say :arg1 (谈心-01 :arg0 (你 :accompanier 蛇) :manner 竟然-01 :manner 怎么 :mode expressive)),ArrayBuffer(Span(0,1,List(0),你,你,false), Span(4,5,List(1),蛇,蛇,false), Span(2,3,List(2),竟然,竟然-01,false), Span(1,2,List(3),怎么,怎么,false)),Map(2 -> 竟然-01, 1 -> 蛇, 0 -> 你, 3 -> 怎么),Map(x10 -> 你, x13 -> 怎么, x12 -> 竟然-01, x11 -> 蛇))),[Ljava.lang.String;@67c6f4d8,Annotation([Ljava.lang.String;@3a6e9856,[Ljava.lang.String;@4863c8ac,[Ljava.lang.String;@56fda064),Annotation([Ljava.lang.String;@6cdee57,[Ljava.lang.String;@482f7af0,[Ledu.cmu.lti.nlp.amr.Dependency;@1edfedf1),Annotation([Ljava.lang.String;@251a90ce,[Ljava.lang.String;@4c4c7d6c,[Ljava.lang.String;@7f0766ef),Annotation([Ljava.lang.String;@1e56bc9b,[Ljava.lang.String;@6f3bd37f,[Ledu.cmu.lti.nlp.amr.Entity;@403364e9))
AMR:
(x12 / 竟然-01, accompanier, x11 / 蛇)
(x13 / 怎么, accompanier, x12 / 竟然-01)
(x13 / 怎么, mod, x10 / 你)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
Decoded in 6,155 microseconds
Sentence: 我 解开 了 他 一直 带 着 的 金黄色 的 围脖 。

Oracle Span 1:  一直 => 一直
Oracle Span 2:  他 => 他
Oracle Span 3:  围脖 => 围脖
Oracle Span 4:  带 => 带-05
Oracle Span 5:  我 => 我
Oracle Span 6:  解开 => 解开-01
Oracle Span 7:  金黄色 => 金黄色
Spans:
Span 4-5:  一直 => 一直
Span 3-4:  他 => 他
Span 10-11:  围脖 => 围脖
Span 5-6:  带 => 带-05
Span 0-1:  我 => 我
Span 1-2:  解开 => 解开-01
Span 8-9:  金黄色 => 金黄色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一直 => 一直
Oracle Span 3-4:  他 => 他
Oracle Span 10-11:  围脖 => 围脖
Oracle Span 5-6:  带 => 带-05
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  解开 => 解开-01
Oracle Span 8-9:  金黄色 => 金黄色

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	解开	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	一直	_	AD	AD	_	6	advmod	_	_
6	带	_	VV	VV	_	11	rcmod	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	金黄色	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	围脖	_	NN	NN	_	2	dobj	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 解开-01, arg0, x2 / 我)
(x0 / 解开-01, arg1, x3 / 围脖)
(x3 / 围脖, mod, x12 / 金黄色)
(x9 / 带-05, arg1, x10 / 他)
(x9 / 带-05, arg1, x3 / 围脖)
(x9 / 带-05, duration, x11 / 一直)

Input(Some(Graph((解开-01 :arg1 (围脖 :mod 金黄色 :arg1-of (带-05 :duration 一直 :arg1 他)) :arg0 我),ArrayBuffer(Span(1,2,List(0),解开,解开-01,false), Span(10,11,List(1),围脖,围脖,false), Span(8,9,List(2),金黄色,金黄色,false), Span(5,6,List(3),带,带-05,false), Span(4,5,List(4),一直,一直,false), Span(3,4,List(5),他,他,false), Span(0,1,List(6),我,我,false)),Map(2 -> 金黄色, 5 -> 他, 1 -> 围脖, 4 -> 一直, 6 -> 我, 0 -> 解开-01, 3 -> 带-05),Map(x2 -> 我, x10 -> 他, x12 -> 金黄色, x11 -> 一直, x3 -> 围脖, x9 -> 带-05, x0 -> 解开-01))),[Ljava.lang.String;@447521e,Annotation([Ljava.lang.String;@2fde9469,[Ljava.lang.String;@1ecf0ac6,[Ljava.lang.String;@458031da),Annotation([Ljava.lang.String;@7be94cd6,[Ljava.lang.String;@20cff21e,[Ledu.cmu.lti.nlp.amr.Dependency;@463045fb),Annotation([Ljava.lang.String;@27ab206,[Ljava.lang.String;@3344d163,[Ljava.lang.String;@6cc48a17),Annotation([Ljava.lang.String;@289f15e9,[Ljava.lang.String;@7f22687e,[Ledu.cmu.lti.nlp.amr.Entity;@6af87130))
AMR:
(x0 / 解开-01, frequency, x3 / 围脖)
(x0 / 解开-01, value, x2 / 我)
(x3 / 围脖, mod, x12 / 金黄色)
(x9 / 带-05, ARG6, x10 / 他)
(x9 / 带-05, duration, x11 / 一直)
(x9 / 带-05, value, x3 / 围脖)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,429 microseconds
Sentence: 我 用 水 浸湿 了 他 的 太阳穴 ， 让 他 喝 了 点 水 。

Oracle Span 1:  他 => 他
Oracle Span 2:  喝 => 喝-01
Oracle Span 3:  太阳穴 => 太阳穴
Oracle Span 4:  我 => 我
Oracle Span 5:  水 => 水
Oracle Span 6:  水 => 水
Oracle Span 7:  浸湿 => 浸湿-01
Oracle Span 8:  点 => 点
Oracle Span 9:  让 => 让-02
Spans:
Span 5-6:  他 => 他
Span 11-12:  喝 => 喝-01
Span 7-8:  太阳穴 => 太阳穴
Span 0-1:  我 => 我
Span 2-3:  水 => 水
Span 14-15:  水 => 水
Span 3-4:  浸湿 => 浸湿-01
Span 13-14:  点 => 点
Span 9-10:  让 => 让-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 11-12:  喝 => 喝-01
Oracle Span 7-8:  太阳穴 => 太阳穴
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  水 => 水
Oracle Span 14-15:  水 => 水
Oracle Span 3-4:  浸湿 => 浸湿-01
Oracle Span 13-14:  点 => 点
Oracle Span 9-10:  让 => 让-02

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	用	_	P	P	_	4	prep	_	_
3	水	_	NN	NN	_	2	pobj	_	_
4	浸湿	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	太阳穴	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	让	_	VV	VV	_	4	dep	_	_
11	他	_	PN	PN	_	10	dobj	_	_
12	喝	_	VV	VV	_	10	dep	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	点	_	M	M	_	15	dep	_	_
15	水	_	NN	NN	_	12	dobj	_	_
16	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x19 / 浸湿-01, arg0, x20 / 我)
(x19 / 浸湿-01, arg1, x21 / 太阳穴)
(x19 / 浸湿-01, instrument, x23 / 水)
(x22 / 他, part, x21 / 太阳穴)
(x24 / 让-02, arg2, x27 / 喝-01)
(x27 / 喝-01, arg1, x29 / 水)
(x29 / 水, quant, x30 / 点)

Input(Some(Graph((temporal :arg1 (浸湿-01 :instrument 水 :arg1 (太阳穴 :part-of 他) :arg0 我) :arg2 (让-02 :arg2 (喝-01 :arg1 (水 :quant 点) :arg0 x22) :arg1 x22 :arg0 x20)),ArrayBuffer(Span(3,4,List(0),浸湿,浸湿-01,false), Span(2,3,List(1),水,水,false), Span(7,8,List(2),太阳穴,太阳穴,false), Span(5,6,List(3),他,他,false), Span(0,1,List(4),我,我,false), Span(9,10,List(5),让,让-02,false), Span(11,12,List(6),喝,喝-01,false), Span(14,15,List(7),水,水,false), Span(13,14,List(8),点,点,false)),Map(2 -> 太阳穴, 5 -> 让-02, 8 -> 点, 7 -> 水, 1 -> 水, 4 -> 我, 6 -> 喝-01, 0 -> 浸湿-01, 3 -> 他),Map(x22 -> 他, x19 -> 浸湿-01, x30 -> 点, x27 -> 喝-01, x21 -> 太阳穴, x24 -> 让-02, x23 -> 水, x29 -> 水, x20 -> 我))),[Ljava.lang.String;@22a4ca4a,Annotation([Ljava.lang.String;@72c4a3aa,[Ljava.lang.String;@1e495414,[Ljava.lang.String;@3711c71c),Annotation([Ljava.lang.String;@33e3bd2e,[Ljava.lang.String;@646d810b,[Ledu.cmu.lti.nlp.amr.Dependency;@30508066),Annotation([Ljava.lang.String;@9408857,[Ljava.lang.String;@27e44e9c,[Ljava.lang.String;@2f09e6b2),Annotation([Ljava.lang.String;@1bee0085,[Ljava.lang.String;@16e1219f,[Ledu.cmu.lti.nlp.amr.Entity;@13f40d71))
AMR:
(x19 / 浸湿-01, instrument, x23 / 水)
(x19 / 浸湿-01, op, x20 / 我)
(x19 / 浸湿-01, prep-on-behalf, x24 / 让-02)
(x19 / 浸湿-01, snt1, x21 / 太阳穴)
(x22 / 他, part, x21 / 太阳穴)
(x24 / 让-02, prep-on-behalf, x27 / 喝-01)
(x27 / 喝-01, snt3, x29 / 水)
(x29 / 水, quant, x30 / 点)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
Decoded in 27,497 microseconds
Sentence: 这时 ， 我 什么 也 不 敢 再 问 他 。

Oracle Span 1:  也 => 也
Oracle Span 2:  什么 => 什么
Oracle Span 3:  他 => 他
Oracle Span 4:  再 => 再
Oracle Span 5:  我 => 我
Oracle Span 6:  敢 => 敢-02
Oracle Span 7:  这时 => 这时
Oracle Span 8:  问 => 问-01
Spans:
Span 4-5:  也 => 也
Span 3-4:  什么 => 什么
Span 9-10:  他 => 他
Span 7-8:  再 => 再
Span 2-3:  我 => 我
Span 6-7:  敢 => 敢-02
Span 0-1:  这时 => 这时
Span 8-9:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 3-4:  什么 => 什么
Oracle Span 9-10:  他 => 他
Oracle Span 7-8:  再 => 再
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  敢 => 敢-02
Oracle Span 0-1:  这时 => 这时
Oracle Span 8-9:  问 => 问-01

Dependencies:
1	这时	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	我	_	PN	PN	_	4	dep	_	_
4	什么	_	PN	PN	_	9	nsubj	_	_
5	也	_	AD	AD	_	9	advmod	_	_
6	不	_	AD	AD	_	9	neg	_	_
7	敢	_	AD	AD	_	9	advmod	_	_
8	再	_	AD	AD	_	9	advmod	_	_
9	问	_	VV	VV	_	0	root	_	_
10	他	_	PN	PN	_	9	ccomp	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 敢-02, arg0, x2 / 我)
(x0 / 敢-02, arg1, x3 / 问-01)
(x0 / 敢-02, manner, x5 / 也)
(x3 / 问-01, arg1, x9 / 什么)
(x3 / 问-01, arg2, x8 / 他)
(x3 / 问-01, manner, x6 / 再)
(x3 / 问-01, time, x10 / 这时)

Input(Some(Graph((敢-02 :manner 也 :polarity - :arg1 (问-01 :time 这时 :arg1 什么 :arg2 他 :arg0 x2 :manner 再) :arg0 我),ArrayBuffer(Span(6,7,List(0),敢,敢-02,false), Span(4,5,List(1),也,也,false), Span(8,9,List(2),问,问-01,false), Span(0,1,List(3),这时,这时,false), Span(3,4,List(4),什么,什么,false), Span(9,10,List(5),他,他,false), Span(7,8,List(6),再,再,false), Span(2,3,List(7),我,我,false)),Map(2 -> 问-01, 5 -> 他, 7 -> 我, 1 -> 也, 4 -> 什么, 6 -> 再, 0 -> 敢-02, 3 -> 这时),Map(x2 -> 我, x10 -> 这时, x5 -> 也, x8 -> 他, x3 -> 问-01, x6 -> 再, x9 -> 什么, x0 -> 敢-02))),[Ljava.lang.String;@73a845cb,Annotation([Ljava.lang.String;@18a98913,[Ljava.lang.String;@7dbae40,[Ljava.lang.String;@34f7b44f),Annotation([Ljava.lang.String;@5403907,[Ljava.lang.String;@5175d9ad,[Ledu.cmu.lti.nlp.amr.Dependency;@b06d46d),Annotation([Ljava.lang.String;@25a5c8e,[Ljava.lang.String;@656c5c3,[Ljava.lang.String;@7911cc15),Annotation([Ljava.lang.String;@4409cae6,[Ljava.lang.String;@14e750c5,[Ledu.cmu.lti.nlp.amr.Entity;@242ff747))
AMR:
(x0 / 敢-02, manner, x3 / 问-01)
(x0 / 敢-02, manner, x5 / 也)
(x0 / 敢-02, time, x2 / 我)
(x3 / 问-01, location, x8 / 他)
(x3 / 问-01, manner, x6 / 再)
(x3 / 问-01, op, x9 / 什么)
(x3 / 问-01, time, x10 / 这时)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.4
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 17,637 microseconds
Sentence: 他 严肃 地 看 着 我 ， 用 双 臂 搂 着 我 的 脖子 。

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  他 => 他
Oracle Span 3:  我 => 我
Oracle Span 4:  搂 => 搂-01
Oracle Span 5:  看 => 看-02
Oracle Span 6:  脖子 => 脖子
Oracle Span 7:  臂 => 臂
Spans:
Span 1-2:  严肃 => 严肃-01
Span 0-1:  他 => 他
Span 5-6:  我 => 我
Span 10-11:  搂 => 搂-01
Span 3-4:  看 => 看-02
Span 14-15:  脖子 => 脖子
Span 9-10:  臂 => 臂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  严肃 => 严肃-01
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  我 => 我
Oracle Span 10-11:  搂 => 搂-01
Oracle Span 3-4:  看 => 看-02
Oracle Span 14-15:  脖子 => 脖子
Oracle Span 9-10:  臂 => 臂

Dependencies:
1	他	_	PN	PN	_	3	nn	_	_
2	严肃	_	JJ	JJ	_	3	amod	_	_
3	地	_	NN	NN	_	4	nsubj	_	_
4	看	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	4	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	用	_	P	P	_	11	prep	_	_
9	双	_	CD	CD	_	10	nummod	_	_
10	臂	_	NN	NN	_	8	pobj	_	_
11	搂	_	VV	VV	_	4	conj	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	我	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	脖子	_	NN	NN	_	11	dobj	_	_
16	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x14 / 搂-01, arg1, x16 / 脖子)
(x14 / 搂-01, instrument, x19 / 臂)
(x2 / 看-02, arg0, x3 / 他)
(x2 / 看-02, arg1, x4 / 我)
(x2 / 看-02, manner, x5 / 严肃-01)

Input(Some(Graph((and :op (看-02 :manner 严肃-01 :arg1 我 :arg0 他) :op (搂-01 :instrument (臂 :quant 2) :arg1 (脖子 :part-of x4) :arg0 x3)),ArrayBuffer(Span(3,4,List(0),看,看-02,false), Span(1,2,List(1),严肃,严肃-01,false), Span(5,6,List(2),我,我,false), Span(0,1,List(3),他,他,false), Span(10,11,List(4),搂,搂-01,false), Span(9,10,List(5),臂,臂,false), Span(14,15,List(6),脖子,脖子,false)),Map(2 -> 我, 5 -> 臂, 1 -> 严肃-01, 4 -> 搂-01, 6 -> 脖子, 0 -> 看-02, 3 -> 他),Map(x16 -> 脖子, x19 -> 臂, x2 -> 看-02, x5 -> 严肃-01, x4 -> 我, x3 -> 他, x14 -> 搂-01))),[Ljava.lang.String;@5329f6b3,Annotation([Ljava.lang.String;@597d48ca,[Ljava.lang.String;@77324a58,[Ljava.lang.String;@2c7c0e36),Annotation([Ljava.lang.String;@307cf964,[Ljava.lang.String;@374ccb9,[Ledu.cmu.lti.nlp.amr.Dependency;@66713605),Annotation([Ljava.lang.String;@2ab09943,[Ljava.lang.String;@7d50f2a8,[Ljava.lang.String;@5864e8bf),Annotation([Ljava.lang.String;@37ca3ca8,[Ljava.lang.String;@191ec193,[Ledu.cmu.lti.nlp.amr.Entity;@6321a5aa))
AMR:
(x14 / 搂-01, instrument, x19 / 臂)
(x14 / 搂-01, snt1, x16 / 脖子)
(x2 / 看-02, ARG0, x3 / 他)
(x2 / 看-02, domain, x4 / 我)
(x2 / 看-02, manner, x5 / 严肃-01)
(x2 / 看-02, unit, x14 / 搂-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 17,645 microseconds
Sentence: 我 感到 他 的 心 就 象 一 只 被 枪弹 击中 而 濒于 死亡 的 鸟 的 心脏 一样 在 跳动 着 。

Oracle Span 1:  他 => 他
Oracle Span 2:  击中 => 击中-01
Oracle Span 3:  就 => 就
Oracle Span 4:  心 => 心
Oracle Span 5:  心脏 => 心脏
Oracle Span 6:  感到 => 感到-01
Oracle Span 7:  我 => 我
Oracle Span 8:  枪弹 => 枪弹
Oracle Span 9:  死亡 => 死亡-01
Oracle Span 10:  濒于 => 濒于-01
Oracle Span 11:  跳动 => 跳动-01
Oracle Span 12:  鸟 => 鸟
Spans:
Span 2-3:  他 => 他
Span 11-12:  击中 => 击中-01
Span 5-6:  就 => 就
Span 4-5:  心 => 心
Span 18-19:  心脏 => 心脏
Span 1-2:  感到 => 感到-01
Span 0-1:  我 => 我
Span 10-11:  枪弹 => 枪弹
Span 14-15:  死亡 => 死亡-01
Span 13-14:  濒于 => 濒于-01
Span 21-22:  跳动 => 跳动-01
Span 16-17:  鸟 => 鸟

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 11-12:  击中 => 击中-01
Oracle Span 5-6:  就 => 就
Oracle Span 4-5:  心 => 心
Oracle Span 18-19:  心脏 => 心脏
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  枪弹 => 枪弹
Oracle Span 14-15:  死亡 => 死亡-01
Oracle Span 13-14:  濒于 => 濒于-01
Oracle Span 21-22:  跳动 => 跳动-01
Oracle Span 16-17:  鸟 => 鸟

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	心	_	NN	NN	_	22	nsubj	_	_
6	就	_	AD	AD	_	20	advmod	_	_
7	象	_	P	P	_	20	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	只	_	M	M	_	19	clf	_	_
10	被	_	SB	SB	_	11	pass	_	_
11	枪弹	_	VV	VV	_	19	rcmod	_	_
12	击中	_	VV	VV	_	11	comod	_	_
13	而	_	MSP	MSP	_	14	prtmod	_	_
14	濒于	_	VV	VV	_	11	dep	_	_
15	死亡	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	鸟	_	NN	NN	_	14	dobj	_	_
18	的	_	DEC	DEC	_	11	cpm	_	_
19	心脏	_	NN	NN	_	7	pobj	_	_
20	一样	_	VA	VA	_	22	dep	_	_
21	在	_	AD	AD	_	22	advmod	_	_
22	跳动	_	VV	VV	_	2	ccomp	_	_
23	着	_	AS	AS	_	22	asp	_	_
24	。	_	PU	PU	_	2	punct	_	_
25	心	_	NN	NN	_	20	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 我)
(x22 / 他, part, x21 / 心)
(x25 / 鸟, part, x24 / 心脏)
(x27 / 濒于-01, arg0, x25 / 鸟)
(x27 / 濒于-01, arg1, x28 / 死亡-01)
(x27 / 濒于-01, cause, x29 / 击中-01)
(x29 / 击中-01, arg2, x30 / 枪弹)

Input(Some(Graph((感到-01 :arg1 (像-01 :arg0 (心 :part-of 他) :manner 就 :arg1 (心脏 :part-of (鸟 :arg0-of (濒于-01 :cause (击中-01 :arg1 x25 :arg2 枪弹) :arg1 死亡-01) :quant 1)) :arg2 跳动-01) :arg0 我),ArrayBuffer(Span(1,2,List(0),感到,感到-01,false), Span(4,5,List(1),心,心,false), Span(2,3,List(2),他,他,false), Span(5,6,List(3),就,就,false), Span(18,19,List(4),心脏,心脏,false), Span(16,17,List(5),鸟,鸟,false), Span(13,14,List(6),濒于,濒于-01,false), Span(11,12,List(7),击中,击中-01,false), Span(10,11,List(8),枪弹,枪弹,false), Span(14,15,List(9),死亡,死亡-01,false), Span(21,22,List(10),跳动,跳动-01,false), Span(0,1,List(11),我,我,false)),Map(2 -> 他, 5 -> 鸟, 8 -> 枪弹, 7 -> 击中-01, 1 -> 心, 4 -> 心脏, 11 -> 我, 6 -> 濒于-01, 9 -> 死亡-01, 0 -> 感到-01, 10 -> 跳动-01, 3 -> 就),Map(x28 -> 死亡-01, x22 -> 他, x25 -> 鸟, x2 -> 我, x30 -> 枪弹, x27 -> 濒于-01, x21 -> 心, x24 -> 心脏, x23 -> 就, x32 -> 跳动-01, x29 -> 击中-01, x0 -> 感到-01))),[Ljava.lang.String;@1c7f9861,Annotation([Ljava.lang.String;@7a36c83a,[Ljava.lang.String;@154b8cb6,[Ljava.lang.String;@7b297740),Annotation([Ljava.lang.String;@1b7554d4,[Ljava.lang.String;@57ce2898,[Ledu.cmu.lti.nlp.amr.Dependency;@1ea930eb),Annotation([Ljava.lang.String;@2e0ad709,[Ljava.lang.String;@1fe8f5e8,[Ljava.lang.String;@39449465),Annotation([Ljava.lang.String;@6e3dd5ce,[Ljava.lang.String;@16f7f59f,[Ledu.cmu.lti.nlp.amr.Entity;@4ee8051c))
AMR:
(x0 / 感到-01, decade, x2 / 我)
(x0 / 感到-01, part, x21 / 心)
(x0 / 感到-01, prep-along-with, x22 / 他)
(x23 / 就, beneficiary, x21 / 心)
(x25 / 鸟, mod, x28 / 死亡-01)
(x25 / 鸟, part, x24 / 心脏)
(x27 / 濒于-01, snt11, x28 / 死亡-01)
(x27 / 濒于-01, time, x29 / 击中-01)
(x29 / 击中-01, beneficiary, x30 / 枪弹)
(x29 / 击中-01, location, x21 / 心)
(x32 / 跳动-01, degree, x24 / 心脏)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.2.0.1
WARNING: makeIds can't find span Id: 0.1.2.0.1.1
WARNING: makeIds can't find span Id: 0.1.2.0.1.1.0
WARNING: makeIds can't find span Id: 0.1.2.0.1.0
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.0
Decoded in 44,076 microseconds
Sentence: 他 对 我 说 ： “ 我 很 高兴 ， 你 找到 了 你 的 机器 所 缺少 的 东西 。

Oracle Span 1:  东西 => 东西
Oracle Span 2:  他 => 他
Oracle Span 3:  很 => 很
Oracle Span 4:  我 => 我
Oracle Span 5:  找到 => 找到-01
Oracle Span 6:  机器 => 机器
Oracle Span 7:  缺少 => 缺少-01
Oracle Span 8:  说 => 说-01
Oracle Span 9:  高兴 => 高兴-01
Spans:
Span 19-20:  东西 => 东西
Span 0-1:  他 => 他
Span 7-8:  很 => 很
Span 2-3:  我 => 我
Span 11-12:  找到 => 找到-01
Span 15-16:  机器 => 机器
Span 17-18:  缺少 => 缺少-01
Span 3-4:  说 => 说-01
Span 8-9:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  东西 => 东西
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  很 => 很
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  找到 => 找到-01
Oracle Span 15-16:  机器 => 机器
Oracle Span 17-18:  缺少 => 缺少-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 8-9:  高兴 => 高兴-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	9	nsubj	_	_
8	很	_	AD	AD	_	9	advmod	_	_
9	高兴	_	VA	VA	_	4	ccomp	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	你	_	PN	PN	_	12	nsubj	_	_
12	找到	_	VV	VV	_	9	conj	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	你	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	机器	_	NN	NN	_	18	nsubj	_	_
17	所	_	MSP	MSP	_	18	prtmod	_	_
18	缺少	_	VV	VV	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	东西	_	NN	NN	_	12	dobj	_	_
21	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg3, x3 / 我)
(x11 / 高兴-01, degree, x12 / 很)
(x5 / 找到-01, arg1, x7 / 缺少-01)
(x7 / 缺少-01, arg0, x8 / 机器)
(x8 / 机器, arg1, x10 / 东西)

Input(Some(Graph((说-01 :arg1 (causation :arg1 (找到-01 :arg1 (缺少-01 :arg0 (机器 :arg1 东西 :poss x3)) :arg0 x3) :arg2 (高兴-01 :arg0 x2 :degree 很)) :arg3 我 :arg0 他),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(11,12,List(1),找到,找到-01,false), Span(17,18,List(2),缺少,缺少-01,false), Span(15,16,List(3),机器,机器,false), Span(19,20,List(4),东西,东西,false), Span(8,9,List(5),高兴,高兴-01,false), Span(7,8,List(6),很,很,false), Span(2,3,List(7),我,我,false), Span(0,1,List(8),他,他,false)),Map(2 -> 缺少-01, 5 -> 高兴-01, 8 -> 他, 7 -> 我, 1 -> 找到-01, 4 -> 东西, 6 -> 很, 0 -> 说-01, 3 -> 机器),Map(x10 -> 东西, x2 -> 他, x5 -> 找到-01, x8 -> 机器, x12 -> 很, x7 -> 缺少-01, x3 -> 我, x11 -> 高兴-01, x0 -> 说-01))),[Ljava.lang.String;@53125718,Annotation([Ljava.lang.String;@53016b11,[Ljava.lang.String;@7af327e3,[Ljava.lang.String;@743d0d44),Annotation([Ljava.lang.String;@35563e4c,[Ljava.lang.String;@6dd79214,[Ledu.cmu.lti.nlp.amr.Dependency;@ef86c72),Annotation([Ljava.lang.String;@123307c4,[Ljava.lang.String;@1693ff90,[Ljava.lang.String;@47058864),Annotation([Ljava.lang.String;@ad3f70a,[Ljava.lang.String;@54ccb3,[Ledu.cmu.lti.nlp.amr.Entity;@9b2dc56))
AMR:
(x0 / 说-01, location, x11 / 高兴-01)
(x0 / 说-01, manner, x3 / 我)
(x0 / 说-01, quant, x2 / 他)
(x11 / 高兴-01, degree, x12 / 很)
(x5 / 找到-01, prep-following, x11 / 高兴-01)
(x5 / 找到-01, topic, x8 / 机器)
(x7 / 缺少-01, time, x8 / 机器)
(x7 / 缺少-01, topic, x10 / 东西)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.1
WARNING: makeIds can't find span Id: 0.2.0.1.0
WARNING: makeIds can't find span Id: 0.2.0.1.0.1
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 24,403 microseconds
Sentence: 你 不久 就 可以 回家 去 了 … ”

Oracle Span 1:  不久 => 不久
Oracle Span 2:  你 => 你
Oracle Span 3:  可以 => 可以-01
Oracle Span 4:  回家 => 回家-01
Oracle Span 5:  就 => 就
Spans:
Span 1-2:  不久 => 不久
Span 0-1:  你 => 你
Span 3-4:  可以 => 可以-01
Span 4-5:  回家 => 回家-01
Span 2-3:  就 => 就

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不久 => 不久
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  可以 => 可以-01
Oracle Span 4-5:  回家 => 回家-01
Oracle Span 2-3:  就 => 就

Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	不久	_	NT	NT	_	6	tmod	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	可以	_	VV	VV	_	6	mmod	_	_
5	回家	_	PU	PU	_	6	punct	_	_
6	去	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	…	_	NN	NN	_	6	dobj	_	_
9	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 可以-01, arg0, x12 / 回家-01)
(x11 / 可以-01, manner, x14 / 就)
(x11 / 可以-01, time, x15 / 不久)
(x12 / 回家-01, arg0, x13 / 你)

Input(Some(Graph((say :arg1 (可以-01 :time 不久 :manner 就 :arg0 (回家-01 :arg0 你))),ArrayBuffer(Span(3,4,List(0),可以,可以-01,false), Span(1,2,List(1),不久,不久,false), Span(2,3,List(2),就,就,false), Span(4,5,List(3),回家,回家-01,false), Span(0,1,List(4),你,你,false)),Map(2 -> 就, 1 -> 不久, 4 -> 你, 0 -> 可以-01, 3 -> 回家-01),Map(x13 -> 你, x12 -> 回家-01, x15 -> 不久, x11 -> 可以-01, x14 -> 就))),[Ljava.lang.String;@621f23ac,Annotation([Ljava.lang.String;@7761e342,[Ljava.lang.String;@51f68849,[Ljava.lang.String;@4eb9ae4d),Annotation([Ljava.lang.String;@5520f675,[Ljava.lang.String;@2d237460,[Ledu.cmu.lti.nlp.amr.Dependency;@48f2054d),Annotation([Ljava.lang.String;@4b3a01d8,[Ljava.lang.String;@19fbc594,[Ljava.lang.String;@2f4d32bf),Annotation([Ljava.lang.String;@774d8276,[Ljava.lang.String;@6ce26986,[Ledu.cmu.lti.nlp.amr.Entity;@2bf2d6eb))
AMR:
(x11 / 可以-01, condition, x12 / 回家-01)
(x11 / 可以-01, manner, x14 / 就)
(x11 / 可以-01, time, x15 / 不久)
(x13 / 你, location, x15 / 不久)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 8,424 microseconds
Sentence: “ 你 怎么 知道 的 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  知道 => 知道-01
Spans:
Span 1-2:  你 => 你
Span 3-4:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  知道 => 知道-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	怎么	_	AD	AD	_	4	advmod	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	的	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 知道-01, arg0, x9 / 你)

Input(Some(Graph((say :arg1 (知道-01 :mode interrogative :manner amr-unknown :arg0 你)),ArrayBuffer(Span(3,4,List(0),知道,知道-01,false), Span(1,2,List(1),你,你,false)),Map(1 -> 你, 0 -> 知道-01),Map(x8 -> 知道-01, x9 -> 你))),[Ljava.lang.String;@6d6cd1e0,Annotation([Ljava.lang.String;@76a9a009,[Ljava.lang.String;@9785903,[Ljava.lang.String;@34009349),Annotation([Ljava.lang.String;@3f68a7f8,[Ljava.lang.String;@4faf1f4,[Ledu.cmu.lti.nlp.amr.Dependency;@4f811029),Annotation([Ljava.lang.String;@7f2b584b,[Ljava.lang.String;@5866731,[Ljava.lang.String;@56a05324),Annotation([Ljava.lang.String;@11e71181,[Ljava.lang.String;@342beaf6,[Ledu.cmu.lti.nlp.amr.Entity;@222acad))
AMR:
(x8 / 知道-01, conj-as-if, x9 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,852 microseconds
Sentence: 我 正 是 来 告诉 他 ， 在 没有 任何 希望 的 情况 下 ， 我 成功 地 完成 了 修理 工作 。

Oracle Span 1:  他 => 他
Oracle Span 2:  任何 => 任何
Oracle Span 3:  修理 => 修理-01
Oracle Span 4:  告诉 => 告诉-01
Oracle Span 5:  完成 => 完成-01
Oracle Span 6:  工作 => 工作
Oracle Span 7:  希望 => 希望
Oracle Span 8:  成功 => 成功-01
Oracle Span 9:  我 => 我
Oracle Span 10:  来 => 来-05
Spans:
Span 5-6:  他 => 他
Span 9-10:  任何 => 任何
Span 20-21:  修理 => 修理-01
Span 4-5:  告诉 => 告诉-01
Span 18-19:  完成 => 完成-01
Span 21-22:  工作 => 工作
Span 10-11:  希望 => 希望
Span 16-17:  成功 => 成功-01
Span 0-1:  我 => 我
Span 3-4:  来 => 来-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 9-10:  任何 => 任何
Oracle Span 20-21:  修理 => 修理-01
Oracle Span 4-5:  告诉 => 告诉-01
Oracle Span 18-19:  完成 => 完成-01
Oracle Span 21-22:  工作 => 工作
Oracle Span 10-11:  希望 => 希望
Oracle Span 16-17:  成功 => 成功-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  来 => 来-05

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	正	_	AD	AD	_	5	advmod	_	_
3	是	_	VC	VC	_	5	cop	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	告诉	_	VV	VV	_	0	root	_	_
6	他	_	PN	PN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	在	_	P	P	_	19	prep	_	_
9	没有	_	VE	VE	_	13	rcmod	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	希望	_	NN	NN	_	9	dobj	_	_
12	的	_	DEC	DEC	_	9	cpm	_	_
13	情况	_	NN	NN	_	14	lobj	_	_
14	下	_	LC	LC	_	8	plmod	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	我	_	PN	PN	_	19	nsubj	_	_
17	成功	_	VA	VA	_	19	dvpmod	_	_
18	地	_	DEV	DEV	_	17	dvpm	_	_
19	完成	_	VV	VV	_	5	conj	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	修理	_	NN	NN	_	22	nn	_	_
22	工作	_	NN	NN	_	19	dobj	_	_
23	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x30 / 来-05, arg0, x33 / 我)
(x30 / 来-05, arg1, x34 / 告诉-01)
(x34 / 告诉-01, arg1, x36 / 完成-01)
(x34 / 告诉-01, arg2, x45 / 他)
(x36 / 完成-01, arg1, x39 / 工作)
(x36 / 完成-01, manner, x37 / 成功-01)
(x39 / 工作, mod, x40 / 修理-01)
(x43 / 希望, mod, x44 / 任何)

Input(Some(Graph((来-05 :arg1 (告诉-01 :arg2 他 :arg1 (完成-01 :manner (有-04 :polarity - :arg1 (希望 :mod 任何)) :arg1 (工作 :mod 修理-01) :arg0 x33 :manner 成功-01) :arg0 x33) :arg0 我 :manner 正是),ArrayBuffer(Span(3,4,List(0),来,来-05,false), Span(4,5,List(1),告诉,告诉-01,false), Span(5,6,List(2),他,他,false), Span(18,19,List(3),完成,完成-01,false), Span(10,11,List(4),希望,希望,false), Span(9,10,List(5),任何,任何,false), Span(21,22,List(6),工作,工作,false), Span(20,21,List(7),修理,修理-01,false), Span(16,17,List(8),成功,成功-01,false), Span(0,1,List(9),我,我,false)),Map(2 -> 他, 5 -> 任何, 8 -> 成功-01, 7 -> 修理-01, 1 -> 告诉-01, 4 -> 希望, 6 -> 工作, 9 -> 我, 0 -> 来-05, 3 -> 完成-01),Map(x34 -> 告诉-01, x40 -> 修理-01, x37 -> 成功-01, x43 -> 希望, x39 -> 工作, x45 -> 他, x30 -> 来-05, x33 -> 我, x36 -> 完成-01, x44 -> 任何))),[Ljava.lang.String;@56cfe6be,Annotation([Ljava.lang.String;@7f0d8eff,[Ljava.lang.String;@149aa7b2,[Ljava.lang.String;@3ca3648),Annotation([Ljava.lang.String;@2a99ca99,[Ljava.lang.String;@39f0c343,[Ledu.cmu.lti.nlp.amr.Dependency;@781654f8),Annotation([Ljava.lang.String;@2abc55c4,[Ljava.lang.String;@4e958f08,[Ljava.lang.String;@71c0b742),Annotation([Ljava.lang.String;@3bbb8c16,[Ljava.lang.String;@73e1ecd0,[Ledu.cmu.lti.nlp.amr.Entity;@11eec06b))
AMR:
(x30 / 来-05, prep-through, x34 / 告诉-01)
(x30 / 来-05, time, x33 / 我)
(x34 / 告诉-01, extent, x36 / 完成-01)
(x34 / 告诉-01, purpose, x45 / 他)
(x36 / 完成-01, manner, x37 / 成功-01)
(x36 / 完成-01, snt3, x39 / 工作)
(x39 / 工作, mod, x40 / 修理-01)
(x43 / 希望, mod, x44 / 任何)
(x44 / 任何, prep-from, x37 / 成功-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.3.1
WARNING: makeIds can't find span Id: 0.2.1.3.1.0
WARNING: makeIds can't find span Id: 0.2.1.2
WARNING: makeIds can't find span Id: 0.2.1.2.0
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 40,207 microseconds
Sentence: 他 不 回答 我 的 问题 ， 却 接着 说道 ： “ 我 也 一样 ， 今天 ， 要 回家 去 了 … ”

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  也 => 也
Oracle Span 3:  今天 => 今天
Oracle Span 4:  他 => 他
Oracle Span 5:  回家 => 回家-01
Oracle Span 6:  回答 => 回答-01
Oracle Span 7:  我 => 我
Oracle Span 8:  接着 => 接着-01
Oracle Span 9:  要 => 要-03
Oracle Span 10:  说道 => 说道-01
Oracle Span 11:  问题 => 问题
Spans:
Span 14-15:  一样 => 一样-01
Span 13-14:  也 => 也
Span 16-17:  今天 => 今天
Span 0-1:  他 => 他
Span 19-20:  回家 => 回家-01
Span 2-3:  回答 => 回答-01
Span 3-4:  我 => 我
Span 8-9:  接着 => 接着-01
Span 18-19:  要 => 要-03
Span 9-10:  说道 => 说道-01
Span 5-6:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  一样 => 一样-01
Oracle Span 13-14:  也 => 也
Oracle Span 16-17:  今天 => 今天
Oracle Span 0-1:  他 => 他
Oracle Span 19-20:  回家 => 回家-01
Oracle Span 2-3:  回答 => 回答-01
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  接着 => 接着-01
Oracle Span 18-19:  要 => 要-03
Oracle Span 9-10:  说道 => 说道-01
Oracle Span 5-6:  问题 => 问题

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	回答	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	问题	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	却	_	AD	AD	_	10	advmod	_	_
9	接着	_	AD	AD	_	10	advmod	_	_
10	说道	_	VV	VV	_	3	conj	_	_
11	：	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	15	punct	_	_
13	我	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	一样	_	VA	VA	_	10	ccomp	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	今天	_	NT	NT	_	21	tmod	_	_
18	,	_	PU	PU	_	21	punct	_	_
19	要	_	VV	VV	_	21	mmod	_	_
20	回家	_	VV	VV	_	21	mmod	_	_
21	去	_	VV	VV	_	15	conj	_	_
22	了	_	AS	AS	_	21	asp	_	_
23	…	_	NN	NN	_	21	dobj	_	_
24	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x5 / 他)
(x2 / 回答-01, arg1, x6 / 问题)
(x22 / 说道-01, manner, x32 / 接着-01)
(x25 / 一样-01, manner, x27 / 也)
(x28 / 要-03, arg0, x29 / 回家-01)
(x28 / 要-03, time, x31 / 今天)
(x6 / 问题, poss, x7 / 我)

Input(Some(Graph((contrast :arg1 (回答-01 :arg1 (问题 :poss 我) :arg0 他 :polarity -) :arg2 (说道-01 :manner 接着-01 :arg1 (and :op (一样-01 :manner 也 :arg0 x5) :op (要-03 :time 今天 :arg0 (回家-01 :arg0 x5))) :arg0 x5)),ArrayBuffer(Span(2,3,List(0),回答,回答-01,false), Span(5,6,List(1),问题,问题,false), Span(3,4,List(2),我,我,false), Span(0,1,List(3),他,他,false), Span(9,10,List(4),说道,说道-01,false), Span(8,9,List(5),接着,接着-01,false), Span(14,15,List(6),一样,一样-01,false), Span(13,14,List(7),也,也,false), Span(18,19,List(8),要,要-03,false), Span(16,17,List(9),今天,今天,false), Span(19,20,List(10),回家,回家-01,false)),Map(2 -> 我, 5 -> 接着-01, 8 -> 要-03, 7 -> 也, 1 -> 问题, 4 -> 说道-01, 6 -> 一样-01, 9 -> 今天, 0 -> 回答-01, 10 -> 回家-01, 3 -> 他),Map(x28 -> 要-03, x22 -> 说道-01, x25 -> 一样-01, x31 -> 今天, x2 -> 回答-01, x5 -> 他, x27 -> 也, x7 -> 我, x32 -> 接着-01, x29 -> 回家-01, x6 -> 问题))),[Ljava.lang.String;@65600fb3,Annotation([Ljava.lang.String;@25ce435,[Ljava.lang.String;@7ea71fc2,[Ljava.lang.String;@19ad75e5),Annotation([Ljava.lang.String;@7cd5fcf4,[Ljava.lang.String;@19cdc217,[Ledu.cmu.lti.nlp.amr.Dependency;@5f5297e3),Annotation([Ljava.lang.String;@2d22d3b1,[Ljava.lang.String;@7ec3a8bd,[Ljava.lang.String;@9690008),Annotation([Ljava.lang.String;@42cf6349,[Ljava.lang.String;@79cb8ffa,[Ledu.cmu.lti.nlp.amr.Entity;@1a2e563e))
AMR:
(x2 / 回答-01, manner, x5 / 他)
(x2 / 回答-01, prep-following, x6 / 问题)
(x2 / 回答-01, prep-following, x7 / 我)
(x22 / 说道-01, manner, x32 / 接着-01)
(x25 / 一样-01, manner, x27 / 也)
(x25 / 一样-01, time, x31 / 今天)
(x25 / 一样-01, time, x32 / 接着-01)
(x28 / 要-03, prep-following, x29 / 回家-01)
(x28 / 要-03, time, x31 / 今天)
(x32 / 接着-01, prep-following, x6 / 问题)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
Decoded in 40,111 microseconds
Sentence: 然后 ， 他 忧伤 地 说 ： “ 我 回家 要 远 得 多 … 要 难 得 多 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  回家 => 回家-01
Oracle Span 3:  多 => 多-03
Oracle Span 4:  多 => 多-03
Oracle Span 5:  忧伤 => 忧伤
Oracle Span 6:  说 => 说-01
Oracle Span 7:  远 => 远-01
Oracle Span 8:  难 => 难-01
Spans:
Span 2-3:  他 => 他
Span 9-10:  回家 => 回家-01
Span 13-14:  多 => 多-03
Span 18-19:  多 => 多-03
Span 3-4:  忧伤 => 忧伤
Span 5-6:  说 => 说-01
Span 11-12:  远 => 远-01
Span 16-17:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  回家 => 回家-01
Oracle Span 13-14:  多 => 多-03
Oracle Span 18-19:  多 => 多-03
Oracle Span 3-4:  忧伤 => 忧伤
Oracle Span 5-6:  说 => 说-01
Oracle Span 11-12:  远 => 远-01
Oracle Span 16-17:  难 => 难-01

Dependencies:
1	然后	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	6	dep	_	_
4	忧伤	_	VA	VA	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	10	punct	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	回家	_	VV	VV	_	6	ccomp	_	_
11	要	_	VV	VV	_	13	mmod	_	_
12	远	_	AD	AD	_	13	advmod	_	_
13	得	_	VV	VV	_	14	rcmod	_	_
14	多	_	NN	NN	_	10	dobj	_	_
15	…	_	PU	PU	_	19	punct	_	_
16	要	_	JJ	JJ	_	19	amod	_	_
17	难	_	AD	AD	_	18	advmod	_	_
18	得	_	VV	VV	_	19	rcmod	_	_
19	多	_	NN	NN	_	14	prnmod	_	_
20	…	_	PU	PU	_	19	punct	_	_
21	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x2 / 说-01, arg0, x3 / 他)
(x2 / 说-01, manner, x4 / 忧伤)
(x20 / 远-01, arg0, x21 / 回家-01)
(x20 / 远-01, degree, x23 / 多-03)
(x24 / 难-01, degree, x26 / 多-03)

Input(Some(Graph((temporal :arg2 (说-01 :arg1 (and :op (远-01 :degree 多-03 :arg0 (回家-01 :arg0 x3)) :op (难-01 :degree 多-03 :arg0 x21)) :manner 忧伤 :arg0 他)),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(11,12,List(1),远,远-01,false), Span(13,14,List(2),多,多-03,false), Span(9,10,List(3),回家,回家-01,false), Span(16,17,List(4),难,难-01,false), Span(18,19,List(5),多,多-03,false), Span(3,4,List(6),忧伤,忧伤,false), Span(2,3,List(7),他,他,false)),Map(2 -> 多-03, 5 -> 多-03, 7 -> 他, 1 -> 远-01, 4 -> 难-01, 6 -> 忧伤, 0 -> 说-01, 3 -> 回家-01),Map(x2 -> 说-01, x21 -> 回家-01, x24 -> 难-01, x4 -> 忧伤, x23 -> 多-03, x3 -> 他, x26 -> 多-03, x20 -> 远-01))),[Ljava.lang.String;@5b066c33,Annotation([Ljava.lang.String;@62ea8931,[Ljava.lang.String;@47fb7ec9,[Ljava.lang.String;@2f8c4fae),Annotation([Ljava.lang.String;@4703c998,[Ljava.lang.String;@71166348,[Ledu.cmu.lti.nlp.amr.Dependency;@6d874695),Annotation([Ljava.lang.String;@20bb85b4,[Ljava.lang.String;@79add732,[Ljava.lang.String;@3be3e76c),Annotation([Ljava.lang.String;@6c07ad6b,[Ljava.lang.String;@10ed037a,[Ledu.cmu.lti.nlp.amr.Entity;@76e4212))
AMR:
(x2 / 说-01, manner, x4 / 忧伤)
(x2 / 说-01, snt3, x21 / 回家-01)
(x20 / 远-01, degree, x21 / 回家-01)
(x20 / 远-01, degree, x23 / 多-03)
(x24 / 难-01, degree, x23 / 多-03)
(x24 / 难-01, degree, x26 / 多-03)
(x4 / 忧伤, poss, x3 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 21,220 microseconds
Sentence: 我 清楚 地 感到 发生 了 某 种 不 寻常 的 事 。

Oracle Span 1:  事 => 事
Oracle Span 2:  发生 => 发生-01
Oracle Span 3:  寻常 => 寻常-01
Oracle Span 4:  感到 => 感到-01
Oracle Span 5:  我 => 我
Oracle Span 6:  清楚 => 清楚-01
Spans:
Span 11-12:  事 => 事
Span 4-5:  发生 => 发生-01
Span 9-10:  寻常 => 寻常-01
Span 3-4:  感到 => 感到-01
Span 0-1:  我 => 我
Span 1-2:  清楚 => 清楚-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  事 => 事
Oracle Span 4-5:  发生 => 发生-01
Oracle Span 9-10:  寻常 => 寻常-01
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  清楚 => 清楚-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	清楚	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	发生	_	VV	VV	_	12	rcmod	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	某	_	DT	DT	_	9	det	_	_
8	种	_	M	M	_	7	clf	_	_
9	不	_	NN	NN	_	10	nn	_	_
10	寻常	_	NN	NN	_	5	dobj	_	_
11	的	_	DEC	DEC	_	5	cpm	_	_
12	事	_	NN	NN	_	4	dobj	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 我)
(x0 / 感到-01, arg1, x4 / 发生-01)
(x0 / 感到-01, manner, x3 / 清楚-01)
(x4 / 发生-01, arg0, x5 / 事)
(x5 / 事, mod, x6 / 寻常-01)

Input(Some(Graph((感到-01 :arg1 (发生-01 :arg0 (事 :mod 某种 :mod (寻常-01 :polarity -))) :manner 清楚-01 :arg0 我),ArrayBuffer(Span(3,4,List(0),感到,感到-01,false), Span(4,5,List(1),发生,发生-01,false), Span(11,12,List(2),事,事,false), Span(9,10,List(3),寻常,寻常-01,false), Span(1,2,List(4),清楚,清楚-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 事, 5 -> 我, 1 -> 发生-01, 4 -> 清楚-01, 0 -> 感到-01, 3 -> 寻常-01),Map(x2 -> 我, x5 -> 事, x4 -> 发生-01, x3 -> 清楚-01, x6 -> 寻常-01, x0 -> 感到-01))),[Ljava.lang.String;@23121d14,Annotation([Ljava.lang.String;@72af90e8,[Ljava.lang.String;@aa1bb14,[Ljava.lang.String;@7faa0680),Annotation([Ljava.lang.String;@4c635edc,[Ljava.lang.String;@4245bf68,[Ledu.cmu.lti.nlp.amr.Dependency;@45bbc52f),Annotation([Ljava.lang.String;@6a8a551e,[Ljava.lang.String;@3cc9632d,[Ljava.lang.String;@53982523),Annotation([Ljava.lang.String;@489110c2,[Ljava.lang.String;@700b9e6b,[Ledu.cmu.lti.nlp.amr.Entity;@7ac5b4c))
AMR:
(x0 / 感到-01, ARG1, x4 / 发生-01)
(x0 / 感到-01, manner, x3 / 清楚-01)
(x0 / 感到-01, season, x2 / 我)
(x4 / 发生-01, value, x5 / 事)
(x5 / 事, mod, x6 / 寻常-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 16,380 microseconds
Sentence: 我 把 他 当作 小孩 一样 紧紧 抱在 怀里 ， 可是 我 感觉 到 他 径直 地 向 着 一 个 无底 深渊 沉陷 下去 ， 我 想 法 拉 住 他 ， 却 怎么 也 办 不 到 …

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  小孩 => 小孩
Oracle Span 4:  当作 => 当作-01
Oracle Span 5:  径直 => 径直
Oracle Span 6:  怀里 => 怀里
Oracle Span 7:  怎么 => 怎么
Oracle Span 8:  想 => 想-04
Oracle Span 9:  感觉 => 感觉-01
Oracle Span 10:  我 => 我
Oracle Span 11:  无底 => 无底
Oracle Span 12:  沉陷 => 沉陷-01
Oracle Span 13:  法 => 法
Oracle Span 14:  深渊 => 深渊
Oracle Span 15:  紧紧 => 紧紧
Spans:
Span 35-36:  也 => 也
Span 2-3:  他 => 他
Span 4-5:  小孩 => 小孩
Span 3-4:  当作 => 当作-01
Span 15-16:  径直 => 径直
Span 8-9:  怀里 => 怀里
Span 34-35:  怎么 => 怎么
Span 27-28:  想 => 想-04
Span 12-13:  感觉 => 感觉-01
Span 0-1:  我 => 我
Span 21-22:  无底 => 无底
Span 23-24:  沉陷 => 沉陷-01
Span 28-29:  法 => 法
Span 22-23:  深渊 => 深渊
Span 6-7:  紧紧 => 紧紧

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 35-36:  也 => 也
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  小孩 => 小孩
Oracle Span 3-4:  当作 => 当作-01
Oracle Span 15-16:  径直 => 径直
Oracle Span 8-9:  怀里 => 怀里
Oracle Span 34-35:  怎么 => 怎么
Oracle Span 27-28:  想 => 想-04
Oracle Span 12-13:  感觉 => 感觉-01
Oracle Span 0-1:  我 => 我
Oracle Span 21-22:  无底 => 无底
Oracle Span 23-24:  沉陷 => 沉陷-01
Oracle Span 28-29:  法 => 法
Oracle Span 22-23:  深渊 => 深渊
Oracle Span 6-7:  紧紧 => 紧紧

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	当作	_	VV	VV	_	0	root	_	_
5	小孩	_	NR	NR	_	9	nn	_	_
6	一样	_	CD	CD	_	9	nummod	_	_
7	紧紧	_	JJ	JJ	_	9	amod	_	_
8	抱在	_	NN	NN	_	9	nn	_	_
9	怀里	_	NN	NN	_	4	dobj	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	可是	_	AD	AD	_	18	advmod	_	_
12	我	_	PN	PN	_	18	nsubj	_	_
13	感觉	_	VV	VV	_	18	mmod	_	_
14	到	_	P	P	_	18	prep	_	_
15	他	_	PN	PN	_	14	pobj	_	_
16	径直	_	VA	VA	_	18	dvpmod	_	_
17	地	_	DEV	DEV	_	16	dvpm	_	_
18	向	_	VV	VV	_	4	conj	_	_
19	着	_	AS	AS	_	18	asp	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	个	_	M	M	_	24	clf	_	_
22	无底	_	NN	NN	_	24	nn	_	_
23	深渊	_	NN	NN	_	24	nn	_	_
24	沉陷	_	NN	NN	_	18	dobj	_	_
25	下去	_	VV	VV	_	18	dep	_	_
26	,	_	PU	PU	_	4	punct	_	_
27	我	_	PN	PN	_	28	nsubj	_	_
28	想	_	VV	VV	_	4	conj	_	_
29	法	_	NN	NN	_	30	nn	_	_
30	拉	_	NN	NN	_	28	dobj	_	_
31	住	_	VV	VV	_	28	dep	_	_
32	他	_	PN	PN	_	31	dobj	_	_
33	,	_	PU	PU	_	31	punct	_	_
34	却	_	AD	AD	_	39	advmod	_	_
35	怎么	_	AD	AD	_	39	advmod	_	_
36	也	_	AD	AD	_	39	advmod	_	_
37	办	_	VV	VV	_	39	mmod	_	_
38	不	_	AD	AD	_	39	neg	_	_
39	到	_	VV	VV	_	31	conj	_	_
40	…	_	NN	NN	_	39	dobj	_	_

Oracle:
(x77 / 当作-01, arg2, x80 / 小孩)
(x82 / 感觉-01, arg1, x84 / 沉陷-01)
(x84 / 沉陷-01, direction, x86 / 深渊)
(x84 / 沉陷-01, manner, x89 / 径直)
(x86 / 深渊, mod, x87 / 无底)
(x91 / 想-04, arg1, x93 / 法)

Input(Some(Graph((and :op (contrast :arg1 (抱-01 :arg0 我 :arg1 他 :manner 紧紧 :manner (当作-01 :arg2 小孩 :arg1 x75 :arg0 x74) :location 怀里) :arg2 (感觉-01 :arg1 (沉陷-01 :manner 径直 :direction (深渊 :quant 1 :mod 无底) :arg0 x75) :arg0 x74)) :op (contrast :arg1 (想-04 :purpose (拉住 :arg0 x74 :arg1 x75) :arg1 法 :arg0 x74) :arg2 (possible :polarity - :arg0 (办到-01 :manner 怎么 :manner 也 :arg0 x74)))),ArrayBuffer(Span(0,1,List(0),我,我,false), Span(2,3,List(1),他,他,false), Span(6,7,List(2),紧紧,紧紧,false), Span(3,4,List(3),当作,当作-01,false), Span(4,5,List(4),小孩,小孩,false), Span(8,9,List(5),怀里,怀里,false), Span(12,13,List(6),感觉,感觉-01,false), Span(23,24,List(7),沉陷,沉陷-01,false), Span(15,16,List(8),径直,径直,false), Span(22,23,List(9),深渊,深渊,false), Span(21,22,List(10),无底,无底,false), Span(27,28,List(11),想,想-04,false), Span(28,29,List(12),法,法,false), Span(34,35,List(13),怎么,怎么,false), Span(35,36,List(14),也,也,false)),Map(2 -> 紧紧, 5 -> 怀里, 12 -> 法, 8 -> 径直, 7 -> 沉陷-01, 1 -> 他, 4 -> 小孩, 11 -> 想-04, 14 -> 也, 6 -> 感觉-01, 9 -> 深渊, 0 -> 我, 10 -> 无底, 3 -> 当作-01, 13 -> 怎么),Map(x76 -> 紧紧, x93 -> 法, x81 -> 怀里, x75 -> 他, x84 -> 沉陷-01, x101 -> 也, x87 -> 无底, x86 -> 深渊, x80 -> 小孩, x74 -> 我, x89 -> 径直, x77 -> 当作-01, x100 -> 怎么, x82 -> 感觉-01, x91 -> 想-04))),[Ljava.lang.String;@150fc7a7,Annotation([Ljava.lang.String;@55d8c2c4,[Ljava.lang.String;@798cf6d2,[Ljava.lang.String;@1c1fa494),Annotation([Ljava.lang.String;@77c66a4f,[Ljava.lang.String;@649b5891,[Ledu.cmu.lti.nlp.amr.Dependency;@7a3f08b6),Annotation([Ljava.lang.String;@1be52861,[Ljava.lang.String;@5fb5ad40,[Ljava.lang.String;@615439f7),Annotation([Ljava.lang.String;@632cf7d3,[Ljava.lang.String;@51b87df7,[Ledu.cmu.lti.nlp.amr.Entity;@2315052d))
AMR:
(x100 / 怎么, mod, x93 / 法)
(x101 / 也, beneficiary, x100 / 怎么)
(x75 / 他, part, x77 / 当作-01)
(x76 / 紧紧, domain, x80 / 小孩)
(x76 / 紧紧, part, x81 / 怀里)
(x77 / 当作-01, poss, x74 / 我)
(x80 / 小孩, manner, x77 / 当作-01)
(x82 / 感觉-01, manner, x89 / 径直)
(x82 / 感觉-01, time, x81 / 怀里)
(x84 / 沉陷-01, direction, x86 / 深渊)
(x84 / 沉陷-01, manner, x89 / 径直)
(x86 / 深渊, mod, x87 / 无底)
(x91 / 想-04, manner, x84 / 沉陷-01)
(x93 / 法, mod, x91 / 想-04)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.2
WARNING: makeIds can't find span Id: 0.0.0.4
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.1
Decoded in 73,709 microseconds
Sentence: 他 的 眼神 很 严肃 ， 望 着 遥远 的 地方 。

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  他 => 他
Oracle Span 3:  地方 => 地方
Oracle Span 4:  很 => 很
Oracle Span 5:  望 => 望-01
Oracle Span 6:  眼神 => 眼神
Oracle Span 7:  遥远 => 遥远-01
Spans:
Span 4-5:  严肃 => 严肃-01
Span 0-1:  他 => 他
Span 10-11:  地方 => 地方
Span 3-4:  很 => 很
Span 6-7:  望 => 望-01
Span 2-3:  眼神 => 眼神
Span 8-9:  遥远 => 遥远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  严肃 => 严肃-01
Oracle Span 0-1:  他 => 他
Oracle Span 10-11:  地方 => 地方
Oracle Span 3-4:  很 => 很
Oracle Span 6-7:  望 => 望-01
Oracle Span 2-3:  眼神 => 眼神
Oracle Span 8-9:  遥远 => 遥远-01

Dependencies:
1	他	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	眼神	_	NN	NN	_	7	nsubj	_	_
4	很	_	AD	AD	_	7	advmod	_	_
5	严肃	_	AD	AD	_	7	advmod	_	_
6	,	_	PU	PU	_	7	punct	_	_
7	望	_	VV	VV	_	0	root	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	遥远	_	VA	VA	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 望-01, arg0, x4 / 他)
(x2 / 望-01, arg1, x5 / 地方)
(x2 / 望-01, manner, x7 / 严肃-01)
(x5 / 地方, mod, x6 / 遥远-01)
(x7 / 严肃-01, degree, x8 / 很)
(x9 / 眼神, arg0, x7 / 严肃-01)

Input(Some(Graph((望-01 :manner (严肃-01 :arg0-of (眼神 :poss x4) :degree 很) :arg1 (地方 :mod 遥远-01) :arg0 他),ArrayBuffer(Span(6,7,List(0),望,望-01,false), Span(4,5,List(1),严肃,严肃-01,false), Span(2,3,List(2),眼神,眼神,false), Span(3,4,List(3),很,很,false), Span(10,11,List(4),地方,地方,false), Span(8,9,List(5),遥远,遥远-01,false), Span(0,1,List(6),他,他,false)),Map(2 -> 眼神, 5 -> 遥远-01, 1 -> 严肃-01, 4 -> 地方, 6 -> 他, 0 -> 望-01, 3 -> 很),Map(x2 -> 望-01, x5 -> 地方, x8 -> 很, x7 -> 严肃-01, x4 -> 他, x6 -> 遥远-01, x9 -> 眼神))),[Ljava.lang.String;@634e1b39,Annotation([Ljava.lang.String;@67d8faec,[Ljava.lang.String;@751d7425,[Ljava.lang.String;@7eaa2bc6),Annotation([Ljava.lang.String;@6dae70f9,[Ljava.lang.String;@4d81e83a,[Ledu.cmu.lti.nlp.amr.Dependency;@53a301f3),Annotation([Ljava.lang.String;@7cf8f45a,[Ljava.lang.String;@62cf6a84,[Ljava.lang.String;@204d9edf),Annotation([Ljava.lang.String;@6b2aafbc,[Ljava.lang.String;@50cbcca7,[Ledu.cmu.lti.nlp.amr.Entity;@49491770))
AMR:
(x2 / 望-01, degree, x4 / 他)
(x2 / 望-01, manner, x7 / 严肃-01)
(x2 / 望-01, snt1, x5 / 地方)
(x5 / 地方, mod, x6 / 遥远-01)
(x7 / 严肃-01, degree, x8 / 很)
(x9 / 眼神, unit, x7 / 严肃-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 15,333 microseconds
Sentence: “ 我 有 你 画 的 羊 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  有 => 有-01
Oracle Span 4:  画 => 画-01
Oracle Span 5:  羊 => 羊
Spans:
Span 3-4:  你 => 你
Span 1-2:  我 => 我
Span 2-3:  有 => 有-01
Span 4-5:  画 => 画-01
Span 6-7:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  有 => 有-01
Oracle Span 4-5:  画 => 画-01
Oracle Span 6-7:  羊 => 羊

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	有	_	VE	VE	_	0	root	_	_
4	你	_	PN	PN	_	7	nsubj	_	_
5	画	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	羊	_	NN	NN	_	3	conj	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 画-01, arg0, x12 / 你)
(x11 / 画-01, arg1, x10 / 羊)
(x8 / 有-01, arg0, x9 / 我)
(x8 / 有-01, arg1, x10 / 羊)

Input(Some(Graph((say :arg1 (有-01 :arg1 (羊 :arg1-of (画-01 :arg0 你)) :arg0 我)),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(6,7,List(1),羊,羊,false), Span(4,5,List(2),画,画-01,false), Span(3,4,List(3),你,你,false), Span(1,2,List(4),我,我,false)),Map(2 -> 画-01, 1 -> 羊, 4 -> 我, 0 -> 有-01, 3 -> 你),Map(x10 -> 羊, x8 -> 有-01, x12 -> 你, x11 -> 画-01, x9 -> 我))),[Ljava.lang.String;@5bec3e0,Annotation([Ljava.lang.String;@3b57dba4,[Ljava.lang.String;@35f7969d,[Ljava.lang.String;@3404e5c4),Annotation([Ljava.lang.String;@47569167,[Ljava.lang.String;@42d9e8d2,[Ledu.cmu.lti.nlp.amr.Dependency;@4b93dd6a),Annotation([Ljava.lang.String;@582a3b19,[Ljava.lang.String;@2b0454d2,[Ljava.lang.String;@2616b618),Annotation([Ljava.lang.String;@73bb573d,[Ljava.lang.String;@7ac058a0,[Ledu.cmu.lti.nlp.amr.Entity;@736b21ee))
AMR:
(x11 / 画-01, location, x12 / 你)
(x11 / 画-01, purpose, x10 / 羊)
(x8 / 有-01, beneficiary, x9 / 我)
(x8 / 有-01, purpose, x11 / 画-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,026 microseconds
Sentence: 羊 的 箱子

Oracle Span 1:  箱子 => 箱子
Oracle Span 2:  羊 => 羊
Spans:
Span 2-3:  箱子 => 箱子
Span 0-1:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  箱子 => 箱子
Oracle Span 0-1:  羊 => 羊

Dependencies:
1	羊	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	箱子	_	NN	NN	_	0	root	_	_

Oracle:
(x0 / 箱子, poss, x2 / 羊)

Input(Some(Graph((箱子 :poss 羊),ArrayBuffer(Span(2,3,List(0),箱子,箱子,false), Span(0,1,List(1),羊,羊,false)),Map(1 -> 羊, 0 -> 箱子),Map(x2 -> 羊, x0 -> 箱子))),[Ljava.lang.String;@60deefed,Annotation([Ljava.lang.String;@49754e74,[Ljava.lang.String;@31881aa2,[Ljava.lang.String;@1b46392c),Annotation([Ljava.lang.String;@cf01c2e,[Ljava.lang.String;@6f15f52a,[Ledu.cmu.lti.nlp.amr.Dependency;@1eb9bf60),Annotation([Ljava.lang.String;@341c6ac2,[Ljava.lang.String;@38811103,[Ljava.lang.String;@787d1f9c),Annotation([Ljava.lang.String;@2becfd4c,[Ljava.lang.String;@7c71c889,[Ledu.cmu.lti.nlp.amr.Entity;@4cc8d70d))
AMR:
(x0 / 箱子, poss, x2 / 羊)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,354 microseconds
Sentence: 和 羊 的 嘴套子 …

Oracle Span 1:  嘴套子 => 嘴套子
Oracle Span 2:  羊 => 羊
Spans:
Span 3-4:  嘴套子 => 嘴套子
Span 1-2:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  嘴套子 => 嘴套子
Oracle Span 1-2:  羊 => 羊

Dependencies:
1	和	_	P	P	_	4	assmod	_	_
2	羊	_	NN	NN	_	1	pobj	_	_
3	的	_	DEG	DEG	_	1	assm	_	_
4	嘴套子	_	NN	NN	_	5	nsubj	_	_
5	…	_	VA	VA	_	0	root	_	_

Oracle:
(x5 / 嘴套子, poss, x6 / 羊)

Input(Some(Graph((and :op (嘴套子 :poss 羊)),ArrayBuffer(Span(3,4,List(0),嘴套子,嘴套子,false), Span(1,2,List(1),羊,羊,false)),Map(1 -> 羊, 0 -> 嘴套子),Map(x5 -> 嘴套子, x6 -> 羊))),[Ljava.lang.String;@5c59a0f7,Annotation([Ljava.lang.String;@101330ad,[Ljava.lang.String;@625487a6,[Ljava.lang.String;@682e445e),Annotation([Ljava.lang.String;@79e10fb4,[Ljava.lang.String;@70fede7d,[Ledu.cmu.lti.nlp.amr.Dependency;@36510e73),Annotation([Ljava.lang.String;@2c47a053,[Ljava.lang.String;@5d2a86c0,[Ljava.lang.String;@5ba1b62e),Annotation([Ljava.lang.String;@65bd19bf,[Ljava.lang.String;@74697863,[Ledu.cmu.lti.nlp.amr.Entity;@7d7ceca8))
AMR:
(x5 / 嘴套子, poss, x6 / 羊)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,334 microseconds
Sentence: 他 带 着 忧伤 的 神情 微笑 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  微笑 => 微笑-01
Oracle Span 3:  忧伤 => 忧伤
Oracle Span 4:  神情 => 神情
Spans:
Span 0-1:  他 => 他
Span 6-7:  微笑 => 微笑-01
Span 3-4:  忧伤 => 忧伤
Span 5-6:  神情 => 神情

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  微笑 => 微笑-01
Oracle Span 3-4:  忧伤 => 忧伤
Oracle Span 5-6:  神情 => 神情

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	带	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	忧伤	_	NN	NN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	神情	_	NN	NN	_	7	nn	_	_
7	微笑	_	NN	NN	_	2	dobj	_	_
8	了	_	SP	SP	_	2	dep	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 微笑-01, arg0, x2 / 他)
(x5 / 神情, mod, x6 / 忧伤)

Input(Some(Graph((微笑-01 :manner (带着-01 :arg0 x2 :arg1 (神情 :mod 忧伤)) :arg0 他),ArrayBuffer(Span(6,7,List(0),微笑,微笑-01,false), Span(5,6,List(1),神情,神情,false), Span(3,4,List(2),忧伤,忧伤,false), Span(0,1,List(3),他,他,false)),Map(2 -> 忧伤, 1 -> 神情, 0 -> 微笑-01, 3 -> 他),Map(x2 -> 他, x5 -> 神情, x6 -> 忧伤, x0 -> 微笑-01))),[Ljava.lang.String;@2bba35ef,Annotation([Ljava.lang.String;@26c7b1c6,[Ljava.lang.String;@19526f1d,[Ljava.lang.String;@3d1c933),Annotation([Ljava.lang.String;@79be91eb,[Ljava.lang.String;@626c569b,[Ledu.cmu.lti.nlp.amr.Dependency;@684ce74c),Annotation([Ljava.lang.String;@65593327,[Ljava.lang.String;@68e5c7ae,[Ljava.lang.String;@68bd8ca7),Annotation([Ljava.lang.String;@6744707b,[Ljava.lang.String;@4b28a7bf,[Ledu.cmu.lti.nlp.amr.Entity;@d36c1c3))
AMR:
(x0 / 微笑-01, polite, x2 / 他)
(x5 / 神情, mod, x6 / 忧伤)
(x6 / 忧伤, ARG3, x0 / 微笑-01)

WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,020 microseconds
Sentence: 我 等 了 很 长 时间 ，

Oracle Span 1:  很 => 很
Oracle Span 2:  我 => 我
Oracle Span 3:  时间 => 时间
Oracle Span 4:  等 => 等-01
Oracle Span 5:  长 => 长-04
Spans:
Span 3-4:  很 => 很
Span 0-1:  我 => 我
Span 5-6:  时间 => 时间
Span 1-2:  等 => 等-01
Span 4-5:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  时间 => 时间
Oracle Span 1-2:  等 => 等-01
Oracle Span 4-5:  长 => 长-04

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	等	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	长	_	JJ	JJ	_	6	amod	_	_
6	时间	_	NN	NN	_	2	dep	_	_
7	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x1 / 等-01, arg0, x2 / 我)
(x1 / 等-01, duration, x3 / 时间)
(x3 / 时间, mod, x4 / 长-04)
(x4 / 长-04, degree, x5 / 很)

Input(Some(Graph((等-01 :duration (时间 :mod (长-04 :degree 很)) :arg0 我),ArrayBuffer(Span(1,2,List(0),等,等-01,false), Span(5,6,List(1),时间,时间,false), Span(4,5,List(2),长,长-04,false), Span(3,4,List(3),很,很,false), Span(0,1,List(4),我,我,false)),Map(2 -> 长-04, 1 -> 时间, 4 -> 我, 0 -> 等-01, 3 -> 很),Map(x2 -> 我, x5 -> 很, x1 -> 等-01, x4 -> 长-04, x3 -> 时间))),[Ljava.lang.String;@96abc76,Annotation([Ljava.lang.String;@4d69d288,[Ljava.lang.String;@437281c5,[Ljava.lang.String;@787178b1),Annotation([Ljava.lang.String;@24a4e2c5,[Ljava.lang.String;@27da994b,[Ledu.cmu.lti.nlp.amr.Dependency;@70f148dc),Annotation([Ljava.lang.String;@3360283,[Ljava.lang.String;@77aea,[Ljava.lang.String;@73e4bb60),Annotation([Ljava.lang.String;@9a9aa68,[Ljava.lang.String;@3a3883c4,[Ledu.cmu.lti.nlp.amr.Entity;@1537e43))
AMR:
(x1 / 等-01, duration, x3 / 时间)
(x1 / 等-01, value, x2 / 我)
(x3 / 时间, mod, x4 / 长-04)
(x4 / 长-04, degree, x5 / 很)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,651 microseconds
Sentence: 才 觉得 他 身子 渐渐 暖和 起来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  才 => 才
Oracle Span 3:  暖和 => 暖和-01
Oracle Span 4:  渐渐 => 渐渐
Oracle Span 5:  觉得 => 觉得-01
Oracle Span 6:  身子 => 身子
Spans:
Span 2-3:  他 => 他
Span 0-1:  才 => 才
Span 5-6:  暖和 => 暖和-01
Span 4-5:  渐渐 => 渐渐
Span 1-2:  觉得 => 觉得-01
Span 3-4:  身子 => 身子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  才 => 才
Oracle Span 5-6:  暖和 => 暖和-01
Oracle Span 4-5:  渐渐 => 渐渐
Oracle Span 1-2:  觉得 => 觉得-01
Oracle Span 3-4:  身子 => 身子

Dependencies:
1	才	_	AD	AD	_	2	advmod	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	身子	_	AD	AD	_	6	advmod	_	_
5	渐渐	_	AD	AD	_	6	advmod	_	_
6	暖和	_	VV	VV	_	2	ccomp	_	_
7	起来	_	VV	VV	_	6	comod	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 觉得-01, arg1, x2 / 暖和-01)
(x0 / 觉得-01, manner, x6 / 才)
(x2 / 暖和-01, arg0, x3 / 身子)
(x2 / 暖和-01, manner, x5 / 渐渐)
(x3 / 身子, poss, x4 / 他)

Input(Some(Graph((觉得-01 :manner 才 :arg1 (暖和-01 :manner 渐渐 :arg0 (身子 :poss 他))),ArrayBuffer(Span(1,2,List(0),觉得,觉得-01,false), Span(0,1,List(1),才,才,false), Span(5,6,List(2),暖和,暖和-01,false), Span(4,5,List(3),渐渐,渐渐,false), Span(3,4,List(4),身子,身子,false), Span(2,3,List(5),他,他,false)),Map(2 -> 暖和-01, 5 -> 他, 1 -> 才, 4 -> 身子, 0 -> 觉得-01, 3 -> 渐渐),Map(x2 -> 暖和-01, x5 -> 渐渐, x4 -> 他, x3 -> 身子, x6 -> 才, x0 -> 觉得-01))),[Ljava.lang.String;@573aeab2,Annotation([Ljava.lang.String;@1304e0d7,[Ljava.lang.String;@6ddc67d0,[Ljava.lang.String;@7767bd4e),Annotation([Ljava.lang.String;@7708b66a,[Ljava.lang.String;@433ef204,[Ledu.cmu.lti.nlp.amr.Dependency;@4dd2ef54),Annotation([Ljava.lang.String;@795b66d,[Ljava.lang.String;@359ceb13,[Ljava.lang.String;@1068176),Annotation([Ljava.lang.String;@5bf4764d,[Ljava.lang.String;@71789580,[Ledu.cmu.lti.nlp.amr.Entity;@23ee2ccf))
AMR:
(x0 / 觉得-01, extent, x2 / 暖和-01)
(x0 / 觉得-01, manner, x6 / 才)
(x2 / 暖和-01, degree, x3 / 身子)
(x2 / 暖和-01, manner, x5 / 渐渐)
(x3 / 身子, poss, x4 / 他)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 11,577 microseconds
Sentence: “ 小家伙 ，

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 (家伙 :mod 小-01)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@165614f5,Annotation([Ljava.lang.String;@6e685e6c,[Ljava.lang.String;@5b0902b4,[Ljava.lang.String;@9d3d54e),Annotation([Ljava.lang.String;@2f04993d,[Ljava.lang.String;@333398f,[Ledu.cmu.lti.nlp.amr.Dependency;@103c97ff),Annotation([Ljava.lang.String;@7d25913,[Ljava.lang.String;@c14e5a5,[Ljava.lang.String;@16f15ae9),Annotation([Ljava.lang.String;@6206b4a7,[Ljava.lang.String;@77896335,[Ledu.cmu.lti.nlp.amr.Entity;@5c1b89ac))
AMR:


Decoded in 944 microseconds
Sentence: 我 对 他 说 ： “ 你 受惊 了 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  受惊 => 受惊-01
Oracle Span 4:  我 => 我
Oracle Span 5:  说 => 说-01
Spans:
Span 2-3:  他 => 他
Span 6-7:  你 => 你
Span 7-8:  受惊 => 受惊-01
Span 0-1:  我 => 我
Span 3-4:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 7-8:  受惊 => 受惊-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	受惊	_	VV	VV	_	4	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x4 / 受惊-01)
(x0 / 说-01, arg3, x3 / 他)
(x4 / 受惊-01, arg0, x5 / 你)

Input(Some(Graph((说-01 :arg1 (受惊-01 :arg0 你) :arg3 他 :arg0 我),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(7,8,List(1),受惊,受惊-01,false), Span(6,7,List(2),你,你,false), Span(2,3,List(3),他,他,false), Span(0,1,List(4),我,我,false)),Map(2 -> 你, 1 -> 受惊-01, 4 -> 我, 0 -> 说-01, 3 -> 他),Map(x2 -> 我, x5 -> 你, x4 -> 受惊-01, x3 -> 他, x0 -> 说-01))),[Ljava.lang.String;@40a1b6d4,Annotation([Ljava.lang.String;@175581eb,[Ljava.lang.String;@2b79c8ff,[Ljava.lang.String;@2baf72d5),Annotation([Ljava.lang.String;@66756662,[Ljava.lang.String;@5d14e99e,[Ledu.cmu.lti.nlp.amr.Dependency;@38cfecf3),Annotation([Ljava.lang.String;@682618e5,[Ljava.lang.String;@25ad25f5,[Ljava.lang.String;@5f0f70c7),Annotation([Ljava.lang.String;@1860a7a1,[Ljava.lang.String;@40d96578,[Ledu.cmu.lti.nlp.amr.Entity;@c97721b))
AMR:
(x0 / 说-01, decade, x3 / 他)
(x0 / 说-01, mode, x4 / 受惊-01)
(x0 / 说-01, snt3, x2 / 我)
(x4 / 受惊-01, prep-following, x5 / 你)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,637 microseconds
Sentence: 他 害怕 了 ， 这 是 无疑 的 ！

Oracle Span 1:  他 => 他
Oracle Span 2:  害怕 => 害怕-01
Oracle Span 3:  无疑 => 无疑-01
Spans:
Span 0-1:  他 => 他
Span 1-2:  害怕 => 害怕-01
Span 6-7:  无疑 => 无疑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  害怕 => 害怕-01
Oracle Span 6-7:  无疑 => 无疑-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	害怕	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	这	_	PN	PN	_	6	nsubj	_	_
6	是	_	VC	VC	_	2	conj	_	_
7	无疑	_	AD	AD	_	6	advmod	_	_
8	的	_	SP	SP	_	2	dep	_	_
9	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / 无疑-01, arg0, x8 / 害怕-01)
(x8 / 害怕-01, arg0, x9 / 他)

Input(Some(Graph((无疑-01 :arg0 (害怕-01 :arg0 他) :mode expressive),ArrayBuffer(Span(6,7,List(0),无疑,无疑-01,false), Span(1,2,List(1),害怕,害怕-01,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 害怕-01, 0 -> 无疑-01),Map(x8 -> 害怕-01, x3 -> 无疑-01, x9 -> 他))),[Ljava.lang.String;@283ab206,Annotation([Ljava.lang.String;@35fa450f,[Ljava.lang.String;@3e03046d,[Ljava.lang.String;@9b3be1c),Annotation([Ljava.lang.String;@74e497ae,[Ljava.lang.String;@13516600,[Ledu.cmu.lti.nlp.amr.Dependency;@35d7386b),Annotation([Ljava.lang.String;@21002393,[Ljava.lang.String;@718989fa,[Ljava.lang.String;@69f080ad),Annotation([Ljava.lang.String;@6568f998,[Ljava.lang.String;@45d4421d,[Ledu.cmu.lti.nlp.amr.Entity;@782fd504))
AMR:
(x3 / 无疑-01, time, x8 / 害怕-01)
(x8 / 害怕-01, prep-following, x9 / 他)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 4,277 microseconds
Sentence: 他 却 温柔 地 笑 着 说 ：

Oracle Span 1:  他 => 他
Oracle Span 2:  温柔 => 温柔-01
Oracle Span 3:  说 => 说-01
Spans:
Span 0-1:  他 => 他
Span 2-3:  温柔 => 温柔-01
Span 6-7:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  温柔 => 温柔-01
Oracle Span 6-7:  说 => 说-01

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	却	_	AD	AD	_	5	advmod	_	_
3	温柔	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	说	_	VV	VV	_	5	dep	_	_
8	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 说-01, arg0, x8 / 他)

Input(Some(Graph((contrast :arg2 (说-01 :manner (笑着 :manner 温柔-01) :arg0 他)),ArrayBuffer(Span(6,7,List(0),说,说-01,false), Span(2,3,List(1),温柔,温柔-01,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 温柔-01, 0 -> 说-01),Map(x10 -> 温柔-01, x8 -> 他, x7 -> 说-01))),[Ljava.lang.String;@1537c744,Annotation([Ljava.lang.String;@37314843,[Ljava.lang.String;@50122012,[Ljava.lang.String;@569348e1),Annotation([Ljava.lang.String;@7db5b890,[Ljava.lang.String;@407b8435,[Ledu.cmu.lti.nlp.amr.Dependency;@1282e98),Annotation([Ljava.lang.String;@4db0ba1c,[Ljava.lang.String;@1d91fa02,[Ljava.lang.String;@1578fa9),Annotation([Ljava.lang.String;@414b2df5,[Ljava.lang.String;@9e30f9a,[Ledu.cmu.lti.nlp.amr.Entity;@1b30a54e))
AMR:
(x10 / 温柔-01, location, x8 / 他)
(x7 / 说-01, manner, x10 / 温柔-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,103 microseconds
Sentence: “ 今天 晚上 ， 我 会 怕 得 更 厉害 … ”

Oracle Span 1:  今天 => 今天
Oracle Span 2:  会 => 会-02
Oracle Span 3:  厉害 => 厉害-01
Oracle Span 4:  怕 => 怕-01
Oracle Span 5:  我 => 我
Oracle Span 6:  晚上 => 晚上
Oracle Span 7:  更 => 更
Spans:
Span 1-2:  今天 => 今天
Span 5-6:  会 => 会-02
Span 9-10:  厉害 => 厉害-01
Span 6-7:  怕 => 怕-01
Span 4-5:  我 => 我
Span 2-3:  晚上 => 晚上
Span 8-9:  更 => 更

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  今天 => 今天
Oracle Span 5-6:  会 => 会-02
Oracle Span 9-10:  厉害 => 厉害-01
Oracle Span 6-7:  怕 => 怕-01
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 8-9:  更 => 更

Dependencies:
1	“	_	PU	PU	_	10	punct	_	_
2	今天	_	NT	NT	_	3	nn	_	_
3	晚上	_	NT	NT	_	10	tmod	_	_
4	,	_	PU	PU	_	10	punct	_	_
5	我	_	PN	PN	_	10	nsubj	_	_
6	会	_	VV	VV	_	10	mmod	_	_
7	怕	_	VV	VV	_	10	dep	_	_
8	得	_	DER	DER	_	10	dep	_	_
9	更	_	AD	AD	_	10	advmod	_	_
10	厉害	_	VV	VV	_	0	root	_	_
11	…	_	NN	NN	_	10	dobj	_	_
12	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x10 / 会-02, arg0, x11 / 怕-01)
(x10 / 会-02, time, x15 / 晚上)
(x11 / 怕-01, arg0, x12 / 我)
(x11 / 怕-01, degree, x13 / 厉害-01)
(x13 / 厉害-01, degree, x14 / 更)
(x15 / 晚上, time, x16 / 今天)

Input(Some(Graph((say :arg1 (会-02 :time (晚上 :time 今天) :arg0 (怕-01 :degree (厉害-01 :degree 更) :arg0 我))),ArrayBuffer(Span(5,6,List(0),会,会-02,false), Span(2,3,List(1),晚上,晚上,false), Span(1,2,List(2),今天,今天,false), Span(6,7,List(3),怕,怕-01,false), Span(9,10,List(4),厉害,厉害-01,false), Span(8,9,List(5),更,更,false), Span(4,5,List(6),我,我,false)),Map(2 -> 今天, 5 -> 更, 1 -> 晚上, 4 -> 厉害-01, 6 -> 我, 0 -> 会-02, 3 -> 怕-01),Map(x16 -> 今天, x10 -> 会-02, x13 -> 厉害-01, x12 -> 我, x15 -> 晚上, x11 -> 怕-01, x14 -> 更))),[Ljava.lang.String;@26275b46,Annotation([Ljava.lang.String;@3e9beef2,[Ljava.lang.String;@2f15a964,[Ljava.lang.String;@3111631d),Annotation([Ljava.lang.String;@2d70f312,[Ljava.lang.String;@4c7d7430,[Ledu.cmu.lti.nlp.amr.Dependency;@4ea1aa52),Annotation([Ljava.lang.String;@74123110,[Ljava.lang.String;@5ed0b4e3,[Ljava.lang.String;@79ab97fd),Annotation([Ljava.lang.String;@3a9b41a0,[Ljava.lang.String;@5fe46d52,[Ledu.cmu.lti.nlp.amr.Entity;@448ade1))
AMR:
(x10 / 会-02, purpose, x11 / 怕-01)
(x10 / 会-02, time, x15 / 晚上)
(x11 / 怕-01, degree, x13 / 厉害-01)
(x11 / 怕-01, manner, x12 / 我)
(x13 / 厉害-01, degree, x14 / 更)
(x15 / 晚上, time, x16 / 今天)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 14,229 microseconds
Sentence: 我 再度 意识 到 要 发生 一 件 不 可 弥补 的 事 。

Oracle Span 1:  事 => 事
Oracle Span 2:  再度 => 再度
Oracle Span 3:  发生 => 发生-01
Oracle Span 4:  意识 => 意识-01
Oracle Span 5:  我 => 我
Oracle Span 6:  要 => 要-03
Spans:
Span 12-13:  事 => 事
Span 1-2:  再度 => 再度
Span 5-6:  发生 => 发生-01
Span 2-3:  意识 => 意识-01
Span 0-1:  我 => 我
Span 4-5:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  事 => 事
Oracle Span 1-2:  再度 => 再度
Oracle Span 5-6:  发生 => 发生-01
Oracle Span 2-3:  意识 => 意识-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  要 => 要-03

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	再度	_	AD	AD	_	3	advmod	_	_
3	意识	_	VV	VV	_	0	root	_	_
4	到	_	VV	VV	_	3	comod	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	发生	_	VV	VV	_	3	dep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	件	_	M	M	_	13	clf	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	可	_	VV	VV	_	11	dep	_	_
11	弥补	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	事	_	NN	NN	_	6	dobj	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 意识-01, arg0, x2 / 我)
(x0 / 意识-01, arg1, x9 / 要-03)
(x0 / 意识-01, mod, x3 / 再度)
(x10 / 发生-01, arg0, x11 / 事)
(x9 / 要-03, arg0, x10 / 发生-01)

Input(Some(Graph((意识-01 :arg1 (要-03 :arg0 (发生-01 :arg0 (事 :mod 不可弥补 :quant 1))) :mod 再度 :arg0 我),ArrayBuffer(Span(2,3,List(0),意识,意识-01,false), Span(4,5,List(1),要,要-03,false), Span(5,6,List(2),发生,发生-01,false), Span(12,13,List(3),事,事,false), Span(1,2,List(4),再度,再度,false), Span(0,1,List(5),我,我,false)),Map(2 -> 发生-01, 5 -> 我, 1 -> 要-03, 4 -> 再度, 0 -> 意识-01, 3 -> 事),Map(x2 -> 我, x10 -> 发生-01, x3 -> 再度, x11 -> 事, x9 -> 要-03, x0 -> 意识-01))),[Ljava.lang.String;@21f9c6ea,Annotation([Ljava.lang.String;@418f0534,[Ljava.lang.String;@3dfd7eaa,[Ljava.lang.String;@7c9beb51),Annotation([Ljava.lang.String;@133aacbe,[Ljava.lang.String;@2aa5bd48,[Ledu.cmu.lti.nlp.amr.Dependency;@7cfb8e98),Annotation([Ljava.lang.String;@5f193335,[Ljava.lang.String;@19002b34,[Ljava.lang.String;@1ec88aa1),Annotation([Ljava.lang.String;@3e6748ae,[Ljava.lang.String;@28f154cc,[Ledu.cmu.lti.nlp.amr.Entity;@3030836d))
AMR:
(x0 / 意识-01, ARG3, x9 / 要-03)
(x0 / 意识-01, beneficiary, x2 / 我)
(x0 / 意识-01, mod, x3 / 再度)
(x10 / 发生-01, prep-from, x11 / 事)
(x9 / 要-03, op, x10 / 发生-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,707 microseconds
Sentence: 我 觉得 我 的 心 一下子 就 凉 了 。 这时 我 才 明白 ： 一 想到 再 也 不 能 听到 这 笑声 ， 我 就 不 能 忍受 。

Oracle Span 1:  一下子 => 一下子
Oracle Span 2:  再 => 再-01
Oracle Span 3:  凉 => 凉-03
Oracle Span 4:  听到 => 听到-01
Oracle Span 5:  就 => 就
Oracle Span 6:  就 => 就-01
Oracle Span 7:  心 => 心
Oracle Span 8:  忍受 => 忍受-01
Oracle Span 9:  想到 => 想到-01
Oracle Span 10:  我 => 我
Oracle Span 11:  才 => 才
Oracle Span 12:  明白 => 明白-01
Oracle Span 13:  笑声 => 笑声
Oracle Span 14:  能 => 能-01
Oracle Span 15:  能 => 能-01
Oracle Span 16:  觉得 => 觉得-01
Oracle Span 17:  这 => 这
Oracle Span 18:  这时 => 这时
Spans:
Span 5-6:  一下子 => 一下子
Span 17-18:  再 => 再-01
Span 7-8:  凉 => 凉-03
Span 21-22:  听到 => 听到-01
Span 6-7:  就 => 就
Span 26-27:  就 => 就-01
Span 4-5:  心 => 心
Span 29-30:  忍受 => 忍受-01
Span 16-17:  想到 => 想到-01
Span 0-1:  我 => 我
Span 12-13:  才 => 才
Span 13-14:  明白 => 明白-01
Span 23-24:  笑声 => 笑声
Span 20-21:  能 => 能-01
Span 28-29:  能 => 能-01
Span 1-2:  觉得 => 觉得-01
Span 22-23:  这 => 这
Span 10-11:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  一下子 => 一下子
Oracle Span 17-18:  再 => 再-01
Oracle Span 7-8:  凉 => 凉-03
Oracle Span 21-22:  听到 => 听到-01
Oracle Span 6-7:  就 => 就
Oracle Span 26-27:  就 => 就-01
Oracle Span 4-5:  心 => 心
Oracle Span 29-30:  忍受 => 忍受-01
Oracle Span 16-17:  想到 => 想到-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  才 => 才
Oracle Span 13-14:  明白 => 明白-01
Oracle Span 23-24:  笑声 => 笑声
Oracle Span 20-21:  能 => 能-01
Oracle Span 28-29:  能 => 能-01
Oracle Span 1-2:  觉得 => 觉得-01
Oracle Span 22-23:  这 => 这
Oracle Span 10-11:  这时 => 这时

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	心	_	NN	NN	_	8	nsubj	_	_
6	一下子	_	AD	AD	_	8	advmod	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	凉	_	VV	VV	_	2	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	8	punct	_	_
11	这时	_	AD	AD	_	14	advmod	_	_
12	我	_	PN	PN	_	14	nsubj	_	_
13	才	_	AD	AD	_	14	advmod	_	_
14	明白	_	VV	VV	_	8	conj	_	_
15	：	_	PU	PU	_	14	punct	_	_
16	一	_	NT	NT	_	17	tmod	_	_
17	想到	_	VV	VV	_	14	ccomp	_	_
18	再	_	AD	AD	_	22	advmod	_	_
19	也	_	AD	AD	_	22	advmod	_	_
20	不	_	AD	AD	_	22	neg	_	_
21	能	_	VV	VV	_	22	mmod	_	_
22	听到	_	VV	VV	_	17	ccomp	_	_
23	这	_	DT	DT	_	24	det	_	_
24	笑声	_	NN	NN	_	22	dobj	_	_
25	,	_	PU	PU	_	8	punct	_	_
26	我	_	PN	PN	_	30	nsubj	_	_
27	就	_	AD	AD	_	30	advmod	_	_
28	不	_	AD	AD	_	30	neg	_	_
29	能	_	VV	VV	_	30	dep	_	_
30	忍受	_	VV	VV	_	8	conj	_	_
31	。	_	PU	PU	_	2	punct	_	_
32	一	_	NT	NT	_	22	xsubj	_	_

Oracle:
(x2 / 觉得-01, arg0, x3 / 我)
(x2 / 觉得-01, arg1, x4 / 凉-03)
(x25 / 想到-01, arg1, x27 / 能-01)
(x27 / 能-01, arg0, x30 / 听到-01)
(x27 / 能-01, manner, x29 / 再-01)
(x30 / 听到-01, arg1, x32 / 笑声)
(x32 / 笑声, mod, x33 / 这)
(x34 / 能-01, arg0, x36 / 忍受-01)
(x34 / 能-01, manner, x38 / 就-01)
(x4 / 凉-03, arg1, x5 / 心)
(x4 / 凉-03, manner, x7 / 就)
(x4 / 凉-03, manner, x8 / 一下子)
(x9 / 明白-01, manner, x11 / 才)
(x9 / 明白-01, time, x12 / 这时)

Input(Some(Graph((multi-sentence :snt1 (觉得-01 :arg1 (凉-03 :manner 一下子 :manner 就 :arg1 (心 :poss x3)) :arg0 我) :snt2 (明白-01 :arg1 (causation :arg1 (想到-01 :arg1 (能-01 :arg0 (听到-01 :arg1 (笑声 :mod 这) :arg0 x3) :manner 再-01 :polarity -) :arg0 x3) :arg2 (能-01 :manner 就-01 :arg0 (忍受-01 :arg0 x3) :polarity -)) :time 这时 :manner 才 :arg0 x3)),ArrayBuffer(Span(1,2,List(0),觉得,觉得-01,false), Span(7,8,List(1),凉,凉-03,false), Span(5,6,List(2),一下子,一下子,false), Span(6,7,List(3),就,就,false), Span(4,5,List(4),心,心,false), Span(0,1,List(5),我,我,false), Span(13,14,List(6),明白,明白-01,false), Span(16,17,List(7),想到,想到-01,false), Span(20,21,List(8),能,能-01,false), Span(21,22,List(9),听到,听到-01,false), Span(23,24,List(10),笑声,笑声,false), Span(22,23,List(11),这,这,false), Span(17,18,List(12),再,再-01,false), Span(28,29,List(13),能,能-01,false), Span(26,27,List(14),就,就-01,false), Span(29,30,List(15),忍受,忍受-01,false), Span(10,11,List(16),这时,这时,false), Span(12,13,List(17),才,才,false)),Map(2 -> 一下子, 5 -> 我, 12 -> 再-01, 15 -> 忍受-01, 8 -> 能-01, 7 -> 想到-01, 17 -> 才, 1 -> 凉-03, 4 -> 心, 11 -> 这, 14 -> 就-01, 6 -> 明白-01, 9 -> 听到-01, 0 -> 觉得-01, 16 -> 这时, 10 -> 笑声, 3 -> 就, 13 -> 能-01),Map(x34 -> 能-01, x25 -> 想到-01, x2 -> 觉得-01, x5 -> 心, x8 -> 一下子, x30 -> 听到-01, x12 -> 这时, x33 -> 这, x27 -> 能-01, x36 -> 忍受-01, x7 -> 就, x4 -> 凉-03, x38 -> 就-01, x32 -> 笑声, x3 -> 我, x11 -> 才, x29 -> 再-01, x9 -> 明白-01))),[Ljava.lang.String;@6af78a48,Annotation([Ljava.lang.String;@6ed18d80,[Ljava.lang.String;@4c24f3a2,[Ljava.lang.String;@783b3aa0),Annotation([Ljava.lang.String;@2ec85a25,[Ljava.lang.String;@4c176ff1,[Ledu.cmu.lti.nlp.amr.Dependency;@27c53c32),Annotation([Ljava.lang.String;@68aec50,[Ljava.lang.String;@6aff97d6,[Ljava.lang.String;@1d60059f),Annotation([Ljava.lang.String;@134a8ead,[Ljava.lang.String;@427308f8,[Ledu.cmu.lti.nlp.amr.Entity;@54247647))
AMR:
(x2 / 觉得-01, beneficiary, x3 / 我)
(x2 / 觉得-01, polite, x4 / 凉-03)
(x27 / 能-01, manner, x29 / 再-01)
(x27 / 能-01, snt11, x30 / 听到-01)
(x29 / 再-01, manner, x25 / 想到-01)
(x32 / 笑声, mod, x33 / 这)
(x32 / 笑声, poss, x30 / 听到-01)
(x34 / 能-01, manner, x38 / 就-01)
(x34 / 能-01, snt11, x36 / 忍受-01)
(x38 / 就-01, time, x32 / 笑声)
(x4 / 凉-03, manner, x5 / 心)
(x4 / 凉-03, manner, x7 / 就)
(x4 / 凉-03, manner, x8 / 一下子)
(x9 / 明白-01, manner, x11 / 才)
(x9 / 明白-01, manner, x4 / 凉-03)
(x9 / 明白-01, mode, x25 / 想到-01)
(x9 / 明白-01, time, x12 / 这时)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3.0
WARNING: makeIds can't find span Id: 0.1.3.0.1
WARNING: makeIds can't find span Id: 0.1.3.0.1.2
WARNING: makeIds can't find span Id: 0.1.3.0.1.2.1
WARNING: makeIds can't find span Id: 0.1.3.0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.3.0.1.1
WARNING: makeIds can't find span Id: 0.1.3.1
WARNING: makeIds can't find span Id: 0.1.3.1.2
WARNING: makeIds can't find span Id: 0.1.3.1.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 101,415 microseconds
Sentence: 这 笑声 对 我 来说 ， 就 好象 是 沙漠 中 的 甘泉 一样 。

Oracle Span 1:  我 => 我
Oracle Span 2:  来说 => 来说-01
Oracle Span 3:  沙漠 => 沙漠
Oracle Span 4:  甘泉 => 甘泉
Oracle Span 5:  笑声 => 笑声
Oracle Span 6:  这 => 这
Spans:
Span 3-4:  我 => 我
Span 4-5:  来说 => 来说-01
Span 9-10:  沙漠 => 沙漠
Span 12-13:  甘泉 => 甘泉
Span 1-2:  笑声 => 笑声
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  来说 => 来说-01
Oracle Span 9-10:  沙漠 => 沙漠
Oracle Span 12-13:  甘泉 => 甘泉
Oracle Span 1-2:  笑声 => 笑声
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	笑声	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	14	prep	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	来说	_	VV	VV	_	3	pccomp	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	好象	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	5	ccomp	_	_
10	沙漠	_	NN	NN	_	11	lobj	_	_
11	中	_	LC	LC	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	甘泉	_	NN	NN	_	9	attr	_	_
14	一样	_	VA	VA	_	2	ccomp	_	_
15	。	_	PU	PU	_	2	punct	_	_
16	这	_	PN	PN	_	14	xsubj	_	_
17	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 笑声)
(x0 / 来说-01, arg1, x4 / 我)
(x2 / 笑声, mod, x3 / 这)
(x7 / 甘泉, location, x8 / 沙漠)

Input(Some(Graph((来说-01 :arg2 (像-01 :arg0 x2 :arg1 (甘泉 :location 沙漠)) :arg1 我 :arg0 (笑声 :mod 这)),ArrayBuffer(Span(4,5,List(0),来说,来说-01,false), Span(12,13,List(1),甘泉,甘泉,false), Span(9,10,List(2),沙漠,沙漠,false), Span(3,4,List(3),我,我,false), Span(1,2,List(4),笑声,笑声,false), Span(0,1,List(5),这,这,false)),Map(2 -> 沙漠, 5 -> 这, 1 -> 甘泉, 4 -> 笑声, 0 -> 来说-01, 3 -> 我),Map(x2 -> 笑声, x8 -> 沙漠, x7 -> 甘泉, x4 -> 我, x3 -> 这, x0 -> 来说-01))),[Ljava.lang.String;@4975dda1,Annotation([Ljava.lang.String;@e0d1dc4,[Ljava.lang.String;@5463f035,[Ljava.lang.String;@230232b0),Annotation([Ljava.lang.String;@44fd7ba4,[Ljava.lang.String;@22f8adc2,[Ledu.cmu.lti.nlp.amr.Dependency;@69d103f0),Annotation([Ljava.lang.String;@5b742bc8,[Ljava.lang.String;@74fb5b59,[Ljava.lang.String;@130a6eb9),Annotation([Ljava.lang.String;@722531ab,[Ljava.lang.String;@8f57e4c,[Ledu.cmu.lti.nlp.amr.Entity;@26fadd98))
AMR:
(x0 / 来说-01, location, x2 / 笑声)
(x2 / 笑声, mod, x3 / 这)
(x2 / 笑声, poss, x4 / 我)
(x7 / 甘泉, location, x8 / 沙漠)
(x7 / 甘泉, mod, x2 / 笑声)

WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.2.1.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,417 microseconds
Sentence: “ 小家伙 ，

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 (家伙 :mod 小-01)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@66451058,Annotation([Ljava.lang.String;@3db6dd52,[Ljava.lang.String;@1e92c3b6,[Ljava.lang.String;@6ef4cbe1),Annotation([Ljava.lang.String;@207dd1b7,[Ljava.lang.String;@2baac4a7,[Ledu.cmu.lti.nlp.amr.Dependency;@23ad2d17),Annotation([Ljava.lang.String;@6bce4140,[Ljava.lang.String;@25f0c5e7,[Ljava.lang.String;@5882b202),Annotation([Ljava.lang.String;@120df990,[Ljava.lang.String;@b506ed0,[Ledu.cmu.lti.nlp.amr.Entity;@282c4da0))
AMR:


Decoded in 921 microseconds
Sentence: 我 说 ： “ 我 还 想 听 你 笑 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  听 => 听-01
Oracle Span 3:  想 => 想-02
Oracle Span 4:  我 => 我
Oracle Span 5:  笑 => 笑-01
Oracle Span 6:  说 => 说-01
Oracle Span 7:  还 => 还
Spans:
Span 8-9:  你 => 你
Span 7-8:  听 => 听-01
Span 6-7:  想 => 想-02
Span 0-1:  我 => 我
Span 9-10:  笑 => 笑-01
Span 1-2:  说 => 说-01
Span 5-6:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  你 => 你
Oracle Span 7-8:  听 => 听-01
Oracle Span 6-7:  想 => 想-02
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  笑 => 笑-01
Oracle Span 1-2:  说 => 说-01
Oracle Span 5-6:  还 => 还

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	7	punct	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	还	_	AD	AD	_	7	advmod	_	_
7	想	_	VV	VV	_	2	ccomp	_	_
8	听	_	VV	VV	_	7	ccomp	_	_
9	你	_	PN	PN	_	11	nn	_	_
10	笑	_	NN	NN	_	11	nn	_	_
11	…	_	NN	NN	_	8	dobj	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x3 / 想-02)
(x3 / 想-02, arg1, x5 / 听-01)
(x3 / 想-02, manner, x9 / 还)
(x5 / 听-01, arg1, x7 / 笑-01)
(x7 / 笑-01, arg0, x8 / 你)

Input(Some(Graph((说-01 :arg1 (想-02 :manner 还 :arg1 (听-01 :arg1 (笑-01 :arg0 你) :arg0 x2) :arg0 x2) :arg0 我),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(6,7,List(1),想,想-02,false), Span(5,6,List(2),还,还,false), Span(7,8,List(3),听,听-01,false), Span(9,10,List(4),笑,笑-01,false), Span(8,9,List(5),你,你,false), Span(0,1,List(6),我,我,false)),Map(2 -> 还, 5 -> 你, 1 -> 想-02, 4 -> 笑-01, 6 -> 我, 0 -> 说-01, 3 -> 听-01),Map(x2 -> 我, x5 -> 听-01, x8 -> 你, x7 -> 笑-01, x3 -> 想-02, x9 -> 还, x0 -> 说-01))),[Ljava.lang.String;@65f3e805,Annotation([Ljava.lang.String;@18cf5c52,[Ljava.lang.String;@10618775,[Ljava.lang.String;@5aea8994),Annotation([Ljava.lang.String;@20a3e10c,[Ljava.lang.String;@426c0486,[Ledu.cmu.lti.nlp.amr.Dependency;@5e2a6991),Annotation([Ljava.lang.String;@5002fde9,[Ljava.lang.String;@6f96dd64,[Ljava.lang.String;@4d7cac24),Annotation([Ljava.lang.String;@409732fb,[Ljava.lang.String;@73d62b5,[Ledu.cmu.lti.nlp.amr.Entity;@5e99e2cb))
AMR:
(x0 / 说-01, decade, x2 / 我)
(x0 / 说-01, manner, x9 / 还)
(x3 / 想-02, manner, x9 / 还)
(x3 / 想-02, snt11, x5 / 听-01)
(x5 / 听-01, mode, x8 / 你)
(x7 / 笑-01, time, x5 / 听-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 13,838 microseconds
Sentence: 但 他 对 我 说 ： “ 到 今天 夜里 ， 正好 是 一 年 了 。 我 的 星球 将 正好 处于 我 去年 降落 的 那个 地方 的 上空 … ”

Oracle Span 1:  上空 => 上空
Oracle Span 2:  今天 => 今天
Oracle Span 3:  他 => 他
Oracle Span 4:  到 => 到-01
Oracle Span 5:  去年 => 去年
Oracle Span 6:  地方 => 地方
Oracle Span 7:  处于 => 处于-01
Oracle Span 8:  夜里 => 夜里
Oracle Span 9:  将 => 将-01
Oracle Span 10:  年 => 年
Oracle Span 11:  我 => 我
Oracle Span 12:  星球 => 星球
Oracle Span 13:  是 => 是-01
Oracle Span 14:  正好 => 正好
Oracle Span 15:  说 => 说-01
Oracle Span 16:  降落 => 降落-01
Spans:
Span 30-31:  上空 => 上空
Span 8-9:  今天 => 今天
Span 1-2:  他 => 他
Span 7-8:  到 => 到-01
Span 24-25:  去年 => 去年
Span 28-29:  地方 => 地方
Span 22-23:  处于 => 处于-01
Span 9-10:  夜里 => 夜里
Span 20-21:  将 => 将-01
Span 14-15:  年 => 年
Span 3-4:  我 => 我
Span 19-20:  星球 => 星球
Span 12-13:  是 => 是-01
Span 11-12:  正好 => 正好
Span 4-5:  说 => 说-01
Span 25-26:  降落 => 降落-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 30-31:  上空 => 上空
Oracle Span 8-9:  今天 => 今天
Oracle Span 1-2:  他 => 他
Oracle Span 7-8:  到 => 到-01
Oracle Span 24-25:  去年 => 去年
Oracle Span 28-29:  地方 => 地方
Oracle Span 22-23:  处于 => 处于-01
Oracle Span 9-10:  夜里 => 夜里
Oracle Span 20-21:  将 => 将-01
Oracle Span 14-15:  年 => 年
Oracle Span 3-4:  我 => 我
Oracle Span 19-20:  星球 => 星球
Oracle Span 12-13:  是 => 是-01
Oracle Span 11-12:  正好 => 正好
Oracle Span 4-5:  说 => 说-01
Oracle Span 25-26:  降落 => 降落-01

Dependencies:
1	但	_	AD	AD	_	32	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	31	rcmod	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	13	punct	_	_
8	到	_	P	P	_	13	prep	_	_
9	今天	_	NT	NT	_	10	nn	_	_
10	夜里	_	NT	NT	_	8	pobj	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	正好	_	NR	NR	_	13	top	_	_
13	是	_	VC	VC	_	5	ccomp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	年	_	M	M	_	13	attr	_	_
16	了	_	SP	SP	_	13	dep	_	_
17	。	_	PU	PU	_	13	punct	_	_
18	我	_	PN	PN	_	20	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	星球	_	NN	NN	_	23	nsubj	_	_
21	将	_	AD	AD	_	23	advmod	_	_
22	正好	_	AD	AD	_	23	advmod	_	_
23	处于	_	VV	VV	_	13	conj	_	_
24	我	_	PN	PN	_	26	nsubj	_	_
25	去年	_	NT	NT	_	26	tmod	_	_
26	降落	_	VV	VV	_	29	rcmod	_	_
27	的	_	DEC	DEC	_	26	cpm	_	_
28	那个	_	NN	NN	_	29	nn	_	_
29	地方	_	NN	NN	_	23	dobj	_	_
30	的	_	DEC	DEC	_	5	cpm	_	_
31	上空	_	NN	NN	_	32	nsubj	_	_
32	…	_	VA	VA	_	0	root	_	_
33	”	_	PU	PU	_	32	punct	_	_

Oracle:
(x10 / 到-01, arg1, x11 / 夜里)
(x11 / 夜里, time, x12 / 今天)
(x16 / 处于-01, arg0, x17 / 星球)
(x16 / 处于-01, arg1, x22 / 上空)
(x16 / 处于-01, time, x19 / 将-01)
(x2 / 说-01, arg0, x3 / 他)
(x2 / 说-01, arg3, x4 / 我)
(x22 / 上空, poss, x23 / 地方)
(x25 / 降落-01, arg1, x23 / 地方)
(x25 / 降落-01, time, x27 / 去年)
(x9 / 是-01, arg0, x10 / 到-01)
(x9 / 是-01, arg1, x13 / 年)
(x9 / 是-01, manner, x15 / 正好)

Input(Some(Graph((contrast :arg2 (说-01 :arg1 (multi-sentence :snt1 (是-01 :manner 正好 :arg1 (年 :quant 1) :arg0 (到-01 :arg1 (夜里 :time 今天))) :snt2 (处于-01 :arg1 (上空 :poss (地方 :arg1-of (降落-01 :time 去年 :arg2 x4) :mod 那)) :manner x15 :time 将-01 :arg0 (星球 :poss x4))) :arg3 我 :arg0 他)),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(12,13,List(1),是,是-01,false), Span(11,12,List(2),正好,正好,false), Span(14,15,List(3),年,年,false), Span(7,8,List(4),到,到-01,false), Span(9,10,List(5),夜里,夜里,false), Span(8,9,List(6),今天,今天,false), Span(22,23,List(7),处于,处于-01,false), Span(30,31,List(8),上空,上空,false), Span(28,29,List(9),地方,地方,false), Span(25,26,List(10),降落,降落-01,false), Span(24,25,List(11),去年,去年,false), Span(20,21,List(12),将,将-01,false), Span(19,20,List(13),星球,星球,false), Span(3,4,List(14),我,我,false), Span(1,2,List(15),他,他,false)),Map(2 -> 正好, 5 -> 夜里, 12 -> 将-01, 15 -> 他, 8 -> 上空, 7 -> 处于-01, 1 -> 是-01, 4 -> 到-01, 11 -> 去年, 14 -> 我, 6 -> 今天, 9 -> 地方, 0 -> 说-01, 10 -> 降落-01, 3 -> 年, 13 -> 星球),Map(x22 -> 上空, x16 -> 处于-01, x25 -> 降落-01, x10 -> 到-01, x19 -> 将-01, x2 -> 说-01, x13 -> 年, x12 -> 今天, x27 -> 去年, x15 -> 正好, x4 -> 我, x23 -> 地方, x3 -> 他, x11 -> 夜里, x9 -> 是-01, x17 -> 星球))),[Ljava.lang.String;@76ac68b0,Annotation([Ljava.lang.String;@f559c74,[Ljava.lang.String;@63917fe1,[Ljava.lang.String;@720f56e2),Annotation([Ljava.lang.String;@677349fb,[Ljava.lang.String;@4466cf5d,[Ledu.cmu.lti.nlp.amr.Dependency;@2c60ce47),Annotation([Ljava.lang.String;@2450256f,[Ljava.lang.String;@59918c8f,[Ljava.lang.String;@2b7facc7),Annotation([Ljava.lang.String;@1c74d19,[Ljava.lang.String;@24197b13,[Ledu.cmu.lti.nlp.amr.Entity;@71b97eeb))
AMR:
(x11 / 夜里, time, x10 / 到-01)
(x11 / 夜里, time, x12 / 今天)
(x16 / 处于-01, time, x13 / 年)
(x16 / 处于-01, time, x19 / 将-01)
(x17 / 星球, mod, x19 / 将-01)
(x2 / 说-01, poss, x4 / 我)
(x2 / 说-01, prep-on-behalf, x10 / 到-01)
(x2 / 说-01, prep-on-behalf, x3 / 他)
(x22 / 上空, poss, x23 / 地方)
(x25 / 降落-01, prep-on-behalf, x16 / 处于-01)
(x25 / 降落-01, snt3, x23 / 地方)
(x25 / 降落-01, time, x27 / 去年)
(x9 / 是-01, manner, x15 / 正好)
(x9 / 是-01, prep-on-behalf, x13 / 年)
(x9 / 是-01, time, x11 / 夜里)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.2
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.3
WARNING: makeIds can't find span Id: 0.0.2.1.3.0
WARNING: makeIds can't find span Id: 0.0.2.1.3.0.1
WARNING: makeIds can't find span Id: 0.0.2.1.3.0.1.1
WARNING: makeIds can't find span Id: 0.0.2.1.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 76,172 microseconds
Sentence: “ 小家伙 ，

Spans:

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph((say :arg1 (家伙 :mod 小-01)),ArrayBuffer(),Map(),Map())),[Ljava.lang.String;@2776fd8f,Annotation([Ljava.lang.String;@1c62c3fd,[Ljava.lang.String;@734ce281,[Ljava.lang.String;@49b89425),Annotation([Ljava.lang.String;@59328218,[Ljava.lang.String;@5345dfe8,[Ledu.cmu.lti.nlp.amr.Dependency;@478967eb),Annotation([Ljava.lang.String;@4a1dda83,[Ljava.lang.String;@7f2b39a,[Ljava.lang.String;@7a358613),Annotation([Ljava.lang.String;@760f1081,[Ljava.lang.String;@52621501,[Ledu.cmu.lti.nlp.amr.Entity;@401e02b4))
AMR:


Decoded in 1,194 microseconds
Sentence: 这 蛇 的 事 ， 约会 的 事 ， 还 有 星星 ， 这 全 是 一 场 噩梦 吧 ？ ”

Oracle Span 1:  事 => 事
Oracle Span 2:  事 => 事
Oracle Span 3:  全 => 全
Oracle Span 4:  噩梦 => 噩梦
Oracle Span 5:  星星 => 星星
Oracle Span 6:  约会 => 约会-01
Oracle Span 7:  蛇 => 蛇
Spans:
Span 3-4:  事 => 事
Span 7-8:  事 => 事
Span 14-15:  全 => 全
Span 18-19:  噩梦 => 噩梦
Span 11-12:  星星 => 星星
Span 5-6:  约会 => 约会-01
Span 1-2:  蛇 => 蛇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  事 => 事
Oracle Span 7-8:  事 => 事
Oracle Span 14-15:  全 => 全
Oracle Span 18-19:  噩梦 => 噩梦
Oracle Span 11-12:  星星 => 星星
Oracle Span 5-6:  约会 => 约会-01
Oracle Span 1-2:  蛇 => 蛇

Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	蛇	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	事	_	NN	NN	_	11	nsubj	_	_
5	,	_	PU	PU	_	11	punct	_	_
6	约会	_	VA	VA	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	事	_	NN	NN	_	11	nsubj	_	_
9	,	_	PU	PU	_	11	punct	_	_
10	还	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	0	root	_	_
12	星星	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	这	_	PN	PN	_	16	nsubj	_	_
15	全	_	AD	AD	_	16	advmod	_	_
16	是	_	VC	VC	_	11	dep	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	场	_	M	M	_	19	clf	_	_
19	噩梦	_	NN	NN	_	16	attr	_	_
20	吧	_	SP	SP	_	16	dep	_	_
21	？	_	PU	PU	_	11	punct	_	_
22	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x15 / 噩梦, manner, x17 / 全)
(x19 / 事, topic, x20 / 蛇)
(x21 / 事, topic, x22 / 约会-01)

Input(Some(Graph((say :arg1 (噩梦 :mode interrogative :domain (and :op (事 :topic 蛇) :op (事 :topic 约会-01) :op 星星) :manner 全 :quant 1)),ArrayBuffer(Span(18,19,List(0),噩梦,噩梦,false), Span(3,4,List(1),事,事,false), Span(1,2,List(2),蛇,蛇,false), Span(7,8,List(3),事,事,false), Span(5,6,List(4),约会,约会-01,false), Span(11,12,List(5),星星,星星,false), Span(14,15,List(6),全,全,false)),Map(2 -> 蛇, 5 -> 星星, 1 -> 事, 4 -> 约会-01, 6 -> 全, 0 -> 噩梦, 3 -> 事),Map(x22 -> 约会-01, x19 -> 事, x21 -> 事, x15 -> 噩梦, x23 -> 星星, x20 -> 蛇, x17 -> 全))),[Ljava.lang.String;@164d01ba,Annotation([Ljava.lang.String;@18c880ea,[Ljava.lang.String;@5ac044ef,[Ljava.lang.String;@6afbe6a1),Annotation([Ljava.lang.String;@14457a95,[Ljava.lang.String;@48567727,[Ledu.cmu.lti.nlp.amr.Dependency;@10e9a5fe),Annotation([Ljava.lang.String;@259287ac,[Ljava.lang.String;@1abcd059,[Ljava.lang.String;@61a87366),Annotation([Ljava.lang.String;@3c33fcf8,[Ljava.lang.String;@dada335,[Ledu.cmu.lti.nlp.amr.Entity;@716f94c1))
AMR:
(x15 / 噩梦, manner, x17 / 全)
(x19 / 事, topic, x20 / 蛇)
(x21 / 事, mod, x23 / 星星)
(x21 / 事, topic, x22 / 约会-01)
(x22 / 约会-01, degree, x19 / 事)
(x23 / 星星, manner, x17 / 全)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 18,881 microseconds
Sentence: 但 他 并不 回答 我 的 问题 。

Oracle Span 1:  他 => 他
Oracle Span 2:  回答 => 回答-01
Oracle Span 3:  我 => 我
Oracle Span 4:  问题 => 问题
Spans:
Span 1-2:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	但	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	并不	_	VV	VV	_	0	root	_	_
4	回答	_	VV	VV	_	3	ccomp	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 他)
(x2 / 回答-01, arg1, x4 / 问题)
(x4 / 问题, poss, x5 / 我)

Input(Some(Graph((contrast :arg2 (回答-01 :polarity - :arg1 (问题 :poss 我) :arg0 他)),ArrayBuffer(Span(3,4,List(0),回答,回答-01,false), Span(6,7,List(1),问题,问题,false), Span(4,5,List(2),我,我,false), Span(1,2,List(3),他,他,false)),Map(2 -> 我, 1 -> 问题, 0 -> 回答-01, 3 -> 他),Map(x2 -> 回答-01, x5 -> 我, x4 -> 问题, x3 -> 他))),[Ljava.lang.String;@53feeac9,Annotation([Ljava.lang.String;@70091872,[Ljava.lang.String;@105db94d,[Ljava.lang.String;@1d99ee1b),Annotation([Ljava.lang.String;@3915e7c3,[Ljava.lang.String;@167a21b,[Ledu.cmu.lti.nlp.amr.Dependency;@7c0df4ab),Annotation([Ljava.lang.String;@2e362407,[Ljava.lang.String;@388be5fd,[Ljava.lang.String;@440ef8d),Annotation([Ljava.lang.String;@17fbfb02,[Ljava.lang.String;@8f2e3e6,[Ledu.cmu.lti.nlp.amr.Entity;@6f315b08))
AMR:
(x2 / 回答-01, ARG0, x4 / 问题)
(x2 / 回答-01, prep-through, x3 / 他)
(x4 / 问题, poss, x5 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,696 microseconds
Sentence: 他 对 我 说 ： “ 重要 的 事 ， 是 看 不 见 的 … ”

Oracle Span 1:  事 => 事
Oracle Span 2:  他 => 他
Oracle Span 3:  我 => 我
Oracle Span 4:  说 => 说-01
Oracle Span 5:  重要 => 重要-01
Spans:
Span 8-9:  事 => 事
Span 0-1:  他 => 他
Span 2-3:  我 => 我
Span 3-4:  说 => 说-01
Span 6-7:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  事 => 事
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  说 => 说-01
Oracle Span 6-7:  重要 => 重要-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	12	punct	_	_
7	重要	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	事	_	NN	NN	_	12	dep	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	是	_	VC	VC	_	12	cop	_	_
12	看	_	VV	VV	_	4	ccomp	_	_
13	不	_	AD	AD	_	14	neg	_	_
14	见	_	VV	VV	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	…	_	NN	NN	_	12	dobj	_	_
17	”	_	PU	PU	_	12	punct	_	_
18	是	_	VC	VC	_	12	conj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg3, x7 / 我)
(x5 / 事, mod, x6 / 重要-01)

Input(Some(Graph((说-01 :arg3 我 :arg1 (看见-01 :polarity - :arg1 (事 :mod 重要-01)) :arg0 他),ArrayBuffer(Span(3,4,List(0),说,说-01,false), Span(2,3,List(1),我,我,false), Span(8,9,List(2),事,事,false), Span(6,7,List(3),重要,重要-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 事, 1 -> 我, 4 -> 他, 0 -> 说-01, 3 -> 重要-01),Map(x2 -> 他, x5 -> 事, x7 -> 我, x6 -> 重要-01, x0 -> 说-01))),[Ljava.lang.String;@6c8efde4,Annotation([Ljava.lang.String;@24e5389c,[Ljava.lang.String;@3b170235,[Ljava.lang.String;@5e9bf744),Annotation([Ljava.lang.String;@45e140ae,[Ljava.lang.String;@48cdb156,[Ledu.cmu.lti.nlp.amr.Dependency;@4b4814d0),Annotation([Ljava.lang.String;@4ae8fb2a,[Ljava.lang.String;@54326e9,[Ljava.lang.String;@20216016),Annotation([Ljava.lang.String;@2b441e56,[Ljava.lang.String;@267891bf,[Ledu.cmu.lti.nlp.amr.Entity;@3a109ff7))
AMR:
(x0 / 说-01, manner, x7 / 我)
(x0 / 说-01, quant, x2 / 他)
(x0 / 说-01, subevent, x6 / 重要-01)
(x5 / 事, mod, x6 / 重要-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,072 microseconds
Sentence: “ 当然 … ”

Oracle Span 1:  当然 => 当然
Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 当然),ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(x4 -> 当然))),[Ljava.lang.String;@111a7973,Annotation([Ljava.lang.String;@1a2773a8,[Ljava.lang.String;@78b0ec3a,[Ljava.lang.String;@46612bfc),Annotation([Ljava.lang.String;@4f213a2,[Ljava.lang.String;@25699aa7,[Ledu.cmu.lti.nlp.amr.Dependency;@5a47730c),Annotation([Ljava.lang.String;@15369d73,[Ljava.lang.String;@1cde374,[Ljava.lang.String;@6818fd48),Annotation([Ljava.lang.String;@9263c54,[Ljava.lang.String;@28daf506,[Ledu.cmu.lti.nlp.amr.Entity;@4662752a))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,160 microseconds
Sentence: “ 这 就 象 花 一样 。

Oracle Span 1:  就 => 就
Oracle Span 2:  花 => 花
Oracle Span 3:  这 => 这
Spans:
Span 2-3:  就 => 就
Span 4-5:  花 => 花
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  花 => 花
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	nsubj	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	象	_	P	P	_	6	prep	_	_
5	花	_	NN	NN	_	4	pobj	_	_
6	一样	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (像-01 :arg0 这 :manner 就 :arg1 花)),ArrayBuffer(Span(1,2,List(0),这,这,false), Span(2,3,List(1),就,就,false), Span(4,5,List(2),花,花,false)),Map(2 -> 花, 1 -> 就, 0 -> 这),Map(x10 -> 就, x11 -> 花, x9 -> 这))),[Ljava.lang.String;@693f2213,Annotation([Ljava.lang.String;@514377fc,[Ljava.lang.String;@2e4eda17,[Ljava.lang.String;@7b5021d1),Annotation([Ljava.lang.String;@6befbb12,[Ljava.lang.String;@21d9cd04,[Ledu.cmu.lti.nlp.amr.Dependency;@799f354a),Annotation([Ljava.lang.String;@33bdd01,[Ljava.lang.String;@159ac15f,[Ljava.lang.String;@7ac48f05),Annotation([Ljava.lang.String;@7af1d072,[Ljava.lang.String;@27ffd9f8,[Ledu.cmu.lti.nlp.amr.Entity;@642c6461))
AMR:
(x11 / 花, location, x10 / 就)
(x11 / 花, mod, x9 / 这)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
Decoded in 4,515 microseconds
Sentence: 如果 你 爱上 了 一 朵 生长 在 一 颗 星星 上 的 花 ， 那么 夜间 ， 你 看 着 天空 就 感到 甜蜜 愉快 。

Oracle Span 1:  你 => 你
Oracle Span 2:  夜间 => 夜间
Oracle Span 3:  天空 => 天空
Oracle Span 4:  就 => 就
Oracle Span 5:  愉快 => 愉快-01
Oracle Span 6:  感到 => 感到-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  爱上 => 爱上-01
Oracle Span 9:  甜蜜 => 甜蜜-01
Oracle Span 10:  生长 => 生长-01
Oracle Span 11:  看 => 看-02
Oracle Span 12:  花 => 花
Spans:
Span 1-2:  你 => 你
Span 16-17:  夜间 => 夜间
Span 21-22:  天空 => 天空
Span 22-23:  就 => 就
Span 25-26:  愉快 => 愉快-01
Span 23-24:  感到 => 感到-01
Span 10-11:  星星 => 星星
Span 2-3:  爱上 => 爱上-01
Span 24-25:  甜蜜 => 甜蜜-01
Span 6-7:  生长 => 生长-01
Span 19-20:  看 => 看-02
Span 13-14:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 16-17:  夜间 => 夜间
Oracle Span 21-22:  天空 => 天空
Oracle Span 22-23:  就 => 就
Oracle Span 25-26:  愉快 => 愉快-01
Oracle Span 23-24:  感到 => 感到-01
Oracle Span 10-11:  星星 => 星星
Oracle Span 2-3:  爱上 => 爱上-01
Oracle Span 24-25:  甜蜜 => 甜蜜-01
Oracle Span 6-7:  生长 => 生长-01
Oracle Span 19-20:  看 => 看-02
Oracle Span 13-14:  花 => 花

Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	爱上	_	VV	VV	_	20	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	7	clf	_	_
7	生长	_	NN	NN	_	14	nn	_	_
8	在	_	P	P	_	14	assmod	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	颗	_	M	M	_	11	clf	_	_
11	星星	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	8	plmod	_	_
13	的	_	DEG	DEG	_	8	assm	_	_
14	花	_	NN	NN	_	3	dobj	_	_
15	,	_	PU	PU	_	20	punct	_	_
16	那么	_	AD	AD	_	20	advmod	_	_
17	夜间	_	NN	NN	_	20	nsubj	_	_
18	,	_	PU	PU	_	20	punct	_	_
19	你	_	PN	PN	_	20	nsubj	_	_
20	看	_	VV	VV	_	0	root	_	_
21	着	_	AS	AS	_	20	asp	_	_
22	天空	_	NN	NN	_	20	dobj	_	_
23	就	_	AD	AD	_	24	advmod	_	_
24	感到	_	VV	VV	_	20	conj	_	_
25	甜蜜	_	NN	NN	_	26	nn	_	_
26	愉快	_	NN	NN	_	24	dobj	_	_
27	。	_	PU	PU	_	20	punct	_	_

Oracle:
(x14 / 感到-01, manner, x23 / 就)
(x14 / 感到-01, time, x20 / 看-02)
(x20 / 看-02, arg1, x22 / 天空)
(x20 / 看-02, time, x24 / 夜间)
(x3 / 爱上-01, arg0, x4 / 你)
(x3 / 爱上-01, arg1, x5 / 花)
(x8 / 生长-01, arg0, x5 / 花)
(x8 / 生长-01, location, x9 / 星星)

Input(Some(Graph((condition :arg1 (爱上-01 :arg1 (花 :arg0-of (生长-01 :location (星星 :quant 1)) :quant 1) :arg0 你) :arg2 (感到-01 :manner 就 :time (看-02 :time 夜间 :arg1 天空 :arg0 x4) :arg1 (and :op 甜蜜-01 :op 愉快-01) :arg0 x4)),ArrayBuffer(Span(2,3,List(0),爱上,爱上-01,false), Span(13,14,List(1),花,花,false), Span(6,7,List(2),生长,生长-01,false), Span(10,11,List(3),星星,星星,false), Span(1,2,List(4),你,你,false), Span(23,24,List(5),感到,感到-01,false), Span(22,23,List(6),就,就,false), Span(19,20,List(7),看,看-02,false), Span(16,17,List(8),夜间,夜间,false), Span(21,22,List(9),天空,天空,false), Span(24,25,List(10),甜蜜,甜蜜-01,false), Span(25,26,List(11),愉快,愉快-01,false)),Map(2 -> 生长-01, 5 -> 感到-01, 8 -> 夜间, 7 -> 看-02, 1 -> 花, 4 -> 你, 11 -> 愉快-01, 6 -> 就, 9 -> 天空, 0 -> 爱上-01, 10 -> 甜蜜-01, 3 -> 星星),Map(x22 -> 天空, x19 -> 愉快-01, x5 -> 花, x8 -> 生长-01, x24 -> 夜间, x18 -> 甜蜜-01, x4 -> 你, x23 -> 就, x3 -> 爱上-01, x20 -> 看-02, x14 -> 感到-01, x9 -> 星星))),[Ljava.lang.String;@3ace6346,Annotation([Ljava.lang.String;@4e48462d,[Ljava.lang.String;@17216605,[Ljava.lang.String;@10a907ec),Annotation([Ljava.lang.String;@59b492ec,[Ljava.lang.String;@55c1ced9,[Ledu.cmu.lti.nlp.amr.Dependency;@49cc9b2a),Annotation([Ljava.lang.String;@11826398,[Ljava.lang.String;@6c5ca0b6,[Ljava.lang.String;@37b01ce2),Annotation([Ljava.lang.String;@1a88c4f5,[Ljava.lang.String;@1894fa9f,[Ledu.cmu.lti.nlp.amr.Entity;@1144a02b))
AMR:
(x14 / 感到-01, example, x18 / 甜蜜-01)
(x14 / 感到-01, manner, x23 / 就)
(x14 / 感到-01, time, x20 / 看-02)
(x19 / 愉快-01, destination, x18 / 甜蜜-01)
(x20 / 看-02, degree, x3 / 爱上-01)
(x20 / 看-02, mod, x22 / 天空)
(x20 / 看-02, time, x24 / 夜间)
(x3 / 爱上-01, compared-to, x4 / 你)
(x3 / 爱上-01, mod, x5 / 花)
(x8 / 生长-01, location, x9 / 星星)
(x8 / 生长-01, unit, x5 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
Decoded in 53,574 microseconds
Sentence: 所有 的 星星 上 都 好象 开 着 花 。 ”

Oracle Span 1:  开 => 开-01
Oracle Span 2:  所有 => 所有
Oracle Span 3:  星星 => 星星
Oracle Span 4:  花 => 花
Oracle Span 5:  都 => 都
Spans:
Span 6-7:  开 => 开-01
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 8-9:  花 => 花
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  开 => 开-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 2-3:  星星 => 星星
Oracle Span 8-9:  花 => 花
Oracle Span 4-5:  都 => 都

Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	星星	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	6	loc	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	好象	_	VV	VV	_	0	root	_	_
7	开	_	VV	VV	_	6	ccomp	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	花	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 开-01, arg1, x11 / 花)
(x10 / 开-01, location, x13 / 星星)
(x13 / 星星, mod, x14 / 所有)

Input(Some(Graph((say :arg1 (像-01 :arg1 (开-01 :location (星星 :mod 所有) :arg1 花) :manner 都)),ArrayBuffer(Span(6,7,List(0),开,开-01,false), Span(2,3,List(1),星星,星星,false), Span(0,1,List(2),所有,所有,false), Span(8,9,List(3),花,花,false), Span(4,5,List(4),都,都,false)),Map(2 -> 所有, 1 -> 星星, 4 -> 都, 0 -> 开-01, 3 -> 花),Map(x10 -> 开-01, x13 -> 星星, x12 -> 都, x11 -> 花, x14 -> 所有))),[Ljava.lang.String;@26a4f9ed,Annotation([Ljava.lang.String;@7a572ea0,[Ljava.lang.String;@45287377,[Ljava.lang.String;@7159d601),Annotation([Ljava.lang.String;@70b33256,[Ljava.lang.String;@33d230ce,[Ledu.cmu.lti.nlp.amr.Dependency;@35e74e08),Annotation([Ljava.lang.String;@a316f6b,[Ljava.lang.String;@63f9ddf9,[Ljava.lang.String;@410fc508),Annotation([Ljava.lang.String;@4e17442f,[Ljava.lang.String;@4f5c30b1,[Ledu.cmu.lti.nlp.amr.Entity;@62e73ab6))
AMR:
(x10 / 开-01, degree, x12 / 都)
(x10 / 开-01, location, x13 / 星星)
(x10 / 开-01, prep-into, x11 / 花)
(x13 / 星星, mod, x14 / 所有)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 8,000 microseconds
Sentence: “ 当然 … ”

Oracle Span 1:  当然 => 当然
Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 当然),ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(x4 -> 当然))),[Ljava.lang.String;@5d7f8467,Annotation([Ljava.lang.String;@29bd85db,[Ljava.lang.String;@7caf1e5,[Ljava.lang.String;@5c234920),Annotation([Ljava.lang.String;@7ddeb27f,[Ljava.lang.String;@38087342,[Ledu.cmu.lti.nlp.amr.Dependency;@681de87f),Annotation([Ljava.lang.String;@2eb1c615,[Ljava.lang.String;@2674d4f6,[Ljava.lang.String;@5d9d2119),Annotation([Ljava.lang.String;@5a4464c5,[Ljava.lang.String;@7ae590f6,[Ledu.cmu.lti.nlp.amr.Entity;@7ab63838))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,103 microseconds
Sentence: “ 这 也 就 象 水 一样 ，

Oracle Span 1:  也 => 也
Oracle Span 2:  就 => 就
Oracle Span 3:  水 => 水
Oracle Span 4:  这 => 这
Spans:
Span 2-3:  也 => 也
Span 3-4:  就 => 就
Span 5-6:  水 => 水
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  也 => 也
Oracle Span 3-4:  就 => 就
Oracle Span 5-6:  水 => 水
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	象	_	VA	VA	_	0	root	_	_
6	水	_	NN	NN	_	7	dep	_	_
7	一样	_	VA	VA	_	5	conj	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (像-01 :arg0 这 :arg1 水 :manner 也 :manner 就)),ArrayBuffer(Span(1,2,List(0),这,这,false), Span(5,6,List(1),水,水,false), Span(2,3,List(2),也,也,false), Span(3,4,List(3),就,就,false)),Map(2 -> 也, 1 -> 水, 0 -> 这, 3 -> 就),Map(x10 -> 这, x13 -> 就, x12 -> 也, x11 -> 水))),[Ljava.lang.String;@4e974b9e,Annotation([Ljava.lang.String;@370c7cc5,[Ljava.lang.String;@61b838f2,[Ljava.lang.String;@2a04ab05),Annotation([Ljava.lang.String;@5ebbde60,[Ljava.lang.String;@a056b26,[Ledu.cmu.lti.nlp.amr.Dependency;@2a5abd3c),Annotation([Ljava.lang.String;@250967f1,[Ljava.lang.String;@25c1f5ee,[Ljava.lang.String;@4bce62b),Annotation([Ljava.lang.String;@7bf018dd,[Ljava.lang.String;@15a8cebd,[Ledu.cmu.lti.nlp.amr.Entity;@3f6c2763))
AMR:
(x11 / 水, location, x13 / 就)
(x11 / 水, mod, x10 / 这)
(x12 / 也, domain, x10 / 这)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.3
Decoded in 4,976 microseconds
Sentence: 由于 那 辘轳 和 绳子 的 缘故 ， 你 给 我 喝 的 井水 好象 音乐 一样 …

Oracle Span 1:  井水 => 井水
Oracle Span 2:  你 => 你
Oracle Span 3:  喝 => 喝-01
Oracle Span 4:  我 => 我
Oracle Span 5:  给 => 给-01
Oracle Span 6:  绳子 => 绳子
Oracle Span 7:  辘轳 => 辘轳
Oracle Span 8:  那 => 那
Oracle Span 9:  音乐 => 音乐
Spans:
Span 13-14:  井水 => 井水
Span 8-9:  你 => 你
Span 11-12:  喝 => 喝-01
Span 10-11:  我 => 我
Span 9-10:  给 => 给-01
Span 4-5:  绳子 => 绳子
Span 2-3:  辘轳 => 辘轳
Span 1-2:  那 => 那
Span 15-16:  音乐 => 音乐

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 13-14:  井水 => 井水
Oracle Span 8-9:  你 => 你
Oracle Span 11-12:  喝 => 喝-01
Oracle Span 10-11:  我 => 我
Oracle Span 9-10:  给 => 给-01
Oracle Span 4-5:  绳子 => 绳子
Oracle Span 2-3:  辘轳 => 辘轳
Oracle Span 1-2:  那 => 那
Oracle Span 15-16:  音乐 => 音乐

Dependencies:
1	由于	_	P	P	_	15	prep	_	_
2	那	_	DT	DT	_	5	det	_	_
3	辘轳	_	NN	NN	_	5	conj	_	_
4	和	_	CC	CC	_	5	cc	_	_
5	绳子	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	缘故	_	NN	NN	_	1	pobj	_	_
8	,	_	PU	PU	_	15	punct	_	_
9	你	_	PN	PN	_	15	nsubj	_	_
10	给	_	P	P	_	12	prep	_	_
11	我	_	PN	PN	_	10	pobj	_	_
12	喝	_	VV	VV	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	井水	_	NN	NN	_	15	nsubj	_	_
15	好象	_	VV	VV	_	0	root	_	_
16	音乐	_	NN	NN	_	15	dobj	_	_
17	一样	_	CD	CD	_	18	nummod	_	_
18	…	_	M	M	_	15	range	_	_

Oracle:
(x20 / 辘轳, mod, x21 / 那)
(x26 / 喝-01, arg0, x27 / 我)
(x26 / 喝-01, arg1, x24 / 井水)
(x29 / 给-01, arg0, x30 / 你)
(x29 / 给-01, arg2, x27 / 我)

Input(Some(Graph((say :arg1 (causation :arg1 (and :op (辘轳 :mod 那) :op 绳子) :arg2 (像-01 :arg0 (井水 :arg1-of (喝-01 :arg0 (我 :arg2-of (给-01 :arg0 你)))) :arg1 音乐))),ArrayBuffer(Span(2,3,List(0),辘轳,辘轳,false), Span(1,2,List(1),那,那,false), Span(4,5,List(2),绳子,绳子,false), Span(13,14,List(3),井水,井水,false), Span(11,12,List(4),喝,喝-01,false), Span(10,11,List(5),我,我,false), Span(9,10,List(6),给,给-01,false), Span(8,9,List(7),你,你,false), Span(15,16,List(8),音乐,音乐,false)),Map(2 -> 绳子, 5 -> 我, 8 -> 音乐, 7 -> 你, 1 -> 那, 4 -> 喝-01, 6 -> 给-01, 0 -> 辘轳, 3 -> 井水),Map(x22 -> 绳子, x25 -> 音乐, x30 -> 你, x27 -> 我, x21 -> 那, x24 -> 井水, x26 -> 喝-01, x29 -> 给-01, x20 -> 辘轳))),[Ljava.lang.String;@5c82031b,Annotation([Ljava.lang.String;@274fdea6,[Ljava.lang.String;@74c121d4,[Ljava.lang.String;@2a484710),Annotation([Ljava.lang.String;@661e1399,[Ljava.lang.String;@3ffd4b12,[Ledu.cmu.lti.nlp.amr.Dependency;@424f02b8),Annotation([Ljava.lang.String;@2ad7bd26,[Ljava.lang.String;@3cc3f13e,[Ljava.lang.String;@69b3886f),Annotation([Ljava.lang.String;@53d30d23,[Ljava.lang.String;@44faa4f2,[Ledu.cmu.lti.nlp.amr.Entity;@6793f752))
AMR:
(x20 / 辘轳, mod, x21 / 那)
(x22 / 绳子, degree, x29 / 给-01)
(x22 / 绳子, mod, x21 / 那)
(x24 / 井水, degree, x25 / 音乐)
(x26 / 喝-01, degree, x24 / 井水)
(x29 / 给-01, degree, x26 / 喝-01)
(x29 / 给-01, degree, x27 / 我)
(x29 / 给-01, prep-along-with, x30 / 你)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 23,662 microseconds
Sentence: 你 记得 吗 ？ … 这 水 非常 好 喝 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  喝 => 喝-01
Oracle Span 3:  好 => 好-01
Oracle Span 4:  水 => 水
Oracle Span 5:  记得 => 记得-01
Oracle Span 6:  这 => 这
Oracle Span 7:  非常 => 非常-01
Spans:
Span 0-1:  你 => 你
Span 9-10:  喝 => 喝-01
Span 8-9:  好 => 好-01
Span 6-7:  水 => 水
Span 1-2:  记得 => 记得-01
Span 5-6:  这 => 这
Span 7-8:  非常 => 非常-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 9-10:  喝 => 喝-01
Oracle Span 8-9:  好 => 好-01
Oracle Span 6-7:  水 => 水
Oracle Span 1-2:  记得 => 记得-01
Oracle Span 5-6:  这 => 这
Oracle Span 7-8:  非常 => 非常-01

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	记得	_	VV	VV	_	0	root	_	_
3	吗	_	JJ	JJ	_	4	amod	_	_
4	？	_	NN	NN	_	2	dobj	_	_
5	…	_	PU	PU	_	10	punct	_	_
6	这	_	DT	DT	_	7	det	_	_
7	水	_	NN	NN	_	10	nn	_	_
8	非常	_	NR	NR	_	10	nn	_	_
9	好	_	JJ	JJ	_	10	amod	_	_
10	喝	_	NN	NN	_	4	prnmod	_	_
11	…	_	PU	PU	_	10	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x20 / 记得-01, arg0, x21 / 你)
(x20 / 记得-01, arg1, x22 / 喝-01)
(x22 / 喝-01, domain, x25 / 水)
(x22 / 喝-01, mod, x23 / 好-01)
(x23 / 好-01, degree, x24 / 非常-01)
(x25 / 水, mod, x26 / 这)

Input(Some(Graph((say :arg1 (记得-01 :mode interrogative :arg1 (喝-01 :domain (水 :mod 这) :mod (好-01 :degree 非常-01)) :arg0 你)),ArrayBuffer(Span(1,2,List(0),记得,记得-01,false), Span(9,10,List(1),喝,喝-01,false), Span(6,7,List(2),水,水,false), Span(5,6,List(3),这,这,false), Span(8,9,List(4),好,好-01,false), Span(7,8,List(5),非常,非常-01,false), Span(0,1,List(6),你,你,false)),Map(2 -> 水, 5 -> 非常-01, 1 -> 喝-01, 4 -> 好-01, 6 -> 你, 0 -> 记得-01, 3 -> 这),Map(x22 -> 喝-01, x25 -> 水, x21 -> 你, x24 -> 非常-01, x23 -> 好-01, x26 -> 这, x20 -> 记得-01))),[Ljava.lang.String;@1216eb3f,Annotation([Ljava.lang.String;@59e7564b,[Ljava.lang.String;@482ba4b1,[Ljava.lang.String;@307af381),Annotation([Ljava.lang.String;@1510b9a2,[Ljava.lang.String;@76a6f045,[Ledu.cmu.lti.nlp.amr.Dependency;@633ddc0c),Annotation([Ljava.lang.String;@4bcdd11,[Ljava.lang.String;@1471b98d,[Ljava.lang.String;@5514579e),Annotation([Ljava.lang.String;@58c42c8c,[Ljava.lang.String;@3af236d0,[Ledu.cmu.lti.nlp.amr.Entity;@23564dd2))
AMR:
(x20 / 记得-01, quant, x21 / 你)
(x22 / 喝-01, domain, x25 / 水)
(x22 / 喝-01, mod, x23 / 好-01)
(x23 / 好-01, degree, x24 / 非常-01)
(x23 / 好-01, domain, x20 / 记得-01)
(x25 / 水, mod, x26 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,566 microseconds
Sentence: “ 当然 … ”

Oracle Span 1:  当然 => 当然
Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 当然),ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(x4 -> 当然))),[Ljava.lang.String;@54895681,Annotation([Ljava.lang.String;@2dd0a0d0,[Ljava.lang.String;@6bf570c,[Ljava.lang.String;@1796b2d4),Annotation([Ljava.lang.String;@935d3f9,[Ljava.lang.String;@214b342f,[Ledu.cmu.lti.nlp.amr.Dependency;@5db0003d),Annotation([Ljava.lang.String;@7f12094d,[Ljava.lang.String;@589fb74d,[Ljava.lang.String;@200d1a3d),Annotation([Ljava.lang.String;@7de147e9,[Ljava.lang.String;@12567179,[Ledu.cmu.lti.nlp.amr.Entity;@37d699a1))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,124 microseconds
Sentence: “ 夜晚 ， 你 抬头 望 着 星星 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  夜晚 => 夜晚
Oracle Span 3:  抬头 => 抬头-01
Oracle Span 4:  星星 => 星星
Oracle Span 5:  望 => 望-01
Spans:
Span 3-4:  你 => 你
Span 1-2:  夜晚 => 夜晚
Span 4-5:  抬头 => 抬头-01
Span 7-8:  星星 => 星星
Span 5-6:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  夜晚 => 夜晚
Oracle Span 4-5:  抬头 => 抬头-01
Oracle Span 7-8:  星星 => 星星
Oracle Span 5-6:  望 => 望-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	夜晚	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	抬头	_	VV	VV	_	6	mmod	_	_
6	望	_	VV	VV	_	2	ccomp	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	星星	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 望-01, arg0, x10 / 你)
(x9 / 望-01, arg1, x11 / 星星)
(x9 / 望-01, manner, x12 / 抬头-01)
(x9 / 望-01, time, x14 / 夜晚)

Input(Some(Graph((say :arg1 (望-01 :time 夜晚 :manner (抬头-01 :arg0 x10) :arg1 星星 :arg0 你)),ArrayBuffer(Span(5,6,List(0),望,望-01,false), Span(1,2,List(1),夜晚,夜晚,false), Span(4,5,List(2),抬头,抬头-01,false), Span(7,8,List(3),星星,星星,false), Span(3,4,List(4),你,你,false)),Map(2 -> 抬头-01, 1 -> 夜晚, 4 -> 你, 0 -> 望-01, 3 -> 星星),Map(x10 -> 你, x12 -> 抬头-01, x11 -> 星星, x14 -> 夜晚, x9 -> 望-01))),[Ljava.lang.String;@7f42b194,Annotation([Ljava.lang.String;@8eb6f9a,[Ljava.lang.String;@29170a47,[Ljava.lang.String;@2a8f8555),Annotation([Ljava.lang.String;@402b4f81,[Ljava.lang.String;@13ef7fa1,[Ledu.cmu.lti.nlp.amr.Dependency;@23b1aa9),Annotation([Ljava.lang.String;@54489296,[Ljava.lang.String;@4e8598d9,[Ljava.lang.String;@267ff4df),Annotation([Ljava.lang.String;@7c4b5ceb,[Ljava.lang.String;@6c07add6,[Ledu.cmu.lti.nlp.amr.Entity;@e26a3df))
AMR:
(x10 / 你, location, x12 / 抬头-01)
(x9 / 望-01, location, x11 / 星星)
(x9 / 望-01, manner, x12 / 抬头-01)
(x9 / 望-01, time, x14 / 夜晚)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,158 microseconds
Sentence: 我 的 那 颗 太 小 了 ， 我 无法 给 你 指出 我 的 那 颗 星星 是 在 哪里 。

Oracle Span 1:  你 => 你
Oracle Span 2:  太 => 太
Oracle Span 3:  小 => 小-01
Oracle Span 4:  我 => 我
Oracle Span 5:  指出 => 指出-01
Oracle Span 6:  星星 => 星星
Oracle Span 7:  给 => 给-02
Oracle Span 8:  那 => 那
Oracle Span 9:  那 => 那
Spans:
Span 11-12:  你 => 你
Span 4-5:  太 => 太
Span 5-6:  小 => 小-01
Span 0-1:  我 => 我
Span 12-13:  指出 => 指出-01
Span 17-18:  星星 => 星星
Span 10-11:  给 => 给-02
Span 2-3:  那 => 那
Span 15-16:  那 => 那

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  你 => 你
Oracle Span 4-5:  太 => 太
Oracle Span 5-6:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  指出 => 指出-01
Oracle Span 17-18:  星星 => 星星
Oracle Span 10-11:  给 => 给-02
Oracle Span 2-3:  那 => 那
Oracle Span 15-16:  那 => 那

Dependencies:
1	我	_	PN	PN	_	18	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	18	det	_	_
4	颗	_	M	M	_	3	clf	_	_
5	太	_	AD	AD	_	6	advmod	_	_
6	小	_	VA	VA	_	18	rcmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	我	_	PN	PN	_	13	nsubj	_	_
10	无法	_	AD	AD	_	13	advmod	_	_
11	给	_	P	P	_	13	prep	_	_
12	你	_	PN	PN	_	11	pobj	_	_
13	指出	_	VV	VV	_	6	dep	_	_
14	我	_	PN	PN	_	13	dobj	_	_
15	的	_	DEC	DEC	_	6	cpm	_	_
16	那	_	DT	DT	_	18	det	_	_
17	颗	_	M	M	_	16	clf	_	_
18	星星	_	NN	NN	_	19	top	_	_
19	是	_	VC	VC	_	0	root	_	_
20	在	_	P	P	_	19	prep	_	_
21	哪里	_	NR	NR	_	20	pobj	_	_
22	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x10 / 指出-01, arg1, x12 / 星星)
(x12 / 星星, mod, x13 / 那)
(x2 / 小-01, arg0, x4 / 那)
(x2 / 小-01, degree, x3 / 太)
(x4 / 那, poss, x6 / 我)
(x7 / 给-02, arg1, x9 / 你)
(x7 / 给-02, arg2, x10 / 指出-01)

Input(Some(Graph((causation :arg1 (小-01 :arg0 (那 :poss 我) :degree 太) :arg2 (给-02 :arg2 (指出-01 :polarity - :arg1 (星星 :location amr-unknown :poss x6 :mod 那) :arg0 x6) :arg1 你 :arg0 x6)),ArrayBuffer(Span(5,6,List(0),小,小-01,false), Span(2,3,List(1),那,那,false), Span(0,1,List(2),我,我,false), Span(4,5,List(3),太,太,false), Span(10,11,List(4),给,给-02,false), Span(12,13,List(5),指出,指出-01,false), Span(17,18,List(6),星星,星星,false), Span(15,16,List(7),那,那,false), Span(11,12,List(8),你,你,false)),Map(2 -> 我, 5 -> 指出-01, 8 -> 你, 7 -> 那, 1 -> 那, 4 -> 给-02, 6 -> 星星, 0 -> 小-01, 3 -> 太),Map(x10 -> 指出-01, x2 -> 小-01, x13 -> 那, x12 -> 星星, x7 -> 给-02, x4 -> 那, x3 -> 太, x6 -> 我, x9 -> 你))),[Ljava.lang.String;@57a667c8,Annotation([Ljava.lang.String;@712cd5d3,[Ljava.lang.String;@2094bf3d,[Ljava.lang.String;@1b17d8ab),Annotation([Ljava.lang.String;@7f6b7426,[Ljava.lang.String;@687eb455,[Ledu.cmu.lti.nlp.amr.Dependency;@6d969330),Annotation([Ljava.lang.String;@4861cca9,[Ljava.lang.String;@6c8f4bc7,[Ljava.lang.String;@714e861f),Annotation([Ljava.lang.String;@28989415,[Ljava.lang.String;@6eda012b,[Ledu.cmu.lti.nlp.amr.Entity;@781dbe44))
AMR:
(x10 / 指出-01, ARG3, x12 / 星星)
(x12 / 星星, mod, x13 / 那)
(x2 / 小-01, ARG3, x4 / 那)
(x2 / 小-01, degree, x3 / 太)
(x3 / 太, prep-on-behalf, x10 / 指出-01)
(x4 / 那, poss, x6 / 我)
(x7 / 给-02, ARG0, x9 / 你)
(x7 / 给-02, degree, x10 / 指出-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.1
WARNING: makeIds can't find span Id: 0.1.2.1.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 36,377 microseconds
Sentence: 这样 倒 更 好 。

Oracle Span 1:  倒 => 倒
Oracle Span 2:  好 => 好-01
Oracle Span 3:  更 => 更-01
Oracle Span 4:  这样 => 这样
Spans:
Span 1-2:  倒 => 倒
Span 3-4:  好 => 好-01
Span 2-3:  更 => 更-01
Span 0-1:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  倒 => 倒
Oracle Span 3-4:  好 => 好-01
Oracle Span 2-3:  更 => 更-01
Oracle Span 0-1:  这样 => 这样

Dependencies:
1	这样	_	AD	AD	_	4	advmod	_	_
2	倒	_	AD	AD	_	4	advmod	_	_
3	更	_	AD	AD	_	4	advmod	_	_
4	好	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 好-01, arg0, x4 / 这样)
(x0 / 好-01, degree, x2 / 更-01)
(x0 / 好-01, manner, x3 / 倒)

Input(Some(Graph((好-01 :arg0 这样 :manner 倒 :degree 更-01),ArrayBuffer(Span(3,4,List(0),好,好-01,false), Span(0,1,List(1),这样,这样,false), Span(1,2,List(2),倒,倒,false), Span(2,3,List(3),更,更-01,false)),Map(2 -> 倒, 1 -> 这样, 0 -> 好-01, 3 -> 更-01),Map(x2 -> 更-01, x4 -> 这样, x3 -> 倒, x0 -> 好-01))),[Ljava.lang.String;@7d66a126,Annotation([Ljava.lang.String;@1132baa3,[Ljava.lang.String;@2fdf22f7,[Ljava.lang.String;@3a2546d6),Annotation([Ljava.lang.String;@7282af25,[Ljava.lang.String;@7661e474,[Ledu.cmu.lti.nlp.amr.Dependency;@20ffb8d5),Annotation([Ljava.lang.String;@307c59ea,[Ljava.lang.String;@57e03347,[Ljava.lang.String;@2edb2f8b),Annotation([Ljava.lang.String;@733f1395,[Ljava.lang.String;@21dea711,[Ledu.cmu.lti.nlp.amr.Entity;@7772d266))
AMR:
(x0 / 好-01, ARG3, x4 / 这样)
(x0 / 好-01, degree, x2 / 更-01)
(x0 / 好-01, manner, x3 / 倒)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,522 microseconds
Sentence: 你 可以 认为 我 的 那 颗 星星 就 在 这些 星星 之中 。

Oracle Span 1:  你 => 你
Oracle Span 2:  可以 => 可以-03
Oracle Span 3:  在 => 在-01
Oracle Span 4:  就 => 就
Oracle Span 5:  我 => 我
Oracle Span 6:  星星 => 星星
Oracle Span 7:  星星 => 星星
Oracle Span 8:  认为 => 认为-01
Oracle Span 9:  这些 => 这些
Oracle Span 10:  那 => 那
Spans:
Span 0-1:  你 => 你
Span 1-2:  可以 => 可以-03
Span 9-10:  在 => 在-01
Span 8-9:  就 => 就
Span 3-4:  我 => 我
Span 7-8:  星星 => 星星
Span 11-12:  星星 => 星星
Span 2-3:  认为 => 认为-01
Span 10-11:  这些 => 这些
Span 5-6:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  可以 => 可以-03
Oracle Span 9-10:  在 => 在-01
Oracle Span 8-9:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 7-8:  星星 => 星星
Oracle Span 11-12:  星星 => 星星
Oracle Span 2-3:  认为 => 认为-01
Oracle Span 10-11:  这些 => 这些
Oracle Span 5-6:  那 => 那

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	mmod	_	_
3	认为	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	8	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那	_	DT	DT	_	8	det	_	_
7	颗	_	M	M	_	6	clf	_	_
8	星星	_	NN	NN	_	10	nsubj	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	在	_	VV	VV	_	3	ccomp	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	星星	_	NN	NN	_	13	lobj	_	_
13	之中	_	LC	LC	_	10	loc	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-03, arg0, x2 / 你)
(x0 / 可以-03, arg1, x3 / 认为-01)
(x11 / 星星, mod, x12 / 这些)
(x3 / 认为-01, arg1, x5 / 星星)
(x5 / 星星, mod, x6 / 那)
(x5 / 星星, poss, x7 / 我)
(x9 / 在-01, arg0, x5 / 星星)
(x9 / 在-01, manner, x13 / 就)
(x9 / 在-01, prep-amid, x11 / 星星)

Input(Some(Graph((可以-03 :arg1 (认为-01 :arg1 (星星 :arg0-of (在-01 :manner 就 :prep-amid (星星 :mod 这些)) :poss 我 :mod 那) :arg0 x2) :arg0 你),ArrayBuffer(Span(1,2,List(0),可以,可以-03,false), Span(2,3,List(1),认为,认为-01,false), Span(7,8,List(2),星星,星星,false), Span(9,10,List(3),在,在-01,false), Span(8,9,List(4),就,就,false), Span(11,12,List(5),星星,星星,false), Span(10,11,List(6),这些,这些,false), Span(3,4,List(7),我,我,false), Span(5,6,List(8),那,那,false), Span(0,1,List(9),你,你,false)),Map(2 -> 星星, 5 -> 星星, 8 -> 那, 7 -> 我, 1 -> 认为-01, 4 -> 就, 6 -> 这些, 9 -> 你, 0 -> 可以-03, 3 -> 在-01),Map(x2 -> 你, x13 -> 就, x5 -> 星星, x12 -> 这些, x7 -> 我, x11 -> 星星, x3 -> 认为-01, x6 -> 那, x9 -> 在-01, x0 -> 可以-03))),[Ljava.lang.String;@a21c74,Annotation([Ljava.lang.String;@b8a144e,[Ljava.lang.String;@5fb8dc01,[Ljava.lang.String;@3e38c472),Annotation([Ljava.lang.String;@2ee92e7d,[Ljava.lang.String;@759a678a,[Ledu.cmu.lti.nlp.amr.Dependency;@6cdbe5ec),Annotation([Ljava.lang.String;@14b8a751,[Ljava.lang.String;@7345f97d,[Ljava.lang.String;@554566a8),Annotation([Ljava.lang.String;@66020d69,[Ljava.lang.String;@3751acd7,[Ledu.cmu.lti.nlp.amr.Entity;@6b832551))
AMR:
(x0 / 可以-03, ARG5, x2 / 你)
(x0 / 可以-03, op, x3 / 认为-01)
(x11 / 星星, mod, x12 / 这些)
(x3 / 认为-01, unit, x5 / 星星)
(x5 / 星星, mod, x6 / 那)
(x5 / 星星, poss, x7 / 我)
(x9 / 在-01, manner, x13 / 就)
(x9 / 在-01, mode, x5 / 星星)
(x9 / 在-01, prep-amid, x11 / 星星)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.2.1
WARNING: makeIds can't find span Id: 0.1.1.2.0
WARNING: makeIds can't find span Id: 0.1.1.2.0.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 32,468 microseconds
Sentence: 那么 ， 所有 的 星星 ， 你 都 会 喜欢 看 的 … 这些 星星 都 将 成为 你 的 朋友 。

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  喜欢 => 喜欢-01
Oracle Span 4:  将 => 将
Oracle Span 5:  成为 => 成为-01
Oracle Span 6:  所有 => 所有
Oracle Span 7:  星星 => 星星
Oracle Span 8:  朋友 => 朋友
Oracle Span 9:  看 => 看-02
Oracle Span 10:  这些 => 这些
Oracle Span 11:  都 => 都
Spans:
Span 8-9:  会 => 会-02
Span 6-7:  你 => 你
Span 9-10:  喜欢 => 喜欢-01
Span 16-17:  将 => 将
Span 17-18:  成为 => 成为-01
Span 2-3:  所有 => 所有
Span 4-5:  星星 => 星星
Span 20-21:  朋友 => 朋友
Span 10-11:  看 => 看-02
Span 13-14:  这些 => 这些
Span 7-8:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 6-7:  你 => 你
Oracle Span 9-10:  喜欢 => 喜欢-01
Oracle Span 16-17:  将 => 将
Oracle Span 17-18:  成为 => 成为-01
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 20-21:  朋友 => 朋友
Oracle Span 10-11:  看 => 看-02
Oracle Span 13-14:  这些 => 这些
Oracle Span 7-8:  都 => 都

Dependencies:
1	那么	_	AD	AD	_	10	advmod	_	_
2	,	_	PU	PU	_	10	punct	_	_
3	所有	_	DT	DT	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星星	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	你	_	PN	PN	_	10	nsubj	_	_
8	都	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	喜欢	_	VV	VV	_	0	root	_	_
11	看	_	VV	VV	_	15	dep	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	…	_	PU	PU	_	15	punct	_	_
14	这些	_	DT	DT	_	15	det	_	_
15	星星	_	NN	NN	_	10	dobj	_	_
16	都	_	AD	AD	_	18	advmod	_	_
17	将	_	AD	AD	_	18	advmod	_	_
18	成为	_	VV	VV	_	10	dep	_	_
19	你	_	PN	PN	_	21	assmod	_	_
20	的	_	DEG	DEG	_	19	assm	_	_
21	朋友	_	NN	NN	_	18	dobj	_	_
22	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 会-02, arg0, x14 / 喜欢-01)
(x14 / 喜欢-01, arg0, x15 / 你)
(x14 / 喜欢-01, arg1, x16 / 看-02)
(x16 / 看-02, arg1, x18 / 星星)
(x18 / 星星, mod, x19 / 所有)
(x20 / 成为-01, arg1, x25 / 朋友)
(x20 / 成为-01, manner, x23 / 都)
(x20 / 成为-01, time, x24 / 将)

Input(Some(Graph((multi-sentence :snt1 (temporal :arg2 (会-02 :arg0 (喜欢-01 :arg1 (看-02 :arg1 (星星 :mod 所有) :arg0 x15) :arg0 你))) :snt2 (成为-01 :arg1 (朋友 :poss x15) :time 将 :manner 都 :arg0 (x18 :mod 这些))),ArrayBuffer(Span(8,9,List(0),会,会-02,false), Span(9,10,List(1),喜欢,喜欢-01,false), Span(10,11,List(2),看,看-02,false), Span(4,5,List(3),星星,星星,false), Span(2,3,List(4),所有,所有,false), Span(6,7,List(5),你,你,false), Span(17,18,List(6),成为,成为-01,false), Span(20,21,List(7),朋友,朋友,false), Span(16,17,List(8),将,将,false), Span(7,8,List(9),都,都,false), Span(13,14,List(10),这些,这些,false)),Map(2 -> 看-02, 5 -> 你, 8 -> 将, 7 -> 朋友, 1 -> 喜欢-01, 4 -> 所有, 6 -> 成为-01, 9 -> 都, 0 -> 会-02, 10 -> 这些, 3 -> 星星),Map(x22 -> 这些, x16 -> 看-02, x25 -> 朋友, x19 -> 所有, x13 -> 会-02, x15 -> 你, x24 -> 将, x18 -> 星星, x23 -> 都, x20 -> 成为-01, x14 -> 喜欢-01))),[Ljava.lang.String;@150d6eaf,Annotation([Ljava.lang.String;@63124022,[Ljava.lang.String;@591f6f83,[Ljava.lang.String;@2b44605c),Annotation([Ljava.lang.String;@55421b8d,[Ljava.lang.String;@24a04257,[Ledu.cmu.lti.nlp.amr.Dependency;@6615237),Annotation([Ljava.lang.String;@eaf8427,[Ljava.lang.String;@4bf4680c,[Ljava.lang.String;@6d6039df),Annotation([Ljava.lang.String;@611c3eae,[Ljava.lang.String;@13e00016,[Ledu.cmu.lti.nlp.amr.Entity;@7b3cbe6e))
AMR:
(x13 / 会-02, manner, x23 / 都)
(x13 / 会-02, season, x14 / 喜欢-01)
(x14 / 喜欢-01, domain, x18 / 星星)
(x14 / 喜欢-01, prep-on-behalf, x15 / 你)
(x14 / 喜欢-01, season, x16 / 看-02)
(x16 / 看-02, mod, x22 / 这些)
(x18 / 星星, mod, x19 / 所有)
(x20 / 成为-01, instrument, x25 / 朋友)
(x20 / 成为-01, mod, x22 / 这些)
(x20 / 成为-01, time, x24 / 将)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 48,880 microseconds
Sentence: 而且 ， 我 还 要 给 你 一 件 礼物 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  礼物 => 礼物
Oracle Span 4:  给 => 给-01
Oracle Span 5:  要 => 要-03
Oracle Span 6:  还 => 还
Spans:
Span 6-7:  你 => 你
Span 2-3:  我 => 我
Span 9-10:  礼物 => 礼物
Span 5-6:  给 => 给-01
Span 4-5:  要 => 要-03
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  礼物 => 礼物
Oracle Span 5-6:  给 => 给-01
Oracle Span 4-5:  要 => 要-03
Oracle Span 3-4:  还 => 还

Dependencies:
1	而且	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	0	root	_	_
6	给	_	P	P	_	10	prep	_	_
7	你	_	PN	PN	_	6	pobj	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	件	_	M	M	_	10	clf	_	_
10	礼物	_	NN	NN	_	5	dobj	_	_
11	…	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x19 / 要-03, arg0, x21 / 给-01)
(x19 / 要-03, manner, x20 / 还)
(x21 / 给-01, arg0, x22 / 我)
(x21 / 给-01, arg1, x23 / 礼物)
(x21 / 给-01, arg2, x25 / 你)

Input(Some(Graph((say :arg1 (progression :arg2 (要-03 :arg0 (给-01 :arg2 你 :arg1 (礼物 :quant 1) :arg0 我) :manner 还))),ArrayBuffer(Span(4,5,List(0),要,要-03,false), Span(5,6,List(1),给,给-01,false), Span(6,7,List(2),你,你,false), Span(9,10,List(3),礼物,礼物,false), Span(2,3,List(4),我,我,false), Span(3,4,List(5),还,还,false)),Map(2 -> 你, 5 -> 还, 1 -> 给-01, 4 -> 我, 0 -> 要-03, 3 -> 礼物),Map(x22 -> 我, x25 -> 你, x19 -> 要-03, x21 -> 给-01, x23 -> 礼物, x20 -> 还))),[Ljava.lang.String;@177ede17,Annotation([Ljava.lang.String;@17176b18,[Ljava.lang.String;@4e4395c,[Ljava.lang.String;@1ab53860),Annotation([Ljava.lang.String;@7b5ac347,[Ljava.lang.String;@57b9389f,[Ledu.cmu.lti.nlp.amr.Dependency;@72b2c5ed),Annotation([Ljava.lang.String;@41f785e3,[Ljava.lang.String;@6c9a3661,[Ljava.lang.String;@727986ad),Annotation([Ljava.lang.String;@1600a8a2,[Ljava.lang.String;@6b25ef1c,[Ledu.cmu.lti.nlp.amr.Entity;@56b1e527))
AMR:
(x19 / 要-03, manner, x20 / 还)
(x19 / 要-03, prep-for, x21 / 给-01)
(x19 / 要-03, prep-on-behalf, x22 / 我)
(x21 / 给-01, prep-out, x25 / 你)
(x21 / 给-01, snt1, x23 / 礼物)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 12,279 microseconds
Sentence: 他 又 笑 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  笑 => 笑-01
Spans:
Span 0-1:  他 => 他
Span 1-2:  又 => 又
Span 2-3:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  又 => 又
Oracle Span 2-3:  笑 => 笑-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	笑	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 笑-01, arg1, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)

Input(Some(Graph((笑-01 :manner 又 :arg1 他),ArrayBuffer(Span(2,3,List(0),笑,笑-01,false), Span(1,2,List(1),又,又,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 又, 0 -> 笑-01),Map(x2 -> 他, x3 -> 又, x0 -> 笑-01))),[Ljava.lang.String;@68c34db2,Annotation([Ljava.lang.String;@7b95bdb0,[Ljava.lang.String;@3f0ce0d1,[Ljava.lang.String;@664db2ca),Annotation([Ljava.lang.String;@1491cd6c,[Ljava.lang.String;@423f8a73,[Ledu.cmu.lti.nlp.amr.Dependency;@1aedf08d),Annotation([Ljava.lang.String;@113dcaf8,[Ljava.lang.String;@b5d9f1e,[Ljava.lang.String;@350ff014),Annotation([Ljava.lang.String;@401317a0,[Ljava.lang.String;@3f866f50,[Ledu.cmu.lti.nlp.amr.Entity;@5844a2d1))
AMR:
(x0 / 笑-01, ARG6, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,471 microseconds
Sentence: “ 啊 ！ 小家伙 ， 小家伙 ，

Oracle Span 1:  啊 => 啊
Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	啊	_	AD	AD	_	4	advmod	_	_
3	！	_	AD	AD	_	4	advmod	_	_
4	小家伙	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	小家伙	_	CD	CD	_	4	dep	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (multi-sentence :snt1 (啊 :mode expressive) :snt2 (and :op (家伙 :mod 小-01) :op (家伙 :mod 小-01)))),ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(x8 -> 啊))),[Ljava.lang.String;@1201769d,Annotation([Ljava.lang.String;@4af7dd6a,[Ljava.lang.String;@4607d78b,[Ljava.lang.String;@3b28b7b0),Annotation([Ljava.lang.String;@22048bd6,[Ljava.lang.String;@566c1e71,[Ledu.cmu.lti.nlp.amr.Dependency;@2e2f20b8),Annotation([Ljava.lang.String;@504497fa,[Ljava.lang.String;@5618fc1f,[Ljava.lang.String;@60b1ff3b),Annotation([Ljava.lang.String;@374c3975,[Ljava.lang.String;@43c39321,[Ledu.cmu.lti.nlp.amr.Entity;@52aa7742))
AMR:


WARNING: makeIds can't find span Id: 0.0.0
Decoded in 1,791 microseconds
Sentence: 我 喜欢 听 你 这 笑声 ！ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  听 => 听-01
Oracle Span 3:  喜欢 => 喜欢-01
Oracle Span 4:  我 => 我
Oracle Span 5:  笑声 => 笑声
Oracle Span 6:  这 => 这
Spans:
Span 3-4:  你 => 你
Span 2-3:  听 => 听-01
Span 1-2:  喜欢 => 喜欢-01
Span 0-1:  我 => 我
Span 5-6:  笑声 => 笑声
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 2-3:  听 => 听-01
Oracle Span 1-2:  喜欢 => 喜欢-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  笑声 => 笑声
Oracle Span 4-5:  这 => 这

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	喜欢	_	VV	VV	_	0	root	_	_
3	听	_	VV	VV	_	2	ccomp	_	_
4	你	_	PN	PN	_	6	nn	_	_
5	这	_	DT	DT	_	6	det	_	_
6	笑声	_	NN	NN	_	3	dobj	_	_
7	！	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 喜欢-01, arg0, x13 / 我)
(x12 / 喜欢-01, arg1, x14 / 听-01)
(x14 / 听-01, arg1, x16 / 笑声)
(x16 / 笑声, mod, x17 / 这)
(x16 / 笑声, poss, x18 / 你)

Input(Some(Graph((say :arg1 (喜欢-01 :mode expressive :arg1 (听-01 :arg1 (笑声 :poss 你 :mod 这) :arg0 x13) :arg0 我)),ArrayBuffer(Span(1,2,List(0),喜欢,喜欢-01,false), Span(2,3,List(1),听,听-01,false), Span(5,6,List(2),笑声,笑声,false), Span(3,4,List(3),你,你,false), Span(4,5,List(4),这,这,false), Span(0,1,List(5),我,我,false)),Map(2 -> 笑声, 5 -> 我, 1 -> 听-01, 4 -> 这, 0 -> 喜欢-01, 3 -> 你),Map(x16 -> 笑声, x13 -> 我, x12 -> 喜欢-01, x18 -> 你, x14 -> 听-01, x17 -> 这))),[Ljava.lang.String;@3d0d120b,Annotation([Ljava.lang.String;@6b5c134e,[Ljava.lang.String;@34d9df9f,[Ljava.lang.String;@35c8be21),Annotation([Ljava.lang.String;@60807fd9,[Ljava.lang.String;@6bcdd6e4,[Ledu.cmu.lti.nlp.amr.Dependency;@1192c925),Annotation([Ljava.lang.String;@615b5480,[Ljava.lang.String;@24691c5,[Ljava.lang.String;@7b91d9f),Annotation([Ljava.lang.String;@6537ac,[Ljava.lang.String;@3b218c74,[Ledu.cmu.lti.nlp.amr.Entity;@ddffa6c))
AMR:
(x12 / 喜欢-01, decade, x13 / 我)
(x12 / 喜欢-01, snt11, x14 / 听-01)
(x16 / 笑声, mod, x17 / 这)
(x16 / 笑声, poss, x14 / 听-01)
(x16 / 笑声, poss, x18 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,101 microseconds
Sentence: “ 这 正好 是 我 给 你 的 礼物 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  正好 => 正好
Oracle Span 4:  礼物 => 礼物
Oracle Span 5:  给 => 给-01
Oracle Span 6:  这 => 这
Spans:
Span 6-7:  你 => 你
Span 4-5:  我 => 我
Span 2-3:  正好 => 正好
Span 8-9:  礼物 => 礼物
Span 5-6:  给 => 给-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  正好 => 正好
Oracle Span 8-9:  礼物 => 礼物
Oracle Span 5-6:  给 => 给-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	正好	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	我	_	PN	PN	_	9	nsubj	_	_
6	给	_	P	P	_	9	assmod	_	_
7	你	_	PN	PN	_	6	pobj	_	_
8	的	_	DEG	DEG	_	6	assm	_	_
9	礼物	_	NN	NN	_	4	conj	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x10 / 给-01, arg0, x11 / 我)
(x10 / 给-01, arg1, x9 / 礼物)
(x10 / 给-01, arg2, x12 / 你)
(x9 / 礼物, domain, x14 / 这)
(x9 / 礼物, manner, x13 / 正好)

Input(Some(Graph((say :arg1 (礼物 :domain 这 :manner 正好 :arg1-of (给-01 :arg2 你 :arg0 我))),ArrayBuffer(Span(8,9,List(0),礼物,礼物,false), Span(1,2,List(1),这,这,false), Span(2,3,List(2),正好,正好,false), Span(5,6,List(3),给,给-01,false), Span(6,7,List(4),你,你,false), Span(4,5,List(5),我,我,false)),Map(2 -> 正好, 5 -> 我, 1 -> 这, 4 -> 你, 0 -> 礼物, 3 -> 给-01),Map(x10 -> 给-01, x13 -> 正好, x12 -> 你, x11 -> 我, x14 -> 这, x9 -> 礼物))),[Ljava.lang.String;@42c54bad,Annotation([Ljava.lang.String;@6bb4cc0e,[Ljava.lang.String;@5cc1bf20,[Ljava.lang.String;@2e3f324e),Annotation([Ljava.lang.String;@46cf8c07,[Ljava.lang.String;@b56ec6c,[Ledu.cmu.lti.nlp.amr.Dependency;@5abf6a99),Annotation([Ljava.lang.String;@dc59ec2,[Ljava.lang.String;@375084c9,[Ljava.lang.String;@bd93bc3),Annotation([Ljava.lang.String;@2a136383,[Ljava.lang.String;@b01cb8d,[Ledu.cmu.lti.nlp.amr.Entity;@38c460e8))
AMR:
(x10 / 给-01, location, x9 / 礼物)
(x10 / 给-01, prep-by, x11 / 我)
(x10 / 给-01, subset, x12 / 你)
(x9 / 礼物, domain, x14 / 这)
(x9 / 礼物, manner, x13 / 正好)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 11,255 microseconds
Sentence: 这 正好 是

Oracle Span 1:  是 => 是-01
Oracle Span 2:  正好 => 正好
Oracle Span 3:  这 => 这
Spans:
Span 2-3:  是 => 是-01
Span 1-2:  正好 => 正好
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  是 => 是-01
Oracle Span 1-2:  正好 => 正好
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	正好	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_

Oracle:
(x0 / 是-01, arg0, x2 / 这)
(x0 / 是-01, manner, x3 / 正好)

Input(Some(Graph((是-01 :manner 正好 :arg0 这),ArrayBuffer(Span(2,3,List(0),是,是-01,false), Span(1,2,List(1),正好,正好,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 正好, 0 -> 是-01),Map(x2 -> 这, x3 -> 正好, x0 -> 是-01))),[Ljava.lang.String;@7a814310,Annotation([Ljava.lang.String;@4bbf38b8,[Ljava.lang.String;@4e67cfe1,[Ljava.lang.String;@55bf35e5),Annotation([Ljava.lang.String;@25567581,[Ljava.lang.String;@179ee36b,[Ledu.cmu.lti.nlp.amr.Dependency;@67763ebe),Annotation([Ljava.lang.String;@4b4a2fa8,[Ljava.lang.String;@5da6b13d,[Ljava.lang.String;@3dc39459),Annotation([Ljava.lang.String;@6b16de91,[Ljava.lang.String;@71bb8b34,[Ledu.cmu.lti.nlp.amr.Entity;@197ce367))
AMR:
(x0 / 是-01, ARG4, x2 / 这)
(x0 / 是-01, manner, x3 / 正好)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 3,717 microseconds
Sentence: … 这 就 好象 水 那样 。 ”

Oracle Span 1:  就 => 就
Oracle Span 2:  水 => 水
Oracle Span 3:  这 => 这
Spans:
Span 2-3:  就 => 就
Span 4-5:  水 => 水
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  水 => 水
Oracle Span 1-2:  这 => 这

Dependencies:
1	…	_	PU	PU	_	4	dep	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	好象	_	VV	VV	_	0	root	_	_
5	水	_	NN	NN	_	4	dobj	_	_
6	那样	_	AD	AD	_	4	advmod	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (像-01 :manner 就 :arg0 这 :arg1 水)),ArrayBuffer(Span(2,3,List(0),就,就,false), Span(1,2,List(1),这,这,false), Span(4,5,List(2),水,水,false)),Map(2 -> 水, 1 -> 这, 0 -> 就),Map(x10 -> 这, x11 -> 水, x9 -> 就))),[Ljava.lang.String;@383cdd4d,Annotation([Ljava.lang.String;@65036e8d,[Ljava.lang.String;@48ccbb32,[Ljava.lang.String;@36551e97),Annotation([Ljava.lang.String;@685d7ba5,[Ljava.lang.String;@16d41725,[Ledu.cmu.lti.nlp.amr.Dependency;@3b6c2be6),Annotation([Ljava.lang.String;@25533bba,[Ljava.lang.String;@26d0ece6,[Ljava.lang.String;@100bba26),Annotation([Ljava.lang.String;@4ae280da,[Ljava.lang.String;@76d0ecd7,[Ledu.cmu.lti.nlp.amr.Entity;@57c69937))
AMR:
(x11 / 水, quant, x10 / 这)
(x9 / 就, prep-through, x11 / 水)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
Decoded in 4,981 microseconds
Sentence: “ 你 说 的 是 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	说	_	VV	VV	_	5	top	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	是	_	VC	VC	_	0	root	_	_
6	什么	_	PN	PN	_	5	attr	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 说-01, arg0, x11 / 你)

Input(Some(Graph((say :arg1 (说-01 :mode interrogative :arg1 amr-unknown :arg0 你)),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(1,2,List(1),你,你,false)),Map(1 -> 你, 0 -> 说-01),Map(x10 -> 说-01, x11 -> 你))),[Ljava.lang.String;@1ad1c363,Annotation([Ljava.lang.String;@446b64b3,[Ljava.lang.String;@35ac9ebd,[Ljava.lang.String;@56c0a61e),Annotation([Ljava.lang.String;@421ead7e,[Ljava.lang.String;@5dcf0772,[Ledu.cmu.lti.nlp.amr.Dependency;@c472300),Annotation([Ljava.lang.String;@5f6494c0,[Ljava.lang.String;@6826b70f,[Ljava.lang.String;@4df7d9ee),Annotation([Ljava.lang.String;@781dac73,[Ljava.lang.String;@3a4e524,[Ledu.cmu.lti.nlp.amr.Entity;@5e67a490))
AMR:
(x10 / 说-01, ARG4, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,971 microseconds
Sentence: “ 人们 都 有 星星 ， 但是 他们 在 不同 人 眼 里 并不 都 一样 。 ” 他 回答 。

Oracle Span 1:  一样 => 一样-01
Oracle Span 2:  不同 => 不同
Oracle Span 3:  人 => 人
Oracle Span 4:  人们 => 人们
Oracle Span 5:  他 => 他
Oracle Span 6:  回答 => 回答-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  有 => 有-01
Oracle Span 9:  都 => 都
Oracle Span 10:  都 => 都
Spans:
Span 15-16:  一样 => 一样-01
Span 9-10:  不同 => 不同
Span 10-11:  人 => 人
Span 1-2:  人们 => 人们
Span 18-19:  他 => 他
Span 19-20:  回答 => 回答-01
Span 4-5:  星星 => 星星
Span 3-4:  有 => 有-01
Span 2-3:  都 => 都
Span 14-15:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  一样 => 一样-01
Oracle Span 9-10:  不同 => 不同
Oracle Span 10-11:  人 => 人
Oracle Span 1-2:  人们 => 人们
Oracle Span 18-19:  他 => 他
Oracle Span 19-20:  回答 => 回答-01
Oracle Span 4-5:  星星 => 星星
Oracle Span 3-4:  有 => 有-01
Oracle Span 2-3:  都 => 都
Oracle Span 14-15:  都 => 都

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	人们	_	NN	NN	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	星星	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	但是	_	AD	AD	_	14	advmod	_	_
8	他们	_	PN	PN	_	14	nsubj	_	_
9	在	_	P	P	_	14	prep	_	_
10	不同	_	JJ	JJ	_	11	amod	_	_
11	人	_	NN	NN	_	12	nn	_	_
12	眼	_	NN	NN	_	13	lobj	_	_
13	里	_	LC	LC	_	9	plmod	_	_
14	并不	_	VV	VV	_	4	conj	_	_
15	都	_	AD	AD	_	16	advmod	_	_
16	一样	_	VA	VA	_	14	ccomp	_	_
17	。	_	PU	PU	_	4	punct	_	_
18	”	_	PU	PU	_	4	punct	_	_
19	他	_	PN	PN	_	20	nsubj	_	_
20	回答	_	VV	VV	_	4	conj	_	_
21	。	_	PU	PU	_	4	punct	_	_
22	他们	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x20 / 有-01, arg0, x21 / 人们)
(x20 / 有-01, arg1, x23 / 星星)
(x20 / 有-01, manner, x22 / 都)
(x24 / 一样-01, manner, x27 / 都)
(x29 / 人, mod, x30 / 不同)
(x31 / 回答-01, arg0, x32 / 他)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg1 (有-01 :arg1 星星 :manner 都 :arg0 人们) :arg2 (一样-01 :location (眼里 :part-of (人 :mod 不同)) :manner 都 :polarity - :arg0 x23)) :snt2 (回答-01 :arg0 他)),ArrayBuffer(Span(3,4,List(0),有,有-01,false), Span(4,5,List(1),星星,星星,false), Span(2,3,List(2),都,都,false), Span(1,2,List(3),人们,人们,false), Span(15,16,List(4),一样,一样-01,false), Span(10,11,List(5),人,人,false), Span(9,10,List(6),不同,不同,false), Span(14,15,List(7),都,都,false), Span(19,20,List(8),回答,回答-01,false), Span(18,19,List(9),他,他,false)),Map(2 -> 都, 5 -> 人, 8 -> 回答-01, 7 -> 都, 1 -> 星星, 4 -> 一样-01, 6 -> 不同, 9 -> 他, 0 -> 有-01, 3 -> 人们),Map(x22 -> 都, x31 -> 回答-01, x30 -> 不同, x27 -> 都, x21 -> 人们, x24 -> 一样-01, x23 -> 星星, x32 -> 他, x29 -> 人, x20 -> 有-01))),[Ljava.lang.String;@2dac2e1b,Annotation([Ljava.lang.String;@38c761e9,[Ljava.lang.String;@1cee2e10,[Ljava.lang.String;@7f4e5a39),Annotation([Ljava.lang.String;@33de7f3d,[Ljava.lang.String;@30159886,[Ledu.cmu.lti.nlp.amr.Dependency;@5d66ae3a),Annotation([Ljava.lang.String;@50f4b83d,[Ljava.lang.String;@10131289,[Ljava.lang.String;@c5e69a5),Annotation([Ljava.lang.String;@64a1116a,[Ljava.lang.String;@11e17893,[Ledu.cmu.lti.nlp.amr.Entity;@19eea77c))
AMR:
(x20 / 有-01, location, x23 / 星星)
(x20 / 有-01, manner, x22 / 都)
(x20 / 有-01, time, x21 / 人们)
(x24 / 一样-01, manner, x27 / 都)
(x24 / 一样-01, time, x29 / 人)
(x29 / 人, mod, x30 / 不同)
(x30 / 不同, domain, x23 / 星星)
(x31 / 回答-01, example, x32 / 他)
(x31 / 回答-01, manner, x24 / 一样-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.3.0
WARNING: makeIds can't find span Id: 0.0.1.3.0.0
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 33,163 microseconds
Sentence: 对 旅行 的 人 来说 ， 星星 是 向导 。

Oracle Span 1:  人 => 人
Oracle Span 2:  向导 => 向导
Oracle Span 3:  旅行 => 旅行-01
Oracle Span 4:  星星 => 星星
Oracle Span 5:  来说 => 来说-01
Spans:
Span 3-4:  人 => 人
Span 8-9:  向导 => 向导
Span 1-2:  旅行 => 旅行-01
Span 6-7:  星星 => 星星
Span 4-5:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 8-9:  向导 => 向导
Oracle Span 1-2:  旅行 => 旅行-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 4-5:  来说 => 来说-01

Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	旅行	_	NN	NN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	人	_	NN	NN	_	5	nn	_	_
5	来说	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	星星	_	NN	NN	_	8	top	_	_
8	是	_	VC	VC	_	0	root	_	_
9	向导	_	NN	NN	_	8	attr	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x8 / 向导)
(x0 / 来说-01, arg1, x4 / 人)
(x4 / 人, mod, x5 / 旅行-01)
(x8 / 向导, domain, x9 / 星星)

Input(Some(Graph((来说-01 :arg0 (向导 :domain 星星) :arg1 (人 :mod 旅行-01)),ArrayBuffer(Span(4,5,List(0),来说,来说-01,false), Span(8,9,List(1),向导,向导,false), Span(6,7,List(2),星星,星星,false), Span(3,4,List(3),人,人,false), Span(1,2,List(4),旅行,旅行-01,false)),Map(2 -> 星星, 1 -> 向导, 4 -> 旅行-01, 0 -> 来说-01, 3 -> 人),Map(x5 -> 旅行-01, x8 -> 向导, x4 -> 人, x9 -> 星星, x0 -> 来说-01))),[Ljava.lang.String;@6682e6a5,Annotation([Ljava.lang.String;@ac4915e,[Ljava.lang.String;@10fb4575,[Ljava.lang.String;@7cc2c551),Annotation([Ljava.lang.String;@d84b3a2,[Ljava.lang.String;@23648d2d,[Ledu.cmu.lti.nlp.amr.Dependency;@69feb4d9),Annotation([Ljava.lang.String;@37c1cfa,[Ljava.lang.String;@2bcda694,[Ljava.lang.String;@2cc75b25),Annotation([Ljava.lang.String;@30036a18,[Ljava.lang.String;@537b3b2e,[Ledu.cmu.lti.nlp.amr.Entity;@1544ded3))
AMR:
(x0 / 来说-01, location, x4 / 人)
(x0 / 来说-01, op, x8 / 向导)
(x4 / 人, mod, x5 / 旅行-01)
(x8 / 向导, domain, x9 / 星星)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,867 microseconds
Sentence: 对 别的 人 来说 ， 星星 只 是 些 小 亮光 。

Oracle Span 1:  些 => 些
Oracle Span 2:  亮光 => 亮光
Oracle Span 3:  人 => 人
Oracle Span 4:  别的 => 别的
Oracle Span 5:  只 => 只
Oracle Span 6:  小 => 小-01
Oracle Span 7:  星星 => 星星
Oracle Span 8:  来说 => 来说-01
Spans:
Span 8-9:  些 => 些
Span 10-11:  亮光 => 亮光
Span 2-3:  人 => 人
Span 1-2:  别的 => 别的
Span 6-7:  只 => 只
Span 9-10:  小 => 小-01
Span 5-6:  星星 => 星星
Span 3-4:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  些 => 些
Oracle Span 10-11:  亮光 => 亮光
Oracle Span 2-3:  人 => 人
Oracle Span 1-2:  别的 => 别的
Oracle Span 6-7:  只 => 只
Oracle Span 9-10:  小 => 小-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  来说 => 来说-01

Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	别的	_	NN	NN	_	4	nn	_	_
3	人	_	NN	NN	_	4	nn	_	_
4	来说	_	NN	NN	_	1	pobj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	星星	_	NN	NN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	些	_	M	M	_	11	dep	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	亮光	_	NN	NN	_	8	attr	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x9 / 亮光)
(x0 / 来说-01, arg1, x7 / 人)
(x7 / 人, mod, x8 / 别的)
(x9 / 亮光, domain, x12 / 星星)
(x9 / 亮光, manner, x13 / 只)
(x9 / 亮光, mod, x10 / 小-01)
(x9 / 亮光, mod, x11 / 些)

Input(Some(Graph((来说-01 :arg0 (亮光 :manner 只 :domain 星星 :mod 些 :mod 小-01) :arg1 (人 :mod 别的)),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(10,11,List(1),亮光,亮光,false), Span(6,7,List(2),只,只,false), Span(5,6,List(3),星星,星星,false), Span(8,9,List(4),些,些,false), Span(9,10,List(5),小,小-01,false), Span(2,3,List(6),人,人,false), Span(1,2,List(7),别的,别的,false)),Map(2 -> 只, 5 -> 小-01, 7 -> 别的, 1 -> 亮光, 4 -> 些, 6 -> 人, 0 -> 来说-01, 3 -> 星星),Map(x10 -> 小-01, x13 -> 只, x8 -> 别的, x12 -> 星星, x7 -> 人, x11 -> 些, x9 -> 亮光, x0 -> 来说-01))),[Ljava.lang.String;@3ccb12d,Annotation([Ljava.lang.String;@28b458e6,[Ljava.lang.String;@221ca495,[Ljava.lang.String;@119d4443),Annotation([Ljava.lang.String;@773eca84,[Ljava.lang.String;@7d47dfed,[Ledu.cmu.lti.nlp.amr.Dependency;@3a38e4dc),Annotation([Ljava.lang.String;@41fc0084,[Ljava.lang.String;@401788d5,[Ljava.lang.String;@3ec9f8d),Annotation([Ljava.lang.String;@7e0f9528,[Ljava.lang.String;@5f56424d,[Ledu.cmu.lti.nlp.amr.Entity;@237b2852))
AMR:
(x0 / 来说-01, location, x7 / 人)
(x0 / 来说-01, location, x9 / 亮光)
(x7 / 人, mod, x8 / 别的)
(x9 / 亮光, domain, x12 / 星星)
(x9 / 亮光, manner, x13 / 只)
(x9 / 亮光, mod, x10 / 小-01)
(x9 / 亮光, mod, x11 / 些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,742 microseconds
Sentence: 对 另外 一些 学者 来说 ， 星星 就 是 他们 探讨 的 学问 。

Oracle Span 1:  一些 => 一些
Oracle Span 2:  另外 => 另外
Oracle Span 3:  学者 => 学者
Oracle Span 4:  学问 => 学问
Oracle Span 5:  探讨 => 探讨-01
Oracle Span 6:  星星 => 星星
Oracle Span 7:  来说 => 来说-01
Spans:
Span 2-3:  一些 => 一些
Span 1-2:  另外 => 另外
Span 3-4:  学者 => 学者
Span 12-13:  学问 => 学问
Span 10-11:  探讨 => 探讨-01
Span 6-7:  星星 => 星星
Span 4-5:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  一些 => 一些
Oracle Span 1-2:  另外 => 另外
Oracle Span 3-4:  学者 => 学者
Oracle Span 12-13:  学问 => 学问
Oracle Span 10-11:  探讨 => 探讨-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 4-5:  来说 => 来说-01

Dependencies:
1	对	_	P	P	_	9	prep	_	_
2	另外	_	JJ	JJ	_	4	amod	_	_
3	一些	_	CD	CD	_	4	nummod	_	_
4	学者	_	NN	NN	_	5	nn	_	_
5	来说	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	星星	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	他们	_	PN	PN	_	11	nsubj	_	_
11	探讨	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	学问	_	NN	NN	_	9	attr	_	_
14	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x10 / 学问)
(x0 / 来说-01, arg1, x6 / 学者)
(x10 / 学问, domain, x13 / 星星)
(x11 / 探讨-01, arg1, x10 / 学问)
(x6 / 学者, mod, x7 / 一些)
(x6 / 学者, mod, x8 / 另外)

Input(Some(Graph((来说-01 :arg0 (学问 :domain 星星 :arg1-of (探讨-01 :arg0 x6)) :arg1 (学者 :mod 另外 :mod 一些)),ArrayBuffer(Span(4,5,List(0),来说,来说-01,false), Span(12,13,List(1),学问,学问,false), Span(6,7,List(2),星星,星星,false), Span(10,11,List(3),探讨,探讨-01,false), Span(3,4,List(4),学者,学者,false), Span(1,2,List(5),另外,另外,false), Span(2,3,List(6),一些,一些,false)),Map(2 -> 星星, 5 -> 另外, 1 -> 学问, 4 -> 学者, 6 -> 一些, 0 -> 来说-01, 3 -> 探讨-01),Map(x10 -> 学问, x13 -> 星星, x8 -> 另外, x7 -> 一些, x11 -> 探讨-01, x6 -> 学者, x0 -> 来说-01))),[Ljava.lang.String;@448cdb47,Annotation([Ljava.lang.String;@4628a02b,[Ljava.lang.String;@2b01c689,[Ljava.lang.String;@51424203),Annotation([Ljava.lang.String;@7336fd8f,[Ljava.lang.String;@701c223a,[Ledu.cmu.lti.nlp.amr.Dependency;@550c973e),Annotation([Ljava.lang.String;@161d95c6,[Ljava.lang.String;@5203c80f,[Ljava.lang.String;@439f2d87),Annotation([Ljava.lang.String;@721bf7ad,[Ljava.lang.String;@852ef8d,[Ledu.cmu.lti.nlp.amr.Entity;@44dd0d38))
AMR:
(x0 / 来说-01, location, x10 / 学问)
(x0 / 来说-01, location, x6 / 学者)
(x10 / 学问, domain, x13 / 星星)
(x11 / 探讨-01, op, x10 / 学问)
(x6 / 学者, mod, x7 / 一些)
(x6 / 学者, mod, x8 / 另外)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 17,384 microseconds
Sentence: 对 我 所 遇见 的 那个 实业家 来说 ， 星星 是 金钱 。

Oracle Span 1:  实业家 => 实业家
Oracle Span 2:  我 => 我
Oracle Span 3:  星星 => 星星
Oracle Span 4:  来说 => 来说-01
Oracle Span 5:  遇见 => 遇见-01
Oracle Span 6:  金钱 => 金钱
Spans:
Span 6-7:  实业家 => 实业家
Span 1-2:  我 => 我
Span 9-10:  星星 => 星星
Span 7-8:  来说 => 来说-01
Span 3-4:  遇见 => 遇见-01
Span 11-12:  金钱 => 金钱

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  实业家 => 实业家
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  星星 => 星星
Oracle Span 7-8:  来说 => 来说-01
Oracle Span 3-4:  遇见 => 遇见-01
Oracle Span 11-12:  金钱 => 金钱

Dependencies:
1	对	_	P	P	_	11	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	遇见	_	VV	VV	_	8	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	那个	_	NN	NN	_	8	nn	_	_
7	实业家	_	NN	NN	_	8	nn	_	_
8	来说	_	NN	NN	_	1	pobj	_	_
9	,	_	PU	PU	_	11	punct	_	_
10	星星	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	0	root	_	_
12	金钱	_	NN	NN	_	11	attr	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x11 / 星星)
(x0 / 来说-01, arg1, x3 / 实业家)
(x0 / 来说-01, arg2, x10 / 金钱)
(x5 / 遇见-01, arg0, x6 / 我)
(x5 / 遇见-01, arg1, x3 / 实业家)

Input(Some(Graph((来说-01 :arg0 星星 :arg2 金钱 :arg1 (实业家 :arg1-of (遇见-01 :arg0 我) :mod 那)),ArrayBuffer(Span(7,8,List(0),来说,来说-01,false), Span(9,10,List(1),星星,星星,false), Span(11,12,List(2),金钱,金钱,false), Span(6,7,List(3),实业家,实业家,false), Span(3,4,List(4),遇见,遇见-01,false), Span(1,2,List(5),我,我,false)),Map(2 -> 金钱, 5 -> 我, 1 -> 星星, 4 -> 遇见-01, 0 -> 来说-01, 3 -> 实业家),Map(x10 -> 金钱, x5 -> 遇见-01, x3 -> 实业家, x11 -> 星星, x6 -> 我, x0 -> 来说-01))),[Ljava.lang.String;@7e94e331,Annotation([Ljava.lang.String;@539fc5d1,[Ljava.lang.String;@4cae66a8,[Ljava.lang.String;@60b616c8),Annotation([Ljava.lang.String;@3962ec84,[Ljava.lang.String;@147e0734,[Ledu.cmu.lti.nlp.amr.Dependency;@2bdab835),Annotation([Ljava.lang.String;@7b8aebd0,[Ljava.lang.String;@55222ee9,[Ljava.lang.String;@3181d4de),Annotation([Ljava.lang.String;@4f64d9cb,[Ljava.lang.String;@639c7f9c,[Ledu.cmu.lti.nlp.amr.Entity;@270d5060))
AMR:
(x0 / 来说-01, location, x3 / 实业家)
(x0 / 来说-01, op, x10 / 金钱)
(x10 / 金钱, domain, x11 / 星星)
(x5 / 遇见-01, ARG3, x3 / 实业家)
(x5 / 遇见-01, ARG6, x6 / 我)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 13,519 microseconds
Sentence: 但是 ， 所有 这些 星星 都 不 会 说话 。

Oracle Span 1:  会 => 会-01
Oracle Span 2:  所有 => 所有
Oracle Span 3:  星星 => 星星
Oracle Span 4:  说话 => 说话-01
Oracle Span 5:  这些 => 这些
Oracle Span 6:  都 => 都
Spans:
Span 7-8:  会 => 会-01
Span 2-3:  所有 => 所有
Span 4-5:  星星 => 星星
Span 8-9:  说话 => 说话-01
Span 3-4:  这些 => 这些
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  会 => 会-01
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 8-9:  说话 => 说话-01
Oracle Span 3-4:  这些 => 这些
Oracle Span 5-6:  都 => 都

Dependencies:
1	但是	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	所有	_	DT	DT	_	5	det	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	星星	_	NN	NN	_	9	nsubj	_	_
6	都	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	dep	_	_
9	说话	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x2 / 会-01, arg0, x5 / 星星)
(x2 / 会-01, arg1, x8 / 说话-01)
(x2 / 会-01, manner, x4 / 都)
(x5 / 星星, mod, x6 / 这些)
(x5 / 星星, mod, x7 / 所有)

Input(Some(Graph((contrast :arg2 (会-01 :arg1 说话-01 :arg0 (星星 :mod 所有 :mod 这些) :manner 都 :polarity -)),ArrayBuffer(Span(7,8,List(0),会,会-01,false), Span(8,9,List(1),说话,说话-01,false), Span(4,5,List(2),星星,星星,false), Span(2,3,List(3),所有,所有,false), Span(3,4,List(4),这些,这些,false), Span(5,6,List(5),都,都,false)),Map(2 -> 星星, 5 -> 都, 1 -> 说话-01, 4 -> 这些, 0 -> 会-01, 3 -> 所有),Map(x2 -> 会-01, x5 -> 星星, x8 -> 说话-01, x7 -> 所有, x4 -> 都, x6 -> 这些))),[Ljava.lang.String;@1815577b,Annotation([Ljava.lang.String;@71567f33,[Ljava.lang.String;@71369e1a,[Ljava.lang.String;@3cf55e0c),Annotation([Ljava.lang.String;@ee96866,[Ljava.lang.String;@4c04216f,[Ledu.cmu.lti.nlp.amr.Dependency;@987a0bb),Annotation([Ljava.lang.String;@1f949ab9,[Ljava.lang.String;@5a7b6b75,[Ljava.lang.String;@3719360c),Annotation([Ljava.lang.String;@3afca2c,[Ljava.lang.String;@3855d9b2,[Ledu.cmu.lti.nlp.amr.Entity;@39f42d0e))
AMR:
(x2 / 会-01, compared-to, x8 / 说话-01)
(x2 / 会-01, manner, x4 / 都)
(x2 / 会-01, op, x5 / 星星)
(x5 / 星星, mod, x6 / 这些)
(x5 / 星星, mod, x7 / 所有)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 12,262 microseconds
Sentence: 你 呢 ， 你 的 那些 星星 将 是 任何 人 都 不 曾 有 过 的 … ”

Oracle Span 1:  人 => 人
Oracle Span 2:  任何 => 任何
Oracle Span 3:  你 => 你
Oracle Span 4:  星星 => 星星
Oracle Span 5:  有 => 有-01
Oracle Span 6:  那些 => 那些
Spans:
Span 10-11:  人 => 人
Span 9-10:  任何 => 任何
Span 0-1:  你 => 你
Span 6-7:  星星 => 星星
Span 14-15:  有 => 有-01
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 9-10:  任何 => 任何
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  星星 => 星星
Oracle Span 14-15:  有 => 有-01
Oracle Span 5-6:  那些 => 那些

Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	呢	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	星星	_	NN	NN	_	9	nsubj	_	_
8	将	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	2	ccomp	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	人	_	NN	NN	_	15	nsubj	_	_
12	都	_	AD	AD	_	15	advmod	_	_
13	不	_	AD	AD	_	15	neg	_	_
14	曾	_	AD	AD	_	15	advmod	_	_
15	有	_	VE	VE	_	18	rcmod	_	_
16	过	_	AS	AS	_	15	asp	_	_
17	的	_	DEC	DEC	_	15	cpm	_	_
18	…	_	NN	NN	_	9	attr	_	_
19	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 有-01, arg0, x23 / 人)
(x21 / 有-01, arg1, x25 / 星星)
(x23 / 人, mod, x24 / 任何)
(x25 / 星星, mod, x26 / 那些)

Input(Some(Graph((say :arg1 (and :op 你 :op (有-01 :arg1 (星星 :poss x20 :mod 那些) :arg0 (人 :mod 任何) :polarity -))),ArrayBuffer(Span(0,1,List(0),你,你,false), Span(14,15,List(1),有,有-01,false), Span(6,7,List(2),星星,星星,false), Span(5,6,List(3),那些,那些,false), Span(10,11,List(4),人,人,false), Span(9,10,List(5),任何,任何,false)),Map(2 -> 星星, 5 -> 任何, 1 -> 有-01, 4 -> 人, 0 -> 你, 3 -> 那些),Map(x25 -> 星星, x21 -> 有-01, x24 -> 任何, x23 -> 人, x26 -> 那些, x20 -> 你))),[Ljava.lang.String;@47a3d56a,Annotation([Ljava.lang.String;@3a209918,[Ljava.lang.String;@2cae5fa7,[Ljava.lang.String;@34aa8b61),Annotation([Ljava.lang.String;@6d7b001b,[Ljava.lang.String;@532dacf5,[Ledu.cmu.lti.nlp.amr.Dependency;@da09250),Annotation([Ljava.lang.String;@6d31f106,[Ljava.lang.String;@587f4f63,[Ljava.lang.String;@660b1a9d),Annotation([Ljava.lang.String;@6fb0261e,[Ljava.lang.String;@d6b532f,[Ledu.cmu.lti.nlp.amr.Entity;@2f4d01b6))
AMR:
(x21 / 有-01, prep-following, x23 / 人)
(x23 / 人, mod, x24 / 任何)
(x24 / 任何, quant, x25 / 星星)
(x25 / 星星, mod, x26 / 那些)
(x26 / 那些, domain, x20 / 你)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 12,798 microseconds
Sentence: “ 你 说 的 是 什么 ？ ”

Oracle Span 1:  你 => 你
Oracle Span 2:  说 => 说-01
Spans:
Span 1-2:  你 => 你
Span 2-3:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  说 => 说-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	说	_	VV	VV	_	5	top	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	是	_	VC	VC	_	0	root	_	_
6	什么	_	PN	PN	_	5	attr	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 说-01, arg0, x11 / 你)

Input(Some(Graph((say :arg1 (说-01 :mode interrogative :arg1 amr-unknown :arg0 你)),ArrayBuffer(Span(2,3,List(0),说,说-01,false), Span(1,2,List(1),你,你,false)),Map(1 -> 你, 0 -> 说-01),Map(x10 -> 说-01, x11 -> 你))),[Ljava.lang.String;@112c2930,Annotation([Ljava.lang.String;@7f426ddd,[Ljava.lang.String;@28e7bb31,[Ljava.lang.String;@6fe04f2a),Annotation([Ljava.lang.String;@1f758e4f,[Ljava.lang.String;@733534f9,[Ledu.cmu.lti.nlp.amr.Dependency;@661e279d),Annotation([Ljava.lang.String;@beabd6b,[Ljava.lang.String;@38de5daf,[Ljava.lang.String;@621624b1),Annotation([Ljava.lang.String;@7523d5a1,[Ljava.lang.String;@2bfc2f8b,[Ledu.cmu.lti.nlp.amr.Entity;@61853c7e))
AMR:
(x10 / 说-01, ARG4, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,861 microseconds
Sentence: “ 夜晚 ， 当 你 望 着 天空 的 时候 ， 既然 我 就 住在 其中 一 颗 星星 上 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  夜晚 => 夜晚
Oracle Span 3:  天空 => 天空
Oracle Span 4:  我 => 我
Oracle Span 5:  星星 => 星星
Oracle Span 6:  望 => 望-01
Spans:
Span 4-5:  你 => 你
Span 1-2:  夜晚 => 夜晚
Span 7-8:  天空 => 天空
Span 12-13:  我 => 我
Span 18-19:  星星 => 星星
Span 5-6:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  夜晚 => 夜晚
Oracle Span 7-8:  天空 => 天空
Oracle Span 12-13:  我 => 我
Oracle Span 18-19:  星星 => 星星
Oracle Span 5-6:  望 => 望-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	夜晚	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	当	_	P	P	_	15	prep	_	_
5	你	_	PN	PN	_	6	nsubj	_	_
6	望	_	VV	VV	_	10	rcmod	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	天空	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	6	cpm	_	_
10	时候	_	NN	NN	_	4	pobj	_	_
11	,	_	PU	PU	_	15	punct	_	_
12	既然	_	CS	CS	_	15	advmod	_	_
13	我	_	PN	PN	_	15	prep	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	住在	_	VV	VV	_	2	ccomp	_	_
16	其中	_	NN	NN	_	19	nn	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	颗	_	M	M	_	19	clf	_	_
19	星星	_	NN	NN	_	20	lobj	_	_
20	上	_	LC	LC	_	15	loc	_	_
21	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x38 / 望-01, arg0, x39 / 你)
(x38 / 望-01, arg1, x40 / 天空)
(x38 / 望-01, time, x41 / 夜晚)

Input(Some(Graph((say :arg1 (condition :arg1 (住-01 :arg0 我 :arg1 (星星 :arg1-of (include-91 :arg2 星星) :quant 1) :time (望-01 :time 夜晚 :arg1 天空 :arg0 你)))),ArrayBuffer(Span(12,13,List(0),我,我,false), Span(18,19,List(1),星星,星星,false), Span(5,6,List(2),望,望-01,false), Span(1,2,List(3),夜晚,夜晚,false), Span(7,8,List(4),天空,天空,false), Span(4,5,List(5),你,你,false)),Map(2 -> 望-01, 5 -> 你, 1 -> 星星, 4 -> 天空, 0 -> 我, 3 -> 夜晚),Map(x40 -> 天空, x34 -> 星星, x39 -> 你, x33 -> 我, x41 -> 夜晚, x38 -> 望-01))),[Ljava.lang.String;@32e5af53,Annotation([Ljava.lang.String;@5980fa73,[Ljava.lang.String;@13ca16bf,[Ljava.lang.String;@5be4be74),Annotation([Ljava.lang.String;@44641d6c,[Ljava.lang.String;@1ae924f1,[Ledu.cmu.lti.nlp.amr.Dependency;@59d5a6fd),Annotation([Ljava.lang.String;@27bcb4ad,[Ljava.lang.String;@4357524b,[Ljava.lang.String;@104a287c),Annotation([Ljava.lang.String;@64dc86c6,[Ljava.lang.String;@26874f2c,[Ledu.cmu.lti.nlp.amr.Entity;@5f3b84bd))
AMR:
(x34 / 星星, mod, x40 / 天空)
(x38 / 望-01, location, x33 / 我)
(x38 / 望-01, location, x40 / 天空)
(x38 / 望-01, manner, x39 / 你)
(x38 / 望-01, time, x41 / 夜晚)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
Decoded in 16,516 microseconds
Sentence: 既然 我 在 其中 一 颗 星星 上 笑 着 ，

Oracle Span 1:  我 => 我
Oracle Span 2:  星星 => 星星
Oracle Span 3:  笑 => 笑-01
Spans:
Span 1-2:  我 => 我
Span 6-7:  星星 => 星星
Span 8-9:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  星星 => 星星
Oracle Span 8-9:  笑 => 笑-01

Dependencies:
1	既然	_	CS	CS	_	9	advmod	_	_
2	我	_	PN	PN	_	9	nsubj	_	_
3	在	_	P	P	_	9	prep	_	_
4	其中	_	NN	NN	_	7	nn	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	7	clf	_	_
7	星星	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	3	plmod	_	_
9	笑	_	VV	VV	_	0	root	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x8 / 笑-01, arg0, x10 / 我)
(x8 / 笑-01, location, x11 / 星星)

Input(Some(Graph((condition :arg1 (笑-01 :location (星星 :arg1-of (include-91 :arg2 星星) :quant 1) :arg0 我)),ArrayBuffer(Span(8,9,List(0),笑,笑-01,false), Span(6,7,List(1),星星,星星,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 星星, 0 -> 笑-01),Map(x10 -> 我, x8 -> 笑-01, x11 -> 星星))),[Ljava.lang.String;@1e734eee,Annotation([Ljava.lang.String;@1e191150,[Ljava.lang.String;@2fbd390,[Ljava.lang.String;@166b11e),Annotation([Ljava.lang.String;@5e68be2,[Ljava.lang.String;@5323999f,[Ledu.cmu.lti.nlp.amr.Dependency;@f18b738),Annotation([Ljava.lang.String;@3bc20984,[Ljava.lang.String;@aca3c85,[Ljava.lang.String;@45eab322),Annotation([Ljava.lang.String;@f017dd0,[Ljava.lang.String;@2424cb9d,[Ledu.cmu.lti.nlp.amr.Entity;@7f51f588))
AMR:
(x8 / 笑-01, location, x11 / 星星)
(x8 / 笑-01, snt4, x10 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,324 microseconds
Sentence: 那么 对 你 来说 ， 就 好象 所有 的 星星 都 在 笑 ， 那么 你 将 看到 的 星星 就 是 会 笑 的 星星 ！ ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  你 => 你
Oracle Span 3:  将 => 将
Oracle Span 4:  就 => 就
Oracle Span 5:  就 => 就
Oracle Span 6:  所有 => 所有
Oracle Span 7:  星星 => 星星
Oracle Span 8:  星星 => 星星
Oracle Span 9:  星星 => 星星
Oracle Span 10:  来说 => 来说-01
Oracle Span 11:  看到 => 看到-01
Oracle Span 12:  笑 => 笑-01
Oracle Span 13:  笑 => 笑-01
Oracle Span 14:  都 => 都
Spans:
Span 22-23:  会 => 会-02
Span 2-3:  你 => 你
Span 16-17:  将 => 将
Span 5-6:  就 => 就
Span 20-21:  就 => 就
Span 7-8:  所有 => 所有
Span 9-10:  星星 => 星星
Span 19-20:  星星 => 星星
Span 25-26:  星星 => 星星
Span 3-4:  来说 => 来说-01
Span 17-18:  看到 => 看到-01
Span 12-13:  笑 => 笑-01
Span 23-24:  笑 => 笑-01
Span 10-11:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 22-23:  会 => 会-02
Oracle Span 2-3:  你 => 你
Oracle Span 16-17:  将 => 将
Oracle Span 5-6:  就 => 就
Oracle Span 20-21:  就 => 就
Oracle Span 7-8:  所有 => 所有
Oracle Span 9-10:  星星 => 星星
Oracle Span 19-20:  星星 => 星星
Oracle Span 25-26:  星星 => 星星
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 17-18:  看到 => 看到-01
Oracle Span 12-13:  笑 => 笑-01
Oracle Span 23-24:  笑 => 笑-01
Oracle Span 10-11:  都 => 都

Dependencies:
1	那么	_	AD	AD	_	22	advmod	_	_
2	对	_	P	P	_	4	prep	_	_
3	你	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	20	rcmod	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	就	_	P	P	_	18	prep	_	_
7	好象	_	NR	NR	_	10	nn	_	_
8	所有	_	DT	DT	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	星星	_	NN	NN	_	13	nsubj	_	_
11	都	_	AD	AD	_	13	advmod	_	_
12	在	_	AD	AD	_	13	advmod	_	_
13	笑	_	VV	VV	_	6	pccomp	_	_
14	,	_	PU	PU	_	18	punct	_	_
15	那么	_	AD	AD	_	18	advmod	_	_
16	你	_	PN	PN	_	18	nsubj	_	_
17	将	_	AD	AD	_	18	advmod	_	_
18	看到	_	VV	VV	_	4	ccomp	_	_
19	的	_	DEC	DEC	_	4	cpm	_	_
20	星星	_	NN	NN	_	22	nsubj	_	_
21	就	_	AD	AD	_	22	advmod	_	_
22	是	_	VC	VC	_	0	root	_	_
23	会	_	VV	VV	_	24	dep	_	_
24	笑	_	VV	VV	_	26	rcmod	_	_
25	的	_	DEC	DEC	_	24	cpm	_	_
26	星星	_	NN	NN	_	22	attr	_	_
27	！	_	PU	PU	_	22	punct	_	_
28	”	_	PU	PU	_	22	punct	_	_

Oracle:
(x44 / 来说-01, arg1, x45 / 你)
(x49 / 笑-01, arg0, x51 / 星星)
(x49 / 笑-01, manner, x50 / 都)
(x51 / 星星, mod, x52 / 所有)
(x53 / 星星, domain, x57 / 星星)
(x53 / 星星, manner, x56 / 就)
(x54 / 笑-01, arg0, x53 / 星星)
(x55 / 会-02, arg0, x54 / 笑-01)
(x58 / 看到-01, arg1, x57 / 星星)
(x58 / 看到-01, time, x61 / 将)

Input(Some(Graph((say :arg1 (condition :arg2 (condition :arg1 (来说-01 :mode expressive :arg2 (像-01 :manner 就 :arg1 (笑-01 :arg0 (星星 :mod 所有) :manner 都)) :arg1 你) :arg2 (星星 :domain (星星 :arg1-of (看到-01 :time 将 :arg0 x45)) :manner 就 :arg0-of (笑-01 :arg0-of 会-02))))),ArrayBuffer(Span(3,4,List(0),来说,来说-01,false), Span(5,6,List(1),就,就,false), Span(12,13,List(2),笑,笑-01,false), Span(9,10,List(3),星星,星星,false), Span(7,8,List(4),所有,所有,false), Span(10,11,List(5),都,都,false), Span(2,3,List(6),你,你,false), Span(19,20,List(7),星星,星星,false), Span(25,26,List(8),星星,星星,false), Span(17,18,List(9),看到,看到-01,false), Span(16,17,List(10),将,将,false), Span(20,21,List(11),就,就,false), Span(23,24,List(12),笑,笑-01,false), Span(22,23,List(13),会,会-02,false)),Map(2 -> 笑-01, 5 -> 都, 12 -> 笑-01, 8 -> 星星, 7 -> 星星, 1 -> 就, 4 -> 所有, 11 -> 就, 6 -> 你, 9 -> 看到-01, 0 -> 来说-01, 10 -> 将, 3 -> 星星, 13 -> 会-02),Map(x52 -> 所有, x61 -> 将, x55 -> 会-02, x49 -> 笑-01, x58 -> 看到-01, x57 -> 星星, x45 -> 你, x51 -> 星星, x54 -> 笑-01, x56 -> 就, x50 -> 都, x44 -> 来说-01, x53 -> 星星, x47 -> 就))),[Ljava.lang.String;@6fb22ae3,Annotation([Ljava.lang.String;@6bd92538,[Ljava.lang.String;@69a373fd,[Ljava.lang.String;@19ae36f4),Annotation([Ljava.lang.String;@6735f210,[Ljava.lang.String;@4567fb2b,[Ledu.cmu.lti.nlp.amr.Dependency;@372954e1),Annotation([Ljava.lang.String;@5fd8dd66,[Ljava.lang.String;@173511ff,[Ljava.lang.String;@6df11e91),Annotation([Ljava.lang.String;@1002d192,[Ljava.lang.String;@9281d19,[Ledu.cmu.lti.nlp.amr.Entity;@36ad5f2a))
AMR:
(x44 / 来说-01, part, x52 / 所有)
(x44 / 来说-01, poss, x45 / 你)
(x49 / 笑-01, manner, x50 / 都)
(x51 / 星星, mod, x50 / 都)
(x51 / 星星, mod, x52 / 所有)
(x52 / 所有, manner, x47 / 就)
(x55 / 会-02, manner, x56 / 就)
(x55 / 会-02, prep-on-behalf, x53 / 星星)
(x55 / 会-02, season, x54 / 笑-01)
(x57 / 星星, mod, x54 / 笑-01)
(x58 / 看到-01, manner, x49 / 笑-01)
(x58 / 看到-01, part, x53 / 星星)
(x58 / 看到-01, time, x61 / 将)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.0.1.2.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1.0.0
Decoded in 57,481 microseconds
Sentence: 这时 ， 他 又 笑 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  笑 => 笑-01
Oracle Span 4:  这时 => 这时
Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph((笑-01 :manner 又 :time 这时 :arg0 他),ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(3,4,List(1),又,又,false), Span(0,1,List(2),这时,这时,false), Span(2,3,List(3),他,他,false)),Map(2 -> 这时, 1 -> 又, 0 -> 笑-01, 3 -> 他),Map(x2 -> 他, x5 -> 又, x4 -> 这时, x0 -> 笑-01))),[Ljava.lang.String;@53cddaf8,Annotation([Ljava.lang.String;@55c50f52,[Ljava.lang.String;@1ccc1026,[Ljava.lang.String;@4044589a),Annotation([Ljava.lang.String;@7de35070,[Ljava.lang.String;@216f01,[Ledu.cmu.lti.nlp.amr.Dependency;@7c901203),Annotation([Ljava.lang.String;@1e721583,[Ljava.lang.String;@79f5a6ed,[Ljava.lang.String;@722787b5),Annotation([Ljava.lang.String;@edb83f8,[Ljava.lang.String;@8b41ad,[Ledu.cmu.lti.nlp.amr.Entity;@541d4d9f))
AMR:
(x0 / 笑-01, ARG6, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 19,160 microseconds
Sentence: “ 那么 ， 在 你 得到 了 安慰 之后 （ 人们 总是 会 自我 安慰 的 ） 你 就 会 因为 认识 了 我 而 感到 高兴 。

Oracle Span 1:  人们 => 人们
Oracle Span 2:  会 => 会-02
Oracle Span 3:  会 => 会-02
Oracle Span 4:  你 => 你
Oracle Span 5:  安慰 => 安慰-01
Oracle Span 6:  安慰 => 安慰-01
Oracle Span 7:  就 => 就
Oracle Span 8:  得到 => 得到-01
Oracle Span 9:  总是 => 总是
Oracle Span 10:  感到 => 感到-01
Oracle Span 11:  我 => 我
Oracle Span 12:  认识 => 认识-01
Oracle Span 13:  高兴 => 高兴-01
Spans:
Span 10-11:  人们 => 人们
Span 12-13:  会 => 会-02
Span 19-20:  会 => 会-02
Span 4-5:  你 => 你
Span 7-8:  安慰 => 安慰-01
Span 14-15:  安慰 => 安慰-01
Span 18-19:  就 => 就
Span 5-6:  得到 => 得到-01
Span 11-12:  总是 => 总是
Span 25-26:  感到 => 感到-01
Span 23-24:  我 => 我
Span 21-22:  认识 => 认识-01
Span 26-27:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  人们 => 人们
Oracle Span 12-13:  会 => 会-02
Oracle Span 19-20:  会 => 会-02
Oracle Span 4-5:  你 => 你
Oracle Span 7-8:  安慰 => 安慰-01
Oracle Span 14-15:  安慰 => 安慰-01
Oracle Span 18-19:  就 => 就
Oracle Span 5-6:  得到 => 得到-01
Oracle Span 11-12:  总是 => 总是
Oracle Span 25-26:  感到 => 感到-01
Oracle Span 23-24:  我 => 我
Oracle Span 21-22:  认识 => 认识-01
Oracle Span 26-27:  高兴 => 高兴-01

Dependencies:
1	“	_	PU	PU	_	26	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	在	_	P	P	_	6	prep	_	_
5	你	_	PN	PN	_	4	pobj	_	_
6	得到	_	VV	VV	_	26	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	安慰	_	NN	NN	_	9	lobj	_	_
9	之后	_	LC	LC	_	6	loc	_	_
10	（	_	PU	PU	_	13	punct	_	_
11	人们	_	NN	NN	_	13	nsubj	_	_
12	总是	_	AD	AD	_	13	advmod	_	_
13	会	_	VV	VV	_	6	dep	_	_
14	自我	_	AD	AD	_	15	advmod	_	_
15	安慰	_	VV	VV	_	13	dobj	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	）	_	PU	PU	_	13	punct	_	_
18	你	_	PN	PN	_	26	nsubj	_	_
19	就	_	P	P	_	26	prep	_	_
20	会	_	VV	VV	_	19	pccomp	_	_
21	因为	_	P	P	_	26	prep	_	_
22	认识	_	VV	VV	_	21	pccomp	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	我	_	PN	PN	_	22	dobj	_	_
25	而	_	MSP	MSP	_	26	prtmod	_	_
26	感到	_	VV	VV	_	0	root	_	_
27	高兴	_	VA	VA	_	26	ccomp	_	_
28	。	_	PU	PU	_	26	punct	_	_

Oracle:
(x40 / 得到-01, arg0, x41 / 你)
(x40 / 得到-01, arg1, x42 / 安慰-01)
(x44 / 会-02, arg0, x46 / 安慰-01)
(x44 / 会-02, manner, x45 / 总是)
(x46 / 安慰-01, arg0, x47 / 人们)
(x49 / 会-02, arg0, x50 / 感到-01)
(x49 / 会-02, manner, x51 / 就)
(x50 / 感到-01, arg1, x53 / 高兴-01)
(x50 / 感到-01, cause, x54 / 认识-01)
(x54 / 认识-01, arg1, x56 / 我)

Input(Some(Graph((say :arg1 (temporal :arg1 (得到-01 :arg0-of (mean :arg1 (会-02 :arg0 (安慰-01 :arg1 x47 :arg0 人们) :manner 总是)) :arg1 安慰-01 :arg0 你) :arg2 (会-02 :manner 就 :arg0 (感到-01 :cause (认识-01 :arg1 我 :arg0 x41) :arg1 (高兴-01 :arg0 x41) :arg0 x41)))),ArrayBuffer(Span(5,6,List(0),得到,得到-01,false), Span(12,13,List(1),会,会-02,false), Span(7,8,List(2),安慰,安慰-01,false), Span(10,11,List(3),人们,人们,false), Span(11,12,List(4),总是,总是,false), Span(14,15,List(5),安慰,安慰-01,false), Span(4,5,List(6),你,你,false), Span(19,20,List(7),会,会-02,false), Span(18,19,List(8),就,就,false), Span(25,26,List(9),感到,感到-01,false), Span(21,22,List(10),认识,认识-01,false), Span(23,24,List(11),我,我,false), Span(26,27,List(12),高兴,高兴-01,false)),Map(2 -> 安慰-01, 5 -> 安慰-01, 12 -> 高兴-01, 8 -> 就, 7 -> 会-02, 1 -> 会-02, 4 -> 总是, 11 -> 我, 6 -> 你, 9 -> 感到-01, 0 -> 得到-01, 10 -> 认识-01, 3 -> 人们),Map(x46 -> 安慰-01, x49 -> 会-02, x40 -> 得到-01, x51 -> 就, x45 -> 总是, x54 -> 认识-01, x42 -> 安慰-01, x56 -> 我, x41 -> 你, x50 -> 感到-01, x44 -> 会-02, x53 -> 高兴-01, x47 -> 人们))),[Ljava.lang.String;@1a497286,Annotation([Ljava.lang.String;@48dff674,[Ljava.lang.String;@120350eb,[Ljava.lang.String;@2ccc9681),Annotation([Ljava.lang.String;@7d401cdc,[Ljava.lang.String;@4a9b3956,[Ledu.cmu.lti.nlp.amr.Dependency;@4217bce6),Annotation([Ljava.lang.String;@aa752bb,[Ljava.lang.String;@77fc19cf,[Ljava.lang.String;@643ecfef),Annotation([Ljava.lang.String;@1b31af02,[Ljava.lang.String;@2bb31455,[Ledu.cmu.lti.nlp.amr.Entity;@3c16528d))
AMR:
(x40 / 得到-01, direction, x41 / 你)
(x40 / 得到-01, prep-through, x46 / 安慰-01)
(x44 / 会-02, manner, x45 / 总是)
(x44 / 会-02, prep-through, x42 / 安慰-01)
(x45 / 总是, location, x47 / 人们)
(x46 / 安慰-01, example, x47 / 人们)
(x49 / 会-02, conj-as-if, x42 / 安慰-01)
(x49 / 会-02, conj-as-if, x54 / 认识-01)
(x49 / 会-02, manner, x51 / 就)
(x50 / 感到-01, ARG3, x53 / 高兴-01)
(x50 / 感到-01, extent, x56 / 我)
(x50 / 感到-01, time, x54 / 认识-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.0.2.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.2.1
WARNING: makeIds can't find span Id: 0.0.1.0.1
Decoded in 90,269 microseconds
Sentence: 你 将 永远 是 我 的 朋友 。

Oracle Span 1:  你 => 你
Oracle Span 2:  将 => 将
Oracle Span 3:  我 => 我
Oracle Span 4:  朋友 => 朋友
Oracle Span 5:  永远 => 永远
Spans:
Span 0-1:  你 => 你
Span 1-2:  将 => 将
Span 4-5:  我 => 我
Span 6-7:  朋友 => 朋友
Span 2-3:  永远 => 永远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  将 => 将
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 2-3:  永远 => 永远

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	将	_	AD	AD	_	4	advmod	_	_
3	永远	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	朋友	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 朋友, domain, x6 / 你)
(x0 / 朋友, poss, x5 / 我)
(x0 / 朋友, time, x7 / 永远)
(x0 / 朋友, time, x8 / 将)

Input(Some(Graph((朋友 :time 将 :time 永远 :domain 你 :poss 我),ArrayBuffer(Span(6,7,List(0),朋友,朋友,false), Span(1,2,List(1),将,将,false), Span(2,3,List(2),永远,永远,false), Span(0,1,List(3),你,你,false), Span(4,5,List(4),我,我,false)),Map(2 -> 永远, 1 -> 将, 4 -> 我, 0 -> 朋友, 3 -> 你),Map(x5 -> 我, x8 -> 将, x7 -> 永远, x6 -> 你, x0 -> 朋友))),[Ljava.lang.String;@2e45a357,Annotation([Ljava.lang.String;@389a5022,[Ljava.lang.String;@bb8ead8,[Ljava.lang.String;@5b44318),Annotation([Ljava.lang.String;@6e807e2,[Ljava.lang.String;@6c995c5d,[Ledu.cmu.lti.nlp.amr.Dependency;@203b953c),Annotation([Ljava.lang.String;@730bea0,[Ljava.lang.String;@41a16eb3,[Ljava.lang.String;@677cb96e),Annotation([Ljava.lang.String;@1b1252c8,[Ljava.lang.String;@19d53ab4,[Ledu.cmu.lti.nlp.amr.Entity;@53cb0bcb))
AMR:
(x0 / 朋友, domain, x6 / 你)
(x0 / 朋友, poss, x5 / 我)
(x0 / 朋友, time, x7 / 永远)
(x0 / 朋友, time, x8 / 将)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,177 microseconds
Sentence: 你 就 会 想要 同 我 一起 笑 。

Oracle Span 1:  一起 => 一起
Oracle Span 2:  会 => 会-02
Oracle Span 3:  你 => 你
Oracle Span 4:  同 => 同-01
Oracle Span 5:  想要 => 想要-01
Oracle Span 6:  我 => 我
Oracle Span 7:  笑 => 笑-01
Spans:
Span 6-7:  一起 => 一起
Span 2-3:  会 => 会-02
Span 0-1:  你 => 你
Span 4-5:  同 => 同-01
Span 3-4:  想要 => 想要-01
Span 5-6:  我 => 我
Span 7-8:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一起 => 一起
Oracle Span 2-3:  会 => 会-02
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  同 => 同-01
Oracle Span 3-4:  想要 => 想要-01
Oracle Span 5-6:  我 => 我
Oracle Span 7-8:  笑 => 笑-01

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	想要	_	VV	VV	_	0	root	_	_
5	同	_	P	P	_	8	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	一起	_	AD	AD	_	8	advmod	_	_
8	笑	_	VV	VV	_	4	ccomp	_	_
9	。	_	PU	PU	_	4	punct	_	_
10	你	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 你)
(x0 / 会-02, arg1, x3 / 想要-01)
(x10 / 笑-01, manner, x11 / 同-01)
(x10 / 笑-01, manner, x13 / 一起)
(x11 / 同-01, arg0, x12 / 我)
(x3 / 想要-01, arg1, x10 / 笑-01)

Input(Some(Graph((会-02 :arg1 (想要-01 :arg1 (笑-01 :manner 一起 :manner (同-01 :arg0 我)) :arg0 x2) :arg0 你),ArrayBuffer(Span(2,3,List(0),会,会-02,false), Span(3,4,List(1),想要,想要-01,false), Span(7,8,List(2),笑,笑-01,false), Span(6,7,List(3),一起,一起,false), Span(4,5,List(4),同,同-01,false), Span(5,6,List(5),我,我,false), Span(0,1,List(6),你,你,false)),Map(2 -> 笑-01, 5 -> 我, 1 -> 想要-01, 4 -> 同-01, 6 -> 你, 0 -> 会-02, 3 -> 一起),Map(x2 -> 你, x10 -> 笑-01, x13 -> 一起, x12 -> 我, x11 -> 同-01, x3 -> 想要-01, x0 -> 会-02))),[Ljava.lang.String;@51fe7f15,Annotation([Ljava.lang.String;@5873f3f0,[Ljava.lang.String;@684372d0,[Ljava.lang.String;@63dda940),Annotation([Ljava.lang.String;@41f964f9,[Ljava.lang.String;@652e345,[Ledu.cmu.lti.nlp.amr.Dependency;@7574d4ad),Annotation([Ljava.lang.String;@7bede4ea,[Ljava.lang.String;@713999c2,[Ljava.lang.String;@6060146b),Annotation([Ljava.lang.String;@33627576,[Ljava.lang.String;@27bc1d44,[Ledu.cmu.lti.nlp.amr.Entity;@1af677f8))
AMR:
(x0 / 会-02, accompanier, x3 / 想要-01)
(x10 / 笑-01, manner, x11 / 同-01)
(x10 / 笑-01, manner, x13 / 一起)
(x11 / 同-01, condition, x12 / 我)
(x3 / 想要-01, accompanier, x11 / 同-01)
(x3 / 想要-01, quant, x2 / 你)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 22,180 microseconds
Sentence: 有时 ， 你 会 为了 快乐 而 不知不觉 地 打开 窗户 。 你 的 朋友们 会 奇怪 地 看 着 你 笑 着 仰望 天空 。

Oracle Span 1:  不知不觉 => 不知不觉
Oracle Span 2:  仰望 => 仰望-01
Oracle Span 3:  会 => 会-02
Oracle Span 4:  会 => 会-02
Oracle Span 5:  你 => 你
Oracle Span 6:  天空 => 天空
Oracle Span 7:  奇怪 => 奇怪-02
Oracle Span 8:  快乐 => 快乐
Oracle Span 9:  打开 => 打开-01
Oracle Span 10:  有时 => 有时
Oracle Span 11:  朋友们 => 朋友们
Oracle Span 12:  看 => 看-02
Oracle Span 13:  窗户 => 窗户
Oracle Span 14:  笑 => 笑-01
Spans:
Span 7-8:  不知不觉 => 不知不觉
Span 23-24:  仰望 => 仰望-01
Span 3-4:  会 => 会-02
Span 15-16:  会 => 会-02
Span 2-3:  你 => 你
Span 24-25:  天空 => 天空
Span 16-17:  奇怪 => 奇怪-02
Span 5-6:  快乐 => 快乐
Span 9-10:  打开 => 打开-01
Span 0-1:  有时 => 有时
Span 14-15:  朋友们 => 朋友们
Span 18-19:  看 => 看-02
Span 10-11:  窗户 => 窗户
Span 21-22:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  不知不觉 => 不知不觉
Oracle Span 23-24:  仰望 => 仰望-01
Oracle Span 3-4:  会 => 会-02
Oracle Span 15-16:  会 => 会-02
Oracle Span 2-3:  你 => 你
Oracle Span 24-25:  天空 => 天空
Oracle Span 16-17:  奇怪 => 奇怪-02
Oracle Span 5-6:  快乐 => 快乐
Oracle Span 9-10:  打开 => 打开-01
Oracle Span 0-1:  有时 => 有时
Oracle Span 14-15:  朋友们 => 朋友们
Oracle Span 18-19:  看 => 看-02
Oracle Span 10-11:  窗户 => 窗户
Oracle Span 21-22:  笑 => 笑-01

Dependencies:
1	有时	_	AD	AD	_	19	advmod	_	_
2	,	_	PU	PU	_	19	punct	_	_
3	你	_	PN	PN	_	4	nsubj	_	_
4	会	_	VV	VV	_	19	dep	_	_
5	为了	_	P	P	_	4	prep	_	_
6	快乐	_	VA	VA	_	10	dvpmod	_	_
7	而	_	CC	CC	_	6	cc	_	_
8	不知不觉	_	VA	VA	_	6	dep	_	_
9	地	_	DEV	DEV	_	6	dvpm	_	_
10	打开	_	VV	VV	_	5	pccomp	_	_
11	窗户	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	你	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	朋友们	_	NN	NN	_	19	nsubj	_	_
16	会	_	VV	VV	_	19	mmod	_	_
17	奇怪	_	VA	VA	_	19	dvpmod	_	_
18	地	_	DEV	DEV	_	17	dvpm	_	_
19	看	_	VV	VV	_	0	root	_	_
20	着	_	AS	AS	_	19	asp	_	_
21	你	_	PN	PN	_	19	dobj	_	_
22	笑	_	VV	VV	_	19	dep	_	_
23	着	_	AS	AS	_	22	asp	_	_
24	仰望	_	VV	VV	_	22	dep	_	_
25	天空	_	NN	NN	_	24	dobj	_	_
26	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x25 / 会-02, arg0, x28 / 打开-01)
(x25 / 会-02, time, x34 / 有时)
(x28 / 打开-01, arg0, x29 / 你)
(x28 / 打开-01, arg1, x30 / 窗户)
(x28 / 打开-01, manner, x31 / 不知不觉)
(x28 / 打开-01, purpose, x32 / 快乐)
(x35 / 会-02, arg0, x36 / 看-02)
(x36 / 看-02, arg0, x37 / 朋友们)
(x36 / 看-02, arg1, x40 / 仰望-01)
(x36 / 看-02, manner, x39 / 奇怪-02)
(x40 / 仰望-01, arg1, x43 / 天空)
(x40 / 仰望-01, manner, x44 / 笑-01)

Input(Some(Graph((multi-sentence :snt1 (会-02 :time 有时 :arg0 (打开-01 :purpose 快乐 :manner 不知不觉 :arg1 窗户 :arg0 你)) :snt2 (会-02 :arg0 (看-02 :arg1 (仰望-01 :manner (笑-01 :arg0 x29) :arg1 天空 :arg0 x29) :manner 奇怪-02 :arg0 (朋友们 :poss x29)))),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(0,1,List(1),有时,有时,false), Span(9,10,List(2),打开,打开-01,false), Span(5,6,List(3),快乐,快乐,false), Span(7,8,List(4),不知不觉,不知不觉,false), Span(10,11,List(5),窗户,窗户,false), Span(2,3,List(6),你,你,false), Span(15,16,List(7),会,会-02,false), Span(18,19,List(8),看,看-02,false), Span(23,24,List(9),仰望,仰望-01,false), Span(21,22,List(10),笑,笑-01,false), Span(24,25,List(11),天空,天空,false), Span(16,17,List(12),奇怪,奇怪-02,false), Span(14,15,List(13),朋友们,朋友们,false)),Map(2 -> 打开-01, 5 -> 窗户, 12 -> 奇怪-02, 8 -> 看-02, 7 -> 会-02, 1 -> 有时, 4 -> 不知不觉, 11 -> 天空, 6 -> 你, 9 -> 仰望-01, 0 -> 会-02, 10 -> 笑-01, 3 -> 快乐, 13 -> 朋友们),Map(x28 -> 打开-01, x34 -> 有时, x40 -> 仰望-01, x37 -> 朋友们, x43 -> 天空, x25 -> 会-02, x31 -> 不知不觉, x39 -> 奇怪-02, x30 -> 窗户, x36 -> 看-02, x44 -> 笑-01, x32 -> 快乐, x35 -> 会-02, x29 -> 你))),[Ljava.lang.String;@7a55fb81,Annotation([Ljava.lang.String;@5a3cf878,[Ljava.lang.String;@1d2d8846,[Ljava.lang.String;@34cd65ac),Annotation([Ljava.lang.String;@61911947,[Ljava.lang.String;@5c53c235,[Ledu.cmu.lti.nlp.amr.Dependency;@2dcd0e41),Annotation([Ljava.lang.String;@7272ee51,[Ljava.lang.String;@1b409a79,[Ljava.lang.String;@5940b14e),Annotation([Ljava.lang.String;@1cba0321,[Ljava.lang.String;@795f6681,[Ledu.cmu.lti.nlp.amr.Entity;@66d3b881))
AMR:
(x25 / 会-02, direction, x28 / 打开-01)
(x25 / 会-02, time, x34 / 有时)
(x28 / 打开-01, degree, x29 / 你)
(x28 / 打开-01, manner, x31 / 不知不觉)
(x28 / 打开-01, purpose, x32 / 快乐)
(x28 / 打开-01, quant, x30 / 窗户)
(x35 / 会-02, prep-following, x36 / 看-02)
(x36 / 看-02, ARG2, x40 / 仰望-01)
(x36 / 看-02, beneficiary, x37 / 朋友们)
(x36 / 看-02, manner, x39 / 奇怪-02)
(x39 / 奇怪-02, age, x25 / 会-02)
(x40 / 仰望-01, manner, x44 / 笑-01)
(x40 / 仰望-01, quant, x43 / 天空)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.2.2
WARNING: makeIds can't find span Id: 0.1.0.2.1
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 76,555 microseconds
Sentence: 那时 ， 你 就 可以 对 他们 说 ： ‘ 是 的 ， 星星 总是 引 我 欢笑 ！ ’ 他们 会 以为 你 发疯 了 。

Oracle Span 1:  他们 => 他们
Oracle Span 2:  他们 => 他们
Oracle Span 3:  以为 => 以为-02
Oracle Span 4:  会 => 会-02
Oracle Span 5:  你 => 你
Oracle Span 6:  发疯 => 发疯-01
Oracle Span 7:  可以 => 可以-03
Oracle Span 8:  引 => 引-01
Oracle Span 9:  总是 => 总是
Oracle Span 10:  星星 => 星星
Oracle Span 11:  欢笑 => 欢笑-01
Oracle Span 12:  说 => 说-01
Oracle Span 13:  那时 => 那时
Spans:
Span 6-7:  他们 => 他们
Span 20-21:  他们 => 他们
Span 22-23:  以为 => 以为-02
Span 21-22:  会 => 会-02
Span 2-3:  你 => 你
Span 24-25:  发疯 => 发疯-01
Span 4-5:  可以 => 可以-03
Span 15-16:  引 => 引-01
Span 14-15:  总是 => 总是
Span 13-14:  星星 => 星星
Span 17-18:  欢笑 => 欢笑-01
Span 7-8:  说 => 说-01
Span 0-1:  那时 => 那时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  他们 => 他们
Oracle Span 20-21:  他们 => 他们
Oracle Span 22-23:  以为 => 以为-02
Oracle Span 21-22:  会 => 会-02
Oracle Span 2-3:  你 => 你
Oracle Span 24-25:  发疯 => 发疯-01
Oracle Span 4-5:  可以 => 可以-03
Oracle Span 15-16:  引 => 引-01
Oracle Span 14-15:  总是 => 总是
Oracle Span 13-14:  星星 => 星星
Oracle Span 17-18:  欢笑 => 欢笑-01
Oracle Span 7-8:  说 => 说-01
Oracle Span 0-1:  那时 => 那时

Dependencies:
1	那时	_	NT	NT	_	8	dep	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	可以	_	VV	VV	_	8	mmod	_	_
6	对	_	P	P	_	8	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	‘	_	PU	PU	_	11	punct	_	_
11	是	_	VC	VC	_	8	ccomp	_	_
12	的	_	SP	SP	_	8	dep	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	星星	_	NR	NR	_	16	nsubj	_	_
15	总是	_	AD	AD	_	16	advmod	_	_
16	引	_	VV	VV	_	8	conj	_	_
17	我	_	PN	PN	_	16	dobj	_	_
18	欢笑	_	VV	VV	_	16	dep	_	_
19	！	_	PU	PU	_	8	punct	_	_
20	’	_	PU	PU	_	8	punct	_	_
21	他们	_	PN	PN	_	23	nsubj	_	_
22	会	_	VV	VV	_	23	mmod	_	_
23	以为	_	VV	VV	_	8	conj	_	_
24	你	_	PN	PN	_	23	dobj	_	_
25	发疯	_	VV	VV	_	23	dep	_	_
26	了	_	AS	AS	_	25	asp	_	_
27	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x27 / 可以-03, arg0, x50 / 你)
(x27 / 可以-03, arg1, x51 / 说-01)
(x27 / 可以-03, arg3, x61 / 他们)
(x27 / 可以-03, time, x48 / 那时)
(x42 / 会-02, arg0, x43 / 以为-02)
(x43 / 以为-02, arg0, x44 / 他们)
(x43 / 以为-02, arg2, x46 / 发疯-01)
(x56 / 引-01, arg0, x57 / 星星)
(x56 / 引-01, arg2, x59 / 欢笑-01)
(x56 / 引-01, manner, x60 / 总是)

Input(Some(Graph((and :op (可以-03 :arg3 他们 :arg1 (说-01 :arg1 (and :mode (expressive :op 是的 :op (引-01 :manner 总是 :arg2 欢笑-01 :arg1 x50 :arg0 星星))) :arg0 x50) :arg0 你 :time 那时) :op (会-02 :arg0 (以为-02 :arg2 (发疯-01 :arg0 x33) :arg1 x33 :arg0 他们))),ArrayBuffer(Span(4,5,List(0),可以,可以-03,false), Span(6,7,List(1),他们,他们,false), Span(7,8,List(2),说,说-01,false), Span(15,16,List(3),引,引-01,false), Span(14,15,List(4),总是,总是,false), Span(17,18,List(5),欢笑,欢笑-01,false), Span(13,14,List(6),星星,星星,false), Span(2,3,List(7),你,你,false), Span(0,1,List(8),那时,那时,false), Span(21,22,List(9),会,会-02,false), Span(22,23,List(10),以为,以为-02,false), Span(24,25,List(11),发疯,发疯-01,false), Span(20,21,List(12),他们,他们,false)),Map(2 -> 说-01, 5 -> 欢笑-01, 12 -> 他们, 8 -> 那时, 7 -> 你, 1 -> 他们, 4 -> 总是, 11 -> 发疯-01, 6 -> 星星, 9 -> 会-02, 0 -> 可以-03, 10 -> 以为-02, 3 -> 引-01),Map(x46 -> 发疯-01, x61 -> 他们, x43 -> 以为-02, x57 -> 星星, x51 -> 说-01, x60 -> 总是, x48 -> 那时, x27 -> 可以-03, x42 -> 会-02, x56 -> 引-01, x50 -> 你, x59 -> 欢笑-01, x44 -> 他们))),[Ljava.lang.String;@3a45afd4,Annotation([Ljava.lang.String;@762a10b6,[Ljava.lang.String;@74431b9c,[Ljava.lang.String;@f2fb225),Annotation([Ljava.lang.String;@1883871b,[Ljava.lang.String;@3e0a9b1d,[Ledu.cmu.lti.nlp.amr.Dependency;@52f9e8bb),Annotation([Ljava.lang.String;@2035d65b,[Ljava.lang.String;@240a2619,[Ljava.lang.String;@4e3283f6),Annotation([Ljava.lang.String;@539316bb,[Ljava.lang.String;@5d1a859c,[Ledu.cmu.lti.nlp.amr.Entity;@28554ac8))
AMR:
(x27 / 可以-03, prep-out, x61 / 他们)
(x27 / 可以-03, scale, x50 / 你)
(x27 / 可以-03, time, x48 / 那时)
(x42 / 会-02, year, x43 / 以为-02)
(x43 / 以为-02, prep-through, x44 / 他们)
(x43 / 以为-02, prep-through, x59 / 欢笑-01)
(x43 / 以为-02, year, x46 / 发疯-01)
(x51 / 说-01, prep-out, x61 / 他们)
(x56 / 引-01, manner, x60 / 总是)
(x56 / 引-01, prep-through, x51 / 说-01)
(x56 / 引-01, prep-through, x57 / 星星)
(x56 / 引-01, year, x59 / 欢笑-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1.0.1
WARNING: makeIds can't find span Id: 0.0.2.1.0.1.3
WARNING: makeIds can't find span Id: 0.0.2.1.0.1.2
WARNING: makeIds can't find span Id: 0.0.2.1.0.1.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 69,817 microseconds
Sentence: 我 的 恶作剧 将 使 你 难堪 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  使 => 使-01
Oracle Span 3:  恶作剧 => 恶作剧-01
Oracle Span 4:  我 => 我
Oracle Span 5:  难堪 => 难堪-01
Spans:
Span 5-6:  你 => 你
Span 4-5:  使 => 使-01
Span 2-3:  恶作剧 => 恶作剧-01
Span 0-1:  我 => 我
Span 6-7:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 4-5:  使 => 使-01
Oracle Span 2-3:  恶作剧 => 恶作剧-01
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  难堪 => 难堪-01

Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	恶作剧	_	NN	NN	_	5	nsubj	_	_
4	将	_	AD	AD	_	5	advmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	你	_	PN	PN	_	8	nsubj	_	_
7	难堪	_	NR	NR	_	8	nsubj	_	_
8	…	_	VA	VA	_	5	ccomp	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x14 / 使-01, arg0, x15 / 恶作剧-01)
(x14 / 使-01, arg1, x17 / 你)
(x14 / 使-01, arg2, x18 / 难堪-01)
(x15 / 恶作剧-01, poss, x16 / 我)

Input(Some(Graph((say :arg1 (使-01 :arg2 (难堪-01 :arg0 x17) :arg1 你 :arg0 (恶作剧-01 :poss 我))),ArrayBuffer(Span(4,5,List(0),使,使-01,false), Span(6,7,List(1),难堪,难堪-01,false), Span(5,6,List(2),你,你,false), Span(2,3,List(3),恶作剧,恶作剧-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 你, 1 -> 难堪-01, 4 -> 我, 0 -> 使-01, 3 -> 恶作剧-01),Map(x16 -> 我, x15 -> 恶作剧-01, x18 -> 难堪-01, x14 -> 使-01, x17 -> 你))),[Ljava.lang.String;@72224107,Annotation([Ljava.lang.String;@394fb736,[Ljava.lang.String;@3070f3e6,[Ljava.lang.String;@3271ec2a),Annotation([Ljava.lang.String;@52bba91a,[Ljava.lang.String;@1689527c,[Ledu.cmu.lti.nlp.amr.Dependency;@21516c88),Annotation([Ljava.lang.String;@1c7cd434,[Ljava.lang.String;@13004dd8,[Ljava.lang.String;@4fc6e776),Annotation([Ljava.lang.String;@65d9e72a,[Ljava.lang.String;@1f7e52d1,[Ledu.cmu.lti.nlp.amr.Entity;@e01a26b))
AMR:
(x14 / 使-01, prep-along-with, x17 / 你)
(x14 / 使-01, prep-along-with, x18 / 难堪-01)
(x14 / 使-01, time, x15 / 恶作剧-01)
(x15 / 恶作剧-01, poss, x16 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 10,450 microseconds
Sentence: 这时 ， 他 又 笑 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  又 => 又
Oracle Span 3:  笑 => 笑-01
Oracle Span 4:  这时 => 这时
Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph((笑-01 :manner 又 :time 这时 :arg0 他),ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(3,4,List(1),又,又,false), Span(0,1,List(2),这时,这时,false), Span(2,3,List(3),他,他,false)),Map(2 -> 这时, 1 -> 又, 0 -> 笑-01, 3 -> 他),Map(x2 -> 他, x5 -> 又, x4 -> 这时, x0 -> 笑-01))),[Ljava.lang.String;@7604198a,Annotation([Ljava.lang.String;@5cce40d7,[Ljava.lang.String;@314b7945,[Ljava.lang.String;@32da97fd),Annotation([Ljava.lang.String;@64440065,[Ljava.lang.String;@4aa22cc2,[Ledu.cmu.lti.nlp.amr.Dependency;@2049e582),Annotation([Ljava.lang.String;@464aeb09,[Ljava.lang.String;@2c99c8d,[Ljava.lang.String;@59d6642a),Annotation([Ljava.lang.String;@365cef67,[Ljava.lang.String;@27df5806,[Ledu.cmu.lti.nlp.amr.Entity;@69bc9584))
AMR:
(x0 / 笑-01, ARG6, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,867 microseconds
Sentence: “ 这 就 好象 我 并 没有 给 你 星星 ， 而 是 给 你 一 大 堆 会 笑 出 声 来 的 小 铃铛 … ”

Oracle Span 1:  会 => 会-01
Oracle Span 2:  你 => 你
Oracle Span 3:  堆 => 堆
Oracle Span 4:  大 => 大
Oracle Span 5:  小 => 小-01
Oracle Span 6:  就 => 就
Oracle Span 7:  我 => 我
Oracle Span 8:  星星 => 星星
Oracle Span 9:  笑 => 笑-01
Oracle Span 10:  给 => 给-01
Oracle Span 11:  给 => 给-01
Oracle Span 12:  这 => 这
Oracle Span 13:  铃铛 => 铃铛
Spans:
Span 18-19:  会 => 会-01
Span 8-9:  你 => 你
Span 17-18:  堆 => 堆
Span 16-17:  大 => 大
Span 24-25:  小 => 小-01
Span 2-3:  就 => 就
Span 4-5:  我 => 我
Span 9-10:  星星 => 星星
Span 19-20:  笑 => 笑-01
Span 7-8:  给 => 给-01
Span 13-14:  给 => 给-01
Span 1-2:  这 => 这
Span 25-26:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  会 => 会-01
Oracle Span 8-9:  你 => 你
Oracle Span 17-18:  堆 => 堆
Oracle Span 16-17:  大 => 大
Oracle Span 24-25:  小 => 小-01
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  我 => 我
Oracle Span 9-10:  星星 => 星星
Oracle Span 19-20:  笑 => 笑-01
Oracle Span 7-8:  给 => 给-01
Oracle Span 13-14:  给 => 给-01
Oracle Span 1-2:  这 => 这
Oracle Span 25-26:  铃铛 => 铃铛

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	好象	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	并	_	CC	CC	_	4	cc	_	_
7	没有	_	VE	VE	_	4	conj	_	_
8	给	_	P	P	_	10	prep	_	_
9	你	_	PN	PN	_	8	pobj	_	_
10	星星	_	NN	NN	_	7	dobj	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	而	_	MSP	MSP	_	13	prtmod	_	_
13	是	_	VC	VC	_	4	conj	_	_
14	给	_	P	P	_	27	assmod	_	_
15	你	_	PN	PN	_	18	nn	_	_
16	一	_	CD	CD	_	18	nummod	_	_
17	大	_	JJ	JJ	_	18	amod	_	_
18	堆	_	NN	NN	_	21	nsubj	_	_
19	会	_	VV	VV	_	21	mmod	_	_
20	笑	_	VV	VV	_	21	mmod	_	_
21	出	_	VV	VV	_	23	lccomp	_	_
22	声	_	NN	NN	_	21	dobj	_	_
23	来	_	LC	LC	_	14	plmod	_	_
24	的	_	DEG	DEG	_	14	assm	_	_
25	小	_	JJ	JJ	_	27	amod	_	_
26	铃铛	_	NN	NN	_	27	nn	_	_
27	…	_	NN	NN	_	13	attr	_	_
28	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x65 / 给-01, arg0, x67 / 我)
(x65 / 给-01, arg1, x68 / 星星)
(x65 / 给-01, arg2, x69 / 你)
(x70 / 给-01, arg1, x71 / 铃铛)
(x71 / 铃铛, mod, x72 / 小-01)
(x71 / 铃铛, unit, x82 / 堆)
(x73 / 笑-01, arg0, x71 / 铃铛)
(x76 / 会-01, arg0, x73 / 笑-01)
(x82 / 堆, mod, x83 / 大)

Input(Some(Graph((say :arg1 (像-01 :manner 就 :arg0 这 :arg1 (contrast :arg1 (给-01 :arg2 你 :arg1 星星 :arg0 我 :polarity -) :arg2 (给-01 :arg0 x67 :arg2 x69 :arg1 (铃铛 :unit (堆 :mod 大) :quant 1 :arg0-of (笑-01 :arg0-of 会-01 :degree (出声-01 :arg0 x71)) :mod 小-01))))),ArrayBuffer(Span(2,3,List(0),就,就,false), Span(1,2,List(1),这,这,false), Span(7,8,List(2),给,给-01,false), Span(8,9,List(3),你,你,false), Span(9,10,List(4),星星,星星,false), Span(4,5,List(5),我,我,false), Span(13,14,List(6),给,给-01,false), Span(25,26,List(7),铃铛,铃铛,false), Span(17,18,List(8),堆,堆,false), Span(16,17,List(9),大,大,false), Span(19,20,List(10),笑,笑-01,false), Span(18,19,List(11),会,会-01,false), Span(24,25,List(12),小,小-01,false)),Map(2 -> 给-01, 5 -> 我, 12 -> 小-01, 8 -> 堆, 7 -> 铃铛, 1 -> 这, 4 -> 星星, 11 -> 会-01, 6 -> 给-01, 9 -> 大, 0 -> 就, 10 -> 笑-01, 3 -> 你),Map(x73 -> 笑-01, x67 -> 我, x76 -> 会-01, x63 -> 这, x72 -> 小-01, x69 -> 你, x68 -> 星星, x83 -> 大, x62 -> 就, x71 -> 铃铛, x65 -> 给-01, x82 -> 堆, x70 -> 给-01))),[Ljava.lang.String;@3214bad,Annotation([Ljava.lang.String;@52d7ab79,[Ljava.lang.String;@f95d64d,[Ljava.lang.String;@288728e),Annotation([Ljava.lang.String;@b7d2d51,[Ljava.lang.String;@641ed324,[Ledu.cmu.lti.nlp.amr.Dependency;@45984654),Annotation([Ljava.lang.String;@4c5406b,[Ljava.lang.String;@66b0e207,[Ljava.lang.String;@74a58a06),Annotation([Ljava.lang.String;@7308c820,[Ljava.lang.String;@5d601832,[Ledu.cmu.lti.nlp.amr.Entity;@3ca17943))
AMR:
(x62 / 就, mod, x63 / 这)
(x65 / 给-01, location, x68 / 星星)
(x65 / 给-01, prep-by, x67 / 我)
(x65 / 给-01, subset, x69 / 你)
(x68 / 星星, mod, x63 / 这)
(x70 / 给-01, location, x68 / 星星)
(x70 / 给-01, location, x83 / 大)
(x71 / 铃铛, mod, x72 / 小-01)
(x71 / 铃铛, unit, x82 / 堆)
(x76 / 会-01, time, x73 / 笑-01)
(x76 / 会-01, unit, x82 / 堆)
(x82 / 堆, mod, x83 / 大)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.3
WARNING: makeIds can't find span Id: 0.0.2.0.2
WARNING: makeIds can't find span Id: 0.0.2.0.1
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.1.0.3
WARNING: makeIds can't find span Id: 0.0.2.1.0.3.0
WARNING: makeIds can't find span Id: 0.0.2.1.0.1
WARNING: makeIds can't find span Id: 0.0.2.1.0.1.1
WARNING: makeIds can't find span Id: 0.0.2.1.0.0
Decoded in 53,221 microseconds
Sentence: 他 仍然 笑 着 。

Oracle Span 1:  仍然 => 仍然
Oracle Span 2:  他 => 他
Oracle Span 3:  笑 => 笑-01
Spans:
Span 1-2:  仍然 => 仍然
Span 0-1:  他 => 他
Span 2-3:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  仍然 => 仍然
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  笑 => 笑-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	仍然	_	AD	AD	_	3	advmod	_	_
3	笑	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x4 / 仍然)

Input(Some(Graph((笑-01 :manner 仍然 :arg0 他),ArrayBuffer(Span(2,3,List(0),笑,笑-01,false), Span(1,2,List(1),仍然,仍然,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 仍然, 0 -> 笑-01),Map(x2 -> 他, x4 -> 仍然, x0 -> 笑-01))),[Ljava.lang.String;@640c216b,Annotation([Ljava.lang.String;@5170bc02,[Ljava.lang.String;@c0c8f96,[Ljava.lang.String;@3bd08435),Annotation([Ljava.lang.String;@3e52ed5d,[Ljava.lang.String;@6a96d639,[Ledu.cmu.lti.nlp.amr.Dependency;@28e94c2),Annotation([Ljava.lang.String;@3d40498a,[Ljava.lang.String;@14d1737a,[Ljava.lang.String;@482a58c7),Annotation([Ljava.lang.String;@3e74fd84,[Ljava.lang.String;@147efd9,[Ledu.cmu.lti.nlp.amr.Entity;@1e120628))
AMR:
(x0 / 笑-01, ARG6, x2 / 他)
(x0 / 笑-01, manner, x4 / 仍然)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,583 microseconds
Sentence: 随后 他 变得 严肃 起来 ： “ 今天 夜里 … 你 知道 … 不 要 来 了 。 ”

Oracle Span 1:  严肃 => 严肃-01
Oracle Span 2:  今天 => 今天
Oracle Span 3:  他 => 他
Oracle Span 4:  你 => 你
Oracle Span 5:  变得 => 变得-01
Oracle Span 6:  夜里 => 夜里
Oracle Span 7:  来 => 来-01
Oracle Span 8:  知道 => 知道-01
Oracle Span 9:  要 => 要-03
Spans:
Span 3-4:  严肃 => 严肃-01
Span 7-8:  今天 => 今天
Span 1-2:  他 => 他
Span 10-11:  你 => 你
Span 2-3:  变得 => 变得-01
Span 8-9:  夜里 => 夜里
Span 15-16:  来 => 来-01
Span 11-12:  知道 => 知道-01
Span 14-15:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 7-8:  今天 => 今天
Oracle Span 1-2:  他 => 他
Oracle Span 10-11:  你 => 你
Oracle Span 2-3:  变得 => 变得-01
Oracle Span 8-9:  夜里 => 夜里
Oracle Span 15-16:  来 => 来-01
Oracle Span 11-12:  知道 => 知道-01
Oracle Span 14-15:  要 => 要-03

Dependencies:
1	随后	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	变得	_	VV	VV	_	5	mmod	_	_
4	严肃	_	AD	AD	_	5	advmod	_	_
5	起来	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	9	punct	_	_
8	今天	_	NT	NT	_	9	tmod	_	_
9	夜里	_	VV	VV	_	5	conj	_	_
10	…	_	PU	PU	_	5	punct	_	_
11	你	_	PN	PN	_	12	nsubj	_	_
12	知道	_	VV	VV	_	5	conj	_	_
13	…	_	PU	PU	_	16	dep	_	_
14	不	_	AD	AD	_	16	neg	_	_
15	要	_	VV	VV	_	16	mmod	_	_
16	来	_	VV	VV	_	12	ccomp	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	。	_	PU	PU	_	5	punct	_	_
19	”	_	PU	PU	_	5	punct	_	_
20	你	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x20 / 变得-01, arg0, x21 / 他)
(x20 / 变得-01, arg1, x22 / 严肃-01)
(x25 / 知道-01, arg0, x26 / 你)
(x25 / 知道-01, arg1, x27 / 要-03)
(x25 / 知道-01, time, x31 / 夜里)
(x27 / 要-03, arg0, x29 / 来-01)
(x31 / 夜里, time, x32 / 今天)

Input(Some(Graph((temporal :arg1 (and :op (变得-01 :arg1 (严肃-01 :arg0 x21) :arg0 他) :op (say :arg0 x21 :arg1 (知道-01 :time (夜里 :time 今天) :arg1 (要-03 :polarity - :arg0 (来-01 :arg0 x26)) :arg0 你)))),ArrayBuffer(Span(2,3,List(0),变得,变得-01,false), Span(3,4,List(1),严肃,严肃-01,false), Span(1,2,List(2),他,他,false), Span(11,12,List(3),知道,知道-01,false), Span(8,9,List(4),夜里,夜里,false), Span(7,8,List(5),今天,今天,false), Span(14,15,List(6),要,要-03,false), Span(15,16,List(7),来,来-01,false), Span(10,11,List(8),你,你,false)),Map(2 -> 他, 5 -> 今天, 8 -> 你, 7 -> 来-01, 1 -> 严肃-01, 4 -> 夜里, 6 -> 要-03, 0 -> 变得-01, 3 -> 知道-01),Map(x22 -> 严肃-01, x25 -> 知道-01, x31 -> 夜里, x27 -> 要-03, x21 -> 他, x26 -> 你, x32 -> 今天, x29 -> 来-01, x20 -> 变得-01))),[Ljava.lang.String;@4e4894d,Annotation([Ljava.lang.String;@1de5cc88,[Ljava.lang.String;@23e2c1ca,[Ljava.lang.String;@2d4fb0d8),Annotation([Ljava.lang.String;@dc1fadd,[Ljava.lang.String;@3ef3f661,[Ledu.cmu.lti.nlp.amr.Dependency;@baa9ce4),Annotation([Ljava.lang.String;@5b332439,[Ljava.lang.String;@59262a90,[Ljava.lang.String;@78479f2b),Annotation([Ljava.lang.String;@2755617b,[Ljava.lang.String;@65859b44,[Ledu.cmu.lti.nlp.amr.Entity;@d9f5fce))
AMR:
(x20 / 变得-01, ARG5, x22 / 严肃-01)
(x20 / 变得-01, prep-on-behalf, x21 / 他)
(x25 / 知道-01, op, x29 / 来-01)
(x25 / 知道-01, prep-on-behalf, x26 / 你)
(x25 / 知道-01, time, x31 / 夜里)
(x29 / 来-01, manner, x27 / 要-03)
(x31 / 夜里, mod, x22 / 严肃-01)
(x31 / 夜里, time, x32 / 今天)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 24,570 microseconds
Sentence: “ 我 不 离开 你 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  离开 => 离开-01
Spans:
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph((say :arg1 (离开-01 :arg1 你 :arg0 我 :polarity -)),ArrayBuffer(Span(3,4,List(0),离开,离开-01,false), Span(4,5,List(1),你,你,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 你, 0 -> 离开-01),Map(x10 -> 我, x8 -> 离开-01, x11 -> 你))),[Ljava.lang.String;@49653791,Annotation([Ljava.lang.String;@45b7c97f,[Ljava.lang.String;@c212536,[Ljava.lang.String;@7b377a53),Annotation([Ljava.lang.String;@1b0e031b,[Ljava.lang.String;@6009cd34,[Ledu.cmu.lti.nlp.amr.Dependency;@65844c96),Annotation([Ljava.lang.String;@25214797,[Ljava.lang.String;@4e5c8ef3,[Ljava.lang.String;@60928a61),Annotation([Ljava.lang.String;@27358a19,[Ljava.lang.String;@8077c97,[Ledu.cmu.lti.nlp.amr.Entity;@22865072))
AMR:
(x8 / 离开-01, location, x10 / 我)
(x8 / 离开-01, subset, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 3,995 microseconds
Sentence: 我 说 。

Oracle Span 1:  我 => 我
Oracle Span 2:  说 => 说-01
Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph((说-01 :arg0 我),ArrayBuffer(Span(1,2,List(0),说,说-01,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-01),Map(x2 -> 我, x0 -> 说-01))),[Ljava.lang.String;@563317c1,Annotation([Ljava.lang.String;@5d5d3a5c,[Ljava.lang.String;@6e0d16a4,[Ljava.lang.String;@7e18ced7),Annotation([Ljava.lang.String;@305b43ca,[Ljava.lang.String;@4601047,[Ledu.cmu.lti.nlp.amr.Dependency;@25e8e59),Annotation([Ljava.lang.String;@3a0896b3,[Ljava.lang.String;@50a7c72b,[Ljava.lang.String;@54c11750),Annotation([Ljava.lang.String;@221b77d7,[Ljava.lang.String;@5cd8d029,[Ledu.cmu.lti.nlp.amr.Entity;@32a8ca06))
AMR:
(x0 / 说-01, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,471 microseconds
Sentence: “ 我 将 会 象 是 很 痛苦 的 样子 …

Oracle Span 1:  会 => 会-02
Oracle Span 2:  将 => 将
Oracle Span 3:  很 => 很
Oracle Span 4:  我 => 我
Oracle Span 5:  痛苦 => 痛苦-01
Spans:
Span 3-4:  会 => 会-02
Span 2-3:  将 => 将
Span 6-7:  很 => 很
Span 1-2:  我 => 我
Span 7-8:  痛苦 => 痛苦-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  会 => 会-02
Oracle Span 2-3:  将 => 将
Oracle Span 6-7:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  痛苦 => 痛苦-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	将	_	AD	AD	_	4	advmod	_	_
4	会	_	VV	VV	_	0	root	_	_
5	象	_	P	P	_	4	prep	_	_
6	是	_	VC	VC	_	5	pccomp	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	痛苦	_	VA	VA	_	6	attr	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	样子	_	PU	PU	_	4	punct	_	_
11	…	_	PU	PU	_	4	punct	_	_

Oracle:
(x23 / 会-02, time, x32 / 将)
(x29 / 痛苦-01, degree, x30 / 很)

Input(Some(Graph((say :arg1 (会-02 :time 将 :arg0 (像-01 :arg0 我 :arg1 (痛苦-01 :arg0 x25 :degree 很)))),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(2,3,List(1),将,将,false), Span(1,2,List(2),我,我,false), Span(7,8,List(3),痛苦,痛苦-01,false), Span(6,7,List(4),很,很,false)),Map(2 -> 我, 1 -> 将, 4 -> 很, 0 -> 会-02, 3 -> 痛苦-01),Map(x25 -> 我, x30 -> 很, x23 -> 会-02, x32 -> 将, x29 -> 痛苦-01))),[Ljava.lang.String;@6e8f2094,Annotation([Ljava.lang.String;@1753475d,[Ljava.lang.String;@d108406,[Ljava.lang.String;@799c8758),Annotation([Ljava.lang.String;@6e00837f,[Ljava.lang.String;@63e4484d,[Ledu.cmu.lti.nlp.amr.Dependency;@6a5dd083),Annotation([Ljava.lang.String;@77663cd7,[Ljava.lang.String;@1d17423f,[Ljava.lang.String;@5c70d7f0),Annotation([Ljava.lang.String;@582dcd35,[Ljava.lang.String;@1e6bd263,[Ledu.cmu.lti.nlp.amr.Entity;@394a6d2b))
AMR:
(x23 / 会-02, conj-as-if, x25 / 我)
(x23 / 会-02, op, x29 / 痛苦-01)
(x23 / 会-02, time, x32 / 将)
(x29 / 痛苦-01, degree, x30 / 很)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 10,209 microseconds
Sentence: 我 有点 象 要 死去 似的 。

Oracle Span 1:  我 => 我
Oracle Span 2:  有点 => 有点-01
Oracle Span 3:  死去 => 死去-01
Oracle Span 4:  要 => 要-03
Spans:
Span 0-1:  我 => 我
Span 1-2:  有点 => 有点-01
Span 4-5:  死去 => 死去-01
Span 3-4:  要 => 要-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有点 => 有点-01
Oracle Span 4-5:  死去 => 死去-01
Oracle Span 3-4:  要 => 要-03

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	有点	_	AD	AD	_	5	advmod	_	_
3	象	_	P	P	_	5	prep	_	_
4	要	_	VV	VV	_	3	pccomp	_	_
5	死去	_	VV	VV	_	0	root	_	_
6	似的	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 死去-01)

Input(Some(Graph((像-01 :degree 有点-01 :arg0 我 :arg1 (要-03 :arg0 死去-01)),ArrayBuffer(Span(1,2,List(0),有点,有点-01,false), Span(0,1,List(1),我,我,false), Span(3,4,List(2),要,要-03,false), Span(4,5,List(3),死去,死去-01,false)),Map(2 -> 要-03, 1 -> 我, 0 -> 有点-01, 3 -> 死去-01),Map(x10 -> 我, x12 -> 死去-01, x11 -> 要-03, x9 -> 有点-01))),[Ljava.lang.String;@635ff2a5,Annotation([Ljava.lang.String;@55adcf9e,[Ljava.lang.String;@1515f782,[Ljava.lang.String;@7f5ce33e),Annotation([Ljava.lang.String;@638afcaa,[Ljava.lang.String;@58601e7a,[Ledu.cmu.lti.nlp.amr.Dependency;@62735b13),Annotation([Ljava.lang.String;@7aae1170,[Ljava.lang.String;@4ef5dd23,[Ljava.lang.String;@163e8949),Annotation([Ljava.lang.String;@6eede35e,[Ljava.lang.String;@64c25a62,[Ledu.cmu.lti.nlp.amr.Entity;@43e8f1c))
AMR:
(x10 / 我, accompanier, x11 / 要-03)
(x11 / 要-03, ARG2, x12 / 死去-01)
(x9 / 有点-01, ARG0, x11 / 要-03)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
Decoded in 6,261 microseconds
Sentence: 就 是 这么 回 事 ，

Oracle Span 1:  事 => 事
Oracle Span 2:  回 => 回
Spans:
Span 4-5:  事 => 事
Span 3-4:  回 => 回

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  事 => 事
Oracle Span 3-4:  回 => 回

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	这么	_	AD	AD	_	4	advmod	_	_
4	回	_	VV	VV	_	5	rcmod	_	_
5	事	_	NN	NN	_	2	attr	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 事, unit, x2 / 回)

Input(Some(Graph((事 :mod 这 :unit 回),ArrayBuffer(Span(4,5,List(0),事,事,false), Span(3,4,List(1),回,回,false)),Map(1 -> 回, 0 -> 事),Map(x2 -> 回, x0 -> 事))),[Ljava.lang.String;@66a82a13,Annotation([Ljava.lang.String;@675ec28b,[Ljava.lang.String;@11399548,[Ljava.lang.String;@610fbe1c),Annotation([Ljava.lang.String;@46d0f89c,[Ljava.lang.String;@570b2057,[Ledu.cmu.lti.nlp.amr.Dependency;@a457c2b),Annotation([Ljava.lang.String;@16a6dc21,[Ljava.lang.String;@5773d271,[Ljava.lang.String;@59f45950),Annotation([Ljava.lang.String;@7871d261,[Ljava.lang.String;@58164e9a,[Ledu.cmu.lti.nlp.amr.Entity;@11bfffb3))
AMR:
(x0 / 事, unit, x2 / 回)

WARNING: makeIds can't find span Id: 0.0
Decoded in 3,068 microseconds
Sentence: 你 就 别 来 看 这些 了 ，

Oracle Span 1:  你 => 你
Oracle Span 2:  来 => 来-05
Oracle Span 3:  看 => 看-02
Oracle Span 4:  这些 => 这些
Spans:
Span 0-1:  你 => 你
Span 3-4:  来 => 来-05
Span 4-5:  看 => 看-02
Span 5-6:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  来 => 来-05
Oracle Span 4-5:  看 => 看-02
Oracle Span 5-6:  这些 => 这些

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	就	_	AD	AD	_	5	advmod	_	_
3	别	_	DT	DT	_	5	nsubj	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	看	_	VV	VV	_	0	root	_	_
6	这些	_	PN	PN	_	5	dobj	_	_
7	了	_	VV	VV	_	5	dep	_	_
8	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 来-05, arg0, x3 / 你)
(x0 / 来-05, arg1, x4 / 看-02)
(x4 / 看-02, arg1, x5 / 这些)

Input(Some(Graph((来-05 :polarity - :arg1 (看-02 :arg1 这些) :arg0 你),ArrayBuffer(Span(3,4,List(0),来,来-05,false), Span(4,5,List(1),看,看-02,false), Span(5,6,List(2),这些,这些,false), Span(0,1,List(3),你,你,false)),Map(2 -> 这些, 1 -> 看-02, 0 -> 来-05, 3 -> 你),Map(x5 -> 这些, x4 -> 看-02, x3 -> 你, x0 -> 来-05))),[Ljava.lang.String;@6a7a1a0d,Annotation([Ljava.lang.String;@1c6e3ff9,[Ljava.lang.String;@76e6c070,[Ljava.lang.String;@184afb78),Annotation([Ljava.lang.String;@22da200e,[Ljava.lang.String;@4f26425b,[Ledu.cmu.lti.nlp.amr.Dependency;@f03ee8f),Annotation([Ljava.lang.String;@40dd552c,[Ljava.lang.String;@33f4c769,[Ljava.lang.String;@4ebd6fd6),Annotation([Ljava.lang.String;@5e5a8718,[Ljava.lang.String;@7404ddca,[Ledu.cmu.lti.nlp.amr.Entity;@615e83ac))
AMR:
(x0 / 来-05, prep-through, x4 / 看-02)
(x0 / 来-05, time, x3 / 你)
(x4 / 看-02, dayperiod, x5 / 这些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,885 microseconds
Sentence: 没有 必要 。 ”

Oracle Span 1:  必要 => 必要-01
Spans:
Span 1-2:  必要 => 必要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  必要 => 必要-01

Dependencies:
1	没有	_	VE	VE	_	0	root	_	_
2	必要	_	NN	NN	_	1	dep	_	_
3	。	_	PU	PU	_	1	punct	_	_
4	”	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph((say :arg1 (必要-01 :polarity -)),ArrayBuffer(Span(1,2,List(0),必要,必要-01,false)),Map(0 -> 必要-01),Map(x10 -> 必要-01))),[Ljava.lang.String;@4438938e,Annotation([Ljava.lang.String;@4e50ae56,[Ljava.lang.String;@1c68d0db,[Ljava.lang.String;@9be7319),Annotation([Ljava.lang.String;@91a2543,[Ljava.lang.String;@42730828,[Ledu.cmu.lti.nlp.amr.Dependency;@18c7f6b5),Annotation([Ljava.lang.String;@629b780f,[Ljava.lang.String;@3af36922,[Ljava.lang.String;@609b041c),Annotation([Ljava.lang.String;@474e34e4,[Ljava.lang.String;@7e2c6702,[Ledu.cmu.lti.nlp.amr.Entity;@5fb7ab9c))
AMR:


WARNING: makeIds can't find span Id: 0.0
Decoded in 1,197 microseconds
Sentence: “ 我 不 离开 你 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  离开 => 离开-01
Spans:
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph((say :arg1 (离开-01 :arg1 你 :arg0 我 :polarity -)),ArrayBuffer(Span(3,4,List(0),离开,离开-01,false), Span(4,5,List(1),你,你,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 你, 0 -> 离开-01),Map(x10 -> 我, x8 -> 离开-01, x11 -> 你))),[Ljava.lang.String;@6734ff92,Annotation([Ljava.lang.String;@51eb0e84,[Ljava.lang.String;@4ce267cc,[Ljava.lang.String;@2eebce87),Annotation([Ljava.lang.String;@6ee37ca7,[Ljava.lang.String;@6775c0d1,[Ledu.cmu.lti.nlp.amr.Dependency;@38f617f4),Annotation([Ljava.lang.String;@4899799b,[Ljava.lang.String;@3dea226b,[Ljava.lang.String;@74500e4f),Annotation([Ljava.lang.String;@7c91fe86,[Ljava.lang.String;@7fc7152e,[Ledu.cmu.lti.nlp.amr.Entity;@13d289c7))
AMR:
(x8 / 离开-01, location, x10 / 我)
(x8 / 离开-01, subset, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 3,962 microseconds
Sentence: 可是 他 担心 起来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  担心 => 担心-01
Spans:
Span 1-2:  他 => 他
Span 2-3:  担心 => 担心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  担心 => 担心-01

Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	担心	_	VV	VV	_	0	root	_	_
4	起来	_	VV	VV	_	3	ccomp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 担心-01, arg0, x3 / 他)

Input(Some(Graph((contrast :arg0 (担心-01 :arg0 他)),ArrayBuffer(Span(2,3,List(0),担心,担心-01,false), Span(1,2,List(1),他,他,false)),Map(1 -> 他, 0 -> 担心-01),Map(x2 -> 担心-01, x3 -> 他))),[Ljava.lang.String;@6704df84,Annotation([Ljava.lang.String;@1412682c,[Ljava.lang.String;@53bb71e5,[Ljava.lang.String;@54a056e4),Annotation([Ljava.lang.String;@15994b0b,[Ljava.lang.String;@12cd129c,[Ledu.cmu.lti.nlp.amr.Dependency;@1a717d79),Annotation([Ljava.lang.String;@4cb00fa5,[Ljava.lang.String;@13aed42b,[Ljava.lang.String;@698d6d30),Annotation([Ljava.lang.String;@78065fcd,[Ljava.lang.String;@3407aa4f,[Ledu.cmu.lti.nlp.amr.Entity;@51ed2f68))
AMR:
(x2 / 担心-01, prep-from, x3 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,052 microseconds
Sentence: “ 我 对 你 说 这些 … 这 也 是 因为 蛇 的 缘故 。

Oracle Span 1:  也 => 也
Oracle Span 2:  你 => 你
Oracle Span 3:  我 => 我
Oracle Span 4:  蛇 => 蛇
Oracle Span 5:  说 => 说-01
Oracle Span 6:  这些 => 这些
Spans:
Span 8-9:  也 => 也
Span 3-4:  你 => 你
Span 1-2:  我 => 我
Span 11-12:  蛇 => 蛇
Span 4-5:  说 => 说-01
Span 5-6:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 11-12:  蛇 => 蛇
Oracle Span 4-5:  说 => 说-01
Oracle Span 5-6:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	这些	_	PN	PN	_	10	nsubj	_	_
7	…	_	PU	PU	_	10	dep	_	_
8	这	_	PN	PN	_	10	nsubj	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	5	ccomp	_	_
11	因为	_	P	P	_	10	prep	_	_
12	蛇	_	NN	NN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	缘故	_	NN	NN	_	11	pobj	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x12 / 说-01, arg0, x13 / 我)
(x12 / 说-01, arg1, x14 / 这些)
(x12 / 说-01, arg3, x16 / 你)
(x12 / 说-01, cause, x17 / 蛇)
(x17 / 蛇, manner, x18 / 也)

Input(Some(Graph((say :arg1 (说-01 :cause (蛇 :manner 也) :arg3 你 :arg1 这些 :arg0 我)),ArrayBuffer(Span(4,5,List(0),说,说-01,false), Span(11,12,List(1),蛇,蛇,false), Span(8,9,List(2),也,也,false), Span(3,4,List(3),你,你,false), Span(5,6,List(4),这些,这些,false), Span(1,2,List(5),我,我,false)),Map(2 -> 也, 5 -> 我, 1 -> 蛇, 4 -> 这些, 0 -> 说-01, 3 -> 你),Map(x16 -> 你, x13 -> 我, x12 -> 说-01, x18 -> 也, x14 -> 这些, x17 -> 蛇))),[Ljava.lang.String;@538b3c88,Annotation([Ljava.lang.String;@19b9f903,[Ljava.lang.String;@10e56da9,[Ljava.lang.String;@28cb86b2),Annotation([Ljava.lang.String;@22ae905f,[Ljava.lang.String;@748904e8,[Ledu.cmu.lti.nlp.amr.Dependency;@4fbaa7f5),Annotation([Ljava.lang.String;@3b3056a6,[Ljava.lang.String;@6d4a05f7,[Ljava.lang.String;@51d8f2f2),Annotation([Ljava.lang.String;@4b476233,[Ljava.lang.String;@72fb989b,[Ledu.cmu.lti.nlp.amr.Entity;@4f235e8e))
AMR:
(x12 / 说-01, ARG4, x16 / 你)
(x12 / 说-01, example, x13 / 我)
(x12 / 说-01, mod, x14 / 这些)
(x12 / 说-01, purpose, x18 / 也)
(x17 / 蛇, manner, x18 / 也)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 12,183 microseconds
Sentence: 别 让 它 咬 了 你 …

Oracle Span 1:  你 => 你
Oracle Span 2:  咬 => 咬-01
Oracle Span 3:  它 => 它
Oracle Span 4:  让 => 让-01
Spans:
Span 5-6:  你 => 你
Span 3-4:  咬 => 咬-01
Span 2-3:  它 => 它
Span 1-2:  让 => 让-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 3-4:  咬 => 咬-01
Oracle Span 2-3:  它 => 它
Oracle Span 1-2:  让 => 让-01

Dependencies:
1	别	_	NR	NR	_	2	nsubj	_	_
2	让	_	VV	VV	_	0	root	_	_
3	它	_	PN	PN	_	4	nsubj	_	_
4	咬	_	VV	VV	_	2	ccomp	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	你	_	PN	PN	_	7	nn	_	_
7	…	_	NN	NN	_	4	dobj	_	_

Oracle:
(x0 / 让-01, arg1, x3 / 咬-01)
(x3 / 咬-01, arg0, x4 / 它)
(x3 / 咬-01, arg1, x5 / 你)

Input(Some(Graph((让-01 :polarity - :arg1 (咬-01 :arg1 你 :arg0 它)),ArrayBuffer(Span(1,2,List(0),让,让-01,false), Span(3,4,List(1),咬,咬-01,false), Span(5,6,List(2),你,你,false), Span(2,3,List(3),它,它,false)),Map(2 -> 你, 1 -> 咬-01, 0 -> 让-01, 3 -> 它),Map(x5 -> 你, x4 -> 它, x3 -> 咬-01, x0 -> 让-01))),[Ljava.lang.String;@597a7afa,Annotation([Ljava.lang.String;@29dcdd1c,[Ljava.lang.String;@7cdb7fc,[Ljava.lang.String;@524f5ea5),Annotation([Ljava.lang.String;@586843bc,[Ljava.lang.String;@17134190,[Ledu.cmu.lti.nlp.amr.Dependency;@7d8b66d9),Annotation([Ljava.lang.String;@5599b5bb,[Ljava.lang.String;@4ff66917,[Ljava.lang.String;@4264beb8),Annotation([Ljava.lang.String;@647fb583,[Ljava.lang.String;@7cd3e0da,[Ledu.cmu.lti.nlp.amr.Entity;@919086))
AMR:
(x3 / 咬-01, destination, x5 / 你)
(x3 / 咬-01, prep-on-behalf, x0 / 让-01)
(x3 / 咬-01, weekday, x4 / 它)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,568 microseconds
Sentence: 蛇 是 很 坏 的 ，

Oracle Span 1:  坏 => 坏-01
Oracle Span 2:  很 => 很
Oracle Span 3:  蛇 => 蛇
Spans:
Span 3-4:  坏 => 坏-01
Span 2-3:  很 => 很
Span 0-1:  蛇 => 蛇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  坏 => 坏-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  蛇 => 蛇

Dependencies:
1	蛇	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	坏	_	VA	VA	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 坏-01, arg0, x2 / 蛇)
(x0 / 坏-01, degree, x3 / 很)

Input(Some(Graph((坏-01 :degree 很 :arg0 蛇),ArrayBuffer(Span(3,4,List(0),坏,坏-01,false), Span(2,3,List(1),很,很,false), Span(0,1,List(2),蛇,蛇,false)),Map(2 -> 蛇, 1 -> 很, 0 -> 坏-01),Map(x2 -> 蛇, x3 -> 很, x0 -> 坏-01))),[Ljava.lang.String;@67e77f52,Annotation([Ljava.lang.String;@7ead1d80,[Ljava.lang.String;@1d1bf7bf,[Ljava.lang.String;@1182413a),Annotation([Ljava.lang.String;@4d43a1b7,[Ljava.lang.String;@5b14f482,[Ledu.cmu.lti.nlp.amr.Dependency;@19705650),Annotation([Ljava.lang.String;@1a785fd5,[Ljava.lang.String;@4a660b34,[Ljava.lang.String;@362a561e),Annotation([Ljava.lang.String;@2df3545d,[Ljava.lang.String;@75ad30c1,[Ledu.cmu.lti.nlp.amr.Entity;@fe8aaeb))
AMR:
(x0 / 坏-01, ARG6, x2 / 蛇)
(x0 / 坏-01, degree, x3 / 很)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,966 microseconds
Sentence: 它 随意 咬 人 … ”

Oracle Span 1:  人 => 人
Oracle Span 2:  咬 => 咬-01
Oracle Span 3:  它 => 它
Oracle Span 4:  随意 => 随意-01
Spans:
Span 3-4:  人 => 人
Span 2-3:  咬 => 咬-01
Span 0-1:  它 => 它
Span 1-2:  随意 => 随意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 2-3:  咬 => 咬-01
Oracle Span 0-1:  它 => 它
Oracle Span 1-2:  随意 => 随意-01

Dependencies:
1	它	_	PN	PN	_	2	nsubj	_	_
2	随意	_	VV	VV	_	0	root	_	_
3	咬	_	NN	NN	_	5	nn	_	_
4	人	_	NN	NN	_	5	nn	_	_
5	…	_	NN	NN	_	2	dobj	_	_
6	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 咬-01, arg0, x9 / 它)
(x7 / 咬-01, arg1, x10 / 人)
(x7 / 咬-01, manner, x8 / 随意-01)

Input(Some(Graph((say :arg1 (咬-01 :arg1 人 :arg0 它 :manner 随意-01)),ArrayBuffer(Span(2,3,List(0),咬,咬-01,false), Span(3,4,List(1),人,人,false), Span(0,1,List(2),它,它,false), Span(1,2,List(3),随意,随意-01,false)),Map(2 -> 它, 1 -> 人, 0 -> 咬-01, 3 -> 随意-01),Map(x10 -> 人, x8 -> 随意-01, x7 -> 咬-01, x9 -> 它))),[Ljava.lang.String;@6b9697ae,Annotation([Ljava.lang.String;@5cf0673d,[Ljava.lang.String;@40c76f5a,[Ljava.lang.String;@a323a5b),Annotation([Ljava.lang.String;@5546e754,[Ljava.lang.String;@ad0bb4e,[Ledu.cmu.lti.nlp.amr.Dependency;@7196a8f1),Annotation([Ljava.lang.String;@6a6da47a,[Ljava.lang.String;@8f39224,[Ljava.lang.String;@7f642bf),Annotation([Ljava.lang.String;@43e3a390,[Ljava.lang.String;@44aa91e2,[Ledu.cmu.lti.nlp.amr.Entity;@50dc49e1))
AMR:
(x10 / 人, manner, x7 / 咬-01)
(x7 / 咬-01, manner, x8 / 随意-01)
(x9 / 它, mode, x8 / 随意-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,088 microseconds
Sentence: “ 我 不 离开 你 。 ”

Oracle Span 1:  你 => 你
Oracle Span 2:  我 => 我
Oracle Span 3:  离开 => 离开-01
Spans:
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph((say :arg1 (离开-01 :arg1 你 :arg0 我 :polarity -)),ArrayBuffer(Span(3,4,List(0),离开,离开-01,false), Span(4,5,List(1),你,你,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 你, 0 -> 离开-01),Map(x10 -> 我, x8 -> 离开-01, x11 -> 你))),[Ljava.lang.String;@650a1aff,Annotation([Ljava.lang.String;@3babcaed,[Ljava.lang.String;@2b9e69fb,[Ljava.lang.String;@19bfbe28),Annotation([Ljava.lang.String;@2c579202,[Ljava.lang.String;@49ced9c7,[Ledu.cmu.lti.nlp.amr.Dependency;@11c7a0b4),Annotation([Ljava.lang.String;@75ed125a,[Ljava.lang.String;@653a5967,[Ljava.lang.String;@5a85b4e6),Annotation([Ljava.lang.String;@766b6d02,[Ljava.lang.String;@6b09ce57,[Ledu.cmu.lti.nlp.amr.Entity;@5c4f4330))
AMR:
(x8 / 离开-01, location, x10 / 我)
(x8 / 离开-01, subset, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
Decoded in 6,788 microseconds
Sentence: 这时 ， 他 似乎 有点 放心 了 ： “ 对 了 ， 它 咬 第二 口 的 时候 就 没有 毒液 了 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  似乎 => 似乎-01
Oracle Span 3:  咬 => 咬-01
Oracle Span 4:  它 => 它
Oracle Span 5:  对 => 对-02
Oracle Span 6:  放心 => 放心-01
Oracle Span 7:  有点 => 有点-01
Oracle Span 8:  毒液 => 毒液
Oracle Span 9:  这时 => 这时
Spans:
Span 2-3:  他 => 他
Span 3-4:  似乎 => 似乎-01
Span 13-14:  咬 => 咬-01
Span 12-13:  它 => 它
Span 9-10:  对 => 对-02
Span 5-6:  放心 => 放心-01
Span 4-5:  有点 => 有点-01
Span 20-21:  毒液 => 毒液
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  似乎 => 似乎-01
Oracle Span 13-14:  咬 => 咬-01
Oracle Span 12-13:  它 => 它
Oracle Span 9-10:  对 => 对-02
Oracle Span 5-6:  放心 => 放心-01
Oracle Span 4-5:  有点 => 有点-01
Oracle Span 20-21:  毒液 => 毒液
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	似乎	_	AD	AD	_	5	advmod	_	_
5	有点	_	VV	VV	_	0	root	_	_
6	放心	_	VV	VV	_	5	rcomp	_	_
7	了	_	AS	AS	_	5	asp	_	_
8	：	_	PU	PU	_	5	punct	_	_
9	“	_	PU	PU	_	10	punct	_	_
10	对	_	VV	VV	_	5	conj	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	它	_	PN	PN	_	14	nsubj	_	_
14	咬	_	VV	VV	_	18	rcmod	_	_
15	第二	_	OD	OD	_	16	ordmod	_	_
16	口	_	M	M	_	14	range	_	_
17	的	_	DEC	DEC	_	14	cpm	_	_
18	时候	_	NN	NN	_	21	dep	_	_
19	就	_	AD	AD	_	21	advmod	_	_
20	没有	_	VV	VV	_	21	neg	_	_
21	毒液	_	VV	VV	_	10	dep	_	_
22	了	_	AS	AS	_	21	asp	_	_
23	…	_	NN	NN	_	21	dobj	_	_
24	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x21 / 似乎-01, arg0, x22 / 放心-01)
(x22 / 放心-01, arg0, x23 / 他)
(x22 / 放心-01, degree, x24 / 有点-01)

Input(Some(Graph((and :op (似乎-01 :arg0 (放心-01 :degree 有点-01 :arg0 他)) :op (say :arg0 x23 :arg1 (and :op 对-02 :op (有-01 :arg0 它 :arg1 毒液 :time (咬-01 :ord 2 :arg0 x31) :polarity -))) :time 这时),ArrayBuffer(Span(3,4,List(0),似乎,似乎-01,false), Span(5,6,List(1),放心,放心-01,false), Span(4,5,List(2),有点,有点-01,false), Span(2,3,List(3),他,他,false), Span(9,10,List(4),对,对-02,false), Span(12,13,List(5),它,它,false), Span(20,21,List(6),毒液,毒液,false), Span(13,14,List(7),咬,咬-01,false), Span(0,1,List(8),这时,这时,false)),Map(2 -> 有点-01, 5 -> 它, 8 -> 这时, 7 -> 咬-01, 1 -> 放心-01, 4 -> 对-02, 6 -> 毒液, 0 -> 似乎-01, 3 -> 他),Map(x34 -> 咬-01, x28 -> 对-02, x37 -> 这时, x22 -> 放心-01, x31 -> 它, x21 -> 似乎-01, x24 -> 有点-01, x23 -> 他, x32 -> 毒液))),[Ljava.lang.String;@2b9aeedb,Annotation([Ljava.lang.String;@63485d7,[Ljava.lang.String;@23ea8830,[Ljava.lang.String;@59a09be),Annotation([Ljava.lang.String;@790ac3e0,[Ljava.lang.String;@5bb2fb2b,[Ledu.cmu.lti.nlp.amr.Dependency;@2cee5365),Annotation([Ljava.lang.String;@796c68bf,[Ljava.lang.String;@56d6a1b1,[Ljava.lang.String;@1a7163e3),Annotation([Ljava.lang.String;@44da7eb3,[Ljava.lang.String;@5e69cf07,[Ledu.cmu.lti.nlp.amr.Entity;@3d512652))
AMR:
(x21 / 似乎-01, manner, x23 / 他)
(x22 / 放心-01, degree, x24 / 有点-01)
(x22 / 放心-01, degree, x28 / 对-02)
(x22 / 放心-01, manner, x21 / 似乎-01)
(x22 / 放心-01, time, x37 / 这时)
(x34 / 咬-01, manner, x31 / 它)
(x34 / 咬-01, time, x28 / 对-02)
(x34 / 咬-01, unit, x32 / 毒液)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.1.1
WARNING: makeIds can't find span Id: 0.1.1.1.2
WARNING: makeIds can't find span Id: 0.2
Decoded in 53,649 microseconds
Sentence: 这 天 夜里 ， 我 没有 看到 他 起程 。

Oracle Span 1:  他 => 他
Oracle Span 2:  夜里 => 夜里
Oracle Span 3:  我 => 我
Oracle Span 4:  看到 => 看到-01
Oracle Span 5:  起程 => 起程-01
Spans:
Span 7-8:  他 => 他
Span 2-3:  夜里 => 夜里
Span 4-5:  我 => 我
Span 6-7:  看到 => 看到-01
Span 8-9:  起程 => 起程-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 2-3:  夜里 => 夜里
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  看到 => 看到-01
Oracle Span 8-9:  起程 => 起程-01

Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	天	_	M	M	_	1	clf	_	_
3	夜里	_	NN	NN	_	7	nsubj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	没有	_	VV	VV	_	7	neg	_	_
7	看到	_	VV	VV	_	0	root	_	_
8	他	_	PN	PN	_	9	nn	_	_
9	起程	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 看到-01, arg0, x13 / 我)
(x10 / 看到-01, arg1, x14 / 起程-01)
(x10 / 看到-01, time, x16 / 夜里)
(x14 / 起程-01, arg0, x15 / 他)

Input(Some(Graph((看到-01 :time (夜里 :mod 这天) :arg1 (起程-01 :arg0 他) :arg0 我 :polarity -),ArrayBuffer(Span(6,7,List(0),看到,看到-01,false), Span(2,3,List(1),夜里,夜里,false), Span(8,9,List(2),起程,起程-01,false), Span(7,8,List(3),他,他,false), Span(4,5,List(4),我,我,false)),Map(2 -> 起程-01, 1 -> 夜里, 4 -> 我, 0 -> 看到-01, 3 -> 他),Map(x16 -> 夜里, x10 -> 看到-01, x13 -> 我, x15 -> 他, x14 -> 起程-01))),[Ljava.lang.String;@2c2e3460,Annotation([Ljava.lang.String;@3b96f8b0,[Ljava.lang.String;@2b170932,[Ljava.lang.String;@1fc0d9b4),Annotation([Ljava.lang.String;@42107318,[Ljava.lang.String;@4e4f4092,[Ledu.cmu.lti.nlp.amr.Dependency;@5d829ef0),Annotation([Ljava.lang.String;@4416e18d,[Ljava.lang.String;@5dfc2a4,[Ljava.lang.String;@3120495d),Annotation([Ljava.lang.String;@781c2497,[Ljava.lang.String;@b75b890,[Ledu.cmu.lti.nlp.amr.Entity;@70c491b8))
AMR:
(x10 / 看到-01, prep-on-behalf, x14 / 起程-01)
(x10 / 看到-01, snt1, x13 / 我)
(x10 / 看到-01, time, x16 / 夜里)
(x14 / 起程-01, unit, x15 / 他)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 14,106 microseconds
Sentence: 他 不声不响 地 跑 了 。

Oracle Span 1:  不声不响 => 不声不响-01
Oracle Span 2:  他 => 他
Oracle Span 3:  跑 => 跑-01
Spans:
Span 1-2:  不声不响 => 不声不响-01
Span 0-1:  他 => 他
Span 3-4:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不声不响 => 不声不响-01
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  跑 => 跑-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	不声不响	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	跑	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 跑-01, arg0, x3 / 他)
(x0 / 跑-01, manner, x2 / 不声不响-01)

Input(Some(Graph((跑-01 :arg0 他 :manner 不声不响-01),ArrayBuffer(Span(3,4,List(0),跑,跑-01,false), Span(0,1,List(1),他,他,false), Span(1,2,List(2),不声不响,不声不响-01,false)),Map(2 -> 不声不响-01, 1 -> 他, 0 -> 跑-01),Map(x2 -> 不声不响-01, x3 -> 他, x0 -> 跑-01))),[Ljava.lang.String;@439d545c,Annotation([Ljava.lang.String;@5a3cf824,[Ljava.lang.String;@7c2b6acb,[Ljava.lang.String;@28367da7),Annotation([Ljava.lang.String;@1a0f349,[Ljava.lang.String;@3c60c681,[Ledu.cmu.lti.nlp.amr.Dependency;@1b3a9ef4),Annotation([Ljava.lang.String;@7a1371,[Ljava.lang.String;@6c6928c,[Ljava.lang.String;@3c28181b),Annotation([Ljava.lang.String;@73aaec54,[Ljava.lang.String;@239b98cb,[Ledu.cmu.lti.nlp.amr.Entity;@117b2cc6))
AMR:
(x0 / 跑-01, manner, x2 / 不声不响-01)
(x0 / 跑-01, season, x3 / 他)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,703 microseconds
Sentence: 当 我 终于 赶上 他 的 时候 ， 他 坚定 地 快步 走 着 。

Oracle Span 1:  他 => 他
Oracle Span 2:  坚定 => 坚定-01
Oracle Span 3:  快步 => 快步
Oracle Span 4:  我 => 我
Oracle Span 5:  终于 => 终于
Oracle Span 6:  走 => 走-02
Oracle Span 7:  赶上 => 赶上-01
Spans:
Span 4-5:  他 => 他
Span 9-10:  坚定 => 坚定-01
Span 11-12:  快步 => 快步
Span 1-2:  我 => 我
Span 2-3:  终于 => 终于
Span 12-13:  走 => 走-02
Span 3-4:  赶上 => 赶上-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 9-10:  坚定 => 坚定-01
Oracle Span 11-12:  快步 => 快步
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  终于 => 终于
Oracle Span 12-13:  走 => 走-02
Oracle Span 3-4:  赶上 => 赶上-01

Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	终于	_	AD	AD	_	4	advmod	_	_
4	赶上	_	VV	VV	_	7	rcmod	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	时候	_	NN	NN	_	1	pobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	他	_	PN	PN	_	13	nsubj	_	_
10	坚定	_	VA	VA	_	13	dvpmod	_	_
11	地	_	DEV	DEV	_	10	dvpm	_	_
12	快步	_	AD	AD	_	13	advmod	_	_
13	走	_	VV	VV	_	0	root	_	_
14	着	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 走-02, arg0, x5 / 他)
(x0 / 走-02, manner, x15 / 坚定-01)
(x0 / 走-02, manner, x16 / 快步)
(x0 / 走-02, time, x17 / 赶上-01)
(x17 / 赶上-01, arg0, x18 / 我)
(x17 / 赶上-01, time, x20 / 终于)

Input(Some(Graph((走-02 :time (赶上-01 :time 终于 :arg1 x5 :arg0 我) :manner 快步 :manner 坚定-01 :arg0 他),ArrayBuffer(Span(12,13,List(0),走,走-02,false), Span(3,4,List(1),赶上,赶上-01,false), Span(2,3,List(2),终于,终于,false), Span(1,2,List(3),我,我,false), Span(11,12,List(4),快步,快步,false), Span(9,10,List(5),坚定,坚定-01,false), Span(4,5,List(6),他,他,false)),Map(2 -> 终于, 5 -> 坚定-01, 1 -> 赶上-01, 4 -> 快步, 6 -> 他, 0 -> 走-02, 3 -> 我),Map(x16 -> 快步, x5 -> 他, x15 -> 坚定-01, x18 -> 我, x20 -> 终于, x17 -> 赶上-01, x0 -> 走-02))),[Ljava.lang.String;@6def0632,Annotation([Ljava.lang.String;@49038f97,[Ljava.lang.String;@36211bbc,[Ljava.lang.String;@7ef41ca2),Annotation([Ljava.lang.String;@6b3f4bd8,[Ljava.lang.String;@3e151e1f,[Ledu.cmu.lti.nlp.amr.Dependency;@d70e9a),Annotation([Ljava.lang.String;@5e98032e,[Ljava.lang.String;@4fe8f2ae,[Ljava.lang.String;@591be8aa),Annotation([Ljava.lang.String;@61808ecd,[Ljava.lang.String;@7f1f60a0,[Ledu.cmu.lti.nlp.amr.Entity;@77ea806f))
AMR:
(x0 / 走-02, location, x5 / 他)
(x0 / 走-02, manner, x15 / 坚定-01)
(x0 / 走-02, manner, x16 / 快步)
(x0 / 走-02, time, x17 / 赶上-01)
(x17 / 赶上-01, beneficiary, x18 / 我)
(x17 / 赶上-01, time, x20 / 终于)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.2
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 26,176 microseconds
Sentence: 他 只是 对 我 说道 ： “ 啊 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  只是 => 只是
Oracle Span 3:  啊 => 啊
Oracle Span 4:  我 => 我
Oracle Span 5:  说道 => 说道-01
Spans:
Span 0-1:  他 => 他
Span 1-2:  只是 => 只是
Span 7-8:  啊 => 啊
Span 3-4:  我 => 我
Span 4-5:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  只是 => 只是
Oracle Span 7-8:  啊 => 啊
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  说道 => 说道-01

Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	只是	_	AD	AD	_	5	advmod	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	5	punct	_	_
8	啊	_	NR	NR	_	9	nsubj	_	_
9	,	_	VA	VA	_	5	ccomp	_	_

Oracle:
(x0 / 说道-01, arg0, x4 / 他)
(x0 / 说道-01, arg1, x8 / 啊)
(x0 / 说道-01, arg2, x9 / 我)
(x0 / 说道-01, manner, x10 / 只是)

Input(Some(Graph((说道-01 :manner 只是 :arg2 我 :arg1 啊 :arg0 他),ArrayBuffer(Span(4,5,List(0),说道,说道-01,false), Span(1,2,List(1),只是,只是,false), Span(3,4,List(2),我,我,false), Span(7,8,List(3),啊,啊,false), Span(0,1,List(4),他,他,false)),Map(2 -> 我, 1 -> 只是, 4 -> 他, 0 -> 说道-01, 3 -> 啊),Map(x10 -> 只是, x8 -> 啊, x4 -> 他, x9 -> 我, x0 -> 说道-01))),[Ljava.lang.String;@71b26880,Annotation([Ljava.lang.String;@14a1769d,[Ljava.lang.String;@10bf1ec9,[Ljava.lang.String;@33751d49),Annotation([Ljava.lang.String;@516195cf,[Ljava.lang.String;@4eeb14e0,[Ledu.cmu.lti.nlp.amr.Dependency;@26ca12a2),Annotation([Ljava.lang.String;@3d4ecc67,[Ljava.lang.String;@60dcf9ec,[Ljava.lang.String;@7606bd03),Annotation([Ljava.lang.String;@afee63,[Ljava.lang.String;@4b4927e5,[Ledu.cmu.lti.nlp.amr.Entity;@4c5da4f9))
AMR:
(x0 / 说道-01, manner, x10 / 只是)
(x0 / 说道-01, manner, x9 / 我)
(x0 / 说道-01, subevent, x8 / 啊)
(x10 / 只是, quant, x4 / 他)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 20,837 microseconds
Sentence: 你 在 这儿 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  这儿 => 这儿
Spans:
Span 0-1:  你 => 你
Span 2-3:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  这儿 => 这儿

Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	这儿	_	PN	PN	_	2	pobj	_	_
4	…	_	VV	VV	_	0	root	_	_
5	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 你, location, x11 / 这儿)

Input(Some(Graph((say :arg1 (你 :location 这儿)),ArrayBuffer(Span(0,1,List(0),你,你,false), Span(2,3,List(1),这儿,这儿,false)),Map(1 -> 这儿, 0 -> 你),Map(x10 -> 你, x11 -> 这儿))),[Ljava.lang.String;@ff0e6d4,Annotation([Ljava.lang.String;@70d3cdbf,[Ljava.lang.String;@72a7aa4f,[Ljava.lang.String;@537ca28e),Annotation([Ljava.lang.String;@5b322873,[Ljava.lang.String;@35e2b89f,[Ledu.cmu.lti.nlp.amr.Dependency;@7ad889be),Annotation([Ljava.lang.String;@4c063cb9,[Ljava.lang.String;@63de4fa,[Ljava.lang.String;@26bb92e2),Annotation([Ljava.lang.String;@18907af2,[Ljava.lang.String;@658e7ead,[Ledu.cmu.lti.nlp.amr.Entity;@cfd5cd2))
AMR:
(x10 / 你, location, x11 / 这儿)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,776 microseconds
Sentence: 于是 他 拉 着 我 的 手 。

Oracle Span 1:  他 => 他
Oracle Span 2:  我 => 我
Oracle Span 3:  手 => 手
Oracle Span 4:  拉 => 拉-01
Spans:
Span 1-2:  他 => 他
Span 4-5:  我 => 我
Span 6-7:  手 => 手
Span 2-3:  拉 => 拉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  手 => 手
Oracle Span 2-3:  拉 => 拉-01

Dependencies:
1	于是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	拉	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	手	_	NN	NN	_	3	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 我, part, x9 / 手)
(x7 / 拉-01, arg0, x8 / 他)
(x7 / 拉-01, arg1, x9 / 手)

Input(Some(Graph((temporal :arg1 (拉-01 :arg1 (手 :part-of 我) :arg0 他)),ArrayBuffer(Span(2,3,List(0),拉,拉-01,false), Span(6,7,List(1),手,手,false), Span(4,5,List(2),我,我,false), Span(1,2,List(3),他,他,false)),Map(2 -> 我, 1 -> 手, 0 -> 拉-01, 3 -> 他),Map(x10 -> 我, x8 -> 他, x7 -> 拉-01, x9 -> 手))),[Ljava.lang.String;@762bf32d,Annotation([Ljava.lang.String;@6d7740f0,[Ljava.lang.String;@7b1a30e5,[Ljava.lang.String;@1de7f898),Annotation([Ljava.lang.String;@34fcd292,[Ljava.lang.String;@63db743d,[Ledu.cmu.lti.nlp.amr.Dependency;@496cedbb),Annotation([Ljava.lang.String;@6b6def36,[Ljava.lang.String;@3957d88b,[Ljava.lang.String;@1152900),Annotation([Ljava.lang.String;@2fba0dac,[Ljava.lang.String;@2b2a4332,[Ledu.cmu.lti.nlp.amr.Entity;@2cbe455c))
AMR:
(x10 / 我, part, x9 / 手)
(x7 / 拉-01, prep-from, x8 / 他)
(x7 / 拉-01, snt1, x9 / 手)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,037 microseconds
Sentence: 但是 他 仍然 很 担心 ：

Oracle Span 1:  仍然 => 仍然
Oracle Span 2:  他 => 他
Oracle Span 3:  很 => 很
Oracle Span 4:  担心 => 担心-01
Spans:
Span 2-3:  仍然 => 仍然
Span 1-2:  他 => 他
Span 3-4:  很 => 很
Span 4-5:  担心 => 担心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  很 => 很
Oracle Span 4-5:  担心 => 担心-01

Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	仍然	_	AD	AD	_	5	dep	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	担心	_	NN	NN	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 担心-01, arg0, x4 / 他)
(x2 / 担心-01, degree, x3 / 很)
(x2 / 担心-01, manner, x5 / 仍然)

Input(Some(Graph((contrast :arg0 (担心-01 :manner 仍然 :arg0 他 :degree 很)),ArrayBuffer(Span(4,5,List(0),担心,担心-01,false), Span(2,3,List(1),仍然,仍然,false), Span(1,2,List(2),他,他,false), Span(3,4,List(3),很,很,false)),Map(2 -> 他, 1 -> 仍然, 0 -> 担心-01, 3 -> 很),Map(x2 -> 担心-01, x5 -> 仍然, x4 -> 他, x3 -> 很))),[Ljava.lang.String;@4cb24e2,Annotation([Ljava.lang.String;@7be38eba,[Ljava.lang.String;@2296127,[Ljava.lang.String;@5ce3409b),Annotation([Ljava.lang.String;@1d283d1,[Ljava.lang.String;@66234b0f,[Ledu.cmu.lti.nlp.amr.Dependency;@2fca3eb5),Annotation([Ljava.lang.String;@69eb544f,[Ljava.lang.String;@7cb29ea8,[Ljava.lang.String;@b5c902),Annotation([Ljava.lang.String;@7e747037,[Ljava.lang.String;@4d0e1a9a,[Ledu.cmu.lti.nlp.amr.Entity;@25218a4d))
AMR:
(x2 / 担心-01, degree, x3 / 很)
(x2 / 担心-01, manner, x5 / 仍然)
(x2 / 担心-01, snt5, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,826 microseconds
Sentence: “ 你 不 该 这样 。

Oracle Span 1:  你 => 你
Oracle Span 2:  该 => 该-01
Oracle Span 3:  这样 => 这样
Spans:
Span 1-2:  你 => 你
Span 3-4:  该 => 该-01
Span 4-5:  这样 => 这样

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  该 => 该-01
Oracle Span 4-5:  这样 => 这样

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	该	_	VV	VV	_	0	root	_	_
5	这样	_	AD	AD	_	4	advmod	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 这样, arg0, x11 / 你)
(x8 / 该-01, arg0, x10 / 这样)

Input(Some(Graph((say :arg1 (该-01 :arg0 (这样 :arg0 你) :polarity -)),ArrayBuffer(Span(3,4,List(0),该,该-01,false), Span(4,5,List(1),这样,这样,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 这样, 0 -> 该-01),Map(x10 -> 这样, x8 -> 该-01, x11 -> 你))),[Ljava.lang.String;@bf2aa32,Annotation([Ljava.lang.String;@56da96b3,[Ljava.lang.String;@6b3d9c38,[Ljava.lang.String;@426710f0),Annotation([Ljava.lang.String;@5c5a91b4,[Ljava.lang.String;@5e37fb82,[Ledu.cmu.lti.nlp.amr.Dependency;@59ec7020),Annotation([Ljava.lang.String;@23f60b7d,[Ljava.lang.String;@2ba9f986,[Ljava.lang.String;@4aa3fc9a),Annotation([Ljava.lang.String;@70f4f89e,[Ljava.lang.String;@634aa81e,[Ledu.cmu.lti.nlp.amr.Entity;@74b1838))
AMR:
(x8 / 该-01, location, x10 / 这样)
(x8 / 该-01, location, x11 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 5,954 microseconds
Sentence: 你 会 难受 的 。

Oracle Span 1:  会 => 会-01
Oracle Span 2:  你 => 你
Oracle Span 3:  难受 => 难受-01
Spans:
Span 1-2:  会 => 会-01
Span 0-1:  你 => 你
Span 2-3:  难受 => 难受-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-01
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  难受 => 难受-01

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	dep	_	_
3	难受	_	VV	VV	_	0	root	_	_
4	的	_	SP	SP	_	3	dep	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 你)
(x0 / 会-01, arg1, x3 / 难受-01)

Input(Some(Graph((会-01 :arg1 (难受-01 :arg0 x2) :arg0 你),ArrayBuffer(Span(1,2,List(0),会,会-01,false), Span(2,3,List(1),难受,难受-01,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 难受-01, 0 -> 会-01),Map(x2 -> 你, x3 -> 难受-01, x0 -> 会-01))),[Ljava.lang.String;@52d96367,Annotation([Ljava.lang.String;@5be51aa,[Ljava.lang.String;@3302035b,[Ljava.lang.String;@6c5747db),Annotation([Ljava.lang.String;@750cd36d,[Ljava.lang.String;@2c8ff67,[Ledu.cmu.lti.nlp.amr.Dependency;@21733cbe),Annotation([Ljava.lang.String;@77ccded4,[Ljava.lang.String;@64c8fcfb,[Ljava.lang.String;@21be14c2),Annotation([Ljava.lang.String;@19105a87,[Ljava.lang.String;@83b0d0f,[Ledu.cmu.lti.nlp.amr.Entity;@2bb717d7))
AMR:
(x0 / 会-01, ARG6, x2 / 你)
(x0 / 会-01, compared-to, x3 / 难受-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,371 microseconds
Sentence: 我 会 象 是 死去 的 样子 ， 但 这 不 会 是 真的 … ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  会 => 会-02
Oracle Span 3:  我 => 我
Oracle Span 4:  死去 => 死去-01
Oracle Span 5:  真的 => 真的-01
Oracle Span 6:  这 => 这
Spans:
Span 1-2:  会 => 会-02
Span 11-12:  会 => 会-02
Span 0-1:  我 => 我
Span 4-5:  死去 => 死去-01
Span 13-14:  真的 => 真的-01
Span 9-10:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-02
Oracle Span 11-12:  会 => 会-02
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  死去 => 死去-01
Oracle Span 13-14:  真的 => 真的-01
Oracle Span 9-10:  这 => 这

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	会	_	VV	VV	_	0	root	_	_
3	象	_	P	P	_	2	prep	_	_
4	是	_	VC	VC	_	7	rcmod	_	_
5	死去	_	NN	NN	_	4	attr	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	样子	_	NN	NN	_	3	pobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	但	_	AD	AD	_	13	advmod	_	_
10	这	_	PN	PN	_	13	nsubj	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	会	_	VV	VV	_	13	mmod	_	_
13	是	_	VC	VC	_	2	conj	_	_
14	真的	_	NN	NN	_	15	nn	_	_
15	…	_	NN	NN	_	13	attr	_	_
16	”	_	PU	PU	_	13	punct	_	_

Oracle:
(x47 / 会-02, arg0, x49 / 真的-01)
(x49 / 真的-01, arg0, x50 / 这)

Input(Some(Graph((say :arg1 (contrast :arg1 (会-02 :arg0 (像-01 :arg0 我 :arg1 (死去-01 :arg0 x41))) :arg2 (会-02 :arg0 (真的-01 :arg0 这) :polarity -))),ArrayBuffer(Span(1,2,List(0),会,会-02,false), Span(0,1,List(1),我,我,false), Span(4,5,List(2),死去,死去-01,false), Span(11,12,List(3),会,会-02,false), Span(13,14,List(4),真的,真的-01,false), Span(9,10,List(5),这,这,false)),Map(2 -> 死去-01, 5 -> 这, 1 -> 我, 4 -> 真的-01, 0 -> 会-02, 3 -> 会-02),Map(x49 -> 真的-01, x45 -> 死去-01, x39 -> 会-02, x41 -> 我, x50 -> 这, x47 -> 会-02))),[Ljava.lang.String;@7afe0e67,Annotation([Ljava.lang.String;@6121a7dd,[Ljava.lang.String;@31228d83,[Ljava.lang.String;@22b82ddf),Annotation([Ljava.lang.String;@28bf82d9,[Ljava.lang.String;@44ccd75c,[Ledu.cmu.lti.nlp.amr.Dependency;@61a704d3),Annotation([Ljava.lang.String;@2120bed,[Ljava.lang.String;@566fe83c,[Ljava.lang.String;@743bb39a),Annotation([Ljava.lang.String;@2de3b052,[Ljava.lang.String;@3f3c8b60,[Ledu.cmu.lti.nlp.amr.Entity;@16bbaab3))
AMR:
(x39 / 会-02, mode, x45 / 死去-01)
(x39 / 会-02, quant, x41 / 我)
(x47 / 会-02, mod, x50 / 这)
(x47 / 会-02, mode, x49 / 真的-01)
(x47 / 会-02, polite, x45 / 死去-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 17,394 microseconds
Sentence: 我 默默无言 。

Oracle Span 1:  我 => 我
Oracle Span 2:  默默无言 => 默默无言
Spans:
Span 0-1:  我 => 我
Span 1-2:  默默无言 => 默默无言

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  默默无言 => 默默无言

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	默默无言	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 默默无言, arg0, x2 / 我)

Input(Some(Graph((默默无言 :arg0 我),ArrayBuffer(Span(1,2,List(0),默默无言,默默无言,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 默默无言),Map(x2 -> 我, x0 -> 默默无言))),[Ljava.lang.String;@3f357c9d,Annotation([Ljava.lang.String;@fe42a09,[Ljava.lang.String;@5458c71e,[Ljava.lang.String;@1ffd0114),Annotation([Ljava.lang.String;@b3857e2,[Ljava.lang.String;@25a290ee,[Ledu.cmu.lti.nlp.amr.Dependency;@37d0d373),Annotation([Ljava.lang.String;@4052913c,[Ljava.lang.String;@99c4993,[Ljava.lang.String;@38089dae),Annotation([Ljava.lang.String;@9729a97,[Ljava.lang.String;@5dfd31f4,[Ledu.cmu.lti.nlp.amr.Entity;@36463b09))
AMR:
(x0 / 默默无言, value, x2 / 我)

WARNING: makeIds can't find span Id: 0.0
Decoded in 4,351 microseconds
Sentence: “ 你 明白 ， 路 很 远 。

Oracle Span 1:  你 => 你
Oracle Span 2:  很 => 很
Oracle Span 3:  明白 => 明白-01
Oracle Span 4:  路 => 路
Oracle Span 5:  远 => 远-01
Spans:
Span 1-2:  你 => 你
Span 5-6:  很 => 很
Span 2-3:  明白 => 明白-01
Span 4-5:  路 => 路
Span 6-7:  远 => 远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  很 => 很
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 4-5:  路 => 路
Oracle Span 6-7:  远 => 远-01

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	路	_	NN	NN	_	7	nsubj	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	远	_	VA	VA	_	3	ccomp	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 远-01, arg0, x12 / 路)
(x10 / 远-01, degree, x11 / 很)
(x8 / 明白-01, arg0, x9 / 你)
(x8 / 明白-01, arg2, x10 / 远-01)

Input(Some(Graph((say :arg1 (明白-01 :arg2 (远-01 :arg0 路 :degree 很) :arg0 你)),ArrayBuffer(Span(2,3,List(0),明白,明白-01,false), Span(6,7,List(1),远,远-01,false), Span(4,5,List(2),路,路,false), Span(5,6,List(3),很,很,false), Span(1,2,List(4),你,你,false)),Map(2 -> 路, 1 -> 远-01, 4 -> 你, 0 -> 明白-01, 3 -> 很),Map(x10 -> 远-01, x8 -> 明白-01, x12 -> 路, x11 -> 很, x9 -> 你))),[Ljava.lang.String;@4adf3582,Annotation([Ljava.lang.String;@57e4b86c,[Ljava.lang.String;@632241f5,[Ljava.lang.String;@64bba0eb),Annotation([Ljava.lang.String;@577bfadb,[Ljava.lang.String;@25ae1f80,[Ledu.cmu.lti.nlp.amr.Dependency;@54f2df29),Annotation([Ljava.lang.String;@6df791a4,[Ljava.lang.String;@655203e3,[Ljava.lang.String;@305552d6),Annotation([Ljava.lang.String;@729cd862,[Ljava.lang.String;@23b71d24,[Ledu.cmu.lti.nlp.amr.Entity;@568f4faa))
AMR:
(x10 / 远-01, degree, x11 / 很)
(x12 / 路, mod, x10 / 远-01)
(x8 / 明白-01, manner, x9 / 你)
(x8 / 明白-01, prep-through, x12 / 路)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 10,460 microseconds
Sentence: 我 不 能 带 着 这 付 身躯 走 。

Oracle Span 1:  带 => 带-02
Oracle Span 2:  我 => 我
Oracle Span 3:  能 => 能-01
Oracle Span 4:  走 => 走-02
Oracle Span 5:  身躯 => 身躯
Oracle Span 6:  这 => 这
Spans:
Span 3-4:  带 => 带-02
Span 0-1:  我 => 我
Span 2-3:  能 => 能-01
Span 8-9:  走 => 走-02
Span 7-8:  身躯 => 身躯
Span 5-6:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  带 => 带-02
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  能 => 能-01
Oracle Span 8-9:  走 => 走-02
Oracle Span 7-8:  身躯 => 身躯
Oracle Span 5-6:  这 => 这

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	能	_	VV	VV	_	4	mmod	_	_
4	带	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	这	_	PN	PN	_	4	dobj	_	_
7	付	_	VV	VV	_	4	conj	_	_
8	身躯	_	NN	NN	_	7	dobj	_	_
9	走	_	VV	VV	_	4	conj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 能-01, arg0, x18 / 走-02)
(x18 / 走-02, arg0, x19 / 我)
(x18 / 走-02, manner, x21 / 带-02)
(x21 / 带-02, arg1, x23 / 身躯)
(x23 / 身躯, mod, x24 / 这)

Input(Some(Graph((能-01 :polarity - :arg0 (走-02 :manner (带-02 :arg1 (身躯 :mod 这) :arg0 x19) :arg0 我)),ArrayBuffer(Span(2,3,List(0),能,能-01,false), Span(8,9,List(1),走,走-02,false), Span(3,4,List(2),带,带-02,false), Span(7,8,List(3),身躯,身躯,false), Span(5,6,List(4),这,这,false), Span(0,1,List(5),我,我,false)),Map(2 -> 带-02, 5 -> 我, 1 -> 走-02, 4 -> 这, 0 -> 能-01, 3 -> 身躯),Map(x19 -> 我, x21 -> 带-02, x24 -> 这, x18 -> 走-02, x23 -> 身躯, x0 -> 能-01))),[Ljava.lang.String;@4c56644f,Annotation([Ljava.lang.String;@589dfa6f,[Ljava.lang.String;@43588265,[Ljava.lang.String;@6f8667bb),Annotation([Ljava.lang.String;@100d0218,[Ljava.lang.String;@2774dcf4,[Ledu.cmu.lti.nlp.amr.Dependency;@20b829d5),Annotation([Ljava.lang.String;@7c5f29c6,[Ljava.lang.String;@4baf997,[Ljava.lang.String;@5280688),Annotation([Ljava.lang.String;@643f6179,[Ljava.lang.String;@61ab6521,[Ledu.cmu.lti.nlp.amr.Entity;@328e4ec2))
AMR:
(x0 / 能-01, ARG1, x18 / 走-02)
(x18 / 走-02, domain, x19 / 我)
(x18 / 走-02, manner, x21 / 带-02)
(x21 / 带-02, ARG3, x23 / 身躯)
(x23 / 身躯, mod, x24 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,572 microseconds
Sentence: 它 太 重 了 。 ”

Oracle Span 1:  太 => 太
Oracle Span 2:  它 => 它
Oracle Span 3:  重 => 重-02
Spans:
Span 1-2:  太 => 太
Span 0-1:  它 => 它
Span 2-3:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  太 => 太
Oracle Span 0-1:  它 => 它
Oracle Span 2-3:  重 => 重-02

Dependencies:
1	它	_	PN	PN	_	3	nsubj	_	_
2	太	_	AD	AD	_	3	advmod	_	_
3	重	_	VA	VA	_	0	root	_	_
4	了	_	SP	SP	_	3	dep	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 重-02, arg0, x9 / 它)
(x7 / 重-02, degree, x8 / 太)

Input(Some(Graph((say :arg1 (重-02 :arg0 它 :degree 太)),ArrayBuffer(Span(2,3,List(0),重,重-02,false), Span(0,1,List(1),它,它,false), Span(1,2,List(2),太,太,false)),Map(2 -> 太, 1 -> 它, 0 -> 重-02),Map(x8 -> 太, x7 -> 重-02, x9 -> 它))),[Ljava.lang.String;@7757025d,Annotation([Ljava.lang.String;@68fc9167,[Ljava.lang.String;@52c46334,[Ljava.lang.String;@12fccff0),Annotation([Ljava.lang.String;@5d767218,[Ljava.lang.String;@510da778,[Ledu.cmu.lti.nlp.amr.Dependency;@20a1b3ae),Annotation([Ljava.lang.String;@54567b05,[Ljava.lang.String;@3a5e2525,[Ljava.lang.String;@6546371),Annotation([Ljava.lang.String;@2b458cd6,[Ljava.lang.String;@4c2c44e8,[Ledu.cmu.lti.nlp.amr.Entity;@7103745))
AMR:
(x7 / 重-02, degree, x8 / 太)
(x9 / 它, location, x8 / 太)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 6,479 microseconds
Sentence: 我 依然 沉默不语 。

Oracle Span 1:  依然 => 依然-01
Oracle Span 2:  我 => 我
Oracle Span 3:  沉默不语 => 沉默不语
Spans:
Span 1-2:  依然 => 依然-01
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  依然 => 依然-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	依然	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 沉默不语, arg0, x2 / 我)
(x0 / 沉默不语, manner, x4 / 依然-01)

Input(Some(Graph((沉默不语 :manner 依然-01 :arg0 我),ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),依然,依然-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 依然-01, 0 -> 沉默不语),Map(x2 -> 我, x4 -> 依然-01, x0 -> 沉默不语))),[Ljava.lang.String;@227a933d,Annotation([Ljava.lang.String;@25de8898,[Ljava.lang.String;@bfb93cf,[Ljava.lang.String;@dd737ea),Annotation([Ljava.lang.String;@7bc2ae16,[Ljava.lang.String;@2a0963be,[Ledu.cmu.lti.nlp.amr.Dependency;@7d3bf8db),Annotation([Ljava.lang.String;@49e7e8f1,[Ljava.lang.String;@27bb4dc5,[Ljava.lang.String;@464ede1f),Annotation([Ljava.lang.String;@64910b2d,[Ljava.lang.String;@1247c72e,[Ledu.cmu.lti.nlp.amr.Entity;@6fef75c6))
AMR:
(x0 / 沉默不语, manner, x4 / 依然-01)
(x0 / 沉默不语, month, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,854 microseconds
Sentence: “ 但是 ， 这 就 好象 剥落 的 旧 树皮 一样 。

Oracle Span 1:  剥落 => 剥落-01
Oracle Span 2:  旧 => 旧-01
Oracle Span 3:  树皮 => 树皮
Oracle Span 4:  这 => 这
Spans:
Span 6-7:  剥落 => 剥落-01
Span 8-9:  旧 => 旧-01
Span 9-10:  树皮 => 树皮
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  剥落 => 剥落-01
Oracle Span 8-9:  旧 => 旧-01
Oracle Span 9-10:  树皮 => 树皮
Oracle Span 3-4:  这 => 这

Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	但是	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	好象	_	VV	VV	_	0	root	_	_
7	剥落	_	NN	NN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	旧	_	JJ	JJ	_	10	amod	_	_
10	树皮	_	NN	NN	_	11	nsubj	_	_
11	一样	_	VA	VA	_	6	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x13 / 树皮, mod, x14 / 旧-01)
(x15 / 剥落-01, arg1, x13 / 树皮)

Input(Some(Graph((say :arg1 (contrast :arg2 (像-01 :arg0 这 :arg1 (树皮 :arg1-of 剥落-01 :mod 旧-01)))),ArrayBuffer(Span(3,4,List(0),这,这,false), Span(9,10,List(1),树皮,树皮,false), Span(6,7,List(2),剥落,剥落-01,false), Span(8,9,List(3),旧,旧-01,false)),Map(2 -> 剥落-01, 1 -> 树皮, 0 -> 这, 3 -> 旧-01),Map(x13 -> 树皮, x12 -> 这, x15 -> 剥落-01, x14 -> 旧-01))),[Ljava.lang.String;@5f61e002,Annotation([Ljava.lang.String;@334540a0,[Ljava.lang.String;@1f179f51,[Ljava.lang.String;@b428830),Annotation([Ljava.lang.String;@5b7308aa,[Ljava.lang.String;@42aa1324,[Ledu.cmu.lti.nlp.amr.Dependency;@6164e137),Annotation([Ljava.lang.String;@7ef8e623,[Ljava.lang.String;@3d8d970e,[Ljava.lang.String;@2fac80a8),Annotation([Ljava.lang.String;@6987a133,[Ljava.lang.String;@50778bde,[Ledu.cmu.lti.nlp.amr.Entity;@1934339))
AMR:
(x13 / 树皮, mod, x12 / 这)
(x13 / 树皮, mod, x14 / 旧-01)
(x15 / 剥落-01, purpose, x14 / 旧-01)

WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
Decoded in 11,244 microseconds
Sentence: 旧 树皮 ， 并 没有 什么 可悲 的 。 ”

Oracle Span 1:  可悲 => 可悲-01
Oracle Span 2:  旧 => 旧-01
Oracle Span 3:  树皮 => 树皮
Spans:
Span 6-7:  可悲 => 可悲-01
Span 0-1:  旧 => 旧-01
Span 1-2:  树皮 => 树皮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  可悲 => 可悲-01
Oracle Span 0-1:  旧 => 旧-01
Oracle Span 1-2:  树皮 => 树皮

Dependencies:
1	旧	_	JJ	JJ	_	2	amod	_	_
2	树皮	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	并	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	0	root	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	可悲	_	NN	NN	_	5	dobj	_	_
8	的	_	SP	SP	_	5	dep	_	_
9	。	_	PU	PU	_	5	punct	_	_
10	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 可悲-01, arg0, x17 / 树皮)
(x17 / 树皮, mod, x18 / 旧-01)

Input(Some(Graph((say :arg1 (可悲-01 :arg0 (树皮 :mod 旧-01) :polarity -)),ArrayBuffer(Span(6,7,List(0),可悲,可悲-01,false), Span(1,2,List(1),树皮,树皮,false), Span(0,1,List(2),旧,旧-01,false)),Map(2 -> 旧-01, 1 -> 树皮, 0 -> 可悲-01),Map(x18 -> 旧-01, x14 -> 可悲-01, x17 -> 树皮))),[Ljava.lang.String;@4af12a63,Annotation([Ljava.lang.String;@1eab8437,[Ljava.lang.String;@72eed547,[Ljava.lang.String;@69ffdaa8),Annotation([Ljava.lang.String;@2a1e57c6,[Ljava.lang.String;@68d6f48e,[Ledu.cmu.lti.nlp.amr.Dependency;@6c96403e),Annotation([Ljava.lang.String;@7babed9e,[Ljava.lang.String;@2353354a,[Ljava.lang.String;@7c7ed72a),Annotation([Ljava.lang.String;@22b7ef2b,[Ljava.lang.String;@6d421fe,[Ledu.cmu.lti.nlp.amr.Entity;@3c17bd0b))
AMR:
(x14 / 可悲-01, mod, x17 / 树皮)
(x17 / 树皮, mod, x18 / 旧-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 6,449 microseconds
Sentence: 我 还是 沉默不语 。

Oracle Span 1:  我 => 我
Oracle Span 2:  沉默不语 => 沉默不语
Oracle Span 3:  还是 => 还是
Spans:
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语
Oracle Span 1-2:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 沉默不语, arg0, x2 / 我)
(x0 / 沉默不语, manner, x3 / 还是)

Input(Some(Graph((沉默不语 :manner 还是 :arg0 我),ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),还是,还是,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 还是, 0 -> 沉默不语),Map(x2 -> 我, x3 -> 还是, x0 -> 沉默不语))),[Ljava.lang.String;@36dafa24,Annotation([Ljava.lang.String;@2b098563,[Ljava.lang.String;@c758a2d,[Ljava.lang.String;@d0b814d),Annotation([Ljava.lang.String;@6ce15112,[Ljava.lang.String;@ba4f370,[Ledu.cmu.lti.nlp.amr.Dependency;@2ba024cb),Annotation([Ljava.lang.String;@7af0d91b,[Ljava.lang.String;@1c7f6e96,[Ljava.lang.String;@30ec211a),Annotation([Ljava.lang.String;@1ac0cdb0,[Ljava.lang.String;@6684f7f2,[Ledu.cmu.lti.nlp.amr.Entity;@1682e6a))
AMR:
(x0 / 沉默不语, manner, x3 / 还是)
(x0 / 沉默不语, month, x2 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 4,395 microseconds
Sentence: 他 有些 泄气 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  有些 => 有些
Oracle Span 3:  泄气 => 泄气-01
Spans:
Span 0-1:  他 => 他
Span 1-2:  有些 => 有些
Span 2-3:  泄气 => 泄气-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  有些 => 有些
Oracle Span 2-3:  泄气 => 泄气-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	有些	_	AD	AD	_	3	advmod	_	_
3	泄气	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 泄气-01, arg0, x2 / 他)
(x0 / 泄气-01, manner, x4 / 有些)

Input(Some(Graph((泄气-01 :manner 有些 :arg0 他),ArrayBuffer(Span(2,3,List(0),泄气,泄气-01,false), Span(1,2,List(1),有些,有些,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 有些, 0 -> 泄气-01),Map(x2 -> 他, x4 -> 有些, x0 -> 泄气-01))),[Ljava.lang.String;@505d2bac,Annotation([Ljava.lang.String;@4cecc15a,[Ljava.lang.String;@d969452,[Ljava.lang.String;@4d4df0f4),Annotation([Ljava.lang.String;@74f4a2ba,[Ljava.lang.String;@5e385b6f,[Ledu.cmu.lti.nlp.amr.Dependency;@67b560fe),Annotation([Ljava.lang.String;@45dde6ac,[Ljava.lang.String;@14ed7ddf,[Ljava.lang.String;@892af0e),Annotation([Ljava.lang.String;@446c8c72,[Ljava.lang.String;@6e2eead5,[Ledu.cmu.lti.nlp.amr.Entity;@11d2714a))
AMR:
(x0 / 泄气-01, ARG6, x2 / 他)
(x0 / 泄气-01, manner, x4 / 有些)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 6,021 microseconds
Sentence: 但是 他 又 振作 起来 ： “ 这 将 是 蛮 好 的 ， 你 知道 。

Oracle Span 1:  他 => 他
Oracle Span 2:  你 => 你
Oracle Span 3:  又 => 又
Oracle Span 4:  好 => 好-01
Oracle Span 5:  将 => 将
Oracle Span 6:  振作 => 振作-01
Oracle Span 7:  知道 => 知道-01
Oracle Span 8:  蛮 => 蛮
Oracle Span 9:  这 => 这
Spans:
Span 1-2:  他 => 他
Span 14-15:  你 => 你
Span 2-3:  又 => 又
Span 11-12:  好 => 好-01
Span 8-9:  将 => 将
Span 3-4:  振作 => 振作-01
Span 15-16:  知道 => 知道-01
Span 10-11:  蛮 => 蛮
Span 7-8:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 14-15:  你 => 你
Oracle Span 2-3:  又 => 又
Oracle Span 11-12:  好 => 好-01
Oracle Span 8-9:  将 => 将
Oracle Span 3-4:  振作 => 振作-01
Oracle Span 15-16:  知道 => 知道-01
Oracle Span 10-11:  蛮 => 蛮
Oracle Span 7-8:  这 => 这

Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	振作	_	VV	VV	_	0	root	_	_
5	起来	_	VV	VV	_	4	ccomp	_	_
6	：	_	PU	PU	_	4	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	这	_	PN	PN	_	10	nsubj	_	_
9	将	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	4	conj	_	_
11	蛮	_	AD	AD	_	12	advmod	_	_
12	好	_	VA	VA	_	10	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	,	_	PU	PU	_	4	punct	_	_
15	你	_	PN	PN	_	16	nsubj	_	_
16	知道	_	VV	VV	_	4	conj	_	_
17	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 振作-01, arg0, x11 / 他)
(x10 / 振作-01, manner, x12 / 又)
(x15 / 知道-01, arg0, x16 / 你)
(x15 / 知道-01, arg1, x20 / 好-01)
(x20 / 好-01, degree, x21 / 蛮)
(x20 / 好-01, domain, x22 / 这)
(x20 / 好-01, time, x23 / 将)

Input(Some(Graph((contrast :arg1 (and :op (振作-01 :manner 又 :arg0 他) :op (say :arg0 x11 :arg1 (知道-01 :arg1 (好-01 :time 将 :domain 这 :degree 蛮) :arg0 你)))),ArrayBuffer(Span(3,4,List(0),振作,振作-01,false), Span(2,3,List(1),又,又,false), Span(1,2,List(2),他,他,false), Span(15,16,List(3),知道,知道-01,false), Span(11,12,List(4),好,好-01,false), Span(8,9,List(5),将,将,false), Span(7,8,List(6),这,这,false), Span(10,11,List(7),蛮,蛮,false), Span(14,15,List(8),你,你,false)),Map(2 -> 他, 5 -> 将, 8 -> 你, 7 -> 蛮, 1 -> 又, 4 -> 好-01, 6 -> 这, 0 -> 振作-01, 3 -> 知道-01),Map(x22 -> 这, x16 -> 你, x10 -> 振作-01, x12 -> 又, x21 -> 蛮, x15 -> 知道-01, x23 -> 将, x11 -> 他, x20 -> 好-01))),[Ljava.lang.String;@ca546a1,Annotation([Ljava.lang.String;@2c8a445b,[Ljava.lang.String;@356b6b5d,[Ljava.lang.String;@37b1149b),Annotation([Ljava.lang.String;@1187dc82,[Ljava.lang.String;@6fd1ea75,[Ledu.cmu.lti.nlp.amr.Dependency;@18e4551),Annotation([Ljava.lang.String;@3ea48c37,[Ljava.lang.String;@11e834ad,[Ljava.lang.String;@710ae6a7),Annotation([Ljava.lang.String;@25d911a,[Ljava.lang.String;@18026052,[Ledu.cmu.lti.nlp.amr.Entity;@489f62a3))
AMR:
(x10 / 振作-01, degree, x21 / 蛮)
(x10 / 振作-01, manner, x12 / 又)
(x10 / 振作-01, prep-into, x11 / 他)
(x15 / 知道-01, prep-out, x20 / 好-01)
(x15 / 知道-01, snt5, x16 / 你)
(x20 / 好-01, degree, x21 / 蛮)
(x20 / 好-01, domain, x22 / 这)
(x20 / 好-01, time, x23 / 将)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.2
WARNING: makeIds can't find span Id: 0.0.1.1.1.1
WARNING: makeIds can't find span Id: 0.0.1.1.1.0
WARNING: makeIds can't find span Id: 0.0.1.1.0
Decoded in 37,178 microseconds
Sentence: 我 也 一定 会 看 星星 的 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  也 => 也
Oracle Span 3:  会 => 会-02
Oracle Span 4:  我 => 我
Oracle Span 5:  星星 => 星星
Oracle Span 6:  看 => 看-02
Spans:
Span 2-3:  一定 => 一定
Span 1-2:  也 => 也
Span 3-4:  会 => 会-02
Span 0-1:  我 => 我
Span 5-6:  星星 => 星星
Span 4-5:  看 => 看-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  一定 => 一定
Oracle Span 1-2:  也 => 也
Oracle Span 3-4:  会 => 会-02
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  星星 => 星星
Oracle Span 4-5:  看 => 看-02

Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	一定	_	AD	AD	_	5	advmod	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	看	_	VV	VV	_	0	root	_	_
6	星星	_	NN	NN	_	5	dobj	_	_
7	的	_	SP	SP	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 看-02, arg0, x12 / 我)
(x11 / 看-02, arg1, x13 / 星星)
(x5 / 一定, arg1, x7 / 会-02)
(x7 / 会-02, arg0, x11 / 看-02)
(x7 / 会-02, manner, x14 / 也)

Input(Some(Graph((一定 :arg1 (会-02 :manner 也 :arg0 (看-02 :arg1 星星 :arg0 我))),ArrayBuffer(Span(2,3,List(0),一定,一定,false), Span(3,4,List(1),会,会-02,false), Span(1,2,List(2),也,也,false), Span(4,5,List(3),看,看-02,false), Span(5,6,List(4),星星,星星,false), Span(0,1,List(5),我,我,false)),Map(2 -> 也, 5 -> 我, 1 -> 会-02, 4 -> 星星, 0 -> 一定, 3 -> 看-02),Map(x13 -> 星星, x5 -> 一定, x12 -> 我, x7 -> 会-02, x11 -> 看-02, x14 -> 也))),[Ljava.lang.String;@6e068ac9,Annotation([Ljava.lang.String;@3d0352,[Ljava.lang.String;@bb6f3f7,[Ljava.lang.String;@388f1258),Annotation([Ljava.lang.String;@62058742,[Ljava.lang.String;@aca2fc3,[Ledu.cmu.lti.nlp.amr.Dependency;@36df4c26),Annotation([Ljava.lang.String;@76828577,[Ljava.lang.String;@38732372,[Ljava.lang.String;@639cb788),Annotation([Ljava.lang.String;@2fee69a1,[Ljava.lang.String;@4d25f816,[Ledu.cmu.lti.nlp.amr.Entity;@6c6c2a73))
AMR:
(x11 / 看-02, example, x12 / 我)
(x11 / 看-02, quant, x13 / 星星)
(x5 / 一定, degree, x7 / 会-02)
(x7 / 会-02, manner, x14 / 也)
(x7 / 会-02, mode, x11 / 看-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 14,770 microseconds
Sentence: 所有 的 星星 都 将 是 带有 生 了 锈 的 辘轳 的 井 。

Oracle Span 1:  井 => 井
Oracle Span 2:  将 => 将
Oracle Span 3:  带有 => 带有-01
Oracle Span 4:  所有 => 所有
Oracle Span 5:  星星 => 星星
Oracle Span 6:  生 => 生-02
Oracle Span 7:  辘轳 => 辘轳
Oracle Span 8:  锈 => 锈
Spans:
Span 13-14:  井 => 井
Span 4-5:  将 => 将
Span 6-7:  带有 => 带有-01
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 7-8:  生 => 生-02
Span 11-12:  辘轳 => 辘轳
Span 9-10:  锈 => 锈

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  井 => 井
Oracle Span 4-5:  将 => 将
Oracle Span 6-7:  带有 => 带有-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 2-3:  星星 => 星星
Oracle Span 7-8:  生 => 生-02
Oracle Span 11-12:  辘轳 => 辘轳
Oracle Span 9-10:  锈 => 锈

Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	星星	_	NN	NN	_	6	nsubj	_	_
4	都	_	AD	AD	_	6	advmod	_	_
5	将	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	带有	_	VV	VV	_	14	rcmod	_	_
8	生	_	VV	VV	_	12	rcmod	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	锈	_	NN	NN	_	8	dobj	_	_
11	的	_	DEC	DEC	_	8	cpm	_	_
12	辘轳	_	NN	NN	_	7	dobj	_	_
13	的	_	DEC	DEC	_	7	cpm	_	_
14	井	_	NN	NN	_	6	attr	_	_
15	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 井, domain, x8 / 星星)
(x0 / 井, time, x10 / 将)
(x4 / 带有-01, arg0, x0 / 井)
(x4 / 带有-01, arg1, x5 / 辘轳)
(x6 / 生-02, arg0, x5 / 辘轳)
(x6 / 生-02, arg1, x7 / 锈)
(x8 / 星星, mod, x9 / 所有)

Input(Some(Graph((井 :time 将 :domain (星星 :mod 所有) :arg0-of (带有-01 :arg1 (辘轳 :arg0-of (生-02 :arg1 锈)))),ArrayBuffer(Span(13,14,List(0),井,井,false), Span(4,5,List(1),将,将,false), Span(2,3,List(2),星星,星星,false), Span(0,1,List(3),所有,所有,false), Span(6,7,List(4),带有,带有-01,false), Span(11,12,List(5),辘轳,辘轳,false), Span(7,8,List(6),生,生-02,false), Span(9,10,List(7),锈,锈,false)),Map(2 -> 星星, 5 -> 辘轳, 7 -> 锈, 1 -> 将, 4 -> 带有-01, 6 -> 生-02, 0 -> 井, 3 -> 所有),Map(x10 -> 将, x5 -> 辘轳, x8 -> 星星, x7 -> 锈, x4 -> 带有-01, x6 -> 生-02, x9 -> 所有, x0 -> 井))),[Ljava.lang.String;@6a4af081,Annotation([Ljava.lang.String;@36b53f08,[Ljava.lang.String;@54329480,[Ljava.lang.String;@590013c7),Annotation([Ljava.lang.String;@64f32e9e,[Ljava.lang.String;@7b211077,[Ledu.cmu.lti.nlp.amr.Dependency;@3b770d07),Annotation([Ljava.lang.String;@62b0bf85,[Ljava.lang.String;@1fcaea93,[Ljava.lang.String;@6c9bf3b5),Annotation([Ljava.lang.String;@6f07d414,[Ljava.lang.String;@8ac12e6,[Ledu.cmu.lti.nlp.amr.Entity;@40faff12))
AMR:
(x0 / 井, domain, x8 / 星星)
(x0 / 井, time, x10 / 将)
(x4 / 带有-01, subset, x5 / 辘轳)
(x4 / 带有-01, value, x0 / 井)
(x6 / 生-02, mod, x7 / 锈)
(x6 / 生-02, snt11, x5 / 辘轳)
(x8 / 星星, mod, x9 / 所有)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 24,164 microseconds
Sentence: 所有 的 星星 都 会 倒 水 给 我 喝 … ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  倒 => 倒-02
Oracle Span 3:  喝 => 喝-01
Oracle Span 4:  我 => 我
Oracle Span 5:  所有 => 所有
Oracle Span 6:  星星 => 星星
Oracle Span 7:  水 => 水
Oracle Span 8:  给 => 给-01
Oracle Span 9:  都 => 都
Spans:
Span 4-5:  会 => 会-02
Span 5-6:  倒 => 倒-02
Span 9-10:  喝 => 喝-01
Span 8-9:  我 => 我
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 6-7:  水 => 水
Span 7-8:  给 => 给-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  会 => 会-02
Oracle Span 5-6:  倒 => 倒-02
Oracle Span 9-10:  喝 => 喝-01
Oracle Span 8-9:  我 => 我
Oracle Span 0-1:  所有 => 所有
Oracle Span 2-3:  星星 => 星星
Oracle Span 6-7:  水 => 水
Oracle Span 7-8:  给 => 给-01
Oracle Span 3-4:  都 => 都

Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	星星	_	NN	NN	_	10	nsubj	_	_
4	都	_	AD	AD	_	10	advmod	_	_
5	会	_	VV	VV	_	10	mmod	_	_
6	倒	_	VV	VV	_	10	mmod	_	_
7	水	_	NN	NN	_	10	dep	_	_
8	给	_	P	P	_	10	prep	_	_
9	我	_	PN	PN	_	8	pobj	_	_
10	喝	_	VV	VV	_	0	root	_	_
11	…	_	NN	NN	_	10	dobj	_	_
12	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x23 / 会-02, arg0, x25 / 倒-02)
(x23 / 会-02, manner, x28 / 都)
(x25 / 倒-02, arg0, x26 / 星星)
(x25 / 倒-02, arg1, x29 / 水)
(x25 / 倒-02, purpose, x30 / 给-01)
(x26 / 星星, mod, x27 / 所有)
(x30 / 给-01, arg2, x31 / 我)
(x30 / 给-01, arg3, x32 / 喝-01)

Input(Some(Graph((say :arg1 (会-02 :manner 都 :arg0 (倒-02 :purpose (给-01 :arg3 喝-01 :arg2 我) :arg1 水 :arg0 (星星 :mod 所有)))),ArrayBuffer(Span(4,5,List(0),会,会-02,false), Span(3,4,List(1),都,都,false), Span(5,6,List(2),倒,倒-02,false), Span(7,8,List(3),给,给-01,false), Span(9,10,List(4),喝,喝-01,false), Span(8,9,List(5),我,我,false), Span(6,7,List(6),水,水,false), Span(2,3,List(7),星星,星星,false), Span(0,1,List(8),所有,所有,false)),Map(2 -> 倒-02, 5 -> 我, 8 -> 所有, 7 -> 星星, 1 -> 都, 4 -> 喝-01, 6 -> 水, 0 -> 会-02, 3 -> 给-01),Map(x28 -> 都, x31 -> 我, x25 -> 倒-02, x30 -> 给-01, x27 -> 所有, x23 -> 会-02, x26 -> 星星, x32 -> 喝-01, x29 -> 水))),[Ljava.lang.String;@734fbae3,Annotation([Ljava.lang.String;@223967ea,[Ljava.lang.String;@4a6a6a69,[Ljava.lang.String;@5d7f1e59),Annotation([Ljava.lang.String;@53e93fb7,[Ljava.lang.String;@3a861417,[Ledu.cmu.lti.nlp.amr.Dependency;@2326180c),Annotation([Ljava.lang.String;@68e47e7,[Ljava.lang.String;@1c00d406,[Ljava.lang.String;@16ac4d3d),Annotation([Ljava.lang.String;@559d19c,[Ljava.lang.String;@719c1faf,[Ledu.cmu.lti.nlp.amr.Entity;@6ba6557e))
AMR:
(x23 / 会-02, direction, x25 / 倒-02)
(x25 / 倒-02, degree, x28 / 都)
(x25 / 倒-02, direction, x29 / 水)
(x25 / 倒-02, prep-by, x26 / 星星)
(x25 / 倒-02, purpose, x30 / 给-01)
(x26 / 星星, mod, x27 / 所有)
(x30 / 给-01, prep-from, x32 / 喝-01)
(x30 / 给-01, prep-into, x31 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.1
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
Decoded in 21,117 microseconds
Sentence: 我 还是 沉默不语 。

Oracle Span 1:  我 => 我
Oracle Span 2:  沉默不语 => 沉默不语
Oracle Span 3:  还是 => 还是
Spans:
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语
Oracle Span 1-2:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 沉默不语, arg0, x4 / 我)
(x2 / 沉默不语, manner, x5 / 还是)

Input(Some(Graph((沉默不语 :manner 还是 :arg0 我),ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),还是,还是,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 还是, 0 -> 沉默不语),Map(x2 -> 沉默不语, x5 -> 还是, x4 -> 我))),[Ljava.lang.String;@1f172892,Annotation([Ljava.lang.String;@5409dfdd,[Ljava.lang.String;@45f9d394,[Ljava.lang.String;@1c2d63f0),Annotation([Ljava.lang.String;@3a588b5f,[Ljava.lang.String;@20b54cfe,[Ledu.cmu.lti.nlp.amr.Dependency;@2bdb5e0f),Annotation([Ljava.lang.String;@5c9e8a67,[Ljava.lang.String;@2262f0d8,[Ljava.lang.String;@283a8ad6),Annotation([Ljava.lang.String;@59e082f8,[Ljava.lang.String;@7185e611,[Ledu.cmu.lti.nlp.amr.Entity;@44d43cc9))
AMR:
(x2 / 沉默不语, manner, x5 / 还是)
(x2 / 沉默不语, month, x4 / 我)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 3,977 microseconds
Sentence: “ 这 将 是 多么 好玩 啊 ！

Oracle Span 1:  多么 => 多么
Oracle Span 2:  好玩 => 好玩-01
Oracle Span 3:  这 => 这
Spans:
Span 4-5:  多么 => 多么
Span 5-6:  好玩 => 好玩-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  多么 => 多么
Oracle Span 5-6:  好玩 => 好玩-01
Oracle Span 1-2:  这 => 这

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	将	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	多么	_	NN	NN	_	6	nn	_	_
6	好玩	_	NN	NN	_	4	attr	_	_
7	啊	_	SP	SP	_	4	dep	_	_
8	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 好玩-01, arg0, x10 / 这)
(x8 / 好玩-01, degree, x9 / 多么)

Input(Some(Graph((say :arg1 (好玩-01 :mode expressive :arg0 这 :degree 多么)),ArrayBuffer(Span(5,6,List(0),好玩,好玩-01,false), Span(1,2,List(1),这,这,false), Span(4,5,List(2),多么,多么,false)),Map(2 -> 多么, 1 -> 这, 0 -> 好玩-01),Map(x10 -> 这, x8 -> 好玩-01, x9 -> 多么))),[Ljava.lang.String;@384472bf,Annotation([Ljava.lang.String;@656ec00d,[Ljava.lang.String;@3b8507df,[Ljava.lang.String;@5ed25612),Annotation([Ljava.lang.String;@451816fd,[Ljava.lang.String;@56e5c8fb,[Ledu.cmu.lti.nlp.amr.Dependency;@45cd8607),Annotation([Ljava.lang.String;@9e33a6a,[Ljava.lang.String;@c497a55,[Ljava.lang.String;@7493d937),Annotation([Ljava.lang.String;@5dc7841c,[Ljava.lang.String;@4d67d5a4,[Ledu.cmu.lti.nlp.amr.Entity;@a3b858f))
AMR:
(x8 / 好玩-01, degree, x9 / 多么)
(x9 / 多么, domain, x10 / 这)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,106 microseconds
Sentence: 你 将 有 五亿 个 铃铛 ， 我 将 有 五亿 口 水井 … ”

Oracle Span 1:  你 => 你
Oracle Span 2:  将 => 将
Oracle Span 3:  将 => 将
Oracle Span 4:  我 => 我
Oracle Span 5:  有 => 有-01
Oracle Span 6:  有 => 有-01
Oracle Span 7:  水井 => 水井
Oracle Span 8:  铃铛 => 铃铛
Spans:
Span 0-1:  你 => 你
Span 1-2:  将 => 将
Span 8-9:  将 => 将
Span 7-8:  我 => 我
Span 2-3:  有 => 有-01
Span 9-10:  有 => 有-01
Span 12-13:  水井 => 水井
Span 5-6:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  将 => 将
Oracle Span 8-9:  将 => 将
Oracle Span 7-8:  我 => 我
Oracle Span 2-3:  有 => 有-01
Oracle Span 9-10:  有 => 有-01
Oracle Span 12-13:  水井 => 水井
Oracle Span 5-6:  铃铛 => 铃铛

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	将	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	五亿	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	铃铛	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	将	_	AD	AD	_	10	advmod	_	_
10	有	_	VE	VE	_	3	conj	_	_
11	五亿	_	CD	CD	_	12	nummod	_	_
12	口	_	M	M	_	13	clf	_	_
13	水井	_	NN	NN	_	10	dobj	_	_
14	…	_	PU	PU	_	3	punct	_	_
15	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 有-01, arg0, x16 / 你)
(x15 / 有-01, arg1, x17 / 铃铛)
(x15 / 有-01, time, x23 / 将)
(x19 / 有-01, arg0, x20 / 我)
(x19 / 有-01, arg1, x21 / 水井)
(x19 / 有-01, time, x24 / 将)

Input(Some(Graph((say :arg1 (and :op (有-01 :time 将 :arg1 (铃铛 :quant 500000000) :arg0 你) :op (有-01 :time 将 :arg1 (水井 :quant 500000000) :arg0 我))),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(1,2,List(1),将,将,false), Span(5,6,List(2),铃铛,铃铛,false), Span(0,1,List(3),你,你,false), Span(9,10,List(4),有,有-01,false), Span(8,9,List(5),将,将,false), Span(12,13,List(6),水井,水井,false), Span(7,8,List(7),我,我,false)),Map(2 -> 铃铛, 5 -> 将, 7 -> 我, 1 -> 将, 4 -> 有-01, 6 -> 水井, 0 -> 有-01, 3 -> 你),Map(x16 -> 你, x19 -> 有-01, x21 -> 水井, x15 -> 有-01, x24 -> 将, x23 -> 将, x20 -> 我, x17 -> 铃铛))),[Ljava.lang.String;@600bbf9e,Annotation([Ljava.lang.String;@18d30e7,[Ljava.lang.String;@72b40f87,[Ljava.lang.String;@2475fba3),Annotation([Ljava.lang.String;@19bf47fc,[Ljava.lang.String;@71dd4624,[Ledu.cmu.lti.nlp.amr.Dependency;@2347b7af),Annotation([Ljava.lang.String;@2864f887,[Ljava.lang.String;@4b07cad0,[Ljava.lang.String;@507049f2),Annotation([Ljava.lang.String;@4e94669c,[Ljava.lang.String;@41bb1f09,[Ledu.cmu.lti.nlp.amr.Entity;@349f0ca4))
AMR:
(x15 / 有-01, accompanier, x17 / 铃铛)
(x15 / 有-01, time, x23 / 将)
(x16 / 你, time, x23 / 将)
(x19 / 有-01, location, x21 / 水井)
(x19 / 有-01, manner, x17 / 铃铛)
(x19 / 有-01, poss, x20 / 我)
(x19 / 有-01, time, x24 / 将)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
Decoded in 18,564 microseconds
Sentence: 这时 ， 他 也 沉默 了 ， 因为 他 在 哭 。

Oracle Span 1:  也 => 也
Oracle Span 2:  他 => 他
Oracle Span 3:  哭 => 哭-01
Oracle Span 4:  沉默 => 沉默-01
Oracle Span 5:  这时 => 这时
Spans:
Span 3-4:  也 => 也
Span 2-3:  他 => 他
Span 10-11:  哭 => 哭-01
Span 4-5:  沉默 => 沉默-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  他 => 他
Oracle Span 10-11:  哭 => 哭-01
Oracle Span 4-5:  沉默 => 沉默-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	沉默	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	因为	_	P	P	_	5	prep	_	_
9	他	_	PN	PN	_	11	nsubj	_	_
10	在	_	AD	AD	_	11	advmod	_	_
11	哭	_	VV	VV	_	8	pccomp	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 沉默-01, arg0, x2 / 他)
(x0 / 沉默-01, cause, x3 / 哭-01)
(x0 / 沉默-01, manner, x6 / 也)
(x0 / 沉默-01, time, x5 / 这时)

Input(Some(Graph((沉默-01 :manner 也 :time 这时 :cause (哭-01 :arg0 x2) :arg0 他),ArrayBuffer(Span(4,5,List(0),沉默,沉默-01,false), Span(3,4,List(1),也,也,false), Span(0,1,List(2),这时,这时,false), Span(10,11,List(3),哭,哭-01,false), Span(2,3,List(4),他,他,false)),Map(2 -> 这时, 1 -> 也, 4 -> 他, 0 -> 沉默-01, 3 -> 哭-01),Map(x2 -> 他, x5 -> 这时, x3 -> 哭-01, x6 -> 也, x0 -> 沉默-01))),[Ljava.lang.String;@66f2ec1c,Annotation([Ljava.lang.String;@b3fc6d8,[Ljava.lang.String;@12e5d3e1,[Ljava.lang.String;@5ed31735),Annotation([Ljava.lang.String;@2fb082ff,[Ljava.lang.String;@5a4c98d7,[Ledu.cmu.lti.nlp.amr.Dependency;@668a32a4),Annotation([Ljava.lang.String;@2026fbff,[Ljava.lang.String;@baa227e,[Ljava.lang.String;@351e89fc),Annotation([Ljava.lang.String;@2b682e9,[Ljava.lang.String;@15586843,[Ledu.cmu.lti.nlp.amr.Entity;@4fbb1144))
AMR:
(x0 / 沉默-01, ARG6, x2 / 他)
(x0 / 沉默-01, direction, x3 / 哭-01)
(x0 / 沉默-01, manner, x6 / 也)
(x0 / 沉默-01, time, x5 / 这时)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 10,239 microseconds
Sentence: “ 就 是 这儿 。

Oracle Span 1:  就 => 就
Oracle Span 2:  这儿 => 这儿
Spans:
Span 1-2:  就 => 就
Span 3-4:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  就 => 就
Oracle Span 3-4:  这儿 => 这儿

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	这儿	_	PN	PN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 这儿, manner, x6 / 就)

Input(Some(Graph((say :arg1 (这儿 :manner 就)),ArrayBuffer(Span(3,4,List(0),这儿,这儿,false), Span(1,2,List(1),就,就,false)),Map(1 -> 就, 0 -> 这儿),Map(x5 -> 这儿, x6 -> 就))),[Ljava.lang.String;@e2b3026,Annotation([Ljava.lang.String;@38bc5ac0,[Ljava.lang.String;@6ef037e4,[Ljava.lang.String;@79d63a4f),Annotation([Ljava.lang.String;@2e2b9f53,[Ljava.lang.String;@749baa0c,[Ledu.cmu.lti.nlp.amr.Dependency;@1b3bec6c),Annotation([Ljava.lang.String;@53f7a906,[Ljava.lang.String;@2154652c,[Ljava.lang.String;@8b670c0),Annotation([Ljava.lang.String;@4c2ab536,[Ljava.lang.String;@22fb9a2c,[Ledu.cmu.lti.nlp.amr.Entity;@2084e65a))
AMR:
(x5 / 这儿, manner, x6 / 就)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,533 microseconds
Sentence: 让 我 自个儿 走 一 步 吧 。 ”

Oracle Span 1:  我 => 我
Oracle Span 2:  让 => 让-02
Oracle Span 3:  走 => 走-01
Spans:
Span 1-2:  我 => 我
Span 0-1:  让 => 让-02
Span 3-4:  走 => 走-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  让 => 让-02
Oracle Span 3-4:  走 => 走-01

Dependencies:
1	让	_	VV	VV	_	0	root	_	_
2	我	_	PN	PN	_	1	dobj	_	_
3	自个儿	_	AD	AD	_	4	advmod	_	_
4	走	_	VV	VV	_	1	dep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	步	_	M	M	_	4	range	_	_
7	吧	_	SP	SP	_	1	dep	_	_
8	。	_	PU	PU	_	1	punct	_	_
9	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x17 / 让-02, arg2, x18 / 我)
(x17 / 让-02, arg2, x19 / 走-01)

Input(Some(Graph((say :arg1 (让-02 :arg2 (走-01 :arg1 (temporal-quantity :quant 1) :arg0 x18) :arg2 我)),ArrayBuffer(Span(0,1,List(0),让,让-02,false), Span(3,4,List(1),走,走-01,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 走-01, 0 -> 让-02),Map(x19 -> 走-01, x18 -> 我, x17 -> 让-02))),[Ljava.lang.String;@1b8fa2fa,Annotation([Ljava.lang.String;@21527b8,[Ljava.lang.String;@7cc1f72c,[Ljava.lang.String;@7b7068d8),Annotation([Ljava.lang.String;@1d8e9d3e,[Ljava.lang.String;@360d41d0,[Ledu.cmu.lti.nlp.amr.Dependency;@4586a8aa),Annotation([Ljava.lang.String;@3dc82e6a,[Ljava.lang.String;@54463380,[Ljava.lang.String;@819fb19),Annotation([Ljava.lang.String;@782ac148,[Ljava.lang.String;@46d1b59,[Ledu.cmu.lti.nlp.amr.Entity;@61d2f267))
AMR:
(x17 / 让-02, ord, x18 / 我)
(x19 / 走-01, location, x17 / 让-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 4,454 microseconds
Sentence: 他 这时 坐 下来 ， 因为 他 害怕 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  坐 => 坐-01
Oracle Span 3:  害怕 => 害怕-01
Oracle Span 4:  这时 => 这时
Spans:
Span 0-1:  他 => 他
Span 2-3:  坐 => 坐-01
Span 7-8:  害怕 => 害怕-01
Span 1-2:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 7-8:  害怕 => 害怕-01
Oracle Span 1-2:  这时 => 这时

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	这时	_	AD	AD	_	3	advmod	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	下来	_	VV	VV	_	3	comod	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	因为	_	P	P	_	8	prep	_	_
7	他	_	PN	PN	_	6	pobj	_	_
8	害怕	_	VV	VV	_	3	conj	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x2 / 他)
(x0 / 坐-01, cause, x3 / 害怕-01)
(x0 / 坐-01, time, x6 / 这时)

Input(Some(Graph((坐-01 :time 这时 :cause (害怕-01 :arg0 x2) :arg0 他),ArrayBuffer(Span(2,3,List(0),坐,坐-01,false), Span(1,2,List(1),这时,这时,false), Span(7,8,List(2),害怕,害怕-01,false), Span(0,1,List(3),他,他,false)),Map(2 -> 害怕-01, 1 -> 这时, 0 -> 坐-01, 3 -> 他),Map(x2 -> 他, x3 -> 害怕-01, x6 -> 这时, x0 -> 坐-01))),[Ljava.lang.String;@26d40c77,Annotation([Ljava.lang.String;@85ab964,[Ljava.lang.String;@6481dce5,[Ljava.lang.String;@12365bd8),Annotation([Ljava.lang.String;@14874a5d,[Ljava.lang.String;@49cb5030,[Ledu.cmu.lti.nlp.amr.Dependency;@23c7cb18),Annotation([Ljava.lang.String;@30fbc23,[Ljava.lang.String;@2d74cbbd,[Ljava.lang.String;@3e2d44f3),Annotation([Ljava.lang.String;@23afc725,[Ljava.lang.String;@5d3f99d7,[Ledu.cmu.lti.nlp.amr.Entity;@561d88ee))
AMR:
(x0 / 坐-01, mode, x2 / 他)
(x0 / 坐-01, time, x6 / 这时)
(x0 / 坐-01, unit, x3 / 害怕-01)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,586 microseconds
Sentence: 他 却 仍然 说道 ： “ 你 知道 … 我 的 花 …

Oracle Span 1:  仍然 => 仍然
Oracle Span 2:  他 => 他
Oracle Span 3:  你 => 你
Oracle Span 4:  知道 => 知道-01
Oracle Span 5:  花 => 花
Oracle Span 6:  说道 => 说道-01
Spans:
Span 2-3:  仍然 => 仍然
Span 0-1:  他 => 他
Span 6-7:  你 => 你
Span 7-8:  知道 => 知道-01
Span 11-12:  花 => 花
Span 3-4:  说道 => 说道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 11-12:  花 => 花
Oracle Span 3-4:  说道 => 说道-01

Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	仍然	_	AD	AD	_	4	advmod	_	_
4	说道	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	知道	_	VV	VV	_	4	ccomp	_	_
9	…	_	VV	VV	_	8	ccomp	_	_
10	我	_	PN	PN	_	13	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	花	_	NN	NN	_	13	nn	_	_
13	…	_	NN	NN	_	9	dobj	_	_

Oracle:
(x10 / 说道-01, arg0, x11 / 他)
(x10 / 说道-01, arg1, x13 / 知道-01)
(x10 / 说道-01, manner, x12 / 仍然)
(x13 / 知道-01, arg0, x14 / 你)
(x13 / 知道-01, arg1, x15 / 花)

Input(Some(Graph((contrast :arg1 (说道-01 :arg1 (知道-01 :arg1 (花 :poss x11) :arg0 你) :manner 仍然 :arg0 他)),ArrayBuffer(Span(3,4,List(0),说道,说道-01,false), Span(7,8,List(1),知道,知道-01,false), Span(11,12,List(2),花,花,false), Span(6,7,List(3),你,你,false), Span(2,3,List(4),仍然,仍然,false), Span(0,1,List(5),他,他,false)),Map(2 -> 花, 5 -> 他, 1 -> 知道-01, 4 -> 仍然, 0 -> 说道-01, 3 -> 你),Map(x10 -> 说道-01, x13 -> 知道-01, x12 -> 仍然, x15 -> 花, x11 -> 他, x14 -> 你))),[Ljava.lang.String;@2c34402,Annotation([Ljava.lang.String;@5f883d90,[Ljava.lang.String;@7e58f697,[Ljava.lang.String;@44384b4a),Annotation([Ljava.lang.String;@5cc3e49b,[Ljava.lang.String;@4239262e,[Ledu.cmu.lti.nlp.amr.Dependency;@7bec8cb0),Annotation([Ljava.lang.String;@7d88fa9c,[Ljava.lang.String;@3eac2e8a,[Ljava.lang.String;@352f6727),Annotation([Ljava.lang.String;@2ab9e43e,[Ljava.lang.String;@10dfa7ef,[Ledu.cmu.lti.nlp.amr.Entity;@4fd80300))
AMR:
(x10 / 说道-01, manner, x12 / 仍然)
(x10 / 说道-01, topic, x13 / 知道-01)
(x12 / 仍然, location, x11 / 他)
(x13 / 知道-01, accompanier, x15 / 花)
(x13 / 知道-01, quant, x14 / 你)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,486 microseconds
Sentence: 我 是 要 对 她 负责 的 ！

Oracle Span 1:  她 => 她
Oracle Span 2:  我 => 我
Oracle Span 3:  要 => 要-03
Oracle Span 4:  负责 => 负责-01
Spans:
Span 4-5:  她 => 她
Span 0-1:  我 => 我
Span 2-3:  要 => 要-03
Span 5-6:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 5-6:  负责 => 负责-01

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	她	_	PN	PN	_	4	pobj	_	_
6	负责	_	VV	VV	_	2	attr	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / 要-03, arg0, x6 / 负责-01)
(x6 / 负责-01, arg0, x7 / 我)
(x6 / 负责-01, arg1, x8 / 她)

Input(Some(Graph((要-03 :arg0 (负责-01 :mode expressive :arg1 她 :arg0 我)),ArrayBuffer(Span(2,3,List(0),要,要-03,false), Span(5,6,List(1),负责,负责-01,false), Span(4,5,List(2),她,她,false), Span(0,1,List(3),我,我,false)),Map(2 -> 她, 1 -> 负责-01, 0 -> 要-03, 3 -> 我),Map(x8 -> 她, x7 -> 我, x4 -> 要-03, x6 -> 负责-01))),[Ljava.lang.String;@1805383,Annotation([Ljava.lang.String;@64fdcf99,[Ljava.lang.String;@9f0fc36,[Ljava.lang.String;@63f2e0b),Annotation([Ljava.lang.String;@5a06904,[Ljava.lang.String;@fabef2e,[Ledu.cmu.lti.nlp.amr.Dependency;@1b4a3a1),Annotation([Ljava.lang.String;@7e848aea,[Ljava.lang.String;@786a3477,[Ljava.lang.String;@286866cb),Annotation([Ljava.lang.String;@ce561cc,[Ljava.lang.String;@56ec6960,[Ledu.cmu.lti.nlp.amr.Entity;@7f8c3646))
AMR:
(x4 / 要-03, polite, x7 / 我)
(x4 / 要-03, prep-along-with, x6 / 负责-01)
(x6 / 负责-01, beneficiary, x8 / 她)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,707 microseconds
Sentence: 而 她 又 是 那么 弱小 ！

Oracle Span 1:  又 => 又
Oracle Span 2:  她 => 她
Oracle Span 3:  弱小 => 弱小
Oracle Span 4:  那么 => 那么
Spans:
Span 2-3:  又 => 又
Span 1-2:  她 => 她
Span 5-6:  弱小 => 弱小
Span 4-5:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  她 => 她
Oracle Span 5-6:  弱小 => 弱小
Oracle Span 4-5:  那么 => 那么

Dependencies:
1	而	_	AD	AD	_	4	advmod	_	_
2	她	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	那么	_	AD	AD	_	6	advmod	_	_
6	弱小	_	VA	VA	_	4	ccomp	_	_
7	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 弱小, degree, x12 / 那么)
(x8 / 弱小, domain, x9 / 她)
(x8 / 弱小, manner, x10 / 又)

Input(Some(Graph((contrast :arg2 (弱小 :degree 那么 :mode expressive :manner 又 :domain 她)),ArrayBuffer(Span(5,6,List(0),弱小,弱小,false), Span(4,5,List(1),那么,那么,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),她,她,false)),Map(2 -> 又, 1 -> 那么, 0 -> 弱小, 3 -> 她),Map(x10 -> 又, x8 -> 弱小, x12 -> 那么, x9 -> 她))),[Ljava.lang.String;@14b95942,Annotation([Ljava.lang.String;@3375b118,[Ljava.lang.String;@667797f,[Ljava.lang.String;@184751f3),Annotation([Ljava.lang.String;@46ea78f0,[Ljava.lang.String;@5889fc44,[Ledu.cmu.lti.nlp.amr.Dependency;@6598caab),Annotation([Ljava.lang.String;@47f2c722,[Ljava.lang.String;@52ca0ad4,[Ljava.lang.String;@4536a715),Annotation([Ljava.lang.String;@6658f08a,[Ljava.lang.String;@37c2f0b4,[Ledu.cmu.lti.nlp.amr.Entity;@35dcd032))
AMR:
(x8 / 弱小, degree, x12 / 那么)
(x8 / 弱小, domain, x9 / 她)
(x8 / 弱小, manner, x10 / 又)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 5,774 microseconds
Sentence: 她 又 是 那么 天真 。

Oracle Span 1:  又 => 又
Oracle Span 2:  天真 => 天真-01
Oracle Span 3:  她 => 她
Oracle Span 4:  那么 => 那么
Spans:
Span 1-2:  又 => 又
Span 4-5:  天真 => 天真-01
Span 0-1:  她 => 她
Span 3-4:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  又 => 又
Oracle Span 4-5:  天真 => 天真-01
Oracle Span 0-1:  她 => 她
Oracle Span 3-4:  那么 => 那么

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	那么	_	AD	AD	_	5	advmod	_	_
5	天真	_	VA	VA	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 天真-01, degree, x5 / 那么)
(x0 / 天真-01, domain, x3 / 她)
(x0 / 天真-01, manner, x4 / 又)

Input(Some(Graph((天真-01 :degree 那么 :manner 又 :domain 她),ArrayBuffer(Span(4,5,List(0),天真,天真-01,false), Span(3,4,List(1),那么,那么,false), Span(1,2,List(2),又,又,false), Span(0,1,List(3),她,她,false)),Map(2 -> 又, 1 -> 那么, 0 -> 天真-01, 3 -> 她),Map(x5 -> 那么, x4 -> 又, x3 -> 她, x0 -> 天真-01))),[Ljava.lang.String;@4522d793,Annotation([Ljava.lang.String;@64dfb31d,[Ljava.lang.String;@4438b862,[Ljava.lang.String;@17b6ad97),Annotation([Ljava.lang.String;@44fb6ebd,[Ljava.lang.String;@5da57a64,[Ledu.cmu.lti.nlp.amr.Dependency;@5cdf221a),Annotation([Ljava.lang.String;@7e27f603,[Ljava.lang.String;@6136e1fc,[Ljava.lang.String;@1736c1e4),Annotation([Ljava.lang.String;@32dcfeea,[Ljava.lang.String;@738a815c,[Ledu.cmu.lti.nlp.amr.Entity;@2565a7d0))
AMR:
(x0 / 天真-01, degree, x5 / 那么)
(x0 / 天真-01, domain, x3 / 她)
(x0 / 天真-01, manner, x4 / 又)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,858 microseconds
Sentence: 她 只 有 四 根 微不足道 的 刺 ， 保护 自己 ， 抵抗 外敌 … ”

Oracle Span 1:  保护 => 保护-01
Oracle Span 2:  刺 => 刺
Oracle Span 3:  只 => 只
Oracle Span 4:  外敌 => 外敌
Oracle Span 5:  她 => 她
Oracle Span 6:  微不足道 => 微不足道-01
Oracle Span 7:  抵抗 => 抵抗-01
Oracle Span 8:  有 => 有-01
Spans:
Span 9-10:  保护 => 保护-01
Span 7-8:  刺 => 刺
Span 1-2:  只 => 只
Span 13-14:  外敌 => 外敌
Span 0-1:  她 => 她
Span 5-6:  微不足道 => 微不足道-01
Span 12-13:  抵抗 => 抵抗-01
Span 2-3:  有 => 有-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  保护 => 保护-01
Oracle Span 7-8:  刺 => 刺
Oracle Span 1-2:  只 => 只
Oracle Span 13-14:  外敌 => 外敌
Oracle Span 0-1:  她 => 她
Oracle Span 5-6:  微不足道 => 微不足道-01
Oracle Span 12-13:  抵抗 => 抵抗-01
Oracle Span 2-3:  有 => 有-01

Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	只	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	四	_	CD	CD	_	5	nummod	_	_
5	根	_	M	M	_	8	clf	_	_
6	微不足道	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	刺	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	保护	_	VV	VV	_	3	conj	_	_
11	自己	_	PN	PN	_	10	dobj	_	_
12	,	_	PU	PU	_	3	punct	_	_
13	抵抗	_	VV	VV	_	3	conj	_	_
14	外敌	_	CD	CD	_	16	nummod	_	_
15	…	_	PU	PU	_	16	punct	_	_
16	”	_	CD	CD	_	13	range	_	_

Oracle:
(x26 / 有-01, arg0, x27 / 她)
(x26 / 有-01, arg1, x29 / 刺)
(x26 / 有-01, manner, x28 / 只)
(x29 / 刺, mod, x30 / 微不足道-01)
(x35 / 抵抗-01, arg1, x36 / 外敌)

Input(Some(Graph((say :arg1 (有-01 :arg1 (刺 :instrument-of (and :op (保护-01 :arg1 x27) :op (抵抗-01 :arg1 外敌)) :quant 4 :mod 微不足道-01) :manner 只 :arg0 她)),ArrayBuffer(Span(2,3,List(0),有,有-01,false), Span(7,8,List(1),刺,刺,false), Span(9,10,List(2),保护,保护-01,false), Span(12,13,List(3),抵抗,抵抗-01,false), Span(13,14,List(4),外敌,外敌,false), Span(5,6,List(5),微不足道,微不足道-01,false), Span(1,2,List(6),只,只,false), Span(0,1,List(7),她,她,false)),Map(2 -> 保护-01, 5 -> 微不足道-01, 7 -> 她, 1 -> 刺, 4 -> 外敌, 6 -> 只, 0 -> 有-01, 3 -> 抵抗-01),Map(x28 -> 只, x30 -> 微不足道-01, x27 -> 她, x33 -> 保护-01, x36 -> 外敌, x26 -> 有-01, x35 -> 抵抗-01, x29 -> 刺))),[Ljava.lang.String;@4fd7b79,Annotation([Ljava.lang.String;@5103eea2,[Ljava.lang.String;@762405bf,[Ljava.lang.String;@7e77678c),Annotation([Ljava.lang.String;@113eed88,[Ljava.lang.String;@5f0677f3,[Ledu.cmu.lti.nlp.amr.Dependency;@9d99851),Annotation([Ljava.lang.String;@4cd7d5e1,[Ljava.lang.String;@2ae3235e,[Ljava.lang.String;@46b6701e),Annotation([Ljava.lang.String;@3686389,[Ljava.lang.String;@71e2c6d8,[Ledu.cmu.lti.nlp.amr.Entity;@4228f269))
AMR:
(x26 / 有-01, domain, x27 / 她)
(x26 / 有-01, manner, x28 / 只)
(x26 / 有-01, mode, x30 / 微不足道-01)
(x29 / 刺, mod, x30 / 微不足道-01)
(x33 / 保护-01, manner, x29 / 刺)
(x33 / 保护-01, mode, x35 / 抵抗-01)
(x35 / 抵抗-01, mode, x36 / 外敌)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.2.0
WARNING: makeIds can't find span Id: 0.0.2.2.1
WARNING: makeIds can't find span Id: 0.0.2.2.1.0
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 18,544 microseconds
Sentence: 我 也 坐 了 下来 ， 因为 我 再 也 站立 不 住 了 。

Oracle Span 1:  坐 => 坐-01
Oracle Span 2:  我 => 我
Oracle Span 3:  站立 => 站立-01
Spans:
Span 2-3:  坐 => 坐-01
Span 0-1:  我 => 我
Span 10-11:  站立 => 站立-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  站立 => 站立-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	下来	_	VV	VV	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	因为	_	P	P	_	13	prep	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	再	_	AD	AD	_	11	advmod	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	站立	_	VV	VV	_	7	pccomp	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	住	_	VV	VV	_	3	dep	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x2 / 我)
(x0 / 坐-01, cause, x3 / 站立-01)

Input(Some(Graph((坐-01 :cause (站立-01 :polarity - :arg0 x2) :arg0 我),ArrayBuffer(Span(2,3,List(0),坐,坐-01,false), Span(10,11,List(1),站立,站立-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 站立-01, 0 -> 坐-01),Map(x2 -> 我, x3 -> 站立-01, x0 -> 坐-01))),[Ljava.lang.String;@376b5cb2,Annotation([Ljava.lang.String;@775f15fd,[Ljava.lang.String;@106cd9c8,[Ljava.lang.String;@1552da16),Annotation([Ljava.lang.String;@78318ac2,[Ljava.lang.String;@77ce88c4,[Ledu.cmu.lti.nlp.amr.Dependency;@11abd6c),Annotation([Ljava.lang.String;@29b5533,[Ljava.lang.String;@7608a838,[Ljava.lang.String;@75839695),Annotation([Ljava.lang.String;@21a6a494,[Ljava.lang.String;@794c5f5e,[Ledu.cmu.lti.nlp.amr.Entity;@4ab66127))
AMR:
(x0 / 坐-01, beneficiary, x2 / 我)
(x0 / 坐-01, manner, x3 / 站立-01)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,053 microseconds
Sentence: 他 说道 ： “ 就 是 这些 … 全 都 说 啦 … ”

Oracle Span 1:  他 => 他
Oracle Span 2:  全 => 全
Oracle Span 3:  就 => 就
Oracle Span 4:  说 => 说-01
Oracle Span 5:  说道 => 说道-01
Oracle Span 6:  这些 => 这些
Spans:
Span 0-1:  他 => 他
Span 8-9:  全 => 全
Span 4-5:  就 => 就
Span 10-11:  说 => 说-01
Span 1-2:  说道 => 说道-01
Span 6-7:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  全 => 全
Oracle Span 4-5:  就 => 就
Oracle Span 10-11:  说 => 说-01
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 6-7:  这些 => 这些

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	6	punct	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	2	ccomp	_	_
7	这些	_	PN	PN	_	6	attr	_	_
8	…	_	PU	PU	_	12	punct	_	_
9	全	_	DT	DT	_	12	det	_	_
10	都	_	AD	AD	_	11	advmod	_	_
11	说	_	VV	VV	_	12	rcmod	_	_
12	啦	_	NN	NN	_	7	prnmod	_	_
13	…	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	6	punct	_	_
15	他	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x7 / 这些, manner, x8 / 就)
(x9 / 说-01, manner, x10 / 全)

Input(Some(Graph((说道-01 :arg1 (and :op (这些 :manner 就) :op (说-01 :mode impressive :manner 全)) :arg0 他),ArrayBuffer(Span(1,2,List(0),说道,说道-01,false), Span(6,7,List(1),这些,这些,false), Span(4,5,List(2),就,就,false), Span(10,11,List(3),说,说-01,false), Span(8,9,List(4),全,全,false), Span(0,1,List(5),他,他,false)),Map(2 -> 就, 5 -> 他, 1 -> 这些, 4 -> 全, 0 -> 说道-01, 3 -> 说-01),Map(x2 -> 他, x10 -> 全, x8 -> 就, x7 -> 这些, x9 -> 说-01, x0 -> 说道-01))),[Ljava.lang.String;@236861da,Annotation([Ljava.lang.String;@37fef327,[Ljava.lang.String;@2cd3fc29,[Ljava.lang.String;@55951fcd),Annotation([Ljava.lang.String;@3513d214,[Ljava.lang.String;@7534785a,[Ledu.cmu.lti.nlp.amr.Dependency;@46b5f061),Annotation([Ljava.lang.String;@3ba3f40d,[Ljava.lang.String;@108b121f,[Ljava.lang.String;@46ab4efc),Annotation([Ljava.lang.String;@2ff498b0,[Ljava.lang.String;@b5312df,[Ledu.cmu.lti.nlp.amr.Entity;@4300e240))
AMR:
(x0 / 说道-01, manner, x8 / 就)
(x0 / 说道-01, prep-following, x2 / 他)
(x10 / 全, mod, x7 / 这些)
(x7 / 这些, manner, x8 / 就)
(x9 / 说-01, manner, x10 / 全)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,603 microseconds
Sentence: 他 犹豫 了 一下 ， 然后 站 起来 。

Oracle Span 1:  他 => 他
Oracle Span 2:  犹豫 => 犹豫-01
Oracle Span 3:  站 => 站-01
Spans:
Span 0-1:  他 => 他
Span 1-2:  犹豫 => 犹豫-01
Span 6-7:  站 => 站-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  犹豫 => 犹豫-01
Oracle Span 6-7:  站 => 站-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	犹豫	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一下	_	AD	AD	_	7	advmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	然后	_	AD	AD	_	7	advmod	_	_
7	站	_	VV	VV	_	2	ccomp	_	_
8	起来	_	VV	VV	_	7	comod	_	_
9	。	_	PU	PU	_	2	punct	_	_
10	他	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x8 / 犹豫-01, arg0, x9 / 他)

Input(Some(Graph((temporal :arg1 (犹豫-01 :arg0 他) :arg2 (站-01 :arg0 x9)),ArrayBuffer(Span(1,2,List(0),犹豫,犹豫-01,false), Span(0,1,List(1),他,他,false), Span(6,7,List(2),站,站-01,false)),Map(2 -> 站-01, 1 -> 他, 0 -> 犹豫-01),Map(x10 -> 站-01, x8 -> 犹豫-01, x9 -> 他))),[Ljava.lang.String;@5f409872,Annotation([Ljava.lang.String;@547aaa32,[Ljava.lang.String;@472c9f88,[Ljava.lang.String;@37a67cf),Annotation([Ljava.lang.String;@5822ecda,[Ljava.lang.String;@5908e6d6,[Ledu.cmu.lti.nlp.amr.Dependency;@7afbf2a0),Annotation([Ljava.lang.String;@2a6fb62f,[Ljava.lang.String;@65e4cb84,[Ljava.lang.String;@7b44bfb8),Annotation([Ljava.lang.String;@5e0f2c82,[Ljava.lang.String;@98637a2,[Ledu.cmu.lti.nlp.amr.Entity;@4afd65fd))
AMR:
(x10 / 站-01, time, x8 / 犹豫-01)
(x8 / 犹豫-01, prep-following, x9 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
Decoded in 4,156 microseconds
Sentence: 他 迈出 了 一 步 。

Oracle Span 1:  他 => 他
Oracle Span 2:  步 => 步
Spans:
Span 0-1:  他 => 他
Span 4-5:  步 => 步

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  步 => 步

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	迈出	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	步	_	M	M	_	2	dep	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph((迈-01 :arg0 他 :direction 出-01 :arg1 (步 :quant 1)),ArrayBuffer(Span(0,1,List(0),他,他,false), Span(4,5,List(1),步,步,false)),Map(1 -> 步, 0 -> 他),Map(x2 -> 他, x5 -> 步))),[Ljava.lang.String;@141aba65,Annotation([Ljava.lang.String;@3356ff58,[Ljava.lang.String;@b55f5b7,[Ljava.lang.String;@2aa6bbad),Annotation([Ljava.lang.String;@6b2ef50e,[Ljava.lang.String;@6f867b0c,[Ledu.cmu.lti.nlp.amr.Dependency;@4b5ad306),Annotation([Ljava.lang.String;@54be6213,[Ljava.lang.String;@48a46b0f,[Ljava.lang.String;@1426370c),Annotation([Ljava.lang.String;@9f9146d,[Ljava.lang.String;@2ef041bb,[Ledu.cmu.lti.nlp.amr.Entity;@45e7bb79))
AMR:
(x5 / 步, part, x2 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.2
Decoded in 2,908 microseconds
Sentence: 而 我 却 动弹不得 。

Oracle Span 1:  动弹不得 => 动弹不得-01
Oracle Span 2:  我 => 我
Spans:
Span 3-4:  动弹不得 => 动弹不得-01
Span 1-2:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  动弹不得 => 动弹不得-01
Oracle Span 1-2:  我 => 我

Dependencies:
1	而	_	AD	AD	_	4	advmod	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	动弹不得	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 动弹不得-01, arg0, x7 / 我)

Input(Some(Graph((contrast :arg2 (动弹不得-01 :arg0 我)),ArrayBuffer(Span(3,4,List(0),动弹不得,动弹不得-01,false), Span(1,2,List(1),我,我,false)),Map(1 -> 我, 0 -> 动弹不得-01),Map(x7 -> 我, x6 -> 动弹不得-01))),[Ljava.lang.String;@605c7a9e,Annotation([Ljava.lang.String;@21c75084,[Ljava.lang.String;@d16209e,[Ljava.lang.String;@75527e36),Annotation([Ljava.lang.String;@76596288,[Ljava.lang.String;@6d815fb7,[Ledu.cmu.lti.nlp.amr.Dependency;@51af8049),Annotation([Ljava.lang.String;@376af784,[Ljava.lang.String;@a9a8ec3,[Ljava.lang.String;@6d0114c0),Annotation([Ljava.lang.String;@40016ce1,[Ljava.lang.String;@203765b2,[Ledu.cmu.lti.nlp.amr.Entity;@7e050be1))
AMR:
(x6 / 动弹不得-01, beneficiary, x7 / 我)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,171 microseconds
Sentence: 在 他 的 脚踝子骨 附近 ， 一 道 黄光 闪 了 一下 。

Oracle Span 1:  他 => 他
Oracle Span 2:  脚踝子骨 => 脚踝子骨
Oracle Span 3:  闪 => 闪-01
Oracle Span 4:  附近 => 附近
Oracle Span 5:  黄光 => 黄光
Spans:
Span 1-2:  他 => 他
Span 3-4:  脚踝子骨 => 脚踝子骨
Span 9-10:  闪 => 闪-01
Span 4-5:  附近 => 附近
Span 8-9:  黄光 => 黄光

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  脚踝子骨 => 脚踝子骨
Oracle Span 9-10:  闪 => 闪-01
Oracle Span 4-5:  附近 => 附近
Oracle Span 8-9:  黄光 => 黄光

Dependencies:
1	在	_	P	P	_	10	prep	_	_
2	他	_	PN	PN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脚踝子骨	_	NN	NN	_	5	nn	_	_
5	附近	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	道	_	NN	NN	_	9	nn	_	_
9	黄光	_	NN	NN	_	10	nsubj	_	_
10	闪	_	VV	VV	_	0	root	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	一下	_	AD	AD	_	10	advmod	_	_
13	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 闪-01, arg0, x2 / 黄光)
(x0 / 闪-01, location, x5 / 附近)
(x13 / 他, part, x8 / 脚踝子骨)
(x5 / 附近, location, x8 / 脚踝子骨)

Input(Some(Graph((闪-01 :quant 1 :location (附近 :location (脚踝子骨 :part-of 他)) :arg0 (黄光 :quant 1)),ArrayBuffer(Span(9,10,List(0),闪,闪-01,false), Span(4,5,List(1),附近,附近,false), Span(3,4,List(2),脚踝子骨,脚踝子骨,false), Span(1,2,List(3),他,他,false), Span(8,9,List(4),黄光,黄光,false)),Map(2 -> 脚踝子骨, 1 -> 附近, 4 -> 黄光, 0 -> 闪-01, 3 -> 他),Map(x2 -> 黄光, x13 -> 他, x5 -> 附近, x8 -> 脚踝子骨, x0 -> 闪-01))),[Ljava.lang.String;@1b47b7f5,Annotation([Ljava.lang.String;@506aa618,[Ljava.lang.String;@4b6b5352,[Ljava.lang.String;@1d6713dd),Annotation([Ljava.lang.String;@3b39e79b,[Ljava.lang.String;@3ee6dc82,[Ledu.cmu.lti.nlp.amr.Dependency;@2f86f9cf),Annotation([Ljava.lang.String;@adafe19,[Ljava.lang.String;@7e2bd5e6,[Ljava.lang.String;@76a1146d),Annotation([Ljava.lang.String;@6ef1c3f7,[Ljava.lang.String;@3386c206,[Ledu.cmu.lti.nlp.amr.Entity;@1322b575))
AMR:
(x0 / 闪-01, location, x5 / 附近)
(x0 / 闪-01, manner, x2 / 黄光)
(x13 / 他, part, x8 / 脚踝子骨)
(x5 / 附近, location, x8 / 脚踝子骨)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,775 microseconds
Sentence: 刹那 间 他 一动 也 不 动 了 。

Oracle Span 1:  他 => 他
Oracle Span 2:  动 => 动-01
Spans:
Span 2-3:  他 => 他
Span 6-7:  动 => 动-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 6-7:  动 => 动-01

Dependencies:
1	刹那	_	NN	NN	_	2	lobj	_	_
2	间	_	LC	LC	_	7	loc	_	_
3	他	_	PN	PN	_	7	nsubj	_	_
4	一动	_	CD	CD	_	7	nsubj	_	_
5	也	_	AD	AD	_	7	advmod	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	动	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 动-01, arg0, x4 / 他)

Input(Some(Graph((动-01 :polarity - :time 刹那间 :arg0 他),ArrayBuffer(Span(6,7,List(0),动,动-01,false), Span(2,3,List(1),他,他,false)),Map(1 -> 他, 0 -> 动-01),Map(x4 -> 他, x0 -> 动-01))),[Ljava.lang.String;@6dded900,Annotation([Ljava.lang.String;@d504137,[Ljava.lang.String;@8432469,[Ljava.lang.String;@e4ca109),Annotation([Ljava.lang.String;@15c16f19,[Ljava.lang.String;@1a17dd6f,[Ledu.cmu.lti.nlp.amr.Dependency;@be6d228),Annotation([Ljava.lang.String;@60c96eb4,[Ljava.lang.String;@7eee6c13,[Ljava.lang.String;@5ab63a04),Annotation([Ljava.lang.String;@677cc4e8,[Ljava.lang.String;@4c6bba7d,[Ledu.cmu.lti.nlp.amr.Entity;@41e8d917))
AMR:
(x0 / 动-01, subevent, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
Decoded in 4,230 microseconds
Sentence: 他 没有 叫喊 。

Oracle Span 1:  他 => 他
Oracle Span 2:  叫喊 => 叫喊-01
Spans:
Span 0-1:  他 => 他
Span 2-3:  叫喊 => 叫喊-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  叫喊 => 叫喊-01

Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	叫喊	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 叫喊-01, arg0, x4 / 他)

Input(Some(Graph((叫喊-01 :polarity - :arg0 他),ArrayBuffer(Span(2,3,List(0),叫喊,叫喊-01,false), Span(0,1,List(1),他,他,false)),Map(1 -> 他, 0 -> 叫喊-01),Map(x4 -> 他, x0 -> 叫喊-01))),[Ljava.lang.String;@2ae5bd34,Annotation([Ljava.lang.String;@2b3f7704,[Ljava.lang.String;@3a16984c,[Ljava.lang.String;@3db1ce78),Annotation([Ljava.lang.String;@3a3ad8e7,[Ljava.lang.String;@6a6d1ff3,[Ledu.cmu.lti.nlp.amr.Dependency;@64b73e0a),Annotation([Ljava.lang.String;@57c6feea,[Ljava.lang.String;@3b57f915,[Ljava.lang.String;@39c7fb0b),Annotation([Ljava.lang.String;@645dc557,[Ljava.lang.String;@48c5698,[Ledu.cmu.lti.nlp.amr.Entity;@17884d))
AMR:
(x0 / 叫喊-01, time, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,752 microseconds
Sentence: 他 轻轻 地 象 一 棵 树 一样 倒 在 地 上 ，

Oracle Span 1:  他 => 他
Oracle Span 2:  倒 => 倒-01
Oracle Span 3:  树 => 树
Oracle Span 4:  轻轻 => 轻轻-01
Spans:
Span 0-1:  他 => 他
Span 8-9:  倒 => 倒-01
Span 6-7:  树 => 树
Span 1-2:  轻轻 => 轻轻-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  倒 => 倒-01
Oracle Span 6-7:  树 => 树
Oracle Span 1-2:  轻轻 => 轻轻-01

Dependencies:
1	他	_	PN	PN	_	9	nsubj	_	_
2	轻轻	_	VA	VA	_	9	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	象	_	P	P	_	8	prep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	棵	_	NN	NN	_	7	nn	_	_
7	树	_	NN	NN	_	4	pobj	_	_
8	一样	_	VA	VA	_	9	dep	_	_
9	倒	_	VV	VV	_	0	root	_	_
10	在	_	P	P	_	9	prep	_	_
11	地	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	10	plmod	_	_
13	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x24 / 倒-01, manner, x28 / 轻轻-01)

Input(Some(Graph((像-01 :arg0 他 :arg1 (树 :quant 1) :arg2 (倒-01 :manner 轻轻-01 :location 地上 :arg1 x21)),ArrayBuffer(Span(0,1,List(0),他,他,false), Span(6,7,List(1),树,树,false), Span(8,9,List(2),倒,倒-01,false), Span(1,2,List(3),轻轻,轻轻-01,false)),Map(2 -> 倒-01, 1 -> 树, 0 -> 他, 3 -> 轻轻-01),Map(x28 -> 轻轻-01, x22 -> 树, x21 -> 他, x24 -> 倒-01))),[Ljava.lang.String;@68e24e7,Annotation([Ljava.lang.String;@c732e1c,[Ljava.lang.String;@6aad919c,[Ljava.lang.String;@56c42964),Annotation([Ljava.lang.String;@211a9647,[Ljava.lang.String;@340c5fb6,[Ledu.cmu.lti.nlp.amr.Dependency;@322b09da),Annotation([Ljava.lang.String;@45d389f2,[Ljava.lang.String;@308e87a1,[Ljava.lang.String;@66298fe9),Annotation([Ljava.lang.String;@c262f2f,[Ljava.lang.String;@5563bb40,[Ledu.cmu.lti.nlp.amr.Entity;@11148dc2))
AMR:
(x21 / 他, ARG4, x28 / 轻轻-01)
(x22 / 树, mod, x21 / 他)
(x24 / 倒-01, manner, x28 / 轻轻-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.2
Decoded in 8,258 microseconds
Sentence: 大概 由于 沙地 的 缘故 ， 连 一 点 响声 都 没有 。

Oracle Span 1:  响声 => 响声
Oracle Span 2:  大概 => 大概
Oracle Span 3:  沙地 => 沙地
Spans:
Span 9-10:  响声 => 响声
Span 0-1:  大概 => 大概
Span 2-3:  沙地 => 沙地

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  响声 => 响声
Oracle Span 0-1:  大概 => 大概
Oracle Span 2-3:  沙地 => 沙地

Dependencies:
1	大概	_	AD	AD	_	3	advmod	_	_
2	由于	_	CS	CS	_	3	advmod	_	_
3	沙地	_	VV	VV	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	缘故	_	NN	NN	_	12	nsubj	_	_
6	,	_	PU	PU	_	12	punct	_	_
7	连	_	AD	AD	_	9	advmod	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	点	_	M	M	_	10	clf	_	_
10	响声	_	NN	NN	_	12	nsubj	_	_
11	都	_	AD	AD	_	12	advmod	_	_
12	没有	_	VE	VE	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x13 / 大概, arg0, x14 / 沙地)

Input(Some(Graph((causation :arg1 (大概 :arg0 沙地) :arg2 (有-01 :polarity - :arg1 (响声 :mod 一点))),ArrayBuffer(Span(0,1,List(0),大概,大概,false), Span(2,3,List(1),沙地,沙地,false), Span(9,10,List(2),响声,响声,false)),Map(2 -> 响声, 1 -> 沙地, 0 -> 大概),Map(x13 -> 大概, x18 -> 响声, x14 -> 沙地))),[Ljava.lang.String;@3be80ece,Annotation([Ljava.lang.String;@60a01cb,[Ljava.lang.String;@4efb13f1,[Ljava.lang.String;@7bb4ed71),Annotation([Ljava.lang.String;@5112b7,[Ljava.lang.String;@56835f2f,[Ledu.cmu.lti.nlp.amr.Dependency;@40f1aa95),Annotation([Ljava.lang.String;@1c72189f,[Ljava.lang.String;@14be750c,[Ljava.lang.String;@58882a93),Annotation([Ljava.lang.String;@15e08615,[Ljava.lang.String;@19dac2d6,[Ledu.cmu.lti.nlp.amr.Entity;@7e2bc2f4))
AMR:
(x13 / 大概, part, x14 / 沙地)
(x18 / 响声, mod, x13 / 大概)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1.1
Decoded in 6,976 microseconds
Sentence: XXVII 。

Oracle Span 1:  XXVII => XXVII
Spans:
Span 0-1:  XXVII => XXVII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXVII => XXVII

Dependencies:
1	XXVII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(XXVII,ArrayBuffer(Span(0,1,List(0),XXVII,XXVII,false)),Map(0 -> XXVII),Map(x2 -> XXVII))),[Ljava.lang.String;@67eeb310,Annotation([Ljava.lang.String;@76af51d6,[Ljava.lang.String;@39ace1a7,[Ljava.lang.String;@1930a804),Annotation([Ljava.lang.String;@bd4ee01,[Ljava.lang.String;@7f93f4c,[Ledu.cmu.lti.nlp.amr.Dependency;@598657cd),Annotation([Ljava.lang.String;@456aa471,[Ljava.lang.String;@69e2fe3b,[Ljava.lang.String;@27afbf14),Annotation([Ljava.lang.String;@4cfcac13,[Ljava.lang.String;@5c25d0d1,[Ledu.cmu.lti.nlp.amr.Entity;@22c8ee48))
AMR:


Decoded in 1,161 microseconds
Sentence: 到 现在 ， 一点 不 错 ， 已经 有 六 年 了 …

Oracle Span 1:  一点 => 一点
Oracle Span 2:  到 => 到-01
Oracle Span 3:  年 => 年
Oracle Span 4:  有 => 有-03
Oracle Span 5:  现在 => 现在
Oracle Span 6:  错 => 错-01
Spans:
Span 3-4:  一点 => 一点
Span 0-1:  到 => 到-01
Span 10-11:  年 => 年
Span 8-9:  有 => 有-03
Span 1-2:  现在 => 现在
Span 5-6:  错 => 错-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  一点 => 一点
Oracle Span 0-1:  到 => 到-01
Oracle Span 10-11:  年 => 年
Oracle Span 8-9:  有 => 有-03
Oracle Span 1-2:  现在 => 现在
Oracle Span 5-6:  错 => 错-01

Dependencies:
1	到	_	P	P	_	6	prep	_	_
2	现在	_	NT	NT	_	1	pobj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	一点	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	错	_	VA	VA	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	已经	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	6	dep	_	_
10	六	_	CD	CD	_	11	nummod	_	_
11	年	_	M	M	_	13	rcmod	_	_
12	了	_	SP	SP	_	11	dep	_	_
13	…	_	NN	NN	_	9	dobj	_	_

Oracle:
(x19 / 有-03, arg0, x21 / 到-01)
(x19 / 有-03, manner, x26 / 错-01)
(x21 / 到-01, arg1, x22 / 现在)
(x26 / 错-01, degree, x28 / 一点)

Input(Some(Graph((有-03 :manner (错-01 :degree 一点 :polarity -) :arg1 (temporal-quantity :quant (6 :quant 年)) :arg0 (到-01 :arg1 现在)),ArrayBuffer(Span(8,9,List(0),有,有-03,false), Span(5,6,List(1),错,错-01,false), Span(3,4,List(2),一点,一点,false), Span(10,11,List(3),年,年,false), Span(0,1,List(4),到,到-01,false), Span(1,2,List(5),现在,现在,false)),Map(2 -> 一点, 5 -> 现在, 1 -> 错-01, 4 -> 到-01, 0 -> 有-03, 3 -> 年),Map(x28 -> 一点, x22 -> 现在, x25 -> 年, x19 -> 有-03, x21 -> 到-01, x26 -> 错-01))),[Ljava.lang.String;@7845b21a,Annotation([Ljava.lang.String;@51f01535,[Ljava.lang.String;@2321e482,[Ljava.lang.String;@467ef400),Annotation([Ljava.lang.String;@13fe5bb7,[Ljava.lang.String;@4276ad40,[Ledu.cmu.lti.nlp.amr.Dependency;@6e5f5478),Annotation([Ljava.lang.String;@5fb07347,[Ljava.lang.String;@3ef2b8e5,[Ljava.lang.String;@49190ed6),Annotation([Ljava.lang.String;@5d717f19,[Ljava.lang.String;@18715bb,[Ledu.cmu.lti.nlp.amr.Entity;@2a19a0fe))
AMR:
(x19 / 有-03, degree, x25 / 年)
(x19 / 有-03, manner, x26 / 错-01)
(x21 / 到-01, degree, x26 / 错-01)
(x21 / 到-01, duration, x22 / 现在)
(x26 / 错-01, degree, x28 / 一点)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.1
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,463 microseconds
Sentence: 我 还 从未 讲 过 这个 故事 。

Oracle Span 1:  从未 => 从未
Oracle Span 2:  我 => 我
Oracle Span 3:  故事 => 故事
Oracle Span 4:  讲 => 讲-02
Oracle Span 5:  这个 => 这个
Spans:
Span 2-3:  从未 => 从未
Span 0-1:  我 => 我
Span 6-7:  故事 => 故事
Span 3-4:  讲 => 讲-02
Span 5-6:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从未 => 从未
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  故事 => 故事
Oracle Span 3-4:  讲 => 讲-02
Oracle Span 5-6:  这个 => 这个

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	还	_	AD	AD	_	4	advmod	_	_
3	从未	_	AD	AD	_	4	advmod	_	_
4	讲	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	故事	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 讲-02, arg0, x3 / 我)
(x0 / 讲-02, arg1, x4 / 故事)
(x0 / 讲-02, manner, x6 / 从未)
(x4 / 故事, mod, x7 / 这个)

Input(Some(Graph((讲-02 :manner 从未 :arg1 (故事 :mod 这个) :arg0 我),ArrayBuffer(Span(3,4,List(0),讲,讲-02,false), Span(2,3,List(1),从未,从未,false), Span(6,7,List(2),故事,故事,false), Span(5,6,List(3),这个,这个,false), Span(0,1,List(4),我,我,false)),Map(2 -> 故事, 1 -> 从未, 4 -> 我, 0 -> 讲-02, 3 -> 这个),Map(x7 -> 这个, x4 -> 故事, x3 -> 我, x6 -> 从未, x0 -> 讲-02))),[Ljava.lang.String;@2b7774d5,Annotation([Ljava.lang.String;@7d284f15,[Ljava.lang.String;@44bbb7c6,[Ljava.lang.String;@2342f1ff),Annotation([Ljava.lang.String;@3303e89e,[Ljava.lang.String;@cec590c,[Ledu.cmu.lti.nlp.amr.Dependency;@1570cad0),Annotation([Ljava.lang.String;@21090c88,[Ljava.lang.String;@d62472f,[Ljava.lang.String;@63a84bb6),Annotation([Ljava.lang.String;@701d2b59,[Ljava.lang.String;@1999149e,[Ledu.cmu.lti.nlp.amr.Entity;@65d73bd))
AMR:
(x0 / 讲-02, manner, x6 / 从未)
(x0 / 讲-02, op, x3 / 我)
(x0 / 讲-02, snt3, x4 / 故事)
(x4 / 故事, mod, x7 / 这个)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 8,693 microseconds
Sentence: 同伴们 重新 见到 了 我 ， 都 为 能 看见 我 活 着 回来 而 高兴 。

Oracle Span 1:  同伴们 => 同伴们
Oracle Span 2:  回来 => 回来-01
Oracle Span 3:  我 => 我
Oracle Span 4:  活 => 活-01
Oracle Span 5:  看见 => 看见-01
Oracle Span 6:  能 => 能-01
Oracle Span 7:  见到 => 见到-01
Oracle Span 8:  重新 => 重新-01
Oracle Span 9:  高兴 => 高兴-01
Spans:
Span 0-1:  同伴们 => 同伴们
Span 13-14:  回来 => 回来-01
Span 4-5:  我 => 我
Span 11-12:  活 => 活-01
Span 9-10:  看见 => 看见-01
Span 8-9:  能 => 能-01
Span 2-3:  见到 => 见到-01
Span 1-2:  重新 => 重新-01
Span 15-16:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  同伴们 => 同伴们
Oracle Span 13-14:  回来 => 回来-01
Oracle Span 4-5:  我 => 我
Oracle Span 11-12:  活 => 活-01
Oracle Span 9-10:  看见 => 看见-01
Oracle Span 8-9:  能 => 能-01
Oracle Span 2-3:  见到 => 见到-01
Oracle Span 1-2:  重新 => 重新-01
Oracle Span 15-16:  高兴 => 高兴-01

Dependencies:
1	同伴们	_	NN	NN	_	3	nsubj	_	_
2	重新	_	AD	AD	_	3	advmod	_	_
3	见到	_	VV	VV	_	12	dep	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	我	_	PN	PN	_	3	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	都	_	AD	AD	_	10	advmod	_	_
8	为	_	P	P	_	10	prep	_	_
9	能	_	VV	VV	_	8	pccomp	_	_
10	看见	_	VV	VV	_	3	dep	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	活	_	VV	VV	_	0	root	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	回来	_	VV	VV	_	12	ccomp	_	_
15	而	_	MSP	MSP	_	16	prtmod	_	_
16	高兴	_	VA	VA	_	12	dep	_	_
17	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x18 / 能-01, arg0, x19 / 看见-01)
(x19 / 看见-01, arg0, x20 / 回来-01)
(x2 / 见到-01, arg0, x3 / 同伴们)
(x2 / 见到-01, arg1, x5 / 我)
(x2 / 见到-01, manner, x4 / 重新-01)
(x20 / 回来-01, manner, x22 / 活-01)
(x6 / 高兴-01, arg1, x18 / 能-01)

Input(Some(Graph((and :op (见到-01 :arg1 我 :manner 重新-01 :arg0 同伴们) :op (高兴-01 :arg1 (能-01 :arg0 (看见-01 :arg0 (回来-01 :manner 活-01 :arg0 x5))) :arg0 x3)),ArrayBuffer(Span(2,3,List(0),见到,见到-01,false), Span(4,5,List(1),我,我,false), Span(1,2,List(2),重新,重新-01,false), Span(0,1,List(3),同伴们,同伴们,false), Span(15,16,List(4),高兴,高兴-01,false), Span(8,9,List(5),能,能-01,false), Span(9,10,List(6),看见,看见-01,false), Span(13,14,List(7),回来,回来-01,false), Span(11,12,List(8),活,活-01,false)),Map(2 -> 重新-01, 5 -> 能-01, 8 -> 活-01, 7 -> 回来-01, 1 -> 我, 4 -> 高兴-01, 6 -> 看见-01, 0 -> 见到-01, 3 -> 同伴们),Map(x22 -> 活-01, x19 -> 看见-01, x2 -> 见到-01, x5 -> 我, x18 -> 能-01, x4 -> 重新-01, x3 -> 同伴们, x20 -> 回来-01, x6 -> 高兴-01))),[Ljava.lang.String;@27896d3b,Annotation([Ljava.lang.String;@3ed7dd70,[Ljava.lang.String;@6f3b13d0,[Ljava.lang.String;@2964511),Annotation([Ljava.lang.String;@6e9a10cd,[Ljava.lang.String;@6ea66c33,[Ledu.cmu.lti.nlp.amr.Dependency;@59b447a4),Annotation([Ljava.lang.String;@69ba3f4e,[Ljava.lang.String;@579846cc,[Ljava.lang.String;@a826ff8),Annotation([Ljava.lang.String;@71f0806b,[Ljava.lang.String;@49889154,[Ledu.cmu.lti.nlp.amr.Entity;@5c33008f))
AMR:
(x18 / 能-01, ARG1, x19 / 看见-01)
(x19 / 看见-01, ARG5, x5 / 我)
(x19 / 看见-01, manner, x20 / 回来-01)
(x2 / 见到-01, beneficiary, x5 / 我)
(x2 / 见到-01, manner, x4 / 重新-01)
(x2 / 见到-01, mode, x3 / 同伴们)
(x20 / 回来-01, manner, x22 / 活-01)
(x22 / 活-01, ARG3, x6 / 高兴-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.1.0.0
WARNING: makeIds can't find span Id: 0.1.1.0.0.1
Decoded in 25,902 microseconds
Sentence: 我 却 很 悲伤 。 我 告诉 他们 ： “ 这 是 因为 疲劳 的 缘故 … ”

Oracle Span 1:  他们 => 他们
Oracle Span 2:  告诉 => 告诉-01
Oracle Span 3:  很 => 很
Oracle Span 4:  悲伤 => 悲伤-01
Oracle Span 5:  我 => 我
Oracle Span 6:  疲劳 => 疲劳-01
Oracle Span 7:  这 => 这
Spans:
Span 7-8:  他们 => 他们
Span 6-7:  告诉 => 告诉-01
Span 2-3:  很 => 很
Span 3-4:  悲伤 => 悲伤-01
Span 0-1:  我 => 我
Span 13-14:  疲劳 => 疲劳-01
Span 10-11:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他们 => 他们
Oracle Span 6-7:  告诉 => 告诉-01
Oracle Span 2-3:  很 => 很
Oracle Span 3-4:  悲伤 => 悲伤-01
Oracle Span 0-1:  我 => 我
Oracle Span 13-14:  疲劳 => 疲劳-01
Oracle Span 10-11:  这 => 这

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	悲伤	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	告诉	_	VV	VV	_	4	conj	_	_
8	他们	_	PN	PN	_	7	dobj	_	_
9	：	_	PU	PU	_	4	punct	_	_
10	“	_	PU	PU	_	4	punct	_	_
11	这	_	PN	PN	_	12	top	_	_
12	是	_	VC	VC	_	4	conj	_	_
13	因为	_	P	P	_	16	assmod	_	_
14	疲劳	_	VA	VA	_	13	pccomp	_	_
15	的	_	DEG	DEG	_	13	assm	_	_
16	缘故	_	NN	NN	_	12	attr	_	_
17	…	_	PU	PU	_	4	punct	_	_
18	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 悲伤-01, arg0, x15 / 我)
(x13 / 悲伤-01, degree, x14 / 很)
(x16 / 告诉-01, arg1, x18 / 这)
(x16 / 告诉-01, arg2, x20 / 他们)
(x18 / 这, cause, x19 / 疲劳-01)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg1 (悲伤-01 :arg0 我 :degree 很)) :snt2 (告诉-01 :arg2 他们 :arg1 (这 :cause 疲劳-01) :arg0 x15)),ArrayBuffer(Span(3,4,List(0),悲伤,悲伤-01,false), Span(0,1,List(1),我,我,false), Span(2,3,List(2),很,很,false), Span(6,7,List(3),告诉,告诉-01,false), Span(7,8,List(4),他们,他们,false), Span(10,11,List(5),这,这,false), Span(13,14,List(6),疲劳,疲劳-01,false)),Map(2 -> 很, 5 -> 这, 1 -> 我, 4 -> 他们, 6 -> 疲劳-01, 0 -> 悲伤-01, 3 -> 告诉-01),Map(x16 -> 告诉-01, x19 -> 疲劳-01, x13 -> 悲伤-01, x15 -> 我, x18 -> 这, x20 -> 他们, x14 -> 很))),[Ljava.lang.String;@45d7495e,Annotation([Ljava.lang.String;@30517a57,[Ljava.lang.String;@3dde5f38,[Ljava.lang.String;@79ad1774),Annotation([Ljava.lang.String;@64f3ca6,[Ljava.lang.String;@3df77dfa,[Ledu.cmu.lti.nlp.amr.Dependency;@721fc2e3),Annotation([Ljava.lang.String;@63187d63,[Ljava.lang.String;@1ccdc7aa,[Ljava.lang.String;@1a536164),Annotation([Ljava.lang.String;@1657b017,[Ljava.lang.String;@368424db,[Ledu.cmu.lti.nlp.amr.Entity;@44864536))
AMR:
(x13 / 悲伤-01, degree, x14 / 很)
(x13 / 悲伤-01, poss, x15 / 我)
(x16 / 告诉-01, mode, x20 / 他们)
(x16 / 告诉-01, prep-following, x13 / 悲伤-01)
(x16 / 告诉-01, snt3, x19 / 疲劳-01)
(x18 / 这, mode, x19 / 疲劳-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
Decoded in 16,786 microseconds
Sentence: 现在 ， 我 稍微 得到 了 些 安慰 。

Oracle Span 1:  些 => 些
Oracle Span 2:  安慰 => 安慰
Oracle Span 3:  得到 => 得到-01
Oracle Span 4:  我 => 我
Oracle Span 5:  现在 => 现在
Oracle Span 6:  稍微 => 稍微
Spans:
Span 6-7:  些 => 些
Span 7-8:  安慰 => 安慰
Span 4-5:  得到 => 得到-01
Span 2-3:  我 => 我
Span 0-1:  现在 => 现在
Span 3-4:  稍微 => 稍微

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  些 => 些
Oracle Span 7-8:  安慰 => 安慰
Oracle Span 4-5:  得到 => 得到-01
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  现在 => 现在
Oracle Span 3-4:  稍微 => 稍微

Dependencies:
1	现在	_	NT	NT	_	5	tmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	稍微	_	AD	AD	_	5	advmod	_	_
5	得到	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	些	_	CD	CD	_	8	nummod	_	_
8	安慰	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 得到-01, arg0, x2 / 我)
(x0 / 得到-01, arg1, x3 / 安慰)
(x0 / 得到-01, degree, x4 / 稍微)
(x0 / 得到-01, time, x6 / 现在)
(x3 / 安慰, quant, x5 / 些)

Input(Some(Graph((得到-01 :time 现在 :degree 稍微 :arg1 (安慰 :quant 些) :arg0 我),ArrayBuffer(Span(4,5,List(0),得到,得到-01,false), Span(0,1,List(1),现在,现在,false), Span(3,4,List(2),稍微,稍微,false), Span(7,8,List(3),安慰,安慰,false), Span(6,7,List(4),些,些,false), Span(2,3,List(5),我,我,false)),Map(2 -> 稍微, 5 -> 我, 1 -> 现在, 4 -> 些, 0 -> 得到-01, 3 -> 安慰),Map(x2 -> 我, x5 -> 些, x4 -> 稍微, x3 -> 安慰, x6 -> 现在, x0 -> 得到-01))),[Ljava.lang.String;@455f4483,Annotation([Ljava.lang.String;@6e239337,[Ljava.lang.String;@7996d0d4,[Ljava.lang.String;@fcf9525),Annotation([Ljava.lang.String;@300bb303,[Ljava.lang.String;@4243341e,[Ledu.cmu.lti.nlp.amr.Dependency;@d1c5cf2),Annotation([Ljava.lang.String;@7e0986c9,[Ljava.lang.String;@1377b1a0,[Ljava.lang.String;@48cf8414),Annotation([Ljava.lang.String;@27dbaa33,[Ljava.lang.String;@15d65fcf,[Ledu.cmu.lti.nlp.amr.Entity;@3b021664))
AMR:
(x0 / 得到-01, degree, x4 / 稍微)
(x0 / 得到-01, snt3, x3 / 安慰)
(x0 / 得到-01, time, x6 / 现在)
(x0 / 得到-01, value, x2 / 我)
(x3 / 安慰, quant, x5 / 些)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 11,462 microseconds
Sentence: 就是 说 … 还 没有 完全 平静 下来 。

Oracle Span 1:  完全 => 完全-01
Oracle Span 2:  平静 => 平静-02
Spans:
Span 5-6:  完全 => 完全-01
Span 6-7:  平静 => 平静-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  完全 => 完全-01
Oracle Span 6-7:  平静 => 平静-02

Dependencies:
1	就是	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	5	dep	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	7	dep	_	_
6	完全	_	AD	AD	_	7	advmod	_	_
7	平静	_	VA	VA	_	2	ccomp	_	_
8	下来	_	VV	VV	_	2	dep	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 平静-02, degree, x15 / 完全-01)

Input(Some(Graph((mean :arg1 (平静-02 :polarity - :degree 完全-01)),ArrayBuffer(Span(6,7,List(0),平静,平静-02,false), Span(5,6,List(1),完全,完全-01,false)),Map(1 -> 完全-01, 0 -> 平静-02),Map(x15 -> 完全-01, x14 -> 平静-02))),[Ljava.lang.String;@f59da34,Annotation([Ljava.lang.String;@752973de,[Ljava.lang.String;@52a67293,[Ljava.lang.String;@793cef95),Annotation([Ljava.lang.String;@38f502fc,[Ljava.lang.String;@67c21bf,[Ledu.cmu.lti.nlp.amr.Dependency;@67afe909),Annotation([Ljava.lang.String;@79f1e22e,[Ljava.lang.String;@6903ed0e,[Ljava.lang.String;@e154848),Annotation([Ljava.lang.String;@16ea0f22,[Ljava.lang.String;@60fc7f43,[Ledu.cmu.lti.nlp.amr.Entity;@16e195cf))
AMR:
(x14 / 平静-02, degree, x15 / 完全-01)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 3,068 microseconds
Sentence: 可 我 知道 他 已经 回到 了 他 的 星球 上 。 因为 那 天 黎明 ， 我 没有 再 见到 他 的 身躯 。

Oracle Span 1:  他 => 他
Oracle Span 2:  再 => 再
Oracle Span 3:  回到 => 回到-01
Oracle Span 4:  已经 => 已经
Oracle Span 5:  我 => 我
Oracle Span 6:  星球 => 星球
Oracle Span 7:  知道 => 知道-01
Oracle Span 8:  见到 => 见到-01
Oracle Span 9:  身躯 => 身躯
Oracle Span 10:  黎明 => 黎明
Spans:
Span 3-4:  他 => 他
Span 19-20:  再 => 再
Span 5-6:  回到 => 回到-01
Span 4-5:  已经 => 已经
Span 1-2:  我 => 我
Span 9-10:  星球 => 星球
Span 2-3:  知道 => 知道-01
Span 20-21:  见到 => 见到-01
Span 23-24:  身躯 => 身躯
Span 15-16:  黎明 => 黎明

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 19-20:  再 => 再
Oracle Span 5-6:  回到 => 回到-01
Oracle Span 4-5:  已经 => 已经
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  星球 => 星球
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 20-21:  见到 => 见到-01
Oracle Span 23-24:  身躯 => 身躯
Oracle Span 15-16:  黎明 => 黎明

Dependencies:
1	可	_	AD	AD	_	3	advmod	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	已经	_	AD	AD	_	6	advmod	_	_
6	回到	_	VV	VV	_	3	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	6	loc	_	_
12	。	_	PU	PU	_	3	punct	_	_
13	因为	_	P	P	_	21	prep	_	_
14	那	_	DT	DT	_	16	det	_	_
15	天	_	M	M	_	14	clf	_	_
16	黎明	_	NN	NN	_	13	pobj	_	_
17	,	_	PU	PU	_	21	punct	_	_
18	我	_	PN	PN	_	21	nsubj	_	_
19	没有	_	VV	VV	_	21	neg	_	_
20	再	_	AD	AD	_	21	advmod	_	_
21	见到	_	VV	VV	_	3	conj	_	_
22	他	_	PN	PN	_	24	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	身躯	_	NN	NN	_	21	dobj	_	_
25	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x23 / 知道-01, arg0, x24 / 我)
(x23 / 知道-01, arg1, x25 / 回到-01)
(x25 / 回到-01, arg0, x26 / 他)
(x25 / 回到-01, arg1, x27 / 星球)
(x25 / 回到-01, manner, x29 / 已经)
(x42 / 见到-01, arg1, x44 / 身躯)
(x42 / 见到-01, manner, x46 / 再)
(x42 / 见到-01, time, x47 / 黎明)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg1 (知道-01 :arg1 (回到-01 :manner 已经 :arg1 (星球 :poss x26) :arg0 他) :arg0 我)) :snt2 (causation :arg0 (见到-01 :polarity - :time (黎明 :time 那天) :manner 再 :arg1 (身躯 :part-of x26) :arg0 x24))),ArrayBuffer(Span(2,3,List(0),知道,知道-01,false), Span(5,6,List(1),回到,回到-01,false), Span(4,5,List(2),已经,已经,false), Span(9,10,List(3),星球,星球,false), Span(3,4,List(4),他,他,false), Span(1,2,List(5),我,我,false), Span(20,21,List(6),见到,见到-01,false), Span(15,16,List(7),黎明,黎明,false), Span(19,20,List(8),再,再,false), Span(23,24,List(9),身躯,身躯,false)),Map(2 -> 已经, 5 -> 我, 8 -> 再, 7 -> 黎明, 1 -> 回到-01, 4 -> 他, 6 -> 见到-01, 9 -> 身躯, 0 -> 知道-01, 3 -> 星球),Map(x46 -> 再, x25 -> 回到-01, x27 -> 星球, x42 -> 见到-01, x24 -> 我, x23 -> 知道-01, x44 -> 身躯, x26 -> 他, x47 -> 黎明, x29 -> 已经))),[Ljava.lang.String;@3212d853,Annotation([Ljava.lang.String;@74c7522c,[Ljava.lang.String;@77c23d90,[Ljava.lang.String;@6d17914a),Annotation([Ljava.lang.String;@49631cfb,[Ljava.lang.String;@77b71c9,[Ledu.cmu.lti.nlp.amr.Dependency;@6133e20b),Annotation([Ljava.lang.String;@30ffb2a6,[Ljava.lang.String;@612af486,[Ljava.lang.String;@3d033453),Annotation([Ljava.lang.String;@43deba42,[Ljava.lang.String;@e795a1d,[Ledu.cmu.lti.nlp.amr.Entity;@38c10190))
AMR:
(x23 / 知道-01, accompanier, x25 / 回到-01)
(x23 / 知道-01, value, x24 / 我)
(x25 / 回到-01, ARG6, x26 / 他)
(x25 / 回到-01, manner, x29 / 已经)
(x25 / 回到-01, op, x27 / 星球)
(x27 / 星球, mod, x42 / 见到-01)
(x42 / 见到-01, manner, x46 / 再)
(x42 / 见到-01, snt3, x44 / 身躯)
(x42 / 见到-01, time, x47 / 黎明)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.2
WARNING: makeIds can't find span Id: 0.0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.3
WARNING: makeIds can't find span Id: 0.1.0.2
WARNING: makeIds can't find span Id: 0.1.0.1
Decoded in 36,574 microseconds
Sentence: 他 的 身躯 并不 那么 重 … 从此 ， 我 就 喜欢 在 夜间 倾听 着 星星 ，

Oracle Span 1:  从此 => 从此
Oracle Span 2:  他 => 他
Oracle Span 3:  倾听 => 倾听-01
Oracle Span 4:  喜欢 => 喜欢-01
Oracle Span 5:  夜间 => 夜间
Oracle Span 6:  我 => 我
Oracle Span 7:  星星 => 星星
Oracle Span 8:  身躯 => 身躯
Oracle Span 9:  重 => 重-02
Spans:
Span 7-8:  从此 => 从此
Span 0-1:  他 => 他
Span 14-15:  倾听 => 倾听-01
Span 11-12:  喜欢 => 喜欢-01
Span 13-14:  夜间 => 夜间
Span 9-10:  我 => 我
Span 16-17:  星星 => 星星
Span 2-3:  身躯 => 身躯
Span 5-6:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  从此 => 从此
Oracle Span 0-1:  他 => 他
Oracle Span 14-15:  倾听 => 倾听-01
Oracle Span 11-12:  喜欢 => 喜欢-01
Oracle Span 13-14:  夜间 => 夜间
Oracle Span 9-10:  我 => 我
Oracle Span 16-17:  星星 => 星星
Oracle Span 2-3:  身躯 => 身躯
Oracle Span 5-6:  重 => 重-02

Dependencies:
1	他	_	PN	PN	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	身躯	_	NN	NN	_	4	nn	_	_
4	并不	_	NN	NN	_	15	nsubj	_	_
5	那么	_	AD	AD	_	15	advmod	_	_
6	重	_	NN	NN	_	15	nsubj	_	_
7	…	_	PU	PU	_	15	dep	_	_
8	从此	_	AD	AD	_	15	advmod	_	_
9	,	_	PU	PU	_	15	punct	_	_
10	我	_	PN	PN	_	15	dobj	_	_
11	就	_	P	P	_	15	prep	_	_
12	喜欢	_	VV	VV	_	11	pccomp	_	_
13	在	_	AD	AD	_	14	advmod	_	_
14	夜间	_	VV	VV	_	12	ccomp	_	_
15	倾听	_	VV	VV	_	0	root	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	星星	_	NN	NN	_	15	dobj	_	_
18	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x15 / 重-02, arg0, x17 / 身躯)
(x18 / 他, part, x17 / 身躯)
(x19 / 喜欢-01, arg0, x20 / 我)
(x19 / 喜欢-01, arg1, x21 / 倾听-01)
(x19 / 喜欢-01, time, x25 / 从此)
(x21 / 倾听-01, arg1, x23 / 星星)
(x21 / 倾听-01, time, x24 / 夜间)

Input(Some(Graph((multi-sentence :snt1 (重-02 :polarity - :arg0 (身躯 :part-of 他)) :snt2 (喜欢-01 :time 从此 :arg1 (倾听-01 :time 夜间 :arg1 星星 :arg0 x20) :arg0 我)),ArrayBuffer(Span(5,6,List(0),重,重-02,false), Span(2,3,List(1),身躯,身躯,false), Span(0,1,List(2),他,他,false), Span(11,12,List(3),喜欢,喜欢-01,false), Span(7,8,List(4),从此,从此,false), Span(14,15,List(5),倾听,倾听-01,false), Span(13,14,List(6),夜间,夜间,false), Span(16,17,List(7),星星,星星,false), Span(9,10,List(8),我,我,false)),Map(2 -> 他, 5 -> 倾听-01, 8 -> 我, 7 -> 星星, 1 -> 身躯, 4 -> 从此, 6 -> 夜间, 0 -> 重-02, 3 -> 喜欢-01),Map(x25 -> 从此, x19 -> 喜欢-01, x21 -> 倾听-01, x15 -> 重-02, x24 -> 夜间, x18 -> 他, x23 -> 星星, x20 -> 我, x17 -> 身躯))),[Ljava.lang.String;@1cc41b77,Annotation([Ljava.lang.String;@2a7ebe07,[Ljava.lang.String;@6e93b0e7,[Ljava.lang.String;@5eeee124),Annotation([Ljava.lang.String;@62cd562d,[Ljava.lang.String;@3d1c52f5,[Ledu.cmu.lti.nlp.amr.Dependency;@4e7bc939),Annotation([Ljava.lang.String;@67b5e613,[Ljava.lang.String;@6fc1a8f6,[Ljava.lang.String;@3095d401),Annotation([Ljava.lang.String;@2037f12b,[Ljava.lang.String;@687a0e40,[Ledu.cmu.lti.nlp.amr.Entity;@a9e8da1))
AMR:
(x15 / 重-02, quant, x17 / 身躯)
(x18 / 他, part, x17 / 身躯)
(x19 / 喜欢-01, prep-following, x20 / 我)
(x19 / 喜欢-01, time, x24 / 夜间)
(x19 / 喜欢-01, time, x25 / 从此)
(x21 / 倾听-01, time, x23 / 星星)
(x21 / 倾听-01, time, x24 / 夜间)
(x25 / 从此, manner, x15 / 重-02)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 23,977 microseconds
Sentence: 好象 是 倾听 着 五亿 个 铃铛 …

Oracle Span 1:  倾听 => 倾听-01
Oracle Span 2:  铃铛 => 铃铛
Spans:
Span 2-3:  倾听 => 倾听-01
Span 6-7:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  倾听 => 倾听-01
Oracle Span 6-7:  铃铛 => 铃铛

Dependencies:
1	好象	_	NR	NR	_	3	top	_	_
2	是	_	VC	VC	_	3	cop	_	_
3	倾听	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	五亿	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	铃铛	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	3	dobj	_	_
9	是	_	VC	VC	_	3	conj	_	_

Oracle:
(x7 / 倾听-01, arg1, x8 / 铃铛)

Input(Some(Graph((像-01 :arg1 (倾听-01 :arg1 (铃铛 :quant 500000000))),ArrayBuffer(Span(2,3,List(0),倾听,倾听-01,false), Span(6,7,List(1),铃铛,铃铛,false)),Map(1 -> 铃铛, 0 -> 倾听-01),Map(x8 -> 铃铛, x7 -> 倾听-01))),[Ljava.lang.String;@14b5752f,Annotation([Ljava.lang.String;@b94703b,[Ljava.lang.String;@33a47707,[Ljava.lang.String;@4d290757),Annotation([Ljava.lang.String;@720a1fd0,[Ljava.lang.String;@5ab7ac02,[Ledu.cmu.lti.nlp.amr.Dependency;@4abbe41c),Annotation([Ljava.lang.String;@4fad51a3,[Ljava.lang.String;@6d7b2319,[Ljava.lang.String;@acb5508),Annotation([Ljava.lang.String;@1f45db49,[Ljava.lang.String;@3ac0a14b,[Ledu.cmu.lti.nlp.amr.Entity;@e972ee1))
AMR:
(x7 / 倾听-01, prep-within, x8 / 铃铛)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 2,998 microseconds
Sentence: 可是 ， 现在 却 又 发生 了 不 寻常 的 事 。 我 给 小 王子 画 的 羊嘴套 上 ， 忘 了 画 皮带 ！

Oracle Span 1:  事 => 事
Oracle Span 2:  发生 => 发生-01
Oracle Span 3:  寻常 => 寻常-01
Oracle Span 4:  小 => 小-01
Oracle Span 5:  忘 => 忘-01
Oracle Span 6:  我 => 我
Oracle Span 7:  王子 => 王子
Oracle Span 8:  现在 => 现在
Oracle Span 9:  画 => 画-01
Oracle Span 10:  画 => 画-01
Oracle Span 11:  皮带 => 皮带
Oracle Span 12:  羊嘴套 => 羊嘴套
Spans:
Span 10-11:  事 => 事
Span 5-6:  发生 => 发生-01
Span 8-9:  寻常 => 寻常-01
Span 14-15:  小 => 小-01
Span 21-22:  忘 => 忘-01
Span 12-13:  我 => 我
Span 15-16:  王子 => 王子
Span 2-3:  现在 => 现在
Span 16-17:  画 => 画-01
Span 23-24:  画 => 画-01
Span 24-25:  皮带 => 皮带
Span 18-19:  羊嘴套 => 羊嘴套

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  事 => 事
Oracle Span 5-6:  发生 => 发生-01
Oracle Span 8-9:  寻常 => 寻常-01
Oracle Span 14-15:  小 => 小-01
Oracle Span 21-22:  忘 => 忘-01
Oracle Span 12-13:  我 => 我
Oracle Span 15-16:  王子 => 王子
Oracle Span 2-3:  现在 => 现在
Oracle Span 16-17:  画 => 画-01
Oracle Span 23-24:  画 => 画-01
Oracle Span 24-25:  皮带 => 皮带
Oracle Span 18-19:  羊嘴套 => 羊嘴套

Dependencies:
1	可是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	现在	_	NT	NT	_	6	tmod	_	_
4	却	_	AD	AD	_	6	advmod	_	_
5	又	_	AD	AD	_	6	advmod	_	_
6	发生	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	不	_	NN	NN	_	9	nn	_	_
9	寻常	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	事	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	我	_	PN	PN	_	22	nsubj	_	_
14	给	_	P	P	_	22	prep	_	_
15	小	_	JJ	JJ	_	16	amod	_	_
16	王子	_	NN	NN	_	17	nn	_	_
17	画	_	NN	NN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	羊嘴套	_	NN	NN	_	20	lobj	_	_
20	上	_	LC	LC	_	14	plmod	_	_
21	,	_	PU	PU	_	22	punct	_	_
22	忘	_	VV	VV	_	6	conj	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	画	_	NN	NN	_	25	nn	_	_
25	皮带	_	NN	NN	_	22	dobj	_	_
26	！	_	PU	PU	_	6	punct	_	_

Oracle:
(x18 / 发生-01, arg0, x19 / 事)
(x18 / 发生-01, time, x22 / 现在)
(x19 / 事, mod, x20 / 寻常-01)
(x23 / 忘-01, arg0, x24 / 我)
(x23 / 忘-01, arg1, x25 / 画-01)
(x25 / 画-01, arg1, x27 / 皮带)
(x25 / 画-01, location, x29 / 羊嘴套)
(x30 / 画-01, arg1, x29 / 羊嘴套)
(x30 / 画-01, beneficiary, x32 / 王子)
(x32 / 王子, mod, x33 / 小-01)

Input(Some(Graph((multi-sentence :snt1 (contrast :arg1 (发生-01 :time 现在 :arg0 (事 :mod (寻常-01 :polarity -)))) :snt2 (忘-01 :mode expressive :arg1 (画-01 :location (羊嘴套 :arg1-of (画-01 :beneficiary (王子 :mod 小-01) :arg0 x24)) :arg1 皮带 :arg0 x24) :arg0 我)),ArrayBuffer(Span(5,6,List(0),发生,发生-01,false), Span(2,3,List(1),现在,现在,false), Span(10,11,List(2),事,事,false), Span(8,9,List(3),寻常,寻常-01,false), Span(21,22,List(4),忘,忘-01,false), Span(16,17,List(5),画,画-01,false), Span(18,19,List(6),羊嘴套,羊嘴套,false), Span(23,24,List(7),画,画-01,false), Span(15,16,List(8),王子,王子,false), Span(14,15,List(9),小,小-01,false), Span(24,25,List(10),皮带,皮带,false), Span(12,13,List(11),我,我,false)),Map(2 -> 事, 5 -> 画-01, 8 -> 王子, 7 -> 画-01, 1 -> 现在, 4 -> 忘-01, 11 -> 我, 6 -> 羊嘴套, 9 -> 小-01, 0 -> 发生-01, 10 -> 皮带, 3 -> 寻常-01),Map(x22 -> 现在, x25 -> 画-01, x19 -> 事, x30 -> 画-01, x27 -> 皮带, x33 -> 小-01, x24 -> 我, x18 -> 发生-01, x23 -> 忘-01, x32 -> 王子, x29 -> 羊嘴套, x20 -> 寻常-01))),[Ljava.lang.String;@5e24592e,Annotation([Ljava.lang.String;@6f0a4e30,[Ljava.lang.String;@50ff7063,[Ljava.lang.String;@67a8bcbb),Annotation([Ljava.lang.String;@1bb96449,[Ljava.lang.String;@26ffd2c0,[Ledu.cmu.lti.nlp.amr.Dependency;@d28c214),Annotation([Ljava.lang.String;@2fc7fa6e,[Ljava.lang.String;@7f8c48f3,[Ljava.lang.String;@273dec10),Annotation([Ljava.lang.String;@6cceb281,[Ljava.lang.String;@7cca31fc,[Ledu.cmu.lti.nlp.amr.Entity;@619c3546))
AMR:
(x18 / 发生-01, scale, x20 / 寻常-01)
(x18 / 发生-01, time, x22 / 现在)
(x19 / 事, mod, x20 / 寻常-01)
(x19 / 事, mod, x24 / 我)
(x23 / 忘-01, location, x29 / 羊嘴套)
(x23 / 忘-01, scale, x30 / 画-01)
(x25 / 画-01, beneficiary, x32 / 王子)
(x25 / 画-01, location, x29 / 羊嘴套)
(x25 / 画-01, purpose, x19 / 事)
(x30 / 画-01, beneficiary, x27 / 皮带)
(x32 / 王子, mod, x33 / 小-01)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.2
WARNING: makeIds can't find span Id: 0.1.1.2.0
WARNING: makeIds can't find span Id: 0.1.1.2.0.1
WARNING: makeIds can't find span Id: 0.1.1.2.0.1.0
WARNING: makeIds can't find span Id: 0.1.1.1
WARNING: makeIds can't find span Id: 0.1.0
Decoded in 43,051 microseconds
Sentence: 他 再 也 不 可能 把 它 套 在 羊 嘴 上 。

Oracle Span 1:  他 => 他
Oracle Span 2:  可能 => 可能-01
Oracle Span 3:  套 => 套-02
Oracle Span 4:  它 => 它
Spans:
Span 0-1:  他 => 他
Span 4-5:  可能 => 可能-01
Span 7-8:  套 => 套-02
Span 6-7:  它 => 它

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  可能 => 可能-01
Oracle Span 7-8:  套 => 套-02
Oracle Span 6-7:  它 => 它

Dependencies:
1	他	_	PN	PN	_	11	nsubj	_	_
2	再	_	AD	AD	_	11	advmod	_	_
3	也	_	AD	AD	_	11	advmod	_	_
4	不	_	AD	AD	_	11	neg	_	_
5	可能	_	VV	VV	_	11	mmod	_	_
6	把	_	BA	BA	_	11	ba	_	_
7	它	_	PN	PN	_	11	nsubj	_	_
8	套	_	M	M	_	11	dep	_	_
9	在	_	P	P	_	11	prep	_	_
10	羊	_	NN	NN	_	9	pobj	_	_
11	嘴	_	VV	VV	_	0	root	_	_
12	上	_	VV	VV	_	11	comod	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x3 / 套-02)
(x3 / 套-02, arg0, x4 / 他)
(x3 / 套-02, arg2, x8 / 它)

Input(Some(Graph((可能-01 :polarity - :arg0 (套-02 :arg2 它 :arg1 羊嘴 :arg0 他)),ArrayBuffer(Span(4,5,List(0),可能,可能-01,false), Span(7,8,List(1),套,套-02,false), Span(6,7,List(2),它,它,false), Span(0,1,List(3),他,他,false)),Map(2 -> 它, 1 -> 套-02, 0 -> 可能-01, 3 -> 他),Map(x8 -> 它, x4 -> 他, x3 -> 套-02, x0 -> 可能-01))),[Ljava.lang.String;@29090809,Annotation([Ljava.lang.String;@30cafd13,[Ljava.lang.String;@1d226f27,[Ljava.lang.String;@1d944fc0),Annotation([Ljava.lang.String;@7c3c453b,[Ljava.lang.String;@1b791dca,[Ledu.cmu.lti.nlp.amr.Dependency;@15ac02d5),Annotation([Ljava.lang.String;@2af9a5ef,[Ljava.lang.String;@34f23816,[Ljava.lang.String;@6736f40f),Annotation([Ljava.lang.String;@12f9f896,[Ljava.lang.String;@7548e1fb,[Ledu.cmu.lti.nlp.amr.Entity;@505f45cc))
AMR:
(x0 / 可能-01, ARG1, x3 / 套-02)
(x3 / 套-02, ARG0, x8 / 它)
(x3 / 套-02, time, x4 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 8,742 microseconds
Sentence: 于是 ， 我 思忖 着 ： “ 他 的 星球 上 发生 了 什么 事 呢 ？

Oracle Span 1:  事 => 事
Oracle Span 2:  他 => 他
Oracle Span 3:  发生 => 发生-01
Oracle Span 4:  思忖 => 思忖-01
Oracle Span 5:  我 => 我
Oracle Span 6:  星球 => 星球
Spans:
Span 14-15:  事 => 事
Span 7-8:  他 => 他
Span 11-12:  发生 => 发生-01
Span 3-4:  思忖 => 思忖-01
Span 2-3:  我 => 我
Span 9-10:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  事 => 事
Oracle Span 7-8:  他 => 他
Oracle Span 11-12:  发生 => 发生-01
Oracle Span 3-4:  思忖 => 思忖-01
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  星球 => 星球

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	思忖	_	VV	VV	_	0	root	_	_
5	着	_	VV	VV	_	4	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	12	punct	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	12	loc	_	_
12	发生	_	VV	VV	_	5	dep	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	事	_	NN	NN	_	12	dobj	_	_
16	呢	_	SP	SP	_	12	dep	_	_
17	？	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 思忖-01, arg0, x12 / 我)
(x11 / 思忖-01, arg2, x23 / 发生-01)
(x23 / 发生-01, arg0, x25 / 事)
(x23 / 发生-01, location, x27 / 星球)
(x27 / 星球, poss, x28 / 他)

Input(Some(Graph((causation :arg1 (思忖-01 :arg2 (发生-01 :location (星球 :poss 他) :arg0 (事 :topic amr-unknown) :mode interrogative) :arg0 我)),ArrayBuffer(Span(3,4,List(0),思忖,思忖-01,false), Span(11,12,List(1),发生,发生-01,false), Span(9,10,List(2),星球,星球,false), Span(7,8,List(3),他,他,false), Span(14,15,List(4),事,事,false), Span(2,3,List(5),我,我,false)),Map(2 -> 星球, 5 -> 我, 1 -> 发生-01, 4 -> 事, 0 -> 思忖-01, 3 -> 他),Map(x28 -> 他, x25 -> 事, x12 -> 我, x27 -> 星球, x23 -> 发生-01, x11 -> 思忖-01))),[Ljava.lang.String;@994544,Annotation([Ljava.lang.String;@5df92089,[Ljava.lang.String;@6f0c45f4,[Ljava.lang.String;@45571cfc),Annotation([Ljava.lang.String;@faec277,[Ljava.lang.String;@1b475663,[Ledu.cmu.lti.nlp.amr.Dependency;@1669931a),Annotation([Ljava.lang.String;@6b24ddd7,[Ljava.lang.String;@12e007be,[Ljava.lang.String;@3335afcf),Annotation([Ljava.lang.String;@699e0bf0,[Ljava.lang.String;@2499b971,[Ledu.cmu.lti.nlp.amr.Entity;@36d697ab))
AMR:
(x11 / 思忖-01, manner, x12 / 我)
(x23 / 发生-01, location, x11 / 思忖-01)
(x23 / 发生-01, location, x27 / 星球)
(x23 / 发生-01, snt3, x25 / 事)
(x27 / 星球, poss, x28 / 他)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.2.0
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,074 microseconds
Sentence: 大概 小羊 把 花 吃掉 了 吧 … ”

Oracle Span 1:  吃掉 => 吃掉-01
Oracle Span 2:  大概 => 大概
Oracle Span 3:  花 => 花
Spans:
Span 4-5:  吃掉 => 吃掉-01
Span 0-1:  大概 => 大概
Span 3-4:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  吃掉 => 吃掉-01
Oracle Span 0-1:  大概 => 大概
Oracle Span 3-4:  花 => 花

Dependencies:
1	大概	_	NN	NN	_	2	nn	_	_
2	小羊	_	NN	NN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	花	_	NN	NN	_	5	nsubj	_	_
5	吃掉	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	吧	_	PU	PU	_	8	punct	_	_
8	…	_	NN	NN	_	5	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x20 / 大概, arg0, x21 / 吃掉-01)
(x21 / 吃掉-01, arg1, x24 / 花)

Input(Some(Graph((say :arg1 (大概 :arg0 (吃掉-01 :arg1 花 :arg0 (羊 :mod 小-01)))),ArrayBuffer(Span(0,1,List(0),大概,大概,false), Span(4,5,List(1),吃掉,吃掉-01,false), Span(3,4,List(2),花,花,false)),Map(2 -> 花, 1 -> 吃掉-01, 0 -> 大概),Map(x21 -> 吃掉-01, x24 -> 花, x20 -> 大概))),[Ljava.lang.String;@28831d69,Annotation([Ljava.lang.String;@315b4202,[Ljava.lang.String;@58e03769,[Ljava.lang.String;@5a899811),Annotation([Ljava.lang.String;@6a51ae7c,[Ljava.lang.String;@171aa66,[Ledu.cmu.lti.nlp.amr.Dependency;@58739e5e),Annotation([Ljava.lang.String;@4e2cdc51,[Ljava.lang.String;@2969a9a6,[Ljava.lang.String;@25470477),Annotation([Ljava.lang.String;@6182ffef,[Ljava.lang.String;@49e479da,[Ledu.cmu.lti.nlp.amr.Entity;@2d24cdd9))
AMR:
(x21 / 吃掉-01, manner, x20 / 大概)
(x21 / 吃掉-01, manner, x24 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 6,946 microseconds
Sentence: 有时 我 又 对 自己 说 ， “ 绝对 不 会 的 ！

Oracle Span 1:  会 => 会-02
Oracle Span 2:  又 => 又
Oracle Span 3:  我 => 我
Oracle Span 4:  有时 => 有时
Oracle Span 5:  绝对 => 绝对
Oracle Span 6:  自己 => 自己
Oracle Span 7:  说 => 说-01
Spans:
Span 10-11:  会 => 会-02
Span 2-3:  又 => 又
Span 1-2:  我 => 我
Span 0-1:  有时 => 有时
Span 8-9:  绝对 => 绝对
Span 4-5:  自己 => 自己
Span 5-6:  说 => 说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  会 => 会-02
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  有时 => 有时
Oracle Span 8-9:  绝对 => 绝对
Oracle Span 4-5:  自己 => 自己
Oracle Span 5-6:  说 => 说-01

Dependencies:
1	有时	_	AD	AD	_	6	advmod	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	自己	_	PN	PN	_	4	pobj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	绝对	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	会	_	VV	VV	_	6	ccomp	_	_
12	的	_	SP	SP	_	6	dep	_	_
13	！	_	PU	PU	_	6	punct	_	_
14	我	_	PN	PN	_	11	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x8 / 会-02)
(x0 / 说-01, arg3, x11 / 自己)
(x0 / 说-01, manner, x12 / 又)
(x0 / 说-01, time, x7 / 有时)
(x8 / 会-02, degree, x10 / 绝对)

Input(Some(Graph((说-01 :manner 又 :arg3 自己 :arg1 (会-02 :polarity - :degree 绝对) :time 有时 :arg0 我),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(2,3,List(1),又,又,false), Span(4,5,List(2),自己,自己,false), Span(10,11,List(3),会,会-02,false), Span(8,9,List(4),绝对,绝对,false), Span(0,1,List(5),有时,有时,false), Span(1,2,List(6),我,我,false)),Map(2 -> 自己, 5 -> 有时, 1 -> 又, 4 -> 绝对, 6 -> 我, 0 -> 说-01, 3 -> 会-02),Map(x2 -> 我, x10 -> 绝对, x8 -> 会-02, x12 -> 又, x7 -> 有时, x11 -> 自己, x0 -> 说-01))),[Ljava.lang.String;@30dd00b6,Annotation([Ljava.lang.String;@4656fcc5,[Ljava.lang.String;@2c16677c,[Ljava.lang.String;@27d73d22),Annotation([Ljava.lang.String;@7fd751de,[Ljava.lang.String;@e162a35,[Ledu.cmu.lti.nlp.amr.Dependency;@1124910c),Annotation([Ljava.lang.String;@f849027,[Ljava.lang.String;@4a9869a8,[Ljava.lang.String;@75e0a54c),Annotation([Ljava.lang.String;@40f9f60d,[Ljava.lang.String;@6bd7439d,[Ledu.cmu.lti.nlp.amr.Entity;@628ba266))
AMR:
(x0 / 说-01, manner, x12 / 又)
(x0 / 说-01, time, x11 / 自己)
(x0 / 说-01, time, x7 / 有时)
(x10 / 绝对, prep-on-behalf, x0 / 说-01)
(x7 / 有时, subset, x2 / 我)
(x8 / 会-02, degree, x10 / 绝对)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 14,640 microseconds
Sentence: 小 王子 每 天 夜里 都 用 玻璃 罩子 罩住 他 的 花 ， 而且 他 会 把 羊 看管 好 的 … ”

Oracle Span 1:  会 => 会-02
Oracle Span 2:  好 => 好-01
Oracle Span 3:  小 => 小-01
Oracle Span 4:  王子 => 王子
Oracle Span 5:  玻璃 => 玻璃
Oracle Span 6:  用 => 用-01
Oracle Span 7:  看管 => 看管-01
Oracle Span 8:  罩住 => 罩住-01
Oracle Span 9:  罩子 => 罩子
Oracle Span 10:  羊 => 羊
Oracle Span 11:  花 => 花
Oracle Span 12:  都 => 都
Spans:
Span 16-17:  会 => 会-02
Span 20-21:  好 => 好-01
Span 0-1:  小 => 小-01
Span 1-2:  王子 => 王子
Span 7-8:  玻璃 => 玻璃
Span 6-7:  用 => 用-01
Span 19-20:  看管 => 看管-01
Span 9-10:  罩住 => 罩住-01
Span 8-9:  罩子 => 罩子
Span 18-19:  羊 => 羊
Span 12-13:  花 => 花
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  会 => 会-02
Oracle Span 20-21:  好 => 好-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  玻璃 => 玻璃
Oracle Span 6-7:  用 => 用-01
Oracle Span 19-20:  看管 => 看管-01
Oracle Span 9-10:  罩住 => 罩住-01
Oracle Span 8-9:  罩子 => 罩子
Oracle Span 18-19:  羊 => 羊
Oracle Span 12-13:  花 => 花
Oracle Span 5-6:  都 => 都

Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nn	_	_
3	每	_	DT	DT	_	5	det	_	_
4	天	_	M	M	_	3	clf	_	_
5	夜里	_	NN	NN	_	10	nsubj	_	_
6	都	_	AD	AD	_	10	advmod	_	_
7	用	_	P	P	_	10	prep	_	_
8	玻璃	_	NN	NN	_	9	nn	_	_
9	罩子	_	NN	NN	_	7	pobj	_	_
10	罩住	_	VV	VV	_	17	conj	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	花	_	NN	NN	_	10	dobj	_	_
14	,	_	PU	PU	_	17	punct	_	_
15	而且	_	AD	AD	_	17	advmod	_	_
16	他	_	PN	PN	_	17	nsubj	_	_
17	会	_	VV	VV	_	0	root	_	_
18	把	_	BA	BA	_	21	ba	_	_
19	羊	_	NN	NN	_	20	nn	_	_
20	看管	_	NN	NN	_	21	nsubj	_	_
21	好	_	VA	VA	_	23	rcmod	_	_
22	的	_	DEC	DEC	_	21	cpm	_	_
23	…	_	NN	NN	_	17	dobj	_	_
24	”	_	PU	PU	_	17	punct	_	_

Oracle:
(x28 / 用-01, arg0, x29 / 王子)
(x28 / 用-01, arg1, x31 / 罩子)
(x28 / 用-01, arg2, x34 / 罩住-01)
(x28 / 用-01, manner, x33 / 都)
(x29 / 王子, mod, x30 / 小-01)
(x31 / 罩子, mod, x32 / 玻璃)
(x34 / 罩住-01, arg1, x36 / 花)
(x38 / 会-02, arg0, x39 / 看管-01)
(x39 / 看管-01, arg1, x41 / 羊)
(x39 / 看管-01, manner, x42 / 好-01)

Input(Some(Graph((say :arg1 (and :op (用-01 :arg2 (罩住-01 :arg1 (花 :poss x29) :arg0 x29) :manner 都 :arg1 (罩子 :mod 玻璃) :arg0 (王子 :mod 小-01)) :op (会-02 :arg0 (看管-01 :manner 好-01 :arg1 羊 :arg0 x29)))),ArrayBuffer(Span(6,7,List(0),用,用-01,false), Span(9,10,List(1),罩住,罩住-01,false), Span(12,13,List(2),花,花,false), Span(5,6,List(3),都,都,false), Span(8,9,List(4),罩子,罩子,false), Span(7,8,List(5),玻璃,玻璃,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小-01,false), Span(16,17,List(8),会,会-02,false), Span(19,20,List(9),看管,看管-01,false), Span(20,21,List(10),好,好-01,false), Span(18,19,List(11),羊,羊,false)),Map(2 -> 花, 5 -> 玻璃, 8 -> 会-02, 7 -> 小-01, 1 -> 罩住-01, 4 -> 罩子, 11 -> 羊, 6 -> 王子, 9 -> 看管-01, 0 -> 用-01, 10 -> 好-01, 3 -> 都),Map(x34 -> 罩住-01, x28 -> 用-01, x31 -> 罩子, x39 -> 看管-01, x30 -> 小-01, x33 -> 都, x42 -> 好-01, x36 -> 花, x41 -> 羊, x38 -> 会-02, x32 -> 玻璃, x29 -> 王子))),[Ljava.lang.String;@1231a1be,Annotation([Ljava.lang.String;@1d77746b,[Ljava.lang.String;@4ced17f3,[Ljava.lang.String;@734a149a),Annotation([Ljava.lang.String;@6ce9771c,[Ljava.lang.String;@4a9b92c6,[Ledu.cmu.lti.nlp.amr.Dependency;@6eed46e9),Annotation([Ljava.lang.String;@4d20616a,[Ljava.lang.String;@6ad6ae45,[Ljava.lang.String;@7c4d1c7b),Annotation([Ljava.lang.String;@7893c715,[Ljava.lang.String;@36f6d25c,[Ledu.cmu.lti.nlp.amr.Entity;@690df641))
AMR:
(x28 / 用-01, manner, x32 / 玻璃)
(x28 / 用-01, manner, x33 / 都)
(x28 / 用-01, value, x29 / 王子)
(x29 / 王子, mod, x30 / 小-01)
(x31 / 罩子, mod, x32 / 玻璃)
(x34 / 罩住-01, manner, x31 / 罩子)
(x34 / 罩住-01, value, x36 / 花)
(x38 / 会-02, value, x36 / 花)
(x38 / 会-02, value, x39 / 看管-01)
(x39 / 看管-01, manner, x42 / 好-01)
(x39 / 看管-01, value, x41 / 羊)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.3
WARNING: makeIds can't find span Id: 0.0.0.3.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.2
WARNING: makeIds can't find span Id: 0.0.1.0.1
Decoded in 41,890 microseconds
Sentence: 我 就 非常 高兴 。

Oracle Span 1:  就 => 就
Oracle Span 2:  我 => 我
Oracle Span 3:  非常 => 非常
Oracle Span 4:  高兴 => 高兴-01
Spans:
Span 1-2:  就 => 就
Span 0-1:  我 => 我
Span 2-3:  非常 => 非常
Span 3-4:  高兴 => 高兴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  就 => 就
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  非常 => 非常
Oracle Span 3-4:  高兴 => 高兴-01

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	高兴	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 高兴-01, arg0, x4 / 我)
(x0 / 高兴-01, degree, x3 / 非常)
(x0 / 高兴-01, manner, x5 / 就)

Input(Some(Graph((高兴-01 :manner 就 :arg0 我 :degree 非常),ArrayBuffer(Span(3,4,List(0),高兴,高兴-01,false), Span(1,2,List(1),就,就,false), Span(0,1,List(2),我,我,false), Span(2,3,List(3),非常,非常,false)),Map(2 -> 我, 1 -> 就, 0 -> 高兴-01, 3 -> 非常),Map(x5 -> 就, x4 -> 我, x3 -> 非常, x0 -> 高兴-01))),[Ljava.lang.String;@7db791df,Annotation([Ljava.lang.String;@1bfa5a13,[Ljava.lang.String;@1b1e1f02,[Ljava.lang.String;@1da75dde),Annotation([Ljava.lang.String;@5c5f0edc,[Ljava.lang.String;@153cfd86,[Ledu.cmu.lti.nlp.amr.Dependency;@7e31062c),Annotation([Ljava.lang.String;@595fed99,[Ljava.lang.String;@7d522180,[Ljava.lang.String;@ff03361),Annotation([Ljava.lang.String;@790654d5,[Ljava.lang.String;@5f935d49,[Ledu.cmu.lti.nlp.amr.Entity;@3321291a))
AMR:
(x0 / 高兴-01, degree, x3 / 非常)
(x0 / 高兴-01, direction, x4 / 我)
(x0 / 高兴-01, manner, x5 / 就)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 5,620 microseconds
Sentence: 这时 ， 所有 的 星星 都 在 柔情 地 轻声 笑 着 。

Oracle Span 1:  所有 => 所有
Oracle Span 2:  星星 => 星星
Oracle Span 3:  柔情 => 柔情
Oracle Span 4:  笑 => 笑-01
Oracle Span 5:  轻声 => 轻声
Oracle Span 6:  这时 => 这时
Spans:
Span 2-3:  所有 => 所有
Span 4-5:  星星 => 星星
Span 7-8:  柔情 => 柔情
Span 10-11:  笑 => 笑-01
Span 9-10:  轻声 => 轻声
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 7-8:  柔情 => 柔情
Oracle Span 10-11:  笑 => 笑-01
Oracle Span 9-10:  轻声 => 轻声
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	11	advmod	_	_
2	,	_	PU	PU	_	11	punct	_	_
3	所有	_	DT	DT	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星星	_	NN	NN	_	11	nsubj	_	_
6	都	_	AD	AD	_	11	advmod	_	_
7	在	_	P	P	_	11	prep	_	_
8	柔情	_	NR	NR	_	9	nn	_	_
9	地	_	NN	NN	_	7	pobj	_	_
10	轻声	_	AD	AD	_	11	advmod	_	_
11	笑	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 星星)
(x0 / 笑-01, manner, x10 / 柔情)
(x0 / 笑-01, manner, x11 / 轻声)
(x0 / 笑-01, time, x9 / 这时)
(x2 / 星星, mod, x3 / 所有)

Input(Some(Graph((笑-01 :manner 轻声 :manner 柔情 :time 这时 :arg0 (星星 :mod 所有)),ArrayBuffer(Span(10,11,List(0),笑,笑-01,false), Span(9,10,List(1),轻声,轻声,false), Span(7,8,List(2),柔情,柔情,false), Span(0,1,List(3),这时,这时,false), Span(4,5,List(4),星星,星星,false), Span(2,3,List(5),所有,所有,false)),Map(2 -> 柔情, 5 -> 所有, 1 -> 轻声, 4 -> 星星, 0 -> 笑-01, 3 -> 这时),Map(x2 -> 星星, x10 -> 柔情, x3 -> 所有, x11 -> 轻声, x9 -> 这时, x0 -> 笑-01))),[Ljava.lang.String;@3dc46f24,Annotation([Ljava.lang.String;@76af34b5,[Ljava.lang.String;@3313463c,[Ljava.lang.String;@9c0d0bd),Annotation([Ljava.lang.String;@176333ee,[Ljava.lang.String;@18e6b72b,[Ledu.cmu.lti.nlp.amr.Dependency;@316d30ad),Annotation([Ljava.lang.String;@3ea75b05,[Ljava.lang.String;@30d5e37c,[Ljava.lang.String;@1da745a2),Annotation([Ljava.lang.String;@4597e6e3,[Ljava.lang.String;@41ece227,[Ledu.cmu.lti.nlp.amr.Entity;@5e3d2765))
AMR:
(x0 / 笑-01, location, x2 / 星星)
(x0 / 笑-01, manner, x10 / 柔情)
(x0 / 笑-01, manner, x11 / 轻声)
(x0 / 笑-01, time, x9 / 这时)
(x2 / 星星, mod, x3 / 所有)

WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 13,257 microseconds
Sentence: 忽而 我 又 对 自己 说 ： “ 人们 有时 总 免 不 了 会 疏忽 的 ， 那 就 够戗 ！

Oracle Span 1:  人们 => 人们
Oracle Span 2:  免 => 免-01
Oracle Span 3:  又 => 又
Oracle Span 4:  够戗 => 够戗
Oracle Span 5:  忽而 => 忽而
Oracle Span 6:  我 => 我
Oracle Span 7:  有时 => 有时
Oracle Span 8:  疏忽 => 疏忽-01
Oracle Span 9:  自己 => 自己
Oracle Span 10:  说 => 说-01
Oracle Span 11:  那 => 那
Spans:
Span 8-9:  人们 => 人们
Span 11-12:  免 => 免-01
Span 2-3:  又 => 又
Span 20-21:  够戗 => 够戗
Span 0-1:  忽而 => 忽而
Span 1-2:  我 => 我
Span 9-10:  有时 => 有时
Span 15-16:  疏忽 => 疏忽-01
Span 4-5:  自己 => 自己
Span 5-6:  说 => 说-01
Span 18-19:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人们 => 人们
Oracle Span 11-12:  免 => 免-01
Oracle Span 2-3:  又 => 又
Oracle Span 20-21:  够戗 => 够戗
Oracle Span 0-1:  忽而 => 忽而
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  有时 => 有时
Oracle Span 15-16:  疏忽 => 疏忽-01
Oracle Span 4-5:  自己 => 自己
Oracle Span 5-6:  说 => 说-01
Oracle Span 18-19:  那 => 那

Dependencies:
1	忽而	_	NR	NR	_	6	nsubj	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	自己	_	PN	PN	_	4	pobj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	12	punct	_	_
9	人们	_	NN	NN	_	12	nsubj	_	_
10	有时	_	AD	AD	_	12	advmod	_	_
11	总	_	AD	AD	_	12	advmod	_	_
12	免	_	VV	VV	_	6	ccomp	_	_
13	不	_	AD	AD	_	14	neg	_	_
14	了	_	VV	VV	_	12	ccomp	_	_
15	会	_	VV	VV	_	14	dobj	_	_
16	疏忽	_	NN	NN	_	15	dobj	_	_
17	的	_	DEC	DEC	_	15	cpm	_	_
18	,	_	PU	PU	_	12	punct	_	_
19	那	_	PN	PN	_	21	nsubj	_	_
20	就	_	AD	AD	_	21	advmod	_	_
21	够戗	_	VV	VV	_	12	conj	_	_
22	！	_	PU	PU	_	6	punct	_	_
23	人们	_	NN	NN	_	14	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x23 / 够戗)
(x0 / 说-01, arg3, x21 / 自己)
(x0 / 说-01, manner, x30 / 又)
(x0 / 说-01, time, x10 / 忽而)
(x23 / 够戗, cause, x24 / 免-01)
(x23 / 够戗, domain, x29 / 那)
(x24 / 免-01, arg0, x26 / 人们)
(x24 / 免-01, arg2, x27 / 疏忽-01)
(x24 / 免-01, time, x28 / 有时)

Input(Some(Graph((说-01 :manner 又 :arg1 (够戗 :domain 那 :cause (免-01 :time 有时 :arg2 疏忽-01 :arg0 人们 :polarity -)) :arg3 自己 :time 忽而 :arg0 我),ArrayBuffer(Span(5,6,List(0),说,说-01,false), Span(2,3,List(1),又,又,false), Span(20,21,List(2),够戗,够戗,false), Span(18,19,List(3),那,那,false), Span(11,12,List(4),免,免-01,false), Span(9,10,List(5),有时,有时,false), Span(15,16,List(6),疏忽,疏忽-01,false), Span(8,9,List(7),人们,人们,false), Span(4,5,List(8),自己,自己,false), Span(0,1,List(9),忽而,忽而,false), Span(1,2,List(10),我,我,false)),Map(2 -> 够戗, 5 -> 有时, 8 -> 自己, 7 -> 人们, 1 -> 又, 4 -> 免-01, 6 -> 疏忽-01, 9 -> 忽而, 0 -> 说-01, 10 -> 我, 3 -> 那),Map(x28 -> 有时, x2 -> 我, x10 -> 忽而, x30 -> 又, x27 -> 疏忽-01, x21 -> 自己, x24 -> 免-01, x23 -> 够戗, x26 -> 人们, x29 -> 那, x0 -> 说-01))),[Ljava.lang.String;@7910f355,Annotation([Ljava.lang.String;@34ab26a,[Ljava.lang.String;@259195fe,[Ljava.lang.String;@12209826),Annotation([Ljava.lang.String;@6cd45b6c,[Ljava.lang.String;@3a5b7d7e,[Ledu.cmu.lti.nlp.amr.Dependency;@13cc31ae),Annotation([Ljava.lang.String;@5bb7a59,[Ljava.lang.String;@4bfa5eb9,[Ljava.lang.String;@2a2b7a35),Annotation([Ljava.lang.String;@58186f9f,[Ljava.lang.String;@62faf77,[Ledu.cmu.lti.nlp.amr.Entity;@1f39269d))
AMR:
(x0 / 说-01, manner, x30 / 又)
(x0 / 说-01, source, x21 / 自己)
(x0 / 说-01, time, x10 / 忽而)
(x0 / 说-01, time, x28 / 有时)
(x10 / 忽而, destination, x2 / 我)
(x23 / 够戗, domain, x29 / 那)
(x23 / 够戗, prep-on-behalf, x27 / 疏忽-01)
(x24 / 免-01, prep-on-behalf, x26 / 人们)
(x24 / 免-01, time, x28 / 有时)
(x27 / 疏忽-01, manner, x24 / 免-01)

WARNING: makeIds can't find span Id: 0.4
WARNING: makeIds can't find span Id: 0.3
WARNING: makeIds can't find span Id: 0.3.1
WARNING: makeIds can't find span Id: 0.3.0
WARNING: makeIds can't find span Id: 0.3.0.3
WARNING: makeIds can't find span Id: 0.3.0.2
WARNING: makeIds can't find span Id: 0.3.0.1
WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
Decoded in 35,094 microseconds
Sentence: 某 一 天 晚上 他 忘 了 玻璃 罩子 ， 或者 小羊 夜 里 不声不响 地 跑 出来 … ”

Oracle Span 1:  不声不响 => 不声不响-01
Oracle Span 2:  他 => 他
Oracle Span 3:  出来 => 出来-01
Oracle Span 4:  忘 => 忘-01
Oracle Span 5:  晚上 => 晚上
Oracle Span 6:  玻璃 => 玻璃
Oracle Span 7:  罩子 => 罩子
Oracle Span 8:  跑 => 跑-01
Spans:
Span 14-15:  不声不响 => 不声不响-01
Span 4-5:  他 => 他
Span 17-18:  出来 => 出来-01
Span 5-6:  忘 => 忘-01
Span 3-4:  晚上 => 晚上
Span 7-8:  玻璃 => 玻璃
Span 8-9:  罩子 => 罩子
Span 16-17:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  不声不响 => 不声不响-01
Oracle Span 4-5:  他 => 他
Oracle Span 17-18:  出来 => 出来-01
Oracle Span 5-6:  忘 => 忘-01
Oracle Span 3-4:  晚上 => 晚上
Oracle Span 7-8:  玻璃 => 玻璃
Oracle Span 8-9:  罩子 => 罩子
Oracle Span 16-17:  跑 => 跑-01

Dependencies:
1	某	_	DT	DT	_	6	dep	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	晚上	_	NT	NT	_	1	dep	_	_
5	他	_	PN	PN	_	6	nsubj	_	_
6	忘	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	玻璃	_	NN	NN	_	9	nn	_	_
9	罩子	_	NN	NN	_	6	dobj	_	_
10	,	_	PU	PU	_	6	punct	_	_
11	或者	_	CC	CC	_	6	cc	_	_
12	小羊	_	NN	NN	_	13	nn	_	_
13	夜	_	NN	NN	_	14	lobj	_	_
14	里	_	LC	LC	_	18	loc	_	_
15	不声不响	_	NN	NN	_	17	nn	_	_
16	地	_	NN	NN	_	17	nn	_	_
17	跑	_	NN	NN	_	18	nsubj	_	_
18	出来	_	VV	VV	_	6	conj	_	_
19	…	_	NN	NN	_	18	dobj	_	_
20	”	_	PU	PU	_	18	punct	_	_

Oracle:
(x18 / 忘-01, arg0, x19 / 他)
(x18 / 忘-01, arg1, x20 / 罩子)
(x18 / 忘-01, time, x23 / 晚上)
(x25 / 跑-01, direction, x29 / 出来-01)
(x25 / 跑-01, manner, x28 / 不声不响-01)
(x31 / 玻璃, consist, x20 / 罩子)

Input(Some(Graph((say :arg1 (or :op (忘-01 :time (晚上 :time 某一天) :arg1 (罩子 :consist-of 玻璃) :arg0 他) :op (跑-01 :time 夜里 :direction 出来-01 :manner 不声不响-01 :arg0 (羊 :mod 小-01)))),ArrayBuffer(Span(5,6,List(0),忘,忘-01,false), Span(3,4,List(1),晚上,晚上,false), Span(8,9,List(2),罩子,罩子,false), Span(7,8,List(3),玻璃,玻璃,false), Span(4,5,List(4),他,他,false), Span(16,17,List(5),跑,跑-01,false), Span(17,18,List(6),出来,出来-01,false), Span(14,15,List(7),不声不响,不声不响-01,false)),Map(2 -> 罩子, 5 -> 跑-01, 7 -> 不声不响-01, 1 -> 晚上, 4 -> 他, 6 -> 出来-01, 0 -> 忘-01, 3 -> 玻璃),Map(x28 -> 不声不响-01, x25 -> 跑-01, x19 -> 他, x31 -> 玻璃, x18 -> 忘-01, x23 -> 晚上, x29 -> 出来-01, x20 -> 罩子))),[Ljava.lang.String;@6e321d9d,Annotation([Ljava.lang.String;@754de353,[Ljava.lang.String;@ee2ae9a,[Ljava.lang.String;@58b97c15),Annotation([Ljava.lang.String;@26994c6a,[Ljava.lang.String;@3cd46491,[Ledu.cmu.lti.nlp.amr.Dependency;@27d98bef),Annotation([Ljava.lang.String;@349312d5,[Ljava.lang.String;@5885e231,[Ljava.lang.String;@47eaf55c),Annotation([Ljava.lang.String;@2c0798bd,[Ljava.lang.String;@2e3252,[Ledu.cmu.lti.nlp.amr.Entity;@77cddc0c))
AMR:
(x18 / 忘-01, age, x19 / 他)
(x18 / 忘-01, manner, x28 / 不声不响-01)
(x18 / 忘-01, manner, x31 / 玻璃)
(x18 / 忘-01, time, x23 / 晚上)
(x25 / 跑-01, direction, x29 / 出来-01)
(x25 / 跑-01, manner, x28 / 不声不响-01)
(x31 / 玻璃, consist, x20 / 罩子)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.2
WARNING: makeIds can't find span Id: 0.0.1.1
Decoded in 21,059 microseconds
Sentence: 想到 这里 ， 小 铃铛 都 变成 泪珠 了 ！

Oracle Span 1:  变成 => 变成-01
Oracle Span 2:  小 => 小-01
Oracle Span 3:  想到 => 想到-01
Oracle Span 4:  泪珠 => 泪珠
Oracle Span 5:  这里 => 这里
Oracle Span 6:  铃铛 => 铃铛
Spans:
Span 6-7:  变成 => 变成-01
Span 3-4:  小 => 小-01
Span 0-1:  想到 => 想到-01
Span 7-8:  泪珠 => 泪珠
Span 1-2:  这里 => 这里
Span 4-5:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  变成 => 变成-01
Oracle Span 3-4:  小 => 小-01
Oracle Span 0-1:  想到 => 想到-01
Oracle Span 7-8:  泪珠 => 泪珠
Oracle Span 1-2:  这里 => 这里
Oracle Span 4-5:  铃铛 => 铃铛

Dependencies:
1	想到	_	VV	VV	_	0	root	_	_
2	这里	_	PN	PN	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	铃铛	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	变成	_	VV	VV	_	1	ccomp	_	_
8	泪珠	_	NN	NN	_	7	dobj	_	_
9	了	_	SP	SP	_	1	dep	_	_
10	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 变成-01, arg0, x2 / 铃铛)
(x0 / 变成-01, arg1, x4 / 泪珠)
(x0 / 变成-01, cause, x5 / 想到-01)
(x2 / 铃铛, mod, x3 / 小-01)
(x5 / 想到-01, arg1, x6 / 这里)

Input(Some(Graph((变成-01 :cause (想到-01 :arg1 这里) :arg1 泪珠 :arg0 (铃铛 :mod 小-01)),ArrayBuffer(Span(6,7,List(0),变成,变成-01,false), Span(0,1,List(1),想到,想到-01,false), Span(1,2,List(2),这里,这里,false), Span(7,8,List(3),泪珠,泪珠,false), Span(4,5,List(4),铃铛,铃铛,false), Span(3,4,List(5),小,小-01,false)),Map(2 -> 这里, 5 -> 小-01, 1 -> 想到-01, 4 -> 铃铛, 0 -> 变成-01, 3 -> 泪珠),Map(x2 -> 铃铛, x5 -> 想到-01, x4 -> 泪珠, x3 -> 小-01, x6 -> 这里, x0 -> 变成-01))),[Ljava.lang.String;@671d97bc,Annotation([Ljava.lang.String;@774f2992,[Ljava.lang.String;@602298b,[Ljava.lang.String;@1fb6b8fb),Annotation([Ljava.lang.String;@149d7cc6,[Ljava.lang.String;@1a10c47e,[Ledu.cmu.lti.nlp.amr.Dependency;@d49e8c6),Annotation([Ljava.lang.String;@2712e8f4,[Ljava.lang.String;@5896cb9c,[Ljava.lang.String;@44b9c7c4),Annotation([Ljava.lang.String;@674184d,[Ljava.lang.String;@3611153f,[Ledu.cmu.lti.nlp.amr.Entity;@5835e24a))
AMR:
(x0 / 变成-01, degree, x2 / 铃铛)
(x0 / 变成-01, ord, x4 / 泪珠)
(x2 / 铃铛, mod, x3 / 小-01)
(x2 / 铃铛, unit, x6 / 这里)
(x5 / 想到-01, ord, x6 / 这里)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 11,684 microseconds
Sentence: 这 真 是 一 个 很 大 的 奥秘 。

Oracle Span 1:  大 => 大-04
Oracle Span 2:  奥秘 => 奥秘
Oracle Span 3:  很 => 很
Oracle Span 4:  这 => 这
Spans:
Span 6-7:  大 => 大-04
Span 8-9:  奥秘 => 奥秘
Span 5-6:  很 => 很
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  大 => 大-04
Oracle Span 8-9:  奥秘 => 奥秘
Oracle Span 5-6:  很 => 很
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	9	clf	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	大	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	奥秘	_	NN	NN	_	3	attr	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 奥秘, domain, x8 / 这)
(x0 / 奥秘, mod, x5 / 大-04)
(x5 / 大-04, degree, x6 / 很)

Input(Some(Graph((奥秘 :domain 这 :quant 1 :mod (大-04 :degree 很)),ArrayBuffer(Span(8,9,List(0),奥秘,奥秘,false), Span(0,1,List(1),这,这,false), Span(6,7,List(2),大,大-04,false), Span(5,6,List(3),很,很,false)),Map(2 -> 大-04, 1 -> 这, 0 -> 奥秘, 3 -> 很),Map(x5 -> 大-04, x8 -> 这, x6 -> 很, x0 -> 奥秘))),[Ljava.lang.String;@5238896f,Annotation([Ljava.lang.String;@74a85515,[Ljava.lang.String;@4a2e1e52,[Ljava.lang.String;@3dfe92ef),Annotation([Ljava.lang.String;@2b9b17ce,[Ljava.lang.String;@1d2def55,[Ledu.cmu.lti.nlp.amr.Dependency;@274bae2c),Annotation([Ljava.lang.String;@6eeb29c0,[Ljava.lang.String;@1d3d76b4,[Ljava.lang.String;@6f986501),Annotation([Ljava.lang.String;@15d88c10,[Ljava.lang.String;@22ca1242,[Ledu.cmu.lti.nlp.amr.Entity;@54b44879))
AMR:
(x0 / 奥秘, domain, x8 / 这)
(x0 / 奥秘, mod, x5 / 大-04)
(x5 / 大-04, degree, x6 / 很)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 7,994 microseconds
Sentence: 对 你们 这些 喜欢 小 王子 的 人 来说 ， 就 象 对于 我 来说 一样 ， 无论 什么 地方 ， 凡是 某 处 ， 如果 一 只 羊 （ 尽管 我们 并不 认识 它 ） ， 吃 了 一 朵 玫瑰花 ， 或是 没有 吃掉 一 朵 玫瑰花 ， 那么 宇宙 的 面貌 就 全然 不同 。

Oracle Span 1:  不同 => 不同-01
Oracle Span 2:  人 => 人
Oracle Span 3:  什么 => 什么
Oracle Span 4:  你们 => 你们
Oracle Span 5:  全然 => 全然
Oracle Span 6:  凡是 => 凡是
Oracle Span 7:  吃 => 吃-01
Oracle Span 8:  吃掉 => 吃掉-01
Oracle Span 9:  喜欢 => 喜欢-01
Oracle Span 10:  地方 => 地方
Oracle Span 11:  宇宙 => 宇宙
Oracle Span 12:  小 => 小-01
Oracle Span 13:  我 => 我
Oracle Span 14:  我们 => 我们
Oracle Span 15:  无论 => 无论-01
Oracle Span 16:  来说 => 来说-01
Oracle Span 17:  来说 => 来说-01
Oracle Span 18:  王子 => 王子
Oracle Span 19:  玫瑰花 => 玫瑰花
Oracle Span 20:  羊 => 羊
Oracle Span 21:  认识 => 认识-01
Oracle Span 22:  这些 => 这些
Oracle Span 23:  面貌 => 面貌
Spans:
Span 56-57:  不同 => 不同-01
Span 7-8:  人 => 人
Span 18-19:  什么 => 什么
Span 1-2:  你们 => 你们
Span 55-56:  全然 => 全然
Span 21-22:  凡是 => 凡是
Span 37-38:  吃 => 吃-01
Span 45-46:  吃掉 => 吃掉-01
Span 3-4:  喜欢 => 喜欢-01
Span 19-20:  地方 => 地方
Span 51-52:  宇宙 => 宇宙
Span 4-5:  小 => 小-01
Span 13-14:  我 => 我
Span 31-32:  我们 => 我们
Span 17-18:  无论 => 无论-01
Span 8-9:  来说 => 来说-01
Span 14-15:  来说 => 来说-01
Span 5-6:  王子 => 王子
Span 41-42:  玫瑰花 => 玫瑰花
Span 28-29:  羊 => 羊
Span 33-34:  认识 => 认识-01
Span 2-3:  这些 => 这些
Span 53-54:  面貌 => 面貌

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 56-57:  不同 => 不同-01
Oracle Span 7-8:  人 => 人
Oracle Span 18-19:  什么 => 什么
Oracle Span 1-2:  你们 => 你们
Oracle Span 55-56:  全然 => 全然
Oracle Span 21-22:  凡是 => 凡是
Oracle Span 37-38:  吃 => 吃-01
Oracle Span 45-46:  吃掉 => 吃掉-01
Oracle Span 3-4:  喜欢 => 喜欢-01
Oracle Span 19-20:  地方 => 地方
Oracle Span 51-52:  宇宙 => 宇宙
Oracle Span 4-5:  小 => 小-01
Oracle Span 13-14:  我 => 我
Oracle Span 31-32:  我们 => 我们
Oracle Span 17-18:  无论 => 无论-01
Oracle Span 8-9:  来说 => 来说-01
Oracle Span 14-15:  来说 => 来说-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 41-42:  玫瑰花 => 玫瑰花
Oracle Span 28-29:  羊 => 羊
Oracle Span 33-34:  认识 => 认识-01
Oracle Span 2-3:  这些 => 这些
Oracle Span 53-54:  面貌 => 面貌

Dependencies:
1	对	_	P	P	_	57	prep	_	_
2	你们	_	PN	PN	_	3	dep	_	_
3	这些	_	PN	PN	_	4	nsubj	_	_
4	喜欢	_	VV	VV	_	1	pccomp	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	人	_	NN	NN	_	4	dobj	_	_
9	来说	_	VA	VA	_	4	dep	_	_
10	,	_	PU	PU	_	57	punct	_	_
11	就	_	AD	AD	_	12	advmod	_	_
12	象	_	P	P	_	57	prep	_	_
13	对于	_	P	P	_	15	prep	_	_
14	我	_	PN	PN	_	13	pobj	_	_
15	来说	_	NN	NN	_	16	nsubj	_	_
16	一样	_	VA	VA	_	12	pccomp	_	_
17	,	_	PU	PU	_	57	punct	_	_
18	无论	_	AD	AD	_	20	advmod	_	_
19	什么	_	DT	DT	_	20	det	_	_
20	地方	_	NN	NN	_	57	prep	_	_
21	,	_	PU	PU	_	57	punct	_	_
22	凡是	_	AD	AD	_	24	advmod	_	_
23	某	_	DT	DT	_	24	det	_	_
24	处	_	NN	NN	_	57	nsubj	_	_
25	,	_	PU	PU	_	57	punct	_	_
26	如果	_	CS	CS	_	38	advmod	_	_
27	一	_	CD	CD	_	28	nummod	_	_
28	只	_	M	M	_	29	clf	_	_
29	羊	_	NN	NN	_	38	nsubj	_	_
30	（	_	PU	PU	_	34	punct	_	_
31	尽管	_	CS	CS	_	34	advmod	_	_
32	我们	_	PN	PN	_	33	nn	_	_
33	并不	_	NN	NN	_	34	dobj	_	_
34	认识	_	VV	VV	_	29	prnmod	_	_
35	它	_	PN	PN	_	34	dobj	_	_
36	）	_	PU	PU	_	34	punct	_	_
37	,	_	PU	PU	_	38	punct	_	_
38	吃	_	VV	VV	_	57	pccomp	_	_
39	了	_	AS	AS	_	38	asp	_	_
40	一	_	CD	CD	_	41	nummod	_	_
41	朵	_	M	M	_	42	clf	_	_
42	玫瑰花	_	NN	NN	_	38	dobj	_	_
43	,	_	PU	PU	_	38	punct	_	_
44	或是	_	NR	NR	_	45	top	_	_
45	没有	_	VE	VE	_	38	conj	_	_
46	吃掉	_	NR	NR	_	49	nn	_	_
47	一	_	CD	CD	_	48	nummod	_	_
48	朵	_	M	M	_	49	clf	_	_
49	玫瑰花	_	NN	NN	_	45	dobj	_	_
50	,	_	PU	PU	_	57	punct	_	_
51	那么	_	AD	AD	_	57	advmod	_	_
52	宇宙	_	NN	NN	_	54	assmod	_	_
53	的	_	DEG	DEG	_	52	assm	_	_
54	面貌	_	NN	NN	_	57	nsubj	_	_
55	就	_	AD	AD	_	57	advmod	_	_
56	全然	_	AD	AD	_	57	advmod	_	_
57	不同	_	VA	VA	_	0	root	_	_
58	。	_	PU	PU	_	57	punct	_	_

Oracle:
(x0 / 来说-01, arg1, x26 / 人)
(x17 / 地方, mod, x18 / 什么)
(x18 / 什么, mod, x19 / 无论-01)
(x22 / 不同-01, arg0, x23 / 面貌)
(x22 / 不同-01, manner, x25 / 全然)
(x23 / 面貌, poss, x24 / 宇宙)
(x26 / 人, mod, x30 / 这些)
(x26 / 人, mod, x31 / 你们)
(x27 / 喜欢-01, arg0, x26 / 人)
(x27 / 喜欢-01, arg1, x28 / 王子)
(x28 / 王子, mod, x29 / 小-01)
(x38 / 来说-01, arg1, x39 / 我)
(x4 / 吃-01, arg0, x5 / 羊)
(x4 / 吃-01, arg1, x10 / 玫瑰花)
(x7 / 认识-01, arg0, x9 / 我们)
(x7 / 认识-01, arg1, x5 / 羊)

Input(Some(Graph((来说-01 :manner (像-01 :arg1 (来说-01 :arg1 我)) :arg1 (人 :mod 你们 :mod 这些 :arg0-of (喜欢-01 :arg1 (王子 :mod 小-01))) :arg0 (condition :arg1 (or :op (吃-01 :arg1 玫瑰花 :arg0 (羊 :arg1-of (认识-01 :polarity - :arg0 我们) :quant 1)) :op (吃掉-01 :polarity - :arg1 x10 :arg0 x5) :location (地方 :mod (什么 :mod 无论-01)) :location (某处 :mod 凡是)) :arg2 (不同-01 :manner 全然 :arg0 (面貌 :poss 宇宙)))),ArrayBuffer(Span(8,9,List(0),来说,来说-01,false), Span(14,15,List(1),来说,来说-01,false), Span(13,14,List(2),我,我,false), Span(7,8,List(3),人,人,false), Span(1,2,List(4),你们,你们,false), Span(2,3,List(5),这些,这些,false), Span(3,4,List(6),喜欢,喜欢-01,false), Span(5,6,List(7),王子,王子,false), Span(4,5,List(8),小,小-01,false), Span(37,38,List(9),吃,吃-01,false), Span(41,42,List(10),玫瑰花,玫瑰花,false), Span(28,29,List(11),羊,羊,false), Span(33,34,List(12),认识,认识-01,false), Span(31,32,List(13),我们,我们,false), Span(45,46,List(14),吃掉,吃掉-01,false), Span(19,20,List(15),地方,地方,false), Span(18,19,List(16),什么,什么,false), Span(17,18,List(17),无论,无论-01,false), Span(21,22,List(18),凡是,凡是,false), Span(56,57,List(19),不同,不同-01,false), Span(55,56,List(20),全然,全然,false), Span(53,54,List(21),面貌,面貌,false), Span(51,52,List(22),宇宙,宇宙,false)),Map(2 -> 我, 5 -> 这些, 12 -> 认识-01, 15 -> 地方, 8 -> 小-01, 21 -> 面貌, 18 -> 凡是, 7 -> 王子, 17 -> 无论-01, 1 -> 来说-01, 4 -> 你们, 11 -> 羊, 14 -> 吃掉-01, 20 -> 全然, 6 -> 喜欢-01, 9 -> 吃-01, 0 -> 来说-01, 22 -> 宇宙, 16 -> 什么, 19 -> 不同-01, 10 -> 玫瑰花, 3 -> 人, 13 -> 我们),Map(x28 -> 王子, x22 -> 不同-01, x25 -> 全然, x10 -> 玫瑰花, x19 -> 无论-01, x31 -> 你们, x5 -> 羊, x39 -> 我, x30 -> 这些, x27 -> 喜欢-01, x21 -> 凡是, x7 -> 认识-01, x24 -> 宇宙, x18 -> 什么, x4 -> 吃-01, x23 -> 面貌, x38 -> 来说-01, x26 -> 人, x11 -> 吃掉-01, x29 -> 小-01, x9 -> 我们, x0 -> 来说-01, x17 -> 地方))),[Ljava.lang.String;@78288f83,Annotation([Ljava.lang.String;@29c1249a,[Ljava.lang.String;@5beb6be2,[Ljava.lang.String;@2d6a0766),Annotation([Ljava.lang.String;@1182d1df,[Ljava.lang.String;@31c7c281,[Ledu.cmu.lti.nlp.amr.Dependency;@31f31b20),Annotation([Ljava.lang.String;@4c5f7b4f,[Ljava.lang.String;@4b544732,[Ljava.lang.String;@44084713),Annotation([Ljava.lang.String;@6d8b7ea9,[Ljava.lang.String;@5a39e554,[Ledu.cmu.lti.nlp.amr.Entity;@333d44f6))
AMR:
(x0 / 来说-01, mode, x26 / 人)
(x11 / 吃掉-01, source, x10 / 玫瑰花)
(x17 / 地方, mod, x18 / 什么)
(x18 / 什么, mod, x19 / 无论-01)
(x21 / 凡是, quant, x17 / 地方)
(x22 / 不同-01, manner, x11 / 吃掉-01)
(x22 / 不同-01, manner, x23 / 面貌)
(x22 / 不同-01, manner, x25 / 全然)
(x23 / 面貌, poss, x24 / 宇宙)
(x26 / 人, mod, x30 / 这些)
(x27 / 喜欢-01, manner, x31 / 你们)
(x27 / 喜欢-01, mod, x30 / 这些)
(x27 / 喜欢-01, prep-for, x29 / 小-01)
(x28 / 王子, mod, x29 / 小-01)
(x38 / 来说-01, location, x26 / 人)
(x38 / 来说-01, mode, x39 / 我)
(x38 / 来说-01, snt5, x19 / 无论-01)
(x4 / 吃-01, manner, x7 / 认识-01)
(x4 / 吃-01, part, x10 / 玫瑰花)
(x5 / 羊, location, x21 / 凡是)
(x7 / 认识-01, source, x9 / 我们)
(x9 / 我们, source, x5 / 羊)

WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.2.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0
WARNING: makeIds can't find span Id: 0.0.0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.2.0
WARNING: makeIds can't find span Id: 0.0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.0.3.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
Decoded in 205,909 microseconds
Sentence: 望 着 天空 。

Oracle Span 1:  天空 => 天空
Oracle Span 2:  望 => 望-01
Spans:
Span 2-3:  天空 => 天空
Span 0-1:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  天空 => 天空
Oracle Span 0-1:  望 => 望-01

Dependencies:
1	望	_	VV	VV	_	0	root	_	_
2	着	_	AS	AS	_	1	asp	_	_
3	天空	_	NN	NN	_	1	dobj	_	_
4	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 望-01, arg1, x4 / 天空)

Input(Some(Graph((望-01 :arg1 天空),ArrayBuffer(Span(0,1,List(0),望,望-01,false), Span(2,3,List(1),天空,天空,false)),Map(1 -> 天空, 0 -> 望-01),Map(x4 -> 天空, x0 -> 望-01))),[Ljava.lang.String;@350bbd5d,Annotation([Ljava.lang.String;@3c3e363,[Ljava.lang.String;@16c5b50a,[Ljava.lang.String;@4f8659d0),Annotation([Ljava.lang.String;@278fe428,[Ljava.lang.String;@3b4bd341,[Ledu.cmu.lti.nlp.amr.Dependency;@1d4cc7),Annotation([Ljava.lang.String;@7d28cdcd,[Ljava.lang.String;@255ed8e4,[Ljava.lang.String;@406ad6d5),Annotation([Ljava.lang.String;@2a7bc16b,[Ljava.lang.String;@1186374c,[Ledu.cmu.lti.nlp.amr.Entity;@42cc5460))
AMR:
(x0 / 望-01, mod, x4 / 天空)

WARNING: makeIds can't find span Id: 0.0
Decoded in 2,588 microseconds
Sentence: 你们 想 一 想 ： 是 还是 不 是 ？

Oracle Span 1:  你们 => 你们
Oracle Span 2:  想 => 想-01
Oracle Span 3:  是 => 是-03
Oracle Span 4:  是 => 是-03
Spans:
Span 0-1:  你们 => 你们
Span 1-2:  想 => 想-01
Span 5-6:  是 => 是-03
Span 8-9:  是 => 是-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  想 => 想-01
Oracle Span 5-6:  是 => 是-03
Oracle Span 8-9:  是 => 是-03

Dependencies:
1	你们	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	一	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	2	ccomp	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	还是	_	CC	CC	_	2	cc	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	2	dep	_	_
10	？	_	PU	PU	_	2	punct	_	_
11	你们	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 你们)

Input(Some(Graph((想-01 :arg1 (or :op 是-03 :mode interrogative :op (是-03 :polarity -)) :arg0 你们),ArrayBuffer(Span(1,2,List(0),想,想-01,false), Span(5,6,List(1),是,是-03,false), Span(8,9,List(2),是,是-03,false), Span(0,1,List(3),你们,你们,false)),Map(2 -> 是-03, 1 -> 是-03, 0 -> 想-01, 3 -> 你们),Map(x2 -> 你们, x7 -> 是-03, x4 -> 是-03, x0 -> 想-01))),[Ljava.lang.String;@5486ee92,Annotation([Ljava.lang.String;@20820df0,[Ljava.lang.String;@9e62fb,[Ljava.lang.String;@205159dc),Annotation([Ljava.lang.String;@43c0c13a,[Ljava.lang.String;@731db93f,[Ledu.cmu.lti.nlp.amr.Dependency;@67941d),Annotation([Ljava.lang.String;@2ad2b274,[Ljava.lang.String;@6fde6f05,[Ljava.lang.String;@7114e780),Annotation([Ljava.lang.String;@4def42c3,[Ljava.lang.String;@72110818,[Ledu.cmu.lti.nlp.amr.Entity;@6eabe718))
AMR:
(x0 / 想-01, prep-following, x2 / 你们)
(x0 / 想-01, prep-on, x4 / 是-03)
(x4 / 是-03, mode, x7 / 是-03)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.0
Decoded in 7,729 microseconds
Sentence: 羊 究竟 是 吃 了 还是 没有 吃掉 花 ？

Oracle Span 1:  吃 => 吃-01
Oracle Span 2:  吃掉 => 吃掉-01
Oracle Span 3:  究竟 => 究竟
Oracle Span 4:  羊 => 羊
Oracle Span 5:  花 => 花
Spans:
Span 3-4:  吃 => 吃-01
Span 7-8:  吃掉 => 吃掉-01
Span 1-2:  究竟 => 究竟
Span 0-1:  羊 => 羊
Span 8-9:  花 => 花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  吃 => 吃-01
Oracle Span 7-8:  吃掉 => 吃掉-01
Oracle Span 1-2:  究竟 => 究竟
Oracle Span 0-1:  羊 => 羊
Oracle Span 8-9:  花 => 花

Dependencies:
1	羊	_	NN	NN	_	4	nsubj	_	_
2	究竟	_	AD	AD	_	4	advmod	_	_
3	是	_	VC	VC	_	4	cop	_	_
4	吃	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	还是	_	CC	CC	_	4	cc	_	_
7	没有	_	VE	VE	_	4	dep	_	_
8	吃掉	_	NN	NN	_	9	nn	_	_
9	花	_	NN	NN	_	7	dobj	_	_
10	？	_	PU	PU	_	4	punct	_	_

Oracle:
(x3 / 吃掉-01, arg0, x5 / 羊)
(x3 / 吃掉-01, arg1, x6 / 花)

Input(Some(Graph((or :op (吃-01 :arg1 x6 :arg0 x5) :op (吃掉-01 :polarity - :arg1 花 :arg0 羊) :mode interrogative :manner 究竟),ArrayBuffer(Span(3,4,List(0),吃,吃-01,false), Span(7,8,List(1),吃掉,吃掉-01,false), Span(8,9,List(2),花,花,false), Span(0,1,List(3),羊,羊,false), Span(1,2,List(4),究竟,究竟,false)),Map(2 -> 花, 1 -> 吃掉-01, 4 -> 究竟, 0 -> 吃-01, 3 -> 羊),Map(x2 -> 吃-01, x5 -> 羊, x12 -> 究竟, x3 -> 吃掉-01, x6 -> 花))),[Ljava.lang.String;@38d525aa,Annotation([Ljava.lang.String;@f9b8129,[Ljava.lang.String;@7530090a,[Ljava.lang.String;@4492b393),Annotation([Ljava.lang.String;@55fb36de,[Ljava.lang.String;@63a7781,[Ledu.cmu.lti.nlp.amr.Dependency;@73b74615),Annotation([Ljava.lang.String;@22686ddb,[Ljava.lang.String;@2e29f28e,[Ljava.lang.String;@7bfa1eb5),Annotation([Ljava.lang.String;@32b46831,[Ljava.lang.String;@5353dd09,[Ledu.cmu.lti.nlp.amr.Entity;@320ff86f))
AMR:
(x12 / 究竟, prep-for, x5 / 羊)
(x2 / 吃-01, degree, x12 / 究竟)
(x2 / 吃-01, extent, x3 / 吃掉-01)
(x3 / 吃掉-01, prep-in, x6 / 花)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.3
Decoded in 8,575 microseconds
Sentence: 那么 你们 就 会 看到 一切 都 变 了 样 …

Oracle Span 1:  一切 => 一切
Oracle Span 2:  会 => 会-02
Oracle Span 3:  你们 => 你们
Oracle Span 4:  看到 => 看到-01
Spans:
Span 5-6:  一切 => 一切
Span 3-4:  会 => 会-02
Span 1-2:  你们 => 你们
Span 4-5:  看到 => 看到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一切 => 一切
Oracle Span 3-4:  会 => 会-02
Oracle Span 1-2:  你们 => 你们
Oracle Span 4-5:  看到 => 看到-01

Dependencies:
1	那么	_	AD	AD	_	8	advmod	_	_
2	你们	_	PN	PN	_	8	nsubj	_	_
3	就	_	P	P	_	8	prep	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	看到	_	VV	VV	_	3	pccomp	_	_
6	一切	_	CD	CD	_	5	range	_	_
7	都	_	AD	AD	_	8	advmod	_	_
8	变	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	样	_	PU	PU	_	8	punct	_	_
11	…	_	PU	PU	_	8	punct	_	_

Oracle:
(x18 / 会-02, arg0, x19 / 看到-01)
(x19 / 看到-01, arg0, x20 / 你们)

Input(Some(Graph((causation :arg1 (会-02 :arg0 (看到-01 :arg1 (变样-01 :arg0 一切) :arg0 你们))),ArrayBuffer(Span(3,4,List(0),会,会-02,false), Span(4,5,List(1),看到,看到-01,false), Span(5,6,List(2),一切,一切,false), Span(1,2,List(3),你们,你们,false)),Map(2 -> 一切, 1 -> 看到-01, 0 -> 会-02, 3 -> 你们),Map(x19 -> 看到-01, x18 -> 会-02, x23 -> 一切, x20 -> 你们))),[Ljava.lang.String;@192b472d,Annotation([Ljava.lang.String;@84f51d9,[Ljava.lang.String;@45b96e4c,[Ljava.lang.String;@8383a14),Annotation([Ljava.lang.String;@4b691611,[Ljava.lang.String;@395a573c,[Ledu.cmu.lti.nlp.amr.Dependency;@379f9555),Annotation([Ljava.lang.String;@7e3ee128,[Ljava.lang.String;@7d64a960,[Ljava.lang.String;@166ce247),Annotation([Ljava.lang.String;@5d92e8e2,[Ljava.lang.String;@542c65d9,[Ledu.cmu.lti.nlp.amr.Entity;@cdbe995))
AMR:
(x18 / 会-02, op, x19 / 看到-01)
(x18 / 会-02, prep-on-behalf, x20 / 你们)
(x19 / 看到-01, part, x23 / 一切)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0.0
Decoded in 6,488 microseconds
Sentence: 任何 一 个 大人 将 永远 不 会 明白 这 个 问题 竟 如此 重要 ！

Oracle Span 1:  任何 => 任何
Oracle Span 2:  会 => 会-02
Oracle Span 3:  大人 => 大人
Oracle Span 4:  如此 => 如此
Oracle Span 5:  将 => 将
Oracle Span 6:  明白 => 明白-01
Oracle Span 7:  永远 => 永远
Oracle Span 8:  竟 => 竟
Oracle Span 9:  这 => 这
Oracle Span 10:  重要 => 重要-01
Oracle Span 11:  问题 => 问题
Spans:
Span 0-1:  任何 => 任何
Span 7-8:  会 => 会-02
Span 3-4:  大人 => 大人
Span 13-14:  如此 => 如此
Span 4-5:  将 => 将
Span 8-9:  明白 => 明白-01
Span 5-6:  永远 => 永远
Span 12-13:  竟 => 竟
Span 9-10:  这 => 这
Span 14-15:  重要 => 重要-01
Span 11-12:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  任何 => 任何
Oracle Span 7-8:  会 => 会-02
Oracle Span 3-4:  大人 => 大人
Oracle Span 13-14:  如此 => 如此
Oracle Span 4-5:  将 => 将
Oracle Span 8-9:  明白 => 明白-01
Oracle Span 5-6:  永远 => 永远
Oracle Span 12-13:  竟 => 竟
Oracle Span 9-10:  这 => 这
Oracle Span 14-15:  重要 => 重要-01
Oracle Span 11-12:  问题 => 问题

Dependencies:
1	任何	_	DT	DT	_	4	det	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	个	_	M	M	_	1	dep	_	_
4	大人	_	NN	NN	_	9	nsubj	_	_
5	将	_	AD	AD	_	9	advmod	_	_
6	永远	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	mmod	_	_
9	明白	_	VV	VV	_	0	root	_	_
10	这	_	DT	DT	_	12	det	_	_
11	个	_	M	M	_	10	clf	_	_
12	问题	_	NN	NN	_	9	dobj	_	_
13	竟	_	AD	AD	_	15	advmod	_	_
14	如此	_	AD	AD	_	15	advmod	_	_
15	重要	_	VA	VA	_	9	dep	_	_
16	！	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 会-02, arg0, x14 / 明白-01)
(x0 / 会-02, time, x25 / 永远)
(x14 / 明白-01, arg0, x15 / 大人)
(x14 / 明白-01, arg1, x26 / 重要-01)
(x14 / 明白-01, time, x23 / 将)
(x15 / 大人, mod, x17 / 任何)
(x26 / 重要-01, arg0, x27 / 问题)
(x26 / 重要-01, degree, x29 / 如此)
(x26 / 重要-01, manner, x30 / 竟)
(x27 / 问题, mod, x28 / 这)

Input(Some(Graph((会-02 :mode expressive :time 永远 :polarity - :arg0 (明白-01 :arg1 (重要-01 :manner 竟 :degree 如此 :arg0 (问题 :mod 这)) :time 将 :arg0 (大人 :mod 任何 :quant 1))),ArrayBuffer(Span(7,8,List(0),会,会-02,false), Span(5,6,List(1),永远,永远,false), Span(8,9,List(2),明白,明白-01,false), Span(14,15,List(3),重要,重要-01,false), Span(12,13,List(4),竟,竟,false), Span(13,14,List(5),如此,如此,false), Span(11,12,List(6),问题,问题,false), Span(9,10,List(7),这,这,false), Span(4,5,List(8),将,将,false), Span(3,4,List(9),大人,大人,false), Span(0,1,List(10),任何,任何,false)),Map(2 -> 明白-01, 5 -> 如此, 8 -> 将, 7 -> 这, 1 -> 永远, 4 -> 竟, 6 -> 问题, 9 -> 大人, 0 -> 会-02, 10 -> 任何, 3 -> 重要-01),Map(x28 -> 这, x25 -> 永远, x30 -> 竟, x27 -> 问题, x15 -> 大人, x23 -> 将, x26 -> 重要-01, x29 -> 如此, x14 -> 明白-01, x17 -> 任何, x0 -> 会-02))),[Ljava.lang.String;@7dd45c93,Annotation([Ljava.lang.String;@374b6e33,[Ljava.lang.String;@7ed7ae,[Ljava.lang.String;@53ba1175),Annotation([Ljava.lang.String;@cd5ff55,[Ljava.lang.String;@6003220a,[Ledu.cmu.lti.nlp.amr.Dependency;@16b64a03),Annotation([Ljava.lang.String;@1584c019,[Ljava.lang.String;@3688baab,[Ljava.lang.String;@4fe2dd02),Annotation([Ljava.lang.String;@6ba060af,[Ljava.lang.String;@5817f1ca,[Ledu.cmu.lti.nlp.amr.Entity;@2b395581))
AMR:
(x0 / 会-02, manner, x14 / 明白-01)
(x0 / 会-02, time, x25 / 永远)
(x14 / 明白-01, manner, x28 / 这)
(x14 / 明白-01, manner, x30 / 竟)
(x14 / 明白-01, time, x23 / 将)
(x15 / 大人, mod, x17 / 任何)
(x23 / 将, time, x15 / 大人)
(x26 / 重要-01, degree, x29 / 如此)
(x26 / 重要-01, manner, x30 / 竟)
(x27 / 问题, manner, x30 / 竟)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.0
WARNING: makeIds can't find span Id: 0.0.2.0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
Decoded in 30,581 microseconds
Sentence: 对 我 来说 ， 这 是 世界 上 最 美 也 是 最 凄凉 的 地方 。

Oracle Span 1:  世界 => 世界
Oracle Span 2:  凄凉 => 凄凉-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  我 => 我
Oracle Span 5:  最 => 最
Oracle Span 6:  最 => 最
Oracle Span 7:  来说 => 来说-01
Oracle Span 8:  美 => 美-01
Oracle Span 9:  这 => 这
Spans:
Span 6-7:  世界 => 世界
Span 13-14:  凄凉 => 凄凉-01
Span 15-16:  地方 => 地方
Span 1-2:  我 => 我
Span 8-9:  最 => 最
Span 12-13:  最 => 最
Span 2-3:  来说 => 来说-01
Span 9-10:  美 => 美-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  世界 => 世界
Oracle Span 13-14:  凄凉 => 凄凉-01
Oracle Span 15-16:  地方 => 地方
Oracle Span 1-2:  我 => 我
Oracle Span 8-9:  最 => 最
Oracle Span 12-13:  最 => 最
Oracle Span 2-3:  来说 => 来说-01
Oracle Span 9-10:  美 => 美-01
Oracle Span 4-5:  这 => 这

Dependencies:
1	对	_	P	P	_	6	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	这	_	PN	PN	_	6	top	_	_
6	是	_	VC	VC	_	0	root	_	_
7	世界	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	9	dep	_	_
9	最	_	NN	NN	_	6	attr	_	_
10	美	_	NR	NR	_	12	nsubj	_	_
11	也	_	AD	AD	_	12	advmod	_	_
12	是	_	VC	VC	_	6	conj	_	_
13	最	_	AD	AD	_	14	advmod	_	_
14	凄凉	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	地方	_	NN	NN	_	12	attr	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x26 / 来说-01, arg1, x28 / 我)
(x26 / 来说-01, arg2, x29 / 地方)
(x29 / 地方, domain, x35 / 这)
(x29 / 地方, location, x34 / 世界)
(x29 / 地方, mod, x30 / 美-01)
(x29 / 地方, mod, x32 / 凄凉-01)
(x30 / 美-01, degree, x31 / 最)
(x32 / 凄凉-01, degree, x33 / 最)

Input(Some(Graph((来说-01 :arg2 (地方 :domain 这 :location 世界 :mod (凄凉-01 :degree 最) :mod (美-01 :degree 最)) :arg1 我),ArrayBuffer(Span(2,3,List(0),来说,来说-01,false), Span(15,16,List(1),地方,地方,false), Span(4,5,List(2),这,这,false), Span(6,7,List(3),世界,世界,false), Span(13,14,List(4),凄凉,凄凉-01,false), Span(8,9,List(5),最,最,false), Span(9,10,List(6),美,美-01,false), Span(12,13,List(7),最,最,false), Span(1,2,List(8),我,我,false)),Map(2 -> 这, 5 -> 最, 8 -> 我, 7 -> 最, 1 -> 地方, 4 -> 凄凉-01, 6 -> 美-01, 0 -> 来说-01, 3 -> 世界),Map(x28 -> 我, x34 -> 世界, x31 -> 最, x30 -> 美-01, x33 -> 最, x32 -> 凄凉-01, x26 -> 来说-01, x35 -> 这, x29 -> 地方))),[Ljava.lang.String;@726a8729,Annotation([Ljava.lang.String;@1a2724d3,[Ljava.lang.String;@7dd91ffc,[Ljava.lang.String;@1c2dd89b),Annotation([Ljava.lang.String;@3ad847f8,[Ljava.lang.String;@19faedcc,[Ledu.cmu.lti.nlp.amr.Dependency;@2c6927f0),Annotation([Ljava.lang.String;@5ef2cbe6,[Ljava.lang.String;@266da047,[Ljava.lang.String;@68b7bdcb),Annotation([Ljava.lang.String;@d84418a,[Ljava.lang.String;@45e11627,[Ledu.cmu.lti.nlp.amr.Entity;@ec5f944))
AMR:
(x26 / 来说-01, decade, x28 / 我)
(x26 / 来说-01, time, x29 / 地方)
(x29 / 地方, domain, x35 / 这)
(x29 / 地方, location, x34 / 世界)
(x29 / 地方, mod, x30 / 美-01)
(x29 / 地方, mod, x32 / 凄凉-01)
(x30 / 美-01, degree, x31 / 最)
(x32 / 凄凉-01, degree, x33 / 最)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.1
WARNING: makeIds can't find span Id: 0.1.1.0
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 24,470 microseconds
Sentence: 它 与 前 一 页 画 的 是 同 一 个 地方 。 我 再一次 将 它 画 出来 ， 为 的 是 好 让 你们 看 清楚 。

Oracle Span 1:  你们 => 你们
Oracle Span 2:  再一次 => 再一次
Oracle Span 3:  前 => 前
Oracle Span 4:  同 => 同-01
Oracle Span 5:  地方 => 地方
Oracle Span 6:  它 => 它
Oracle Span 7:  我 => 我
Oracle Span 8:  清楚 => 清楚-01
Oracle Span 9:  画 => (thing :arg1-of 画-01)
Oracle Span 10:  画 => 画-01
Oracle Span 11:  看 => 看-02
Oracle Span 12:  让 => 让-02
Oracle Span 13:  页 => 页
Spans:
Span 25-26:  你们 => 你们
Span 14-15:  再一次 => 再一次
Span 2-3:  前 => 前
Span 8-9:  同 => 同-01
Span 11-12:  地方 => 地方
Span 0-1:  它 => 它
Span 13-14:  我 => 我
Span 27-28:  清楚 => 清楚-01
Span 5-6:  画 => (thing :arg1-of 画-01)
Span 17-18:  画 => 画-01
Span 26-27:  看 => 看-02
Span 24-25:  让 => 让-02
Span 4-5:  页 => 页

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 就 是 在 这里 ， 小 王子 出现 在 地球 上 ， 后来 ， 也 正 是 在 这里 消失 了 的 。

Oracle Span 1:  出现 => 出现-01
Oracle Span 2:  后来 => 后来-01
Oracle Span 3:  地球 => 地球
Oracle Span 4:  小 => 小-01
Oracle Span 5:  消失 => 消失-01
Oracle Span 6:  王子 => 王子
Oracle Span 7:  这里 => 这里
Spans:
Span 7-8:  出现 => 出现-01
Span 12-13:  后来 => 后来-01
Span 9-10:  地球 => 地球
Span 5-6:  小 => 小-01
Span 19-20:  消失 => 消失-01
Span 6-7:  王子 => 王子
Span 3-4:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出现 => 出现-01
Oracle Span 12-13:  后来 => 后来-01
Oracle Span 9-10:  地球 => 地球
Oracle Span 5-6:  小 => 小-01
Oracle Span 19-20:  消失 => 消失-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 3-4:  这里 => 这里

Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	在	_	P	P	_	2	prep	_	_
4	这里	_	PN	PN	_	3	pobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	出现	_	VV	VV	_	2	dep	_	_
9	在	_	P	P	_	8	prep	_	_
10	地球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	9	plmod	_	_
12	,	_	PU	PU	_	2	punct	_	_
13	后来	_	AD	AD	_	17	advmod	_	_
14	,	_	PU	PU	_	17	punct	_	_
15	也	_	AD	AD	_	17	advmod	_	_
16	正	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	2	conj	_	_
18	在	_	P	P	_	20	prep	_	_
19	这里	_	PN	PN	_	18	pobj	_	_
20	消失	_	VV	VV	_	17	attr	_	_
21	了	_	AS	AS	_	20	asp	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 消失-01, time, x18 / 后来-01)
(x16 / 王子, mod, x17 / 小-01)
(x6 / 出现-01, arg0, x16 / 王子)
(x6 / 出现-01, location, x9 / 这里)
(x9 / 这里, arg0, x21 / 地球)

Input(Some(Graph((and :op (出现-01 :arg0 (王子 :mod 小-01) :location (这里 :arg0 地球 :manner 就是)) :op (消失-01 :time 后来-01 :arg0 (王子 :mod 小-01) :location x9)),ArrayBuffer(Span(7,8,List(0),出现,出现-01,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小-01,false), Span(3,4,List(3),这里,这里,false), Span(9,10,List(4),地球,地球,false), Span(19,20,List(5),消失,消失-01,false), Span(12,13,List(6),后来,后来-01,false)),Map(2 -> 小-01, 5 -> 消失-01, 1 -> 王子, 4 -> 地球, 6 -> 后来-01, 0 -> 出现-01, 3 -> 这里),Map(x16 -> 王子, x21 -> 地球, x18 -> 后来-01, x11 -> 消失-01, x6 -> 出现-01, x9 -> 这里, x17 -> 小-01))),[Ljava.lang.String;@74eec640,Annotation([Ljava.lang.String;@3973b6d4,[Ljava.lang.String;@18dd7767,[Ljava.lang.String;@9205c0a),Annotation([Ljava.lang.String;@bfe47a8,[Ljava.lang.String;@2f1f9515,[Ledu.cmu.lti.nlp.amr.Dependency;@5c8ab9de),Annotation([Ljava.lang.String;@57416e49,[Ljava.lang.String;@2e7bb00e,[Ljava.lang.String;@7d1f3fe9),Annotation([Ljava.lang.String;@74d22ddd,[Ljava.lang.String;@283d3628,[Ledu.cmu.lti.nlp.amr.Entity;@5b3518e1))
AMR:
(x11 / 消失-01, time, x18 / 后来-01)
(x16 / 王子, mod, x17 / 小-01)
(x21 / 地球, mode, x18 / 后来-01)
(x6 / 出现-01, direction, x16 / 王子)
(x6 / 出现-01, location, x9 / 这里)
(x9 / 这里, part, x21 / 地球)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.2
Decoded in 25,425 microseconds
Sentence: 请 你们 仔细 看看 这个 地方 ， 以便 你们 有一天 去 非洲 沙漠 上 旅行 的 时候 ， 能够 准确 地 辨认 出 这个 地方 。

Oracle Span 1:  仔细 => 仔细-01
Oracle Span 2:  你们 => 你们
Oracle Span 3:  准确 => 准确-01
Oracle Span 4:  地方 => 地方
Oracle Span 5:  旅行 => 旅行-01
Oracle Span 6:  有一天 => 有一天
Oracle Span 7:  沙漠 => 沙漠
Oracle Span 8:  能够 => 能够-01
Oracle Span 9:  请 => 请-01
Oracle Span 10:  辨认 => 辨认-01
Oracle Span 11:  这个 => 这个
Oracle Span 12:  这个 => 这个
Oracle Span 13:  非洲 => 非洲
NER Entity: (country :name (name :op "非洲"))
Spans:
Span 2-3:  仔细 => 仔细-01
Span 1-2:  你们 => 你们
Span 19-20:  准确 => 准确-01
Span 5-6:  地方 => 地方
Span 14-15:  旅行 => 旅行-01
Span 9-10:  有一天 => 有一天
Span 12-13:  沙漠 => 沙漠
Span 18-19:  能够 => 能够-01
Span 0-1:  请 => 请-01
Span 21-22:  辨认 => 辨认-01
Span 4-5:  这个 => 这个
Span 23-24:  这个 => 这个
Span 11-12:  非洲 => 非洲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  仔细 => 仔细-01
Oracle Span 1-2:  你们 => 你们
Oracle Span 19-20:  准确 => 准确-01
Oracle Span 5-6:  地方 => 地方
Oracle Span 14-15:  旅行 => 旅行-01
Oracle Span 9-10:  有一天 => 有一天
Oracle Span 12-13:  沙漠 => 沙漠
Oracle Span 18-19:  能够 => 能够-01
Oracle Span 0-1:  请 => 请-01
Oracle Span 21-22:  辨认 => 辨认-01
Oracle Span 4-5:  这个 => 这个
Oracle Span 23-24:  这个 => 这个
Oracle Span 11-12:  非洲 => 非洲

Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你们	_	PN	PN	_	1	dobj	_	_
3	仔细	_	AD	AD	_	4	advmod	_	_
4	看看	_	VV	VV	_	1	dep	_	_
5	这个	_	NN	NN	_	6	nn	_	_
6	地方	_	NN	NN	_	4	dobj	_	_
7	,	_	PU	PU	_	1	punct	_	_
8	以便	_	AD	AD	_	11	advmod	_	_
9	你们	_	PN	PN	_	11	nsubj	_	_
10	有一天	_	CD	CD	_	11	dep	_	_
11	去	_	VV	VV	_	1	dep	_	_
12	非洲	_	NR	NR	_	13	nn	_	_
13	沙漠	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	15	loc	_	_
15	旅行	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	时候	_	NN	NN	_	11	dobj	_	_
18	,	_	PU	PU	_	11	punct	_	_
19	能够	_	VV	VV	_	22	mmod	_	_
20	准确	_	VA	VA	_	22	dvpmod	_	_
21	地	_	DEV	DEV	_	20	dvpm	_	_
22	辨认	_	VV	VV	_	11	dep	_	_
23	出	_	VV	VV	_	22	rcomp	_	_
24	这个	_	NN	NN	_	25	nn	_	_
25	地方	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x37 / 请-01, arg1, x42 / 你们)
(x46 / 地方, mod, x47 / 这个)
(x48 / 能够-01, arg0, x49 / 辨认-01)
(x48 / 能够-01, time, x54 / 旅行-01)
(x49 / 辨认-01, manner, x50 / 准确-01)
(x54 / 旅行-01, location, x56 / 沙漠)
(x54 / 旅行-01, time, x58 / 有一天)
(x56 / 沙漠, location, x57 / 非洲)

Input(Some(Graph((请-01 :arg2 (看-02 :manner 仔细-01 :arg0 x42 :arg1 (地方 :mod 这个) :purpose (能够-01 :time (旅行-01 :time 有一天 :location (沙漠 :location 非洲) :arg0 x42) :arg0 (辨认-01 :arg1 (x46 :mod 这个) :arg0 x42 :manner 准确-01))) :arg1 你们),ArrayBuffer(Span(0,1,List(0),请,请-01,false), Span(2,3,List(1),仔细,仔细-01,false), Span(5,6,List(2),地方,地方,false), Span(4,5,List(3),这个,这个,false), Span(18,19,List(4),能够,能够-01,false), Span(14,15,List(5),旅行,旅行-01,false), Span(9,10,List(6),有一天,有一天,false), Span(12,13,List(7),沙漠,沙漠,false), Span(11,12,List(8),非洲,非洲,false), Span(21,22,List(9),辨认,辨认-01,false), Span(23,24,List(10),这个,这个,false), Span(19,20,List(11),准确,准确-01,false), Span(1,2,List(12),你们,你们,false)),Map(2 -> 地方, 5 -> 旅行-01, 12 -> 你们, 8 -> 非洲, 7 -> 沙漠, 1 -> 仔细-01, 4 -> 能够-01, 11 -> 准确-01, 6 -> 有一天, 9 -> 辨认-01, 0 -> 请-01, 10 -> 这个, 3 -> 这个),Map(x46 -> 地方, x49 -> 辨认-01, x37 -> 请-01, x58 -> 有一天, x57 -> 非洲, x54 -> 旅行-01, x48 -> 能够-01, x42 -> 你们, x56 -> 沙漠, x50 -> 准确-01, x44 -> 仔细-01, x53 -> 这个, x47 -> 这个))),[Ljava.lang.String;@5fd18419,Annotation([Ljava.lang.String;@3a88f6fb,[Ljava.lang.String;@7b451bf4,[Ljava.lang.String;@844e66d),Annotation([Ljava.lang.String;@5b665a30,[Ljava.lang.String;@26a45089,[Ledu.cmu.lti.nlp.amr.Dependency;@75ed7512),Annotation([Ljava.lang.String;@5ab5924c,[Ljava.lang.String;@33ebe4f0,[Ljava.lang.String;@37cfda1c),Annotation([Ljava.lang.String;@29147c12,[Ljava.lang.String;@5f45bc8e,[Ledu.cmu.lti.nlp.amr.Entity;@33e50ff2))
AMR:
(x37 / 请-01, purpose, x42 / 你们)
(x44 / 仔细-01, ARG0, x42 / 你们)
(x44 / 仔细-01, time, x58 / 有一天)
(x46 / 地方, mod, x47 / 这个)
(x47 / 这个, timezone, x44 / 仔细-01)
(x48 / 能够-01, ARG3, x49 / 辨认-01)
(x48 / 能够-01, time, x54 / 旅行-01)
(x49 / 辨认-01, manner, x50 / 准确-01)
(x53 / 这个, prep-out, x50 / 准确-01)
(x54 / 旅行-01, location, x56 / 沙漠)
(x54 / 旅行-01, time, x58 / 有一天)
(x56 / 沙漠, location, x57 / 非洲)

WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.2
WARNING: makeIds can't find span Id: 0.1.2.0
WARNING: makeIds can't find span Id: 0.1.3
WARNING: makeIds can't find span Id: 0.1.3.1
WARNING: makeIds can't find span Id: 0.1.3.1.2
WARNING: makeIds can't find span Id: 0.1.3.1.1
WARNING: makeIds can't find span Id: 0.1.3.1.1.0
WARNING: makeIds can't find span Id: 0.1.3.0
WARNING: makeIds can't find span Id: 0.1.3.0.2.0
WARNING: makeIds can't find span Id: 0.1.3.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 57,612 microseconds
Sentence: 如果 ， 你们 有 机会 经过 这个 地方 ， 请 不 要 匆匆 而 过 ，

Oracle Span 1:  你们 => 你们
Oracle Span 2:  匆匆 => 匆匆-01
Oracle Span 3:  地方 => 地方
Oracle Span 4:  有 => 有-01
Oracle Span 5:  机会 => 机会
Oracle Span 6:  经过 => 经过-01
Oracle Span 7:  要 => 要-03
Oracle Span 8:  请 => 请-03
Oracle Span 9:  过 => 过-05
Spans:
Span 2-3:  你们 => 你们
Span 12-13:  匆匆 => 匆匆-01
Span 7-8:  地方 => 地方
Span 3-4:  有 => 有-01
Span 4-5:  机会 => 机会
Span 5-6:  经过 => 经过-01
Span 11-12:  要 => 要-03
Span 9-10:  请 => 请-03
Span 14-15:  过 => 过-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 12-13:  匆匆 => 匆匆-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 3-4:  有 => 有-01
Oracle Span 4-5:  机会 => 机会
Oracle Span 5-6:  经过 => 经过-01
Oracle Span 11-12:  要 => 要-03
Oracle Span 9-10:  请 => 请-03
Oracle Span 14-15:  过 => 过-05

Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	你们	_	PN	PN	_	4	nsubj	_	_
4	有	_	VE	VE	_	15	dep	_	_
5	机会	_	NN	NN	_	4	dobj	_	_
6	经过	_	VV	VV	_	4	conj	_	_
7	这个	_	VV	VV	_	4	dep	_	_
8	地方	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	请	_	VV	VV	_	4	conj	_	_
11	不	_	AD	AD	_	15	neg	_	_
12	要	_	VV	VV	_	15	mmod	_	_
13	匆匆	_	AD	AD	_	15	advmod	_	_
14	而	_	MSP	MSP	_	15	prtmod	_	_
15	过	_	VV	VV	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 过-05)
(x12 / 过-05, manner, x14 / 匆匆-01)
(x4 / 有-01, arg0, x6 / 你们)
(x4 / 有-01, arg1, x7 / 机会)
(x5 / 请-03, arg2, x11 / 要-03)
(x8 / 经过-01, arg1, x9 / 地方)
(x8 / 经过-01, time, x7 / 机会)

Input(Some(Graph((condition :arg1 (有-01 :arg1 (机会 :time-of (经过-01 :arg0 x6 :arg1 (地方 :mod 这))) :arg0 你们) :arg2 (请-03 :arg2 (要-03 :polarity - :arg0 (过-05 :manner 匆匆-01)))),ArrayBuffer(Span(3,4,List(0),有,有-01,false), Span(4,5,List(1),机会,机会,false), Span(5,6,List(2),经过,经过-01,false), Span(7,8,List(3),地方,地方,false), Span(2,3,List(4),你们,你们,false), Span(9,10,List(5),请,请-03,false), Span(11,12,List(6),要,要-03,false), Span(14,15,List(7),过,过-05,false), Span(12,13,List(8),匆匆,匆匆-01,false)),Map(2 -> 经过-01, 5 -> 请-03, 8 -> 匆匆-01, 7 -> 过-05, 1 -> 机会, 4 -> 你们, 6 -> 要-03, 0 -> 有-01, 3 -> 地方),Map(x5 -> 请-03, x8 -> 经过-01, x12 -> 过-05, x7 -> 机会, x4 -> 有-01, x11 -> 要-03, x6 -> 你们, x14 -> 匆匆-01, x9 -> 地方))),[Ljava.lang.String;@7ab33ca8,Annotation([Ljava.lang.String;@704d3b00,[Ljava.lang.String;@21e484b,[Ljava.lang.String;@191f4d65),Annotation([Ljava.lang.String;@7a2a7492,[Ljava.lang.String;@6326c5ec,[Ledu.cmu.lti.nlp.amr.Dependency;@138a85d3),Annotation([Ljava.lang.String;@709d86a2,[Ljava.lang.String;@59baf2c7,[Ljava.lang.String;@ce655b9),Annotation([Ljava.lang.String;@4b85edeb,[Ljava.lang.String;@5731caaf,[Ledu.cmu.lti.nlp.amr.Entity;@59933644))
AMR:
(x11 / 要-03, prep-through, x12 / 过-05)
(x12 / 过-05, manner, x14 / 匆匆-01)
(x4 / 有-01, ARG3, x6 / 你们)
(x4 / 有-01, subset, x7 / 机会)
(x5 / 请-03, ARG5, x8 / 经过-01)
(x5 / 请-03, direction, x11 / 要-03)
(x8 / 经过-01, time, x7 / 机会)
(x8 / 经过-01, time, x9 / 地方)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.1.0
WARNING: makeIds can't find span Id: 0.0.1.0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
Decoded in 31,231 microseconds
Sentence: 请 你们 就 在 那 颗 星星 底下 等 一 等 ！

Oracle Span 1:  你们 => 你们
Oracle Span 2:  底下 => 底下
Oracle Span 3:  星星 => 星星
Oracle Span 4:  等 => 等-01
Oracle Span 5:  请 => 请-01
Oracle Span 6:  那 => 那
Spans:
Span 1-2:  你们 => 你们
Span 7-8:  底下 => 底下
Span 6-7:  星星 => 星星
Span 8-9:  等 => 等-01
Span 0-1:  请 => 请-01
Span 4-5:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  底下 => 底下
Oracle Span 6-7:  星星 => 星星
Oracle Span 8-9:  等 => 等-01
Oracle Span 0-1:  请 => 请-01
Oracle Span 4-5:  那 => 那

Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你们	_	PN	PN	_	1	dobj	_	_
3	就	_	AD	AD	_	7	advmod	_	_
4	在	_	P	P	_	7	prep	_	_
5	那	_	DT	DT	_	4	pobj	_	_
6	颗	_	M	M	_	5	clf	_	_
7	星星	_	VV	VV	_	1	dep	_	_
8	底下	_	NN	NN	_	7	dobj	_	_
9	等	_	ETC	ETC	_	8	etc	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	等	_	M	M	_	7	range	_	_
12	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 请-01, arg1, x2 / 你们)
(x0 / 请-01, arg2, x6 / 等-01)
(x10 / 底下, arg0, x11 / 星星)
(x11 / 星星, mod, x12 / 那)
(x6 / 等-01, location, x10 / 底下)

Input(Some(Graph((请-01 :mode expressive :arg2 (等-01 :location (底下 :arg0 (星星 :mod 那))) :arg1 你们),ArrayBuffer(Span(0,1,List(0),请,请-01,false), Span(8,9,List(1),等,等-01,false), Span(7,8,List(2),底下,底下,false), Span(6,7,List(3),星星,星星,false), Span(4,5,List(4),那,那,false), Span(1,2,List(5),你们,你们,false)),Map(2 -> 底下, 5 -> 你们, 1 -> 等-01, 4 -> 那, 0 -> 请-01, 3 -> 星星),Map(x2 -> 你们, x10 -> 底下, x12 -> 那, x11 -> 星星, x6 -> 等-01, x0 -> 请-01))),[Ljava.lang.String;@67e6eb52,Annotation([Ljava.lang.String;@3e8b8f0,[Ljava.lang.String;@5ad57e90,[Ljava.lang.String;@1a345298),Annotation([Ljava.lang.String;@4ad896f7,[Ljava.lang.String;@c318864,[Ledu.cmu.lti.nlp.amr.Dependency;@7d61468c),Annotation([Ljava.lang.String;@45796b2a,[Ljava.lang.String;@4b98225c,[Ljava.lang.String;@4beae1e3),Annotation([Ljava.lang.String;@3c488b34,[Ljava.lang.String;@32e697ac,[Ledu.cmu.lti.nlp.amr.Entity;@3866c96e))
AMR:
(x0 / 请-01, mod, x12 / 那)
(x0 / 请-01, ord, x2 / 你们)
(x10 / 底下, location, x11 / 星星)
(x11 / 星星, mod, x12 / 那)
(x6 / 等-01, location, x10 / 底下)

WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
WARNING: makeIds can't find span Id: 0.0
Decoded in 12,540 microseconds
Sentence: 如果 这时 ， 有 个 小孩子 向 你 走来 ， 如果 他 笑 着 ， 他 有 金黄色 的 头发 ， 如果 当 你 问 他 问题 时 他 不 回答 ， 你 一定 会 猜得 出 他 是 谁 。

Oracle Span 1:  一定 => 一定
Oracle Span 2:  会 => 会-02
Oracle Span 3:  你 => 你
Oracle Span 4:  回答 => 回答-01
Oracle Span 5:  头发 => 头发
Oracle Span 6:  有 => 有-01
Oracle Span 7:  笑 => 笑-01
Oracle Span 8:  谁 => 谁
Oracle Span 9:  走来 => 走来-01
Oracle Span 10:  这时 => 这时
Oracle Span 11:  金黄色 => 金黄色
Oracle Span 12:  问 => 问-01
Oracle Span 13:  问题 => 问题
Spans:
Span 33-34:  一定 => 一定
Span 34-35:  会 => 会-02
Span 7-8:  你 => 你
Span 30-31:  回答 => 回答-01
Span 19-20:  头发 => 头发
Span 3-4:  有 => 有-01
Span 12-13:  笑 => 笑-01
Span 39-40:  谁 => 谁
Span 8-9:  走来 => 走来-01
Span 1-2:  这时 => 这时
Span 17-18:  金黄色 => 金黄色
Span 24-25:  问 => 问-01
Span 26-27:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 33-34:  一定 => 一定
Oracle Span 34-35:  会 => 会-02
Oracle Span 7-8:  你 => 你
Oracle Span 30-31:  回答 => 回答-01
Oracle Span 19-20:  头发 => 头发
Oracle Span 3-4:  有 => 有-01
Oracle Span 12-13:  笑 => 笑-01
Oracle Span 39-40:  谁 => 谁
Oracle Span 8-9:  走来 => 走来-01
Oracle Span 1-2:  这时 => 这时
Oracle Span 17-18:  金黄色 => 金黄色
Oracle Span 24-25:  问 => 问-01
Oracle Span 26-27:  问题 => 问题

Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	这时	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	有	_	VE	VE	_	39	pccomp	_	_
5	个	_	M	M	_	6	dep	_	_
6	小孩子	_	NN	NN	_	9	nsubj	_	_
7	向	_	P	P	_	9	prep	_	_
8	你	_	PN	PN	_	7	pobj	_	_
9	走来	_	VV	VV	_	4	dep	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	如果	_	CS	CS	_	13	advmod	_	_
12	他	_	PN	PN	_	13	nsubj	_	_
13	笑	_	VV	VV	_	17	pccomp	_	_
14	着	_	AS	AS	_	13	asp	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	他	_	PN	PN	_	17	top	_	_
17	有	_	VE	VE	_	4	dep	_	_
18	金黄色	_	JJ	JJ	_	20	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	头发	_	NN	NN	_	17	dobj	_	_
21	,	_	PU	PU	_	39	punct	_	_
22	如果	_	CS	CS	_	31	advmod	_	_
23	当	_	P	P	_	31	prep	_	_
24	你	_	PN	PN	_	25	nsubj	_	_
25	问	_	VV	VV	_	28	lccomp	_	_
26	他	_	PN	PN	_	27	nsubj	_	_
27	问题	_	NN	NN	_	25	ccomp	_	_
28	时	_	LC	LC	_	23	plmod	_	_
29	他	_	PN	PN	_	31	nsubj	_	_
30	不	_	AD	AD	_	31	neg	_	_
31	回答	_	VV	VV	_	39	pccomp	_	_
32	,	_	PU	PU	_	31	punct	_	_
33	你	_	PN	PN	_	36	nsubj	_	_
34	一定	_	AD	AD	_	36	advmod	_	_
35	会	_	VV	VV	_	36	mmod	_	_
36	猜得	_	VV	VV	_	31	conj	_	_
37	出	_	VV	VV	_	36	comod	_	_
38	他	_	PN	PN	_	39	top	_	_
39	是	_	VC	VC	_	0	root	_	_
40	谁	_	PN	PN	_	39	attr	_	_
41	。	_	PU	PU	_	39	punct	_	_

Oracle:
(x45 / 走来-01, direction, x58 / 你)
(x45 / 走来-01, time, x48 / 这时)
(x51 / 有-01, arg1, x53 / 头发)
(x53 / 头发, mod, x54 / 金黄色)
(x55 / 回答-01, time, x57 / 问-01)
(x57 / 问-01, arg1, x60 / 问题)
(x62 / 一定, arg0, x63 / 会-02)

Input(Some(Graph((condition :arg1 (and :op (走来-01 :direction 你 :time 这时 :arg0 (孩子 :mod 小)) :op (笑-01 :arg0 x46) :op (有-01 :arg1 (头发 :mod 金黄色) :arg0 x46) :op (回答-01 :time (问-01 :arg2 x46 :arg1 问题 :arg0 x58) :polarity -)) :arg2 (一定 :arg0 (会-02 :arg0 (猜出-01 :arg1 (谁 :domain x46))))),ArrayBuffer(Span(8,9,List(0),走来,走来-01,false), Span(7,8,List(1),你,你,false), Span(1,2,List(2),这时,这时,false), Span(12,13,List(3),笑,笑-01,false), Span(3,4,List(4),有,有-01,false), Span(19,20,List(5),头发,头发,false), Span(17,18,List(6),金黄色,金黄色,false), Span(30,31,List(7),回答,回答-01,false), Span(24,25,List(8),问,问-01,false), Span(26,27,List(9),问题,问题,false), Span(33,34,List(10),一定,一定,false), Span(34,35,List(11),会,会-02,false), Span(39,40,List(12),谁,谁,false)),Map(2 -> 这时, 5 -> 头发, 12 -> 谁, 8 -> 问-01, 7 -> 回答-01, 1 -> 你, 4 -> 有-01, 11 -> 会-02, 6 -> 金黄色, 9 -> 问题, 0 -> 走来-01, 10 -> 一定, 3 -> 笑-01),Map(x67 -> 谁, x55 -> 回答-01, x49 -> 笑-01, x58 -> 你, x63 -> 会-02, x57 -> 问-01, x51 -> 有-01, x45 -> 走来-01, x60 -> 问题, x54 -> 金黄色, x48 -> 这时, x62 -> 一定, x53 -> 头发))),[Ljava.lang.String;@241fc278,Annotation([Ljava.lang.String;@5c76fce4,[Ljava.lang.String;@5aab5b31,[Ljava.lang.String;@5408d4b3),Annotation([Ljava.lang.String;@eded048,[Ljava.lang.String;@65a48cab,[Ledu.cmu.lti.nlp.amr.Dependency;@655621fd),Annotation([Ljava.lang.String;@77e9dca8,[Ljava.lang.String;@fcd0e8d,[Ljava.lang.String;@4e4d0a0b),Annotation([Ljava.lang.String;@1a4083f6,[Ljava.lang.String;@23f5008a,[Ledu.cmu.lti.nlp.amr.Entity;@44abdb1f))
AMR:
(x45 / 走来-01, direction, x58 / 你)
(x45 / 走来-01, time, x48 / 这时)
(x51 / 有-01, ARG0, x48 / 这时)
(x51 / 有-01, time, x49 / 笑-01)
(x51 / 有-01, time, x53 / 头发)
(x53 / 头发, mod, x54 / 金黄色)
(x53 / 头发, mod, x55 / 回答-01)
(x55 / 回答-01, ARG5, x62 / 一定)
(x55 / 回答-01, time, x57 / 问-01)
(x57 / 问-01, degree, x60 / 问题)
(x62 / 一定, degree, x63 / 会-02)
(x67 / 谁, mod, x62 / 一定)

WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.0.0.2
WARNING: makeIds can't find span Id: 0.0.0.1
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.2
WARNING: makeIds can't find span Id: 0.0.2.1
WARNING: makeIds can't find span Id: 0.0.2.1.0
WARNING: makeIds can't find span Id: 0.0.3
WARNING: makeIds can't find span Id: 0.0.3.1
WARNING: makeIds can't find span Id: 0.0.3.1.1
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0.0
Decoded in 73,452 microseconds
Sentence: 那 就 请 你们 帮 个 忙 ， 不 要 让 我 这么 忧伤 ：

Oracle Span 1:  你们 => 你们
Oracle Span 2:  忧伤 => 忧伤-01
Oracle Span 3:  我 => 我
Oracle Span 4:  要 => 要-03
Oracle Span 5:  让 => 让-02
Oracle Span 6:  请 => 请-02
Oracle Span 7:  这么 => 这么
Spans:
Span 3-4:  你们 => 你们
Span 13-14:  忧伤 => 忧伤-01
Span 11-12:  我 => 我
Span 9-10:  要 => 要-03
Span 10-11:  让 => 让-02
Span 2-3:  请 => 请-02
Span 12-13:  这么 => 这么

Langrangian relaxation converged after 4 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你们 => 你们
Oracle Span 13-14:  忧伤 => 忧伤-01
Oracle Span 11-12:  我 => 我
Oracle Span 9-10:  要 => 要-03
Oracle Span 10-11:  让 => 让-02
Oracle Span 2-3:  请 => 请-02
Oracle Span 12-13:  这么 => 这么

Dependencies:
1	那	_	PN	PN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	请	_	VV	VV	_	0	root	_	_
4	你们	_	PN	PN	_	5	nsubj	_	_
5	帮	_	VV	VV	_	3	ccomp	_	_
6	个	_	M	M	_	5	dobj	_	_
7	忙	_	VA	VA	_	5	dep	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	要	_	VV	VV	_	11	mmod	_	_
11	让	_	VV	VV	_	5	conj	_	_
12	我	_	PN	PN	_	11	dobj	_	_
13	这么	_	AD	AD	_	14	advmod	_	_
14	忧伤	_	VA	VA	_	11	dep	_	_
15	：	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 要-03, arg0, x12 / 让-02)
(x12 / 让-02, arg1, x13 / 我)
(x12 / 让-02, arg2, x14 / 忧伤-01)
(x14 / 忧伤-01, mod, x15 / 这么)
(x2 / 请-02, arg1, x3 / 你们)

Input(Some(Graph((and :op (请-02 :arg2 帮忙-01 :arg1 你们) :op (要-03 :polarity - :arg0 (让-02 :arg2 (忧伤-01 :mod 这么) :arg1 我))),ArrayBuffer(Span(2,3,List(0),请,请-02,false), Span(3,4,List(1),你们,你们,false), Span(9,10,List(2),要,要-03,false), Span(10,11,List(3),让,让-02,false), Span(13,14,List(4),忧伤,忧伤-01,false), Span(12,13,List(5),这么,这么,false), Span(11,12,List(6),我,我,false)),Map(2 -> 要-03, 5 -> 这么, 1 -> 你们, 4 -> 忧伤-01, 6 -> 我, 0 -> 请-02, 3 -> 让-02),Map(x10 -> 要-03, x2 -> 请-02, x13 -> 我, x12 -> 让-02, x15 -> 这么, x3 -> 你们, x14 -> 忧伤-01))),[Ljava.lang.String;@62108cd3,Annotation([Ljava.lang.String;@7cd1ec54,[Ljava.lang.String;@77ab5214,[Ljava.lang.String;@6d420cdd),Annotation([Ljava.lang.String;@bd273b2,[Ljava.lang.String;@78128dd0,[Ledu.cmu.lti.nlp.amr.Dependency;@55044b34),Annotation([Ljava.lang.String;@28dd81ad,[Ljava.lang.String;@300a38e7,[Ljava.lang.String;@5c9a4f3b),Annotation([Ljava.lang.String;@2bb0e277,[Ljava.lang.String;@6f24ce45,[Ledu.cmu.lti.nlp.amr.Entity;@e881e46))
AMR:
(x10 / 要-03, ARG3, x12 / 让-02)
(x12 / 让-02, mode, x14 / 忧伤-01)
(x12 / 让-02, quant, x2 / 请-02)
(x12 / 让-02, snt11, x13 / 我)
(x14 / 忧伤-01, mod, x15 / 这么)
(x2 / 请-02, ARG3, x3 / 你们)

WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.1.0
WARNING: makeIds can't find span Id: 0.1.0.1
WARNING: makeIds can't find span Id: 0.1.0.1.0
WARNING: makeIds can't find span Id: 0.1.0.0
Decoded in 24,546 microseconds
Sentence: 赶快 写信 告诉 我 ， 他 又 回来 了 …

Oracle Span 1:  他 => 他
Oracle Span 2:  写信 => 写信-01
Oracle Span 3:  又 => 又
Oracle Span 4:  告诉 => 告诉-01
Oracle Span 5:  回来 => 回来-02
Oracle Span 6:  我 => 我
Oracle Span 7:  赶快 => 赶快
Spans:
Span 5-6:  他 => 他
Span 1-2:  写信 => 写信-01
Span 6-7:  又 => 又
Span 2-3:  告诉 => 告诉-01
Span 7-8:  回来 => 回来-02
Span 3-4:  我 => 我
Span 0-1:  赶快 => 赶快

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  写信 => 写信-01
Oracle Span 6-7:  又 => 又
Oracle Span 2-3:  告诉 => 告诉-01
Oracle Span 7-8:  回来 => 回来-02
Oracle Span 3-4:  我 => 我
Oracle Span 0-1:  赶快 => 赶快

Dependencies:
1	赶快	_	NN	NN	_	2	nn	_	_
2	写信	_	NN	NN	_	3	nsubj	_	_
3	告诉	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	8	nsubj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	回来	_	VV	VV	_	3	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	NN	NN	_	8	dobj	_	_

Oracle:
(x0 / 告诉-01, arg1, x2 / 回来-02)
(x0 / 告诉-01, arg2, x5 / 我)
(x0 / 告诉-01, manner, x6 / 写信-01)
(x2 / 回来-02, arg0, x3 / 他)
(x2 / 回来-02, manner, x9 / 又)
(x6 / 写信-01, manner, x7 / 赶快)

Input(Some(Graph((告诉-01 :manner (写信-01 :manner 赶快) :arg2 我 :arg1 (回来-02 :manner 又 :arg0 他)),ArrayBuffer(Span(2,3,List(0),告诉,告诉-01,false), Span(1,2,List(1),写信,写信-01,false), Span(0,1,List(2),赶快,赶快,false), Span(3,4,List(3),我,我,false), Span(7,8,List(4),回来,回来-02,false), Span(6,7,List(5),又,又,false), Span(5,6,List(6),他,他,false)),Map(2 -> 赶快, 5 -> 又, 1 -> 写信-01, 4 -> 回来-02, 6 -> 他, 0 -> 告诉-01, 3 -> 我),Map(x2 -> 回来-02, x5 -> 我, x7 -> 赶快, x3 -> 他, x6 -> 写信-01, x9 -> 又, x0 -> 告诉-01))),[Ljava.lang.String;@657b3b,Annotation([Ljava.lang.String;@2cea921a,[Ljava.lang.String;@65753724,[Ljava.lang.String;@2bc16fe2),Annotation([Ljava.lang.String;@d66502,[Ljava.lang.String;@78545d40,[Ledu.cmu.lti.nlp.amr.Dependency;@34549979),Annotation([Ljava.lang.String;@144a5e6e,[Ljava.lang.String;@2707c790,[Ljava.lang.String;@7de3206d),Annotation([Ljava.lang.String;@6dece1f9,[Ljava.lang.String;@2b936b04,[Ledu.cmu.lti.nlp.amr.Entity;@32b112a1))
AMR:
(x0 / 告诉-01, manner, x5 / 我)
(x0 / 告诉-01, manner, x6 / 写信-01)
(x2 / 回来-02, manner, x3 / 他)
(x2 / 回来-02, manner, x6 / 写信-01)
(x2 / 回来-02, manner, x9 / 又)
(x6 / 写信-01, manner, x7 / 赶快)

WARNING: makeIds can't find span Id: 0.2
WARNING: makeIds can't find span Id: 0.2.0
WARNING: makeIds can't find span Id: 0.1
WARNING: makeIds can't find span Id: 0.0
WARNING: makeIds can't find span Id: 0.0.1
WARNING: makeIds can't find span Id: 0.0.0
Decoded in 14,797 microseconds
