Stage1 features = List(bias, length, fromNERTagger, conceptGivenPhrase)
features = List(rootConcept, rootDependencyPathv1, bias, typeBias, self, fragHead, edgeCount, distance, logDistance, posPathv3, dependencyPathv4, conceptBigram)
connected = true
Reading weights
done
Sentence: VII 。

Spans:
Span 0-1:  VII => VII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  VII => VII

Dependencies:
1	VII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),VII,VII,false)),Map(0 -> VII),Map(v -> VII))),[Ljava.lang.String;@35047d03,Annotation([Ljava.lang.String;@49b0b76,[Ljava.lang.String;@769f71a9,[Ljava.lang.String;@4c9f8c13),Annotation([Ljava.lang.String;@5ae50ce6,[Ljava.lang.String;@6f96c77,[Ledu.cmu.lti.nlp.amr.Dependency;@be64738),Annotation([Ljava.lang.String;@3ba9ad43,[Ljava.lang.String;@49d904ec,[Ljava.lang.String;@48e4374),Annotation([Ljava.lang.String;@3d680b5a,[Ljava.lang.String;@4b5d6a01,[Ledu.cmu.lti.nlp.amr.Entity;@4a22f9e2))
AMR:


Decoded in 223,208 microseconds
Sentence: 第五 天 ， 还是 羊 的 事 ， 把 小 王子 的 生活 秘密 向 我 揭开 了 。

Spans:
Span 6-7:  事 => 事
Span 1-2:  天 => (temporal-quantity :unit 天)
Span 9-10:  小 => 小
Span 15-16:  我 => 我
Span 16-17:  揭开 => 揭开-02
Span 10-11:  王子 => 王子
Span 12-13:  生活 => 生活-01
Span 13-14:  秘密 => 秘密-01
Span 4-5:  羊 => 羊
Span 3-4:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  事 => 事
Oracle Span 1-2:  天 => 天
Oracle Span 9-10:  小 => 小-01
Oracle Span 15-16:  我 => 我
Oracle Span 16-17:  揭开 => 揭开-02
Oracle Span 10-11:  王子 => 王子
Oracle Span 12-13:  生活 => 生活-01
Oracle Span 13-14:  秘密 => 秘密-01
Oracle Span 4-5:  羊 => 羊
Oracle Span 3-4:  还是 => 还是

Incorrect span: 小 => 小
Incorrect span: 天 => (temporal-quantity :unit 天)
Missing span: 天 => 天
Missing span: 小 => 小-01
Dependencies:
1	第五	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	17	nsubj	_	_
3	,	_	PU	PU	_	17	punct	_	_
4	还是	_	AD	AD	_	17	advmod	_	_
5	羊	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	事	_	NN	NN	_	17	nsubj	_	_
8	,	_	PU	PU	_	17	punct	_	_
9	把	_	BA	BA	_	17	ba	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	生活	_	NN	NN	_	17	nsubj	_	_
14	秘密	_	AD	AD	_	17	advmod	_	_
15	向	_	P	P	_	17	prep	_	_
16	我	_	PN	PN	_	15	pobj	_	_
17	揭开	_	VV	VV	_	0	root	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x11 / 王子, mod, x12 / 小-01)
(x4 / 揭开-02, arg0, x6 / 事)
(x4 / 揭开-02, arg1, x9 / 秘密-01)
(x4 / 揭开-02, beneficiary, x19 / 我)
(x4 / 揭开-02, time, x16 / 天)
(x6 / 事, manner, x8 / 还是)
(x6 / 事, topic, x7 / 羊)
(x9 / 秘密-01, arg0, x11 / 王子)
(x9 / 秘密-01, topic, x10 / 生活-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),揭开,揭开-02,false), Span(15,16,List(1),我,我,false), Span(13,14,List(2),秘密,秘密-01,false), Span(12,13,List(3),生活,生活-01,false), Span(10,11,List(4),王子,王子,false), Span(9,10,List(5),小,小,false), Span(6,7,List(6),事,事,false), Span(4,5,List(7),羊,羊,false), Span(3,4,List(8),还是,还是,false), Span(1,2,List(10, 9),天,(temporal-quantity :unit 天),false)),Map(2 -> 秘密-01, 5 -> 小, 8 -> 还是, 7 -> 羊, 1 -> 我, 4 -> 王子, 6 -> 事, 9 -> temporal-quantity, 0 -> 揭开-02, 10 -> 天, 3 -> 生活-01),Map(揭 -> 揭开-02, t -> temporal-quantity, 生 -> 生活-01, 我 -> 我, 王 -> 王子, 羊 -> 羊, 小 -> 小, 天 -> 天, 事 -> 事, 还 -> 还是, 秘 -> 秘密-01))),[Ljava.lang.String;@1189dd52,Annotation([Ljava.lang.String;@36bc55de,[Ljava.lang.String;@564fabc8,[Ljava.lang.String;@16d04d3d),Annotation([Ljava.lang.String;@49ec71f8,[Ljava.lang.String;@1d2adfbe,[Ledu.cmu.lti.nlp.amr.Dependency;@36902638),Annotation([Ljava.lang.String;@223d2c72,[Ljava.lang.String;@8f4ea7c,[Ljava.lang.String;@436813f3),Annotation([Ljava.lang.String;@74fe5c40,[Ljava.lang.String;@3febb011,[Ledu.cmu.lti.nlp.amr.Entity;@10e31a9a))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(事 / 事, manner, 还 / 还是)
(事 / 事, topic, 羊 / 羊)
(揭 / 揭开-02, ARG3, 秘 / 秘密-01)
(揭 / 揭开-02, beneficiary, 我 / 我)
(揭 / 揭开-02, compared-to, 事 / 事)
(揭 / 揭开-02, time, 天 / 天)
(王 / 王子, mod, 小 / 小)
(生 / 生活-01, ARG0, 小 / 小)
(秘 / 秘密-01, topic, 生 / 生活-01)

Decoded in 392,991 microseconds
Sentence: 好象 默默 地 思索 了 很 长 时间 以后 ， 得出 了 什么 结果 一样 ， 他 突然 没头没脑 地 问 我 ： “ 羊 ， 要是 吃 小 灌木 ， 它 也 要 吃 花 罗 ？ ”

Spans:
Span 14-15:  一样 => 一样
Span 32-33:  也 => 也
Span 12-13:  什么 => 什么
Span 16-17:  他 => 他
Span 34-35:  吃 => (thing :arg1-of 吃-01)
Span 27-28:  吃 => (thing :arg1-of 吃-01)
Span 19-20:  地 => 地
Span 2-3:  地 => 地
Span 31-32:  它 => 它
Span 28-29:  小 => 小
Span 5-6:  很 => 很
Span 10-11:  得出 => 得出-01
Span 3-4:  思索 => 思索-01
Span 21-22:  我 => 我
Span 7-8:  时间 => 时间
Span 18-19:  没头没脑 => 没头没脑
Span 29-30:  灌木 => 灌木
Span 17-18:  突然 => 突然
Span 13-14:  结果 => 结果-01
Span 24-25:  羊 => 羊
Span 35-36:  花 => 花-01
Span 33-34:  要 => 要-02
Span 6-7:  长 => 长-04
Span 20-21:  问 => 问-01
Span 1-2:  默默 => 默默

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 一 只 羊

Spans:
Span 1-2:  只 => 只
Span 2-3:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  羊 => 羊

Extra span: 只 => 只
Dependencies:
1	一	_	CD	CD	_	2	nummod	_	_
2	只	_	M	M	_	3	clf	_	_
3	羊	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),羊,羊,false), Span(1,2,List(1),只,只,false)),Map(1 -> 只, 0 -> 羊),Map(羊 -> 羊, 只 -> 只))),[Ljava.lang.String;@4efbca5a,Annotation([Ljava.lang.String;@1b7cc17c,[Ljava.lang.String;@59662a0b,[Ljava.lang.String;@77fbd92c),Annotation([Ljava.lang.String;@67c27493,[Ljava.lang.String;@1a482e36,[Ledu.cmu.lti.nlp.amr.Dependency;@72967906),Annotation([Ljava.lang.String;@5b8dfcc1,[Ljava.lang.String;@2f9f7dcf,[Ljava.lang.String;@747ddf94),Annotation([Ljava.lang.String;@35e2d654,[Ljava.lang.String;@1bd4fdd,[Ledu.cmu.lti.nlp.amr.Entity;@55183b20))
AMR:
(羊 / 羊, ARG4, 只 / 只)

Decoded in 11,910 microseconds
Sentence: “ 它 碰到 什么 吃 什么 。 ” 我 回答 。

Spans:
Span 5-6:  什么 => 什么
Span 3-4:  什么 => 什么
Span 4-5:  吃 => (thing :arg1-of 吃-01)
Span 9-10:  回答 => 回答-01
Span 1-2:  它 => 它
Span 8-9:  我 => 我
Span 2-3:  碰到 => 碰到-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 连 有 刺 的 花 也 吃 吗 ？ ”

Spans:
Span 6-7:  也 => 也
Span 3-4:  刺 => 刺-01
Span 7-8:  吃 => (thing :arg1-of 吃-01)
Span 2-3:  有 => 有-06
Span 5-6:  花 => 花-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 有 刺 的 也 吃 ！ ”

Spans:
Span 4-5:  也 => 也
Span 2-3:  刺 => 刺-01
Span 5-6:  吃 => (thing :arg1-of 吃-01)
Span 1-2:  有 => 有-06

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 那么 刺 有 什么 用 呢 ？ ”

Spans:
Span 4-5:  什么 => 什么
Span 2-3:  刺 => 刺-01
Span 3-4:  有 => 有-06
Span 5-6:  用 => 用
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  刺 => 刺

Extra span: 用 => 用
Extra span: 什么 => 什么
Extra span: 有 => 有-06
Incorrect span: 刺 => 刺-01
Extra span: 那么 => 那么
Missing span: 刺 => 刺
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	刺	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	什么	_	PN	PN	_	6	nsubj	_	_
6	用	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),用,用,false), Span(4,5,List(1),什么,什么,false), Span(3,4,List(2),有,有-06,false), Span(2,3,List(3),刺,刺-01,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 有-06, 1 -> 什么, 4 -> 那么, 0 -> 用, 3 -> 刺-01),Map(用 -> 用, 刺 -> 刺-01, 那 -> 那么, 什 -> 什么, 有 -> 有-06))),[Ljava.lang.String;@130d63be,Annotation([Ljava.lang.String;@42a48628,[Ljava.lang.String;@293a5bf6,[Ljava.lang.String;@6aeb35e6),Annotation([Ljava.lang.String;@1283bb96,[Ljava.lang.String;@74f0ea28,[Ledu.cmu.lti.nlp.amr.Dependency;@f6efaab),Annotation([Ljava.lang.String;@3c19aaa5,[Ljava.lang.String;@3349e9bb,[Ljava.lang.String;@409bf450),Annotation([Ljava.lang.String;@38d8f54a,[Ljava.lang.String;@49e53c76,[Ledu.cmu.lti.nlp.amr.Entity;@351d00c0))
AMR:
(什 / 什么, mod, 有 / 有-06)
(刺 / 刺-01, degree, 那 / 那么)
(有 / 有-06, degree, 刺 / 刺-01)
(有 / 有-06, location, 用 / 用)

Decoded in 19,210 microseconds
Sentence: 我 不 知道 该 怎么 回答 。

Spans:
Span 1-2:  不 => 不
Span 5-6:  回答 => 回答-01
Span 4-5:  怎么 => 怎么
Span 0-1:  我 => 我
Span 2-3:  知道 => 知道-01
Span 3-4:  该 => 该-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 3-4:  该 => 该-01

Extra span: 怎么 => 怎么
Extra span: 不 => 不
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	该	_	DT	DT	_	6	dep	_	_
5	怎么	_	AD	AD	_	6	advmod	_	_
6	回答	_	VV	VV	_	3	ccomp	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x3 / 我)
(x0 / 知道-01, arg1, x5 / 该-01)
(x5 / 该-01, arg0, x6 / 回答-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),回答,回答-01,false), Span(4,5,List(1),怎么,怎么,false), Span(3,4,List(2),该,该-01,false), Span(2,3,List(3),知道,知道-01,false), Span(1,2,List(4),不,不,false), Span(0,1,List(5),我,我,false)),Map(2 -> 该-01, 5 -> 我, 1 -> 怎么, 4 -> 不, 0 -> 回答-01, 3 -> 知道-01),Map(我 -> 我, 怎 -> 怎么, 不 -> 不, 该 -> 该-01, 知 -> 知道-01, 回 -> 回答-01))),[Ljava.lang.String;@2a3b5b47,Annotation([Ljava.lang.String;@55b699ef,[Ljava.lang.String;@35d019a3,[Ljava.lang.String;@689604d9),Annotation([Ljava.lang.String;@18078bef,[Ljava.lang.String;@799f10e1,[Ledu.cmu.lti.nlp.amr.Dependency;@4c371370),Annotation([Ljava.lang.String;@145f66e3,[Ljava.lang.String;@3023df74,[Ljava.lang.String;@313ac989),Annotation([Ljava.lang.String;@4562e04d,[Ljava.lang.String;@2a65fe7c,[Ledu.cmu.lti.nlp.amr.Entity;@4135c3b))
AMR:
(不 / 不, poss, 我 / 我)
(回 / 回答-01, manner, 怎 / 怎么)
(知 / 知道-01, manner, 不 / 不)
(该 / 该-01, prep-in, 怎 / 怎么)
(该 / 该-01, time, 不 / 不)

Decoded in 36,128 microseconds
Sentence: 那会儿 我 正 忙 着 要 从 发动机 上 卸下 一 颗 拧 得 太 紧 的 螺丝 。

Spans:
Span 9-10:  卸下 => 卸下-01
Span 7-8:  发动机 => 发动机
Span 14-15:  太 => 太
Span 13-14:  得 => 得-06
Span 3-4:  忙 => 忙-01
Span 1-2:  我 => 我
Span 12-13:  拧 => 拧-01
Span 2-3:  正 => 正
Span 15-16:  紧 => 紧-01
Span 17-18:  螺丝 => 螺丝
Span 5-6:  要 => 要-02
Span 0-1:  那会儿 => 那会儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  卸下 => 卸下-01
Oracle Span 7-8:  发动机 => 发动机
Oracle Span 14-15:  太 => 太
Oracle Span 3-4:  忙 => 忙-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  拧 => 拧-01
Oracle Span 2-3:  正 => 正
Oracle Span 15-16:  紧 => 紧-01
Oracle Span 17-18:  螺丝 => 螺丝
Oracle Span 5-6:  要 => 要-03
Oracle Span 0-1:  那会儿 => 那会儿

Extra span: 得 => 得-06
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	那会儿	_	NN	NN	_	4	nsubj	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	正	_	AD	AD	_	4	advmod	_	_
4	忙	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	要	_	VV	VV	_	10	mmod	_	_
7	从	_	P	P	_	10	prep	_	_
8	发动机	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	7	plmod	_	_
10	卸下	_	VV	VV	_	4	ccomp	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	颗	_	M	M	_	13	clf	_	_
13	拧	_	NN	NN	_	10	dobj	_	_
14	得	_	VV	VV	_	10	dep	_	_
15	太	_	AD	AD	_	14	advmod	_	_
16	紧	_	JJ	JJ	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	螺丝	_	NN	NN	_	14	dobj	_	_
19	。	_	PU	PU	_	4	punct	_	_
20	我	_	PN	PN	_	10	xsubj	_	_
21	那会儿	_	NN	NN	_	10	xsubj	_	_

Oracle:
(x0 / 忙-01, arg0, x2 / 我)
(x0 / 忙-01, arg1, x5 / 要-03)
(x0 / 忙-01, manner, x3 / 正)
(x0 / 忙-01, time, x4 / 那会儿)
(x10 / 拧-01, arg1, x8 / 螺丝)
(x10 / 拧-01, degree, x12 / 紧-01)
(x12 / 紧-01, degree, x13 / 太)
(x5 / 要-03, arg0, x6 / 卸下-01)
(x6 / 卸下-01, arg1, x8 / 螺丝)
(x8 / 螺丝, location, x14 / 发动机)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),螺丝,螺丝,false), Span(15,16,List(1),紧,紧-01,false), Span(14,15,List(2),太,太,false), Span(13,14,List(3),得,得-06,false), Span(12,13,List(4),拧,拧-01,false), Span(9,10,List(5),卸下,卸下-01,false), Span(7,8,List(6),发动机,发动机,false), Span(5,6,List(7),要,要-02,false), Span(3,4,List(8),忙,忙-01,false), Span(2,3,List(9),正,正,false), Span(1,2,List(10),我,我,false), Span(0,1,List(11),那会儿,那会儿,false)),Map(2 -> 太, 5 -> 卸下-01, 8 -> 忙-01, 7 -> 要-02, 1 -> 紧-01, 11 -> 那会儿, 4 -> 拧-01, 6 -> 发动机, 9 -> 正, 0 -> 螺丝, 10 -> 我, 3 -> 得-06),Map(发 -> 发动机, 忙 -> 忙-01, 我 -> 我, 要 -> 要-02, 得 -> 得-06, 正 -> 正, 太 -> 太, 螺 -> 螺丝, 紧 -> 紧-01, 那 -> 那会儿, 拧 -> 拧-01, 卸 -> 卸下-01))),[Ljava.lang.String;@6302bbb1,Annotation([Ljava.lang.String;@31304f14,[Ljava.lang.String;@34a3d150,[Ljava.lang.String;@2a4fb17b),Annotation([Ljava.lang.String;@5c6648b0,[Ljava.lang.String;@6f1de4c7,[Ledu.cmu.lti.nlp.amr.Dependency;@459e9125),Annotation([Ljava.lang.String;@128d2484,[Ljava.lang.String;@7cc0cdad,[Ljava.lang.String;@7c7b252e),Annotation([Ljava.lang.String;@4d5d943d,[Ljava.lang.String;@368f2016,[Ledu.cmu.lti.nlp.amr.Entity;@4c583ecf))
AMR:
(卸 / 卸下-01, location, 发 / 发动机)
(得 / 得-06, degree, 太 / 太)
(得 / 得-06, degree, 拧 / 拧-01)
(忙 / 忙-01, degree, 我 / 我)
(忙 / 忙-01, manner, 正 / 正)
(忙 / 忙-01, time, 那 / 那会儿)
(拧 / 拧-01, manner, 卸 / 卸下-01)
(紧 / 紧-01, degree, 太 / 太)
(螺 / 螺丝, location, 紧 / 紧-01)
(要 / 要-02, degree, 忙 / 忙-01)
(要 / 要-02, location, 发 / 发动机)

Decoded in 106,807 microseconds
Sentence: 我 发现 机器 故障 似乎 很 严重 ，

Spans:
Span 6-7:  严重 => 严重-01
Span 4-5:  似乎 => 似乎-01
Span 1-2:  发现 => 发现-01
Span 5-6:  很 => 很
Span 0-1:  我 => 我
Span 3-4:  故障 => 故障-01
Span 2-3:  机器 => 机器

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  严重 => 严重-01
Oracle Span 4-5:  似乎 => 似乎-01
Oracle Span 1-2:  发现 => 发现-01
Oracle Span 5-6:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  故障 => 故障-01
Oracle Span 2-3:  机器 => 机器

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	发现	_	VV	VV	_	0	root	_	_
3	机器	_	NN	NN	_	4	nn	_	_
4	故障	_	NN	NN	_	2	dobj	_	_
5	似乎	_	VV	VV	_	7	mmod	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	严重	_	VA	VA	_	2	conj	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 发现-01, arg0, x2 / 我)
(x0 / 发现-01, arg1, x3 / 严重-01)
(x3 / 严重-01, arg0, x6 / 故障-01)
(x3 / 严重-01, degree, x4 / 很)
(x3 / 严重-01, manner, x5 / 似乎-01)
(x6 / 故障-01, arg0, x7 / 机器)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),严重,严重-01,false), Span(5,6,List(1),很,很,false), Span(4,5,List(2),似乎,似乎-01,false), Span(3,4,List(3),故障,故障-01,false), Span(2,3,List(4),机器,机器,false), Span(1,2,List(5),发现,发现-01,false), Span(0,1,List(6),我,我,false)),Map(2 -> 似乎-01, 5 -> 发现-01, 1 -> 很, 4 -> 机器, 6 -> 我, 0 -> 严重-01, 3 -> 故障-01),Map(发 -> 发现-01, 故 -> 故障-01, 我 -> 我, 似 -> 似乎-01, 很 -> 很, 机 -> 机器, 严 -> 严重-01))),[Ljava.lang.String;@692f203f,Annotation([Ljava.lang.String;@48f2bd5b,[Ljava.lang.String;@7b2bbc3,[Ljava.lang.String;@a1153bc),Annotation([Ljava.lang.String;@1aafa419,[Ljava.lang.String;@47eaca72,[Ledu.cmu.lti.nlp.amr.Dependency;@55141def),Annotation([Ljava.lang.String;@55182842,[Ljava.lang.String;@3270d194,[Ljava.lang.String;@235834f2),Annotation([Ljava.lang.String;@5656be13,[Ljava.lang.String;@4218d6a3,[Ledu.cmu.lti.nlp.amr.Entity;@76505305))
AMR:
(严 / 严重-01, ARG1, 故 / 故障-01)
(严 / 严重-01, degree, 很 / 很)
(严 / 严重-01, manner, 似 / 似乎-01)
(发 / 发现-01, ARG3, 严 / 严重-01)
(发 / 发现-01, value, 我 / 我)
(故 / 故障-01, location, 机 / 机器)

Decoded in 47,160 microseconds
Sentence: 饮水 也 快 完 了 ， 担心 可能 发生 最 坏 的 情况 ， 心里 很 着急 。

Spans:
Span 1-2:  也 => 也
Span 8-9:  发生 => 发生-01
Span 7-8:  可能 => 可能-02
Span 10-11:  坏 => 坏-01
Span 3-4:  完 => 完-01
Span 15-16:  很 => 很
Span 14-15:  心里 => 心里
Span 2-3:  快 => 快
Span 12-13:  情况 => 情况
Span 6-7:  担心 => 担心-01
Span 9-10:  最 => 最
Span 16-17:  着急 => 着急-02
Span 0-1:  饮水 => 饮水

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 8-9:  发生 => 发生-01
Oracle Span 7-8:  可能 => 可能-02
Oracle Span 10-11:  坏 => 坏-01
Oracle Span 3-4:  完 => 完-01
Oracle Span 15-16:  很 => 很
Oracle Span 14-15:  心里 => 心里
Oracle Span 2-3:  快 => 快-01
Oracle Span 12-13:  情况 => 情况
Oracle Span 6-7:  担心 => 担心-01
Oracle Span 9-10:  最 => 最
Oracle Span 16-17:  着急 => 着急-02
Oracle Span 0-1:  饮水 => 饮水

Incorrect span: 快 => 快
Missing span: 快 => 快-01
Dependencies:
1	饮水	_	NN	NN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	快	_	VA	VA	_	0	root	_	_
4	完	_	VV	VV	_	3	dep	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	担心	_	VV	VV	_	3	dep	_	_
8	可能	_	VV	VV	_	9	mmod	_	_
9	发生	_	VV	VV	_	7	ccomp	_	_
10	最	_	AD	AD	_	11	advmod	_	_
11	坏	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	情况	_	NN	NN	_	9	dobj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	心里	_	NN	NN	_	17	nsubj	_	_
16	很	_	AD	AD	_	17	advmod	_	_
17	着急	_	VA	VA	_	3	conj	_	_
18	。	_	PU	PU	_	3	punct	_	_
19	饮水	_	NN	NN	_	9	xsubj	_	_

Oracle:
(x10 / 情况, mod, x11 / 坏-01)
(x11 / 坏-01, degree, x12 / 最)
(x13 / 着急-02, arg0, x15 / 心里)
(x13 / 着急-02, degree, x14 / 很)
(x3 / 完-01, arg0, x4 / 饮水)
(x3 / 完-01, manner, x5 / 快-01)
(x3 / 完-01, manner, x6 / 也)
(x7 / 担心-01, arg1, x8 / 可能-02)
(x8 / 可能-02, arg0, x9 / 发生-01)
(x9 / 发生-01, arg0, x10 / 情况)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),着急,着急-02,false), Span(15,16,List(1),很,很,false), Span(14,15,List(2),心里,心里,false), Span(12,13,List(3),情况,情况,false), Span(10,11,List(4),坏,坏-01,false), Span(9,10,List(5),最,最,false), Span(8,9,List(6),发生,发生-01,false), Span(7,8,List(7),可能,可能-02,false), Span(6,7,List(8),担心,担心-01,false), Span(3,4,List(9),完,完-01,false), Span(2,3,List(10),快,快,false), Span(1,2,List(11),也,也,false), Span(0,1,List(12),饮水,饮水,false)),Map(2 -> 心里, 5 -> 最, 12 -> 饮水, 8 -> 担心-01, 7 -> 可能-02, 1 -> 很, 4 -> 坏-01, 11 -> 也, 6 -> 发生-01, 0 -> 着急-02, 9 -> 完-01, 3 -> 情况, 10 -> 快),Map(担 -> 担心-01, 发 -> 发生-01, 快 -> 快, 饮 -> 饮水, 情 -> 情况, 也 -> 也, 坏 -> 坏-01, 很 -> 很, 完 -> 完-01, 心 -> 心里, 着 -> 着急-02, 最 -> 最, 可 -> 可能-02))),[Ljava.lang.String;@14cd1699,Annotation([Ljava.lang.String;@77888435,[Ljava.lang.String;@73a1e9a9,[Ljava.lang.String;@71d44a3),Annotation([Ljava.lang.String;@7b98f307,[Ljava.lang.String;@4802796d,[Ledu.cmu.lti.nlp.amr.Dependency;@34123d65),Annotation([Ljava.lang.String;@59474f18,[Ljava.lang.String;@65fb9ffc,[Ljava.lang.String;@3e694b3f),Annotation([Ljava.lang.String;@1bb5a082,[Ljava.lang.String;@78691363,[Ledu.cmu.lti.nlp.amr.Entity;@41d477ed))
AMR:
(可 / 可能-02, season, 发 / 发生-01)
(坏 / 坏-01, degree, 发 / 发生-01)
(坏 / 坏-01, degree, 最 / 最)
(完 / 完-01, manner, 也 / 也)
(完 / 完-01, manner, 快 / 快)
(完 / 完-01, prep-against, 担 / 担心-01)
(快 / 快, mod, 饮 / 饮水)
(情 / 情况, mod, 坏 / 坏-01)
(情 / 情况, mod, 心 / 心里)
(担 / 担心-01, season, 可 / 可能-02)
(着 / 着急-02, degree, 很 / 很)
(着 / 着急-02, degree, 心 / 心里)

Decoded in 98,649 microseconds
Sentence: “ 那么 刺 有 什么 用 呢 ？ ”

Spans:
Span 4-5:  什么 => 什么
Span 2-3:  刺 => 刺-01
Span 3-4:  有 => 有-06
Span 5-6:  用 => 用
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  刺 => 刺

Extra span: 用 => 用
Extra span: 什么 => 什么
Extra span: 有 => 有-06
Incorrect span: 刺 => 刺-01
Extra span: 那么 => 那么
Missing span: 刺 => 刺
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	刺	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	什么	_	PN	PN	_	6	nsubj	_	_
6	用	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),用,用,false), Span(4,5,List(1),什么,什么,false), Span(3,4,List(2),有,有-06,false), Span(2,3,List(3),刺,刺-01,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 有-06, 1 -> 什么, 4 -> 那么, 0 -> 用, 3 -> 刺-01),Map(用 -> 用, 刺 -> 刺-01, 那 -> 那么, 什 -> 什么, 有 -> 有-06))),[Ljava.lang.String;@3590fc5b,Annotation([Ljava.lang.String;@397fbdb,[Ljava.lang.String;@33d512c1,[Ljava.lang.String;@515c6049),Annotation([Ljava.lang.String;@639c2c1d,[Ljava.lang.String;@5fe94a96,[Ledu.cmu.lti.nlp.amr.Dependency;@443118b0),Annotation([Ljava.lang.String;@765d7657,[Ljava.lang.String;@74235045,[Ljava.lang.String;@618b19ad),Annotation([Ljava.lang.String;@2d3379b4,[Ljava.lang.String;@30c15d8b,[Ledu.cmu.lti.nlp.amr.Entity;@5e0e82ae))
AMR:
(什 / 什么, mod, 有 / 有-06)
(刺 / 刺-01, degree, 那 / 那么)
(有 / 有-06, degree, 刺 / 刺-01)
(有 / 有-06, location, 用 / 用)

Decoded in 23,364 microseconds
Sentence: 小 王子 一旦 提出 了 问题 ， 从来 不 会 放过 。

Spans:
Span 8-9:  不 => 不
Span 7-8:  从来 => 从来
Span 9-10:  会 => 会-03
Span 0-1:  小 => 小
Span 3-4:  提出 => 提出-01
Span 10-11:  放过 => 放过-01
Span 1-2:  王子 => 王子
Span 5-6:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  从来 => 从来
Oracle Span 9-10:  会 => 会-02
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 10-11:  放过 => 放过-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  问题 => 问题

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 会 => 会-02
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	一旦	_	CS	CS	_	4	advmod	_	_
4	提出	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	问题	_	NN	NN	_	4	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	从来	_	AD	AD	_	11	advmod	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	会	_	VV	VV	_	11	dep	_	_
11	放过	_	VV	VV	_	4	conj	_	_
12	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 放过-01)
(x11 / 会-02, time, x17 / 从来)
(x6 / 提出-01, arg0, x7 / 王子)
(x6 / 提出-01, arg1, x9 / 问题)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),放过,放过-01,false), Span(9,10,List(1),会,会-03,false), Span(8,9,List(2),不,不,false), Span(7,8,List(3),从来,从来,false), Span(5,6,List(4),问题,问题,false), Span(3,4,List(5),提出,提出-01,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小,false)),Map(2 -> 不, 5 -> 提出-01, 7 -> 小, 1 -> 会-03, 4 -> 问题, 6 -> 王子, 0 -> 放过-01, 3 -> 从来),Map(从 -> 从来, 王 -> 王子, 放 -> 放过-01, 小 -> 小, 不 -> 不, 会 -> 会-03, 提 -> 提出-01, 问 -> 问题))),[Ljava.lang.String;@6771beb3,Annotation([Ljava.lang.String;@51399530,[Ljava.lang.String;@6b2ea799,[Ljava.lang.String;@411f53a0),Annotation([Ljava.lang.String;@2b71e916,[Ljava.lang.String;@36fc695d,[Ledu.cmu.lti.nlp.amr.Dependency;@28701274),Annotation([Ljava.lang.String;@13c9d689,[Ljava.lang.String;@3754a4bf,[Ljava.lang.String;@62379589),Annotation([Ljava.lang.String;@4afcd809,[Ljava.lang.String;@175c2241,[Ledu.cmu.lti.nlp.amr.Entity;@5bf0d49))
AMR:
(会 / 会-03, compared-to, 放 / 放过-01)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, time, 从 / 从来)
(提 / 提出-01, ARG3, 不 / 不)
(提 / 提出-01, mod, 问 / 问题)
(提 / 提出-01, source, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 57,337 microseconds
Sentence: 这个 该死 的 螺丝 使 我 很 恼火 ，

Spans:
Span 4-5:  使 => 使-01
Span 6-7:  很 => 很
Span 7-8:  恼火 => 恼火-01
Span 5-6:  我 => 我
Span 3-4:  螺丝 => 螺丝
Span 1-2:  该死 => 该死
Span 0-1:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  很 => 很
Oracle Span 7-8:  恼火 => 恼火-01
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  螺丝 => 螺丝
Oracle Span 1-2:  该死 => 该死

Extra span: 使 => 使-01
Extra span: 这个 => 这个
Dependencies:
1	这个	_	NN	NN	_	2	nn	_	_
2	该死	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	螺丝	_	NN	NN	_	5	nsubj	_	_
5	使	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	恼火	_	VV	VV	_	5	ccomp	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 螺丝, mod, x14 / 该死)
(x9 / 恼火-01, arg0, x12 / 我)
(x9 / 恼火-01, cause, x13 / 螺丝)
(x9 / 恼火-01, degree, x11 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),恼火,恼火-01,false), Span(6,7,List(1),很,很,false), Span(5,6,List(2),我,我,false), Span(4,5,List(3),使,使-01,false), Span(3,4,List(4),螺丝,螺丝,false), Span(1,2,List(5),该死,该死,false), Span(0,1,List(6),这个,这个,false)),Map(2 -> 我, 5 -> 该死, 1 -> 很, 4 -> 螺丝, 6 -> 这个, 0 -> 恼火-01, 3 -> 使-01),Map(我 -> 我, 这 -> 这个, 很 -> 很, 螺 -> 螺丝, 该 -> 该死, 恼 -> 恼火-01, 使 -> 使-01))),[Ljava.lang.String;@5b7a5baa,Annotation([Ljava.lang.String;@776aec5c,[Ljava.lang.String;@1d296da,[Ljava.lang.String;@7c7a06ec),Annotation([Ljava.lang.String;@75d4a5c2,[Ljava.lang.String;@557caf28,[Ledu.cmu.lti.nlp.amr.Dependency;@408d971b),Annotation([Ljava.lang.String;@6c6cb480,[Ljava.lang.String;@3c46e67a,[Ljava.lang.String;@c730b35),Annotation([Ljava.lang.String;@206a70ef,[Ljava.lang.String;@292b08d6,[Ledu.cmu.lti.nlp.amr.Entity;@22555ebf))
AMR:
(使 / 使-01, accompanier, 恼 / 恼火-01)
(恼 / 恼火-01, ARG6, 螺 / 螺丝)
(恼 / 恼火-01, beneficiary, 我 / 我)
(恼 / 恼火-01, degree, 很 / 很)
(螺 / 螺丝, mod, 该 / 该死)
(该 / 该死, mod, 这 / 这个)

Decoded in 27,472 microseconds
Sentence: 我 于是 就 随便 回答 了 他 一 句 ： “ 刺 么 ， 什么 用 都 没有 ，

Spans:
Span 14-15:  什么 => 什么
Span 6-7:  他 => 他
Span 11-12:  刺 => 刺-01
Span 8-9:  句 => 句
Span 4-5:  回答 => 回答-01
Span 2-3:  就 => 就-01
Span 0-1:  我 => 我
Span 15-16:  用 => 用
Span 16-17:  都 => 都
Span 3-4:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  什么 => 什么
Oracle Span 6-7:  他 => 他
Oracle Span 11-12:  刺 => 刺
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 15-16:  用 => 用
Oracle Span 3-4:  随便 => 随便

Extra span: 都 => 都
Incorrect span: 刺 => 刺-01
Extra span: 句 => 句
Extra span: 就 => 就-01
Missing span: 刺 => 刺
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	于是	_	AD	AD	_	5	advmod	_	_
3	就	_	P	P	_	5	prep	_	_
4	随便	_	NN	NN	_	3	pobj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	他	_	PN	PN	_	9	nn	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	句	_	NN	NN	_	5	dobj	_	_
10	：	_	PU	PU	_	5	punct	_	_
11	“	_	PU	PU	_	13	punct	_	_
12	刺	_	NR	NR	_	13	nsubj	_	_
13	么	_	VV	VV	_	5	dep	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	什么	_	DT	DT	_	16	det	_	_
16	用	_	NN	NN	_	18	nsubj	_	_
17	都	_	AD	AD	_	18	advmod	_	_
18	没有	_	VE	VE	_	13	ccomp	_	_
19	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x10 / 用, mod, x11 / 什么)
(x2 / 回答-01, arg0, x3 / 我)
(x2 / 回答-01, arg3, x6 / 他)
(x2 / 回答-01, manner, x5 / 随便)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),都,都,false), Span(15,16,List(1),用,用,false), Span(14,15,List(2),什么,什么,false), Span(11,12,List(3),刺,刺-01,false), Span(8,9,List(4),句,句,false), Span(6,7,List(5),他,他,false), Span(4,5,List(6),回答,回答-01,false), Span(3,4,List(7),随便,随便,false), Span(2,3,List(8),就,就-01,false), Span(0,1,List(9),我,我,false)),Map(2 -> 什么, 5 -> 他, 8 -> 就-01, 7 -> 随便, 1 -> 用, 4 -> 句, 6 -> 回答-01, 9 -> 我, 0 -> 都, 3 -> 刺-01),Map(就 -> 就-01, 用 -> 用, 我 -> 我, 刺 -> 刺-01, 句 -> 句, 他 -> 他, 什 -> 什么, 都 -> 都, 回 -> 回答-01, 随 -> 随便))),[Ljava.lang.String;@36ebc363,Annotation([Ljava.lang.String;@45752059,[Ljava.lang.String;@34e9fd99,[Ljava.lang.String;@3c41ed1d),Annotation([Ljava.lang.String;@54d9d12d,[Ljava.lang.String;@38425407,[Ledu.cmu.lti.nlp.amr.Dependency;@43bc63a3),Annotation([Ljava.lang.String;@702657cc,[Ljava.lang.String;@6a6cb05c,[Ljava.lang.String;@40a4337a),Annotation([Ljava.lang.String;@6025e1b6,[Ljava.lang.String;@22ff4249,[Ledu.cmu.lti.nlp.amr.Entity;@2d1ef81a))
AMR:
(他 / 他, part, 句 / 句)
(刺 / 刺-01, manner, 句 / 句)
(回 / 回答-01, manner, 就 / 就-01)
(回 / 回答-01, manner, 随 / 随便)
(回 / 回答-01, part, 句 / 句)
(就 / 就-01, poss, 我 / 我)
(用 / 用, manner, 都 / 都)
(用 / 用, mod, 什 / 什么)
(用 / 用, mod, 刺 / 刺-01)

Decoded in 52,098 microseconds
Sentence: 这 纯粹 是 花 的 恶劣 表现 。 ”

Spans:
Span 5-6:  恶劣 => 恶劣-01
Span 2-3:  是 => 是-04
Span 1-2:  纯粹 => 纯粹
Span 3-4:  花 => 花-01
Span 6-7:  表现 => 表现-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  恶劣 => 恶劣-01
Oracle Span 1-2:  纯粹 => 纯粹
Oracle Span 3-4:  花 => 花
Oracle Span 6-7:  表现 => 表现-01
Oracle Span 0-1:  这 => 这

Incorrect span: 花 => 花-01
Extra span: 是 => 是-04
Missing span: 花 => 花
Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	纯粹	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	花	_	NN	NN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	恶劣	_	JJ	JJ	_	7	amod	_	_
7	表现	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x8 / 表现-01, domain, x12 / 这)
(x8 / 表现-01, manner, x11 / 纯粹)
(x8 / 表现-01, mod, x9 / 恶劣-01)
(x8 / 表现-01, poss, x10 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),表现,表现-01,false), Span(5,6,List(1),恶劣,恶劣-01,false), Span(3,4,List(2),花,花-01,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),纯粹,纯粹,false), Span(0,1,List(5),这,这,false)),Map(2 -> 花-01, 5 -> 这, 1 -> 恶劣-01, 4 -> 纯粹, 0 -> 表现-01, 3 -> 是-04),Map(这 -> 这, 表 -> 表现-01, 纯 -> 纯粹, 花 -> 花-01, 恶 -> 恶劣-01, 是 -> 是-04))),[Ljava.lang.String;@4c402120,Annotation([Ljava.lang.String;@327514f,[Ljava.lang.String;@5b12b668,[Ljava.lang.String;@1165b38),Annotation([Ljava.lang.String;@4c12331b,[Ljava.lang.String;@7586beff,[Ledu.cmu.lti.nlp.amr.Dependency;@3b69e7d1),Annotation([Ljava.lang.String;@815b41f,[Ljava.lang.String;@5542c4ed,[Ljava.lang.String;@1573f9fc),Annotation([Ljava.lang.String;@6150c3ec,[Ljava.lang.String;@44c03695,[Ledu.cmu.lti.nlp.amr.Entity;@7e6f74c))
AMR:
(是 / 是-04, manner, 纯 / 纯粹)
(是 / 是-04, year, 花 / 花-01)
(表 / 表现-01, domain, 这 / 这)
(表 / 表现-01, manner, 花 / 花-01)
(表 / 表现-01, mod, 恶 / 恶劣-01)

Decoded in 25,299 microseconds
Sentence: “ 噢 ！ ”

Spans:
Span 1-2:  噢 => 噢

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  噢 => 噢

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	噢	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),噢,噢,false)),Map(0 -> 噢),Map(噢 -> 噢))),[Ljava.lang.String;@dd05255,Annotation([Ljava.lang.String;@6a78afa0,[Ljava.lang.String;@2f4948e4,[Ljava.lang.String;@1f2586d6),Annotation([Ljava.lang.String;@10683d9d,[Ljava.lang.String;@3fc2959f,[Ledu.cmu.lti.nlp.amr.Dependency;@5aa9e4eb),Annotation([Ljava.lang.String;@6989da5e,[Ljava.lang.String;@385c9627,[Ljava.lang.String;@139982de),Annotation([Ljava.lang.String;@682b2fa,[Ljava.lang.String;@217ed35e,[Ledu.cmu.lti.nlp.amr.Entity;@7dcf94f8))
AMR:


Decoded in 3,126 microseconds
Sentence: 可是 他 沉默 了 一会儿 之后 ，

Spans:
Span 4-5:  一会儿 => 一会儿
Span 5-6:  之后 => 之后-01
Span 1-2:  他 => 他
Span 2-3:  沉默 => 沉默-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会儿 => 一会儿
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  沉默 => 沉默-01

Extra span: 之后 => 之后-01
Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	VV	VV	_	3	conj	_	_
5	一会儿	_	CD	CD	_	6	lobj	_	_
6	之后	_	LC	LC	_	4	loc	_	_
7	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 沉默-01, arg0, x7 / 他)
(x6 / 沉默-01, duration, x9 / 一会儿)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),之后,之后-01,false), Span(4,5,List(1),一会儿,一会儿,false), Span(2,3,List(2),沉默,沉默-01,false), Span(1,2,List(3),他,他,false)),Map(2 -> 沉默-01, 1 -> 一会儿, 0 -> 之后-01, 3 -> 他),Map(沉 -> 沉默-01, 他 -> 他, 一 -> 一会儿, 之 -> 之后-01))),[Ljava.lang.String;@229f66ed,Annotation([Ljava.lang.String;@31190526,[Ljava.lang.String;@662ac478,[Ljava.lang.String;@6743e411),Annotation([Ljava.lang.String;@3eb25e1a,[Ljava.lang.String;@477b4cdf,[Ledu.cmu.lti.nlp.amr.Dependency;@77c2494c),Annotation([Ljava.lang.String;@f5958c9,[Ljava.lang.String;@233795b6,[Ljava.lang.String;@3eb738bb),Annotation([Ljava.lang.String;@5bda8e08,[Ljava.lang.String;@1e800aaa,[Ledu.cmu.lti.nlp.amr.Entity;@185a6e9))
AMR:
(之 / 之后-01, ARG1, 一 / 一会儿)
(沉 / 沉默-01, duration, 一 / 一会儿)
(沉 / 沉默-01, prep-for, 他 / 他)

Decoded in 16,360 microseconds
Sentence: 怀 着 不满 的 心情 冲 我 说 ： “ 我 不 信 ！

Spans:
Span 11-12:  不 => 不
Span 2-3:  不满 => 不满-01
Span 12-13:  信 => 信-01
Span 5-6:  冲 => 冲-02
Span 4-5:  心情 => 心情
Span 0-1:  怀 => 怀-01
Span 10-11:  我 => 我
Span 6-7:  我 => 我
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
Oracle Span 2-3:  不满 => 不满-01
Oracle Span 12-13:  信 => 信-01
Oracle Span 4-5:  心情 => 心情
Oracle Span 0-1:  怀 => 怀-01
Oracle Span 6-7:  我 => 我
Oracle Span 7-8:  说 => 说-01

Extra span: 不 => 不
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 冲 => 冲-02
Missing span: 说 => 说-01
Dependencies:
1	怀	_	NN	NN	_	2	nsubj	_	_
2	着	_	VV	VV	_	6	rcmod	_	_
3	不满	_	NN	NN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	心情	_	NN	NN	_	6	nn	_	_
6	冲	_	NN	NN	_	8	nsubj	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	8	punct	_	_
11	我	_	PN	PN	_	13	nsubj	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	信	_	VV	VV	_	8	ccomp	_	_
14	！	_	PU	PU	_	8	punct	_	_

Oracle:
(x4 / 说-01, arg1, x10 / 信-01)
(x4 / 说-01, arg3, x9 / 我)
(x4 / 说-01, manner, x6 / 怀-01)
(x6 / 怀-01, arg1, x7 / 心情)
(x7 / 心情, mod, x8 / 不满-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),信,信-01,false), Span(11,12,List(1),不,不,false), Span(10,11,List(2),我,我,false), Span(7,8,List(3),说,说-02,false), Span(6,7,List(4),我,我,false), Span(5,6,List(5),冲,冲-02,false), Span(4,5,List(6),心情,心情,false), Span(2,3,List(7),不满,不满-01,false), Span(0,1,List(8),怀,怀-01,false)),Map(2 -> 我, 5 -> 冲-02, 8 -> 怀-01, 7 -> 不满-01, 1 -> 不, 4 -> 我, 6 -> 心情, 0 -> 信-01, 3 -> 说-02),Map(怀 -> 怀-01, 我 -> 我, 信 -> 信-01, 我2 -> 我, 心 -> 心情, 不2 -> 不满-01, 冲 -> 冲-02, 不 -> 不, 说 -> 说-02))),[Ljava.lang.String;@6f03482,Annotation([Ljava.lang.String;@9d5509a,[Ljava.lang.String;@179ece50,[Ljava.lang.String;@3b0090a4),Annotation([Ljava.lang.String;@3cd3e762,[Ljava.lang.String;@1fa121e2,[Ledu.cmu.lti.nlp.amr.Dependency;@7eac9008),Annotation([Ljava.lang.String;@4116aac9,[Ljava.lang.String;@62ddbd7e,[Ljava.lang.String;@74e52ef6),Annotation([Ljava.lang.String;@6ed3ccb2,[Ljava.lang.String;@1a677343,[Ledu.cmu.lti.nlp.amr.Entity;@15de0b3c))
AMR:
(不 / 不, mod, 我 / 我)
(信 / 信-01, manner, 不 / 不)
(冲 / 冲-02, mod, 心 / 心情)
(心 / 心情, mod, 不2 / 不满-01)
(怀 / 怀-01, destination, 不2 / 不满-01)
(说 / 说-02, mod, 冲 / 冲-02)
(说 / 说-02, mod, 我2 / 我)
(说 / 说-02, prep-following, 不 / 不)

Decoded in 52,411 microseconds
Sentence: 花 是 弱小 的 、

Spans:
Span 2-3:  弱小 => 弱小-01
Span 1-2:  是 => 是-04
Span 0-1:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  弱小 => 弱小
Oracle Span 0-1:  花 => 花

Incorrect span: 弱小 => 弱小-01
Extra span: 是 => 是-04
Incorrect span: 花 => 花-01
Missing span: 弱小 => 弱小
Missing span: 花 => 花
Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	弱小	_	NR	NR	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	、	_	NN	NN	_	2	attr	_	_

Oracle:
(x0 / 弱小, domain, x2 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),弱小,弱小-01,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),花,花-01,false)),Map(2 -> 花-01, 1 -> 是-04, 0 -> 弱小-01),Map(弱 -> 弱小-01, 花 -> 花-01, 是 -> 是-04))),[Ljava.lang.String;@489115ef,Annotation([Ljava.lang.String;@3857f613,[Ljava.lang.String;@198b6731,[Ljava.lang.String;@7c6908d7),Annotation([Ljava.lang.String;@3c9754d8,[Ljava.lang.String;@3bf7ca37,[Ledu.cmu.lti.nlp.amr.Dependency;@79079097),Annotation([Ljava.lang.String;@4d1c00d0,[Ljava.lang.String;@4b2bac3f,[Ljava.lang.String;@4e08711f),Annotation([Ljava.lang.String;@bcec361,[Ljava.lang.String;@26794848,[Ledu.cmu.lti.nlp.amr.Entity;@302552ec))
AMR:
(弱 / 弱小-01, manner, 是 / 是-04)
(是 / 是-04, manner, 花 / 花-01)

Decoded in 8,644 microseconds
Sentence: 他们 是 淳朴 的 ，

Spans:
Span 0-1:  他们 => 他们
Span 1-2:  是 => 是-04
Span 2-3:  淳朴 => 淳朴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  淳朴 => 淳朴

Extra span: 是 => 是-04
Dependencies:
1	他们	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	淳朴	_	VA	VA	_	2	attr	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 淳朴, domain, x2 / 他们)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),淳朴,淳朴,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),他们,他们,false)),Map(2 -> 他们, 1 -> 是-04, 0 -> 淳朴),Map(淳 -> 淳朴, 他 -> 他们, 是 -> 是-04))),[Ljava.lang.String;@3d285d7e,Annotation([Ljava.lang.String;@40005471,[Ljava.lang.String;@2cd76f31,[Ljava.lang.String;@367ffa75),Annotation([Ljava.lang.String;@49438269,[Ljava.lang.String;@ba2f4ec,[Ledu.cmu.lti.nlp.amr.Dependency;@1c1bbc4e),Annotation([Ljava.lang.String;@55fe41ea,[Ljava.lang.String;@fbd1f6,[Ljava.lang.String;@1ce24091),Annotation([Ljava.lang.String;@5dda768f,[Ljava.lang.String;@7a8c8dcf,[Ledu.cmu.lti.nlp.amr.Entity;@24269709))
AMR:
(是 / 是-04, ARG1, 他 / 他们)
(淳 / 淳朴, domain, 他 / 他们)

Decoded in 13,313 microseconds
Sentence: 它们 总是 设法 保护 自己 ，

Spans:
Span 3-4:  保护 => 保护-01
Span 0-1:  它们 => 它们
Span 1-2:  总是 => 总是
Span 4-5:  自己 => 自己
Span 2-3:  设法 => 设法-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  保护 => 保护-01
Oracle Span 0-1:  它们 => 它们
Oracle Span 1-2:  总是 => 总是
Oracle Span 2-3:  设法 => 设法-01

Extra span: 自己 => 自己
Dependencies:
1	它们	_	PN	PN	_	3	nsubj	_	_
2	总是	_	AD	AD	_	3	advmod	_	_
3	设法	_	VV	VV	_	0	root	_	_
4	保护	_	VV	VV	_	3	ccomp	_	_
5	自己	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 设法-01, arg0, x2 / 它们)
(x0 / 设法-01, arg1, x4 / 保护-01)
(x0 / 设法-01, manner, x3 / 总是)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),自己,自己,false), Span(3,4,List(1),保护,保护-01,false), Span(2,3,List(2),设法,设法-01,false), Span(1,2,List(3),总是,总是,false), Span(0,1,List(4),它们,它们,false)),Map(2 -> 设法-01, 1 -> 保护-01, 4 -> 它们, 0 -> 自己, 3 -> 总是),Map(自 -> 自己, 总 -> 总是, 它 -> 它们, 保 -> 保护-01, 设 -> 设法-01))),[Ljava.lang.String;@2aceadd4,Annotation([Ljava.lang.String;@24aed80c,[Ljava.lang.String;@3a52dba3,[Ljava.lang.String;@2a5c8d3f),Annotation([Ljava.lang.String;@752325ad,[Ljava.lang.String;@279fedbd,[Ledu.cmu.lti.nlp.amr.Dependency;@b3ca52e),Annotation([Ljava.lang.String;@45c7e403,[Ljava.lang.String;@2925bf5b,[Ljava.lang.String;@710f4dc7),Annotation([Ljava.lang.String;@1ff4931d,[Ljava.lang.String;@65e98b1c,[Ledu.cmu.lti.nlp.amr.Entity;@61322f9d))
AMR:
(保 / 保护-01, purpose, 自 / 自己)
(设 / 设法-01, ARG6, 它 / 它们)
(设 / 设法-01, manner, 总 / 总是)
(设 / 设法-01, prep-along-with, 保 / 保护-01)

Decoded in 16,429 microseconds
Sentence: 以为 有 了 刺 就 可以 显出 自己 的 厉害 … ”

Spans:
Span 0-1:  以为 => 以为-02
Span 3-4:  刺 => 刺-01
Span 9-10:  厉害 => 厉害
Span 5-6:  可以 => 可以-02
Span 4-5:  就 => 就-01
Span 6-7:  显出 => 显出-01
Span 1-2:  有 => 有-06
Span 7-8:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  以为 => 以为-01
Oracle Span 3-4:  刺 => 刺-01
Oracle Span 9-10:  厉害 => 厉害
Oracle Span 5-6:  可以 => 可以-01
Oracle Span 6-7:  显出 => 显出-01
Oracle Span 1-2:  有 => 有-03
Oracle Span 7-8:  自己 => 自己

Incorrect span: 可以 => 可以-02
Extra span: 就 => 就-01
Incorrect span: 有 => 有-06
Incorrect span: 以为 => 以为-02
Missing span: 以为 => 以为-01
Missing span: 有 => 有-03
Missing span: 可以 => 可以-01
Dependencies:
1	以为	_	NR	NR	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	刺	_	PU	PU	_	11	punct	_	_
5	就	_	AD	AD	_	7	advmod	_	_
6	可以	_	VV	VV	_	7	mmod	_	_
7	显出	_	VV	VV	_	11	rcmod	_	_
8	自己	_	PN	PN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	厉害	_	JJ	JJ	_	11	amod	_	_
11	…	_	NN	NN	_	2	dobj	_	_
12	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x10 / 厉害, poss, x11 / 自己)
(x5 / 有-03, arg1, x6 / 刺-01)
(x7 / 可以-01, arg0, x9 / 显出-01)
(x9 / 显出-01, arg1, x10 / 厉害)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),厉害,厉害,false), Span(7,8,List(1),自己,自己,false), Span(6,7,List(2),显出,显出-01,false), Span(5,6,List(3),可以,可以-02,false), Span(4,5,List(4),就,就-01,false), Span(3,4,List(5),刺,刺-01,false), Span(1,2,List(6),有,有-06,false), Span(0,1,List(7),以为,以为-02,false)),Map(2 -> 显出-01, 5 -> 刺-01, 7 -> 以为-02, 1 -> 自己, 4 -> 就-01, 6 -> 有-06, 0 -> 厉害, 3 -> 可以-02),Map(就 -> 就-01, 厉 -> 厉害, 自 -> 自己, 刺 -> 刺-01, 以 -> 以为-02, 显 -> 显出-01, 有 -> 有-06, 可 -> 可以-02))),[Ljava.lang.String;@6ad82709,Annotation([Ljava.lang.String;@510f3d34,[Ljava.lang.String;@7817fd62,[Ljava.lang.String;@8297b3a),Annotation([Ljava.lang.String;@2362f559,[Ljava.lang.String;@b2c9a9c,[Ledu.cmu.lti.nlp.amr.Dependency;@4c178a76),Annotation([Ljava.lang.String;@fa4c865,[Ljava.lang.String;@3bd82cf5,[Ljava.lang.String;@544fa968),Annotation([Ljava.lang.String;@247bddad,[Ljava.lang.String;@d35dea7,[Ledu.cmu.lti.nlp.amr.Entity;@7770f470))
AMR:
(厉 / 厉害, poss, 自 / 自己)
(可 / 可以-02, day, 显 / 显出-01)
(可 / 可以-02, manner, 就 / 就-01)
(就 / 就-01, weekday, 刺 / 刺-01)
(有 / 有-06, day, 刺 / 刺-01)
(有 / 有-06, weekday, 以 / 以为-02)
(自 / 自己, weekday, 显 / 显出-01)

Decoded in 37,762 microseconds
Sentence: 我 默不作声 。

Spans:
Span 0-1:  我 => 我
Span 1-2:  默不作声 => 默不作声

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  默不作声 => 默不作声

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	默不作声	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 默不作声, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),默不作声,默不作声,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 默不作声),Map(我 -> 我, 默 -> 默不作声))),[Ljava.lang.String;@5e5d171f,Annotation([Ljava.lang.String;@24313fcc,[Ljava.lang.String;@7d20d0b,[Ljava.lang.String;@77f1baf5),Annotation([Ljava.lang.String;@41a2befb,[Ljava.lang.String;@6c40365c,[Ledu.cmu.lti.nlp.amr.Dependency;@7bedc48a),Annotation([Ljava.lang.String;@131ef10,[Ljava.lang.String;@55b0dcab,[Ljava.lang.String;@38afe297),Annotation([Ljava.lang.String;@2df3b89c,[Ljava.lang.String;@23348b5d,[Ledu.cmu.lti.nlp.amr.Entity;@70325e14))
AMR:
(默 / 默不作声, value, 我 / 我)

Decoded in 7,555 microseconds
Sentence: 我 当时 想 的 ， 如果 这个 螺丝 再 和 我 作对 ， 我 就 一 锤子 敲掉 它 。

Spans:
Span 11-12:  作对 => 作对-01
Span 8-9:  再 => 再
Span 18-19:  它 => 它
Span 14-15:  就 => 就-01
Span 1-2:  当时 => 当时
Span 2-3:  想 => 想-05
Span 13-14:  我 => 我
Span 10-11:  我 => 我
Span 0-1:  我 => 我
Span 7-8:  螺丝 => 螺丝
Span 6-7:  这个 => 这个
Span 16-17:  锤子 => 锤子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  作对 => 作对-01
Oracle Span 1-2:  当时 => 当时
Oracle Span 2-3:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  螺丝 => 螺丝
Oracle Span 16-17:  锤子 => 锤子

Extra span: 它 => 它
Extra span: 就 => 就-01
Extra span: 我 => 我
Extra span: 我 => 我
Extra span: 再 => 再
Extra span: 这个 => 这个
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	当时	_	NT	NT	_	3	tmod	_	_
3	想	_	VV	VV	_	18	nsubj	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	,	_	PU	PU	_	18	punct	_	_
6	如果	_	CS	CS	_	12	advmod	_	_
7	这个	_	NN	NN	_	8	nn	_	_
8	螺丝	_	NN	NN	_	12	nsubj	_	_
9	再	_	AD	AD	_	12	advmod	_	_
10	和	_	P	P	_	12	prep	_	_
11	我	_	PN	PN	_	10	pobj	_	_
12	作对	_	VV	VV	_	18	pccomp	_	_
13	,	_	PU	PU	_	18	punct	_	_
14	我	_	PN	PN	_	18	nsubj	_	_
15	就	_	P	P	_	18	prep	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	锤子	_	NN	NN	_	15	pobj	_	_
18	敲掉	_	VV	VV	_	0	root	_	_
19	它	_	PN	PN	_	18	dobj	_	_
20	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, time, x4 / 当时)
(x5 / 作对-01, arg0, x6 / 螺丝)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),它,它,false), Span(16,17,List(1),锤子,锤子,false), Span(14,15,List(2),就,就-01,false), Span(13,14,List(3),我,我,false), Span(11,12,List(4),作对,作对-01,false), Span(10,11,List(5),我,我,false), Span(8,9,List(6),再,再,false), Span(7,8,List(7),螺丝,螺丝,false), Span(6,7,List(8),这个,这个,false), Span(2,3,List(9),想,想-05,false), Span(1,2,List(10),当时,当时,false), Span(0,1,List(11),我,我,false)),Map(2 -> 就-01, 5 -> 我, 8 -> 这个, 7 -> 螺丝, 1 -> 锤子, 11 -> 我, 4 -> 作对-01, 6 -> 再, 9 -> 想-05, 0 -> 它, 10 -> 当时, 3 -> 我),Map(就 -> 就-01, 我3 -> 我, 我 -> 我, 这 -> 这个, 锤 -> 锤子, 我2 -> 我, 它 -> 它, 螺 -> 螺丝, 作 -> 作对-01, 想 -> 想-05, 当 -> 当时, 再 -> 再))),[Ljava.lang.String;@20d525,Annotation([Ljava.lang.String;@6200f9cb,[Ljava.lang.String;@2002fc1d,[Ljava.lang.String;@69453e37),Annotation([Ljava.lang.String;@6f4a47c7,[Ljava.lang.String;@ae13544,[Ledu.cmu.lti.nlp.amr.Dependency;@3d34d211),Annotation([Ljava.lang.String;@7dc0f706,[Ljava.lang.String;@4009e306,[Ljava.lang.String;@43c1b556),Annotation([Ljava.lang.String;@587e5365,[Ljava.lang.String;@22fcf7ab,[Ledu.cmu.lti.nlp.amr.Entity;@2de23121))
AMR:
(作 / 作对-01, beneficiary, 我2 / 我)
(作 / 作对-01, beneficiary, 螺 / 螺丝)
(作 / 作对-01, manner, 再 / 再)
(就 / 就-01, ARG0, 作 / 作对-01)
(就 / 就-01, ARG3, 锤 / 锤子)
(就 / 就-01, ARG4, 它 / 它)
(就 / 就-01, ARG5, 我 / 我)
(就 / 就-01, time, 想 / 想-05)
(想 / 想-05, ARG6, 我3 / 我)
(想 / 想-05, time, 当 / 当时)
(螺 / 螺丝, mod, 这 / 这个)

Decoded in 99,584 microseconds
Sentence: 小 王子 又 来 打搅 我 的 思绪 了 ：

Spans:
Span 2-3:  又 => 又
Span 0-1:  小 => 小
Span 7-8:  思绪 => 思绪
Span 5-6:  我 => 我
Span 4-5:  打搅 => 打搅-01
Span 3-4:  来 => 来-06
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 7-8:  思绪 => 思绪
Oracle Span 5-6:  我 => 我
Oracle Span 4-5:  打搅 => 打搅-01
Oracle Span 3-4:  来 => 来-05
Oracle Span 1-2:  王子 => 王子

Incorrect span: 来 => 来-06
Incorrect span: 小 => 小
Missing span: 来 => 来-05
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	打搅	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	思绪	_	NN	NN	_	5	dobj	_	_
9	了	_	VV	VV	_	5	conj	_	_
10	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 来-05, arg0, x3 / 王子)
(x0 / 来-05, arg1, x5 / 打搅-01)
(x0 / 来-05, manner, x2 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 打搅-01, arg1, x7 / 思绪)
(x7 / 思绪, poss, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),思绪,思绪,false), Span(5,6,List(1),我,我,false), Span(4,5,List(2),打搅,打搅-01,false), Span(3,4,List(3),来,来-06,false), Span(2,3,List(4),又,又,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小,false)),Map(2 -> 打搅-01, 5 -> 王子, 1 -> 我, 4 -> 又, 6 -> 小, 0 -> 思绪, 3 -> 来-06),Map(又 -> 又, 来 -> 来-06, 我 -> 我, 打 -> 打搅-01, 王 -> 王子, 思 -> 思绪, 小 -> 小))),[Ljava.lang.String;@63475ace,Annotation([Ljava.lang.String;@4988d8b8,[Ljava.lang.String;@c0c2f8d,[Ljava.lang.String;@305b7c14),Annotation([Ljava.lang.String;@6913c1fb,[Ljava.lang.String;@66d18979,[Ledu.cmu.lti.nlp.amr.Dependency;@bccb269),Annotation([Ljava.lang.String;@609cd4d8,[Ljava.lang.String;@17f7cd29,[Ljava.lang.String;@7d8704ef),Annotation([Ljava.lang.String;@13b6aecc,[Ljava.lang.String;@158a8276,[Ledu.cmu.lti.nlp.amr.Entity;@3c3d9b6b))
AMR:
(思 / 思绪, poss, 我 / 我)
(打 / 打搅-01, manner, 来 / 来-06)
(打 / 打搅-01, unit, 思 / 思绪)
(来 / 来-06, manner, 又 / 又)
(来 / 来-06, value, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 41,569 microseconds
Sentence: “ 你 却 认为 花 … ”

Spans:
Span 1-2:  你 => 你
Span 4-5:  花 => 花-01
Span 3-4:  认为 => 认为-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  花 => 花
Oracle Span 3-4:  认为 => 认为-01

Incorrect span: 花 => 花-01
Incorrect span: 认为 => 认为-02
Missing span: 认为 => 认为-01
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	认为	_	VV	VV	_	0	root	_	_
5	花	_	NN	NN	_	4	dobj	_	_
6	…	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 认为-01, arg0, x8 / 你)
(x7 / 认为-01, arg1, x9 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),花,花-01,false), Span(3,4,List(1),认为,认为-02,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 认为-02, 0 -> 花-01),Map(你 -> 你, 认 -> 认为-02, 花 -> 花-01))),[Ljava.lang.String;@79d8407f,Annotation([Ljava.lang.String;@5fbe4146,[Ljava.lang.String;@1e66f1f5,[Ljava.lang.String;@4e50c791),Annotation([Ljava.lang.String;@7530ad9c,[Ljava.lang.String;@58a9760d,[Ledu.cmu.lti.nlp.amr.Dependency;@71e9ddb4),Annotation([Ljava.lang.String;@394df057,[Ljava.lang.String;@4961f6af,[Ljava.lang.String;@5aebe890),Annotation([Ljava.lang.String;@65d09a04,[Ljava.lang.String;@33c911a1,[Ledu.cmu.lti.nlp.amr.Entity;@75db5df9))
AMR:
(认 / 认为-02, degree, 你 / 你)
(认 / 认为-02, example, 花 / 花-01)

Decoded in 11,122 microseconds
Sentence: “ 算了 吧 ！

Spans:
Span 1-2:  算了 => 算了-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  算了 => 算了-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	算了	_	VV	VV	_	0	root	_	_
3	吧	_	SP	SP	_	2	dep	_	_
4	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),算了,算了-01,false)),Map(0 -> 算了-01),Map(算 -> 算了-01))),[Ljava.lang.String;@707194ba,Annotation([Ljava.lang.String;@1190200a,[Ljava.lang.String;@6a2f6f80,[Ljava.lang.String;@45b4c3a9),Annotation([Ljava.lang.String;@399c4be1,[Ljava.lang.String;@291caca8,[Ledu.cmu.lti.nlp.amr.Dependency;@385e9564),Annotation([Ljava.lang.String;@5b94b04d,[Ljava.lang.String;@8c3b9d,[Ljava.lang.String;@4c39bec8),Annotation([Ljava.lang.String;@f79e,[Ljava.lang.String;@7ee8290b,[Ledu.cmu.lti.nlp.amr.Entity;@1f59a598))
AMR:


Decoded in 4,208 microseconds
Sentence: 我 哭 着 说 。

Spans:
Span 1-2:  哭 => 哭-01
Span 0-1:  我 => 我
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  哭 => 哭-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	哭	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	说	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, manner, x3 / 哭-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),说,说-02,false), Span(1,2,List(1),哭,哭-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 哭-01, 0 -> 说-02),Map(哭 -> 哭-01, 我 -> 我, 说 -> 说-02))),[Ljava.lang.String;@1e178745,Annotation([Ljava.lang.String;@192c3f1e,[Ljava.lang.String;@26b3fd41,[Ljava.lang.String;@7494f96a),Annotation([Ljava.lang.String;@561b6512,[Ljava.lang.String;@2e377400,[Ledu.cmu.lti.nlp.amr.Dependency;@1757cd72),Annotation([Ljava.lang.String;@445b295b,[Ljava.lang.String;@49e5f737,[Ljava.lang.String;@5c671d7f),Annotation([Ljava.lang.String;@757277dc,[Ljava.lang.String;@687e99d8,[Ledu.cmu.lti.nlp.amr.Entity;@e4487af))
AMR:
(说 / 说-02, ARG0, 我 / 我)
(说 / 说-02, manner, 哭 / 哭-01)

Decoded in 16,130 microseconds
Sentence: “ 算了 吧 ， 算了 吧 ！

Spans:
Span 4-5:  算了 => 算了-01
Span 1-2:  算了 => 算了-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  算了 => 算了-01
Oracle Span 4-5:  算了 => 算了-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	算了	_	VV	VV	_	5	pccomp	_	_
3	吧	_	SP	SP	_	2	dep	_	_
4	,	_	PU	PU	_	5	punct	_	_
5	算了	_	VV	VV	_	0	root	_	_
6	吧	_	SP	SP	_	5	dep	_	_
7	！	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),算了,算了-01,false), Span(1,2,List(1),算了,算了-01,false)),Map(1 -> 算了-01, 0 -> 算了-01),Map(算2 -> 算了-01, 算 -> 算了-01))),[Ljava.lang.String;@6aaceffd,Annotation([Ljava.lang.String;@c86b9e3,[Ljava.lang.String;@10aa41f2,[Ljava.lang.String;@3af9c5b7),Annotation([Ljava.lang.String;@37271612,[Ljava.lang.String;@ed7f8b4,[Ledu.cmu.lti.nlp.amr.Dependency;@4c309d4d),Annotation([Ljava.lang.String;@38102d01,[Ljava.lang.String;@37883b97,[Ljava.lang.String;@6ab778a),Annotation([Ljava.lang.String;@4e3958e7,[Ljava.lang.String;@77f80c04,[Ledu.cmu.lti.nlp.amr.Entity;@1dac5ef))
AMR:
(算 / 算了-01, manner, 算2 / 算了-01)

Decoded in 10,291 microseconds
Sentence: 我 什么 也 不 认为 ！

Spans:
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 1-2:  什么 => 什么
Span 0-1:  我 => 我
Span 4-5:  认为 => 认为-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  什么 => 什么
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  认为 => 认为-01

Incorrect span: 认为 => 认为-02
Extra span: 不 => 不
Missing span: 认为 => 认为-01
Dependencies:
1	我	_	PN	PN	_	2	dep	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	认为	_	VV	VV	_	0	root	_	_
6	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 认为-01, arg0, x3 / 我)
(x0 / 认为-01, arg1, x5 / 什么)
(x0 / 认为-01, manner, x4 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),认为,认为-02,false), Span(3,4,List(1),不,不,false), Span(2,3,List(2),也,也,false), Span(1,2,List(3),什么,什么,false), Span(0,1,List(4),我,我,false)),Map(2 -> 也, 1 -> 不, 4 -> 我, 0 -> 认为-02, 3 -> 什么),Map(我 -> 我, 也 -> 也, 认 -> 认为-02, 不 -> 不, 什 -> 什么))),[Ljava.lang.String;@5c90e579,Annotation([Ljava.lang.String;@58ea606c,[Ljava.lang.String;@6f45df59,[Ljava.lang.String;@38e79ae3),Annotation([Ljava.lang.String;@63070bab,[Ljava.lang.String;@68e5eea7,[Ledu.cmu.lti.nlp.amr.Dependency;@291b4bf5),Annotation([Ljava.lang.String;@2d2ffcb7,[Ljava.lang.String;@762ef0ea,[Ljava.lang.String;@31f9b85e),Annotation([Ljava.lang.String;@424e1977,[Ljava.lang.String;@10d68fcd,[Ledu.cmu.lti.nlp.amr.Entity;@117e949d))
AMR:
(不 / 不, mod, 什 / 什么)
(认 / 认为-02, manner, 不 / 不)
(认 / 认为-02, manner, 也 / 也)
(认 / 认为-02, polite, 我 / 我)

Decoded in 24,462 microseconds
Sentence: 我 是 随便 回答 你 的 。

Spans:
Span 4-5:  你 => 你
Span 3-4:  回答 => 回答-01
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04
Span 2-3:  随便 => 随便

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  随便 => 随便-01

Incorrect span: 随便 => 随便
Extra span: 是 => 是-04
Missing span: 随便 => 随便-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	随便	_	AD	AD	_	4	advmod	_	_
4	回答	_	VV	VV	_	2	attr	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x3 / 我)
(x0 / 回答-01, arg2, x4 / 你)
(x0 / 回答-01, manner, x2 / 随便-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),回答,回答-01,false), Span(2,3,List(2),随便,随便,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),我,我,false)),Map(2 -> 随便, 1 -> 回答-01, 4 -> 我, 0 -> 你, 3 -> 是-04),Map(我 -> 我, 你 -> 你, 是 -> 是-04, 回 -> 回答-01, 随 -> 随便))),[Ljava.lang.String;@7a675056,Annotation([Ljava.lang.String;@d21a74c,[Ljava.lang.String;@6e509ffa,[Ljava.lang.String;@2898ac89),Annotation([Ljava.lang.String;@683dbc2c,[Ljava.lang.String;@68267da0,[Ledu.cmu.lti.nlp.amr.Dependency;@2638011),Annotation([Ljava.lang.String;@6ff29830,[Ljava.lang.String;@6a2b953e,[Ljava.lang.String;@313b2ea6),Annotation([Ljava.lang.String;@2f465398,[Ljava.lang.String;@548e6d58,[Ledu.cmu.lti.nlp.amr.Entity;@623a8092))
AMR:
(回 / 回答-01, ARG4, 是 / 是-04)
(回 / 回答-01, quarter, 你 / 你)
(我 / 我, ARG3, 是 / 是-04)
(随 / 随便, ARG3, 是 / 是-04)

Decoded in 51,232 microseconds
Sentence: 我 可 有 正经 事 要 做 。 ”

Spans:
Span 4-5:  事 => 事
Span 6-7:  做 => 做-04
Span 1-2:  可 => 可-01
Span 0-1:  我 => 我
Span 2-3:  有 => 有-06
Span 3-4:  正经 => 正经
Span 5-6:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  事 => 事
Oracle Span 6-7:  做 => 做-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  有 => 有-04
Oracle Span 3-4:  正经 => 正经
Oracle Span 5-6:  要 => 要-03

Incorrect span: 做 => 做-04
Incorrect span: 要 => 要-02
Incorrect span: 有 => 有-06
Extra span: 可 => 可-01
Missing span: 有 => 有-04
Missing span: 要 => 要-03
Missing span: 做 => 做-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	可	_	VV	VV	_	3	mmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	正经	_	JJ	JJ	_	5	amod	_	_
5	事	_	NN	NN	_	7	nsubj	_	_
6	要	_	VV	VV	_	7	dep	_	_
7	做	_	VV	VV	_	3	dep	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-04, arg0, x14 / 要-03)
(x14 / 要-03, arg0, x15 / 做-01)
(x15 / 做-01, arg0, x16 / 我)
(x15 / 做-01, arg1, x17 / 事)
(x17 / 事, mod, x18 / 正经)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),做,做-04,false), Span(5,6,List(1),要,要-02,false), Span(4,5,List(2),事,事,false), Span(3,4,List(3),正经,正经,false), Span(2,3,List(4),有,有-06,false), Span(1,2,List(5),可,可-01,false), Span(0,1,List(6),我,我,false)),Map(2 -> 事, 5 -> 可-01, 1 -> 要-02, 4 -> 有-06, 6 -> 我, 0 -> 做-04, 3 -> 正经),Map(我 -> 我, 要 -> 要-02, 正 -> 正经, 事 -> 事, 做 -> 做-04, 可 -> 可-01, 有 -> 有-06))),[Ljava.lang.String;@a1cdc6d,Annotation([Ljava.lang.String;@175b9425,[Ljava.lang.String;@3098cf3b,[Ljava.lang.String;@610f7aa),Annotation([Ljava.lang.String;@6a03bcb1,[Ljava.lang.String;@21b2e768,[Ledu.cmu.lti.nlp.amr.Dependency;@57250572),Annotation([Ljava.lang.String;@5609159b,[Ljava.lang.String;@2118cddf,[Ljava.lang.String;@17a7f733),Annotation([Ljava.lang.String;@68567e20,[Ljava.lang.String;@76ed1b7c,[Ledu.cmu.lti.nlp.amr.Entity;@11fc564b))
AMR:
(事 / 事, mod, 正 / 正经)
(做 / 做-04, manner, 要 / 要-02)
(可 / 可-01, manner, 我 / 我)
(有 / 有-06, manner, 可 / 可-01)
(有 / 有-06, snt11, 正 / 正经)
(要 / 要-02, manner, 事 / 事)

Decoded in 21,057 microseconds
Sentence: 他 惊讶 地 看 着 我 。

Spans:
Span 0-1:  他 => 他
Span 2-3:  地 => 地
Span 1-2:  惊讶 => 惊讶-01
Span 5-6:  我 => 我
Span 3-4:  看 => 看-10

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  惊讶 => 惊讶-01
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  看 => 看-02

Incorrect span: 看 => 看-10
Extra span: 地 => 地
Missing span: 看 => 看-02
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	惊讶	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	看	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 看-02, arg0, x2 / 他)
(x0 / 看-02, arg1, x3 / 我)
(x0 / 看-02, manner, x4 / 惊讶-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),我,我,false), Span(3,4,List(1),看,看-10,false), Span(2,3,List(2),地,地,false), Span(1,2,List(3),惊讶,惊讶-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 地, 1 -> 看-10, 4 -> 他, 0 -> 我, 3 -> 惊讶-01),Map(我 -> 我, 他 -> 他, 惊 -> 惊讶-01, 地 -> 地, 看 -> 看-10))),[Ljava.lang.String;@394a2528,Annotation([Ljava.lang.String;@6236eb5f,[Ljava.lang.String;@7c1e2a9e,[Ljava.lang.String;@fa36558),Annotation([Ljava.lang.String;@672872e1,[Ljava.lang.String;@32910148,[Ledu.cmu.lti.nlp.amr.Dependency;@3f56875e),Annotation([Ljava.lang.String;@2b4bac49,[Ljava.lang.String;@fd07cbb,[Ljava.lang.String;@3571b748),Annotation([Ljava.lang.String;@3e96bacf,[Ljava.lang.String;@484970b0,[Ledu.cmu.lti.nlp.amr.Entity;@4470f8a6))
AMR:
(看 / 看-10, ARG1, 地 / 地)
(看 / 看-10, condition, 我 / 我)
(看 / 看-10, manner, 惊 / 惊讶-01)
(看 / 看-10, season, 他 / 他)

Decoded in 13,681 microseconds
Sentence: “ 正经 事 ？ ”

Spans:
Span 2-3:  事 => 事
Span 1-2:  正经 => 正经

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  事 => 事
Oracle Span 1-2:  正经 => 正经

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	正经	_	VV	VV	_	0	root	_	_
3	事	_	NN	NN	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 事, mod, x3 / 正经)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),事,事,false), Span(1,2,List(1),正经,正经,false)),Map(1 -> 正经, 0 -> 事),Map(正 -> 正经, 事 -> 事))),[Ljava.lang.String;@7c83dc97,Annotation([Ljava.lang.String;@7748410a,[Ljava.lang.String;@740773a3,[Ljava.lang.String;@37f1104d),Annotation([Ljava.lang.String;@55740540,[Ljava.lang.String;@60015ef5,[Ledu.cmu.lti.nlp.amr.Dependency;@2f54a33d),Annotation([Ljava.lang.String;@1018bde2,[Ljava.lang.String;@65b3f4a4,[Ljava.lang.String;@f2ff811),Annotation([Ljava.lang.String;@568ff82,[Ljava.lang.String;@50caa560,[Ledu.cmu.lti.nlp.amr.Entity;@2a266d09))
AMR:
(事 / 事, mod, 正 / 正经)

Decoded in 6,940 microseconds
Sentence: 他 瞅 着 我 手 拿 锤子 ， 手指 沾满 了 油污 ， 伏 在 一 个 在 他 看来 丑不可言 的 机件 上 。

Spans:
Span 20-21:  丑不可言 => 丑不可言
Span 18-19:  他 => 他
Span 0-1:  他 => 他
Span 13-14:  伏 => 伏-01
Span 17-18:  在 => 在-01
Span 14-15:  在 => 在-01
Span 3-4:  我 => 我
Span 4-5:  手 => 手
Span 8-9:  手指 => 手指
Span 5-6:  拿 => 拿-02
Span 22-23:  机件 => 机件
Span 11-12:  油污 => 油污
Span 9-10:  沾满 => 沾满-01
Span 19-20:  看来 => 看来-01
Span 1-2:  瞅 => 瞅-01
Span 6-7:  锤子 => 锤子

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 20-21:  丑不可言 => 丑不可言
Oracle Span 0-1:  他 => 他
Oracle Span 13-14:  伏 => 伏-01
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  手 => 手
Oracle Span 8-9:  手指 => 手指
Oracle Span 5-6:  拿 => 拿-03
Oracle Span 22-23:  机件 => 机件
Oracle Span 11-12:  油污 => 油污
Oracle Span 9-10:  沾满 => 沾满-01
Oracle Span 19-20:  看来 => 看来-01
Oracle Span 1-2:  瞅 => 瞅-01
Oracle Span 6-7:  锤子 => 锤子

Extra span: 他 => 他
Extra span: 在 => 在-01
Extra span: 在 => 在-01
Incorrect span: 拿 => 拿-02
Missing span: 拿 => 拿-03
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	瞅	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	我	_	PN	PN	_	5	nn	_	_
5	手	_	NN	NN	_	6	nsubj	_	_
6	拿	_	VV	VV	_	2	ccomp	_	_
7	锤子	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	手指	_	AD	AD	_	10	advmod	_	_
10	沾满	_	VV	VV	_	6	conj	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	油污	_	NN	NN	_	10	dobj	_	_
13	,	_	PU	PU	_	6	punct	_	_
14	伏	_	VV	VV	_	6	conj	_	_
15	在	_	P	P	_	14	prep	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	23	clf	_	_
18	在	_	P	P	_	20	prep	_	_
19	他	_	PN	PN	_	18	pobj	_	_
20	看来	_	VV	VV	_	23	rcmod	_	_
21	丑不可言	_	NN	NN	_	20	dobj	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	机件	_	NN	NN	_	24	lobj	_	_
24	上	_	LC	LC	_	15	plmod	_	_
25	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 沾满-01, arg0, x11 / 手指)
(x10 / 沾满-01, arg1, x12 / 油污)
(x13 / 伏-01, arg1, x15 / 看来-01)
(x15 / 看来-01, arg1, x17 / 机件)
(x17 / 机件, mod, x19 / 丑不可言)
(x2 / 瞅-01, arg0, x4 / 他)
(x6 / 拿-03, arg0, x7 / 我)
(x6 / 拿-03, arg1, x8 / 锤子)
(x8 / 锤子, location, x9 / 手)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),机件,机件,false), Span(20,21,List(1),丑不可言,丑不可言,false), Span(19,20,List(2),看来,看来-01,false), Span(18,19,List(3),他,他,false), Span(17,18,List(4),在,在-01,false), Span(14,15,List(5),在,在-01,false), Span(13,14,List(6),伏,伏-01,false), Span(11,12,List(7),油污,油污,false), Span(9,10,List(8),沾满,沾满-01,false), Span(8,9,List(9),手指,手指,false), Span(6,7,List(10),锤子,锤子,false), Span(5,6,List(11),拿,拿-02,false), Span(4,5,List(12),手,手,false), Span(3,4,List(13),我,我,false), Span(1,2,List(14),瞅,瞅-01,false), Span(0,1,List(15),他,他,false)),Map(2 -> 看来-01, 5 -> 在-01, 12 -> 手, 15 -> 他, 8 -> 沾满-01, 7 -> 油污, 1 -> 丑不可言, 4 -> 在-01, 11 -> 拿-02, 14 -> 瞅-01, 6 -> 伏-01, 0 -> 机件, 9 -> 手指, 3 -> 他, 10 -> 锤子, 13 -> 我),Map(在2 -> 在-01, 油 -> 油污, 他2 -> 他, 在 -> 在-01, 我 -> 我, 手2 -> 手, 锤 -> 锤子, 丑 -> 丑不可言, 伏 -> 伏-01, 沾 -> 沾满-01, 他 -> 他, 机 -> 机件, 拿 -> 拿-02, 看 -> 看来-01, 瞅 -> 瞅-01, 手 -> 手指))),[Ljava.lang.String;@5ab9e72c,Annotation([Ljava.lang.String;@186f8716,[Ljava.lang.String;@1d8bd0de,[Ljava.lang.String;@45ca843),Annotation([Ljava.lang.String;@11c9af63,[Ljava.lang.String;@757acd7b,[Ledu.cmu.lti.nlp.amr.Dependency;@36b4fe2a),Annotation([Ljava.lang.String;@574b560f,[Ljava.lang.String;@ba54932,[Ljava.lang.String;@28975c28),Annotation([Ljava.lang.String;@3943a2be,[Ljava.lang.String;@343570b7,[Ledu.cmu.lti.nlp.amr.Entity;@157853da))
AMR:
(伏 / 伏-01, direction, 看 / 看来-01)
(在 / 在-01, ARG0, 他 / 他)
(在 / 在-01, degree, 看 / 看来-01)
(在2 / 在-01, ARG5, 伏 / 伏-01)
(在2 / 在-01, time, 拿 / 拿-02)
(拿 / 拿-02, ARG6, 我 / 我)
(拿 / 拿-02, beneficiary, 锤 / 锤子)
(机 / 机件, mod, 丑 / 丑不可言)
(沾 / 沾满-01, ARG3, 手2 / 手)
(沾 / 沾满-01, location, 手 / 手指)
(沾 / 沾满-01, mod, 油 / 油污)
(看 / 看来-01, value, 机 / 机件)
(瞅 / 瞅-01, extent, 拿 / 拿-02)
(瞅 / 瞅-01, prep-from, 他2 / 他)
(锤 / 锤子, location, 手2 / 手)

Decoded in 118,074 microseconds
Sentence: “ 你 说话 就 和 那些 大人 一样 ！ ”

Spans:
Span 7-8:  一样 => 一样
Span 1-2:  你 => 你
Span 6-7:  大人 => 大人
Span 3-4:  就 => 就-01
Span 2-3:  说话 => 说话-01
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  一样 => 一样-02
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  大人 => 大人
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  说话 => 说话-01
Oracle Span 5-6:  那些 => 那些

Incorrect span: 一样 => 一样
Incorrect span: 就 => 就-01
Missing span: 一样 => 一样-02
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你	_	PN	PN	_	8	nsubj	_	_
3	说话	_	VV	VV	_	8	mmod	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	和	_	P	P	_	8	prep	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	大人	_	NN	NN	_	5	pobj	_	_
8	一样	_	VA	VA	_	0	root	_	_
9	！	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 一样-02, arg0, x3 / 说话-01)
(x2 / 一样-02, arg1, x5 / 大人)
(x2 / 一样-02, manner, x7 / 就)
(x3 / 说话-01, arg0, x4 / 你)
(x5 / 大人, mod, x6 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),一样,一样,false), Span(6,7,List(1),大人,大人,false), Span(5,6,List(2),那些,那些,false), Span(3,4,List(3),就,就-01,false), Span(2,3,List(4),说话,说话-01,false), Span(1,2,List(5),你,你,false)),Map(2 -> 那些, 5 -> 你, 1 -> 大人, 4 -> 说话-01, 0 -> 一样, 3 -> 就-01),Map(就 -> 就-01, 你 -> 你, 大 -> 大人, 说 -> 说话-01, 那 -> 那些, 一 -> 一样))),[Ljava.lang.String;@71c3b41,Annotation([Ljava.lang.String;@236e3f4e,[Ljava.lang.String;@3cc1435c,[Ljava.lang.String;@6bf0219d),Annotation([Ljava.lang.String;@dd0c991,[Ljava.lang.String;@5f16132a,[Ledu.cmu.lti.nlp.amr.Dependency;@69fb6037),Annotation([Ljava.lang.String;@36d585c,[Ljava.lang.String;@87a85e1,[Ljava.lang.String;@671a5887),Annotation([Ljava.lang.String;@5552768b,[Ljava.lang.String;@3c947bc5,[Ledu.cmu.lti.nlp.amr.Entity;@609db43b))
AMR:
(一 / 一样, beneficiary, 大 / 大人)
(大 / 大人, mod, 那 / 那些)
(就 / 就-01, degree, 说 / 说话-01)
(说 / 说话-01, direction, 你 / 你)
(那 / 那些, mod, 就 / 就-01)

Decoded in 17,590 microseconds
Sentence: 这 话 使 我 有点 难堪 。

Spans:
Span 2-3:  使 => 使-01
Span 3-4:  我 => 我
Span 4-5:  有点 => 有点-01
Span 1-2:  话 => 话-01
Span 0-1:  这 => 这
Span 5-6:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  有点 => 有点
Oracle Span 1-2:  话 => 话
Oracle Span 0-1:  这 => 这
Oracle Span 5-6:  难堪 => 难堪-01

Incorrect span: 有点 => 有点-01
Extra span: 使 => 使-01
Incorrect span: 话 => 话-01
Missing span: 话 => 话
Missing span: 有点 => 有点
Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	话	_	NN	NN	_	3	nsubj	_	_
3	使	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	有点	_	VV	VV	_	3	dep	_	_
6	难堪	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 话, mod, x13 / 这)
(x8 / 难堪-01, arg0, x11 / 我)
(x8 / 难堪-01, cause, x12 / 话)
(x8 / 难堪-01, degree, x10 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),难堪,难堪-01,false), Span(4,5,List(1),有点,有点-01,false), Span(3,4,List(2),我,我,false), Span(2,3,List(3),使,使-01,false), Span(1,2,List(4),话,话-01,false), Span(0,1,List(5),这,这,false)),Map(2 -> 我, 5 -> 这, 1 -> 有点-01, 4 -> 话-01, 0 -> 难堪-01, 3 -> 使-01),Map(我 -> 我, 难 -> 难堪-01, 这 -> 这, 话 -> 话-01, 使 -> 使-01, 有 -> 有点-01))),[Ljava.lang.String;@55f616cf,Annotation([Ljava.lang.String;@1356d4d4,[Ljava.lang.String;@c03cf28,[Ljava.lang.String;@1329eff),Annotation([Ljava.lang.String;@6497b078,[Ljava.lang.String;@41c2284a,[Ledu.cmu.lti.nlp.amr.Dependency;@53aad5d5),Annotation([Ljava.lang.String;@46fa7c39,[Ljava.lang.String;@1fb700ee,[Ljava.lang.String;@4f67eb2a),Annotation([Ljava.lang.String;@4a668b6e,[Ljava.lang.String;@5f683daf,[Ledu.cmu.lti.nlp.amr.Entity;@78ffe6dc))
AMR:
(使 / 使-01, mod, 这 / 这)
(使 / 使-01, prep-on-behalf, 有 / 有点-01)
(使 / 使-01, value, 我 / 我)
(话 / 话-01, ARG3, 这 / 这)
(难 / 难堪-01, degree, 有 / 有点-01)

Decoded in 15,296 microseconds
Sentence: 可是 他 又 尖刻 无情 地 说道 ： “ 你 什么 都 分 不 清 …

Spans:
Span 13-14:  不 => 不
Span 10-11:  什么 => 什么
Span 1-2:  他 => 他
Span 9-10:  你 => 你
Span 2-3:  又 => 又
Span 5-6:  地 => 地
Span 3-4:  尖刻 => 尖刻-01
Span 4-5:  无情 => 无情-01
Span 6-7:  说道 => 说道
Span 11-12:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  什么 => 什么
Oracle Span 1-2:  他 => 他
Oracle Span 9-10:  你 => 你
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  尖刻 => 尖刻-01
Oracle Span 4-5:  无情 => 无情-01
Oracle Span 6-7:  说道 => 说道-01
Oracle Span 11-12:  都 => 都

Extra span: 不 => 不
Incorrect span: 说道 => 说道
Extra span: 地 => 地
Missing span: 说道 => 说道-01
Dependencies:
1	可是	_	AD	AD	_	7	advmod	_	_
2	他	_	PN	PN	_	7	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	尖刻	_	VV	VV	_	7	dvpmod	_	_
5	无情	_	NN	NN	_	4	dobj	_	_
6	地	_	DEV	DEV	_	4	dvpm	_	_
7	说道	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	13	punct	_	_
10	你	_	PN	PN	_	13	nsubj	_	_
11	什么	_	PN	PN	_	13	nsubj	_	_
12	都	_	AD	AD	_	13	advmod	_	_
13	分	_	VV	VV	_	7	conj	_	_
14	不	_	AD	AD	_	13	neg	_	_
15	清	_	PU	PU	_	7	punct	_	_
16	…	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 说道-01, arg0, x5 / 他)
(x4 / 说道-01, manner, x18 / 又)
(x4 / 说道-01, manner, x6 / 尖刻-01)
(x4 / 说道-01, manner, x7 / 无情-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),不,不,false), Span(11,12,List(1),都,都,false), Span(10,11,List(2),什么,什么,false), Span(9,10,List(3),你,你,false), Span(6,7,List(4),说道,说道,false), Span(5,6,List(5),地,地,false), Span(4,5,List(6),无情,无情-01,false), Span(3,4,List(7),尖刻,尖刻-01,false), Span(2,3,List(8),又,又,false), Span(1,2,List(9),他,他,false)),Map(2 -> 什么, 5 -> 地, 8 -> 又, 7 -> 尖刻-01, 1 -> 都, 4 -> 说道, 6 -> 无情-01, 9 -> 他, 0 -> 不, 3 -> 你),Map(又 -> 又, 尖 -> 尖刻-01, 无 -> 无情-01, 你 -> 你, 他 -> 他, 地 -> 地, 不 -> 不, 说 -> 说道, 什 -> 什么, 都 -> 都))),[Ljava.lang.String;@8317c52,Annotation([Ljava.lang.String;@76f2bbc1,[Ljava.lang.String;@68e965f5,[Ljava.lang.String;@6f27a732),Annotation([Ljava.lang.String;@6c779568,[Ljava.lang.String;@f381794,[Ledu.cmu.lti.nlp.amr.Dependency;@2cdd0d4b),Annotation([Ljava.lang.String;@7e9131d5,[Ljava.lang.String;@2e1d27ba,[Ljava.lang.String;@61d6015a),Annotation([Ljava.lang.String;@2525ff7e,[Ljava.lang.String;@524d6d96,[Ledu.cmu.lti.nlp.amr.Entity;@152aa092))
AMR:
(不 / 不, manner, 都 / 都)
(不 / 不, mod, 什 / 什么)
(他 / 他, part, 尖 / 尖刻-01)
(你 / 你, mod, 什 / 什么)
(地 / 地, mod, 什 / 什么)
(地 / 地, mod, 无 / 无情-01)
(地 / 地, mod, 说 / 说道)
(尖 / 尖刻-01, ARG5, 无 / 无情-01)
(尖 / 尖刻-01, manner, 又 / 又)

Decoded in 33,979 microseconds
Sentence: 你 把 什么 都 混 在 一起 ！ ”

Spans:
Span 6-7:  一起 => 一起
Span 2-3:  什么 => 什么
Span 0-1:  你 => 你
Span 5-6:  在 => 在-01
Span 4-5:  混 => 混-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  混 => 混-01
Oracle Span 3-4:  都 => 都

Extra span: 一起 => 一起
Extra span: 在 => 在-01
Dependencies:
1	你	_	PN	PN	_	7	nsubj	_	_
2	把	_	BA	BA	_	7	ba	_	_
3	什么	_	PN	PN	_	7	nsubj	_	_
4	都	_	AD	AD	_	7	advmod	_	_
5	混	_	AD	AD	_	7	advmod	_	_
6	在	_	AD	AD	_	7	advmod	_	_
7	一起	_	VV	VV	_	0	root	_	_
8	！	_	PU	PU	_	7	punct	_	_
9	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 混-01, arg0, x3 / 你)
(x2 / 混-01, arg1, x4 / 什么)
(x2 / 混-01, manner, x5 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),一起,一起,false), Span(5,6,List(1),在,在-01,false), Span(4,5,List(2),混,混-01,false), Span(3,4,List(3),都,都,false), Span(2,3,List(4),什么,什么,false), Span(0,1,List(5),你,你,false)),Map(2 -> 混-01, 5 -> 你, 1 -> 在-01, 4 -> 什么, 0 -> 一起, 3 -> 都),Map(在 -> 在-01, 你 -> 你, 混 -> 混-01, 什 -> 什么, 都 -> 都, 一 -> 一起))),[Ljava.lang.String;@44a7bfbc,Annotation([Ljava.lang.String;@4ef37659,[Ljava.lang.String;@776b83cc,[Ljava.lang.String;@37858383),Annotation([Ljava.lang.String;@4e268090,[Ljava.lang.String;@1bb266b3,[Ledu.cmu.lti.nlp.amr.Dependency;@306cf3ea),Annotation([Ljava.lang.String;@2beee7ff,[Ljava.lang.String;@5136d012,[Ljava.lang.String;@5939a379),Annotation([Ljava.lang.String;@e1de817,[Ljava.lang.String;@52102734,[Ledu.cmu.lti.nlp.amr.Entity;@3541cb24))
AMR:
(在 / 在-01, manner, 一 / 一起)
(混 / 混-01, manner, 什 / 什么)
(混 / 混-01, manner, 你 / 你)
(混 / 混-01, manner, 在 / 在-01)
(混 / 混-01, manner, 都 / 都)

Decoded in 14,457 microseconds
Sentence: 他 着实 非常 恼火 。

Spans:
Span 0-1:  他 => 他
Span 3-4:  恼火 => 恼火-01
Span 1-2:  着实 => 着实
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  恼火 => 恼火-01
Oracle Span 1-2:  着实 => 着实
Oracle Span 2-3:  非常 => 非常

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	着实	_	VV	VV	_	0	root	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	恼火	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	他	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 恼火-01, arg0, x3 / 他)
(x0 / 恼火-01, degree, x2 / 非常)
(x0 / 恼火-01, manner, x4 / 着实)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),恼火,恼火-01,false), Span(2,3,List(1),非常,非常,false), Span(1,2,List(2),着实,着实,false), Span(0,1,List(3),他,他,false)),Map(2 -> 着实, 1 -> 非常, 0 -> 恼火-01, 3 -> 他),Map(他 -> 他, 非 -> 非常, 恼 -> 恼火-01, 着 -> 着实))),[Ljava.lang.String;@2177849e,Annotation([Ljava.lang.String;@40cb8df7,[Ljava.lang.String;@13b13b5d,[Ljava.lang.String;@2892dae4),Annotation([Ljava.lang.String;@355ce81c,[Ljava.lang.String;@29647f75,[Ledu.cmu.lti.nlp.amr.Dependency;@3315d2d7),Annotation([Ljava.lang.String;@d6e7bab,[Ljava.lang.String;@5fa07e12,[Ljava.lang.String;@55b53d44),Annotation([Ljava.lang.String;@482bce4f,[Ljava.lang.String;@366647c2,[Ledu.cmu.lti.nlp.amr.Entity;@6a6afff2))
AMR:
(恼 / 恼火-01, degree, 非 / 非常)
(恼 / 恼火-01, manner, 着 / 着实)
(着 / 着实, quant, 他 / 他)

Decoded in 8,426 microseconds
Sentence: 摇动 着 脑袋 ， 金黄色 的 头发 随 风 颤动 着 。

Spans:
Span 6-7:  头发 => 头发
Span 0-1:  摇动 => 摇动-01
Span 2-3:  脑袋 => 脑袋
Span 4-5:  金黄色 => 金黄色
Span 7-8:  随 => 随-02
Span 9-10:  颤动 => 颤动-01
Span 8-9:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  头发 => 头发
Oracle Span 0-1:  摇动 => 摇动-01
Oracle Span 2-3:  脑袋 => 脑袋
Oracle Span 4-5:  金黄色 => 金黄色
Oracle Span 9-10:  颤动 => 颤动-01

Extra span: 风 => 风
Extra span: 随 => 随-02
Dependencies:
1	摇动	_	VV	VV	_	10	dep	_	_
2	着	_	AS	AS	_	1	asp	_	_
3	脑袋	_	NN	NN	_	1	dobj	_	_
4	,	_	PU	PU	_	10	punct	_	_
5	金黄色	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	头发	_	NN	NN	_	10	nsubj	_	_
8	随	_	P	P	_	10	prep	_	_
9	风	_	NN	NN	_	8	pobj	_	_
10	颤动	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x10 / 摇动-01, arg1, x11 / 脑袋)
(x12 / 颤动-01, arg0, x13 / 头发)
(x13 / 头发, mod, x14 / 金黄色)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),颤动,颤动-01,false), Span(8,9,List(1),风,风,false), Span(7,8,List(2),随,随-02,false), Span(6,7,List(3),头发,头发,false), Span(4,5,List(4),金黄色,金黄色,false), Span(2,3,List(5),脑袋,脑袋,false), Span(0,1,List(6),摇动,摇动-01,false)),Map(2 -> 随-02, 5 -> 脑袋, 1 -> 风, 4 -> 金黄色, 6 -> 摇动-01, 0 -> 颤动-01, 3 -> 头发),Map(摇 -> 摇动-01, 头 -> 头发, 风 -> 风, 颤 -> 颤动-01, 脑 -> 脑袋, 金 -> 金黄色, 随 -> 随-02))),[Ljava.lang.String;@1649b0e6,Annotation([Ljava.lang.String;@865dd6,[Ljava.lang.String;@4da4253,[Ljava.lang.String;@3972a855),Annotation([Ljava.lang.String;@62e7f11d,[Ljava.lang.String;@503d687a,[Ledu.cmu.lti.nlp.amr.Dependency;@6a370f4),Annotation([Ljava.lang.String;@2abf4075,[Ljava.lang.String;@770d3326,[Ljava.lang.String;@4cc8eb05),Annotation([Ljava.lang.String;@51f116b8,[Ljava.lang.String;@19d481b,[Ledu.cmu.lti.nlp.amr.Entity;@1f97cf0d))
AMR:
(头 / 头发, mod, 金 / 金黄色)
(摇 / 摇动-01, mod, 脑 / 脑袋)
(随 / 随-02, ARG0, 风 / 风)
(随 / 随-02, ARG4, 头 / 头发)
(随 / 随-02, degree, 颤 / 颤动-01)
(随 / 随-02, time, 摇 / 摇动-01)

Decoded in 20,556 microseconds
Sentence: “ 我 到 过 一 个 星球 ， 上面 住 着 一 个 红 脸 先生 。

Spans:
Span 8-9:  上面 => 上面
Span 9-10:  住 => 住-01
Span 15-16:  先生 => 先生
Span 2-3:  到 => 到-01
Span 1-2:  我 => 我
Span 6-7:  星球 => 星球
Span 13-14:  红 => 红-01
Span 14-15:  脸 => 脸
Span 3-4:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  住 => 住-01
Oracle Span 15-16:  先生 => 先生
Oracle Span 2-3:  到 => 到-01
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  星球 => 星球

Extra span: 脸 => 脸
Extra span: 红 => 红-01
Extra span: 上面 => 上面
Extra span: 过 => 过-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	到	_	VV	VV	_	0	root	_	_
4	过	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	星球	_	NN	NN	_	3	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	上面	_	NN	NN	_	10	nsubj	_	_
10	住	_	VV	VV	_	3	conj	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	16	clf	_	_
14	红	_	JJ	JJ	_	16	amod	_	_
15	脸	_	NN	NN	_	16	nn	_	_
16	先生	_	NN	NN	_	10	dobj	_	_
17	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x3 / 到-01, arg0, x4 / 我)
(x3 / 到-01, arg1, x5 / 星球)
(x7 / 住-01, arg0, x8 / 先生)
(x7 / 住-01, arg1, x5 / 星球)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),先生,先生,false), Span(14,15,List(1),脸,脸,false), Span(13,14,List(2),红,红-01,false), Span(9,10,List(3),住,住-01,false), Span(8,9,List(4),上面,上面,false), Span(6,7,List(5),星球,星球,false), Span(3,4,List(6),过,过-01,false), Span(2,3,List(7),到,到-01,false), Span(1,2,List(8),我,我,false)),Map(2 -> 红-01, 5 -> 星球, 8 -> 我, 7 -> 到-01, 1 -> 脸, 4 -> 上面, 6 -> 过-01, 0 -> 先生, 3 -> 住-01),Map(红 -> 红-01, 先 -> 先生, 星 -> 星球, 我 -> 我, 过 -> 过-01, 到 -> 到-01, 脸 -> 脸, 上 -> 上面, 住 -> 住-01))),[Ljava.lang.String;@140c9f39,Annotation([Ljava.lang.String;@4d910fd6,[Ljava.lang.String;@26275bef,[Ljava.lang.String;@7690781),Annotation([Ljava.lang.String;@77eca502,[Ljava.lang.String;@3246fb96,[Ledu.cmu.lti.nlp.amr.Dependency;@2e222612),Annotation([Ljava.lang.String;@61386958,[Ljava.lang.String;@73ee04c8,[Ljava.lang.String;@7671cb68),Annotation([Ljava.lang.String;@49dc7102,[Ljava.lang.String;@6b8ca3c8,[Ledu.cmu.lti.nlp.amr.Entity;@68c72235))
AMR:
(上 / 上面, location, 星 / 星球)
(住 / 住-01, purpose, 红 / 红-01)
(住 / 住-01, time, 上 / 上面)
(先 / 先生, mod, 脸 / 脸)
(到 / 到-01, example, 我 / 我)
(红 / 红-01, part, 脸 / 脸)
(过 / 过-01, degree, 到 / 到-01)
(过 / 过-01, location, 星 / 星球)

Decoded in 37,342 microseconds
Sentence: 他 从来 没 闻 过 一 朵 花 。

Spans:
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 7-8:  花 => 花-01
Span 4-5:  过 => 过-01
Span 3-4:  闻 => 闻-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  花 => 花
Oracle Span 3-4:  闻 => 闻-02

Incorrect span: 花 => 花-01
Extra span: 过 => 过-01
Missing span: 花 => 花
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	从来	_	AD	AD	_	4	advmod	_	_
3	没	_	AD	AD	_	4	neg	_	_
4	闻	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	朵	_	M	M	_	8	clf	_	_
8	花	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 闻-02, arg0, x3 / 他)
(x0 / 闻-02, arg1, x4 / 花)
(x0 / 闻-02, duration, x6 / 从来)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),花,花-01,false), Span(4,5,List(1),过,过-01,false), Span(3,4,List(2),闻,闻-02,false), Span(1,2,List(3),从来,从来,false), Span(0,1,List(4),他,他,false)),Map(2 -> 闻-02, 1 -> 过-01, 4 -> 他, 0 -> 花-01, 3 -> 从来),Map(从 -> 从来, 闻 -> 闻-02, 过 -> 过-01, 他 -> 他, 花 -> 花-01))),[Ljava.lang.String;@10959ece,Annotation([Ljava.lang.String;@3a6bb9bf,[Ljava.lang.String;@34f7cfd9,[Ljava.lang.String;@65f095f8),Annotation([Ljava.lang.String;@59af0466,[Ljava.lang.String;@3e6ef8ad,[Ledu.cmu.lti.nlp.amr.Dependency;@346d61be),Annotation([Ljava.lang.String;@55536d9e,[Ljava.lang.String;@747edf66,[Ljava.lang.String;@3d1cfad4),Annotation([Ljava.lang.String;@62230c58,[Ljava.lang.String;@2cd2a21f,[Ledu.cmu.lti.nlp.amr.Entity;@2e55dd0c))
AMR:
(过 / 过-01, ARG0, 花 / 花-01)
(过 / 过-01, ARG4, 他 / 他)
(闻 / 闻-02, ARG1, 过 / 过-01)
(闻 / 闻-02, duration, 从 / 从来)

Decoded in 12,853 microseconds
Sentence: 他 从来 没有 看 过 一 颗 星星 。

Spans:
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 7-8:  星星 => 星星
Span 3-4:  看 => 看-10
Span 4-5:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  星星 => 星星
Oracle Span 3-4:  看 => 看-02

Extra span: 过 => 过-01
Incorrect span: 看 => 看-10
Missing span: 看 => 看-02
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	从来	_	AD	AD	_	4	advmod	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	看	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	颗	_	M	M	_	8	clf	_	_
8	星星	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 看-02, arg0, x3 / 他)
(x0 / 看-02, arg1, x4 / 星星)
(x0 / 看-02, duration, x6 / 从来)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),星星,星星,false), Span(4,5,List(1),过,过-01,false), Span(3,4,List(2),看,看-10,false), Span(1,2,List(3),从来,从来,false), Span(0,1,List(4),他,他,false)),Map(2 -> 看-10, 1 -> 过-01, 4 -> 他, 0 -> 星星, 3 -> 从来),Map(从 -> 从来, 星 -> 星星, 过 -> 过-01, 他 -> 他, 看 -> 看-10))),[Ljava.lang.String;@74455848,Annotation([Ljava.lang.String;@e7edb54,[Ljava.lang.String;@378542de,[Ljava.lang.String;@3738449f),Annotation([Ljava.lang.String;@69e1dd28,[Ljava.lang.String;@11bd0f3b,[Ledu.cmu.lti.nlp.amr.Dependency;@c333c60),Annotation([Ljava.lang.String;@79da8dc5,[Ljava.lang.String;@1eb5174b,[Ljava.lang.String;@67080771),Annotation([Ljava.lang.String;@72cde7cc,[Ljava.lang.String;@5fd4f8f5,[Ledu.cmu.lti.nlp.amr.Entity;@696da30b))
AMR:
(看 / 看-10, ARG1, 过 / 过-01)
(看 / 看-10, duration, 从 / 从来)
(看 / 看-10, season, 他 / 他)
(过 / 过-01, ARG0, 星 / 星星)

Decoded in 14,922 microseconds
Sentence: 他 什么 人 也 没有 喜欢 过 。

Spans:
Span 3-4:  也 => 也
Span 2-3:  人 => 人
Span 1-2:  什么 => 什么
Span 0-1:  他 => 他
Span 5-6:  喜欢 => 喜欢-01
Span 6-7:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  人 => 人
Oracle Span 1-2:  什么 => 什么
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  喜欢 => 喜欢-01

Extra span: 过 => 过-01
Dependencies:
1	他	_	PN	PN	_	6	nsubj	_	_
2	什么	_	DT	DT	_	3	det	_	_
3	人	_	NN	NN	_	6	dep	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	没有	_	VV	VV	_	6	neg	_	_
6	喜欢	_	VV	VV	_	0	root	_	_
7	过	_	VV	VV	_	6	ccomp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 喜欢-01, arg0, x4 / 他)
(x0 / 喜欢-01, arg1, x5 / 人)
(x0 / 喜欢-01, manner, x3 / 也)
(x5 / 人, mod, x6 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),过,过-01,false), Span(5,6,List(1),喜欢,喜欢-01,false), Span(3,4,List(2),也,也,false), Span(2,3,List(3),人,人,false), Span(1,2,List(4),什么,什么,false), Span(0,1,List(5),他,他,false)),Map(2 -> 也, 5 -> 他, 1 -> 喜欢-01, 4 -> 什么, 0 -> 过-01, 3 -> 人),Map(也 -> 也, 过 -> 过-01, 他 -> 他, 喜 -> 喜欢-01, 什 -> 什么, 人 -> 人))),[Ljava.lang.String;@4e7912d8,Annotation([Ljava.lang.String;@53976f5c,[Ljava.lang.String;@2bfc268b,[Ljava.lang.String;@2f8dad04),Annotation([Ljava.lang.String;@29e495ff,[Ljava.lang.String;@41e1e210,[Ledu.cmu.lti.nlp.amr.Dependency;@be35cd9),Annotation([Ljava.lang.String;@4944252c,[Ljava.lang.String;@44821a96,[Ljava.lang.String;@a3d8174),Annotation([Ljava.lang.String;@1ba9117e,[Ljava.lang.String;@732c2a62,[Ledu.cmu.lti.nlp.amr.Entity;@272ed83b))
AMR:
(人 / 人, mod, 什 / 什么)
(喜 / 喜欢-01, location, 人 / 人)
(喜 / 喜欢-01, manner, 也 / 也)
(喜 / 喜欢-01, prep-along-with, 过 / 过-01)
(喜 / 喜欢-01, subevent, 他 / 他)

Decoded in 19,346 microseconds
Sentence: 除了 算帐 以外 ， 他 什么 也 没有 做 过 。

Spans:
Span 6-7:  也 => 也
Span 5-6:  什么 => 什么
Span 4-5:  他 => 他
Span 8-9:  做 => 做-04
Span 9-10:  过 => 过-01
Span 0-1:  除了 => 除了

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  什么 => 什么
Oracle Span 4-5:  他 => 他
Oracle Span 8-9:  做 => 做-02
Oracle Span 0-1:  除了 => 除了

Extra span: 过 => 过-01
Incorrect span: 做 => 做-04
Extra span: 也 => 也
Missing span: 做 => 做-02
Dependencies:
1	除了	_	P	P	_	9	prep	_	_
2	算帐	_	NN	NN	_	3	lobj	_	_
3	以外	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	9	punct	_	_
5	他	_	PN	PN	_	9	nsubj	_	_
6	什么	_	PN	PN	_	9	nsubj	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	没有	_	VV	VV	_	9	neg	_	_
9	做	_	VV	VV	_	0	root	_	_
10	过	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x3 / 做-02, arg0, x5 / 他)
(x3 / 做-02, arg1, x7 / 什么)
(x8 / 除了, arg2, x3 / 做-02)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),过,过-01,false), Span(8,9,List(1),做,做-04,false), Span(6,7,List(2),也,也,false), Span(5,6,List(3),什么,什么,false), Span(4,5,List(4),他,他,false), Span(0,1,List(5),除了,除了,false)),Map(2 -> 也, 5 -> 除了, 1 -> 做-04, 4 -> 他, 0 -> 过-01, 3 -> 什么),Map(除 -> 除了, 也 -> 也, 过 -> 过-01, 他 -> 他, 做 -> 做-04, 什 -> 什么))),[Ljava.lang.String;@41fecb8b,Annotation([Ljava.lang.String;@120f102b,[Ljava.lang.String;@625732,[Ljava.lang.String;@51dcb805),Annotation([Ljava.lang.String;@66498326,[Ljava.lang.String;@cad498c,[Ledu.cmu.lti.nlp.amr.Dependency;@1e6454ec),Annotation([Ljava.lang.String;@2accdbb5,[Ljava.lang.String;@b62d79,[Ljava.lang.String;@6631f5ca),Annotation([Ljava.lang.String;@5ace1ed4,[Ljava.lang.String;@1613674b,[Ledu.cmu.lti.nlp.amr.Entity;@27ff5d15))
AMR:
(做 / 做-04, ARG1, 过 / 过-01)
(做 / 做-04, manner, 也 / 也)
(做 / 做-04, season, 什 / 什么)
(过 / 过-01, ARG3, 他 / 他)
(除 / 除了, prep-on-behalf, 做 / 做-04)

Decoded in 24,257 microseconds
Sentence: 他 整天 同 你 一样 老是 说 ： ‘ 我 有 正经事 ， 我 是 个 严肃 的 人 ’ 。 这 使 他 傲气 十足 。

Spans:
Span 4-5:  一样 => 一样
Span 16-17:  严肃 => 严肃
Span 18-19:  人 => 人
Span 23-24:  他 => 他
Span 0-1:  他 => 他
Span 3-4:  你 => 你
Span 22-23:  使 => 使-01
Span 2-3:  同 => 同-01
Span 13-14:  我 => 我
Span 9-10:  我 => 我
Span 1-2:  整天 => 整天
Span 14-15:  是 => 是-04
Span 10-11:  有 => 有-06
Span 11-12:  正经事 => 正经事
Span 5-6:  老是 => 老是
Span 6-7:  说 => 说-02
Span 21-22:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  一样 => 一样-02
Oracle Span 16-17:  严肃 => 严肃-01
Oracle Span 18-19:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  整天 => 整天
Oracle Span 10-11:  有 => 有-01
Oracle Span 11-12:  正经事 => 正经事
Oracle Span 5-6:  老是 => 老是
Oracle Span 6-7:  说 => 说-01

Extra span: 他 => 他
Extra span: 使 => 使-01
Extra span: 这 => 这
Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Extra span: 我 => 我
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Incorrect span: 一样 => 一样
Extra span: 同 => 同-01
Missing span: 一样 => 一样-02
Missing span: 说 => 说-01
Missing span: 有 => 有-01
Missing span: 严肃 => 严肃-01
Dependencies:
1	他	_	PN	PN	_	7	nsubj	_	_
2	整天	_	AD	AD	_	5	advmod	_	_
3	同	_	P	P	_	5	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	一样	_	VA	VA	_	6	rcmod	_	_
6	老是	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	‘	_	PU	PU	_	11	punct	_	_
10	我	_	PN	PN	_	11	top	_	_
11	有	_	VE	VE	_	7	ccomp	_	_
12	正经事	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	我	_	PN	PN	_	15	top	_	_
15	是	_	VC	VC	_	11	conj	_	_
16	个	_	M	M	_	19	clf	_	_
17	严肃	_	JJ	JJ	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	人	_	NN	NN	_	15	attr	_	_
20	’	_	PU	PU	_	7	punct	_	_
21	。	_	PU	PU	_	7	punct	_	_
22	这	_	PN	PN	_	23	nsubj	_	_
23	使	_	VV	VV	_	7	conj	_	_
24	他	_	PN	PN	_	23	dobj	_	_
25	傲气	_	VV	VV	_	23	dep	_	_
26	十足	_	CD	CD	_	25	range	_	_
27	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x24 / 一样-02, arg1, x26 / 你)
(x24 / 一样-02, time, x27 / 整天)
(x29 / 说-01, manner, x30 / 老是)
(x33 / 有-01, arg1, x36 / 正经事)
(x37 / 人, mod, x38 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),他,他,false), Span(22,23,List(1),使,使-01,false), Span(21,22,List(2),这,这,false), Span(18,19,List(3),人,人,false), Span(16,17,List(4),严肃,严肃,false), Span(14,15,List(5),是,是-04,false), Span(13,14,List(6),我,我,false), Span(11,12,List(7),正经事,正经事,false), Span(10,11,List(8),有,有-06,false), Span(9,10,List(9),我,我,false), Span(6,7,List(10),说,说-02,false), Span(5,6,List(11),老是,老是,false), Span(4,5,List(12),一样,一样,false), Span(3,4,List(13),你,你,false), Span(2,3,List(14),同,同-01,false), Span(1,2,List(15),整天,整天,false), Span(0,1,List(16),他,他,false)),Map(2 -> 这, 5 -> 是-04, 12 -> 一样, 15 -> 整天, 8 -> 有-06, 7 -> 正经事, 1 -> 使-01, 4 -> 严肃, 11 -> 老是, 14 -> 同-01, 6 -> 我, 0 -> 他, 9 -> 我, 16 -> 他, 3 -> 人, 10 -> 说-02, 13 -> 你),Map(他2 -> 他, 我 -> 我, 这 -> 这, 整 -> 整天, 你 -> 你, 我2 -> 我, 同 -> 同-01, 正 -> 正经事, 他 -> 他, 严 -> 严肃, 说 -> 说-02, 老 -> 老是, 使 -> 使-01, 人 -> 人, 是 -> 是-04, 一 -> 一样, 有 -> 有-06))),[Ljava.lang.String;@4e096385,Annotation([Ljava.lang.String;@649bec2e,[Ljava.lang.String;@693fe6c9,[Ljava.lang.String;@34f5090e),Annotation([Ljava.lang.String;@31e5415e,[Ljava.lang.String;@a2431d0,[Ledu.cmu.lti.nlp.amr.Dependency;@1cbb87f3),Annotation([Ljava.lang.String;@1a4013,[Ljava.lang.String;@1b6e1eff,[Ljava.lang.String;@306f16f3),Annotation([Ljava.lang.String;@702b8b12,[Ljava.lang.String;@22e357dc,[Ledu.cmu.lti.nlp.amr.Entity;@49912c99))
AMR:
(一 / 一样, mod, 你 / 你)
(一 / 一样, mod, 同 / 同-01)
(严 / 严肃, degree, 是 / 是-04)
(人 / 人, mod, 严 / 严肃)
(使 / 使-01, mod, 这 / 这)
(使 / 使-01, prep-along-with, 他 / 他)
(使 / 使-01, prep-following, 人 / 人)
(同 / 同-01, time, 整 / 整天)
(整 / 整天, quant, 他2 / 他)
(是 / 是-04, manner, 我 / 我)
(是 / 是-04, manner, 有 / 有-06)
(有 / 有-06, manner, 我2 / 我)
(正 / 正经事, mod, 有 / 有-06)
(老 / 老是, mod, 一 / 一样)
(说 / 说-02, time, 老 / 老是)
(说 / 说-02, topic, 有 / 有-06)

Decoded in 94,236 microseconds
Sentence: 他 简直 不 象 是 个 人 ， 他 是 个 蘑菇 。 ”

Spans:
Span 2-3:  不 => 不
Span 6-7:  人 => 人
Span 8-9:  他 => 他
Span 0-1:  他 => 他
Span 9-10:  是 => 是-04
Span 4-5:  是 => 是-04
Span 1-2:  简直 => 简直
Span 11-12:  蘑菇 => 蘑菇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  简直 => 简直
Oracle Span 11-12:  蘑菇 => 蘑菇

Extra span: 是 => 是-04
Extra span: 他 => 他
Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	简直	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	象	_	VA	VA	_	5	conj	_	_
5	是	_	VC	VC	_	2	ccomp	_	_
6	个	_	M	M	_	7	dep	_	_
7	人	_	NN	NN	_	5	attr	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	他	_	PN	PN	_	10	top	_	_
10	是	_	VC	VC	_	5	dep	_	_
11	个	_	M	M	_	12	dep	_	_
12	蘑菇	_	NN	NN	_	10	attr	_	_
13	。	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_
15	象	_	VA	VA	_	5	top	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),蘑菇,蘑菇,false), Span(9,10,List(1),是,是-04,false), Span(8,9,List(2),他,他,false), Span(6,7,List(3),人,人,false), Span(4,5,List(4),是,是-04,false), Span(2,3,List(5),不,不,false), Span(1,2,List(6),简直,简直,false), Span(0,1,List(7),他,他,false)),Map(2 -> 他, 5 -> 不, 7 -> 他, 1 -> 是-04, 4 -> 是-04, 6 -> 简直, 0 -> 蘑菇, 3 -> 人),Map(他2 -> 他, 简 -> 简直, 他 -> 他, 不 -> 不, 蘑 -> 蘑菇, 人 -> 人, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@10163d6,Annotation([Ljava.lang.String;@2dde1bff,[Ljava.lang.String;@15bbf42f,[Ljava.lang.String;@550ee7e5),Annotation([Ljava.lang.String;@5f9b2141,[Ljava.lang.String;@247d8ae,[Ledu.cmu.lti.nlp.amr.Dependency;@48974e45),Annotation([Ljava.lang.String;@6a84a97d,[Ljava.lang.String;@6c130c45,[Ljava.lang.String;@50ad3bc1),Annotation([Ljava.lang.String;@223aa2f7,[Ljava.lang.String;@6d3a388c,[Ledu.cmu.lti.nlp.amr.Entity;@193f604a))
AMR:
(人 / 人, mod, 是2 / 是-04)
(是 / 是-04, prep-following, 他 / 他)
(是 / 是-04, time, 是2 / 是-04)
(是2 / 是-04, manner, 不 / 不)
(简 / 简直, location, 不 / 不)
(简 / 简直, quant, 他2 / 他)
(蘑 / 蘑菇, mod, 是 / 是-04)

Decoded in 22,611 microseconds
Sentence: “ 是 个 什么 ？ ”

Spans:
Span 3-4:  什么 => 什么
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span: 什么 => 什么
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	什么	_	PN	PN	_	2	attr	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),什么,什么,false), Span(1,2,List(1),是,是-04,false)),Map(1 -> 是-04, 0 -> 什么),Map(什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@20f5239f,Annotation([Ljava.lang.String;@57af006c,[Ljava.lang.String;@6bedbc4d,[Ljava.lang.String;@932bc4a),Annotation([Ljava.lang.String;@d29f28,[Ljava.lang.String;@2fd1433e,[Ledu.cmu.lti.nlp.amr.Dependency;@29d89d5d),Annotation([Ljava.lang.String;@3514a4c0,[Ljava.lang.String;@212b5695,[Ljava.lang.String;@446293d),Annotation([Ljava.lang.String;@69997e9d,[Ljava.lang.String;@793be5ca,[Ledu.cmu.lti.nlp.amr.Entity;@2df9b86))
AMR:
(什 / 什么, mod, 是 / 是-04)

Decoded in 7,546 microseconds
Sentence: “ 是 个 蘑菇 ！ ”

Spans:
Span 1-2:  是 => 是-04
Span 3-4:  蘑菇 => 蘑菇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  蘑菇 => 蘑菇

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	蘑菇	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),蘑菇,蘑菇,false), Span(1,2,List(1),是,是-04,false)),Map(1 -> 是-04, 0 -> 蘑菇),Map(蘑 -> 蘑菇, 是 -> 是-04))),[Ljava.lang.String;@37654521,Annotation([Ljava.lang.String;@15aab8c6,[Ljava.lang.String;@33990a0c,[Ljava.lang.String;@4de4b452),Annotation([Ljava.lang.String;@50b5ac82,[Ljava.lang.String;@101952da,[Ledu.cmu.lti.nlp.amr.Dependency;@6babf3bf),Annotation([Ljava.lang.String;@3059cbc,[Ljava.lang.String;@7ea9e1e2,[Ljava.lang.String;@24fcf36f),Annotation([Ljava.lang.String;@10feca44,[Ljava.lang.String;@3fb1549b,[Ledu.cmu.lti.nlp.amr.Entity;@ea6147e))
AMR:
(是 / 是-04, prep-through, 蘑 / 蘑菇)

Decoded in 6,397 microseconds
Sentence: 小 王子 当时 气 得 脸色 发 白。

Spans:
Span 0-1:  小 => 小
Span 2-3:  当时 => 当时
Span 4-5:  得 => 得-06
Span 3-4:  气 => 气-01
Span 1-2:  王子 => 王子
Span 5-6:  脸色 => 脸色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  当时 => 当时
Oracle Span 3-4:  气 => 气-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  脸色 => 脸色

Extra span: 得 => 得-06
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nn	_	_
3	当时	_	NT	NT	_	4	nn	_	_
4	气	_	NN	NN	_	7	nsubj	_	_
5	得	_	VV	VV	_	7	mmod	_	_
6	脸色	_	AD	AD	_	7	advmod	_	_
7	发	_	VV	VV	_	0	root	_	_
8	白。	_	NN	NN	_	7	dobj	_	_

Oracle:
(x0 / 气-01, arg0, x2 / 王子)
(x0 / 气-01, time, x4 / 当时)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),脸色,脸色,false), Span(4,5,List(1),得,得-06,false), Span(3,4,List(2),气,气-01,false), Span(2,3,List(3),当时,当时,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小,false)),Map(2 -> 气-01, 5 -> 小, 1 -> 得-06, 4 -> 王子, 0 -> 脸色, 3 -> 当时),Map(得 -> 得-06, 王 -> 王子, 气 -> 气-01, 小 -> 小, 脸 -> 脸色, 当 -> 当时))),[Ljava.lang.String;@4d02f94e,Annotation([Ljava.lang.String;@2b48a640,[Ljava.lang.String;@1e683a3e,[Ljava.lang.String;@2053d869),Annotation([Ljava.lang.String;@7a419da4,[Ljava.lang.String;@14555e0a,[Ledu.cmu.lti.nlp.amr.Dependency;@4bb33f74),Annotation([Ljava.lang.String;@759d26fb,[Ljava.lang.String;@3c73951,[Ljava.lang.String;@3d5c822d),Annotation([Ljava.lang.String;@6f46426d,[Ljava.lang.String;@73700b80,[Ledu.cmu.lti.nlp.amr.Entity;@49c7b90e))
AMR:
(得 / 得-06, ARG3, 气 / 气-01)
(得 / 得-06, ARG5, 脸 / 脸色)
(气 / 气-01, ARG1, 王 / 王子)
(气 / 气-01, time, 当 / 当时)
(王 / 王子, mod, 小 / 小)

Decoded in 24,446 microseconds
Sentence: “ 几百万 年 以来 花儿 都 在 制造 着 刺 ，

Spans:
Span 7-8:  制造 => 制造-01
Span 9-10:  刺 => 刺-01
Span 6-7:  在 => 在-01
Span 2-3:  年 => 年
Span 4-5:  花儿 => 花儿
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  制造 => 制造-01
Oracle Span 9-10:  刺 => 刺
Oracle Span 2-3:  年 => (temporal-quantity :unit 年)
Oracle Span 4-5:  花儿 => 花儿

Incorrect span: 刺 => 刺-01
Extra span: 在 => 在-01
Extra span: 都 => 都
Incorrect span: 年 => 年
Missing span: 年 => (temporal-quantity :unit 年)
Missing span: 刺 => 刺
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	几百万	_	CD	CD	_	3	nummod	_	_
3	年	_	M	M	_	4	lobj	_	_
4	以来	_	LC	LC	_	5	dep	_	_
5	花儿	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	在	_	VV	VV	_	0	root	_	_
8	制造	_	VV	VV	_	7	conj	_	_
9	着	_	AS	AS	_	8	asp	_	_
10	刺	_	VV	VV	_	8	dep	_	_
11	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 制造-01, arg0, x3 / 花儿)
(x2 / 制造-01, arg1, x4 / 刺)
(x6 / temporal-quantity, unit, x9 / 年)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),刺,刺-01,false), Span(7,8,List(1),制造,制造-01,false), Span(6,7,List(2),在,在-01,false), Span(5,6,List(3),都,都,false), Span(4,5,List(4),花儿,花儿,false), Span(2,3,List(5),年,年,false)),Map(2 -> 在-01, 5 -> 年, 1 -> 制造-01, 4 -> 花儿, 0 -> 刺-01, 3 -> 都),Map(在 -> 在-01, 刺 -> 刺-01, 制 -> 制造-01, 年 -> 年, 花 -> 花儿, 都 -> 都))),[Ljava.lang.String;@3e84448c,Annotation([Ljava.lang.String;@4a7f959b,[Ljava.lang.String;@429bffaa,[Ljava.lang.String;@5403f35f),Annotation([Ljava.lang.String;@483f6d77,[Ljava.lang.String;@7e5afaa6,[Ledu.cmu.lti.nlp.amr.Dependency;@63a12c68),Annotation([Ljava.lang.String;@28f3b248,[Ljava.lang.String;@1b1426f4,[Ljava.lang.String;@32b260fa),Annotation([Ljava.lang.String;@581ac8a8,[Ljava.lang.String;@6d4e5011,[Ledu.cmu.lti.nlp.amr.Entity;@57d7f8ca))
AMR:
(制 / 制造-01, purpose, 刺 / 刺-01)
(在 / 在-01, location, 花 / 花儿)
(在 / 在-01, manner, 都 / 都)
(在 / 在-01, purpose, 制 / 制造-01)
(年 / 年, purpose, 在 / 在-01)

Decoded in 18,510 microseconds
Sentence: 几百万 年 以来 羊 仍然 在 吃 花 。

Spans:
Span 4-5:  仍然 => 仍然
Span 6-7:  吃 => (thing :arg1-of 吃-01)
Span 5-6:  在 => 在-01
Span 1-2:  年 => 年
Span 3-4:  羊 => 羊
Span 7-8:  花 => 花-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 要 搞 清楚 为什么 花儿 费 那么 大 劲 给 自己 制造 没有 什么 用 的 刺 ， 这 难道 不 是 正经 事 ？

Spans:
Span 20-21:  不 => 不
Span 23-24:  事 => 事
Span 13-14:  什么 => 什么
Span 11-12:  制造 => 制造-01
Span 16-17:  刺 => 刺-01
Span 8-9:  劲 => 劲
Span 7-8:  大 => 大
Span 1-2:  搞 => 搞-04
Span 21-22:  是 => 是-04
Span 22-23:  正经 => 正经
Span 2-3:  清楚 => 清楚-01
Span 14-15:  用 => 用
Span 9-10:  给 => 给-02
Span 10-11:  自己 => 自己
Span 4-5:  花儿 => 花儿
Span 0-1:  要 => 要-02
Span 5-6:  费 => 费-01
Span 18-19:  这 => 这
Span 6-7:  那么 => 那么
Span 19-20:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 23-24:  事 => 事
Oracle Span 11-12:  制造 => 制造-01
Oracle Span 16-17:  刺 => 刺
Oracle Span 8-9:  劲 => 劲
Oracle Span 7-8:  大 => 大-01
Oracle Span 1-2:  搞 => 搞-04
Oracle Span 22-23:  正经 => 正经
Oracle Span 2-3:  清楚 => 清楚-01
Oracle Span 4-5:  花儿 => 花儿
Oracle Span 0-1:  要 => 要-03
Oracle Span 5-6:  费 => 费-01
Oracle Span 6-7:  那么 => 那么
Oracle Span 19-20:  难道 => 难道

Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 这 => 这
Incorrect span: 刺 => 刺-01
Extra span: 用 => 用
Extra span: 什么 => 什么
Extra span: 自己 => 自己
Extra span: 给 => 给-02
Incorrect span: 大 => 大
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 刺 => 刺
Missing span: 大 => 大-01
Dependencies:
1	要	_	VV	VV	_	2	mmod	_	_
2	搞	_	VV	VV	_	5	dep	_	_
3	清楚	_	VA	VA	_	2	dep	_	_
4	为什么	_	AD	AD	_	5	advmod	_	_
5	花儿	_	VV	VV	_	0	root	_	_
6	费	_	NN	NN	_	5	dobj	_	_
7	那么	_	AD	AD	_	12	advmod	_	_
8	大	_	JJ	JJ	_	9	amod	_	_
9	劲	_	NN	NN	_	12	nsubj	_	_
10	给	_	P	P	_	12	prep	_	_
11	自己	_	PN	PN	_	10	pobj	_	_
12	制造	_	VV	VV	_	5	dep	_	_
13	没有	_	VE	VE	_	17	rcmod	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	用	_	NN	NN	_	13	dobj	_	_
16	的	_	DEC	DEC	_	13	cpm	_	_
17	刺	_	NN	NN	_	12	dobj	_	_
18	,	_	PU	PU	_	5	punct	_	_
19	这	_	DT	DT	_	20	det	_	_
20	难道	_	NN	NN	_	22	nsubj	_	_
21	不	_	AD	AD	_	22	neg	_	_
22	是	_	VC	VC	_	5	dep	_	_
23	正经	_	JJ	JJ	_	24	amod	_	_
24	事	_	NN	NN	_	22	attr	_	_
25	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 事, domain, x5 / 要-03)
(x0 / 事, manner, x4 / 难道)
(x0 / 事, mod, x2 / 正经)
(x11 / 劲, mod, x12 / 大-01)
(x12 / 大-01, degree, x13 / 那么)
(x15 / 制造-01, arg1, x17 / 刺)
(x5 / 要-03, arg0, x7 / 搞-04)
(x7 / 搞-04, arg1, x8 / 费-01)
(x7 / 搞-04, manner, x9 / 清楚-01)
(x8 / 费-01, arg0, x10 / 花儿)
(x8 / 费-01, arg1, x11 / 劲)
(x8 / 费-01, purpose, x15 / 制造-01)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),事,事,false), Span(22,23,List(1),正经,正经,false), Span(21,22,List(2),是,是-04,false), Span(20,21,List(3),不,不,false), Span(19,20,List(4),难道,难道,false), Span(18,19,List(5),这,这,false), Span(16,17,List(6),刺,刺-01,false), Span(14,15,List(7),用,用,false), Span(13,14,List(8),什么,什么,false), Span(11,12,List(9),制造,制造-01,false), Span(10,11,List(10),自己,自己,false), Span(9,10,List(11),给,给-02,false), Span(8,9,List(12),劲,劲,false), Span(7,8,List(13),大,大,false), Span(6,7,List(14),那么,那么,false), Span(5,6,List(15),费,费-01,false), Span(4,5,List(16),花儿,花儿,false), Span(2,3,List(17),清楚,清楚-01,false), Span(1,2,List(18),搞,搞-04,false), Span(0,1,List(19),要,要-02,false)),Map(2 -> 是-04, 5 -> 这, 12 -> 劲, 15 -> 费-01, 8 -> 什么, 18 -> 搞-04, 7 -> 用, 17 -> 清楚-01, 1 -> 正经, 4 -> 难道, 11 -> 给-02, 14 -> 那么, 6 -> 刺-01, 0 -> 事, 9 -> 制造-01, 16 -> 花儿, 19 -> 要-02, 3 -> 不, 10 -> 自己, 13 -> 大),Map(清 -> 清楚-01, 费 -> 费-01, 劲 -> 劲, 自 -> 自己, 用 -> 用, 难 -> 难道, 刺 -> 刺-01, 要 -> 要-02, 这 -> 这, 大 -> 大, 正 -> 正经, 给 -> 给-02, 制 -> 制造-01, 花 -> 花儿, 事 -> 事, 不 -> 不, 搞 -> 搞-04, 那 -> 那么, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@78123e82,Annotation([Ljava.lang.String;@67c33749,[Ljava.lang.String;@fba92d3,[Ljava.lang.String;@662b4c69),Annotation([Ljava.lang.String;@fa49800,[Ljava.lang.String;@71238fc2,[Ledu.cmu.lti.nlp.amr.Dependency;@2a54a73f),Annotation([Ljava.lang.String;@16a0ee18,[Ljava.lang.String;@3d6f0054,[Ljava.lang.String;@505fc5a4),Annotation([Ljava.lang.String;@5fbdfdcf,[Ljava.lang.String;@4efc180e,[Ledu.cmu.lti.nlp.amr.Entity;@bd4dc25))
AMR:
(事 / 事, domain, 这 / 这)
(事 / 事, mod, 正 / 正经)
(制 / 制造-01, manner, 用 / 用)
(制 / 制造-01, manner, 给 / 给-02)
(刺 / 刺-01, manner, 用 / 用)
(刺 / 刺-01, manner, 难 / 难道)
(劲 / 劲, mod, 大 / 大)
(搞 / 搞-04, manner, 清 / 清楚-01)
(搞 / 搞-04, manner, 要 / 要-02)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, manner, 正 / 正经)
(是 / 是-04, manner, 难 / 难道)
(用 / 用, mod, 什 / 什么)
(给 / 给-02, manner, 劲 / 劲)
(自 / 自己, purpose, 制 / 制造-01)
(费 / 费-01, location, 花 / 花儿)
(费 / 费-01, manner, 清 / 清楚-01)
(费 / 费-01, manner, 那 / 那么)
(费 / 费-01, purpose, 给 / 给-02)

Decoded in 135,725 microseconds
Sentence: 难道 羊 和 花 之间 的 战争 不 重要 ？

Spans:
Span 7-8:  不 => 不
Span 6-7:  战争 => 战争
Span 1-2:  羊 => 羊
Span 3-4:  花 => 花-01
Span 8-9:  重要 => 重要-01
Span 0-1:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  战争 => 战争
Oracle Span 1-2:  羊 => 羊
Oracle Span 3-4:  花 => 花
Oracle Span 8-9:  重要 => 重要-01
Oracle Span 0-1:  难道 => 难道

Extra span: 不 => 不
Incorrect span: 花 => 花-01
Missing span: 花 => 花
Dependencies:
1	难道	_	VV	VV	_	0	root	_	_
2	羊	_	NN	NN	_	4	conj	_	_
3	和	_	CC	CC	_	4	cc	_	_
4	花	_	NN	NN	_	5	lobj	_	_
5	之间	_	LC	LC	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	战争	_	NN	NN	_	1	dobj	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	重要	_	VA	VA	_	1	conj	_	_
10	？	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 重要-01, arg0, x3 / 战争)
(x0 / 重要-01, manner, x6 / 难道)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),重要,重要-01,false), Span(7,8,List(1),不,不,false), Span(6,7,List(2),战争,战争,false), Span(3,4,List(3),花,花-01,false), Span(1,2,List(4),羊,羊,false), Span(0,1,List(5),难道,难道,false)),Map(2 -> 战争, 5 -> 难道, 1 -> 不, 4 -> 羊, 0 -> 重要-01, 3 -> 花-01),Map(难 -> 难道, 重 -> 重要-01, 羊 -> 羊, 花 -> 花-01, 不 -> 不, 战 -> 战争))),[Ljava.lang.String;@25084a1e,Annotation([Ljava.lang.String;@156b88f5,[Ljava.lang.String;@3bf9ce3e,[Ljava.lang.String;@16610890),Annotation([Ljava.lang.String;@71def8f8,[Ljava.lang.String;@383bfa16,[Ledu.cmu.lti.nlp.amr.Dependency;@4d465b11),Annotation([Ljava.lang.String;@53fdffa1,[Ljava.lang.String;@5562c41e,[Ljava.lang.String;@32ee6fee),Annotation([Ljava.lang.String;@4d0f2471,[Ljava.lang.String;@7133da86,[Ledu.cmu.lti.nlp.amr.Entity;@3232a28a))
AMR:
(羊 / 羊, prep-on, 花 / 花-01)
(花 / 花-01, manner, 难 / 难道)
(重 / 重要-01, manner, 不 / 不)
(重 / 重要-01, manner, 战 / 战争)
(重 / 重要-01, manner, 花 / 花-01)

Decoded in 24,621 microseconds
Sentence: 这 难道 不 比 那个 大 胖子 红 脸 先生 的 帐目 更 重要 ？

Spans:
Span 2-3:  不 => 不
Span 9-10:  先生 => 先生
Span 5-6:  大 => 大
Span 12-13:  更 => 更-01
Span 7-8:  红 => 红-01
Span 6-7:  胖子 => 胖子
Span 8-9:  脸 => 脸
Span 0-1:  这 => 这
Span 4-5:  那个 => 那个
Span 13-14:  重要 => 重要-01
Span 1-2:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  先生 => 先生
Oracle Span 5-6:  大 => 大-01
Oracle Span 12-13:  更 => 更-01
Oracle Span 6-7:  胖子 => 胖子
Oracle Span 0-1:  这 => 这
Oracle Span 13-14:  重要 => 重要-01

Extra span: 脸 => 脸
Extra span: 红 => 红-01
Incorrect span: 大 => 大
Extra span: 那个 => 那个
Extra span: 不 => 不
Extra span: 难道 => 难道
Missing span: 大 => 大-01
Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	14	neg	_	_
4	比	_	P	P	_	14	prep	_	_
5	那个	_	NR	NR	_	7	nn	_	_
6	大	_	JJ	JJ	_	7	amod	_	_
7	胖子	_	NN	NN	_	9	nn	_	_
8	红	_	JJ	JJ	_	9	amod	_	_
9	脸	_	NN	NN	_	10	nn	_	_
10	先生	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	帐目	_	NN	NN	_	4	pobj	_	_
13	更	_	AD	AD	_	14	advmod	_	_
14	重要	_	VA	VA	_	2	ccomp	_	_
15	？	_	PU	PU	_	2	punct	_	_
16	这	_	PN	PN	_	14	xsubj	_	_

Oracle:
(x21 / 重要-01, arg0, x24 / 这)
(x21 / 重要-01, degree, x23 / 更-01)
(x26 / 先生, mod, x28 / 胖子)
(x28 / 胖子, mod, x29 / 大-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),重要,重要-01,false), Span(12,13,List(1),更,更-01,false), Span(9,10,List(2),先生,先生,false), Span(8,9,List(3),脸,脸,false), Span(7,8,List(4),红,红-01,false), Span(6,7,List(5),胖子,胖子,false), Span(5,6,List(6),大,大,false), Span(4,5,List(7),那个,那个,false), Span(2,3,List(8),不,不,false), Span(1,2,List(9),难道,难道,false), Span(0,1,List(10),这,这,false)),Map(2 -> 先生, 5 -> 胖子, 8 -> 不, 7 -> 那个, 1 -> 更-01, 4 -> 红-01, 6 -> 大, 9 -> 难道, 0 -> 重要-01, 10 -> 这, 3 -> 脸),Map(红 -> 红-01, 先 -> 先生, 难 -> 难道, 重 -> 重要-01, 这 -> 这, 大 -> 大, 胖 -> 胖子, 不 -> 不, 脸 -> 脸, 那 -> 那个, 更 -> 更-01))),[Ljava.lang.String;@73e22a3d,Annotation([Ljava.lang.String;@47faa49c,[Ljava.lang.String;@28f2a10f,[Ljava.lang.String;@f736069),Annotation([Ljava.lang.String;@6da21078,[Ljava.lang.String;@7fee8714,[Ledu.cmu.lti.nlp.amr.Dependency;@4229bb3f),Annotation([Ljava.lang.String;@56cdfb3b,[Ljava.lang.String;@2b91004a,[Ljava.lang.String;@20ccf40b),Annotation([Ljava.lang.String;@2fb3536e,[Ljava.lang.String;@169e6180,[Ledu.cmu.lti.nlp.amr.Entity;@35aea049))
AMR:
(不 / 不, manner, 难 / 难道)
(不 / 不, mod, 这 / 这)
(先 / 先生, mod, 脸 / 脸)
(先 / 先生, source, 更 / 更-01)
(大 / 大, mod, 那 / 那个)
(红 / 红-01, manner, 胖 / 胖子)
(红 / 红-01, topic, 脸 / 脸)
(胖 / 胖子, mod, 大 / 大)
(那 / 那个, mod, 不 / 不)
(重 / 重要-01, degree, 更 / 更-01)

Decoded in 87,672 microseconds
Sentence: 如果 我 认识 一 朵 人世 间 唯一 的 花 ， 只有 我 的 星球 上 有 它 ， 别的 地方 都 不 存在 ， 而 一 只 小羊 胡里胡涂 就 这样 把 它 一下子 毁掉 了 ，

NER Entity: (person :name (name :op "胡里胡涂"))
Spans:
Span 34-35:  一下子 => 一下子
Span 22-23:  不 => 不
Span 19-20:  别的 => 别的
Span 27-28:  只 => 只
Span 11-12:  只有 => 只有-01
Span 7-8:  唯一 => 唯一
Span 20-21:  地方 => 地方
Span 23-24:  存在 => 存在-01
Span 33-34:  它 => 它
Span 17-18:  它 => 它
Span 30-31:  就 => 就-01
Span 12-13:  我 => 我
Span 1-2:  我 => 我
Span 14-15:  星球 => 星球
Span 16-17:  有 => 有-06
Span 35-36:  毁掉 => 毁掉-01
Span 9-10:  花 => 花-01
Span 2-3:  认识 => 认识-01
Span 31-32:  这样 => 这样-01
Span 21-22:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  别的 => 别的
Oracle Span 11-12:  只有 => 只有
Oracle Span 7-8:  唯一 => 唯一
Oracle Span 20-21:  地方 => 地方
Oracle Span 23-24:  存在 => 存在-01
Oracle Span 30-31:  就 => 就
Oracle Span 1-2:  我 => 我
Oracle Span 14-15:  星球 => 星球
Oracle Span 16-17:  有 => 有-03
Oracle Span 35-36:  毁掉 => 毁掉-01
Oracle Span 9-10:  花 => 花
Oracle Span 2-3:  认识 => 认识-01
Oracle Span 31-32:  这样 => 这样

Extra span: 一下子 => 一下子
Extra span: 它 => 它
Incorrect span: 这样 => 这样-01
Incorrect span: 就 => 就-01
Extra span: 只 => 只
Extra span: 不 => 不
Extra span: 都 => 都
Extra span: 它 => 它
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Incorrect span: 只有 => 只有-01
Incorrect span: 花 => 花-01
Missing span: 花 => 花
Missing span: 有 => 有-03
Missing span: 只有 => 只有
Missing span: 这样 => 这样
Missing span: 就 => 就
Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	认识	_	VV	VV	_	17	pccomp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	朵	_	M	M	_	6	clf	_	_
6	人世	_	NN	NN	_	7	lobj	_	_
7	间	_	LC	LC	_	10	dep	_	_
8	唯一	_	JJ	JJ	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	花	_	NN	NN	_	3	dobj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	只有	_	AD	AD	_	17	advmod	_	_
13	我	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	星球	_	NN	NN	_	16	lobj	_	_
16	上	_	LC	LC	_	17	loc	_	_
17	有	_	VE	VE	_	0	root	_	_
18	它	_	PN	PN	_	20	nsubj	_	_
19	,	_	PU	PU	_	20	punct	_	_
20	别的	_	VV	VV	_	17	dep	_	_
21	地方	_	NN	NN	_	20	dobj	_	_
22	都	_	AD	AD	_	24	advmod	_	_
23	不	_	AD	AD	_	24	neg	_	_
24	存在	_	VV	VV	_	20	dep	_	_
25	,	_	PU	PU	_	17	punct	_	_
26	而	_	CC	CC	_	17	cc	_	_
27	一	_	CD	CD	_	28	nummod	_	_
28	只	_	M	M	_	30	clf	_	_
29	小羊	_	NN	NN	_	30	nn	_	_
30	胡里胡涂	_	NN	NN	_	36	nsubj	_	_
31	就	_	AD	AD	_	36	advmod	_	_
32	这样	_	AD	AD	_	36	advmod	_	_
33	把	_	BA	BA	_	36	ba	_	_
34	它	_	PN	PN	_	36	nsubj	_	_
35	一下子	_	AD	AD	_	36	advmod	_	_
36	毁掉	_	VV	VV	_	17	dep	_	_
37	了	_	AS	AS	_	36	asp	_	_
38	,	_	PU	PU	_	36	punct	_	_

Oracle:
(x10 / 有-03, arg0, x11 / 星球)
(x11 / 星球, manner, x15 / 只有)
(x16 / 存在-01, arg0, x19 / 地方)
(x19 / 地方, mod, x20 / 别的)
(x21 / 毁掉-01, manner, x27 / 这样)
(x27 / 这样, manner, x28 / 就)
(x4 / 认识-01, arg0, x5 / 我)
(x4 / 认识-01, arg1, x6 / 花)
(x6 / 花, mod, x8 / 唯一)

Input(Some(Graph(null,ArrayBuffer(Span(35,36,List(0),毁掉,毁掉-01,false), Span(34,35,List(1),一下子,一下子,false), Span(33,34,List(2),它,它,false), Span(31,32,List(3),这样,这样-01,false), Span(30,31,List(4),就,就-01,false), Span(27,28,List(5),只,只,false), Span(23,24,List(6),存在,存在-01,false), Span(22,23,List(7),不,不,false), Span(21,22,List(8),都,都,false), Span(20,21,List(9),地方,地方,false), Span(19,20,List(10),别的,别的,false), Span(17,18,List(11),它,它,false), Span(16,17,List(12),有,有-06,false), Span(14,15,List(13),星球,星球,false), Span(12,13,List(14),我,我,false), Span(11,12,List(15),只有,只有-01,false), Span(9,10,List(16),花,花-01,false), Span(7,8,List(17),唯一,唯一,false), Span(2,3,List(18),认识,认识-01,false), Span(1,2,List(19),我,我,false)),Map(2 -> 它, 5 -> 只, 12 -> 有-06, 15 -> 只有-01, 8 -> 都, 18 -> 认识-01, 7 -> 不, 17 -> 唯一, 1 -> 一下子, 4 -> 就-01, 11 -> 它, 14 -> 我, 6 -> 存在-01, 0 -> 毁掉-01, 9 -> 地方, 16 -> 花-01, 19 -> 我, 3 -> 这样-01, 10 -> 别的, 13 -> 星球),Map(就 -> 就-01, 唯 -> 唯一, 毁 -> 毁掉-01, 星 -> 星球, 它2 -> 它, 我 -> 我, 这 -> 这样-01, 别 -> 别的, 我2 -> 我, 它 -> 它, 认 -> 认识-01, 地 -> 地方, 花 -> 花-01, 不 -> 不, 只 -> 只, 只2 -> 只有-01, 存 -> 存在-01, 都 -> 都, 一 -> 一下子, 有 -> 有-06))),[Ljava.lang.String;@3b6ddd1d,Annotation([Ljava.lang.String;@3f6b0be5,[Ljava.lang.String;@611889f4,[Ljava.lang.String;@1da2cb77),Annotation([Ljava.lang.String;@48f278eb,[Ljava.lang.String;@2f217633,[Ledu.cmu.lti.nlp.amr.Dependency;@a530d0a),Annotation([Ljava.lang.String;@1a18644,[Ljava.lang.String;@5acf93bb,[Ljava.lang.String;@7e7be63f),Annotation([Ljava.lang.String;@6cd28fa7,[Ljava.lang.String;@614ca7df,[Ledu.cmu.lti.nlp.amr.Entity;@4738a206))
AMR:
(别 / 别的, part, 它2 / 它)
(只 / 只, prep-on-behalf, 毁 / 毁掉-01)
(地 / 地方, mod, 别 / 别的)
(存 / 存在-01, manner, 不 / 不)
(存 / 存在-01, manner, 都 / 都)
(存 / 存在-01, op, 地 / 地方)
(星 / 星球, manner, 只2 / 只有-01)
(星 / 星球, poss, 我 / 我)
(有 / 有-06, ARG0, 星 / 星球)
(有 / 有-06, ARG5, 它2 / 它)
(有 / 有-06, degree, 它 / 它)
(毁 / 毁掉-01, manner, 一 / 一下子)
(毁 / 毁掉-01, manner, 这 / 这样-01)
(毁 / 毁掉-01, mode, 它 / 它)
(花 / 花-01, mod, 唯 / 唯一)
(认 / 认识-01, prep-for, 我2 / 我)
(认 / 认识-01, prep-from, 花 / 花-01)
(认 / 认识-01, time, 只2 / 只有-01)
(这 / 这样-01, manner, 就 / 就-01)

Decoded in 248,783 microseconds
Sentence: 这 难道 不 重要 ？ ”

Spans:
Span 2-3:  不 => 不
Span 0-1:  这 => 这
Span 3-4:  重要 => 重要-01
Span 1-2:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  这 => 这
Oracle Span 3-4:  重要 => 重要-01
Oracle Span 1-2:  难道 => 难道

Extra span: 不 => 不
Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	重要	_	VA	VA	_	2	ccomp	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_
7	这	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x7 / 重要-01, arg0, x9 / 这)
(x7 / 重要-01, manner, x10 / 难道)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),重要,重要-01,false), Span(2,3,List(1),不,不,false), Span(1,2,List(2),难道,难道,false), Span(0,1,List(3),这,这,false)),Map(2 -> 难道, 1 -> 不, 0 -> 重要-01, 3 -> 这),Map(难 -> 难道, 重 -> 重要-01, 这 -> 这, 不 -> 不))),[Ljava.lang.String;@66d3eec0,Annotation([Ljava.lang.String;@1e04fa0a,[Ljava.lang.String;@1af2d44a,[Ljava.lang.String;@18d87d80),Annotation([Ljava.lang.String;@618425b5,[Ljava.lang.String;@58695725,[Ledu.cmu.lti.nlp.amr.Dependency;@543588e6),Annotation([Ljava.lang.String;@f5acb9d,[Ljava.lang.String;@4fb3ee4e,[Ljava.lang.String;@5d7148e2),Annotation([Ljava.lang.String;@25fb8912,[Ljava.lang.String;@7c24b813,[Ledu.cmu.lti.nlp.amr.Entity;@2c35e847))
AMR:
(不 / 不, mod, 这 / 这)
(重 / 重要-01, manner, 不 / 不)
(重 / 重要-01, manner, 难 / 难道)

Decoded in 9,028 microseconds
Sentence: 他 的 脸 气 得 发红 ， 然后 又 接着 说道 ： “ 如果 有 人 爱上 了 在 这 亿万 颗 星星 中 独一无二 的 一 株 花 ， 当 他 看 着 这些 星星 的 时候 ， 这 就 足以 使 他 感到 幸福 。

Spans:
Span 15-16:  人 => 人
Span 43-44:  他 => 他
Span 31-32:  他 => 他
Span 0-1:  他 => 他
Span 42-43:  使 => 使-01
Span 8-9:  又 => 又
Span 5-6:  发红 => 发红-01
Span 18-19:  在 => 在-01
Span 40-41:  就 => 就-01
Span 45-46:  幸福 => 幸福
Span 30-31:  当 => 当-04
Span 4-5:  得 => 得-06
Span 44-45:  感到 => 感到-01
Span 9-10:  接着 => 接着-01
Span 37-38:  时候 => 时候
Span 35-36:  星星 => 星星
Span 22-23:  星星 => 星星
Span 14-15:  有 => 有-06
Span 3-4:  气 => 气-01
Span 16-17:  爱上 => 爱上-01
Span 24-25:  独一无二 => 独一无二
Span 32-33:  看 => 看-10
Span 2-3:  脸 => 脸
Span 28-29:  花 => 花-01
Span 10-11:  说道 => 说道
Span 41-42:  足以 => 足以-01
Span 39-40:  这 => 这
Span 19-20:  这 => 这
Span 34-35:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  又 => 又
Oracle Span 5-6:  发红 => 发红-01
Oracle Span 45-46:  幸福 => 幸福
Oracle Span 44-45:  感到 => 感到-01
Oracle Span 22-23:  星星 => 星星
Oracle Span 35-36:  星星 => 星星
Oracle Span 3-4:  气 => 气-01
Oracle Span 16-17:  爱上 => 爱上-01
Oracle Span 24-25:  独一无二 => 独一无二
Oracle Span 32-33:  看 => 看-02
Oracle Span 2-3:  脸 => 脸
Oracle Span 28-29:  花 => 花
Oracle Span 10-11:  说道 => 说道
Oracle Span 41-42:  足以 => 足以-01
Oracle Span 19-20:  这 => 这
Oracle Span 34-35:  这些 => 这些

Extra span: 他 => 他
Extra span: 使 => 使-01
Extra span: 就 => 就-01
Extra span: 这 => 这
Extra span: 时候 => 时候
Incorrect span: 看 => 看-10
Extra span: 他 => 他
Extra span: 当 => 当-04
Incorrect span: 花 => 花-01
Extra span: 在 => 在-01
Extra span: 有 => 有-06
Extra span: 接着 => 接着-01
Extra span: 得 => 得-06
Missing span: 花 => 花
Missing span: 看 => 看-02
Dependencies:
1	他	_	PN	PN	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	脸	_	NN	NN	_	4	nn	_	_
4	气	_	NN	NN	_	5	nsubj	_	_
5	得	_	VV	VV	_	0	root	_	_
6	发红	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	然后	_	AD	AD	_	11	advmod	_	_
9	又	_	AD	AD	_	11	advmod	_	_
10	接着	_	AD	AD	_	11	advmod	_	_
11	说道	_	VV	VV	_	5	conj	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	15	punct	_	_
14	如果	_	CS	CS	_	15	advmod	_	_
15	有	_	VE	VE	_	11	ccomp	_	_
16	人	_	NN	NN	_	17	nsubj	_	_
17	爱上	_	VV	VV	_	15	dep	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	在	_	P	P	_	42	prep	_	_
20	这	_	DT	DT	_	23	det	_	_
21	亿万	_	CD	CD	_	22	nummod	_	_
22	颗	_	M	M	_	20	dep	_	_
23	星星	_	NN	NN	_	24	lobj	_	_
24	中	_	LC	LC	_	19	plmod	_	_
25	独一无二	_	CD	CD	_	29	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	一	_	CD	CD	_	28	nummod	_	_
28	株	_	M	M	_	29	clf	_	_
29	花	_	NN	NN	_	42	nsubj	_	_
30	,	_	PU	PU	_	42	punct	_	_
31	当	_	P	P	_	42	prep	_	_
32	他	_	PN	PN	_	33	nsubj	_	_
33	看	_	VV	VV	_	38	rcmod	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	这些	_	DT	DT	_	36	det	_	_
36	星星	_	NN	NN	_	33	dobj	_	_
37	的	_	DEC	DEC	_	33	cpm	_	_
38	时候	_	NN	NN	_	31	pobj	_	_
39	,	_	PU	PU	_	42	punct	_	_
40	这	_	PN	PN	_	42	nsubj	_	_
41	就	_	AD	AD	_	42	advmod	_	_
42	足以	_	VV	VV	_	17	ccomp	_	_
43	使	_	VV	VV	_	42	ccomp	_	_
44	他	_	PN	PN	_	43	dobj	_	_
45	感到	_	VV	VV	_	43	dep	_	_
46	幸福	_	NN	NN	_	45	dobj	_	_
47	。	_	PU	PU	_	5	punct	_	_
48	气	_	NN	NN	_	15	xsubj	_	_

Oracle:
(x11 / 说道, manner, x12 / 又)
(x37 / 爱上-01, arg0, x38 / 人)
(x37 / 爱上-01, arg1, x39 / 花)
(x39 / 花, location, x42 / 星星)
(x39 / 花, mod, x41 / 独一无二)
(x42 / 星星, mod, x45 / 这)
(x6 / 发红-01, arg0, x7 / 脸)
(x66 / 足以-01, arg1, x67 / 感到-01)
(x66 / 足以-01, time, x71 / 看-02)
(x67 / 感到-01, arg1, x69 / 幸福)
(x71 / 看-02, arg1, x73 / 星星)
(x73 / 星星, mod, x74 / 这些)
(x8 / 他, part, x7 / 脸)
(x9 / 气-01, cause, x6 / 发红-01)

Input(Some(Graph(null,ArrayBuffer(Span(45,46,List(0),幸福,幸福,false), Span(44,45,List(1),感到,感到-01,false), Span(43,44,List(2),他,他,false), Span(42,43,List(3),使,使-01,false), Span(41,42,List(4),足以,足以-01,false), Span(40,41,List(5),就,就-01,false), Span(39,40,List(6),这,这,false), Span(37,38,List(7),时候,时候,false), Span(35,36,List(8),星星,星星,false), Span(34,35,List(9),这些,这些,false), Span(32,33,List(10),看,看-10,false), Span(31,32,List(11),他,他,false), Span(30,31,List(12),当,当-04,false), Span(28,29,List(13),花,花-01,false), Span(24,25,List(14),独一无二,独一无二,false), Span(22,23,List(15),星星,星星,false), Span(19,20,List(16),这,这,false), Span(18,19,List(17),在,在-01,false), Span(16,17,List(18),爱上,爱上-01,false), Span(15,16,List(19),人,人,false), Span(14,15,List(20),有,有-06,false), Span(10,11,List(21),说道,说道,false), Span(9,10,List(22),接着,接着-01,false), Span(8,9,List(23),又,又,false), Span(5,6,List(24),发红,发红-01,false), Span(4,5,List(25),得,得-06,false), Span(3,4,List(26),气,气-01,false), Span(2,3,List(27),脸,脸,false), Span(0,1,List(28),他,他,false)),Map(2 -> 他, 5 -> 就-01, 27 -> 脸, 12 -> 当-04, 8 -> 星星, 15 -> 星星, 21 -> 说道, 18 -> 爱上-01, 24 -> 发红-01, 7 -> 时候, 1 -> 感到-01, 17 -> 在-01, 23 -> 又, 26 -> 气-01, 4 -> 足以-01, 11 -> 他, 14 -> 独一无二, 20 -> 有-06, 28 -> 他, 6 -> 这, 9 -> 这些, 0 -> 幸福, 22 -> 接着-01, 16 -> 这, 19 -> 人, 10 -> 看-10, 3 -> 使-01, 25 -> 得-06, 13 -> 花-01),Map(爱 -> 爱上-01, 又 -> 又, 发 -> 发红-01, 就 -> 就-01, 他2 -> 他, 星 -> 星星, 在 -> 在-01, 感 -> 感到-01, 接 -> 接着-01, 足 -> 足以-01, 得 -> 得-06, 这 -> 这, 幸 -> 幸福, 这3 -> 这, 气 -> 气-01, 独 -> 独一无二, 他 -> 他, 脸 -> 脸, 花 -> 花-01, 说 -> 说道, 这2 -> 这些, 他3 -> 他, 看 -> 看-10, 使 -> 使-01, 时 -> 时候, 星2 -> 星星, 人 -> 人, 当 -> 当-04, 有 -> 有-06))),[Ljava.lang.String;@7bd4937b,Annotation([Ljava.lang.String;@21e360a,[Ljava.lang.String;@5ba3f27a,[Ljava.lang.String;@58d75e99),Annotation([Ljava.lang.String;@74751b3,[Ljava.lang.String;@741a8937,[Ledu.cmu.lti.nlp.amr.Dependency;@306e95ec),Annotation([Ljava.lang.String;@52af26ee,[Ljava.lang.String;@6fd83fc1,[Ljava.lang.String;@4f2b503c),Annotation([Ljava.lang.String;@bae7dc0,[Ljava.lang.String;@209da20d,[Ledu.cmu.lti.nlp.amr.Entity;@e15b7e8))
AMR:
(人 / 人, mod, 有 / 有-06)
(他3 / 他, part, 脸 / 脸)
(使 / 使-01, prep-along-with, 他 / 他)
(在 / 在-01, ARG3, 这3 / 这)
(在 / 在-01, time, 爱 / 爱上-01)
(当 / 当-04, manner, 花 / 花-01)
(得 / 得-06, ARG3, 发 / 发红-01)
(得 / 得-06, degree, 气 / 气-01)
(得 / 得-06, time, 脸 / 脸)
(感 / 感到-01, ARG3, 幸 / 幸福)
(感 / 感到-01, time, 使 / 使-01)
(接 / 接着-01, manner, 又 / 又)
(接 / 接着-01, time, 发 / 发红-01)
(时 / 时候, mod, 星 / 星星)
(星 / 星星, mod, 看 / 看-10)
(星 / 星星, mod, 这2 / 这些)
(星2 / 星星, mod, 在 / 在-01)
(爱 / 爱上-01, time, 有 / 有-06)
(独 / 独一无二, mod, 星2 / 星星)
(独 / 独一无二, topic, 花 / 花-01)
(看 / 看-10, manner, 当 / 当-04)
(看 / 看-10, prep-following, 他2 / 他)
(说 / 说道, mod, 接 / 接着-01)
(说 / 说道, topic, 有 / 有-06)
(足 / 足以-01, manner, 就 / 就-01)
(足 / 足以-01, mod, 这 / 这)
(足 / 足以-01, time, 使 / 使-01)
(足 / 足以-01, time, 时 / 时候)

Decoded in 310,531 microseconds
Sentence: 他 可以 自言自语 地 说 ： ‘ 我 的 那 朵 花 就 在 其中 的 一 颗 星星 上 … ’ ， 但是 如果 羊 吃掉 了 这 朵 花 ， 对 他 来说 ， 好象 所有 的 星星 一下子 全 都 熄灭 了 一样 ！

Spans:
Span 40-41:  一下子 => 一下子
Span 45-46:  一样 => 一样
Span 33-34:  他 => 他
Span 0-1:  他 => 他
Span 41-42:  全 => 全
Span 1-2:  可以 => 可以-02
Span 26-27:  吃掉 => 吃掉-01
Span 13-14:  在 => 在-01
Span 3-4:  地 => 地
Span 32-33:  对 => 对-02
Span 12-13:  就 => 就-01
Span 7-8:  我 => 我
Span 37-38:  所有 => 所有
Span 39-40:  星星 => 星星
Span 18-19:  星星 => 星星
Span 34-35:  来说 => 来说-01
Span 43-44:  熄灭 => 熄灭-01
Span 25-26:  羊 => 羊
Span 2-3:  自言自语 => 自言自语
Span 30-31:  花 => 花-01
Span 11-12:  花 => 花-01
Span 4-5:  说 => 说-02
Span 28-29:  这 => 这
Span 9-10:  那 => 那
Span 42-43:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 40-41:  一下子 => 一下子
Oracle Span 0-1:  他 => 他
Oracle Span 41-42:  全 => 全-01
Oracle Span 1-2:  可以 => 可以-01
Oracle Span 26-27:  吃掉 => 吃掉-01
Oracle Span 7-8:  我 => 我
Oracle Span 37-38:  所有 => 所有
Oracle Span 18-19:  星星 => 星星
Oracle Span 39-40:  星星 => 星星
Oracle Span 34-35:  来说 => 来说-01
Oracle Span 43-44:  熄灭 => 熄灭-01
Oracle Span 25-26:  羊 => 羊
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 11-12:  花 => 花
Oracle Span 4-5:  说 => 说-01
Oracle Span 28-29:  这 => 这
Oracle Span 9-10:  那 => 那
Oracle Span 42-43:  都 => 都

Extra span: 一样 => 一样
Incorrect span: 全 => 全
Extra span: 他 => 他
Extra span: 对 => 对-02
Extra span: 花 => 花-01
Extra span: 在 => 在-01
Extra span: 就 => 就-01
Incorrect span: 花 => 花-01
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 可以 => 可以-02
Missing span: 可以 => 可以-01
Missing span: 说 => 说-01
Missing span: 花 => 花
Missing span: 全 => 全-01
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	可以	_	VV	VV	_	5	mmod	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	44	dep	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	‘	_	PU	PU	_	21	punct	_	_
8	我	_	PN	PN	_	12	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	那	_	DT	DT	_	12	det	_	_
11	朵	_	M	M	_	10	clf	_	_
12	花	_	NN	NN	_	21	nsubj	_	_
13	就	_	AD	AD	_	21	advmod	_	_
14	在	_	P	P	_	21	prep	_	_
15	其中	_	NN	NN	_	19	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	颗	_	M	M	_	19	clf	_	_
19	星星	_	NN	NN	_	20	lobj	_	_
20	上	_	LC	LC	_	14	plmod	_	_
21	…	_	VV	VV	_	5	ccomp	_	_
22	’	_	PU	PU	_	21	punct	_	_
23	,	_	PU	PU	_	44	punct	_	_
24	但是	_	AD	AD	_	44	advmod	_	_
25	如果	_	CS	CS	_	27	advmod	_	_
26	羊	_	NN	NN	_	27	nsubj	_	_
27	吃掉	_	VV	VV	_	44	pccomp	_	_
28	了	_	AS	AS	_	27	asp	_	_
29	这	_	DT	DT	_	31	det	_	_
30	朵	_	M	M	_	29	clf	_	_
31	花	_	NN	NN	_	27	dobj	_	_
32	,	_	PU	PU	_	44	punct	_	_
33	对	_	P	P	_	44	prep	_	_
34	他	_	PN	PN	_	35	nn	_	_
35	来说	_	NN	NN	_	33	pobj	_	_
36	,	_	PU	PU	_	44	punct	_	_
37	好象	_	NR	NR	_	40	nn	_	_
38	所有	_	DT	DT	_	40	assmod	_	_
39	的	_	DEG	DEG	_	38	assm	_	_
40	星星	_	NN	NN	_	44	nsubj	_	_
41	一下子	_	CD	CD	_	44	nsubj	_	_
42	全	_	AD	AD	_	44	advmod	_	_
43	都	_	AD	AD	_	44	advmod	_	_
44	熄灭	_	VV	VV	_	0	root	_	_
45	了	_	AS	AS	_	44	asp	_	_
46	一样	_	CD	CD	_	44	dep	_	_
47	！	_	PU	PU	_	44	punct	_	_

Oracle:
(x16 / 吃掉-01, arg0, x17 / 羊)
(x27 / 熄灭-01, manner, x28 / 都)
(x27 / 熄灭-01, manner, x29 / 全-01)
(x27 / 熄灭-01, manner, x30 / 一下子)
(x4 / 可以-01, arg0, x5 / 说-01)
(x5 / 说-01, arg0, x7 / 他)
(x5 / 说-01, arg1, x8 / 花)
(x5 / 说-01, manner, x6 / 自言自语)
(x8 / 花, location, x11 / 星星)
(x8 / 花, mod, x9 / 那)
(x8 / 花, poss, x10 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(45,46,List(0),一样,一样,false), Span(43,44,List(1),熄灭,熄灭-01,false), Span(42,43,List(2),都,都,false), Span(41,42,List(3),全,全,false), Span(40,41,List(4),一下子,一下子,false), Span(39,40,List(5),星星,星星,false), Span(37,38,List(6),所有,所有,false), Span(34,35,List(7),来说,来说-01,false), Span(33,34,List(8),他,他,false), Span(32,33,List(9),对,对-02,false), Span(30,31,List(10),花,花-01,false), Span(28,29,List(11),这,这,false), Span(26,27,List(12),吃掉,吃掉-01,false), Span(25,26,List(13),羊,羊,false), Span(18,19,List(14),星星,星星,false), Span(13,14,List(15),在,在-01,false), Span(12,13,List(16),就,就-01,false), Span(11,12,List(17),花,花-01,false), Span(9,10,List(18),那,那,false), Span(7,8,List(19),我,我,false), Span(4,5,List(20),说,说-02,false), Span(3,4,List(21),地,地,false), Span(2,3,List(22),自言自语,自言自语,false), Span(1,2,List(23),可以,可以-02,false), Span(0,1,List(24),他,他,false)),Map(2 -> 都, 5 -> 星星, 12 -> 吃掉-01, 8 -> 他, 15 -> 在-01, 21 -> 地, 18 -> 那, 24 -> 他, 7 -> 来说-01, 1 -> 熄灭-01, 17 -> 花-01, 23 -> 可以-02, 4 -> 一下子, 11 -> 这, 14 -> 星星, 20 -> 说-02, 6 -> 所有, 9 -> 对-02, 0 -> 一样, 22 -> 自言自语, 16 -> 就-01, 19 -> 我, 10 -> 花-01, 3 -> 全, 13 -> 羊),Map(就 -> 就-01, 他2 -> 他, 星 -> 星星, 自 -> 自言自语, 在 -> 在-01, 来 -> 来说-01, 我 -> 我, 这 -> 这, 全 -> 全, 羊 -> 羊, 花2 -> 花-01, 一2 -> 一下子, 吃 -> 吃掉-01, 他 -> 他, 所 -> 所有, 地 -> 地, 花 -> 花-01, 说 -> 说-02, 都 -> 都, 那 -> 那, 熄 -> 熄灭-01, 对 -> 对-02, 星2 -> 星星, 一 -> 一样, 可 -> 可以-02))),[Ljava.lang.String;@1b2abca6,Annotation([Ljava.lang.String;@6392827e,[Ljava.lang.String;@2ed2d9cb,[Ljava.lang.String;@d5b810e),Annotation([Ljava.lang.String;@43dac38f,[Ljava.lang.String;@342c38f8,[Ledu.cmu.lti.nlp.amr.Dependency;@c88a337),Annotation([Ljava.lang.String;@5d0a1059,[Ljava.lang.String;@485966cc,[Ljava.lang.String;@1de76cc7),Annotation([Ljava.lang.String;@54bff557,[Ljava.lang.String;@593aaf41,[Ledu.cmu.lti.nlp.amr.Entity;@5a56cdac))
AMR:
(一 / 一样, mod, 熄 / 熄灭-01)
(全 / 全, manner, 一2 / 一下子)
(可 / 可以-02, manner, 自 / 自言自语)
(可 / 可以-02, prep-following, 他2 / 他)
(吃 / 吃掉-01, location, 星2 / 星星)
(吃 / 吃掉-01, time, 羊 / 羊)
(吃 / 吃掉-01, topic, 花 / 花-01)
(在 / 在-01, manner, 就 / 就-01)
(地 / 地, mod, 可 / 可以-02)
(对 / 对-02, manner, 花 / 花-01)
(对 / 对-02, prep-following, 他 / 他)
(就 / 就-01, manner, 花2 / 花-01)
(所 / 所有, location, 花 / 花-01)
(星 / 星星, manner, 一2 / 一下子)
(星 / 星星, mod, 所 / 所有)
(星2 / 星星, mod, 在 / 在-01)
(来 / 来说-01, time, 花 / 花-01)
(熄 / 熄灭-01, manner, 一2 / 一下子)
(熄 / 熄灭-01, manner, 都 / 都)
(花2 / 花-01, mod, 那 / 那)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, location, 花2 / 花-01)
(说 / 说-02, prep-following, 我 / 我)
(这 / 这, prep-following, 花 / 花-01)

Decoded in 251,581 microseconds
Sentence: 这 难道 也 不 重要 吗 ？ ！ ”

Spans:
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 0-1:  这 => 这
Span 4-5:  重要 => 重要-01
Span 1-2:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 0-1:  这 => 这
Oracle Span 4-5:  重要 => 重要-01
Oracle Span 1-2:  难道 => 难道

Extra span: 不 => 不
Dependencies:
1	这	_	AD	AD	_	2	advmod	_	_
2	难道	_	VV	VV	_	0	root	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	重要	_	VA	VA	_	2	dobj	_	_
6	吗	_	SP	SP	_	5	dep	_	_
7	？	_	PU	PU	_	2	punct	_	_
8	！	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 重要-01, arg0, x5 / 这)
(x2 / 重要-01, manner, x4 / 也)
(x2 / 重要-01, manner, x6 / 难道)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),重要,重要-01,false), Span(3,4,List(1),不,不,false), Span(2,3,List(2),也,也,false), Span(1,2,List(3),难道,难道,false), Span(0,1,List(4),这,这,false)),Map(2 -> 也, 1 -> 不, 4 -> 这, 0 -> 重要-01, 3 -> 难道),Map(难 -> 难道, 也 -> 也, 重 -> 重要-01, 这 -> 这, 不 -> 不))),[Ljava.lang.String;@7c711375,Annotation([Ljava.lang.String;@57cf54e1,[Ljava.lang.String;@5b03b9fe,[Ljava.lang.String;@37d4349f),Annotation([Ljava.lang.String;@434a63ab,[Ljava.lang.String;@6e0f5f7f,[Ledu.cmu.lti.nlp.amr.Dependency;@2805d709),Annotation([Ljava.lang.String;@3ee37e5a,[Ljava.lang.String;@2ea41516,[Ljava.lang.String;@3a44431a),Annotation([Ljava.lang.String;@3c7f66c4,[Ljava.lang.String;@194bcebf,[Ledu.cmu.lti.nlp.amr.Entity;@17497425))
AMR:
(不 / 不, domain, 这 / 这)
(重 / 重要-01, manner, 不 / 不)
(重 / 重要-01, manner, 也 / 也)
(重 / 重要-01, manner, 难 / 难道)

Decoded in 10,584 microseconds
Sentence: 他 无法 再 说 下去 了 ，

Spans:
Span 0-1:  他 => 他
Span 2-3:  再 => 再
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  再 => 再
Oracle Span 3-4:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	无法	_	AD	AD	_	4	advmod	_	_
3	再	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	下去	_	VV	VV	_	4	rcomp	_	_
6	了	_	AS	AS	_	4	asp	_	_
7	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 说-01, arg0, x6 / 他)
(x2 / 说-01, manner, x4 / 再)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),说,说-02,false), Span(2,3,List(1),再,再,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 再, 0 -> 说-02),Map(他 -> 他, 说 -> 说-02, 再 -> 再))),[Ljava.lang.String;@f0da945,Annotation([Ljava.lang.String;@4803b726,[Ljava.lang.String;@ffaa6af,[Ljava.lang.String;@53ce1329),Annotation([Ljava.lang.String;@316bcf94,[Ljava.lang.String;@6404f418,[Ledu.cmu.lti.nlp.amr.Dependency;@3e11f9e9),Annotation([Ljava.lang.String;@1de5f259,[Ljava.lang.String;@729d991e,[Ljava.lang.String;@31fa1761),Annotation([Ljava.lang.String;@957e06,[Ljava.lang.String;@32502377,[Ledu.cmu.lti.nlp.amr.Entity;@2c1b194a))
AMR:
(说 / 说-02, manner, 再 / 再)
(说 / 说-02, mode, 他 / 他)

Decoded in 9,855 microseconds
Sentence: 突然 泣不成声 。

Spans:
Span 1-2:  泣不成声 => 泣不成声
Span 0-1:  突然 => 突然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  泣不成声 => 泣不成声
Oracle Span 0-1:  突然 => 突然

Dependencies:
1	突然	_	AD	AD	_	2	advmod	_	_
2	泣不成声	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 泣不成声, manner, x2 / 突然)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),泣不成声,泣不成声,false), Span(0,1,List(1),突然,突然,false)),Map(1 -> 突然, 0 -> 泣不成声),Map(突 -> 突然, 泣 -> 泣不成声))),[Ljava.lang.String;@4dbb42b7,Annotation([Ljava.lang.String;@66f57048,[Ljava.lang.String;@550dbc7a,[Ljava.lang.String;@21282ed8),Annotation([Ljava.lang.String;@36916eb0,[Ljava.lang.String;@7bab3f1a,[Ledu.cmu.lti.nlp.amr.Dependency;@437da279),Annotation([Ljava.lang.String;@23c30a20,[Ljava.lang.String;@1e1a0406,[Ljava.lang.String;@3cebbb30),Annotation([Ljava.lang.String;@12aba8be,[Ljava.lang.String;@290222c1,[Ledu.cmu.lti.nlp.amr.Entity;@67f639d3))
AMR:
(泣 / 泣不成声, manner, 突 / 突然)

Decoded in 4,560 microseconds
Sentence: 夜幕 已经 降临 。

Spans:
Span 0-1:  夜幕 => 夜幕
Span 1-2:  已经 => 已经
Span 2-3:  降临 => 降临-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  夜幕 => 夜幕
Oracle Span 2-3:  降临 => 降临-01

Extra span: 已经 => 已经
Dependencies:
1	夜幕	_	NN	NN	_	3	nsubj	_	_
2	已经	_	AD	AD	_	3	advmod	_	_
3	降临	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 降临-01, arg0, x2 / 夜幕)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),降临,降临-01,false), Span(1,2,List(1),已经,已经,false), Span(0,1,List(2),夜幕,夜幕,false)),Map(2 -> 夜幕, 1 -> 已经, 0 -> 降临-01),Map(夜 -> 夜幕, 已 -> 已经, 降 -> 降临-01))),[Ljava.lang.String;@6253c26,Annotation([Ljava.lang.String;@49049a04,[Ljava.lang.String;@71a8adcf,[Ljava.lang.String;@27462a88),Annotation([Ljava.lang.String;@82de64a,[Ljava.lang.String;@659499f1,[Ledu.cmu.lti.nlp.amr.Dependency;@51e69659),Annotation([Ljava.lang.String;@47e2e487,[Ljava.lang.String;@201a4587,[Ljava.lang.String;@61001b64),Annotation([Ljava.lang.String;@4310d43,[Ljava.lang.String;@54a7079e,[Ledu.cmu.lti.nlp.amr.Entity;@26e356f0))
AMR:
(降 / 降临-01, manner, 已 / 已经)
(降 / 降临-01, mode, 夜 / 夜幕)

Decoded in 6,472 microseconds
Sentence: 我 放下 手 中 的 工具 。

Spans:
Span 5-6:  工具 => 工具
Span 0-1:  我 => 我
Span 2-3:  手 => 手
Span 1-2:  放下 => 放下-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  工具 => 工具
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  手 => 手
Oracle Span 1-2:  放下 => 放下-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	放下	_	VV	VV	_	0	root	_	_
3	手	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	工具	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 放下-01, arg0, x2 / 我)
(x0 / 放下-01, arg1, x3 / 工具)
(x3 / 工具, location, x4 / 手)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),工具,工具,false), Span(2,3,List(1),手,手,false), Span(1,2,List(2),放下,放下-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 放下-01, 1 -> 手, 0 -> 工具, 3 -> 我),Map(我 -> 我, 放 -> 放下-01, 工 -> 工具, 手 -> 手))),[Ljava.lang.String;@27f981c6,Annotation([Ljava.lang.String;@1b11171f,[Ljava.lang.String;@1151e434,[Ljava.lang.String;@2dc54ad4),Annotation([Ljava.lang.String;@4659191b,[Ljava.lang.String;@55634720,[Ledu.cmu.lti.nlp.amr.Dependency;@4b0d79fc),Annotation([Ljava.lang.String;@4c1909a3,[Ljava.lang.String;@428640fa,[Ljava.lang.String;@d9345cd),Annotation([Ljava.lang.String;@2d710f1a,[Ljava.lang.String;@29215f06,[Ledu.cmu.lti.nlp.amr.Entity;@59505b48))
AMR:
(工 / 工具, location, 手 / 手)
(放 / 放下-01, snt1, 工 / 工具)
(放 / 放下-01, value, 我 / 我)

Decoded in 13,993 microseconds
Sentence: 我 把 锤子 、 螺钉 、 饥渴 、 死亡 ， 全都 抛在 脑后 。

Spans:
Span 0-1:  我 => 我
Span 8-9:  死亡 => 死亡-01
Span 4-5:  螺钉 => 螺钉
Span 2-3:  锤子 => 锤子
Span 6-7:  饥渴 => 饥渴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  死亡 => 死亡
Oracle Span 4-5:  螺钉 => 螺钉
Oracle Span 2-3:  锤子 => 锤子
Oracle Span 6-7:  饥渴 => 饥渴

Incorrect span: 死亡 => 死亡-01
Incorrect span: 饥渴 => 饥渴-01
Missing span: 饥渴 => 饥渴
Missing span: 死亡 => 死亡
Dependencies:
1	我	_	PN	PN	_	12	nsubj	_	_
2	把	_	BA	BA	_	12	ba	_	_
3	锤子	_	NN	NN	_	9	conj	_	_
4	、	_	PU	PU	_	9	punct	_	_
5	螺钉	_	NN	NN	_	9	conj	_	_
6	、	_	PU	PU	_	9	punct	_	_
7	饥渴	_	NN	NN	_	9	conj	_	_
8	、	_	PU	PU	_	9	punct	_	_
9	死亡	_	NN	NN	_	12	nsubj	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	全都	_	AD	AD	_	12	advmod	_	_
12	抛在	_	VV	VV	_	0	root	_	_
13	脑后	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),死亡,死亡-01,false), Span(6,7,List(1),饥渴,饥渴-01,false), Span(4,5,List(2),螺钉,螺钉,false), Span(2,3,List(3),锤子,锤子,false), Span(0,1,List(4),我,我,false)),Map(2 -> 螺钉, 1 -> 饥渴-01, 4 -> 我, 0 -> 死亡-01, 3 -> 锤子),Map(饥 -> 饥渴-01, 我 -> 我, 锤 -> 锤子, 死 -> 死亡-01, 螺 -> 螺钉))),[Ljava.lang.String;@4efac082,Annotation([Ljava.lang.String;@6bd61f98,[Ljava.lang.String;@48aca48b,[Ljava.lang.String;@13fd2ccd),Annotation([Ljava.lang.String;@b9b00e0,[Ljava.lang.String;@506ae4d4,[Ledu.cmu.lti.nlp.amr.Dependency;@7d4f9aae),Annotation([Ljava.lang.String;@72e5a8e,[Ljava.lang.String;@54e1c68b,[Ljava.lang.String;@53aac487),Annotation([Ljava.lang.String;@52b1beb6,[Ljava.lang.String;@273e7444,[Ledu.cmu.lti.nlp.amr.Entity;@7db12bb6))
AMR:
(死 / 死亡-01, manner, 饥 / 饥渴-01)
(螺 / 螺钉, mode, 饥 / 饥渴-01)
(锤 / 锤子, domain, 我 / 我)
(锤 / 锤子, mode, 饥 / 饥渴-01)

Decoded in 12,251 microseconds
Sentence: 在 一 颗 星球 上 ， 在 一 颗 行星 上 ， 在 我 的 行星 上 ， 在 地球 上 有 一 个 小 王子 需要 安慰 ！

Spans:
Span 18-19:  在 => 在-01
Span 12-13:  在 => 在-01
Span 6-7:  在 => 在-01
Span 0-1:  在 => 在-01
Span 19-20:  地球 => 地球
Span 27-28:  安慰 => 安慰
Span 24-25:  小 => 小
Span 13-14:  我 => 我
Span 3-4:  星球 => 星球
Span 21-22:  有 => 有-06
Span 25-26:  王子 => 王子
Span 15-16:  行星 => 行星
Span 9-10:  行星 => 行星
Span 26-27:  需要 => 需要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 19-20:  地球 => 地球
Oracle Span 24-25:  小 => 小-01
Oracle Span 13-14:  我 => 我
Oracle Span 3-4:  星球 => 星球
Oracle Span 21-22:  有 => 有-01
Oracle Span 25-26:  王子 => 王子
Oracle Span 9-10:  行星 => 行星
Oracle Span 15-16:  行星 => 行星
Oracle Span 26-27:  需要 => 需要-04

Extra span: 安慰 => 安慰
Incorrect span: 小 => 小
Incorrect span: 有 => 有-06
Extra span: 在 => 在-01
Extra span: 在 => 在-01
Extra span: 在 => 在-01
Extra span: 在 => 在-01
Missing span: 有 => 有-01
Missing span: 小 => 小-01
Dependencies:
1	在	_	P	P	_	22	prep	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	颗	_	M	M	_	4	clf	_	_
4	星球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	1	plmod	_	_
6	,	_	PU	PU	_	22	punct	_	_
7	在	_	P	P	_	22	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	10	clf	_	_
10	行星	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	7	plmod	_	_
12	,	_	PU	PU	_	22	punct	_	_
13	在	_	P	P	_	22	prep	_	_
14	我	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	行星	_	NN	NN	_	17	lobj	_	_
17	上	_	LC	LC	_	13	plmod	_	_
18	,	_	PU	PU	_	22	punct	_	_
19	在	_	P	P	_	22	prep	_	_
20	地球	_	NN	NN	_	21	lobj	_	_
21	上	_	LC	LC	_	19	plmod	_	_
22	有	_	VE	VE	_	0	root	_	_
23	一	_	CD	CD	_	24	nummod	_	_
24	个	_	M	M	_	28	clf	_	_
25	小	_	JJ	JJ	_	26	amod	_	_
26	王子	_	NN	NN	_	27	nn	_	_
27	需要	_	NN	NN	_	28	nn	_	_
28	安慰	_	NN	NN	_	22	dobj	_	_
29	！	_	PU	PU	_	22	punct	_	_

Oracle:
(x0 / 有-01, arg1, x10 / 王子)
(x10 / 王子, mod, x11 / 小-01)
(x12 / 需要-04, arg0, x10 / 王子)
(x7 / 行星, poss, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(27,28,List(0),安慰,安慰,false), Span(26,27,List(1),需要,需要-04,false), Span(25,26,List(2),王子,王子,false), Span(24,25,List(3),小,小,false), Span(21,22,List(4),有,有-06,false), Span(19,20,List(5),地球,地球,false), Span(18,19,List(6),在,在-01,false), Span(15,16,List(7),行星,行星,false), Span(13,14,List(8),我,我,false), Span(12,13,List(9),在,在-01,false), Span(9,10,List(10),行星,行星,false), Span(6,7,List(11),在,在-01,false), Span(3,4,List(12),星球,星球,false), Span(0,1,List(13),在,在-01,false)),Map(2 -> 王子, 5 -> 地球, 12 -> 星球, 8 -> 我, 7 -> 行星, 1 -> 需要-04, 4 -> 有-06, 11 -> 在-01, 6 -> 在-01, 0 -> 安慰, 9 -> 在-01, 3 -> 小, 10 -> 行星, 13 -> 在-01),Map(在2 -> 在-01, 需 -> 需要-04, 在 -> 在-01, 星 -> 星球, 我 -> 我, 在4 -> 在-01, 王 -> 王子, 安 -> 安慰, 小 -> 小, 地 -> 地球, 行2 -> 行星, 在3 -> 在-01, 行 -> 行星, 有 -> 有-06))),[Ljava.lang.String;@783a467b,Annotation([Ljava.lang.String;@272113c4,[Ljava.lang.String;@73e9cf30,[Ljava.lang.String;@771a660),Annotation([Ljava.lang.String;@2d52216b,[Ljava.lang.String;@242b836,[Ledu.cmu.lti.nlp.amr.Dependency;@3f6f6701),Annotation([Ljava.lang.String;@3527942a,[Ljava.lang.String;@942a29c,[Ljava.lang.String;@1ed6388a),Annotation([Ljava.lang.String;@5a45133e,[Ljava.lang.String;@534a5a98,[Ledu.cmu.lti.nlp.amr.Entity;@4f80542f))
AMR:
(在 / 在-01, time, 行 / 行星)
(在2 / 在-01, time, 行2 / 行星)
(在3 / 在-01, time, 星 / 星球)
(地 / 地球, mod, 在 / 在-01)
(安 / 安慰, mod, 需 / 需要-04)
(星 / 星球, mod, 在4 / 在-01)
(有 / 有-06, time, 在 / 在-01)
(王 / 王子, mod, 小 / 小)
(行 / 行星, mod, 在2 / 在-01)
(行 / 行星, poss, 我 / 我)
(行2 / 行星, mod, 在3 / 在-01)
(需 / 需要-04, time, 有 / 有-06)
(需 / 需要-04, time, 王 / 王子)

Decoded in 74,711 microseconds
Sentence: 我 把 他 抱在 怀里 ， 摇 着 他 。

Spans:
Span 8-9:  他 => 他
Span 2-3:  他 => 他
Span 4-5:  怀里 => 怀里
Span 0-1:  我 => 我
Span 6-7:  摇 => 摇-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  怀里 => 怀里
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  摇 => 摇-01

Extra span: 他 => 他
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	抱在	_	VV	VV	_	0	root	_	_
5	怀里	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	摇	_	VV	VV	_	4	dep	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	他	_	PN	PN	_	7	dobj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),他,他,false), Span(6,7,List(1),摇,摇-01,false), Span(4,5,List(2),怀里,怀里,false), Span(2,3,List(3),他,他,false), Span(0,1,List(4),我,我,false)),Map(2 -> 怀里, 1 -> 摇-01, 4 -> 我, 0 -> 他, 3 -> 他),Map(摇 -> 摇-01, 他2 -> 他, 我 -> 我, 怀 -> 怀里, 他 -> 他))),[Ljava.lang.String;@60bd273d,Annotation([Ljava.lang.String;@121314f7,[Ljava.lang.String;@130c12b7,[Ljava.lang.String;@5e600dd5),Annotation([Ljava.lang.String;@576d5deb,[Ljava.lang.String;@5d534f5d,[Ledu.cmu.lti.nlp.amr.Dependency;@2e3967ea),Annotation([Ljava.lang.String;@70e9c95d,[Ljava.lang.String;@4d5650ae,[Ljava.lang.String;@a38c7fe),Annotation([Ljava.lang.String;@6fdbe764,[Ljava.lang.String;@51c668e3,[Ledu.cmu.lti.nlp.amr.Entity;@2e6a8155))
AMR:
(他2 / 他, ARG3, 怀 / 怀里)
(我 / 我, mod, 怀 / 怀里)
(摇 / 摇-01, beneficiary, 他 / 他)
(摇 / 摇-01, op, 他2 / 他)

Decoded in 16,607 microseconds
Sentence: 对 他 说 ： “ 你 爱 的 那 朵 花 没 有 危险 …

Spans:
Span 1-2:  他 => 他
Span 5-6:  你 => 你
Span 13-14:  危险 => 危险-01
Span 0-1:  对 => 对-02
Span 12-13:  有 => 有-06
Span 6-7:  爱 => (person :arg0-of 爱-01)
Span 10-11:  花 => 花-01
Span 2-3:  说 => 说-02
Span 8-9:  那 => 那

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 给 你 的 小羊 画 一 个 罩子 …

Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 5-6:  画 => (thing :arg1-of 画-01)
Span 1-2:  给 => 给-02
Span 8-9:  罩子 => 罩子

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 给 你 的 花 画 一 副 盔甲 …

Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 5-6:  画 => (thing :arg1-of 画-01)
Span 8-9:  盔甲 => 盔甲
Span 1-2:  给 => 给-02
Span 4-5:  花 => 花-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 … ”

Spans:
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	…	_	PU	PU	_	3	dep	_	_
3	”	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),我,我,false)),Map(0 -> 我),Map(我 -> 我))),[Ljava.lang.String;@4a883b15,Annotation([Ljava.lang.String;@25641d39,[Ljava.lang.String;@7b36aa0c,[Ljava.lang.String;@5824a83d),Annotation([Ljava.lang.String;@537f60bf,[Ljava.lang.String;@5677323c,[Ledu.cmu.lti.nlp.amr.Dependency;@18df8434),Annotation([Ljava.lang.String;@65c7a252,[Ljava.lang.String;@4d154ccd,[Ljava.lang.String;@229c6181),Annotation([Ljava.lang.String;@4686afc2,[Ljava.lang.String;@1e0b4072,[Ledu.cmu.lti.nlp.amr.Entity;@791f145a))
AMR:


Decoded in 2,357 microseconds
Sentence: 我 也 不 太 知道 该 说 些 什么 。

Spans:
Span 2-3:  不 => 不
Span 1-2:  也 => 也
Span 7-8:  些 => 些
Span 8-9:  什么 => 什么
Span 3-4:  太 => 太
Span 0-1:  我 => 我
Span 4-5:  知道 => 知道-01
Span 5-6:  该 => 该-01
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 7-8:  些 => 些
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  知道 => 知道-01
Oracle Span 5-6:  该 => 该-01
Oracle Span 6-7:  说 => 说-01

Extra span: 什么 => 什么
Incorrect span: 说 => 说-02
Extra span: 太 => 太
Extra span: 不 => 不
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	该	_	VV	VV	_	7	mmod	_	_
7	说	_	VV	VV	_	5	ccomp	_	_
8	些	_	M	M	_	9	dep	_	_
9	什么	_	PN	PN	_	7	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x4 / 我)
(x0 / 知道-01, arg1, x5 / 该-01)
(x0 / 知道-01, manner, x3 / 也)
(x5 / 该-01, arg0, x6 / 说-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),什么,什么,false), Span(7,8,List(1),些,些,false), Span(6,7,List(2),说,说-02,false), Span(5,6,List(3),该,该-01,false), Span(4,5,List(4),知道,知道-01,false), Span(3,4,List(5),太,太,false), Span(2,3,List(6),不,不,false), Span(1,2,List(7),也,也,false), Span(0,1,List(8),我,我,false)),Map(2 -> 说-02, 5 -> 太, 8 -> 我, 7 -> 也, 1 -> 些, 4 -> 知道-01, 6 -> 不, 0 -> 什么, 3 -> 该-01),Map(些 -> 些, 我 -> 我, 也 -> 也, 太 -> 太, 不 -> 不, 说 -> 说-02, 该 -> 该-01, 知 -> 知道-01, 什 -> 什么))),[Ljava.lang.String;@38cee291,Annotation([Ljava.lang.String;@4b45a2f5,[Ljava.lang.String;@f09733f,[Ljava.lang.String;@e350b40),Annotation([Ljava.lang.String;@41a0aa7d,[Ljava.lang.String;@2794eab6,[Ledu.cmu.lti.nlp.amr.Dependency;@6340e5f0),Annotation([Ljava.lang.String;@45099dd3,[Ljava.lang.String;@13e344d,[Ljava.lang.String;@1ffaf86),Annotation([Ljava.lang.String;@6574a52c,[Ljava.lang.String;@6c1a5b54,[Ledu.cmu.lti.nlp.amr.Entity;@1c7696c6))
AMR:
(不 / 不, manner, 也 / 也)
(不 / 不, poss, 我 / 我)
(些 / 些, mod, 说 / 说-02)
(知 / 知道-01, degree, 太 / 太)
(知 / 知道-01, snt11, 该 / 该-01)
(知 / 知道-01, time, 不 / 不)
(说 / 说-02, mode, 什 / 什么)
(说 / 说-02, prep-following, 该 / 该-01)

Decoded in 24,014 microseconds
Sentence: 我 觉得 自己 太 笨拙 。

Spans:
Span 3-4:  太 => 太
Span 0-1:  我 => 我
Span 4-5:  笨拙 => 笨拙-01
Span 2-3:  自己 => 自己
Span 1-2:  觉得 => 觉得-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  太 => 太
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  笨拙 => 笨拙-01
Oracle Span 1-2:  觉得 => 觉得-01

Extra span: 自己 => 自己
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	自己	_	PN	PN	_	5	nsubj	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	笨拙	_	VA	VA	_	2	ccomp	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 觉得-01, arg0, x2 / 我)
(x0 / 觉得-01, arg1, x3 / 笨拙-01)
(x3 / 笨拙-01, degree, x4 / 太)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),笨拙,笨拙-01,false), Span(3,4,List(1),太,太,false), Span(2,3,List(2),自己,自己,false), Span(1,2,List(3),觉得,觉得-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 自己, 1 -> 太, 4 -> 我, 0 -> 笨拙-01, 3 -> 觉得-01),Map(自 -> 自己, 我 -> 我, 觉 -> 觉得-01, 太 -> 太, 笨 -> 笨拙-01))),[Ljava.lang.String;@60099951,Annotation([Ljava.lang.String;@20140db9,[Ljava.lang.String;@1e6a3214,[Ljava.lang.String;@368247b9),Annotation([Ljava.lang.String;@1a6d8329,[Ljava.lang.String;@1a942c18,[Ledu.cmu.lti.nlp.amr.Dependency;@55a147cc),Annotation([Ljava.lang.String;@71ba6d4e,[Ljava.lang.String;@738dc9b,[Ljava.lang.String;@3c77d488),Annotation([Ljava.lang.String;@63376bed,[Ljava.lang.String;@4145bad8,[Ledu.cmu.lti.nlp.amr.Entity;@d86a6f))
AMR:
(笨 / 笨拙-01, degree, 太 / 太)
(觉 / 觉得-01, ARG4, 自 / 自己)
(觉 / 觉得-01, ARG5, 笨 / 笨拙-01)
(觉 / 觉得-01, value, 我 / 我)

Decoded in 10,453 microseconds
Sentence: 我 不 知道 怎样 才 能 达到 他 的 境界 ， 怎样 才 能 再 进入 他 的 境界 … 唉 ，

Spans:
Span 1-2:  不 => 不
Span 16-17:  他 => 他
Span 7-8:  他 => 他
Span 14-15:  再 => 再
Span 20-21:  唉 => 唉
Span 18-19:  境界 => 境界
Span 9-10:  境界 => 境界
Span 0-1:  我 => 我
Span 12-13:  才 => 才
Span 4-5:  才 => 才
Span 2-3:  知道 => 知道-01
Span 13-14:  能 => 能
Span 5-6:  能 => 能
Span 6-7:  达到 => 达到-01
Span 15-16:  进入 => 进入-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 14-15:  再 => 再-01
Oracle Span 20-21:  唉 => 唉
Oracle Span 9-10:  境界 => 境界
Oracle Span 18-19:  境界 => 境界
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  才 => 才
Oracle Span 12-13:  才 => 才
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 5-6:  能 => 能-01
Oracle Span 13-14:  能 => 能-01
Oracle Span 6-7:  达到 => 达到-01
Oracle Span 15-16:  进入 => 进入-01

Extra span: 他 => 他
Incorrect span: 再 => 再
Incorrect span: 能 => 能
Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Missing span: 能 => 能-01
Missing span: 再 => 再-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	怎样	_	AD	AD	_	7	advmod	_	_
5	才	_	AD	AD	_	7	advmod	_	_
6	能	_	VV	VV	_	7	mmod	_	_
7	达到	_	VV	VV	_	3	ccomp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	境界	_	NN	NN	_	7	dobj	_	_
11	,	_	PU	PU	_	7	punct	_	_
12	怎样	_	AD	AD	_	16	advmod	_	_
13	才	_	AD	AD	_	16	advmod	_	_
14	能	_	VV	VV	_	16	mmod	_	_
15	再	_	AD	AD	_	16	advmod	_	_
16	进入	_	VV	VV	_	7	dep	_	_
17	他	_	PN	PN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	境界	_	NN	NN	_	16	dobj	_	_
20	…	_	PU	PU	_	21	punct	_	_
21	唉	_	NR	NR	_	19	prnmod	_	_
22	,	_	PU	PU	_	16	punct	_	_
23	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x26 / 知道-01, arg0, x28 / 我)
(x30 / 能-01, arg0, x32 / 达到-01)
(x30 / 能-01, manner, x31 / 才)
(x32 / 达到-01, arg1, x34 / 境界)
(x34 / 境界, poss, x35 / 他)
(x38 / 能-01, arg0, x40 / 进入-01)
(x38 / 能-01, manner, x39 / 才)
(x40 / 进入-01, arg1, x43 / 境界)
(x40 / 进入-01, manner, x41 / 再-01)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),唉,唉,false), Span(18,19,List(1),境界,境界,false), Span(16,17,List(2),他,他,false), Span(15,16,List(3),进入,进入-01,false), Span(14,15,List(4),再,再,false), Span(13,14,List(5),能,能,false), Span(12,13,List(6),才,才,false), Span(9,10,List(7),境界,境界,false), Span(7,8,List(8),他,他,false), Span(6,7,List(9),达到,达到-01,false), Span(5,6,List(10),能,能,false), Span(4,5,List(11),才,才,false), Span(2,3,List(12),知道,知道-01,false), Span(1,2,List(13),不,不,false), Span(0,1,List(14),我,我,false)),Map(2 -> 他, 5 -> 能, 12 -> 知道-01, 8 -> 他, 7 -> 境界, 1 -> 境界, 4 -> 再, 11 -> 才, 14 -> 我, 6 -> 才, 0 -> 唉, 9 -> 达到-01, 3 -> 进入-01, 10 -> 能, 13 -> 不),Map(境2 -> 境界, 境 -> 境界, 他2 -> 他, 才 -> 才, 我 -> 我, 能 -> 能, 达 -> 达到-01, 才2 -> 才, 他 -> 他, 不 -> 不, 进 -> 进入-01, 知 -> 知道-01, 唉 -> 唉, 能2 -> 能, 再 -> 再))),[Ljava.lang.String;@2892d68,Annotation([Ljava.lang.String;@5ab956d7,[Ljava.lang.String;@3646a422,[Ljava.lang.String;@750e2b97),Annotation([Ljava.lang.String;@3e27aa33,[Ljava.lang.String;@2e385cce,[Ledu.cmu.lti.nlp.amr.Dependency;@2ddc9a9f),Annotation([Ljava.lang.String;@298a5e20,[Ljava.lang.String;@2a7f1f10,[Ljava.lang.String;@46cdf8bd),Annotation([Ljava.lang.String;@f0c8a99,[Ljava.lang.String;@740cae06,[Ledu.cmu.lti.nlp.amr.Entity;@26d9b808))
AMR:
(不 / 不, poss, 我 / 我)
(唉 / 唉, polite, 境 / 境界)
(境2 / 境界, poss, 他2 / 他)
(境2 / 境界, poss, 达 / 达到-01)
(知 / 知道-01, manner, 不 / 不)
(能 / 能, manner, 才 / 才)
(能 / 能, mod, 境2 / 境界)
(能2 / 能, manner, 才2 / 才)
(能2 / 能, mod, 不 / 不)
(能2 / 能, mode, 达 / 达到-01)
(进 / 进入-01, manner, 再 / 再)
(进 / 进入-01, manner, 能 / 能)
(进 / 进入-01, snt1, 境 / 境界)
(进 / 进入-01, snt11, 他 / 他)

Decoded in 72,434 microseconds
Sentence: 泪水 的 世界 是 多么 神秘 啊 ！

Spans:
Span 2-3:  世界 => 世界
Span 6-7:  啊 => 啊
Span 4-5:  多么 => 多么
Span 3-4:  是 => 是-04
Span 0-1:  泪水 => 泪水
Span 5-6:  神秘 => 神秘-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  世界 => 世界
Oracle Span 4-5:  多么 => 多么
Oracle Span 0-1:  泪水 => 泪水
Oracle Span 5-6:  神秘 => 神秘-01

Extra span: 啊 => 啊
Extra span: 是 => 是-04
Dependencies:
1	泪水	_	NR	NR	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	世界	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	多么	_	NN	NN	_	6	nn	_	_
6	神秘	_	NN	NN	_	4	attr	_	_
7	啊	_	SP	SP	_	4	dep	_	_
8	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 神秘-01, arg0, x3 / 世界)
(x0 / 神秘-01, degree, x2 / 多么)
(x3 / 世界, mod, x4 / 泪水)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),啊,啊,false), Span(5,6,List(1),神秘,神秘-01,false), Span(4,5,List(2),多么,多么,false), Span(3,4,List(3),是,是-04,false), Span(2,3,List(4),世界,世界,false), Span(0,1,List(5),泪水,泪水,false)),Map(2 -> 多么, 5 -> 泪水, 1 -> 神秘-01, 4 -> 世界, 0 -> 啊, 3 -> 是-04),Map(啊 -> 啊, 世 -> 世界, 多 -> 多么, 泪 -> 泪水, 神 -> 神秘-01, 是 -> 是-04))),[Ljava.lang.String;@f78a47e,Annotation([Ljava.lang.String;@644baf4a,[Ljava.lang.String;@7526515b,[Ljava.lang.String;@1ed4ae0f),Annotation([Ljava.lang.String;@54c5a2ff,[Ljava.lang.String;@6d4d66d2,[Ledu.cmu.lti.nlp.amr.Dependency;@2a265ea9),Annotation([Ljava.lang.String;@11392934,[Ljava.lang.String;@6892b3b6,[Ljava.lang.String;@6e6f2380),Annotation([Ljava.lang.String;@76a4ebf2,[Ljava.lang.String;@2e8c1c9b,[Ledu.cmu.lti.nlp.amr.Entity;@53fe15ff))
AMR:
(世 / 世界, mod, 泪 / 泪水)
(是 / 是-04, location, 世 / 世界)
(神 / 神秘-01, ARG1, 啊 / 啊)
(神 / 神秘-01, degree, 多 / 多么)
(神 / 神秘-01, degree, 是 / 是-04)

Decoded in 18,198 microseconds
Sentence: VIII 。

Spans:
Span 0-1:  VIII => VIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  VIII => VIII

Dependencies:
1	VIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),VIII,VIII,false)),Map(0 -> VIII),Map(v -> VIII))),[Ljava.lang.String;@449a4f23,Annotation([Ljava.lang.String;@1530c739,[Ljava.lang.String;@5b1669c0,[Ljava.lang.String;@78e4deb0),Annotation([Ljava.lang.String;@6e9175d8,[Ljava.lang.String;@7d0b7e3c,[Ledu.cmu.lti.nlp.amr.Dependency;@15bb5034),Annotation([Ljava.lang.String;@4b741d6d,[Ljava.lang.String;@2eae8e6e,[Ljava.lang.String;@8f2ef19),Annotation([Ljava.lang.String;@470734c3,[Ljava.lang.String;@2cf3d63b,[Ledu.cmu.lti.nlp.amr.Entity;@7674f035))
AMR:


Decoded in 2,900 microseconds
Sentence: 很 快 我 就 进一步 了解 了 这 朵 花儿 。

Spans:
Span 5-6:  了解 => 了解-02
Span 3-4:  就 => 就-01
Span 0-1:  很 => 很
Span 1-2:  快 => 快
Span 2-3:  我 => 我
Span 9-10:  花儿 => 花儿
Span 7-8:  这 => 这
Span 4-5:  进一步 => 进一步

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  了解 => 了解-02
Oracle Span 3-4:  就 => 就
Oracle Span 0-1:  很 => 很
Oracle Span 1-2:  快 => 快
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  花儿 => 花儿
Oracle Span 7-8:  这 => 这
Oracle Span 4-5:  进一步 => 进一步

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	很	_	AD	AD	_	2	advmod	_	_
2	快	_	VA	VA	_	0	root	_	_
3	我	_	PN	PN	_	6	dep	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	进一步	_	AD	AD	_	6	advmod	_	_
6	了解	_	VV	VV	_	2	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	这	_	DT	DT	_	10	det	_	_
9	朵	_	M	M	_	8	clf	_	_
10	花儿	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 了解-02, arg0, x2 / 我)
(x0 / 了解-02, arg1, x3 / 花儿)
(x0 / 了解-02, manner, x5 / 进一步)
(x0 / 了解-02, manner, x6 / 就)
(x0 / 了解-02, manner, x7 / 快)
(x3 / 花儿, mod, x4 / 这)
(x7 / 快, degree, x8 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),花儿,花儿,false), Span(7,8,List(1),这,这,false), Span(5,6,List(2),了解,了解-02,false), Span(4,5,List(3),进一步,进一步,false), Span(3,4,List(4),就,就-01,false), Span(2,3,List(5),我,我,false), Span(1,2,List(6),快,快,false), Span(0,1,List(7),很,很,false)),Map(2 -> 了解-02, 5 -> 我, 7 -> 很, 1 -> 这, 4 -> 就-01, 6 -> 快, 0 -> 花儿, 3 -> 进一步),Map(就 -> 就-01, 了 -> 了解-02, 快 -> 快, 我 -> 我, 这 -> 这, 很 -> 很, 花 -> 花儿, 进 -> 进一步))),[Ljava.lang.String;@69e153c5,Annotation([Ljava.lang.String;@173ed316,[Ljava.lang.String;@25ce9dc4,[Ljava.lang.String;@74ea2410),Annotation([Ljava.lang.String;@17f62e33,[Ljava.lang.String;@76b1e9b8,[Ledu.cmu.lti.nlp.amr.Dependency;@27406a17),Annotation([Ljava.lang.String;@2af004b,[Ljava.lang.String;@248e319b,[Ljava.lang.String;@5d0bf09b),Annotation([Ljava.lang.String;@793f29ff,[Ljava.lang.String;@3e8c3cb,[Ledu.cmu.lti.nlp.amr.Entity;@563f38c4))
AMR:
(了 / 了解-02, manner, 就 / 就-01)
(了 / 了解-02, manner, 快 / 快)
(了 / 了解-02, manner, 进 / 进一步)
(了 / 了解-02, op, 我 / 我)
(了 / 了解-02, snt1, 花 / 花儿)
(快 / 快, degree, 很 / 很)
(花 / 花儿, mod, 这 / 这)

Decoded in 48,095 microseconds
Sentence: 在 小 王子 的 星球 上 ， 过去 一直 都 生长 着 一些 只 有 一 层 花瓣 的 很 简单 的 花 。

Spans:
Span 12-13:  一些 => 一些
Span 8-9:  一直 => 一直
Span 13-14:  只 => 只
Span 0-1:  在 => 在-01
Span 1-2:  小 => 小
Span 19-20:  很 => 很
Span 4-5:  星球 => 星球
Span 14-15:  有 => 有-06
Span 2-3:  王子 => 王子
Span 10-11:  生长 => 生长-01
Span 20-21:  简单 => 简单-01
Span 22-23:  花 => 花-01
Span 17-18:  花瓣 => 花瓣
Span 7-8:  过去 => 过去-01
Span 9-10:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一直 => 一直
Oracle Span 13-14:  只 => 只
Oracle Span 1-2:  小 => 小-01
Oracle Span 19-20:  很 => 很
Oracle Span 4-5:  星球 => 星球
Oracle Span 14-15:  有 => 有
Oracle Span 2-3:  王子 => 王子
Oracle Span 10-11:  生长 => 生长-01
Oracle Span 20-21:  简单 => 简单-01
Oracle Span 22-23:  花 => 花
Oracle Span 17-18:  花瓣 => 花瓣
Oracle Span 7-8:  过去 => 过去-01
Oracle Span 9-10:  都 => 都

Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Extra span: 一些 => 一些
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Missing span: 花 => 花
Missing span: 有 => 有
Dependencies:
1	在	_	P	P	_	12	prep	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	1	plmod	_	_
7	,	_	PU	PU	_	12	punct	_	_
8	过去	_	NT	NT	_	12	tmod	_	_
9	一直	_	AD	AD	_	12	advmod	_	_
10	都	_	AD	AD	_	12	advmod	_	_
11	生长	_	NN	NN	_	12	dobj	_	_
12	着	_	VV	VV	_	0	root	_	_
13	一些	_	CD	CD	_	23	nummod	_	_
14	只	_	AD	AD	_	15	advmod	_	_
15	有	_	VE	VE	_	23	rcmod	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	层	_	M	M	_	18	clf	_	_
18	花瓣	_	NN	NN	_	15	dobj	_	_
19	的	_	DEC	DEC	_	15	cpm	_	_
20	很	_	AD	AD	_	21	advmod	_	_
21	简单	_	VA	VA	_	23	rcmod	_	_
22	的	_	DEC	DEC	_	21	cpm	_	_
23	花	_	NN	NN	_	12	dobj	_	_
24	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 生长-01, arg0, x5 / 花)
(x0 / 生长-01, location, x13 / 星球)
(x0 / 生长-01, manner, x2 / 都)
(x0 / 生长-01, manner, x3 / 一直)
(x0 / 生长-01, time, x4 / 过去-01)
(x13 / 星球, poss, x14 / 王子)
(x14 / 王子, mod, x15 / 小-01)
(x5 / 花, mod, x6 / 简单-01)
(x6 / 简单-01, degree, x7 / 很)
(x8 / 有, arg0, x5 / 花)
(x8 / 有, arg1, x10 / 花瓣)
(x8 / 有, manner, x9 / 只)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),花,花-01,false), Span(20,21,List(1),简单,简单-01,false), Span(19,20,List(2),很,很,false), Span(17,18,List(3),花瓣,花瓣,false), Span(14,15,List(4),有,有-06,false), Span(13,14,List(5),只,只,false), Span(12,13,List(6),一些,一些,false), Span(10,11,List(7),生长,生长-01,false), Span(9,10,List(8),都,都,false), Span(8,9,List(9),一直,一直,false), Span(7,8,List(10),过去,过去-01,false), Span(4,5,List(11),星球,星球,false), Span(2,3,List(12),王子,王子,false), Span(1,2,List(13),小,小,false), Span(0,1,List(14),在,在-01,false)),Map(2 -> 很, 5 -> 只, 12 -> 王子, 8 -> 都, 7 -> 生长-01, 1 -> 简单-01, 4 -> 有-06, 11 -> 星球, 14 -> 在-01, 6 -> 一些, 0 -> 花-01, 9 -> 一直, 3 -> 花瓣, 10 -> 过去-01, 13 -> 小),Map(在 -> 在-01, 生 -> 生长-01, 星 -> 星球, 简 -> 简单-01, 过 -> 过去-01, 王 -> 王子, 很 -> 很, 花2 -> 花瓣, 一2 -> 一直, 小 -> 小, 花 -> 花-01, 只 -> 只, 都 -> 都, 一 -> 一些, 有 -> 有-06))),[Ljava.lang.String;@543295b0,Annotation([Ljava.lang.String;@54422e18,[Ljava.lang.String;@117159c0,[Ljava.lang.String;@3e27ba32),Annotation([Ljava.lang.String;@7ef82753,[Ljava.lang.String;@3b0fe47a,[Ledu.cmu.lti.nlp.amr.Dependency;@202b0582),Annotation([Ljava.lang.String;@235ecd9f,[Ljava.lang.String;@1ca3b418,[Ljava.lang.String;@58cbafc2),Annotation([Ljava.lang.String;@2034b64c,[Ljava.lang.String;@75d3a5e0,[Ledu.cmu.lti.nlp.amr.Entity;@74d1dc36))
AMR:
(在 / 在-01, ARG4, 小 / 小)
(星 / 星球, poss, 王 / 王子)
(有 / 有-06, ARG4, 一 / 一些)
(有 / 有-06, manner, 只 / 只)
(有 / 有-06, prep-following, 花2 / 花瓣)
(有 / 有-06, time, 花 / 花-01)
(王 / 王子, mod, 小 / 小)
(生 / 生长-01, location, 星 / 星球)
(生 / 生长-01, manner, 一2 / 一直)
(生 / 生长-01, manner, 都 / 都)
(生 / 生长-01, prep-through, 花 / 花-01)
(生 / 生长-01, time, 过 / 过去-01)
(简 / 简单-01, degree, 很 / 很)
(花 / 花-01, mod, 简 / 简单-01)

Decoded in 144,157 microseconds
Sentence: 这些 花 非常 小 ， 一点 也 不 占 地方 ， 从来 也 不 会 去 打搅 任何 人 。

Spans:
Span 5-6:  一点 => 一点
Span 13-14:  不 => 不
Span 7-8:  不 => 不
Span 12-13:  也 => 也
Span 6-7:  也 => 也
Span 18-19:  人 => 人
Span 11-12:  从来 => 从来
Span 17-18:  任何 => 任何
Span 14-15:  会 => 会-03
Span 8-9:  占 => 占-02
Span 15-16:  去 => 去-02
Span 9-10:  地方 => 地方
Span 3-4:  小 => 小
Span 16-17:  打搅 => 打搅-01
Span 1-2:  花 => 花-01
Span 0-1:  这些 => 这些
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  一点 => 一点
Oracle Span 18-19:  人 => 人
Oracle Span 11-12:  从来 => 从来
Oracle Span 17-18:  任何 => 任何
Oracle Span 14-15:  会 => 会-02
Oracle Span 8-9:  占 => 占-02
Oracle Span 9-10:  地方 => 地方
Oracle Span 3-4:  小 => 小-01
Oracle Span 16-17:  打搅 => 打搅-01
Oracle Span 1-2:  花 => 花
Oracle Span 0-1:  这些 => 这些
Oracle Span 2-3:  非常 => 非常-01

Extra span: 去 => 去-02
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 不 => 不
Extra span: 也 => 也
Incorrect span: 小 => 小
Incorrect span: 非常 => 非常
Incorrect span: 花 => 花-01
Missing span: 小 => 小-01
Missing span: 花 => 花
Missing span: 非常 => 非常-01
Missing span: 会 => 会-02
Dependencies:
1	这些	_	DT	DT	_	2	det	_	_
2	花	_	NN	NN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	小	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	一点	_	AD	AD	_	9	advmod	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	占	_	VV	VV	_	4	dep	_	_
10	地方	_	NN	NN	_	9	dobj	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	从来	_	AD	AD	_	17	advmod	_	_
13	也	_	AD	AD	_	17	advmod	_	_
14	不	_	AD	AD	_	17	neg	_	_
15	会	_	VV	VV	_	17	mmod	_	_
16	去	_	MSP	MSP	_	17	prtmod	_	_
17	打搅	_	VV	VV	_	4	dep	_	_
18	任何	_	DT	DT	_	19	det	_	_
19	人	_	NN	NN	_	17	dobj	_	_
20	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x23 / 小-01, arg0, x25 / 花)
(x23 / 小-01, degree, x24 / 非常-01)
(x25 / 花, mod, x26 / 这些)
(x27 / 占-02, arg1, x29 / 地方)
(x27 / 占-02, degree, x30 / 一点)
(x31 / 会-02, arg0, x33 / 打搅-01)
(x33 / 打搅-01, arg1, x35 / 人)
(x33 / 打搅-01, time, x37 / 从来)
(x35 / 人, mod, x36 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),人,人,false), Span(17,18,List(1),任何,任何,false), Span(16,17,List(2),打搅,打搅-01,false), Span(15,16,List(3),去,去-02,false), Span(14,15,List(4),会,会-03,false), Span(13,14,List(5),不,不,false), Span(12,13,List(6),也,也,false), Span(11,12,List(7),从来,从来,false), Span(9,10,List(8),地方,地方,false), Span(8,9,List(9),占,占-02,false), Span(7,8,List(10),不,不,false), Span(6,7,List(11),也,也,false), Span(5,6,List(12),一点,一点,false), Span(3,4,List(13),小,小,false), Span(2,3,List(14),非常,非常,false), Span(1,2,List(15),花,花-01,false), Span(0,1,List(16),这些,这些,false)),Map(2 -> 打搅-01, 5 -> 不, 12 -> 一点, 15 -> 花-01, 8 -> 地方, 7 -> 从来, 1 -> 任何, 4 -> 会-03, 11 -> 也, 14 -> 非常, 6 -> 也, 0 -> 人, 9 -> 占-02, 16 -> 这些, 3 -> 去-02, 10 -> 不, 13 -> 小),Map(从 -> 从来, 任 -> 任何, 也 -> 也, 这 -> 这些, 打 -> 打搅-01, 去 -> 去-02, 小 -> 小, 地 -> 地方, 花 -> 花-01, 非 -> 非常, 会 -> 会-03, 不 -> 不, 不2 -> 不, 也2 -> 也, 占 -> 占-02, 人 -> 人, 一 -> 一点))),[Ljava.lang.String;@7161d8d1,Annotation([Ljava.lang.String;@74e28667,[Ljava.lang.String;@1cf6d1be,[Ljava.lang.String;@663c9e7a),Annotation([Ljava.lang.String;@19e4653c,[Ljava.lang.String;@795509d9,[Ledu.cmu.lti.nlp.amr.Dependency;@53045c6c),Annotation([Ljava.lang.String;@5149d738,[Ljava.lang.String;@6bbe85a8,[Ljava.lang.String;@3a7442c7),Annotation([Ljava.lang.String;@4be29ed9,[Ljava.lang.String;@548d708a,[Ledu.cmu.lti.nlp.amr.Entity;@4b013c76))
AMR:
(不 / 不, domain, 小 / 小)
(人 / 人, mod, 任 / 任何)
(会 / 会-03, ARG4, 去 / 去-02)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 也 / 也)
(占 / 占-02, degree, 一 / 一点)
(占 / 占-02, manner, 不2 / 不)
(占 / 占-02, manner, 也2 / 也)
(占 / 占-02, quant, 地 / 地方)
(去 / 去-02, prep-through, 打 / 打搅-01)
(小 / 小, degree, 非 / 非常)
(小 / 小, prep-on-behalf, 花 / 花-01)
(打 / 打搅-01, time, 人 / 人)
(打 / 打搅-01, time, 从 / 从来)
(花 / 花-01, ARG2, 这 / 这些)
(花 / 花-01, manner, 占 / 占-02)

Decoded in 162,806 microseconds
Sentence: 她们 早晨 在 草丛 中 开放 ， 晚上 就 凋谢 了 。

Spans:
Span 9-10:  凋谢 => 凋谢-01
Span 2-3:  在 => 在-01
Span 0-1:  她们 => 她们
Span 8-9:  就 => 就-01
Span 5-6:  开放 => 开放-04
Span 1-2:  早晨 => 早晨
Span 7-8:  晚上 => 晚上
Span 3-4:  草丛 => 草丛

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  凋谢 => 凋谢-01
Oracle Span 0-1:  她们 => 她们
Oracle Span 8-9:  就 => 就
Oracle Span 5-6:  开放 => 开放-04
Oracle Span 1-2:  早晨 => 早晨
Oracle Span 7-8:  晚上 => 晚上
Oracle Span 3-4:  草丛 => 草丛

Incorrect span: 就 => 就-01
Extra span: 在 => 在-01
Missing span: 就 => 就
Dependencies:
1	她们	_	PN	PN	_	6	nsubj	_	_
2	早晨	_	NT	NT	_	6	tmod	_	_
3	在	_	P	P	_	6	prep	_	_
4	草丛	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	3	plmod	_	_
6	开放	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	晚上	_	NT	NT	_	10	tmod	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	凋谢	_	VV	VV	_	6	ccomp	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 开放-04, arg0, x13 / 她们)
(x12 / 开放-04, location, x14 / 草丛)
(x12 / 开放-04, time, x15 / 早晨)
(x16 / 凋谢-01, manner, x19 / 就)
(x16 / 凋谢-01, time, x17 / 晚上)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),凋谢,凋谢-01,false), Span(8,9,List(1),就,就-01,false), Span(7,8,List(2),晚上,晚上,false), Span(5,6,List(3),开放,开放-04,false), Span(3,4,List(4),草丛,草丛,false), Span(2,3,List(5),在,在-01,false), Span(1,2,List(6),早晨,早晨,false), Span(0,1,List(7),她们,她们,false)),Map(2 -> 晚上, 5 -> 在-01, 7 -> 她们, 1 -> 就-01, 4 -> 草丛, 6 -> 早晨, 0 -> 凋谢-01, 3 -> 开放-04),Map(就 -> 就-01, 早 -> 早晨, 在 -> 在-01, 凋 -> 凋谢-01, 晚 -> 晚上, 开 -> 开放-04, 草 -> 草丛, 她 -> 她们))),[Ljava.lang.String;@53fb3dab,Annotation([Ljava.lang.String;@cb0755b,[Ljava.lang.String;@33065d67,[Ljava.lang.String;@712625fd),Annotation([Ljava.lang.String;@7bba5817,[Ljava.lang.String;@742ff096,[Ledu.cmu.lti.nlp.amr.Dependency;@75437611),Annotation([Ljava.lang.String;@350aac89,[Ljava.lang.String;@1c5920df,[Ljava.lang.String;@17f9d882),Annotation([Ljava.lang.String;@79e4c792,[Ljava.lang.String;@196a42c3,[Ledu.cmu.lti.nlp.amr.Entity;@4c60d6e9))
AMR:
(凋 / 凋谢-01, time, 晚 / 晚上)
(在 / 在-01, ARG6, 她 / 她们)
(就 / 就-01, ARG0, 晚 / 晚上)
(就 / 就-01, ARG4, 开 / 开放-04)
(开 / 开放-04, time, 早 / 早晨)
(早 / 早晨, ARG3, 在 / 在-01)
(草 / 草丛, manner, 在 / 在-01)

Decoded in 48,534 microseconds
Sentence: 不 知 从 哪里 来 了 一 颗 种子 ， 忽然 一天 这 种子 发 了 芽 。 小 王子 特别 仔细 地 监视 着 这 棵 与众不同 的 小苗 ：

Spans:
Span 11-12:  一天 => 一天
Span 0-1:  不 => 不
Span 27-28:  与众不同 => 与众不同-01
Span 21-22:  仔细 => 仔细-01
Span 22-23:  地 => 地
Span 18-19:  小 => 小
Span 10-11:  忽然 => 忽然
Span 4-5:  来 => 来-06
Span 20-21:  特别 => 特别
Span 19-20:  王子 => 王子
Span 23-24:  监视 => 监视-01
Span 1-2:  知 => 知-01
Span 13-14:  种子 => 种子
Span 8-9:  种子 => 种子
Span 25-26:  这 => 这
Span 12-13:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一天 => 一天
Oracle Span 27-28:  与众不同 => 与众不同-01
Oracle Span 21-22:  仔细 => 仔细-01
Oracle Span 18-19:  小 => 小-01
Oracle Span 10-11:  忽然 => 忽然
Oracle Span 4-5:  来 => 来-01
Oracle Span 20-21:  特别 => 特别-01
Oracle Span 19-20:  王子 => 王子
Oracle Span 23-24:  监视 => 监视-01
Oracle Span 1-2:  知 => 知-01
Oracle Span 8-9:  种子 => 种子
Oracle Span 12-13:  这 => 这
Oracle Span 25-26:  这 => 这

Extra span: 地 => 地
Incorrect span: 特别 => 特别
Incorrect span: 小 => 小
Extra span: 种子 => 种子
Incorrect span: 来 => 来-06
Extra span: 不 => 不
Missing span: 来 => 来-01
Missing span: 小 => 小-01
Missing span: 特别 => 特别-01
Dependencies:
1	不	_	AD	AD	_	2	neg	_	_
2	知	_	VV	VV	_	15	conj	_	_
3	从	_	P	P	_	5	prep	_	_
4	哪里	_	NN	NN	_	3	pobj	_	_
5	来	_	VV	VV	_	2	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	颗	_	M	M	_	9	clf	_	_
9	种子	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	2	punct	_	_
11	忽然	_	VV	VV	_	2	dep	_	_
12	一天	_	CD	CD	_	11	range	_	_
13	这	_	DT	DT	_	14	det	_	_
14	种子	_	NN	NN	_	15	dep	_	_
15	发	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	芽	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	15	punct	_	_
19	小	_	JJ	JJ	_	20	amod	_	_
20	王子	_	NN	NN	_	25	nsubj	_	_
21	特别	_	AD	AD	_	25	advmod	_	_
22	仔细	_	AD	AD	_	25	advmod	_	_
23	地	_	NN	NN	_	24	nn	_	_
24	监视	_	NN	NN	_	25	prep	_	_
25	着	_	VV	VV	_	15	dep	_	_
26	这	_	DT	DT	_	28	det	_	_
27	棵	_	CD	CD	_	26	dep	_	_
28	与众不同	_	NN	NN	_	30	assmod	_	_
29	的	_	DEG	DEG	_	28	assm	_	_
30	小苗	_	NN	NN	_	25	dobj	_	_
31	：	_	PU	PU	_	15	punct	_	_

Oracle:
(x12 / 一天, mod, x13 / 忽然)
(x14 / 监视-01, arg0, x17 / 王子)
(x14 / 监视-01, manner, x15 / 仔细-01)
(x15 / 仔细-01, degree, x16 / 特别-01)
(x3 / 知-01, arg1, x5 / 来-01)
(x5 / 来-01, arg0, x6 / 种子)

Input(Some(Graph(null,ArrayBuffer(Span(27,28,List(0),与众不同,与众不同-01,false), Span(25,26,List(1),这,这,false), Span(23,24,List(2),监视,监视-01,false), Span(22,23,List(3),地,地,false), Span(21,22,List(4),仔细,仔细-01,false), Span(20,21,List(5),特别,特别,false), Span(19,20,List(6),王子,王子,false), Span(18,19,List(7),小,小,false), Span(13,14,List(8),种子,种子,false), Span(12,13,List(9),这,这,false), Span(11,12,List(10),一天,一天,false), Span(10,11,List(11),忽然,忽然,false), Span(8,9,List(12),种子,种子,false), Span(4,5,List(13),来,来-06,false), Span(1,2,List(14),知,知-01,false), Span(0,1,List(15),不,不,false)),Map(2 -> 监视-01, 5 -> 特别, 12 -> 种子, 15 -> 不, 8 -> 种子, 7 -> 小, 1 -> 这, 4 -> 仔细-01, 11 -> 忽然, 14 -> 知-01, 6 -> 王子, 0 -> 与众不同-01, 9 -> 这, 3 -> 地, 10 -> 一天, 13 -> 来-06),Map(监 -> 监视-01, 仔 -> 仔细-01, 忽 -> 忽然, 来 -> 来-06, 与 -> 与众不同-01, 这 -> 这, 王 -> 王子, 小 -> 小, 地 -> 地, 不 -> 不, 种 -> 种子, 这2 -> 这, 知 -> 知-01, 特 -> 特别, 一 -> 一天, 种2 -> 种子))),[Ljava.lang.String;@15043a2f,Annotation([Ljava.lang.String;@4a83a74a,[Ljava.lang.String;@1349883,[Ljava.lang.String;@4b29d1d2),Annotation([Ljava.lang.String;@7f485fda,[Ljava.lang.String;@28261e8e,[Ledu.cmu.lti.nlp.amr.Dependency;@d737b89),Annotation([Ljava.lang.String;@8519cb4,[Ljava.lang.String;@35dab4eb,[Ljava.lang.String;@2d901eb0),Annotation([Ljava.lang.String;@3ba987b8,[Ljava.lang.String;@3f191845,[Ledu.cmu.lti.nlp.amr.Entity;@5f049ea1))
AMR:
(一 / 一天, mod, 忽 / 忽然)
(仔 / 仔细-01, degree, 特 / 特别)
(地 / 地, manner, 仔 / 仔细-01)
(忽 / 忽然, poss, 种2 / 种子)
(来 / 来-06, op, 种2 / 种子)
(特 / 特别, location, 种 / 种子)
(特 / 特别, prep-on-behalf, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(监 / 监视-01, ARG5, 这 / 这)
(监 / 监视-01, manner, 与 / 与众不同-01)
(监 / 监视-01, manner, 仔 / 仔细-01)
(知 / 知-01, manner, 不 / 不)
(知 / 知-01, snt3, 来 / 来-06)
(种 / 种子, mod, 这2 / 这)
(种 / 种子, poss, 一 / 一天)

Decoded in 139,208 microseconds
Sentence: 这 玩艺 说不定 是 一 种 新 的 猴面包树 。

Spans:
Span 6-7:  新 => 新-01
Span 3-4:  是 => 是-04
Span 8-9:  猴面包树 => 猴面包树
Span 1-2:  玩艺 => 玩艺
Span 5-6:  种 => 种
Span 2-3:  说不定 => 说不定-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  新 => 新-01
Oracle Span 8-9:  猴面包树 => 猴面包树
Oracle Span 1-2:  玩艺 => 玩艺
Oracle Span 2-3:  说不定 => 说不定-01
Oracle Span 0-1:  这 => 这

Extra span: 种 => 种
Extra span: 是 => 是-04
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	玩艺	_	CD	CD	_	1	dep	_	_
3	说不定	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	9	clf	_	_
7	新	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	猴面包树	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 猴面包树, domain, x4 / 玩艺)
(x0 / 猴面包树, manner, x6 / 说不定-01)
(x0 / 猴面包树, mod, x2 / 新-01)
(x4 / 玩艺, mod, x5 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),猴面包树,猴面包树,false), Span(6,7,List(1),新,新-01,false), Span(5,6,List(2),种,种,false), Span(3,4,List(3),是,是-04,false), Span(2,3,List(4),说不定,说不定-01,false), Span(1,2,List(5),玩艺,玩艺,false), Span(0,1,List(6),这,这,false)),Map(2 -> 种, 5 -> 玩艺, 1 -> 新-01, 4 -> 说不定-01, 6 -> 这, 0 -> 猴面包树, 3 -> 是-04),Map(玩 -> 玩艺, 这 -> 这, 新 -> 新-01, 猴 -> 猴面包树, 说 -> 说不定-01, 种 -> 种, 是 -> 是-04))),[Ljava.lang.String;@72cc7e6f,Annotation([Ljava.lang.String;@5afa3c9,[Ljava.lang.String;@72035809,[Ljava.lang.String;@909217e),Annotation([Ljava.lang.String;@18271936,[Ljava.lang.String;@606e4010,[Ledu.cmu.lti.nlp.amr.Dependency;@8458f04),Annotation([Ljava.lang.String;@48075da3,[Ljava.lang.String;@68c9133c,[Ljava.lang.String;@7a35b0f5),Annotation([Ljava.lang.String;@5e2c3d18,[Ljava.lang.String;@2cb4893b,[Ledu.cmu.lti.nlp.amr.Entity;@cc43f62))
AMR:
(新 / 新-01, ARG3, 种 / 种)
(是 / 是-04, ARG1, 说 / 说不定-01)
(猴 / 猴面包树, domain, 玩 / 玩艺)
(猴 / 猴面包树, manner, 说 / 说不定-01)
(猴 / 猴面包树, mod, 新 / 新-01)
(玩 / 玩艺, mod, 这 / 这)

Decoded in 17,353 microseconds
Sentence: 但是 ， 这 小苗 不久 就 不 再 长 了 ， 而且 开始 孕育 着 一 个 花朵 。

Spans:
Span 6-7:  不 => 不
Span 4-5:  不久 => 不久
Span 7-8:  再 => 再
Span 13-14:  孕育 => 孕育-01
Span 5-6:  就 => 就-01
Span 12-13:  开始 => 开始
Span 17-18:  花朵 => 花朵
Span 2-3:  这 => 这
Span 8-9:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  不久 => 不久
Oracle Span 7-8:  再 => 再
Oracle Span 13-14:  孕育 => 孕育-01
Oracle Span 5-6:  就 => 就
Oracle Span 12-13:  开始 => 开始-02
Oracle Span 17-18:  花朵 => 花朵
Oracle Span 2-3:  这 => 这
Oracle Span 8-9:  长 => 长-01

Incorrect span: 开始 => 开始
Incorrect span: 长 => 长-04
Extra span: 不 => 不
Incorrect span: 就 => 就-01
Missing span: 长 => 长-01
Missing span: 就 => 就
Missing span: 开始 => 开始-02
Dependencies:
1	但是	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	这	_	DT	DT	_	4	det	_	_
4	小苗	_	NN	NN	_	14	nsubj	_	_
5	不久	_	NT	NT	_	14	tmod	_	_
6	就	_	P	P	_	14	prep	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	再	_	AD	AD	_	9	advmod	_	_
9	长	_	VA	VA	_	6	pccomp	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	9	punct	_	_
12	而且	_	CC	CC	_	9	cc	_	_
13	开始	_	VV	VV	_	9	dep	_	_
14	孕育	_	VV	VV	_	0	root	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	18	clf	_	_
18	花朵	_	NN	NN	_	14	dobj	_	_
19	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x11 / 开始-02, arg0, x12 / 孕育-01)
(x12 / 孕育-01, arg1, x13 / 花朵)
(x3 / 长-01, manner, x6 / 再)
(x3 / 长-01, manner, x7 / 就)
(x3 / 长-01, time, x8 / 不久)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),花朵,花朵,false), Span(13,14,List(1),孕育,孕育-01,false), Span(12,13,List(2),开始,开始,false), Span(8,9,List(3),长,长-04,false), Span(7,8,List(4),再,再,false), Span(6,7,List(5),不,不,false), Span(5,6,List(6),就,就-01,false), Span(4,5,List(7),不久,不久,false), Span(2,3,List(8),这,这,false)),Map(2 -> 开始, 5 -> 不, 8 -> 这, 7 -> 不久, 1 -> 孕育-01, 4 -> 再, 6 -> 就-01, 0 -> 花朵, 3 -> 长-04),Map(就 -> 就-01, 这 -> 这, 不2 -> 不久, 不 -> 不, 花 -> 花朵, 开 -> 开始, 孕 -> 孕育-01, 长 -> 长-04, 再 -> 再))),[Ljava.lang.String;@5b218417,Annotation([Ljava.lang.String;@645aa696,[Ljava.lang.String;@6caf0677,[Ljava.lang.String;@413d1baf),Annotation([Ljava.lang.String;@16eb3ea3,[Ljava.lang.String;@273444fe,[Ledu.cmu.lti.nlp.amr.Dependency;@33bc72d1),Annotation([Ljava.lang.String;@1a75e76a,[Ljava.lang.String;@5524cca1,[Ljava.lang.String;@5032714f),Annotation([Ljava.lang.String;@48bb62,[Ljava.lang.String;@353352b6,[Ledu.cmu.lti.nlp.amr.Entity;@4681c175))
AMR:
(孕 / 孕育-01, prep-for, 花 / 花朵)
(就 / 就-01, ARG1, 不 / 不)
(开 / 开始, prep-out, 孕 / 孕育-01)
(这 / 这, accompanier, 就 / 就-01)
(长 / 长-04, ARG3, 孕 / 孕育-01)
(长 / 长-04, manner, 再 / 再)
(长 / 长-04, manner, 就 / 就-01)
(长 / 长-04, time, 不2 / 不久)

Decoded in 35,885 microseconds
Sentence: 看到 在 这 棵 苗 上 长出 了 一 个 很 大 很 大 的 花蕾 ， 小 王子 感觉 到 从 这个 花苞 中 一定 会 出现 一 个 奇迹 。

Spans:
Span 25-26:  一定 => 一定
Span 26-27:  会 => 会-03
Span 27-28:  出现 => 出现-01
Span 20-21:  到 => 到-01
Span 1-2:  在 => 在-01
Span 13-14:  大 => 大
Span 11-12:  大 => 大
Span 30-31:  奇迹 => 奇迹
Span 17-18:  小 => 小
Span 12-13:  很 => 很
Span 10-11:  很 => 很
Span 19-20:  感觉 => 感觉-01
Span 18-19:  王子 => 王子
Span 0-1:  看到 => (thing :arg1-of 看到-01)
Span 23-24:  花苞 => 花苞
Span 15-16:  花蕾 => 花蕾
Span 4-5:  苗 => 苗
Span 2-3:  这 => 这
Span 22-23:  这个 => 这个
Span 6-7:  长出 => 长出-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 然而 这 朵 花 藏 在 它 那 绿茵茵 的 房间 中 用 了 很 长 的 时间 来 打扮 自己 。

Spans:
Span 5-6:  在 => 在-01
Span 6-7:  它 => 它
Span 14-15:  很 => 很
Span 10-11:  房间 => 房间
Span 19-20:  打扮 => 打扮-01
Span 17-18:  时间 => 时间
Span 18-19:  来 => 来-06
Span 12-13:  用 => 用
Span 8-9:  绿茵茵 => 绿茵茵
Span 20-21:  自己 => 自己
Span 3-4:  花 => 花-01
Span 4-5:  藏 => 藏-01
Span 1-2:  这 => 这
Span 7-8:  那 => 那
Span 15-16:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  房间 => 房间
Oracle Span 19-20:  打扮 => 打扮-01
Oracle Span 17-18:  时间 => 时间
Oracle Span 12-13:  用 => 用-01
Oracle Span 8-9:  绿茵茵 => 绿茵茵
Oracle Span 3-4:  花 => 花
Oracle Span 4-5:  藏 => 藏-01
Oracle Span 1-2:  这 => 这
Oracle Span 7-8:  那 => 那

Extra span: 自己 => 自己
Extra span: 来 => 来-06
Extra span: 长 => 长-04
Extra span: 很 => 很
Incorrect span: 用 => 用
Extra span: 它 => 它
Extra span: 在 => 在-01
Incorrect span: 花 => 花-01
Missing span: 用 => 用-01
Missing span: 花 => 花
Dependencies:
1	然而	_	AD	AD	_	13	advmod	_	_
2	这	_	DT	DT	_	4	det	_	_
3	朵	_	M	M	_	2	clf	_	_
4	花	_	NN	NN	_	13	nsubj	_	_
5	藏	_	NR	NR	_	13	nsubj	_	_
6	在	_	P	P	_	13	prep	_	_
7	它	_	PN	PN	_	9	nn	_	_
8	那	_	DT	DT	_	9	det	_	_
9	绿茵茵	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	房间	_	NN	NN	_	12	lobj	_	_
12	中	_	LC	LC	_	6	plmod	_	_
13	用	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	很	_	AD	AD	_	16	advmod	_	_
16	长	_	VA	VA	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	时间	_	NN	NN	_	13	dobj	_	_
19	来	_	MSP	MSP	_	20	prtmod	_	_
20	打扮	_	VV	VV	_	13	conj	_	_
21	自己	_	PN	PN	_	20	dobj	_	_
22	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 用-01, arg0, x12 / 花)
(x11 / 用-01, arg1, x14 / 时间)
(x11 / 用-01, arg2, x16 / 打扮-01)
(x11 / 用-01, location, x19 / 房间)
(x12 / 花, mod, x13 / 这)
(x19 / 房间, mod, x20 / 那)
(x19 / 房间, mod, x21 / 绿茵茵)
(x23 / 藏-01, arg1, x19 / 房间)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),自己,自己,false), Span(19,20,List(1),打扮,打扮-01,false), Span(18,19,List(2),来,来-06,false), Span(17,18,List(3),时间,时间,false), Span(15,16,List(4),长,长-04,false), Span(14,15,List(5),很,很,false), Span(12,13,List(6),用,用,false), Span(10,11,List(7),房间,房间,false), Span(8,9,List(8),绿茵茵,绿茵茵,false), Span(7,8,List(9),那,那,false), Span(6,7,List(10),它,它,false), Span(5,6,List(11),在,在-01,false), Span(4,5,List(12),藏,藏-01,false), Span(3,4,List(13),花,花-01,false), Span(1,2,List(14),这,这,false)),Map(2 -> 来-06, 5 -> 很, 12 -> 藏-01, 8 -> 绿茵茵, 7 -> 房间, 1 -> 打扮-01, 4 -> 长-04, 11 -> 在-01, 14 -> 这, 6 -> 用, 0 -> 自己, 9 -> 那, 3 -> 时间, 10 -> 它, 13 -> 花-01),Map(自 -> 自己, 在 -> 在-01, 用 -> 用, 来 -> 来-06, 这 -> 这, 打 -> 打扮-01, 很 -> 很, 它 -> 它, 花 -> 花-01, 那 -> 那, 藏 -> 藏-01, 房 -> 房间, 时 -> 时间, 绿 -> 绿茵茵, 长 -> 长-04))),[Ljava.lang.String;@402c4085,Annotation([Ljava.lang.String;@6fa51cd4,[Ljava.lang.String;@2767e23c,[Ljava.lang.String;@710c2b53),Annotation([Ljava.lang.String;@5386659f,[Ljava.lang.String;@14028087,[Ledu.cmu.lti.nlp.amr.Dependency;@cecf639),Annotation([Ljava.lang.String;@1caa0244,[Ljava.lang.String;@7ce026d3,[Ljava.lang.String;@7ce69770),Annotation([Ljava.lang.String;@1750fbeb,[Ljava.lang.String;@5b247367,[Ledu.cmu.lti.nlp.amr.Entity;@268f106e))
AMR:
(在 / 在-01, ARG4, 花 / 花-01)
(房 / 房间, mod, 绿 / 绿茵茵)
(房 / 房间, mod, 那 / 那)
(打 / 打扮-01, purpose, 自 / 自己)
(时 / 时间, mod, 长 / 长-04)
(来 / 来-06, ARG5, 时 / 时间)
(来 / 来-06, prep-through, 打 / 打扮-01)
(用 / 用, location, 房 / 房间)
(用 / 用, mod, 时 / 时间)
(绿 / 绿茵茵, poss, 它 / 它)
(花 / 花-01, mod, 这 / 这)
(藏 / 藏-01, ARG1, 在 / 在-01)
(藏 / 藏-01, time, 房 / 房间)
(长 / 长-04, degree, 很 / 很)

Decoded in 73,786 microseconds
Sentence: 她 精心 选择 着 她 将来 的 颜色 ，

Spans:
Span 4-5:  她 => 她
Span 0-1:  她 => 她
Span 5-6:  将来 => 将来
Span 1-2:  精心 => 精心
Span 2-3:  选择 => 选择-01
Span 7-8:  颜色 => 颜色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  她 => 她
Oracle Span 5-6:  将来 => 将来
Oracle Span 1-2:  精心 => 精心
Oracle Span 2-3:  选择 => 选择-01
Oracle Span 7-8:  颜色 => 颜色

Extra span: 她 => 她
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	精心	_	AD	AD	_	3	advmod	_	_
3	选择	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	她	_	PN	PN	_	8	nn	_	_
6	将来	_	NT	NT	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	颜色	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 选择-01, arg0, x2 / 她)
(x0 / 选择-01, arg1, x3 / 颜色)
(x0 / 选择-01, manner, x6 / 精心)
(x3 / 颜色, time, x5 / 将来)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),颜色,颜色,false), Span(5,6,List(1),将来,将来,false), Span(4,5,List(2),她,她,false), Span(2,3,List(3),选择,选择-01,false), Span(1,2,List(4),精心,精心,false), Span(0,1,List(5),她,她,false)),Map(2 -> 她, 5 -> 她, 1 -> 将来, 4 -> 精心, 0 -> 颜色, 3 -> 选择-01),Map(她2 -> 她, 颜 -> 颜色, 选 -> 选择-01, 将 -> 将来, 精 -> 精心, 她 -> 她))),[Ljava.lang.String;@6e9a5ed8,Annotation([Ljava.lang.String;@7e057f43,[Ljava.lang.String;@6c284af,[Ljava.lang.String;@5890e879),Annotation([Ljava.lang.String;@6440112d,[Ljava.lang.String;@31ea9581,[Ledu.cmu.lti.nlp.amr.Dependency;@231f98ef),Annotation([Ljava.lang.String;@7c137fd5,[Ljava.lang.String;@183ec003,[Ljava.lang.String;@7d9d0818),Annotation([Ljava.lang.String;@221a3fa4,[Ljava.lang.String;@451001e5,[Ledu.cmu.lti.nlp.amr.Entity;@2b40ff9c))
AMR:
(她 / 她, ARG3, 将 / 将来)
(选 / 选择-01, manner, 精 / 精心)
(选 / 选择-01, prep-along-with, 她2 / 她)
(选 / 选择-01, subset, 颜 / 颜色)
(颜 / 颜色, time, 将 / 将来)

Decoded in 14,482 microseconds
Sentence: 慢慢腾腾 地 妆饰 着 ， 一 片 片 地 搭配 着 她 的 花瓣 ，

Spans:
Span 8-9:  地 => 地
Span 1-2:  地 => 地
Span 11-12:  她 => 她
Span 2-3:  妆饰 => 妆饰-01
Span 0-1:  慢慢腾腾 => 慢慢腾腾
Span 9-10:  搭配 => 搭配-01
Span 13-14:  花瓣 => 花瓣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  她 => 她
Oracle Span 2-3:  妆饰 => 妆饰-01
Oracle Span 0-1:  慢慢腾腾 => 慢慢腾腾
Oracle Span 9-10:  搭配 => 搭配-01
Oracle Span 13-14:  花瓣 => 花瓣

Extra span: 地 => 地
Extra span: 地 => 地
Dependencies:
1	慢慢腾腾	_	VA	VA	_	3	dvpmod	_	_
2	地	_	DEV	DEV	_	1	dvpm	_	_
3	妆饰	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	片	_	M	M	_	10	nsubj	_	_
8	片	_	M	M	_	9	dep	_	_
9	地	_	NN	NN	_	10	nsubj	_	_
10	搭配	_	VV	VV	_	3	dep	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	她	_	PN	PN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	花瓣	_	NN	NN	_	10	dobj	_	_
15	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x11 / 妆饰-01, manner, x12 / 慢慢腾腾)
(x13 / 搭配-01, arg1, x14 / 花瓣)
(x14 / 花瓣, poss, x15 / 她)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),花瓣,花瓣,false), Span(11,12,List(1),她,她,false), Span(9,10,List(2),搭配,搭配-01,false), Span(8,9,List(3),地,地,false), Span(2,3,List(4),妆饰,妆饰-01,false), Span(1,2,List(5),地,地,false), Span(0,1,List(6),慢慢腾腾,慢慢腾腾,false)),Map(2 -> 搭配-01, 5 -> 地, 1 -> 她, 4 -> 妆饰-01, 6 -> 慢慢腾腾, 0 -> 花瓣, 3 -> 地),Map(地2 -> 地, 妆 -> 妆饰-01, 地 -> 地, 花 -> 花瓣, 搭 -> 搭配-01, 慢 -> 慢慢腾腾, 她 -> 她))),[Ljava.lang.String;@3e08ff24,Annotation([Ljava.lang.String;@4d1c005e,[Ljava.lang.String;@8462f31,[Ljava.lang.String;@24569dba),Annotation([Ljava.lang.String;@5ddeb7cb,[Ljava.lang.String;@70ed52de,[Ledu.cmu.lti.nlp.amr.Dependency;@496bc455),Annotation([Ljava.lang.String;@59402b8f,[Ljava.lang.String;@7188af83,[Ljava.lang.String;@6be968ce),Annotation([Ljava.lang.String;@7c37508a,[Ljava.lang.String;@247310d0,[Ledu.cmu.lti.nlp.amr.Entity;@1033576a))
AMR:
(地 / 地, snt3, 妆 / 妆饰-01)
(妆 / 妆饰-01, ARG1, 地2 / 地)
(妆 / 妆饰-01, manner, 慢 / 慢慢腾腾)
(搭 / 搭配-01, manner, 地 / 地)
(搭 / 搭配-01, snt1, 花 / 花瓣)
(花 / 花瓣, poss, 她 / 她)

Decoded in 29,127 microseconds
Sentence: 她 不 愿 象 虞美人 那样 一 出世 就 满 脸 皱纹 。

Spans:
Span 1-2:  不 => 不
Span 7-8:  出世 => 出世-01
Span 0-1:  她 => 她
Span 8-9:  就 => 就-01
Span 2-3:  愿 => 愿-01
Span 9-10:  满 => 满-01
Span 11-12:  皱纹 => 皱纹
Span 10-11:  脸 => 脸
Span 4-5:  虞美人 => 虞美人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出世 => 出世-01
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  愿 => 愿-01
Oracle Span 9-10:  满 => 满-01
Oracle Span 11-12:  皱纹 => 皱纹
Oracle Span 10-11:  脸 => 脸
Oracle Span 4-5:  虞美人 => 虞美人

Extra span: 就 => 就-01
Extra span: 不 => 不
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	愿	_	VV	VV	_	0	root	_	_
4	象	_	P	P	_	6	dep	_	_
5	虞美人	_	NN	NN	_	4	pobj	_	_
6	那样	_	AD	AD	_	10	advmod	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	出世	_	NN	NN	_	10	prep	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	满	_	VV	VV	_	3	ccomp	_	_
11	脸	_	NN	NN	_	12	nn	_	_
12	皱纹	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	她	_	PN	PN	_	10	xsubj	_	_

Oracle:
(x0 / 愿-01, arg0, x3 / 她)
(x10 / 满-01, arg0, x12 / 皱纹)
(x10 / 满-01, arg1, x11 / 脸)
(x10 / 满-01, time, x13 / 出世-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),皱纹,皱纹,false), Span(10,11,List(1),脸,脸,false), Span(9,10,List(2),满,满-01,false), Span(8,9,List(3),就,就-01,false), Span(7,8,List(4),出世,出世-01,false), Span(4,5,List(5),虞美人,虞美人,false), Span(2,3,List(6),愿,愿-01,false), Span(1,2,List(7),不,不,false), Span(0,1,List(8),她,她,false)),Map(2 -> 满-01, 5 -> 虞美人, 8 -> 她, 7 -> 不, 1 -> 脸, 4 -> 出世-01, 6 -> 愿-01, 0 -> 皱纹, 3 -> 就-01),Map(就 -> 就-01, 愿 -> 愿-01, 满 -> 满-01, 不 -> 不, 出 -> 出世-01, 脸 -> 脸, 皱 -> 皱纹, 她 -> 她, 虞 -> 虞美人))),[Ljava.lang.String;@303cf2ba,Annotation([Ljava.lang.String;@76494737,[Ljava.lang.String;@4a003cbe,[Ljava.lang.String;@4082ba93),Annotation([Ljava.lang.String;@17fc391b,[Ljava.lang.String;@2b30a42c,[Ledu.cmu.lti.nlp.amr.Dependency;@609e8838),Annotation([Ljava.lang.String;@359df09a,[Ljava.lang.String;@43df23d3,[Ljava.lang.String;@6d60fe40),Annotation([Ljava.lang.String;@792b749c,[Ljava.lang.String;@23e84203,[Ledu.cmu.lti.nlp.amr.Entity;@19932c16))
AMR:
(不 / 不, mod, 她 / 她)
(愿 / 愿-01, mod, 不 / 不)
(满 / 满-01, accompanier, 脸 / 脸)
(满 / 满-01, manner, 就 / 就-01)
(满 / 满-01, mode, 皱 / 皱纹)
(满 / 满-01, time, 出 / 出世-01)
(虞 / 虞美人, accompanier, 出 / 出世-01)
(虞 / 虞美人, mod, 不 / 不)

Decoded in 29,273 microseconds
Sentence: 她 要 让 自己 带 着 光艳夺目 的 丽姿 来到 世间 。

Spans:
Span 10-11:  世间 => 世间
Span 8-9:  丽姿 => 丽姿
Span 6-7:  光艳夺目 => 光艳夺目
Span 0-1:  她 => 她
Span 4-5:  带 => 带-05
Span 9-10:  来到 => 来到-01
Span 3-4:  自己 => 自己
Span 1-2:  要 => 要-02
Span 2-3:  让 => 让-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  世间 => 世间
Oracle Span 8-9:  丽姿 => 丽姿
Oracle Span 6-7:  光艳夺目 => 光艳夺目
Oracle Span 0-1:  她 => 她
Oracle Span 4-5:  带 => 带-01
Oracle Span 9-10:  来到 => 来到-01
Oracle Span 3-4:  自己 => 自己
Oracle Span 1-2:  要 => 要-03
Oracle Span 2-3:  让 => 让-02

Incorrect span: 带 => 带-05
Incorrect span: 让 => 让-01
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 让 => 让-02
Missing span: 带 => 带-01
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	让	_	VV	VV	_	0	root	_	_
4	自己	_	PN	PN	_	5	nsubj	_	_
5	带	_	VV	VV	_	9	rcmod	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	光艳夺目	_	NN	NN	_	5	dobj	_	_
8	的	_	DEC	DEC	_	5	cpm	_	_
9	丽姿	_	NN	NN	_	3	dobj	_	_
10	来到	_	VV	VV	_	3	dep	_	_
11	世间	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 要-03, arg0, x2 / 让-02)
(x2 / 让-02, arg0, x3 / 她)
(x2 / 让-02, arg1, x4 / 自己)
(x2 / 让-02, arg2, x5 / 带-01)
(x5 / 带-01, arg1, x7 / 丽姿)
(x5 / 带-01, purpose, x9 / 来到-01)
(x7 / 丽姿, mod, x8 / 光艳夺目)
(x9 / 来到-01, arg1, x11 / 世间)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),世间,世间,false), Span(9,10,List(1),来到,来到-01,false), Span(8,9,List(2),丽姿,丽姿,false), Span(6,7,List(3),光艳夺目,光艳夺目,false), Span(4,5,List(4),带,带-05,false), Span(3,4,List(5),自己,自己,false), Span(2,3,List(6),让,让-01,false), Span(1,2,List(7),要,要-02,false), Span(0,1,List(8),她,她,false)),Map(2 -> 丽姿, 5 -> 自己, 8 -> 她, 7 -> 要-02, 1 -> 来到-01, 4 -> 带-05, 6 -> 让-01, 0 -> 世间, 3 -> 光艳夺目),Map(自 -> 自己, 来 -> 来到-01, 要 -> 要-02, 世 -> 世间, 带 -> 带-05, 丽 -> 丽姿, 让 -> 让-01, 光 -> 光艳夺目, 她 -> 她))),[Ljava.lang.String;@73eb439a,Annotation([Ljava.lang.String;@514646ef,[Ljava.lang.String;@305ffe9e,[Ljava.lang.String;@302c971f),Annotation([Ljava.lang.String;@1972e513,[Ljava.lang.String;@7ae0a9ec,[Ledu.cmu.lti.nlp.amr.Dependency;@35841320),Annotation([Ljava.lang.String;@61c4eee0,[Ljava.lang.String;@6f10d5b6,[Ljava.lang.String;@1040be71),Annotation([Ljava.lang.String;@548a24a,[Ljava.lang.String;@433defed,[Ledu.cmu.lti.nlp.amr.Entity;@2a693f59))
AMR:
(丽 / 丽姿, mod, 光 / 光艳夺目)
(带 / 带-05, purpose, 来 / 来到-01)
(带 / 带-05, snt11, 丽 / 丽姿)
(来 / 来到-01, quant, 世 / 世间)
(要 / 要-02, op, 让 / 让-01)
(让 / 让-01, ARG4, 自 / 自己)
(让 / 让-01, snt1, 她 / 她)
(让 / 让-01, time, 带 / 带-05)

Decoded in 56,113 microseconds
Sentence: 是 的 ，

Spans:
Span 0-1:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  是 => 是-03

Incorrect span: 是 => 是-04
Missing span: 是 => 是-03
Dependencies:
1	是	_	VC	VC	_	3	rcmod	_	_
2	的	_	DEC	DEC	_	1	cpm	_	_
3	,	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),是,是-04,false)),Map(0 -> 是-04),Map(是 -> 是-04))),[Ljava.lang.String;@3f4faf53,Annotation([Ljava.lang.String;@7fd50002,[Ljava.lang.String;@533bda92,[Ljava.lang.String;@304bb45b),Annotation([Ljava.lang.String;@723ca036,[Ljava.lang.String;@25be7b63,[Ledu.cmu.lti.nlp.amr.Dependency;@28dcca0c),Annotation([Ljava.lang.String;@45d84a20,[Ljava.lang.String;@52f27fbd,[Ljava.lang.String;@4c163e3),Annotation([Ljava.lang.String;@4a8355dd,[Ljava.lang.String;@4d0d9fe7,[Ledu.cmu.lti.nlp.amr.Entity;@c430e6c))
AMR:


Decoded in 2,326 microseconds
Sentence: 她 是 非常 爱 俏 的 。

Spans:
Span 4-5:  俏 => 俏
Span 0-1:  她 => 她
Span 1-2:  是 => 是-04
Span 3-4:  爱 => (person :arg0-of 爱-01)
Span 2-3:  非常 => 非常

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 她 用 好些 好些 日子 天仙 般 地 梳妆打扮 。

Spans:
Span 7-8:  地 => 地
Span 5-6:  天仙 => 天仙
Span 0-1:  她 => 她
Span 3-4:  好些 => 好些
Span 2-3:  好些 => 好些
Span 4-5:  日子 => (temporal-quantity :unit 日子)
Span 8-9:  梳妆打扮 => 梳妆打扮-01
Span 1-2:  用 => 用

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  天仙 => 天仙
Oracle Span 0-1:  她 => 她
Oracle Span 4-5:  日子 => (temporal-quantity :unit 日子)
Oracle Span 8-9:  梳妆打扮 => 梳妆打扮-01

Extra span: 地 => 地
Extra span: 好些 => 好些
Extra span: 好些 => 好些
Extra span: 用 => 用
Dependencies:
1	她	_	PN	PN	_	9	nsubj	_	_
2	用	_	P	P	_	9	prep	_	_
3	好些	_	NN	NN	_	6	nn	_	_
4	好些	_	NN	NN	_	6	nn	_	_
5	日子	_	NN	NN	_	6	nn	_	_
6	天仙	_	NN	NN	_	2	pobj	_	_
7	般	_	VA	VA	_	9	dvpmod	_	_
8	地	_	DEV	DEV	_	7	dvpm	_	_
9	梳妆打扮	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x12 / 梳妆打扮-01, arg0, x14 / 她)
(x16 / temporal-quantity, unit, x23 / 日子)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),梳妆打扮,梳妆打扮-01,false), Span(7,8,List(1),地,地,false), Span(5,6,List(2),天仙,天仙,false), Span(4,5,List(4, 3),日子,(temporal-quantity :unit 日子),false), Span(3,4,List(5),好些,好些,false), Span(2,3,List(6),好些,好些,false), Span(1,2,List(7),用,用,false), Span(0,1,List(8),她,她,false)),Map(2 -> 天仙, 5 -> 好些, 8 -> 她, 7 -> 用, 1 -> 地, 4 -> 日子, 6 -> 好些, 0 -> 梳妆打扮-01, 3 -> temporal-quantity),Map(用 -> 用, t -> temporal-quantity, 梳 -> 梳妆打扮-01, 地 -> 地, 好2 -> 好些, 天 -> 天仙, 好 -> 好些, 日 -> 日子, 她 -> 她))),[Ljava.lang.String;@536f2a7e,Annotation([Ljava.lang.String;@72bc6553,[Ljava.lang.String;@66982506,[Ljava.lang.String;@70cf32e3),Annotation([Ljava.lang.String;@5a59ca5e,[Ljava.lang.String;@4bdeaabb,[Ledu.cmu.lti.nlp.amr.Dependency;@6c4906d3),Annotation([Ljava.lang.String;@65987993,[Ljava.lang.String;@71075444,[Ljava.lang.String;@4f32a3ad),Annotation([Ljava.lang.String;@6b695b06,[Ljava.lang.String;@4d1bf319,[Ledu.cmu.lti.nlp.amr.Entity;@6f53b8a))
AMR:
(t / temporal-quantity, mod, 好 / 好些)
(t / temporal-quantity, unit, 日 / 日子)
(好 / 好些, mod, 好2 / 好些)
(好2 / 好些, ARG3, 用 / 用)
(梳 / 梳妆打扮-01, ARG1, 地 / 地)
(用 / 用, ARG5, 她 / 她)
(用 / 用, part, 天 / 天仙)
(用 / 用, prep-on-behalf, 梳 / 梳妆打扮-01)

Decoded in 44,228 microseconds
Sentence: 然后 ， 在 一 天 的 早晨 ， 恰好 在 太阳 升起 的 时候 ， 她 开放 了 。

Spans:
Span 11-12:  升起 => 升起-02
Span 9-10:  在 => 在-01
Span 2-3:  在 => 在-01
Span 4-5:  天 => (temporal-quantity :unit 天)
Span 10-11:  太阳 => 太阳
Span 15-16:  她 => 她
Span 16-17:  开放 => 开放-04
Span 8-9:  恰好 => 恰好
Span 6-7:  早晨 => 早晨
Span 13-14:  时候 => 时候

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  升起 => 升起-02
Oracle Span 10-11:  太阳 => 太阳
Oracle Span 15-16:  她 => 她
Oracle Span 16-17:  开放 => 开放-04
Oracle Span 8-9:  恰好 => 恰好
Oracle Span 6-7:  早晨 => 早晨

Extra span: 时候 => 时候
Extra span: 在 => 在-01
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 在 => 在-01
Dependencies:
1	然后	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	在	_	P	P	_	12	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	天	_	M	M	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	早晨	_	NT	NT	_	3	pobj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	恰好	_	AD	AD	_	12	advmod	_	_
10	在	_	P	P	_	12	prep	_	_
11	太阳	_	NN	NN	_	10	pobj	_	_
12	升起	_	VV	VV	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	时候	_	NN	NN	_	17	nsubj	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	她	_	PN	PN	_	17	nsubj	_	_
17	开放	_	VV	VV	_	0	root	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x2 / 开放-04, arg0, x3 / 她)
(x2 / 开放-04, time, x4 / 升起-02)
(x4 / 升起-02, arg0, x5 / 太阳)
(x4 / 升起-02, manner, x6 / 恰好)
(x4 / 升起-02, time, x7 / 早晨)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),开放,开放-04,false), Span(15,16,List(1),她,她,false), Span(13,14,List(2),时候,时候,false), Span(11,12,List(3),升起,升起-02,false), Span(10,11,List(4),太阳,太阳,false), Span(9,10,List(5),在,在-01,false), Span(8,9,List(6),恰好,恰好,false), Span(6,7,List(7),早晨,早晨,false), Span(4,5,List(9, 8),天,(temporal-quantity :unit 天),false), Span(2,3,List(10),在,在-01,false)),Map(2 -> 时候, 5 -> 在-01, 8 -> temporal-quantity, 7 -> 早晨, 1 -> 她, 4 -> 太阳, 6 -> 恰好, 9 -> 天, 0 -> 开放-04, 10 -> 在-01, 3 -> 升起-02),Map(在2 -> 在-01, t -> temporal-quantity, 早 -> 早晨, 在 -> 在-01, 升 -> 升起-02, 太 -> 太阳, 天 -> 天, 恰 -> 恰好, 开 -> 开放-04, 时 -> 时候, 她 -> 她))),[Ljava.lang.String;@5c80cf32,Annotation([Ljava.lang.String;@7d900ecf,[Ljava.lang.String;@6f01b95f,[Ljava.lang.String;@4007f65e),Annotation([Ljava.lang.String;@1a245833,[Ljava.lang.String;@673fdbce,[Ledu.cmu.lti.nlp.amr.Dependency;@5965d37),Annotation([Ljava.lang.String;@7a5ceedd,[Ljava.lang.String;@4201c465,[Ljava.lang.String;@5b799640),Annotation([Ljava.lang.String;@6cb107fd,[Ljava.lang.String;@710636b0,[Ledu.cmu.lti.nlp.amr.Entity;@3de8f619))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(升 / 升起-02, time, 早 / 早晨)
(在 / 在-01, ARG0, 太 / 太阳)
(在 / 在-01, degree, 升 / 升起-02)
(在 / 在-01, manner, 恰 / 恰好)
(在2 / 在-01, ARG4, t / temporal-quantity)
(开 / 开放-04, prep-for, 她 / 她)
(开 / 开放-04, time, 升 / 升起-02)
(开 / 开放-04, time, 时 / 时候)
(早 / 早晨, ARG4, t / temporal-quantity)

Decoded in 61,333 microseconds
Sentence: 她 已经 精细 地 做 了 那么 长 的 准备 工作 ， 却 打 着 哈欠 说道 ： “

Spans:
Span 4-5:  做 => 做-04
Span 9-10:  准备 => 准备-02
Span 3-4:  地 => 地
Span 0-1:  她 => 她
Span 10-11:  工作 => 工作-01
Span 1-2:  已经 => 已经
Span 2-3:  精细 => 精细-01
Span 16-17:  说道 => 说道
Span 6-7:  那么 => 那么
Span 7-8:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  做 => 做-04
Oracle Span 9-10:  准备 => 准备
Oracle Span 0-1:  她 => 她
Oracle Span 10-11:  工作 => 工作
Oracle Span 2-3:  精细 => 精细-01
Oracle Span 16-17:  说道 => 说道-01
Oracle Span 6-7:  那么 => 那么
Oracle Span 7-8:  长 => 长

Incorrect span: 说道 => 说道
Incorrect span: 工作 => 工作-01
Incorrect span: 准备 => 准备-02
Incorrect span: 长 => 长-04
Extra span: 地 => 地
Extra span: 已经 => 已经
Missing span: 工作 => 工作
Missing span: 长 => 长
Missing span: 准备 => 准备
Missing span: 说道 => 说道-01
Dependencies:
1	她	_	PN	PN	_	5	nsubj	_	_
2	已经	_	AD	AD	_	5	advmod	_	_
3	精细	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	做	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	那么	_	AD	AD	_	8	advmod	_	_
8	长	_	VA	VA	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	准备	_	NN	NN	_	11	nn	_	_
11	工作	_	NN	NN	_	5	dobj	_	_
12	,	_	PU	PU	_	5	punct	_	_
13	却	_	AD	AD	_	14	advmod	_	_
14	打	_	VV	VV	_	5	dep	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	哈欠	_	NN	NN	_	17	nn	_	_
17	说道	_	NN	NN	_	14	dobj	_	_
18	：	_	PU	PU	_	5	punct	_	_
19	“	_	VA	VA	_	5	conj	_	_

Oracle:
(x2 / 做-04, arg0, x3 / 她)
(x2 / 做-04, arg1, x5 / 工作)
(x2 / 做-04, manner, x4 / 精细-01)
(x5 / 工作, mod, x6 / 准备)
(x5 / 工作, mod, x7 / 长)
(x7 / 长, degree, x8 / 那么)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),说道,说道,false), Span(10,11,List(1),工作,工作-01,false), Span(9,10,List(2),准备,准备-02,false), Span(7,8,List(3),长,长-04,false), Span(6,7,List(4),那么,那么,false), Span(4,5,List(5),做,做-04,false), Span(3,4,List(6),地,地,false), Span(2,3,List(7),精细,精细-01,false), Span(1,2,List(8),已经,已经,false), Span(0,1,List(9),她,她,false)),Map(2 -> 准备-02, 5 -> 做-04, 8 -> 已经, 7 -> 精细-01, 1 -> 工作-01, 4 -> 那么, 6 -> 地, 9 -> 她, 0 -> 说道, 3 -> 长-04),Map(准 -> 准备-02, 已 -> 已经, 工 -> 工作-01, 地 -> 地, 说 -> 说道, 做 -> 做-04, 那 -> 那么, 精 -> 精细-01, 长 -> 长-04, 她 -> 她))),[Ljava.lang.String;@2ab4bc72,Annotation([Ljava.lang.String;@4e5ed836,[Ljava.lang.String;@eadd4fb,[Ljava.lang.String;@740fb309),Annotation([Ljava.lang.String;@7bd7d6d6,[Ljava.lang.String;@43f02ef2,[Ledu.cmu.lti.nlp.amr.Dependency;@239a307b),Annotation([Ljava.lang.String;@2a8448fa,[Ljava.lang.String;@6f204a1a,[Ljava.lang.String;@2de56eb2),Annotation([Ljava.lang.String;@5f8e8a9d,[Ljava.lang.String;@5745ca0e,[Ledu.cmu.lti.nlp.amr.Entity;@3ad83a66))
AMR:
(做 / 做-04, manner, 精 / 精细-01)
(做 / 做-04, mode, 长 / 长-04)
(准 / 准备-02, accompanier, 工 / 工作-01)
(准 / 准备-02, degree, 长 / 长-04)
(地 / 地, mod, 精 / 精细-01)
(已 / 已经, domain, 她 / 她)
(精 / 精细-01, time, 已 / 已经)
(说 / 说道, mod, 工 / 工作-01)
(长 / 长-04, degree, 那 / 那么)

Decoded in 53,734 microseconds
Sentence: 我 刚刚 睡醒 ，

Spans:
Span 1-2:  刚刚 => 刚刚
Span 0-1:  我 => 我
Span 2-3:  睡醒 => 睡醒-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  刚刚 => 刚刚
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  睡醒 => 睡醒-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	刚刚	_	AD	AD	_	3	advmod	_	_
3	睡醒	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 睡醒-01, arg0, x2 / 我)
(x0 / 睡醒-01, time, x3 / 刚刚)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),睡醒,睡醒-01,false), Span(1,2,List(1),刚刚,刚刚,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 刚刚, 0 -> 睡醒-01),Map(我 -> 我, 睡 -> 睡醒-01, 刚 -> 刚刚))),[Ljava.lang.String;@3cce5371,Annotation([Ljava.lang.String;@17bffc17,[Ljava.lang.String;@6e535154,[Ljava.lang.String;@15a34df2),Annotation([Ljava.lang.String;@5b38c1ec,[Ljava.lang.String;@338fc1d8,[Ledu.cmu.lti.nlp.amr.Dependency;@4722ef0c),Annotation([Ljava.lang.String;@48e1f6c7,[Ljava.lang.String;@55cb6996,[Ljava.lang.String;@1807e3f6),Annotation([Ljava.lang.String;@480d3575,[Ljava.lang.String;@f1da57d,[Ledu.cmu.lti.nlp.amr.Entity;@194fad1))
AMR:
(睡 / 睡醒-01, beneficiary, 我 / 我)
(睡 / 睡醒-01, time, 刚 / 刚刚)

Decoded in 6,636 microseconds
Sentence: 真 对不起 ，

Spans:
Span 1-2:  对不起 => 对不起-02
Span 0-1:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对不起 => 对不起-01
Oracle Span 0-1:  真 => 真

Incorrect span: 对不起 => 对不起-02
Missing span: 对不起 => 对不起-01
Dependencies:
1	真	_	NN	NN	_	2	nsubj	_	_
2	对不起	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 对不起-01, degree, x2 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),对不起,对不起-02,false), Span(0,1,List(1),真,真,false)),Map(1 -> 真, 0 -> 对不起-02),Map(对 -> 对不起-02, 真 -> 真))),[Ljava.lang.String;@26abb146,Annotation([Ljava.lang.String;@72c8e7b,[Ljava.lang.String;@65f8f5ae,[Ljava.lang.String;@431cd9b2),Annotation([Ljava.lang.String;@38467116,[Ljava.lang.String;@5b7a7f33,[Ledu.cmu.lti.nlp.amr.Dependency;@790da477),Annotation([Ljava.lang.String;@5c7933ad,[Ljava.lang.String;@57bc27f5,[Ljava.lang.String;@5fb759d6),Annotation([Ljava.lang.String;@4b8d604b,[Ljava.lang.String;@5e7cd6cc,[Ledu.cmu.lti.nlp.amr.Entity;@68c9d179))
AMR:
(对 / 对不起-02, degree, 真 / 真)

Decoded in 5,084 microseconds
Sentence: 瞧 我 的 头发 还是 乱蓬蓬 的 … ”

Spans:
Span 5-6:  乱蓬蓬 => 乱蓬蓬
Span 3-4:  头发 => 头发
Span 1-2:  我 => 我
Span 0-1:  瞧 => 瞧-01
Span 4-5:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  乱蓬蓬 => 乱蓬蓬
Oracle Span 3-4:  头发 => 头发
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  瞧 => 瞧-01
Oracle Span 4-5:  还是 => 还是

Dependencies:
1	瞧	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	头发	_	NN	NN	_	5	nsubj	_	_
5	还是	_	VV	VV	_	0	root	_	_
6	乱蓬蓬	_	NR	NR	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	…	_	NN	NN	_	5	dobj	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x6 / 瞧-01, arg1, x7 / 乱蓬蓬)
(x7 / 乱蓬蓬, arg0, x8 / 头发)
(x7 / 乱蓬蓬, manner, x10 / 还是)
(x9 / 我, part, x8 / 头发)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),乱蓬蓬,乱蓬蓬,false), Span(4,5,List(1),还是,还是,false), Span(3,4,List(2),头发,头发,false), Span(1,2,List(3),我,我,false), Span(0,1,List(4),瞧,瞧-01,false)),Map(2 -> 头发, 1 -> 还是, 4 -> 瞧-01, 0 -> 乱蓬蓬, 3 -> 我),Map(头 -> 头发, 我 -> 我, 乱 -> 乱蓬蓬, 瞧 -> 瞧-01, 还 -> 还是))),[Ljava.lang.String;@d554c5f,Annotation([Ljava.lang.String;@2dfaea86,[Ljava.lang.String;@15888343,[Ljava.lang.String;@33ecda92),Annotation([Ljava.lang.String;@14fc5f04,[Ljava.lang.String;@6e2829c7,[Ledu.cmu.lti.nlp.amr.Dependency;@3feb2dda),Annotation([Ljava.lang.String;@6a8658ff,[Ljava.lang.String;@1c742ed4,[Ljava.lang.String;@333d4a8c),Annotation([Ljava.lang.String;@55de24cc,[Ljava.lang.String;@dc7df28,[Ledu.cmu.lti.nlp.amr.Entity;@30f842ca))
AMR:
(乱 / 乱蓬蓬, manner, 头 / 头发)
(乱 / 乱蓬蓬, manner, 还 / 还是)
(我 / 我, part, 头 / 头发)
(瞧 / 瞧-01, part, 头 / 头发)

Decoded in 22,280 microseconds
Sentence: 小 王子 这时 再 也 控制 不 住 自己 的 爱慕 心情 ： “

Spans:
Span 6-7:  不 => 不
Span 4-5:  也 => 也
Span 7-8:  住 => 住-01
Span 3-4:  再 => 再
Span 0-1:  小 => 小
Span 11-12:  心情 => 心情
Span 5-6:  控制 => 控制-01
Span 10-11:  爱慕 => 爱慕-01
Span 1-2:  王子 => 王子
Span 8-9:  自己 => 自己
Span 2-3:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 3-4:  再 => 再-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  心情 => 心情
Oracle Span 5-6:  控制 => 控制-01
Oracle Span 10-11:  爱慕 => 爱慕-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  这时 => 这时

Extra span: 自己 => 自己
Extra span: 住 => 住-01
Extra span: 不 => 不
Incorrect span: 再 => 再
Incorrect span: 小 => 小
Missing span: 再 => 再-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	8	nsubj	_	_
3	这时	_	AD	AD	_	6	advmod	_	_
4	再	_	AD	AD	_	6	advmod	_	_
5	也	_	AD	AD	_	6	advmod	_	_
6	控制	_	VV	VV	_	8	conj	_	_
7	不	_	AD	AD	_	8	neg	_	_
8	住	_	VV	VV	_	0	root	_	_
9	自己	_	PN	PN	_	12	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	爱慕	_	NN	NN	_	12	nn	_	_
12	心情	_	NN	NN	_	8	dobj	_	_
13	：	_	PU	PU	_	8	punct	_	_
14	“	_	VA	VA	_	8	conj	_	_

Oracle:
(x12 / 控制-01, arg0, x14 / 王子)
(x12 / 控制-01, arg1, x18 / 心情)
(x12 / 控制-01, manner, x16 / 也)
(x12 / 控制-01, manner, x17 / 再-01)
(x12 / 控制-01, time, x22 / 这时)
(x14 / 王子, mod, x15 / 小-01)
(x18 / 心情, mod, x19 / 爱慕-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),心情,心情,false), Span(10,11,List(1),爱慕,爱慕-01,false), Span(8,9,List(2),自己,自己,false), Span(7,8,List(3),住,住-01,false), Span(6,7,List(4),不,不,false), Span(5,6,List(5),控制,控制-01,false), Span(4,5,List(6),也,也,false), Span(3,4,List(7),再,再,false), Span(2,3,List(8),这时,这时,false), Span(1,2,List(9),王子,王子,false), Span(0,1,List(10),小,小,false)),Map(2 -> 自己, 5 -> 控制-01, 8 -> 这时, 7 -> 再, 1 -> 爱慕-01, 4 -> 不, 6 -> 也, 9 -> 王子, 0 -> 心情, 10 -> 小, 3 -> 住-01),Map(爱 -> 爱慕-01, 自 -> 自己, 也 -> 也, 这 -> 这时, 王 -> 王子, 控 -> 控制-01, 心 -> 心情, 小 -> 小, 不 -> 不, 再 -> 再, 住 -> 住-01))),[Ljava.lang.String;@69c81773,Annotation([Ljava.lang.String;@4d14b6c2,[Ljava.lang.String;@7e990ed7,[Ljava.lang.String;@c05fddc),Annotation([Ljava.lang.String;@25df00a0,[Ljava.lang.String;@4d15107f,[Ledu.cmu.lti.nlp.amr.Dependency;@7b4c50bc),Annotation([Ljava.lang.String;@5884a914,[Ljava.lang.String;@50378a4,[Ljava.lang.String;@60f00693),Annotation([Ljava.lang.String;@79207381,[Ljava.lang.String;@491b9b8,[Ledu.cmu.lti.nlp.amr.Entity;@1a4927d6))
AMR:
(住 / 住-01, ARG6, 自 / 自己)
(住 / 住-01, manner, 不 / 不)
(住 / 住-01, purpose, 爱 / 爱慕-01)
(心 / 心情, mod, 爱 / 爱慕-01)
(控 / 控制-01, manner, 不 / 不)
(控 / 控制-01, manner, 也 / 也)
(控 / 控制-01, manner, 再 / 再)
(控 / 控制-01, time, 这 / 这时)
(王 / 王子, mod, 小 / 小)
(这 / 这时, poss, 王 / 王子)

Decoded in 47,962 microseconds
Sentence: 你 是 多么 美丽 啊 ！ ”

Spans:
Span 0-1:  你 => 你
Span 4-5:  啊 => 啊
Span 2-3:  多么 => 多么
Span 1-2:  是 => 是-04
Span 3-4:  美丽 => 美丽-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  多么 => 多么
Oracle Span 3-4:  美丽 => 美丽-01

Extra span: 啊 => 啊
Extra span: 是 => 是-04
Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	多么	_	NR	NR	_	4	nsubj	_	_
4	美丽	_	VA	VA	_	2	ccomp	_	_
5	啊	_	SP	SP	_	2	dep	_	_
6	！	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 美丽-01, arg0, x4 / 你)
(x2 / 美丽-01, degree, x3 / 多么)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),啊,啊,false), Span(3,4,List(1),美丽,美丽-01,false), Span(2,3,List(2),多么,多么,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),你,你,false)),Map(2 -> 多么, 1 -> 美丽-01, 4 -> 你, 0 -> 啊, 3 -> 是-04),Map(美 -> 美丽-01, 啊 -> 啊, 你 -> 你, 多 -> 多么, 是 -> 是-04))),[Ljava.lang.String;@7a6d7e92,Annotation([Ljava.lang.String;@aba625,[Ljava.lang.String;@97e93f1,[Ljava.lang.String;@5a5a729f),Annotation([Ljava.lang.String;@4b520ea8,[Ljava.lang.String;@16150369,[Ledu.cmu.lti.nlp.amr.Dependency;@6b09fb41),Annotation([Ljava.lang.String;@624ea235,[Ljava.lang.String;@3932c79a,[Ljava.lang.String;@782859e),Annotation([Ljava.lang.String;@23f5b5dc,[Ljava.lang.String;@34bde49d,[Ledu.cmu.lti.nlp.amr.Entity;@1b1cfb87))
AMR:
(啊 / 啊, manner, 美 / 美丽-01)
(是 / 是-04, degree, 多 / 多么)
(是 / 是-04, manner, 你 / 你)
(美 / 美丽-01, degree, 多 / 多么)

Decoded in 11,129 microseconds
Sentence: 花儿 悠然自得 地 说 ： “ 是 吧 ，

Spans:
Span 2-3:  地 => 地
Span 1-2:  悠然自得 => 悠然自得
Span 6-7:  是 => 是-04
Span 0-1:  花儿 => 花儿
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  悠然自得 => 悠然自得
Oracle Span 6-7:  是 => 是-03
Oracle Span 0-1:  花儿 => 花儿
Oracle Span 3-4:  说 => 说-01

Incorrect span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Missing span: 说 => 说-01
Missing span: 是 => 是-03
Dependencies:
1	花儿	_	NR	NR	_	4	nsubj	_	_
2	悠然自得	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	7	punct	_	_
7	是	_	VC	VC	_	4	ccomp	_	_
8	吧	_	SP	SP	_	7	dep	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花儿)
(x0 / 说-01, arg1, x4 / 是-03)
(x0 / 说-01, manner, x3 / 悠然自得)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),是,是-04,false), Span(3,4,List(1),说,说-02,false), Span(2,3,List(2),地,地,false), Span(1,2,List(3),悠然自得,悠然自得,false), Span(0,1,List(4),花儿,花儿,false)),Map(2 -> 地, 1 -> 说-02, 4 -> 花儿, 0 -> 是-04, 3 -> 悠然自得),Map(地 -> 地, 花 -> 花儿, 悠 -> 悠然自得, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@821330f,Annotation([Ljava.lang.String;@6f43c82,[Ljava.lang.String;@5db6b9cd,[Ljava.lang.String;@210ab13f),Annotation([Ljava.lang.String;@20b2475a,[Ljava.lang.String;@7857fe2,[Ledu.cmu.lti.nlp.amr.Dependency;@6f15d60e),Annotation([Ljava.lang.String;@1be2019a,[Ljava.lang.String;@29d80d2b,[Ljava.lang.String;@58e1d9d),Annotation([Ljava.lang.String;@446a1e84,[Ljava.lang.String;@4f0f2942,[Ledu.cmu.lti.nlp.amr.Entity;@2657d4dd))
AMR:
(地 / 地, manner, 悠 / 悠然自得)
(悠 / 悠然自得, weekday, 花 / 花儿)
(说 / 说-02, day, 是 / 是-04)
(说 / 说-02, location, 地 / 地)

Decoded in 10,241 microseconds
Sentence: 我 是 与 太阳 同时 出生 的 … ”

Spans:
Span 5-6:  出生 => 出生-01
Span 4-5:  同时 => 同时
Span 3-4:  太阳 => 太阳
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  出生 => 出生-01
Oracle Span 4-5:  同时 => 同时
Oracle Span 3-4:  太阳 => 太阳
Oracle Span 0-1:  我 => 我

Extra span: 是 => 是-04
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	与	_	P	P	_	2	prep	_	_
4	太阳	_	NN	NN	_	6	nn	_	_
5	同时	_	NN	NN	_	6	nn	_	_
6	出生	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	…	_	NN	NN	_	3	pobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 出生-01, arg0, x15 / 我)
(x10 / 出生-01, time, x16 / 同时)
(x15 / 我, compared-to, x17 / 太阳)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),出生,出生-01,false), Span(4,5,List(1),同时,同时,false), Span(3,4,List(2),太阳,太阳,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),我,我,false)),Map(2 -> 太阳, 1 -> 同时, 4 -> 我, 0 -> 出生-01, 3 -> 是-04),Map(我 -> 我, 太 -> 太阳, 同 -> 同时, 出 -> 出生-01, 是 -> 是-04))),[Ljava.lang.String;@5340477f,Annotation([Ljava.lang.String;@47caedad,[Ljava.lang.String;@7139992f,[Ljava.lang.String;@69504ae9),Annotation([Ljava.lang.String;@387a8303,[Ljava.lang.String;@28cda624,[Ledu.cmu.lti.nlp.amr.Dependency;@1500b2f3),Annotation([Ljava.lang.String;@7eecb5b8,[Ljava.lang.String;@126253fd,[Ljava.lang.String;@57db2b13),Annotation([Ljava.lang.String;@475c9c31,[Ljava.lang.String;@5c86a017,[Ledu.cmu.lti.nlp.amr.Entity;@5c7bfdc1))
AMR:
(出 / 出生-01, time, 同 / 同时)
(同 / 同时, mod, 太 / 太阳)
(是 / 是-04, compared-to, 太 / 太阳)
(是 / 是-04, manner, 我 / 我)

Decoded in 10,065 microseconds
Sentence: 小 王子 看出 了 这 花儿 不 太 谦虚 ， 可是 她 确实 丽姿 动人 。

Spans:
Span 6-7:  不 => 不
Span 13-14:  丽姿 => 丽姿
Span 14-15:  动人 => 动人-01
Span 7-8:  太 => 太
Span 11-12:  她 => 她
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 2-3:  看出 => 看出-01
Span 12-13:  确实 => 确实-01
Span 5-6:  花儿 => 花儿
Span 8-9:  谦虚 => 谦虚-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  丽姿 => 丽姿
Oracle Span 14-15:  动人 => 动人-01
Oracle Span 7-8:  太 => 太
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  看出 => 看出-01
Oracle Span 12-13:  确实 => 确实
Oracle Span 5-6:  花儿 => 花儿
Oracle Span 8-9:  谦虚 => 谦虚-01
Oracle Span 4-5:  这 => 这

Incorrect span: 确实 => 确实-01
Extra span: 她 => 她
Extra span: 不 => 不
Incorrect span: 小 => 小
Missing span: 确实 => 确实
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	看出	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	这	_	DT	DT	_	6	det	_	_
6	花儿	_	NN	NN	_	9	nsubj	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	太	_	AD	AD	_	9	advmod	_	_
9	谦虚	_	VV	VV	_	3	ccomp	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	可是	_	AD	AD	_	14	advmod	_	_
12	她	_	PN	PN	_	14	nsubj	_	_
13	确实	_	AD	AD	_	14	advmod	_	_
14	丽姿	_	VV	VV	_	3	conj	_	_
15	动人	_	NN	NN	_	14	dobj	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 动人-01, arg0, x11 / 丽姿)
(x10 / 动人-01, degree, x13 / 确实)
(x2 / 看出-01, arg0, x3 / 王子)
(x2 / 看出-01, arg1, x5 / 谦虚-01)
(x2 / 看出-01, arg2, x10 / 动人-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 谦虚-01, arg0, x8 / 花儿)
(x5 / 谦虚-01, degree, x6 / 太)
(x8 / 花儿, mod, x9 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),动人,动人-01,false), Span(13,14,List(1),丽姿,丽姿,false), Span(12,13,List(2),确实,确实-01,false), Span(11,12,List(3),她,她,false), Span(8,9,List(4),谦虚,谦虚-01,false), Span(7,8,List(5),太,太,false), Span(6,7,List(6),不,不,false), Span(5,6,List(7),花儿,花儿,false), Span(4,5,List(8),这,这,false), Span(2,3,List(9),看出,看出-01,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 确实-01, 5 -> 太, 8 -> 这, 7 -> 花儿, 1 -> 丽姿, 11 -> 小, 4 -> 谦虚-01, 6 -> 不, 9 -> 看出-01, 0 -> 动人-01, 10 -> 王子, 3 -> 她),Map(确 -> 确实-01, 这 -> 这, 王 -> 王子, 太 -> 太, 动 -> 动人-01, 小 -> 小, 花 -> 花儿, 不 -> 不, 丽 -> 丽姿, 看 -> 看出-01, 谦 -> 谦虚-01, 她 -> 她))),[Ljava.lang.String;@5276d6ee,Annotation([Ljava.lang.String;@71687585,[Ljava.lang.String;@1807f5a7,[Ljava.lang.String;@1b919693),Annotation([Ljava.lang.String;@7fb4f2a9,[Ljava.lang.String;@4dc27487,[Ledu.cmu.lti.nlp.amr.Dependency;@6a4f1a55),Annotation([Ljava.lang.String;@7dfd3c81,[Ljava.lang.String;@2584b82d,[Ljava.lang.String;@7bbc8656),Annotation([Ljava.lang.String;@6933b6c6,[Ljava.lang.String;@7d3e8655,[Ledu.cmu.lti.nlp.amr.Entity;@7dfb0c0f))
AMR:
(丽 / 丽姿, month, 她 / 她)
(动 / 动人-01, ARG6, 丽 / 丽姿)
(动 / 动人-01, degree, 确 / 确实-01)
(王 / 王子, mod, 小 / 小)
(看 / 看出-01, direction, 王 / 王子)
(看 / 看出-01, extent, 谦 / 谦虚-01)
(看 / 看出-01, prep-through, 动 / 动人-01)
(花 / 花儿, mod, 这 / 这)
(谦 / 谦虚-01, ARG1, 不 / 不)
(谦 / 谦虚-01, degree, 太 / 太)
(谦 / 谦虚-01, mode, 花 / 花儿)

Decoded in 61,656 microseconds
Sentence: 她 随后 又 说道 ： “ 现在 该 是 吃 早点 的 时候 了 吧 ，

Spans:
Span 2-3:  又 => 又
Span 9-10:  吃 => (thing :arg1-of 吃-01)
Span 0-1:  她 => 她
Span 10-11:  早点 => 早点
Span 12-13:  时候 => 时候
Span 8-9:  是 => 是-04
Span 6-7:  现在 => 现在
Span 7-8:  该 => 该-01
Span 3-4:  说道 => 说道

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 请 你 也 想 着 给 我 准备 一点 … ”

Spans:
Span 8-9:  一点 => 一点
Span 2-3:  也 => 也
Span 1-2:  你 => 你
Span 7-8:  准备 => 准备-02
Span 3-4:  想 => 想-05
Span 6-7:  我 => 我
Span 5-6:  给 => 给-02
Span 0-1:  请 => 请-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  一点 => 一点
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  准备 => 准备-01
Oracle Span 3-4:  想 => 想-05
Oracle Span 6-7:  我 => 我
Oracle Span 0-1:  请 => 请-01

Incorrect span: 准备 => 准备-02
Extra span: 给 => 给-02
Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Missing span: 准备 => 准备-01
Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	1	ccomp	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	给	_	P	P	_	8	prep	_	_
7	我	_	PN	PN	_	6	pobj	_	_
8	准备	_	VV	VV	_	4	ccomp	_	_
9	一点	_	AD	AD	_	10	advmod	_	_
10	…	_	VV	VV	_	8	ccomp	_	_
11	”	_	PU	PU	_	8	punct	_	_
12	你	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x14 / 请-01, arg1, x15 / 你)
(x14 / 请-01, arg2, x16 / 想-05)
(x16 / 想-05, arg1, x20 / 准备-01)
(x16 / 想-05, manner, x17 / 也)
(x20 / 准备-01, beneficiary, x23 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),一点,一点,false), Span(7,8,List(1),准备,准备-02,false), Span(6,7,List(2),我,我,false), Span(5,6,List(3),给,给-02,false), Span(3,4,List(4),想,想-05,false), Span(2,3,List(5),也,也,false), Span(1,2,List(6),你,你,false), Span(0,1,List(7),请,请-02,false)),Map(2 -> 我, 5 -> 也, 7 -> 请-02, 1 -> 准备-02, 4 -> 想-05, 6 -> 你, 0 -> 一点, 3 -> 给-02),Map(准 -> 准备-02, 也 -> 也, 我 -> 我, 你 -> 你, 给 -> 给-02, 请 -> 请-02, 想 -> 想-05, 一 -> 一点))),[Ljava.lang.String;@169bb4dd,Annotation([Ljava.lang.String;@1f9e9475,[Ljava.lang.String;@3aa078fd,[Ljava.lang.String;@d23e042),Annotation([Ljava.lang.String;@46d59067,[Ljava.lang.String;@2d0399f4,[Ledu.cmu.lti.nlp.amr.Dependency;@14dd7b39),Annotation([Ljava.lang.String;@66ea810,[Ljava.lang.String;@6cd24612,[Ljava.lang.String;@5dafbe45),Annotation([Ljava.lang.String;@2254127a,[Ljava.lang.String;@51891008,[Ledu.cmu.lti.nlp.amr.Entity;@2f953efd))
AMR:
(准 / 准备-02, beneficiary, 我 / 我)
(准 / 准备-02, manner, 一 / 一点)
(准 / 准备-02, manner, 给 / 给-02)
(想 / 想-05, manner, 也 / 也)
(想 / 想-05, manner, 给 / 给-02)
(想 / 想-05, manner, 请 / 请-02)
(请 / 请-02, ord, 你 / 你)

Decoded in 34,815 microseconds
Sentence: 小 王子 很 有些 不好意思 ， 于是 就 拿 着 喷壶 ， 打来 了 一 壶 清清 的 凉水 ，

Spans:
Span 4-5:  不好意思 => 不好意思-01
Span 18-19:  凉水 => 凉水
Span 10-11:  喷壶 => 喷壶
Span 15-16:  壶 => 壶
Span 0-1:  小 => 小
Span 7-8:  就 => 就-01
Span 2-3:  很 => 很
Span 12-13:  打来 => 打来-01
Span 8-9:  拿 => 拿-02
Span 3-4:  有些 => 有些
Span 16-17:  清清 => 清清
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  不好意思 => 不好意思-01
Oracle Span 18-19:  凉水 => 凉水
Oracle Span 10-11:  喷壶 => 喷壶
Oracle Span 15-16:  壶 => 壶
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  很 => 很
Oracle Span 12-13:  打来 => 打来-01
Oracle Span 8-9:  拿 => 拿-01
Oracle Span 3-4:  有些 => 有些
Oracle Span 16-17:  清清 => 清清
Oracle Span 1-2:  王子 => 王子

Incorrect span: 拿 => 拿-02
Extra span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 拿 => 拿-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	很	_	AD	AD	_	5	advmod	_	_
4	有些	_	AD	AD	_	5	advmod	_	_
5	不好意思	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	于是	_	AD	AD	_	9	advmod	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	拿	_	VV	VV	_	5	conj	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	喷壶	_	NN	NN	_	9	dobj	_	_
12	,	_	PU	PU	_	9	punct	_	_
13	打来	_	VV	VV	_	9	conj	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	壶	_	NN	NN	_	17	nn	_	_
17	清清	_	NN	NN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	凉水	_	NN	NN	_	13	dobj	_	_
20	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x18 / 打来-01, arg1, x20 / 凉水)
(x18 / 打来-01, manner, x24 / 拿-01)
(x2 / 不好意思-01, arg0, x6 / 王子)
(x2 / 不好意思-01, degree, x4 / 有些)
(x2 / 不好意思-01, degree, x5 / 很)
(x20 / 凉水, mod, x21 / 清清)
(x20 / 凉水, unit, x23 / 壶)
(x24 / 拿-01, arg1, x26 / 喷壶)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),凉水,凉水,false), Span(16,17,List(1),清清,清清,false), Span(15,16,List(2),壶,壶,false), Span(12,13,List(3),打来,打来-01,false), Span(10,11,List(4),喷壶,喷壶,false), Span(8,9,List(5),拿,拿-02,false), Span(7,8,List(6),就,就-01,false), Span(4,5,List(7),不好意思,不好意思-01,false), Span(3,4,List(8),有些,有些,false), Span(2,3,List(9),很,很,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 壶, 5 -> 拿-02, 8 -> 有些, 7 -> 不好意思-01, 1 -> 清清, 11 -> 小, 4 -> 喷壶, 6 -> 就-01, 9 -> 很, 0 -> 凉水, 10 -> 王子, 3 -> 打来-01),Map(清 -> 清清, 就 -> 就-01, 打 -> 打来-01, 王 -> 王子, 很 -> 很, 小 -> 小, 喷 -> 喷壶, 不 -> 不好意思-01, 壶 -> 壶, 拿 -> 拿-02, 凉 -> 凉水, 有 -> 有些))),[Ljava.lang.String;@f68f0dc,Annotation([Ljava.lang.String;@d2de489,[Ljava.lang.String;@14bdbc74,[Ljava.lang.String;@12591ac8),Annotation([Ljava.lang.String;@5a7fe64f,[Ljava.lang.String;@38145825,[Ledu.cmu.lti.nlp.amr.Dependency;@41330d4f),Annotation([Ljava.lang.String;@1b66c0fb,[Ljava.lang.String;@3e0e1046,[Ljava.lang.String;@24c1b2d2),Annotation([Ljava.lang.String;@7dc19a70,[Ljava.lang.String;@508dec2b,[Ledu.cmu.lti.nlp.amr.Entity;@1e4f4a5c))
AMR:
(不 / 不好意思-01, degree, 很 / 很)
(不 / 不好意思-01, degree, 有 / 有些)
(不 / 不好意思-01, prep-on-behalf, 王 / 王子)
(凉 / 凉水, mod, 清 / 清清)
(凉 / 凉水, unit, 壶 / 壶)
(就 / 就-01, ARG1, 不 / 不好意思-01)
(打 / 打来-01, manner, 拿 / 拿-02)
(打 / 打来-01, snt1, 凉 / 凉水)
(拿 / 拿-02, manner, 就 / 就-01)
(拿 / 拿-02, mod, 喷 / 喷壶)
(王 / 王子, mod, 小 / 小)

Decoded in 71,705 microseconds
Sentence: 他 浇灌 着 花儿 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  浇灌 => 浇灌-01
Span 3-4:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  浇灌 => 浇灌-01
Oracle Span 3-4:  花儿 => 花儿

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	浇灌	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	花儿	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 浇灌-01, arg0, x2 / 他)
(x0 / 浇灌-01, arg1, x3 / 花儿)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),花儿,花儿,false), Span(1,2,List(1),浇灌,浇灌-01,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 浇灌-01, 0 -> 花儿),Map(他 -> 他, 浇 -> 浇灌-01, 花 -> 花儿))),[Ljava.lang.String;@37313c65,Annotation([Ljava.lang.String;@465232e9,[Ljava.lang.String;@798162bc,[Ljava.lang.String;@1df8da7a),Annotation([Ljava.lang.String;@23941fb4,[Ljava.lang.String;@7486b455,[Ledu.cmu.lti.nlp.amr.Dependency;@660acfb),Annotation([Ljava.lang.String;@5d908d47,[Ljava.lang.String;@5efa40fe,[Ljava.lang.String;@1f9f6368),Annotation([Ljava.lang.String;@1c9b0314,[Ljava.lang.String;@45385f75,[Ledu.cmu.lti.nlp.amr.Entity;@49c90a9c))
AMR:
(浇 / 浇灌-01, ARG6, 花 / 花儿)
(浇 / 浇灌-01, prep-from, 他 / 他)

Decoded in 8,301 microseconds
Sentence: 于是 ， 就 这样 ， 这 朵 花儿 就 以 她 那 有点 敏感 多疑 的 虚荣心 折磨 着 小 王子 。

Spans:
Span 14-15:  多疑 => 多疑
Span 10-11:  她 => 她
Span 19-20:  小 => 小
Span 8-9:  就 => 就-01
Span 2-3:  就 => 就-01
Span 17-18:  折磨 => 折磨-01
Span 13-14:  敏感 => 敏感
Span 12-13:  有点 => 有点-01
Span 20-21:  王子 => 王子
Span 7-8:  花儿 => 花儿
Span 16-17:  虚荣心 => 虚荣心
Span 5-6:  这 => 这
Span 3-4:  这样 => 这样-01
Span 11-12:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  多疑 => 多疑
Oracle Span 19-20:  小 => 小
Oracle Span 2-3:  就 => 就
Oracle Span 17-18:  折磨 => 折磨-01
Oracle Span 13-14:  敏感 => 敏感
Oracle Span 12-13:  有点 => 有点
Oracle Span 20-21:  王子 => 王子
Oracle Span 7-8:  花儿 => 花儿
Oracle Span 16-17:  虚荣心 => 虚荣心
Oracle Span 5-6:  这 => 这
Oracle Span 3-4:  这样 => 这样-01
Oracle Span 11-12:  那 => 那

Incorrect span: 有点 => 有点-01
Extra span: 她 => 她
Extra span: 就 => 就-01
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 有点 => 有点
Dependencies:
1	于是	_	AD	AD	_	18	advmod	_	_
2	,	_	PU	PU	_	18	punct	_	_
3	就	_	P	P	_	18	prep	_	_
4	这样	_	AD	AD	_	14	advmod	_	_
5	,	_	PU	PU	_	14	punct	_	_
6	这	_	DT	DT	_	8	det	_	_
7	朵	_	M	M	_	6	clf	_	_
8	花儿	_	NN	NN	_	14	nsubj	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	以	_	P	P	_	14	prep	_	_
11	她	_	PN	PN	_	13	nn	_	_
12	那	_	DT	DT	_	13	det	_	_
13	有点	_	NN	NN	_	10	pobj	_	_
14	敏感	_	VA	VA	_	15	rcmod	_	_
15	多疑	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	虚荣心	_	NN	NN	_	3	pobj	_	_
18	折磨	_	VV	VV	_	0	root	_	_
19	着	_	AS	AS	_	18	asp	_	_
20	小	_	JJ	JJ	_	21	amod	_	_
21	王子	_	NN	NN	_	18	dobj	_	_
22	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x20 / 这样-01, manner, x21 / 就)
(x22 / 折磨-01, arg0, x23 / 花儿)
(x22 / 折磨-01, arg1, x25 / 王子)
(x22 / 折磨-01, manner, x27 / 虚荣心)
(x23 / 花儿, mod, x24 / 这)
(x25 / 王子, mod, x26 / 小)
(x27 / 虚荣心, degree, x30 / 有点)
(x27 / 虚荣心, mod, x28 / 多疑)
(x27 / 虚荣心, mod, x29 / 敏感)
(x27 / 虚荣心, mod, x31 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),王子,王子,false), Span(19,20,List(1),小,小,false), Span(17,18,List(2),折磨,折磨-01,false), Span(16,17,List(3),虚荣心,虚荣心,false), Span(14,15,List(4),多疑,多疑,false), Span(13,14,List(5),敏感,敏感,false), Span(12,13,List(6),有点,有点-01,false), Span(11,12,List(7),那,那,false), Span(10,11,List(8),她,她,false), Span(8,9,List(9),就,就-01,false), Span(7,8,List(10),花儿,花儿,false), Span(5,6,List(11),这,这,false), Span(3,4,List(12),这样,这样-01,false), Span(2,3,List(13),就,就-01,false)),Map(2 -> 折磨-01, 5 -> 敏感, 12 -> 这样-01, 8 -> 她, 7 -> 那, 1 -> 小, 4 -> 多疑, 11 -> 这, 6 -> 有点-01, 0 -> 王子, 9 -> 就-01, 3 -> 虚荣心, 10 -> 花儿, 13 -> 就-01),Map(就 -> 就-01, 折 -> 折磨-01, 虚 -> 虚荣心, 这 -> 这, 王 -> 王子, 小 -> 小, 就2 -> 就-01, 花 -> 花儿, 多 -> 多疑, 这2 -> 这样-01, 敏 -> 敏感, 那 -> 那, 她 -> 她, 有 -> 有点-01))),[Ljava.lang.String;@2d29b4ee,Annotation([Ljava.lang.String;@69ee81fc,[Ljava.lang.String;@6e2aa843,[Ljava.lang.String;@6f36c2f0),Annotation([Ljava.lang.String;@f58853c,[Ljava.lang.String;@1224144a,[Ledu.cmu.lti.nlp.amr.Dependency;@29f7cefd),Annotation([Ljava.lang.String;@700fb871,[Ljava.lang.String;@3b35a229,[Ljava.lang.String;@9816741),Annotation([Ljava.lang.String;@1e16c0aa,[Ljava.lang.String;@13d73f29,[Ledu.cmu.lti.nlp.amr.Entity;@565f390))
AMR:
(就 / 就-01, ARG0, 花 / 花儿)
(就 / 就-01, age, 多 / 多疑)
(折 / 折磨-01, manner, 虚 / 虚荣心)
(折 / 折磨-01, snt3, 王 / 王子)
(有 / 有点-01, ARG0, 她 / 她)
(有 / 有点-01, ARG2, 那 / 那)
(王 / 王子, mod, 小 / 小)
(花 / 花儿, mod, 这 / 这)
(虚 / 虚荣心, degree, 有 / 有点-01)
(虚 / 虚荣心, mod, 多 / 多疑)
(虚 / 虚荣心, mod, 敏 / 敏感)
(这2 / 这样-01, ARG3, 就 / 就-01)
(这2 / 这样-01, manner, 就2 / 就-01)

Decoded in 77,546 microseconds
Sentence: 例如 ， 有 一 天 ， 她 向 小 王子 讲起 她 身 上 长 的 四 根 刺 ： “ 老虎 ， 让 它 张 着 爪子 来 吧 ！ ”

Spans:
Span 0-1:  例如 => 例如-01
Span 18-19:  刺 => 刺-01
Span 4-5:  天 => (temporal-quantity :unit 天)
Span 11-12:  她 => 她
Span 6-7:  她 => 她
Span 24-25:  它 => 它
Span 8-9:  小 => 小
Span 25-26:  张 => 张-01
Span 2-3:  有 => 有-06
Span 28-29:  来 => 来-06
Span 17-18:  根 => 根
Span 27-28:  爪子 => 爪子
Span 9-10:  王子 => 王子
Span 21-22:  老虎 => 老虎
Span 23-24:  让 => 让-01
Span 14-15:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  例如 => 例如-01
Oracle Span 18-19:  刺 => 刺
Oracle Span 6-7:  她 => 她
Oracle Span 8-9:  小 => 小-01
Oracle Span 25-26:  张 => 张-01
Oracle Span 28-29:  来 => 来-01
Oracle Span 27-28:  爪子 => 爪子
Oracle Span 9-10:  王子 => 王子
Oracle Span 21-22:  老虎 => 老虎
Oracle Span 23-24:  让 => 让-02
Oracle Span 14-15:  长 => 长-01

Incorrect span: 来 => 来-06
Extra span: 它 => 它
Incorrect span: 让 => 让-01
Incorrect span: 刺 => 刺-01
Extra span: 根 => 根
Incorrect span: 长 => 长-04
Extra span: 她 => 她
Incorrect span: 小 => 小
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 有 => 有-06
Missing span: 让 => 让-02
Missing span: 来 => 来-01
Missing span: 小 => 小-01
Missing span: 长 => 长-01
Missing span: 刺 => 刺
Dependencies:
1	例如	_	AD	AD	_	3	advmod	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	天	_	M	M	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	她	_	PN	PN	_	11	nsubj	_	_
8	向	_	P	P	_	11	prep	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	8	pobj	_	_
11	讲起	_	VV	VV	_	3	dep	_	_
12	她	_	PN	PN	_	15	nsubj	_	_
13	身	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	15	loc	_	_
15	长	_	VA	VA	_	19	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	四	_	CD	CD	_	18	nummod	_	_
18	根	_	M	M	_	19	clf	_	_
19	刺	_	NN	NN	_	11	dobj	_	_
20	：	_	PU	PU	_	3	punct	_	_
21	“	_	PU	PU	_	24	punct	_	_
22	老虎	_	NN	NN	_	24	prep	_	_
23	,	_	PU	PU	_	24	punct	_	_
24	让	_	VV	VV	_	3	dep	_	_
25	它	_	PN	PN	_	24	dobj	_	_
26	张	_	NR	NR	_	27	dep	_	_
27	着	_	VV	VV	_	24	dep	_	_
28	爪子	_	NT	NT	_	29	lobj	_	_
29	来	_	LC	LC	_	27	loc	_	_
30	吧	_	SP	SP	_	24	dep	_	_
31	！	_	PU	PU	_	3	punct	_	_
32	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x29 / 让-02, arg1, x30 / 老虎)
(x29 / 让-02, arg2, x31 / 来-01)
(x31 / 来-01, manner, x32 / 张-01)
(x32 / 张-01, arg1, x35 / 爪子)
(x36 / 王子, mod, x37 / 小-01)
(x38 / 长-01, arg1, x41 / 刺)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),来,来-06,false), Span(27,28,List(1),爪子,爪子,false), Span(25,26,List(2),张,张-01,false), Span(24,25,List(3),它,它,false), Span(23,24,List(4),让,让-01,false), Span(21,22,List(5),老虎,老虎,false), Span(18,19,List(6),刺,刺-01,false), Span(17,18,List(7),根,根,false), Span(14,15,List(8),长,长-04,false), Span(11,12,List(9),她,她,false), Span(9,10,List(10),王子,王子,false), Span(8,9,List(11),小,小,false), Span(6,7,List(12),她,她,false), Span(4,5,List(14, 13),天,(temporal-quantity :unit 天),false), Span(2,3,List(15),有,有-06,false), Span(0,1,List(16),例如,例如-01,false)),Map(2 -> 张-01, 5 -> 老虎, 12 -> 她, 15 -> 有-06, 8 -> 长-04, 7 -> 根, 1 -> 爪子, 4 -> 让-01, 11 -> 小, 14 -> 天, 6 -> 刺-01, 0 -> 来-06, 9 -> 她, 16 -> 例如-01, 3 -> 它, 10 -> 王子, 13 -> temporal-quantity),Map(张 -> 张-01, t -> temporal-quantity, 来 -> 来-06, 刺 -> 刺-01, 她2 -> 她, 爪 -> 爪子, 王 -> 王子, 根 -> 根, 它 -> 它, 小 -> 小, 天 -> 天, 老 -> 老虎, 让 -> 让-01, 例 -> 例如-01, 长 -> 长-04, 她 -> 她, 有 -> 有-06))),[Ljava.lang.String;@7dc3712,Annotation([Ljava.lang.String;@2f67a4d3,[Ljava.lang.String;@5e3f861,[Ljava.lang.String;@2fb0623e),Annotation([Ljava.lang.String;@49b2a47d,[Ljava.lang.String;@5be1d0a4,[Ledu.cmu.lti.nlp.amr.Dependency;@415b0b49),Annotation([Ljava.lang.String;@6d5620ce,[Ljava.lang.String;@311bf055,[Ljava.lang.String;@642a7222),Annotation([Ljava.lang.String;@7d322cad,[Ljava.lang.String;@21be3395,[Ledu.cmu.lti.nlp.amr.Entity;@4f49f6af))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(刺 / 刺-01, manner, 根 / 根)
(刺 / 刺-01, manner, 长 / 长-04)
(天 / 天, mod, 有 / 有-06)
(小 / 小, poss, 她2 / 她)
(小 / 小, snt1, 她 / 她)
(张 / 张-01, poss, 它 / 它)
(有 / 有-06, manner, 例 / 例如-01)
(有 / 有-06, snt1, 她2 / 她)
(来 / 来-06, manner, 张 / 张-01)
(来 / 来-06, manner, 爪 / 爪子)
(王 / 王子, mod, 小 / 小)
(让 / 让-01, manner, 刺 / 刺-01)
(让 / 让-01, manner, 张 / 张-01)
(让 / 让-01, manner, 老 / 老虎)
(长 / 长-04, value, 她 / 她)

Decoded in 88,034 microseconds
Sentence: 小 王子 顶 了 她 一 句 ： “ 在 我 这个 星球 上 没有 老虎 ，

Spans:
Span 6-7:  句 => 句
Span 9-10:  在 => 在-01
Span 4-5:  她 => 她
Span 0-1:  小 => 小
Span 10-11:  我 => 我
Span 12-13:  星球 => 星球
Span 1-2:  王子 => 王子
Span 15-16:  老虎 => 老虎
Span 11-12:  这个 => 这个
Span 2-3:  顶 => 顶-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  老虎 => 老虎
Oracle Span 2-3:  顶 => 顶

Extra span: 这个 => 这个
Extra span: 我 => 我
Extra span: 在 => 在-01
Extra span: 句 => 句
Incorrect span: 顶 => 顶-02
Incorrect span: 小 => 小
Missing span: 顶 => 顶
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	顶	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	她	_	PN	PN	_	7	nsubj	_	_
6	一	_	NT	NT	_	7	tmod	_	_
7	句	_	VV	VV	_	3	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	15	punct	_	_
10	在	_	P	P	_	15	prep	_	_
11	我	_	PN	PN	_	13	nn	_	_
12	这个	_	NN	NN	_	13	nn	_	_
13	星球	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	10	plmod	_	_
15	没有	_	VE	VE	_	7	ccomp	_	_
16	老虎	_	NN	NN	_	15	dobj	_	_
17	,	_	PU	PU	_	7	punct	_	_
18	一	_	NT	NT	_	15	xsubj	_	_
19	她	_	PN	PN	_	15	xsubj	_	_

Oracle:
(x0 / 顶, arg0, x2 / 王子)
(x0 / 顶, arg2, x11 / 她)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),老虎,老虎,false), Span(12,13,List(1),星球,星球,false), Span(11,12,List(2),这个,这个,false), Span(10,11,List(3),我,我,false), Span(9,10,List(4),在,在-01,false), Span(6,7,List(5),句,句,false), Span(4,5,List(6),她,她,false), Span(2,3,List(7),顶,顶-02,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小,false)),Map(2 -> 这个, 5 -> 句, 8 -> 王子, 7 -> 顶-02, 1 -> 星球, 4 -> 在-01, 6 -> 她, 9 -> 小, 0 -> 老虎, 3 -> 我),Map(顶 -> 顶-02, 在 -> 在-01, 星 -> 星球, 我 -> 我, 这 -> 这个, 王 -> 王子, 句 -> 句, 小 -> 小, 老 -> 老虎, 她 -> 她))),[Ljava.lang.String;@78452606,Annotation([Ljava.lang.String;@147e2ae7,[Ljava.lang.String;@448c8166,[Ljava.lang.String;@4470fbd6),Annotation([Ljava.lang.String;@15d49048,[Ljava.lang.String;@7098b907,[Ledu.cmu.lti.nlp.amr.Dependency;@503f91c3),Annotation([Ljava.lang.String;@13526e59,[Ljava.lang.String;@2235eaab,[Ljava.lang.String;@17503f6b),Annotation([Ljava.lang.String;@3bcd05cb,[Ljava.lang.String;@3b6d844d,[Ledu.cmu.lti.nlp.amr.Entity;@36804139))
AMR:
(在 / 在-01, ARG6, 我 / 我)
(在 / 在-01, manner, 句 / 句)
(星 / 星球, mod, 这 / 这个)
(老 / 老虎, location, 星 / 星球)
(这 / 这个, poss, 在 / 在-01)
(顶 / 顶-02, manner, 小 / 小)
(顶 / 顶-02, manner, 王 / 王子)
(顶 / 顶-02, purpose, 句 / 句)
(顶 / 顶-02, value, 她 / 她)

Decoded in 29,896 microseconds
Sentence: 而且 ， 老虎 是 不 会 吃 草 的 ” 。

Spans:
Span 4-5:  不 => 不
Span 5-6:  会 => 会-03
Span 6-7:  吃 => (thing :arg1-of 吃-01)
Span 3-4:  是 => 是-04
Span 2-3:  老虎 => 老虎
Span 7-8:  草 => 草

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 花儿 轻声 说道 ： “ 我 并 不 是 草 。 ”

Spans:
Span 7-8:  不 => 不
Span 6-7:  并 => 并
Span 5-6:  我 => 我
Span 8-9:  是 => 是-04
Span 0-1:  花儿 => 花儿
Span 9-10:  草 => 草
Span 2-3:  说道 => 说道
Span 1-2:  轻声 => 轻声

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  并 => 并
Oracle Span 0-1:  花儿 => 花儿
Oracle Span 9-10:  草 => 草
Oracle Span 2-3:  说道 => 说道-01
Oracle Span 1-2:  轻声 => 轻声

Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	花儿	_	NN	NN	_	2	nn	_	_
2	轻声	_	NN	NN	_	3	nsubj	_	_
3	说道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	9	punct	_	_
6	我	_	PN	PN	_	9	nsubj	_	_
7	并	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	3	ccomp	_	_
10	草	_	NN	NN	_	9	attr	_	_
11	。	_	PU	PU	_	3	punct	_	_
12	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 花儿)
(x0 / 说道-01, arg1, x4 / 草)
(x0 / 说道-01, manner, x3 / 轻声)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),草,草,false), Span(8,9,List(1),是,是-04,false), Span(7,8,List(2),不,不,false), Span(6,7,List(3),并,并,false), Span(5,6,List(4),我,我,false), Span(2,3,List(5),说道,说道,false), Span(1,2,List(6),轻声,轻声,false), Span(0,1,List(7),花儿,花儿,false)),Map(2 -> 不, 5 -> 说道, 7 -> 花儿, 1 -> 是-04, 4 -> 我, 6 -> 轻声, 0 -> 草, 3 -> 并),Map(我 -> 我, 花 -> 花儿, 不 -> 不, 说 -> 说道, 轻 -> 轻声, 草 -> 草, 并 -> 并, 是 -> 是-04))),[Ljava.lang.String;@730d2164,Annotation([Ljava.lang.String;@24959ca4,[Ljava.lang.String;@10289886,[Ljava.lang.String;@5c86dbc5),Annotation([Ljava.lang.String;@461ad730,[Ljava.lang.String;@4ee203eb,[Ledu.cmu.lti.nlp.amr.Dependency;@1a5a4e19),Annotation([Ljava.lang.String;@7068e664,[Ljava.lang.String;@60db1c0e,[Ljava.lang.String;@3e78b6a5),Annotation([Ljava.lang.String;@769a1df5,[Ljava.lang.String;@41f69e84,[Ledu.cmu.lti.nlp.amr.Entity;@7975d1d8))
AMR:
(不 / 不, poss, 我 / 我)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, manner, 并 / 并)
(是 / 是-04, manner, 草 / 草)
(说 / 说道, manner, 并 / 并)
(说 / 说道, manner, 轻 / 轻声)
(轻 / 轻声, mod, 花 / 花儿)

Decoded in 20,928 microseconds
Sentence: “ 真 对不起 。 ”

Spans:
Span 2-3:  对不起 => 对不起-02
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  对不起 => 对不起-02
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	对不起	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 对不起-02, degree, x3 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),对不起,对不起-02,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 对不起-02),Map(对 -> 对不起-02, 真 -> 真))),[Ljava.lang.String;@2438dcd,Annotation([Ljava.lang.String;@24105dc5,[Ljava.lang.String;@5167f57d,[Ljava.lang.String;@64b0598),Annotation([Ljava.lang.String;@18f8cd79,[Ljava.lang.String;@3e2055d6,[Ledu.cmu.lti.nlp.amr.Dependency;@50029372),Annotation([Ljava.lang.String;@e3b3b2f,[Ljava.lang.String;@50f6ac94,[Ljava.lang.String;@6cc4cdb9),Annotation([Ljava.lang.String;@28194a50,[Ljava.lang.String;@7f2cfe3f,[Ledu.cmu.lti.nlp.amr.Entity;@1a5b6f42))
AMR:
(对 / 对不起-02, degree, 真 / 真)

Decoded in 5,175 microseconds
Sentence: “ 我 并 不 怕 什么 老虎 ， 可 我 讨厌 穿堂风 。

Spans:
Span 3-4:  不 => 不
Span 5-6:  什么 => 什么
Span 8-9:  可 => 可-01
Span 2-3:  并 => 并
Span 4-5:  怕 => 怕-01
Span 9-10:  我 => 我
Span 1-2:  我 => 我
Span 11-12:  穿堂风 => 穿堂风
Span 6-7:  老虎 => 老虎
Span 10-11:  讨厌 => 讨厌-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  并 => 并
Oracle Span 4-5:  怕 => 怕-01
Oracle Span 1-2:  我 => 我
Oracle Span 11-12:  穿堂风 => 穿堂风
Oracle Span 6-7:  老虎 => 老虎
Oracle Span 10-11:  讨厌 => 讨厌-01

Extra span: 我 => 我
Extra span: 可 => 可-01
Extra span: 什么 => 什么
Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	并	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	怕	_	VV	VV	_	0	root	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	老虎	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	可	_	VV	VV	_	5	dep	_	_
10	我	_	PN	PN	_	12	nn	_	_
11	讨厌	_	NN	NN	_	12	nn	_	_
12	穿堂风	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 讨厌-01, arg1, x12 / 穿堂风)
(x5 / 怕-01, arg0, x8 / 我)
(x5 / 怕-01, arg1, x9 / 老虎)
(x5 / 怕-01, manner, x7 / 并)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),穿堂风,穿堂风,false), Span(10,11,List(1),讨厌,讨厌-01,false), Span(9,10,List(2),我,我,false), Span(8,9,List(3),可,可-01,false), Span(6,7,List(4),老虎,老虎,false), Span(5,6,List(5),什么,什么,false), Span(4,5,List(6),怕,怕-01,false), Span(3,4,List(7),不,不,false), Span(2,3,List(8),并,并,false), Span(1,2,List(9),我,我,false)),Map(2 -> 我, 5 -> 什么, 8 -> 并, 7 -> 不, 1 -> 讨厌-01, 4 -> 老虎, 6 -> 怕-01, 9 -> 我, 0 -> 穿堂风, 3 -> 可-01),Map(穿 -> 穿堂风, 怕 -> 怕-01, 讨 -> 讨厌-01, 我 -> 我, 我2 -> 我, 不 -> 不, 老 -> 老虎, 什 -> 什么, 并 -> 并, 可 -> 可-01))),[Ljava.lang.String;@5038d0b5,Annotation([Ljava.lang.String;@32115b28,[Ljava.lang.String;@2ad48653,[Ljava.lang.String;@6bb4dd34),Annotation([Ljava.lang.String;@7d9f158f,[Ljava.lang.String;@45efd90f,[Ledu.cmu.lti.nlp.amr.Dependency;@4b8729ff),Annotation([Ljava.lang.String;@61710c6,[Ljava.lang.String;@3214ee6,[Ljava.lang.String;@383dc82c),Annotation([Ljava.lang.String;@4a07d605,[Ljava.lang.String;@74287ea3,[Ledu.cmu.lti.nlp.amr.Entity;@7d7758be))
AMR:
(不 / 不, poss, 我2 / 我)
(可 / 可-01, degree, 老 / 老虎)
(可 / 可-01, subset, 我 / 我)
(怕 / 怕-01, location, 老 / 老虎)
(怕 / 怕-01, manner, 不 / 不)
(怕 / 怕-01, manner, 并 / 并)
(怕 / 怕-01, subset, 什 / 什么)
(讨 / 讨厌-01, location, 穿 / 穿堂风)
(讨 / 讨厌-01, time, 可 / 可-01)

Decoded in 34,524 microseconds
Sentence: 我 猜想 你 没有 为 我 准备 个 屏风 吗 ？ ”

Spans:
Span 2-3:  你 => 你
Span 6-7:  准备 => 准备-02
Span 8-9:  屏风 => 屏风
Span 5-6:  我 => 我
Span 0-1:  我 => 我
Span 1-2:  猜想 => 猜想-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 6-7:  准备 => 准备-01
Oracle Span 8-9:  屏风 => 屏风
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  猜想 => 猜想-01

Incorrect span: 准备 => 准备-02
Extra span: 我 => 我
Missing span: 准备 => 准备-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	猜想	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	没有	_	VV	VV	_	7	neg	_	_
5	为	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	准备	_	VV	VV	_	2	dep	_	_
8	个	_	M	M	_	9	dep	_	_
9	屏风	_	NN	NN	_	7	dobj	_	_
10	吗	_	SP	SP	_	2	dep	_	_
11	？	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x17 / 猜想-01, arg0, x18 / 我)
(x17 / 猜想-01, arg1, x19 / 准备-01)
(x19 / 准备-01, arg0, x21 / 你)
(x19 / 准备-01, arg1, x23 / 屏风)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),屏风,屏风,false), Span(6,7,List(1),准备,准备-02,false), Span(5,6,List(2),我,我,false), Span(2,3,List(3),你,你,false), Span(1,2,List(4),猜想,猜想-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 我, 5 -> 我, 1 -> 准备-02, 4 -> 猜想-01, 0 -> 屏风, 3 -> 你),Map(准 -> 准备-02, 屏 -> 屏风, 我 -> 我, 猜 -> 猜想-01, 我2 -> 我, 你 -> 你))),[Ljava.lang.String;@2bdd8394,Annotation([Ljava.lang.String;@5f9edf14,[Ljava.lang.String;@68746f22,[Ljava.lang.String;@2f01783a),Annotation([Ljava.lang.String;@68878f6d,[Ljava.lang.String;@41488b16,[Ledu.cmu.lti.nlp.amr.Dependency;@a8ef162),Annotation([Ljava.lang.String;@2eea88a1,[Ljava.lang.String;@7ac296f6,[Ljava.lang.String;@7fd7a283),Annotation([Ljava.lang.String;@22f59fa,[Ljava.lang.String;@78fa769e,[Ledu.cmu.lti.nlp.amr.Entity;@16612a51))
AMR:
(准 / 准备-02, manner, 屏 / 屏风)
(准 / 准备-02, manner, 我 / 我)
(准 / 准备-02, manner, 猜 / 猜想-01)
(猜 / 猜想-01, manner, 我2 / 我)
(猜 / 猜想-01, snt11, 你 / 你)

Decoded in 15,302 microseconds
Sentence: 小 王子 思忖 着 ： “ 讨厌 穿堂风 … 这 对 一 株 植物 来 说 ， 真 不 走运 ， 这 朵 花儿 真 不 大 好 伺候 … ”

Spans:
Span 25-26:  不 => 不
Span 18-19:  不 => 不
Span 28-29:  伺候 => 伺候-01
Span 26-27:  大 => 大
Span 27-28:  好 => 好-04
Span 10-11:  对 => 对-02
Span 0-1:  小 => 小
Span 2-3:  思忖 => 思忖-01
Span 14-15:  来 => 来-06
Span 13-14:  植物 => 植物
Span 1-2:  王子 => 王子
Span 24-25:  真 => 真
Span 17-18:  真 => 真
Span 7-8:  穿堂风 => 穿堂风
Span 23-24:  花儿 => 花儿
Span 6-7:  讨厌 => 讨厌-01
Span 15-16:  说 => 说-02
Span 19-20:  走运 => 走运
Span 21-22:  这 => 这
Span 9-10:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 28-29:  伺候 => 伺候-01
Oracle Span 27-28:  好 => 好
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  思忖 => 思忖-01
Oracle Span 13-14:  植物 => 植物
Oracle Span 1-2:  王子 => 王子
Oracle Span 17-18:  真 => 真
Oracle Span 7-8:  穿堂风 => 穿堂风
Oracle Span 23-24:  花儿 => 花儿
Oracle Span 6-7:  讨厌 => 讨厌-01
Oracle Span 19-20:  走运 => 走运
Oracle Span 9-10:  这 => 这

Incorrect span: 好 => 好-04
Extra span: 大 => 大
Extra span: 不 => 不
Extra span: 真 => 真
Extra span: 这 => 这
Extra span: 不 => 不
Extra span: 说 => 说-02
Extra span: 来 => 来-06
Extra span: 对 => 对-02
Incorrect span: 小 => 小
Missing span: 好 => 好
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	思忖	_	VV	VV	_	0	root	_	_
4	着	_	VV	VV	_	3	comod	_	_
5	：	_	PU	PU	_	3	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	讨厌	_	NN	NN	_	8	nn	_	_
8	穿堂风	_	NN	NN	_	3	dobj	_	_
9	…	_	PU	PU	_	10	punct	_	_
10	这	_	PN	PN	_	8	prnmod	_	_
11	对	_	P	P	_	10	conj	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	株	_	M	M	_	14	clf	_	_
14	植物	_	NN	NN	_	16	nsubj	_	_
15	来	_	MSP	MSP	_	16	prtmod	_	_
16	说	_	VV	VV	_	11	pccomp	_	_
17	,	_	PU	PU	_	16	punct	_	_
18	真	_	AD	AD	_	20	advmod	_	_
19	不	_	AD	AD	_	20	neg	_	_
20	走运	_	VV	VV	_	27	dep	_	_
21	,	_	PU	PU	_	27	punct	_	_
22	这	_	DT	DT	_	24	det	_	_
23	朵	_	M	M	_	22	clf	_	_
24	花儿	_	NN	NN	_	27	nsubj	_	_
25	真	_	AD	AD	_	27	advmod	_	_
26	不	_	AD	AD	_	27	neg	_	_
27	大	_	VA	VA	_	16	ccomp	_	_
28	好	_	VA	VA	_	16	dep	_	_
29	伺候	_	VV	VV	_	28	dep	_	_
30	…	_	PU	PU	_	10	punct	_	_
31	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 思忖-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x27 / 讨厌-01, arg1, x28 / 穿堂风)
(x31 / 走运, degree, x33 / 真)
(x34 / 伺候-01, arg1, x37 / 花儿)
(x34 / 伺候-01, manner, x35 / 好)
(x37 / 花儿, mod, x38 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),伺候,伺候-01,false), Span(27,28,List(1),好,好-04,false), Span(26,27,List(2),大,大,false), Span(25,26,List(3),不,不,false), Span(24,25,List(4),真,真,false), Span(23,24,List(5),花儿,花儿,false), Span(21,22,List(6),这,这,false), Span(19,20,List(7),走运,走运,false), Span(18,19,List(8),不,不,false), Span(17,18,List(9),真,真,false), Span(15,16,List(10),说,说-02,false), Span(14,15,List(11),来,来-06,false), Span(13,14,List(12),植物,植物,false), Span(10,11,List(13),对,对-02,false), Span(9,10,List(14),这,这,false), Span(7,8,List(15),穿堂风,穿堂风,false), Span(6,7,List(16),讨厌,讨厌-01,false), Span(2,3,List(17),思忖,思忖-01,false), Span(1,2,List(18),王子,王子,false), Span(0,1,List(19),小,小,false)),Map(2 -> 大, 5 -> 花儿, 12 -> 植物, 15 -> 穿堂风, 8 -> 不, 18 -> 王子, 7 -> 走运, 17 -> 思忖-01, 1 -> 好-04, 4 -> 真, 11 -> 来-06, 14 -> 这, 6 -> 这, 0 -> 伺候-01, 9 -> 真, 16 -> 讨厌-01, 19 -> 小, 3 -> 不, 10 -> 说-02, 13 -> 对-02),Map(穿 -> 穿堂风, 讨 -> 讨厌-01, 来 -> 来-06, 这 -> 这, 王 -> 王子, 大 -> 大, 思 -> 思忖-01, 植 -> 植物, 小 -> 小, 花 -> 花儿, 不 -> 不, 不2 -> 不, 说 -> 说-02, 这2 -> 这, 好 -> 好-04, 走 -> 走运, 对 -> 对-02, 真2 -> 真, 伺 -> 伺候-01, 真 -> 真))),[Ljava.lang.String;@54e041a4,Annotation([Ljava.lang.String;@2c78324b,[Ljava.lang.String;@79defdc,[Ljava.lang.String;@18317edc),Annotation([Ljava.lang.String;@4e0ae11f,[Ljava.lang.String;@238d68ff,[Ledu.cmu.lti.nlp.amr.Dependency;@4b86805d),Annotation([Ljava.lang.String;@5852c06f,[Ljava.lang.String;@4149c063,[Ljava.lang.String;@9cb8225),Annotation([Ljava.lang.String;@76b07f29,[Ljava.lang.String;@38af9828,[Ledu.cmu.lti.nlp.amr.Entity;@376a0d86))
AMR:
(不 / 不, mod, 真 / 真)
(不 / 不, mod, 花 / 花儿)
(伺 / 伺候-01, manner, 不 / 不)
(伺 / 伺候-01, manner, 好 / 好-04)
(大 / 大, mod, 不 / 不)
(对 / 对-02, manner, 穿 / 穿堂风)
(对 / 对-02, mod, 这2 / 这)
(对 / 对-02, purpose, 来 / 来-06)
(思 / 思忖-01, value, 王 / 王子)
(来 / 来-06, manner, 植 / 植物)
(王 / 王子, mod, 小 / 小)
(花 / 花儿, mod, 不2 / 不)
(花 / 花儿, mod, 这 / 这)
(讨 / 讨厌-01, degree, 穿 / 穿堂风)
(讨 / 讨厌-01, purpose, 思 / 思忖-01)
(说 / 说-02, degree, 真2 / 真)
(说 / 说-02, purpose, 来 / 来-06)
(说 / 说-02, unit, 不2 / 不)
(走 / 走运, mod, 不2 / 不)

Decoded in 121,773 microseconds
Sentence: “ 晚上 您 得 把 我 放到 一 个 玻璃 罩子 中 。

Spans:
Span 3-4:  得 => 得-06
Span 2-3:  您 => 您
Span 5-6:  我 => 我
Span 1-2:  晚上 => 晚上
Span 9-10:  玻璃 => 玻璃
Span 10-11:  罩子 => 罩子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  您 => 您
Oracle Span 5-6:  我 => 我
Oracle Span 1-2:  晚上 => 晚上
Oracle Span 9-10:  玻璃 => 玻璃
Oracle Span 10-11:  罩子 => 罩子

Extra span: 得 => 得-06
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	晚上	_	NT	NT	_	7	tmod	_	_
3	您	_	PN	PN	_	7	nsubj	_	_
4	得	_	VV	VV	_	7	mmod	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	放到	_	VV	VV	_	0	root	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	11	clf	_	_
10	玻璃	_	NN	NN	_	11	nn	_	_
11	罩子	_	NN	NN	_	12	lobj	_	_
12	中	_	LC	LC	_	7	loc	_	_
13	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x5 / 罩子, mod, x6 / 玻璃)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),罩子,罩子,false), Span(9,10,List(1),玻璃,玻璃,false), Span(5,6,List(2),我,我,false), Span(3,4,List(3),得,得-06,false), Span(2,3,List(4),您,您,false), Span(1,2,List(5),晚上,晚上,false)),Map(2 -> 我, 5 -> 晚上, 1 -> 玻璃, 4 -> 您, 0 -> 罩子, 3 -> 得-06),Map(我 -> 我, 玻 -> 玻璃, 得 -> 得-06, 晚 -> 晚上, 罩 -> 罩子, 您 -> 您))),[Ljava.lang.String;@62656be4,Annotation([Ljava.lang.String;@17d919b6,[Ljava.lang.String;@53f3bdbd,[Ljava.lang.String;@34129c78),Annotation([Ljava.lang.String;@7d61eb55,[Ljava.lang.String;@222a59e6,[Ledu.cmu.lti.nlp.amr.Dependency;@6c7a164b),Annotation([Ljava.lang.String;@4c2bb6e0,[Ljava.lang.String;@3e62d773,[Ljava.lang.String;@4ef74c30),Annotation([Ljava.lang.String;@7283d3eb,[Ljava.lang.String;@638ef7ed,[Ledu.cmu.lti.nlp.amr.Entity;@4bff7da0))
AMR:
(得 / 得-06, degree, 您 / 您)
(得 / 得-06, location, 罩 / 罩子)
(得 / 得-06, prep-through, 我 / 我)
(得 / 得-06, time, 晚 / 晚上)
(罩 / 罩子, mod, 玻 / 玻璃)

Decoded in 14,337 microseconds
Sentence: 你 这 地方 太 冷 。

Spans:
Span 0-1:  你 => 你
Span 4-5:  冷 => 冷-01
Span 2-3:  地方 => 地方
Span 3-4:  太 => 太
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  冷 => 冷-01
Oracle Span 2-3:  地方 => 地方
Oracle Span 3-4:  太 => 太
Oracle Span 1-2:  这 => 这

Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	这	_	DT	DT	_	3	det	_	_
3	地方	_	NN	NN	_	5	dep	_	_
4	太	_	AD	AD	_	5	advmod	_	_
5	冷	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 冷-01, arg0, x3 / 地方)
(x0 / 冷-01, degree, x2 / 太)
(x3 / 地方, mod, x4 / 这)
(x3 / 地方, poss, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),冷,冷-01,false), Span(3,4,List(1),太,太,false), Span(2,3,List(2),地方,地方,false), Span(1,2,List(3),这,这,false), Span(0,1,List(4),你,你,false)),Map(2 -> 地方, 1 -> 太, 4 -> 你, 0 -> 冷-01, 3 -> 这),Map(这 -> 这, 你 -> 你, 太 -> 太, 地 -> 地方, 冷 -> 冷-01))),[Ljava.lang.String;@3f1d2e23,Annotation([Ljava.lang.String;@536dbea0,[Ljava.lang.String;@47c81abf,[Ljava.lang.String;@776a6d9b),Annotation([Ljava.lang.String;@21d03963,[Ljava.lang.String;@1f760b47,[Ledu.cmu.lti.nlp.amr.Dependency;@18ece7f4),Annotation([Ljava.lang.String;@3cce57c7,[Ljava.lang.String;@1cf56a1c,[Ljava.lang.String;@33f676f6),Annotation([Ljava.lang.String;@4c5ae43b,[Ljava.lang.String;@264f218,[Ledu.cmu.lti.nlp.amr.Entity;@3576ddc2))
AMR:
(冷 / 冷-01, ARG0, 地 / 地方)
(冷 / 冷-01, degree, 太 / 太)
(地 / 地方, mod, 这 / 这)
(地 / 地方, poss, 你 / 你)

Decoded in 10,618 microseconds
Sentence: 我 原来 住 的 那个 地方 … ”

Spans:
Span 2-3:  住 => 住-01
Span 1-2:  原来 => 原来-01
Span 5-6:  地方 => 地方
Span 0-1:  我 => 我
Span 4-5:  那个 => 那个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  住 => 住-01
Oracle Span 1-2:  原来 => 原来-01
Oracle Span 5-6:  地方 => 地方
Oracle Span 0-1:  我 => 我

Extra span: 那个 => 那个
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	原来	_	AD	AD	_	3	advmod	_	_
3	住	_	VV	VV	_	7	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	那个	_	NN	NN	_	7	nn	_	_
6	地方	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	0	root	_	_
8	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x9 / 住-01, arg0, x11 / 我)
(x9 / 住-01, arg1, x12 / 地方)
(x9 / 住-01, manner, x10 / 原来-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),地方,地方,false), Span(4,5,List(1),那个,那个,false), Span(2,3,List(2),住,住-01,false), Span(1,2,List(3),原来,原来-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 住-01, 1 -> 那个, 4 -> 我, 0 -> 地方, 3 -> 原来-01),Map(我 -> 我, 地 -> 地方, 原 -> 原来-01, 那 -> 那个, 住 -> 住-01))),[Ljava.lang.String;@35b74c5c,Annotation([Ljava.lang.String;@2e570ded,[Ljava.lang.String;@b86de0d,[Ljava.lang.String;@81d9a72),Annotation([Ljava.lang.String;@747f281,[Ljava.lang.String;@1169afe1,[Ledu.cmu.lti.nlp.amr.Dependency;@2ca26d77),Annotation([Ljava.lang.String;@4808bc9b,[Ljava.lang.String;@70e38ce1,[Ljava.lang.String;@2ca923bb),Annotation([Ljava.lang.String;@13df2a8c,[Ljava.lang.String;@1ebea008,[Ledu.cmu.lti.nlp.amr.Entity;@72d6b3ba))
AMR:
(住 / 住-01, manner, 原 / 原来-01)
(住 / 住-01, polite, 我 / 我)
(住 / 住-01, time, 那 / 那个)
(地 / 地方, mod, 那 / 那个)

Decoded in 9,933 microseconds
Sentence: 但 她 没有 说 下去 。

Spans:
Span 1-2:  她 => 她
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  她 => 她
Oracle Span 3-4:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	她	_	PN	PN	_	4	nsubj	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	说	_	VV	VV	_	0	root	_	_
5	下去	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 说-01, arg0, x4 / 她)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),说,说-02,false), Span(1,2,List(1),她,她,false)),Map(1 -> 她, 0 -> 说-02),Map(说 -> 说-02, 她 -> 她))),[Ljava.lang.String;@1787f2a0,Annotation([Ljava.lang.String;@7de62196,[Ljava.lang.String;@163370c2,[Ljava.lang.String;@51bf5add),Annotation([Ljava.lang.String;@7905a0b8,[Ljava.lang.String;@35a3d49f,[Ledu.cmu.lti.nlp.amr.Dependency;@389b0789),Annotation([Ljava.lang.String;@13d9cbf5,[Ljava.lang.String;@478db956,[Ljava.lang.String;@6ca18a14),Annotation([Ljava.lang.String;@c667f46,[Ljava.lang.String;@51bd8b5c,[Ledu.cmu.lti.nlp.amr.Entity;@7b50df34))
AMR:
(说 / 说-02, prep-on, 她 / 她)

Decoded in 4,060 microseconds
Sentence: 她 来 的 时候 是 粒 种子 。

Spans:
Span 0-1:  她 => 她
Span 3-4:  时候 => 时候
Span 4-5:  是 => 是-04
Span 1-2:  来 => 来-06
Span 6-7:  种子 => 种子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  她 => 她
Oracle Span 1-2:  来 => 来-01
Oracle Span 6-7:  种子 => 种子

Extra span: 是 => 是-04
Extra span: 时候 => 时候
Incorrect span: 来 => 来-06
Missing span: 来 => 来-01
Dependencies:
1	她	_	PN	PN	_	5	dep	_	_
2	来	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	时候	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	粒	_	NN	NN	_	7	nn	_	_
7	种子	_	NN	NN	_	5	attr	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 种子, domain, x2 / 她)
(x0 / 种子, time, x4 / 来-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),种子,种子,false), Span(4,5,List(1),是,是-04,false), Span(3,4,List(2),时候,时候,false), Span(1,2,List(3),来,来-06,false), Span(0,1,List(4),她,她,false)),Map(2 -> 时候, 1 -> 是-04, 4 -> 她, 0 -> 种子, 3 -> 来-06),Map(来 -> 来-06, 种 -> 种子, 时 -> 时候, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@1b410b60,Annotation([Ljava.lang.String;@2462cb01,[Ljava.lang.String;@19b843ba,[Ljava.lang.String;@64ec96c6),Annotation([Ljava.lang.String;@77659b30,[Ljava.lang.String;@456d6c1e,[Ledu.cmu.lti.nlp.amr.Dependency;@1e13529a),Annotation([Ljava.lang.String;@1ec9bd38,[Ljava.lang.String;@452e19ca,[Ljava.lang.String;@6b0d80ed),Annotation([Ljava.lang.String;@6f8e8894,[Ljava.lang.String;@3cfdd820,[Ledu.cmu.lti.nlp.amr.Entity;@928763c))
AMR:
(是 / 是-04, ARG1, 时 / 时候)
(是 / 是-04, ARG4, 种 / 种子)
(来 / 来-06, op, 时 / 时候)
(种 / 种子, domain, 她 / 她)

Decoded in 9,609 microseconds
Sentence: 她 哪里 见 过 什么 别的 世界 。

Spans:
Span 6-7:  世界 => 世界
Span 4-5:  什么 => 什么
Span 5-6:  别的 => 别的
Span 0-1:  她 => 她
Span 2-3:  见 => 见-01
Span 3-4:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  世界 => 世界
Oracle Span 5-6:  别的 => 别的
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  见 => 见-01

Extra span: 什么 => 什么
Extra span: 过 => 过-01
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	哪里	_	AD	AD	_	3	advmod	_	_
3	见	_	VV	VV	_	0	root	_	_
4	过	_	AS	AS	_	3	asp	_	_
5	什么	_	DT	DT	_	7	det	_	_
6	别的	_	CD	CD	_	5	dep	_	_
7	世界	_	NN	NN	_	3	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 见-01, arg0, x3 / 她)
(x0 / 见-01, arg1, x4 / 世界)
(x4 / 世界, mod, x5 / 别的)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),世界,世界,false), Span(5,6,List(1),别的,别的,false), Span(4,5,List(2),什么,什么,false), Span(3,4,List(3),过,过-01,false), Span(2,3,List(4),见,见-01,false), Span(0,1,List(5),她,她,false)),Map(2 -> 什么, 5 -> 她, 1 -> 别的, 4 -> 见-01, 0 -> 世界, 3 -> 过-01),Map(过 -> 过-01, 别 -> 别的, 世 -> 世界, 什 -> 什么, 见 -> 见-01, 她 -> 她))),[Ljava.lang.String;@e25951c,Annotation([Ljava.lang.String;@15f47664,[Ljava.lang.String;@471a9022,[Ljava.lang.String;@dc9876b),Annotation([Ljava.lang.String;@2f666ebb,[Ljava.lang.String;@19976a65,[Ledu.cmu.lti.nlp.amr.Dependency;@a1f72f5),Annotation([Ljava.lang.String;@4b2c5e02,[Ljava.lang.String;@57a3e26a,[Ljava.lang.String;@75c56eb9),Annotation([Ljava.lang.String;@4bc222e,[Ljava.lang.String;@2dc9b0f5,[Ledu.cmu.lti.nlp.amr.Entity;@6531a794))
AMR:
(世 / 世界, mod, 别 / 别的)
(别 / 别的, mod, 什 / 什么)
(见 / 见-01, ARG1, 过 / 过-01)
(过 / 过-01, ARG0, 她 / 她)
(过 / 过-01, ARG4, 什 / 什么)

Decoded in 13,417 microseconds
Sentence: 她 叫 人 发现 她 是 在 凑 一 个 如此 不 太 高明 的 谎话 ， 她 有点 羞怒 ， 咳嗽 了 两三 声 。 她 的 这 一 招 是 要 小 王子 处于 有 过失 的 地位 ， 她 说道 ：

Spans:
Span 11-12:  不 => 不
Span 2-3:  人 => 人
Span 7-8:  凑 => 凑-03
Span 3-4:  发现 => 发现-01
Span 1-2:  叫 => 叫-06
Span 21-22:  咳嗽 => 咳嗽-01
Span 6-7:  在 => 在-01
Span 39-40:  地位 => 地位
Span 35-36:  处于 => 处于-01
Span 12-13:  太 => 太
Span 41-42:  她 => 她
Span 26-27:  她 => 她
Span 17-18:  她 => 她
Span 4-5:  她 => 她
Span 0-1:  她 => 她
Span 10-11:  如此 => 如此
Span 33-34:  小 => 小
Span 30-31:  招 => 招
Span 31-32:  是 => 是-04
Span 5-6:  是 => 是-04
Span 36-37:  有 => 有-06
Span 18-19:  有点 => 有点-01
Span 34-35:  王子 => 王子
Span 19-20:  羞怒 => 羞怒
Span 32-33:  要 => 要-02
Span 42-43:  说道 => 说道
Span 15-16:  谎话 => 谎话
Span 37-38:  过失 => 过失
Span 28-29:  这 => 这
Span 13-14:  高明 => 高明-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 7-8:  凑 => 凑-03
Oracle Span 3-4:  发现 => 发现-01
Oracle Span 21-22:  咳嗽 => 咳嗽-01
Oracle Span 39-40:  地位 => 地位
Oracle Span 35-36:  处于 => 处于-01
Oracle Span 12-13:  太 => 太
Oracle Span 0-1:  她 => 她
Oracle Span 10-11:  如此 => 如此-01
Oracle Span 33-34:  小 => 小-01
Oracle Span 30-31:  招 => 招
Oracle Span 36-37:  有 => 有-01
Oracle Span 18-19:  有点 => 有点
Oracle Span 34-35:  王子 => 王子
Oracle Span 19-20:  羞怒 => 羞怒
Oracle Span 32-33:  要 => 要-03
Oracle Span 42-43:  说道 => 说道-01
Oracle Span 15-16:  谎话 => 谎话
Oracle Span 37-38:  过失 => 过失
Oracle Span 28-29:  这 => 这
Oracle Span 13-14:  高明 => 高明-01

Incorrect span: 说道 => 说道
Extra span: 她 => 她
Incorrect span: 有 => 有-06
Incorrect span: 小 => 小
Incorrect span: 要 => 要-02
Extra span: 是 => 是-04
Extra span: 她 => 她
Incorrect span: 有点 => 有点-01
Extra span: 她 => 她
Extra span: 不 => 不
Incorrect span: 如此 => 如此
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 她 => 她
Extra span: 叫 => 叫-06
Missing span: 如此 => 如此-01
Missing span: 有点 => 有点
Missing span: 要 => 要-03
Missing span: 有 => 有-01
Missing span: 小 => 小-01
Missing span: 说道 => 说道-01
Dependencies:
1	她	_	PN	PN	_	2	nsubj	_	_
2	叫	_	VV	VV	_	0	root	_	_
3	人	_	NN	NN	_	2	dobj	_	_
4	发现	_	VV	VV	_	2	dep	_	_
5	她	_	PN	PN	_	6	top	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	在	_	P	P	_	19	prep	_	_
8	凑	_	NR	NR	_	16	nn	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	16	clf	_	_
11	如此	_	AD	AD	_	14	advmod	_	_
12	不	_	AD	AD	_	14	neg	_	_
13	太	_	AD	AD	_	14	advmod	_	_
14	高明	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	谎话	_	NN	NN	_	7	pobj	_	_
17	,	_	PU	PU	_	19	punct	_	_
18	她	_	PN	PN	_	19	nsubj	_	_
19	有点	_	VV	VV	_	6	ccomp	_	_
20	羞怒	_	NN	NN	_	19	dobj	_	_
21	,	_	PU	PU	_	19	punct	_	_
22	咳嗽	_	VV	VV	_	19	conj	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	两三	_	CD	CD	_	25	nummod	_	_
25	声	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	6	punct	_	_
27	她	_	PN	PN	_	31	assmod	_	_
28	的	_	DEG	DEG	_	27	assm	_	_
29	这	_	DT	DT	_	31	det	_	_
30	一	_	CD	CD	_	29	dep	_	_
31	招	_	NN	NN	_	32	top	_	_
32	是	_	VC	VC	_	6	conj	_	_
33	要	_	VV	VV	_	36	conj	_	_
34	小	_	JJ	JJ	_	35	amod	_	_
35	王子	_	NN	NN	_	33	dobj	_	_
36	处于	_	VV	VV	_	32	ccomp	_	_
37	有	_	VE	VE	_	40	rcmod	_	_
38	过失	_	NN	NN	_	37	dobj	_	_
39	的	_	DEC	DEC	_	37	cpm	_	_
40	地位	_	NN	NN	_	36	dobj	_	_
41	,	_	PU	PU	_	6	punct	_	_
42	她	_	PN	PN	_	43	nsubj	_	_
43	说道	_	VV	VV	_	6	conj	_	_
44	：	_	PU	PU	_	2	punct	_	_
45	高明	_	VA	VA	_	8	rcmod	_	_

Oracle:
(x17 / 发现-01, arg0, x18 / 人)
(x17 / 发现-01, arg1, x19 / 凑-03)
(x19 / 凑-03, arg0, x20 / 她)
(x19 / 凑-03, arg1, x21 / 谎话)
(x21 / 谎话, mod, x22 / 高明-01)
(x21 / 谎话, mod, x27 / 如此-01)
(x22 / 高明-01, degree, x24 / 太)
(x39 / 招, mod, x41 / 这)
(x39 / 招, purpose, x43 / 要-03)
(x43 / 要-03, arg0, x44 / 处于-01)
(x44 / 处于-01, arg0, x45 / 王子)
(x44 / 处于-01, arg1, x47 / 地位)
(x45 / 王子, mod, x46 / 小-01)
(x47 / 地位, mod, x48 / 过失)
(x49 / 有-01, arg1, x48 / 过失)
(x56 / 羞怒, degree, x57 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(42,43,List(0),说道,说道,false), Span(41,42,List(1),她,她,false), Span(39,40,List(2),地位,地位,false), Span(37,38,List(3),过失,过失,false), Span(36,37,List(4),有,有-06,false), Span(35,36,List(5),处于,处于-01,false), Span(34,35,List(6),王子,王子,false), Span(33,34,List(7),小,小,false), Span(32,33,List(8),要,要-02,false), Span(31,32,List(9),是,是-04,false), Span(30,31,List(10),招,招,false), Span(28,29,List(11),这,这,false), Span(26,27,List(12),她,她,false), Span(21,22,List(13),咳嗽,咳嗽-01,false), Span(19,20,List(14),羞怒,羞怒,false), Span(18,19,List(15),有点,有点-01,false), Span(17,18,List(16),她,她,false), Span(15,16,List(17),谎话,谎话,false), Span(13,14,List(18),高明,高明-01,false), Span(12,13,List(19),太,太,false), Span(11,12,List(20),不,不,false), Span(10,11,List(21),如此,如此,false), Span(7,8,List(22),凑,凑-03,false), Span(6,7,List(23),在,在-01,false), Span(5,6,List(24),是,是-04,false), Span(4,5,List(25),她,她,false), Span(3,4,List(26),发现,发现-01,false), Span(2,3,List(27),人,人,false), Span(1,2,List(28),叫,叫-06,false), Span(0,1,List(29),她,她,false)),Map(2 -> 地位, 5 -> 处于-01, 27 -> 人, 12 -> 她, 8 -> 要-02, 15 -> 有点-01, 21 -> 如此, 18 -> 高明-01, 24 -> 是-04, 7 -> 小, 1 -> 她, 17 -> 谎话, 23 -> 在-01, 26 -> 发现-01, 4 -> 有-06, 11 -> 这, 14 -> 羞怒, 29 -> 她, 20 -> 不, 28 -> 叫-06, 6 -> 王子, 9 -> 是-04, 0 -> 说道, 22 -> 凑-03, 16 -> 她, 19 -> 太, 10 -> 招, 3 -> 过失, 25 -> 她, 13 -> 咳嗽-01),Map(谎 -> 谎话, 高 -> 高明-01, 发 -> 发现-01, 她5 -> 她, 有2 -> 有点-01, 在 -> 在-01, 她2 -> 她, 这 -> 这, 要 -> 要-02, 过 -> 过失, 凑 -> 凑-03, 王 -> 王子, 太 -> 太, 叫 -> 叫-06, 她4 -> 她, 小 -> 小, 地 -> 地位, 咳 -> 咳嗽-01, 不 -> 不, 说 -> 说道, 羞 -> 羞怒, 招 -> 招, 人 -> 人, 她3 -> 她, 是 -> 是-04, 是2 -> 是-04, 如 -> 如此, 处 -> 处于-01, 她 -> 她, 有 -> 有-06))),[Ljava.lang.String;@3b5fad2d,Annotation([Ljava.lang.String;@5e17553a,[Ljava.lang.String;@3eb91815,[Ljava.lang.String;@56dc1551),Annotation([Ljava.lang.String;@102cec62,[Ljava.lang.String;@74f6c5d8,[Ledu.cmu.lti.nlp.amr.Dependency;@27912e3),Annotation([Ljava.lang.String;@34b9f960,[Ljava.lang.String;@43015c69,[Ljava.lang.String;@19b89d4),Annotation([Ljava.lang.String;@4bbf6d0e,[Ljava.lang.String;@30b6ffe0,[Ledu.cmu.lti.nlp.amr.Entity;@791d1f8b))
AMR:
(不 / 不, mod, 如 / 如此)
(人 / 人, mod, 叫 / 叫-06)
(凑 / 凑-03, degree, 在 / 在-01)
(发 / 发现-01, prep-on, 是2 / 是-04)
(发 / 发现-01, time, 叫 / 叫-06)
(叫 / 叫-06, degree, 她5 / 她)
(咳 / 咳嗽-01, degree, 有2 / 有点-01)
(在 / 在-01, degree, 是2 / 是-04)
(地 / 地位, mod, 过 / 过失)
(处 / 处于-01, accompanier, 有 / 有-06)
(处 / 处于-01, degree, 王 / 王子)
(处 / 处于-01, mod, 小 / 小)
(处 / 处于-01, time, 是 / 是-04)
(如 / 如此, mod, 凑 / 凑-03)
(招 / 招, mod, 这 / 这)
(招 / 招, purpose, 是 / 是-04)
(是 / 是-04, degree, 咳 / 咳嗽-01)
(是 / 是-04, domain, 她2 / 她)
(是2 / 是-04, degree, 她4 / 她)
(有2 / 有点-01, degree, 她3 / 她)
(有2 / 有点-01, degree, 谎 / 谎话)
(羞 / 羞怒, degree, 有2 / 有点-01)
(要 / 要-02, degree, 是 / 是-04)
(说 / 说道, mod, 地 / 地位)
(说 / 说道, mod, 她 / 她)
(谎 / 谎话, mod, 不 / 不)
(谎 / 谎话, mod, 高 / 高明-01)
(过 / 过失, mod, 有 / 有-06)
(高 / 高明-01, degree, 太 / 太)

Decoded in 300,381 microseconds
Sentence: “ 屏风 呢 ？ ”

Spans:
Span 1-2:  屏风 => 屏风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  屏风 => 屏风

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	屏风	_	VA	VA	_	0	root	_	_
3	呢	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),屏风,屏风,false)),Map(0 -> 屏风),Map(屏 -> 屏风))),[Ljava.lang.String;@2415fc55,Annotation([Ljava.lang.String;@14f232c4,[Ljava.lang.String;@13bc8645,[Ljava.lang.String;@24c22fe),Annotation([Ljava.lang.String;@93081b6,[Ljava.lang.String;@cd1e646,[Ledu.cmu.lti.nlp.amr.Dependency;@7ba8c737),Annotation([Ljava.lang.String;@1890516e,[Ljava.lang.String;@15a04efb,[Ljava.lang.String;@16c069df),Annotation([Ljava.lang.String;@2bec854f,[Ljava.lang.String;@31edaa7d,[Ledu.cmu.lti.nlp.amr.Entity;@26adfd2d))
AMR:


Decoded in 4,475 microseconds
Sentence: “ 我 正 准备 去 拿 。 可 你 刚才 说 的 是 … ”

Spans:
Span 8-9:  你 => 你
Span 3-4:  准备 => 准备-02
Span 9-10:  刚才 => 刚才
Span 4-5:  去 => 去-02
Span 7-8:  可 => 可-01
Span 1-2:  我 => 我
Span 5-6:  拿 => 拿-02
Span 12-13:  是 => 是-04
Span 2-3:  正 => 正
Span 10-11:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  你 => 你
Oracle Span 3-4:  准备 => 准备-02
Oracle Span 9-10:  刚才 => 刚才
Oracle Span 4-5:  去 => 去-01
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  拿 => 拿-01
Oracle Span 2-3:  正 => 正
Oracle Span 10-11:  说 => 说-01

Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 可 => 可-01
Incorrect span: 拿 => 拿-02
Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Missing span: 拿 => 拿-01
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	正	_	AD	AD	_	4	advmod	_	_
4	准备	_	VV	VV	_	0	root	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	拿	_	VV	VV	_	4	ccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	可	_	AD	AD	_	11	advmod	_	_
9	你	_	PN	PN	_	11	nsubj	_	_
10	刚才	_	AD	AD	_	11	advmod	_	_
11	说	_	VV	VV	_	4	conj	_	_
12	的	_	SP	SP	_	11	dep	_	_
13	是	_	VC	VC	_	4	conj	_	_
14	…	_	NN	NN	_	13	attr	_	_
15	”	_	PU	PU	_	4	punct	_	_
16	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x15 / 准备-02, arg0, x16 / 我)
(x15 / 准备-02, arg1, x18 / 去-01)
(x15 / 准备-02, manner, x17 / 正)
(x18 / 去-01, arg1, x20 / 拿-01)
(x22 / 说-01, arg0, x23 / 你)
(x22 / 说-01, time, x24 / 刚才)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),是,是-04,false), Span(10,11,List(1),说,说-02,false), Span(9,10,List(2),刚才,刚才,false), Span(8,9,List(3),你,你,false), Span(7,8,List(4),可,可-01,false), Span(5,6,List(5),拿,拿-02,false), Span(4,5,List(6),去,去-02,false), Span(3,4,List(7),准备,准备-02,false), Span(2,3,List(8),正,正,false), Span(1,2,List(9),我,我,false)),Map(2 -> 刚才, 5 -> 拿-02, 8 -> 正, 7 -> 准备-02, 1 -> 说-02, 4 -> 可-01, 6 -> 去-02, 9 -> 我, 0 -> 是-04, 3 -> 你),Map(准 -> 准备-02, 我 -> 我, 你 -> 你, 正 -> 正, 去 -> 去-02, 说 -> 说-02, 拿 -> 拿-02, 刚 -> 刚才, 是 -> 是-04, 可 -> 可-01))),[Ljava.lang.String;@3336e6b6,Annotation([Ljava.lang.String;@7c3fdb62,[Ljava.lang.String;@205d38da,[Ljava.lang.String;@6950ed69),Annotation([Ljava.lang.String;@6dd7b5a3,[Ljava.lang.String;@6f3187b0,[Ledu.cmu.lti.nlp.amr.Dependency;@2663e964),Annotation([Ljava.lang.String;@48b67364,[Ljava.lang.String;@189cbd7c,[Ljava.lang.String;@7bf3a5d8),Annotation([Ljava.lang.String;@42e25b0b,[Ljava.lang.String;@39b43d60,[Ledu.cmu.lti.nlp.amr.Entity;@44be0077))
AMR:
(准 / 准备-02, example, 去 / 去-02)
(准 / 准备-02, example, 我 / 我)
(准 / 准备-02, manner, 正 / 正)
(可 / 可-01, degree, 拿 / 拿-02)
(可 / 可-01, prep-through, 你 / 你)
(拿 / 拿-02, manner, 去 / 去-02)
(说 / 说-02, degree, 可 / 可-01)
(说 / 说-02, purpose, 是 / 是-04)
(说 / 说-02, time, 刚 / 刚才)

Decoded in 53,559 microseconds
Sentence: 于是 花儿 放开 嗓门 咳嗽 了 几 声 ， 依然 要 使 小 王子 后悔 自己 的 过失 。

Spans:
Span 11-12:  使 => 使-01
Span 9-10:  依然 => 依然-01
Span 6-7:  几 => 几
Span 14-15:  后悔 => 后悔-01
Span 4-5:  咳嗽 => 咳嗽-01
Span 3-4:  嗓门 => 嗓门
Span 12-13:  小 => 小
Span 2-3:  放开 => 放开-01
Span 13-14:  王子 => 王子
Span 15-16:  自己 => 自己
Span 1-2:  花儿 => 花儿
Span 10-11:  要 => 要-02
Span 17-18:  过失 => 过失

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  依然 => 依然
Oracle Span 14-15:  后悔 => 后悔-01
Oracle Span 4-5:  咳嗽 => 咳嗽-01
Oracle Span 3-4:  嗓门 => 嗓门
Oracle Span 12-13:  小 => 小-01
Oracle Span 2-3:  放开 => 放开-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 1-2:  花儿 => 花儿
Oracle Span 17-18:  过失 => 过失

Extra span: 自己 => 自己
Incorrect span: 小 => 小
Extra span: 使 => 使-01
Extra span: 要 => 要-02
Incorrect span: 依然 => 依然-01
Extra span: 几 => 几
Missing span: 依然 => 依然
Missing span: 小 => 小-01
Dependencies:
1	于是	_	AD	AD	_	3	advmod	_	_
2	花儿	_	NN	NN	_	3	nsubj	_	_
3	放开	_	VV	VV	_	0	root	_	_
4	嗓门	_	NN	NN	_	3	dobj	_	_
5	咳嗽	_	VV	VV	_	3	conj	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	几	_	CD	CD	_	8	nummod	_	_
8	声	_	NN	NN	_	5	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	依然	_	AD	AD	_	12	advmod	_	_
11	要	_	VV	VV	_	12	mmod	_	_
12	使	_	VV	VV	_	3	conj	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	12	dobj	_	_
15	后悔	_	VV	VV	_	12	dep	_	_
16	自己	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	过失	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x22 / 咳嗽-01, arg0, x23 / 花儿)
(x22 / 咳嗽-01, manner, x25 / 放开-01)
(x22 / 咳嗽-01, purpose, x36 / 后悔-01)
(x25 / 放开-01, arg1, x27 / 嗓门)
(x36 / 后悔-01, arg0, x37 / 王子)
(x36 / 后悔-01, arg1, x40 / 过失)
(x36 / 后悔-01, manner, x39 / 依然)
(x37 / 王子, mod, x38 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),过失,过失,false), Span(15,16,List(1),自己,自己,false), Span(14,15,List(2),后悔,后悔-01,false), Span(13,14,List(3),王子,王子,false), Span(12,13,List(4),小,小,false), Span(11,12,List(5),使,使-01,false), Span(10,11,List(6),要,要-02,false), Span(9,10,List(7),依然,依然-01,false), Span(6,7,List(8),几,几,false), Span(4,5,List(9),咳嗽,咳嗽-01,false), Span(3,4,List(10),嗓门,嗓门,false), Span(2,3,List(11),放开,放开-01,false), Span(1,2,List(12),花儿,花儿,false)),Map(2 -> 后悔-01, 5 -> 使-01, 12 -> 花儿, 8 -> 几, 7 -> 依然-01, 1 -> 自己, 4 -> 小, 11 -> 放开-01, 6 -> 要-02, 0 -> 过失, 9 -> 咳嗽-01, 3 -> 王子, 10 -> 嗓门),Map(自 -> 自己, 嗓 -> 嗓门, 几 -> 几, 过 -> 过失, 要 -> 要-02, 王 -> 王子, 放 -> 放开-01, 小 -> 小, 咳 -> 咳嗽-01, 花 -> 花儿, 后 -> 后悔-01, 使 -> 使-01, 依 -> 依然-01))),[Ljava.lang.String;@2205a05d,Annotation([Ljava.lang.String;@72ef8d15,[Ljava.lang.String;@6aa8e115,[Ljava.lang.String;@5e21e98f),Annotation([Ljava.lang.String;@51a9ad5e,[Ljava.lang.String;@5f20155b,[Ledu.cmu.lti.nlp.amr.Dependency;@72ade7e3),Annotation([Ljava.lang.String;@239105a8,[Ljava.lang.String;@3fce8fd9,[Ljava.lang.String;@609bcfb6),Annotation([Ljava.lang.String;@7d94beb9,[Ljava.lang.String;@560348e6,[Ledu.cmu.lti.nlp.amr.Entity;@1df8b5b8))
AMR:
(使 / 使-01, manner, 依 / 依然-01)
(后 / 后悔-01, manner, 依 / 依然-01)
(后 / 后悔-01, manner, 王 / 王子)
(后 / 后悔-01, snt3, 过 / 过失)
(咳 / 咳嗽-01, ARG4, 几 / 几)
(咳 / 咳嗽-01, ARG6, 花 / 花儿)
(咳 / 咳嗽-01, manner, 放 / 放开-01)
(咳 / 咳嗽-01, purpose, 后 / 后悔-01)
(放 / 放开-01, quant, 嗓 / 嗓门)
(王 / 王子, mod, 小 / 小)
(要 / 要-02, manner, 依 / 依然-01)
(过 / 过失, poss, 自 / 自己)

Decoded in 91,659 microseconds
Sentence: 尽管 小 王子 本来 诚心诚意 地 喜欢 这 朵 花 ， 可是 ， 这一来 ， 却 使 他 马上 对 她 产生 了 怀疑 。

Spans:
Span 21-22:  产生 => 产生-02
Span 17-18:  他 => 他
Span 16-17:  使 => 使-01
Span 6-7:  喜欢 => 喜欢-01
Span 5-6:  地 => 地
Span 20-21:  她 => 她
Span 19-20:  对 => 对-02
Span 1-2:  小 => 小
Span 23-24:  怀疑 => 怀疑-01
Span 3-4:  本来 => 本来
Span 2-3:  王子 => 王子
Span 9-10:  花 => 花-01
Span 4-5:  诚心诚意 => 诚心诚意
Span 7-8:  这 => 这
Span 13-14:  这一来 => 这一来
Span 18-19:  马上 => 马上

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 21-22:  产生 => 产生-01
Oracle Span 6-7:  喜欢 => 喜欢-01
Oracle Span 1-2:  小 => 小
Oracle Span 23-24:  怀疑 => 怀疑-01
Oracle Span 3-4:  本来 => 本来
Oracle Span 2-3:  王子 => 王子
Oracle Span 9-10:  花 => 花
Oracle Span 4-5:  诚心诚意 => 诚心诚意
Oracle Span 7-8:  这 => 这
Oracle Span 13-14:  这一来 => 这一来
Oracle Span 18-19:  马上 => 马上

Incorrect span: 产生 => 产生-02
Extra span: 她 => 她
Extra span: 对 => 对-02
Extra span: 他 => 他
Extra span: 使 => 使-01
Incorrect span: 花 => 花-01
Extra span: 地 => 地
Missing span: 花 => 花
Missing span: 产生 => 产生-01
Dependencies:
1	尽管	_	CS	CS	_	7	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	7	nsubj	_	_
4	本来	_	AD	AD	_	5	advmod	_	_
5	诚心诚意	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	喜欢	_	VV	VV	_	0	root	_	_
8	这	_	DT	DT	_	10	det	_	_
9	朵	_	M	M	_	8	clf	_	_
10	花	_	NN	NN	_	17	nsubj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	可是	_	AD	AD	_	17	advmod	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	这一来	_	CD	CD	_	17	dep	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	却	_	AD	AD	_	17	advmod	_	_
17	使	_	VV	VV	_	7	ccomp	_	_
18	他	_	PN	PN	_	17	dobj	_	_
19	马上	_	AD	AD	_	22	advmod	_	_
20	对	_	P	P	_	22	prep	_	_
21	她	_	PN	PN	_	20	pobj	_	_
22	产生	_	VV	VV	_	17	dep	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	怀疑	_	NN	NN	_	22	dobj	_	_
25	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x24 / 喜欢-01, arg0, x25 / 王子)
(x24 / 喜欢-01, arg1, x27 / 花)
(x24 / 喜欢-01, manner, x29 / 诚心诚意)
(x24 / 喜欢-01, manner, x30 / 本来)
(x25 / 王子, mod, x26 / 小)
(x27 / 花, mod, x28 / 这)
(x32 / 产生-01, arg1, x34 / 怀疑-01)
(x32 / 产生-01, cause, x38 / 这一来)
(x32 / 产生-01, manner, x37 / 马上)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),怀疑,怀疑-01,false), Span(21,22,List(1),产生,产生-02,false), Span(20,21,List(2),她,她,false), Span(19,20,List(3),对,对-02,false), Span(18,19,List(4),马上,马上,false), Span(17,18,List(5),他,他,false), Span(16,17,List(6),使,使-01,false), Span(13,14,List(7),这一来,这一来,false), Span(9,10,List(8),花,花-01,false), Span(7,8,List(9),这,这,false), Span(6,7,List(10),喜欢,喜欢-01,false), Span(5,6,List(11),地,地,false), Span(4,5,List(12),诚心诚意,诚心诚意,false), Span(3,4,List(13),本来,本来,false), Span(2,3,List(14),王子,王子,false), Span(1,2,List(15),小,小,false)),Map(2 -> 她, 5 -> 他, 12 -> 诚心诚意, 15 -> 小, 8 -> 花-01, 7 -> 这一来, 1 -> 产生-02, 4 -> 马上, 11 -> 地, 14 -> 王子, 6 -> 使-01, 0 -> 怀疑-01, 9 -> 这, 3 -> 对-02, 10 -> 喜欢-01, 13 -> 本来),Map(本 -> 本来, 怀 -> 怀疑-01, 产 -> 产生-02, 马 -> 马上, 这 -> 这一来, 王 -> 王子, 他 -> 他, 诚 -> 诚心诚意, 小 -> 小, 喜 -> 喜欢-01, 地 -> 地, 花 -> 花-01, 这2 -> 这, 使 -> 使-01, 对 -> 对-02, 她 -> 她))),[Ljava.lang.String;@23202fce,Annotation([Ljava.lang.String;@7b993c65,[Ljava.lang.String;@37911f88,[Ljava.lang.String;@6f1c29b7),Annotation([Ljava.lang.String;@4d6025c5,[Ljava.lang.String;@7f284218,[Ledu.cmu.lti.nlp.amr.Dependency;@407a7f2a),Annotation([Ljava.lang.String;@4ea5b703,[Ljava.lang.String;@2a7ed1f,[Ljava.lang.String;@3fa247d1),Annotation([Ljava.lang.String;@2cb2fc20,[Ljava.lang.String;@4f4c4b1a,[Ledu.cmu.lti.nlp.amr.Entity;@723e88f9))
AMR:
(产 / 产生-02, extent, 怀 / 怀疑-01)
(产 / 产生-02, location, 这 / 这一来)
(使 / 使-01, prep-on-behalf, 花 / 花-01)
(使 / 使-01, purpose, 他 / 他)
(喜 / 喜欢-01, ARG1, 地 / 地)
(喜 / 喜欢-01, ARG6, 花 / 花-01)
(喜 / 喜欢-01, manner, 本 / 本来)
(喜 / 喜欢-01, manner, 诚 / 诚心诚意)
(喜 / 喜欢-01, source, 王 / 王子)
(对 / 对-02, ARG0, 她 / 她)
(对 / 对-02, degree, 产 / 产生-02)
(对 / 对-02, manner, 使 / 使-01)
(对 / 对-02, manner, 马 / 马上)
(王 / 王子, mod, 小 / 小)
(花 / 花-01, mod, 这2 / 这)

Decoded in 150,773 microseconds
Sentence: 小 王子 对 一些 无关紧要 的 话 看 得 太 认真 ， 结果 使 自己 很 苦恼 。

Spans:
Span 3-4:  一些 => 一些
Span 13-14:  使 => 使-01
Span 9-10:  太 => 太
Span 2-3:  对 => 对-02
Span 0-1:  小 => 小
Span 15-16:  很 => 很
Span 8-9:  得 => 得-06
Span 4-5:  无关紧要 => 无关紧要
Span 1-2:  王子 => 王子
Span 7-8:  看 => 看-10
Span 12-13:  结果 => 结果-01
Span 14-15:  自己 => 自己
Span 16-17:  苦恼 => 苦恼-01
Span 10-11:  认真 => 认真-01
Span 6-7:  话 => 话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 3-4:  一些 => 一些
Oracle Span 9-10:  太 => 太
Oracle Span 0-1:  小 => 小-01
Oracle Span 15-16:  很 => 很
Oracle Span 4-5:  无关紧要 => 无关紧要
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  看 => 看-10
Oracle Span 16-17:  苦恼 => 苦恼-01
Oracle Span 10-11:  认真 => 认真
Oracle Span 6-7:  话 => 话

Extra span: 自己 => 自己
Extra span: 使 => 使-01
Extra span: 结果 => 结果-01
Incorrect span: 认真 => 认真-01
Extra span: 得 => 得-06
Incorrect span: 话 => 话-01
Extra span: 对 => 对-02
Incorrect span: 小 => 小
Missing span: 认真 => 认真
Missing span: 话 => 话
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	14	nsubj	_	_
3	对	_	P	P	_	14	prep	_	_
4	一些	_	CD	CD	_	5	nummod	_	_
5	无关紧要	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	话	_	NN	NN	_	3	pobj	_	_
8	看	_	VV	VV	_	14	mmod	_	_
9	得	_	VV	VV	_	14	mmod	_	_
10	太	_	AD	AD	_	14	advmod	_	_
11	认真	_	AD	AD	_	14	advmod	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	结果	_	AD	AD	_	14	advmod	_	_
14	使	_	VV	VV	_	0	root	_	_
15	自己	_	PN	PN	_	14	dobj	_	_
16	很	_	AD	AD	_	17	advmod	_	_
17	苦恼	_	VA	VA	_	14	dep	_	_
18	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x17 / 苦恼-01, cause, x20 / 看-10)
(x17 / 苦恼-01, degree, x19 / 很)
(x20 / 看-10, arg0, x22 / 王子)
(x20 / 看-10, arg1, x24 / 话)
(x20 / 看-10, arg2, x27 / 认真)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 话, mod, x25 / 无关紧要)
(x24 / 话, quant, x26 / 一些)
(x27 / 认真, degree, x28 / 太)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),苦恼,苦恼-01,false), Span(15,16,List(1),很,很,false), Span(14,15,List(2),自己,自己,false), Span(13,14,List(3),使,使-01,false), Span(12,13,List(4),结果,结果-01,false), Span(10,11,List(5),认真,认真-01,false), Span(9,10,List(6),太,太,false), Span(8,9,List(7),得,得-06,false), Span(7,8,List(8),看,看-10,false), Span(6,7,List(9),话,话-01,false), Span(4,5,List(10),无关紧要,无关紧要,false), Span(3,4,List(11),一些,一些,false), Span(2,3,List(12),对,对-02,false), Span(1,2,List(13),王子,王子,false), Span(0,1,List(14),小,小,false)),Map(2 -> 自己, 5 -> 认真-01, 12 -> 对-02, 8 -> 看-10, 7 -> 得-06, 1 -> 很, 4 -> 结果-01, 11 -> 一些, 14 -> 小, 6 -> 太, 0 -> 苦恼-01, 9 -> 话-01, 3 -> 使-01, 10 -> 无关紧要, 13 -> 王子),Map(自 -> 自己, 得 -> 得-06, 王 -> 王子, 话 -> 话-01, 无 -> 无关紧要, 很 -> 很, 太 -> 太, 认 -> 认真-01, 小 -> 小, 结 -> 结果-01, 看 -> 看-10, 苦 -> 苦恼-01, 使 -> 使-01, 对 -> 对-02, 一 -> 一些))),[Ljava.lang.String;@5f0fd5a0,Annotation([Ljava.lang.String;@64e7619d,[Ljava.lang.String;@495ee280,[Ljava.lang.String;@4fa1c212),Annotation([Ljava.lang.String;@6ea2bc93,[Ljava.lang.String;@3116c353,[Ledu.cmu.lti.nlp.amr.Dependency;@f627d13),Annotation([Ljava.lang.String;@4e928fbf,[Ljava.lang.String;@352ff4da,[Ljava.lang.String;@3224a577),Annotation([Ljava.lang.String;@2e32ccc5,[Ljava.lang.String;@748741cb,[Ledu.cmu.lti.nlp.amr.Entity;@3e44f2a5))
AMR:
(使 / 使-01, manner, 太 / 太)
(使 / 使-01, manner, 结 / 结果-01)
(使 / 使-01, purpose, 自 / 自己)
(对 / 对-02, ARG4, 一 / 一些)
(得 / 得-06, ARG2, 认 / 认真-01)
(王 / 王子, ARG1, 对 / 对-02)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, ARG0, 得 / 得-06)
(看 / 看-10, year, 话 / 话-01)
(苦 / 苦恼-01, degree, 很 / 很)
(苦 / 苦恼-01, op, 看 / 看-10)
(认 / 认真-01, degree, 结 / 结果-01)
(话 / 话-01, mod, 无 / 无关紧要)
(话 / 话-01, quant, 一 / 一些)

Decoded in 63,093 microseconds
Sentence: 有 一 天 他 告诉 我 说 ： “ 我 不 该 听信 她 的 话 ，

Spans:
Span 10-11:  不 => 不
Span 3-4:  他 => 他
Span 12-13:  听信 => 听信-01
Span 4-5:  告诉 => 告诉-01
Span 2-3:  天 => (temporal-quantity :unit 天)
Span 13-14:  她 => 她
Span 9-10:  我 => 我
Span 5-6:  我 => 我
Span 0-1:  有 => 有-06
Span 15-16:  话 => 话-01
Span 11-12:  该 => 该-01
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 12-13:  听信 => 听信-01
Oracle Span 4-5:  告诉 => 告诉-01
Oracle Span 13-14:  她 => 她
Oracle Span 5-6:  我 => 我
Oracle Span 15-16:  话 => 话
Oracle Span 11-12:  该 => 该-01

Incorrect span: 话 => 话-01
Extra span: 不 => 不
Extra span: 我 => 我
Extra span: 说 => 说-02
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 有 => 有-06
Missing span: 话 => 话
Dependencies:
1	有	_	VE	VE	_	0	root	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	他	_	PN	PN	_	5	nsubj	_	_
5	告诉	_	VV	VV	_	1	dep	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	说	_	VV	VV	_	5	ccomp	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	7	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	该	_	DT	DT	_	13	dep	_	_
13	听信	_	VV	VV	_	7	ccomp	_	_
14	她	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	话	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 告诉-01, arg0, x2 / 他)
(x0 / 告诉-01, arg1, x3 / 该-01)
(x3 / 该-01, arg0, x5 / 听信-01)
(x5 / 听信-01, arg0, x6 / 我)
(x5 / 听信-01, arg1, x7 / 话)
(x7 / 话, poss, x8 / 她)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),话,话-01,false), Span(13,14,List(1),她,她,false), Span(12,13,List(2),听信,听信-01,false), Span(11,12,List(3),该,该-01,false), Span(10,11,List(4),不,不,false), Span(9,10,List(5),我,我,false), Span(6,7,List(6),说,说-02,false), Span(5,6,List(7),我,我,false), Span(4,5,List(8),告诉,告诉-01,false), Span(3,4,List(9),他,他,false), Span(2,3,List(11, 10),天,(temporal-quantity :unit 天),false), Span(0,1,List(12),有,有-06,false)),Map(2 -> 听信-01, 5 -> 我, 12 -> 有-06, 8 -> 告诉-01, 7 -> 我, 1 -> 她, 4 -> 不, 11 -> 天, 6 -> 说-02, 0 -> 话-01, 9 -> 他, 3 -> 该-01, 10 -> temporal-quantity),Map(t -> temporal-quantity, 我 -> 我, 话 -> 话-01, 我2 -> 我, 他 -> 他, 不 -> 不, 告 -> 告诉-01, 天 -> 天, 说 -> 说-02, 听 -> 听信-01, 该 -> 该-01, 她 -> 她, 有 -> 有-06))),[Ljava.lang.String;@295cf707,Annotation([Ljava.lang.String;@1130520d,[Ljava.lang.String;@5f77d0f9,[Ljava.lang.String;@463fd068),Annotation([Ljava.lang.String;@895e367,[Ljava.lang.String;@1b266842,[Ledu.cmu.lti.nlp.amr.Dependency;@7a3793c7),Annotation([Ljava.lang.String;@42b3b079,[Ljava.lang.String;@651aed93,[Ljava.lang.String;@4dd6fd0a),Annotation([Ljava.lang.String;@bb9e6dc,[Ljava.lang.String;@5456afaa,[Ledu.cmu.lti.nlp.amr.Entity;@6692b6c6))
AMR:
(t / temporal-quantity, time, 有 / 有-06)
(t / temporal-quantity, unit, 天 / 天)
(不 / 不, poss, 我 / 我)
(听 / 听信-01, direction, 她 / 她)
(听 / 听信-01, extent, 该 / 该-01)
(告 / 告诉-01, direction, 他 / 他)
(告 / 告诉-01, time, 有 / 有-06)
(话 / 话-01, manner, 听 / 听信-01)
(该 / 该-01, time, 不 / 不)
(该 / 该-01, time, 说 / 说-02)
(说 / 说-02, ARG5, 告 / 告诉-01)
(说 / 说-02, poss, 我2 / 我)

Decoded in 45,308 microseconds
Sentence: 绝 不 该 听信 那些 花儿 的 话 ，

Spans:
Span 1-2:  不 => 不
Span 3-4:  听信 => 听信-01
Span 0-1:  绝 => 绝
Span 5-6:  花儿 => 花儿
Span 7-8:  话 => 话-01
Span 2-3:  该 => 该-01
Span 4-5:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  听信 => 听信-01
Oracle Span 0-1:  绝 => 绝
Oracle Span 5-6:  花儿 => 花儿
Oracle Span 7-8:  话 => 话
Oracle Span 2-3:  该 => 该-01
Oracle Span 4-5:  那些 => 那些

Incorrect span: 话 => 话-01
Extra span: 不 => 不
Missing span: 话 => 话
Dependencies:
1	绝	_	NN	NN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	该	_	DT	DT	_	4	dep	_	_
4	听信	_	VV	VV	_	0	root	_	_
5	那些	_	DT	DT	_	6	det	_	_
6	花儿	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	话	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 该-01, arg0, x4 / 听信-01)
(x0 / 该-01, manner, x2 / 绝)
(x4 / 听信-01, arg1, x5 / 话)
(x5 / 话, poss, x6 / 花儿)
(x6 / 花儿, mod, x7 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),话,话-01,false), Span(5,6,List(1),花儿,花儿,false), Span(4,5,List(2),那些,那些,false), Span(3,4,List(3),听信,听信-01,false), Span(2,3,List(4),该,该-01,false), Span(1,2,List(5),不,不,false), Span(0,1,List(6),绝,绝,false)),Map(2 -> 那些, 5 -> 不, 1 -> 花儿, 4 -> 该-01, 6 -> 绝, 0 -> 话-01, 3 -> 听信-01),Map(绝 -> 绝, 话 -> 话-01, 不 -> 不, 花 -> 花儿, 该 -> 该-01, 听 -> 听信-01, 那 -> 那些))),[Ljava.lang.String;@1cd629b3,Annotation([Ljava.lang.String;@589da3f3,[Ljava.lang.String;@39d76cb5,[Ljava.lang.String;@4a00d9cf),Annotation([Ljava.lang.String;@6736fa8d,[Ljava.lang.String;@52815fa3,[Ledu.cmu.lti.nlp.amr.Dependency;@50313382),Annotation([Ljava.lang.String;@1cb346ea,[Ljava.lang.String;@4c012563,[Ljava.lang.String;@14a50707),Annotation([Ljava.lang.String;@4d518b32,[Ljava.lang.String;@4bd31064,[Ledu.cmu.lti.nlp.amr.Entity;@e3c0e40))
AMR:
(听 / 听信-01, ARG4, 话 / 话-01)
(花 / 花儿, mod, 那 / 那些)
(话 / 话-01, poss, 花 / 花儿)
(该 / 该-01, ARG0, 听 / 听信-01)
(该 / 该-01, ARG1, 不 / 不)
(该 / 该-01, manner, 绝 / 绝)

Decoded in 17,145 microseconds
Sentence: 看看 花 ， 闻闻 它 就 得 了 。

Spans:
Span 4-5:  它 => 它
Span 5-6:  就 => 就-01
Span 6-7:  得 => 得-06
Span 0-1:  看看 => 看看-01
Span 1-2:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  花 => 花

Extra span: 得 => 得-06
Extra span: 就 => 就-01
Extra span: 它 => 它
Incorrect span: 花 => 花-01
Extra span: 看看 => 看看-01
Missing span: 花 => 花
Dependencies:
1	看看	_	VV	VV	_	0	root	_	_
2	花	_	NN	NN	_	1	dobj	_	_
3	,	_	PU	PU	_	1	punct	_	_
4	闻闻	_	NR	NR	_	7	nsubj	_	_
5	它	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	得	_	VV	VV	_	1	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),得,得-06,false), Span(5,6,List(1),就,就-01,false), Span(4,5,List(2),它,它,false), Span(1,2,List(3),花,花-01,false), Span(0,1,List(4),看看,看看-01,false)),Map(2 -> 它, 1 -> 就-01, 4 -> 看看-01, 0 -> 得-06, 3 -> 花-01),Map(就 -> 就-01, 得 -> 得-06, 它 -> 它, 花 -> 花-01, 看 -> 看看-01))),[Ljava.lang.String;@329dbdbf,Annotation([Ljava.lang.String;@7354b8c5,[Ljava.lang.String;@20d7d6fb,[Ljava.lang.String;@4ef782af),Annotation([Ljava.lang.String;@11d8ae8b,[Ljava.lang.String;@479cbee5,[Ledu.cmu.lti.nlp.amr.Dependency;@59e2d8e3),Annotation([Ljava.lang.String;@2b72cb8a,[Ljava.lang.String;@7f8a9499,[Ljava.lang.String;@5d43661b),Annotation([Ljava.lang.String;@12299890,[Ljava.lang.String;@2fba3fc4,[Ledu.cmu.lti.nlp.amr.Entity;@4bf48f6))
AMR:
(得 / 得-06, manner, 就 / 就-01)
(得 / 得-06, mode, 它 / 它)
(看 / 看看-01, ARG3, 它 / 它)
(看 / 看看-01, prep-within, 花 / 花-01)

Decoded in 9,940 microseconds
Sentence: 我 的 那 朵 花 使 我 的 星球 芳香 四溢 ，

Spans:
Span 5-6:  使 => 使-01
Span 6-7:  我 => 我
Span 0-1:  我 => 我
Span 8-9:  星球 => 星球
Span 4-5:  花 => 花-01
Span 2-3:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  星球 => 星球
Oracle Span 4-5:  花 => 花
Oracle Span 2-3:  那 => 那

Extra span: 我 => 我
Extra span: 使 => 使-01
Incorrect span: 花 => 花-01
Missing span: 花 => 花
Dependencies:
1	我	_	PN	PN	_	5	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	5	det	_	_
4	朵	_	M	M	_	3	clf	_	_
5	花	_	NN	NN	_	6	nsubj	_	_
6	使	_	VV	VV	_	0	root	_	_
7	我	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	6	ccomp	_	_
10	芳香	_	VV	VV	_	6	dep	_	_
11	四溢	_	CD	CD	_	10	range	_	_
12	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 星球, poss, x12 / 我)
(x13 / 花, mod, x14 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),星球,星球,false), Span(6,7,List(1),我,我,false), Span(5,6,List(2),使,使-01,false), Span(4,5,List(3),花,花-01,false), Span(2,3,List(4),那,那,false), Span(0,1,List(5),我,我,false)),Map(2 -> 使-01, 5 -> 我, 1 -> 我, 4 -> 那, 0 -> 星球, 3 -> 花-01),Map(星 -> 星球, 我 -> 我, 我2 -> 我, 花 -> 花-01, 那 -> 那, 使 -> 使-01))),[Ljava.lang.String;@420a85c4,Annotation([Ljava.lang.String;@1c39680d,[Ljava.lang.String;@62833051,[Ljava.lang.String;@1c852c0f),Annotation([Ljava.lang.String;@a37aefe,[Ljava.lang.String;@5d99c6b5,[Ledu.cmu.lti.nlp.amr.Dependency;@266374ef),Annotation([Ljava.lang.String;@13b3d178,[Ljava.lang.String;@24c4ddae,[Ljava.lang.String;@37fb0bed),Annotation([Ljava.lang.String;@a82c5f1,[Ljava.lang.String;@7b7fdc8,[Ledu.cmu.lti.nlp.amr.Entity;@51c693d))
AMR:
(使 / 使-01, ARG4, 我 / 我)
(使 / 使-01, name, 花 / 花-01)
(星 / 星球, poss, 我 / 我)
(星 / 星球, poss, 我2 / 我)
(花 / 花-01, ARG4, 那 / 那)

Decoded in 17,364 microseconds
Sentence: 可 我 不 会 享受 它 。

Spans:
Span 2-3:  不 => 不
Span 4-5:  享受 => 享受-01
Span 3-4:  会 => 会-03
Span 0-1:  可 => 可-01
Span 5-6:  它 => 它
Span 1-2:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  享受 => 享受-01
Oracle Span 3-4:  会 => 会-02
Oracle Span 5-6:  它 => 它
Oracle Span 1-2:  我 => 我

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 可 => 可-01
Missing span: 会 => 会-02
Dependencies:
1	可	_	VV	VV	_	5	mmod	_	_
2	我	_	PN	PN	_	5	dep	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	享受	_	VV	VV	_	0	root	_	_
6	它	_	PN	PN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 会-02, arg0, x4 / 享受-01)
(x4 / 享受-01, arg0, x5 / 我)
(x4 / 享受-01, arg1, x6 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),它,它,false), Span(4,5,List(1),享受,享受-01,false), Span(3,4,List(2),会,会-03,false), Span(2,3,List(3),不,不,false), Span(1,2,List(4),我,我,false), Span(0,1,List(5),可,可-01,false)),Map(2 -> 会-03, 5 -> 可-01, 1 -> 享受-01, 4 -> 我, 0 -> 它, 3 -> 不),Map(我 -> 我, 它 -> 它, 不 -> 不, 会 -> 会-03, 享 -> 享受-01, 可 -> 可-01))),[Ljava.lang.String;@6a57ae10,Annotation([Ljava.lang.String;@766653e6,[Ljava.lang.String;@4e07b95f,[Ljava.lang.String;@28b46423),Annotation([Ljava.lang.String;@7fc4780b,[Ljava.lang.String;@3b79fd76,[Ledu.cmu.lti.nlp.amr.Dependency;@48c76607),Annotation([Ljava.lang.String;@43599640,[Ljava.lang.String;@1f81aa00,[Ljava.lang.String;@6b6776cb),Annotation([Ljava.lang.String;@1863d2fe,[Ljava.lang.String;@1787bc24,[Ledu.cmu.lti.nlp.amr.Entity;@544d57e))
AMR:
(享 / 享受-01, location, 我 / 我)
(享 / 享受-01, purpose, 它 / 它)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, op, 享 / 享受-01)
(可 / 可-01, ARG0, 会 / 会-03)

Decoded in 13,141 microseconds
Sentence: 关于 老虎 爪子 的 事 ， 本 应该 使 我 产生 同情 ， 却 反而 使 我 恼火 … ”

Spans:
Span 4-5:  事 => 事
Span 10-11:  产生 => 产生-02
Span 15-16:  使 => 使-01
Span 8-9:  使 => 使-01
Span 11-12:  同情 => 同情-01
Span 7-8:  应该 => 应该-01
Span 17-18:  恼火 => 恼火-01
Span 16-17:  我 => 我
Span 9-10:  我 => 我
Span 6-7:  本 => 本
Span 2-3:  爪子 => 爪子
Span 1-2:  老虎 => 老虎

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  事 => 事
Oracle Span 10-11:  产生 => 产生-02
Oracle Span 11-12:  同情 => 同情-01
Oracle Span 7-8:  应该 => 应该-02
Oracle Span 17-18:  恼火 => 恼火-01
Oracle Span 9-10:  我 => 我
Oracle Span 6-7:  本 => 本
Oracle Span 2-3:  爪子 => 爪子
Oracle Span 1-2:  老虎 => 老虎

Extra span: 我 => 我
Extra span: 使 => 使-01
Extra span: 使 => 使-01
Incorrect span: 应该 => 应该-01
Missing span: 应该 => 应该-02
Dependencies:
1	关于	_	P	P	_	9	prep	_	_
2	老虎	_	NN	NN	_	3	nn	_	_
3	爪子	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	事	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	本	_	DT	DT	_	8	det	_	_
8	应该	_	NN	NN	_	9	nsubj	_	_
9	使	_	VV	VV	_	0	root	_	_
10	我	_	PN	PN	_	11	nsubj	_	_
11	产生	_	VV	VV	_	9	ccomp	_	_
12	同情	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	却	_	AD	AD	_	16	advmod	_	_
15	反而	_	AD	AD	_	16	advmod	_	_
16	使	_	VV	VV	_	11	conj	_	_
17	我	_	PN	PN	_	18	nsubj	_	_
18	恼火	_	VV	VV	_	16	ccomp	_	_
19	…	_	NN	NN	_	18	dobj	_	_
20	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x37 / 应该-02, arg0, x51 / 产生-02)
(x37 / 应该-02, manner, x38 / 本)
(x51 / 产生-02, arg1, x52 / 同情-01)
(x51 / 产生-02, cause, x58 / 事)
(x52 / 同情-01, arg0, x57 / 我)
(x58 / 事, topic, x59 / 爪子)
(x60 / 老虎, part, x59 / 爪子)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),恼火,恼火-01,false), Span(16,17,List(1),我,我,false), Span(15,16,List(2),使,使-01,false), Span(11,12,List(3),同情,同情-01,false), Span(10,11,List(4),产生,产生-02,false), Span(9,10,List(5),我,我,false), Span(8,9,List(6),使,使-01,false), Span(7,8,List(7),应该,应该-01,false), Span(6,7,List(8),本,本,false), Span(4,5,List(9),事,事,false), Span(2,3,List(10),爪子,爪子,false), Span(1,2,List(11),老虎,老虎,false)),Map(2 -> 使-01, 5 -> 我, 8 -> 本, 7 -> 应该-01, 1 -> 我, 11 -> 老虎, 4 -> 产生-02, 6 -> 使-01, 9 -> 事, 0 -> 恼火-01, 10 -> 爪子, 3 -> 同情-01),Map(本 -> 本, 产 -> 产生-02, 我 -> 我, 爪 -> 爪子, 使2 -> 使-01, 我2 -> 我, 同 -> 同情-01, 事 -> 事, 老 -> 老虎, 恼 -> 恼火-01, 使 -> 使-01, 应 -> 应该-01))),[Ljava.lang.String;@55c53a33,Annotation([Ljava.lang.String;@53b7f657,[Ljava.lang.String;@797b0699,[Ljava.lang.String;@5a37d3ed),Annotation([Ljava.lang.String;@26df6e3a,[Ljava.lang.String;@4a3631f8,[Ledu.cmu.lti.nlp.amr.Dependency;@6b58b9e9),Annotation([Ljava.lang.String;@f14a7d4,[Ljava.lang.String;@52e7a6b2,[Ljava.lang.String;@29a5f4e7),Annotation([Ljava.lang.String;@79c97cb,[Ljava.lang.String;@2d9caaeb,[Ledu.cmu.lti.nlp.amr.Entity;@42a15bdc))
AMR:
(事 / 事, topic, 爪 / 爪子)
(产 / 产生-02, beneficiary, 我2 / 我)
(使 / 使-01, century, 我 / 我)
(使 / 使-01, degree, 恼 / 恼火-01)
(使 / 使-01, time, 同 / 同情-01)
(使2 / 使-01, century, 产 / 产生-02)
(使2 / 使-01, topic, 应 / 应该-01)
(同 / 同情-01, time, 产 / 产生-02)
(应 / 应该-01, manner, 本 / 本)
(应 / 应该-01, subset, 事 / 事)
(老 / 老虎, part, 爪 / 爪子)

Decoded in 40,246 microseconds
Sentence: 他 还 告诉 我 说 ： “ 我 那时 什么 也 不 懂 ！

Spans:
Span 11-12:  不 => 不
Span 10-11:  也 => 也
Span 9-10:  什么 => 什么
Span 0-1:  他 => 他
Span 2-3:  告诉 => 告诉-01
Span 12-13:  懂 => 懂-01
Span 7-8:  我 => 我
Span 3-4:  我 => 我
Span 4-5:  说 => 说-02
Span 1-2:  还 => 还
Span 8-9:  那时 => 那时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  告诉 => 告诉-01
Oracle Span 12-13:  懂 => 懂-01
Oracle Span 3-4:  我 => 我
Oracle Span 1-2:  还 => 还
Oracle Span 8-9:  那时 => 那时

Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 什么 => 什么
Extra span: 我 => 我
Extra span: 说 => 说-02
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	告诉	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	说	_	VV	VV	_	3	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	13	punct	_	_
8	我	_	PN	PN	_	13	nsubj	_	_
9	那时	_	NT	NT	_	13	tmod	_	_
10	什么	_	PN	PN	_	13	nsubj	_	_
11	也	_	AD	AD	_	13	advmod	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	懂	_	VV	VV	_	5	ccomp	_	_
14	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 告诉-01, arg0, x3 / 他)
(x0 / 告诉-01, arg1, x5 / 懂-01)
(x0 / 告诉-01, arg2, x4 / 我)
(x0 / 告诉-01, manner, x2 / 还)
(x5 / 懂-01, time, x9 / 那时)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),懂,懂-01,false), Span(11,12,List(1),不,不,false), Span(10,11,List(2),也,也,false), Span(9,10,List(3),什么,什么,false), Span(8,9,List(4),那时,那时,false), Span(7,8,List(5),我,我,false), Span(4,5,List(6),说,说-02,false), Span(3,4,List(7),我,我,false), Span(2,3,List(8),告诉,告诉-01,false), Span(1,2,List(9),还,还,false), Span(0,1,List(10),他,他,false)),Map(2 -> 也, 5 -> 我, 8 -> 告诉-01, 7 -> 我, 1 -> 不, 4 -> 那时, 6 -> 说-02, 9 -> 还, 0 -> 懂-01, 10 -> 他, 3 -> 什么),Map(我 -> 我, 也 -> 也, 我2 -> 我, 他 -> 他, 告 -> 告诉-01, 不 -> 不, 还 -> 还, 说 -> 说-02, 懂 -> 懂-01, 那 -> 那时, 什 -> 什么))),[Ljava.lang.String;@44a59da3,Annotation([Ljava.lang.String;@27e47833,[Ljava.lang.String;@6f6745d6,[Ljava.lang.String;@27508c5d),Annotation([Ljava.lang.String;@4f704591,[Ljava.lang.String;@4b5189ac,[Ledu.cmu.lti.nlp.amr.Dependency;@1e4d3ce5),Annotation([Ljava.lang.String;@3ddc6915,[Ljava.lang.String;@704deff2,[Ljava.lang.String;@379614be),Annotation([Ljava.lang.String;@404bbcbd,[Ljava.lang.String;@1e81f160,[Ledu.cmu.lti.nlp.amr.Entity;@1acaf3d))
AMR:
(不 / 不, manner, 也 / 也)
(什 / 什么, time, 那 / 那时)
(告 / 告诉-01, manner, 还 / 还)
(告 / 告诉-01, prep-following, 他 / 他)
(告 / 告诉-01, prep-following, 说 / 说-02)
(懂 / 懂-01, time, 不 / 不)
(懂 / 懂-01, time, 那 / 那时)
(说 / 说-02, prep-following, 我2 / 我)
(说 / 说-02, time, 那 / 那时)
(那 / 那时, poss, 我 / 我)

Decoded in 32,082 microseconds
Sentence: 我 应该 根据 她 的 行为 ， 而 不 是 根据 她 的 话 来 判断 她 。

Spans:
Span 8-9:  不 => 不
Span 15-16:  判断 => 判断-01
Span 16-17:  她 => 她
Span 11-12:  她 => 她
Span 3-4:  她 => 她
Span 1-2:  应该 => 应该-01
Span 0-1:  我 => 我
Span 9-10:  是 => 是-04
Span 14-15:  来 => 来-06
Span 10-11:  根据 => 根据-01
Span 2-3:  根据 => 根据-01
Span 5-6:  行为 => 行为
Span 13-14:  话 => 话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  判断 => 判断-01
Oracle Span 3-4:  她 => 她
Oracle Span 1-2:  应该 => 应该-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  根据 => 根据-01
Oracle Span 10-11:  根据 => 根据
Oracle Span 5-6:  行为 => 行为
Oracle Span 13-14:  话 => 话

Extra span: 她 => 她
Extra span: 来 => 来-06
Incorrect span: 话 => 话-01
Extra span: 她 => 她
Incorrect span: 根据 => 根据-01
Extra span: 是 => 是-04
Extra span: 不 => 不
Missing span: 根据 => 根据
Missing span: 话 => 话
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	应该	_	VV	VV	_	0	root	_	_
3	根据	_	P	P	_	6	assmod	_	_
4	她	_	PN	PN	_	3	pobj	_	_
5	的	_	DEG	DEG	_	3	assm	_	_
6	行为	_	NN	NN	_	2	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	而	_	AD	AD	_	10	advmod	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	是	_	VC	VC	_	2	conj	_	_
11	根据	_	P	P	_	14	assmod	_	_
12	她	_	PN	PN	_	11	pobj	_	_
13	的	_	DEG	DEG	_	11	assm	_	_
14	话	_	NN	NN	_	10	attr	_	_
15	来	_	MSP	MSP	_	16	prtmod	_	_
16	判断	_	VV	VV	_	10	dep	_	_
17	她	_	PN	PN	_	16	dobj	_	_
18	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x31 / 判断-01, arg0, x32 / 我)
(x31 / 判断-01, arg1, x33 / 她)
(x31 / 判断-01, manner, x34 / 根据-01)
(x34 / 根据-01, arg1, x36 / 行为)
(x41 / 根据, arg1, x44 / 话)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),她,她,false), Span(15,16,List(1),判断,判断-01,false), Span(14,15,List(2),来,来-06,false), Span(13,14,List(3),话,话-01,false), Span(11,12,List(4),她,她,false), Span(10,11,List(5),根据,根据-01,false), Span(9,10,List(6),是,是-04,false), Span(8,9,List(7),不,不,false), Span(5,6,List(8),行为,行为,false), Span(3,4,List(9),她,她,false), Span(2,3,List(10),根据,根据-01,false), Span(1,2,List(11),应该,应该-01,false), Span(0,1,List(12),我,我,false)),Map(2 -> 来-06, 5 -> 根据-01, 12 -> 我, 8 -> 行为, 7 -> 不, 1 -> 判断-01, 4 -> 她, 11 -> 应该-01, 6 -> 是-04, 0 -> 她, 9 -> 她, 3 -> 话-01, 10 -> 根据-01),Map(根2 -> 根据-01, 来 -> 来-06, 她2 -> 她, 我 -> 我, 话 -> 话-01, 根 -> 根据-01, 判 -> 判断-01, 不 -> 不, 行 -> 行为, 她3 -> 她, 是 -> 是-04, 应 -> 应该-01, 她 -> 她))),[Ljava.lang.String;@6986852,Annotation([Ljava.lang.String;@1bab8268,[Ljava.lang.String;@a307a8c,[Ljava.lang.String;@6e01f9b0),Annotation([Ljava.lang.String;@2b9ed6da,[Ljava.lang.String;@6c61a903,[Ledu.cmu.lti.nlp.amr.Dependency;@658c5a19),Annotation([Ljava.lang.String;@421e361,[Ljava.lang.String;@59d4cd39,[Ljava.lang.String;@389c4eb1),Annotation([Ljava.lang.String;@3fc79729,[Ljava.lang.String;@34f6515b,[Ledu.cmu.lti.nlp.amr.Entity;@4b34fff9))
AMR:
(判 / 判断-01, degree, 我 / 我)
(判 / 判断-01, manner, 根2 / 根据-01)
(判 / 判断-01, purpose, 她 / 她)
(应 / 应该-01, ARG5, 根2 / 根据-01)
(是 / 是-04, ARG3, 不 / 不)
(来 / 来-06, ARG5, 话 / 话-01)
(来 / 来-06, prep-through, 判 / 判断-01)
(根 / 根据-01, ARG0, 话 / 话-01)
(根 / 根据-01, ARG1, 是 / 是-04)
(根 / 根据-01, ARG5, 她2 / 她)
(根2 / 根据-01, ARG0, 行 / 行为)
(根2 / 根据-01, ARG5, 她3 / 她)

Decoded in 46,560 microseconds
Sentence: 她 使 我 的 生活 芬芳 多彩 ，

Spans:
Span 1-2:  使 => 使-01
Span 6-7:  多彩 => 多彩-01
Span 0-1:  她 => 她
Span 2-3:  我 => 我
Span 4-5:  生活 => 生活-01
Span 5-6:  芬芳 => 芬芳

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  多彩 => 多彩-01
Oracle Span 0-1:  她 => 她
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  生活 => 生活
Oracle Span 5-6:  芬芳 => 芬芳

Incorrect span: 生活 => 生活-01
Extra span: 使 => 使-01
Missing span: 生活 => 生活
Dependencies:
1	她	_	PN	PN	_	2	nsubj	_	_
2	使	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	生活	_	NN	NN	_	2	dobj	_	_
6	芬芳	_	VA	VA	_	2	dep	_	_
7	多彩	_	VA	VA	_	2	conj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 生活, poss, x11 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),多彩,多彩-01,false), Span(5,6,List(1),芬芳,芬芳,false), Span(4,5,List(2),生活,生活-01,false), Span(2,3,List(3),我,我,false), Span(1,2,List(4),使,使-01,false), Span(0,1,List(5),她,她,false)),Map(2 -> 生活-01, 5 -> 她, 1 -> 芬芳, 4 -> 使-01, 0 -> 多彩-01, 3 -> 我),Map(生 -> 生活-01, 我 -> 我, 芬 -> 芬芳, 多 -> 多彩-01, 使 -> 使-01, 她 -> 她))),[Ljava.lang.String;@1187c9e8,Annotation([Ljava.lang.String;@127a7a2e,[Ljava.lang.String;@14008db3,[Ljava.lang.String;@78a773fd),Annotation([Ljava.lang.String;@57c03d88,[Ljava.lang.String;@16aa8654,[Ledu.cmu.lti.nlp.amr.Dependency;@6d7fc27),Annotation([Ljava.lang.String;@45ac5f9b,[Ljava.lang.String;@135606db,[Ljava.lang.String;@518caac3),Annotation([Ljava.lang.String;@68034211,[Ljava.lang.String;@4f74980d,[Ledu.cmu.lti.nlp.amr.Entity;@6c372fe6))
AMR:
(使 / 使-01, prep-for, 她 / 她)
(使 / 使-01, snt3, 生 / 生活-01)
(生 / 生活-01, ARG4, 多 / 多彩-01)
(生 / 生活-01, poss, 我 / 我)
(芬 / 芬芳, ARG4, 生 / 生活-01)

Decoded in 11,754 microseconds
Sentence: 我 真 不 该 离开 她 跑 出来 。

Spans:
Span 2-3:  不 => 不
Span 7-8:  出来 => 出来
Span 5-6:  她 => 她
Span 0-1:  我 => 我
Span 1-2:  真 => 真
Span 4-5:  离开 => 离开-01
Span 3-4:  该 => 该-01
Span 6-7:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出来 => 出来
Oracle Span 5-6:  她 => 她
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  真 => 真
Oracle Span 4-5:  离开 => 离开-01
Oracle Span 3-4:  该 => 该-01
Oracle Span 6-7:  跑 => 跑-01

Extra span: 不 => 不
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	真	_	AD	AD	_	5	advmod	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	该	_	VV	VV	_	5	mmod	_	_
5	离开	_	VV	VV	_	0	root	_	_
6	她	_	PN	PN	_	5	dobj	_	_
7	跑	_	VV	VV	_	5	dep	_	_
8	出来	_	VV	VV	_	7	comod	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 真, arg0, x15 / 该-01)
(x20 / 离开-01, arg0, x21 / 我)
(x20 / 离开-01, arg1, x22 / 她)
(x23 / 跑-01, direction, x25 / 出来)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),出来,出来,false), Span(6,7,List(1),跑,跑-01,false), Span(5,6,List(2),她,她,false), Span(4,5,List(3),离开,离开-01,false), Span(3,4,List(4),该,该-01,false), Span(2,3,List(5),不,不,false), Span(1,2,List(6),真,真,false), Span(0,1,List(7),我,我,false)),Map(2 -> 她, 5 -> 不, 7 -> 我, 1 -> 跑-01, 4 -> 该-01, 6 -> 真, 0 -> 出来, 3 -> 离开-01),Map(我 -> 我, 跑 -> 跑-01, 不 -> 不, 出 -> 出来, 离 -> 离开-01, 该 -> 该-01, 真 -> 真, 她 -> 她))),[Ljava.lang.String;@58594a11,Annotation([Ljava.lang.String;@2a3888c1,[Ljava.lang.String;@4167d97b,[Ljava.lang.String;@14fa86ae),Annotation([Ljava.lang.String;@6e15fe2,[Ljava.lang.String;@68f1b17f,[Ledu.cmu.lti.nlp.amr.Dependency;@1722011b),Annotation([Ljava.lang.String;@57ad2aa7,[Ljava.lang.String;@5b3f61ff,[Ljava.lang.String;@3e2059ae),Annotation([Ljava.lang.String;@398dada8,[Ljava.lang.String;@7cb502c,[Ledu.cmu.lti.nlp.amr.Entity;@275bf9b3))
AMR:
(真 / 真, manner, 该 / 该-01)
(离 / 离开-01, degree, 不 / 不)
(离 / 离开-01, prep-on-behalf, 跑 / 跑-01)
(离 / 离开-01, purpose, 她 / 她)
(离 / 离开-01, value, 我 / 我)
(该 / 该-01, manner, 不 / 不)
(跑 / 跑-01, direction, 出 / 出来)

Decoded in 19,120 microseconds
Sentence: 我 本 应该 猜出 在 她 那 令 人 爱怜 的 花招 后面 所 隐藏 的 温情 。

Spans:
Span 8-9:  人 => 人
Span 12-13:  后面 => 后面
Span 4-5:  在 => 在-01
Span 5-6:  她 => 她
Span 2-3:  应该 => 应该-01
Span 0-1:  我 => 我
Span 1-2:  本 => 本
Span 16-17:  温情 => 温情
Span 9-10:  爱怜 => 爱怜-01
Span 3-4:  猜出 => 猜出-01
Span 11-12:  花招 => 花招
Span 6-7:  那 => 那
Span 14-15:  隐藏 => 隐藏-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 5-6:  她 => 她
Oracle Span 2-3:  应该 => 应该-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  本 => 本
Oracle Span 16-17:  温情 => 温情
Oracle Span 9-10:  爱怜 => 爱怜-01
Oracle Span 3-4:  猜出 => 猜出-01
Oracle Span 11-12:  花招 => 花招
Oracle Span 6-7:  那 => 那
Oracle Span 14-15:  隐藏 => 隐藏-01

Extra span: 后面 => 后面
Extra span: 在 => 在-01
Incorrect span: 应该 => 应该-01
Missing span: 应该 => 应该-02
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	本	_	DT	DT	_	4	dep	_	_
3	应该	_	VV	VV	_	4	mmod	_	_
4	猜出	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	15	prep	_	_
6	她	_	PN	PN	_	8	nsubj	_	_
7	那	_	PN	PN	_	8	nsubj	_	_
8	令	_	VV	VV	_	13	rcmod	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	爱怜	_	VA	VA	_	8	dep	_	_
11	的	_	DEC	DEC	_	8	cpm	_	_
12	花招	_	NN	NN	_	13	nn	_	_
13	后面	_	NN	NN	_	5	pobj	_	_
14	所	_	MSP	MSP	_	15	prtmod	_	_
15	隐藏	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	温情	_	NN	NN	_	4	dobj	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 应该-02, arg0, x3 / 猜出-01)
(x0 / 应该-02, manner, x2 / 本)
(x13 / 隐藏-01, arg1, x12 / 温情)
(x13 / 隐藏-01, arg2, x14 / 花招)
(x14 / 花招, mod, x18 / 那)
(x14 / 花招, poss, x17 / 她)
(x15 / 爱怜-01, arg0, x16 / 人)
(x15 / 爱怜-01, arg1, x14 / 花招)
(x3 / 猜出-01, arg0, x4 / 我)
(x3 / 猜出-01, arg1, x12 / 温情)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),温情,温情,false), Span(14,15,List(1),隐藏,隐藏-01,false), Span(12,13,List(2),后面,后面,false), Span(11,12,List(3),花招,花招,false), Span(9,10,List(4),爱怜,爱怜-01,false), Span(8,9,List(5),人,人,false), Span(6,7,List(6),那,那,false), Span(5,6,List(7),她,她,false), Span(4,5,List(8),在,在-01,false), Span(3,4,List(9),猜出,猜出-01,false), Span(2,3,List(10),应该,应该-01,false), Span(1,2,List(11),本,本,false), Span(0,1,List(12),我,我,false)),Map(2 -> 后面, 5 -> 人, 12 -> 我, 8 -> 在-01, 7 -> 她, 1 -> 隐藏-01, 4 -> 爱怜-01, 11 -> 本, 6 -> 那, 0 -> 温情, 9 -> 猜出-01, 3 -> 花招, 10 -> 应该-01),Map(温 -> 温情, 爱 -> 爱怜-01, 在 -> 在-01, 本 -> 本, 我 -> 我, 猜 -> 猜出-01, 隐 -> 隐藏-01, 花 -> 花招, 后 -> 后面, 那 -> 那, 人 -> 人, 应 -> 应该-01, 她 -> 她))),[Ljava.lang.String;@1b8a29df,Annotation([Ljava.lang.String;@4fbe37eb,[Ljava.lang.String;@12a94400,[Ljava.lang.String;@6a47b187),Annotation([Ljava.lang.String;@2049a9c1,[Ljava.lang.String;@1ef6d34c,[Ledu.cmu.lti.nlp.amr.Dependency;@46271dd6),Annotation([Ljava.lang.String;@11bb571c,[Ljava.lang.String;@7c51f34b,[Ljava.lang.String;@5495333e),Annotation([Ljava.lang.String;@2a225dd7,[Ljava.lang.String;@61eaec38,[Ledu.cmu.lti.nlp.amr.Entity;@125290e5))
AMR:
(后 / 后面, mod, 爱 / 爱怜-01)
(在 / 在-01, ARG2, 猜 / 猜出-01)
(在 / 在-01, ARG5, 她 / 她)
(应 / 应该-01, manner, 本 / 本)
(应 / 应该-01, op, 猜 / 猜出-01)
(爱 / 爱怜-01, ARG3, 花 / 花招)
(爱 / 爱怜-01, ARG4, 人 / 人)
(猜 / 猜出-01, op, 我 / 我)
(花 / 花招, mod, 那 / 那)
(花 / 花招, poss, 她 / 她)
(隐 / 隐藏-01, ARG5, 后 / 后面)
(隐 / 隐藏-01, op, 温 / 温情)

Decoded in 49,028 microseconds
Sentence: 花 是 多么 自相矛盾 ！

Spans:
Span 2-3:  多么 => 多么
Span 1-2:  是 => 是-04
Span 3-4:  自相矛盾 => 自相矛盾-01
Span 0-1:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  多么 => 多么
Oracle Span 3-4:  自相矛盾 => 自相矛盾-01
Oracle Span 0-1:  花 => 花

Extra span: 是 => 是-04
Incorrect span: 花 => 花-01
Missing span: 花 => 花
Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	多么	_	NN	NN	_	4	nn	_	_
4	自相矛盾	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 自相矛盾-01, arg0, x3 / 花)
(x0 / 自相矛盾-01, degree, x2 / 多么)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),自相矛盾,自相矛盾-01,false), Span(2,3,List(1),多么,多么,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),花,花-01,false)),Map(2 -> 是-04, 1 -> 多么, 0 -> 自相矛盾-01, 3 -> 花-01),Map(自 -> 自相矛盾-01, 花 -> 花-01, 多 -> 多么, 是 -> 是-04))),[Ljava.lang.String;@6fa34d52,Annotation([Ljava.lang.String;@57576994,[Ljava.lang.String;@616ac46a,[Ljava.lang.String;@67b9b51a),Annotation([Ljava.lang.String;@1205bd62,[Ljava.lang.String;@7ef27d7f,[Ledu.cmu.lti.nlp.amr.Dependency;@490caf5f),Annotation([Ljava.lang.String;@6337c201,[Ljava.lang.String;@5c669da8,[Ljava.lang.String;@31920ade),Annotation([Ljava.lang.String;@1d483de4,[Ljava.lang.String;@4032d386,[Ledu.cmu.lti.nlp.amr.Entity;@28d18df5))
AMR:
(是 / 是-04, degree, 多 / 多么)
(是 / 是-04, manner, 花 / 花-01)
(自 / 自相矛盾-01, degree, 多 / 多么)

Decoded in 6,172 microseconds
Sentence: 我 当时 太 年青 ， 还 不 懂得 爱 她 。 ”

Spans:
Span 6-7:  不 => 不
Span 2-3:  太 => 太
Span 9-10:  她 => 她
Span 1-2:  当时 => 当时
Span 7-8:  懂得 => 懂得-01
Span 0-1:  我 => 我
Span 8-9:  爱 => (person :arg0-of 爱-01)
Span 5-6:  还 => 还

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: IX 。

Spans:
Span 0-1:  IX => IX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  IX => IX

Dependencies:
1	IX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),IX,IX,false)),Map(0 -> IX),Map(i -> IX))),[Ljava.lang.String;@55cf0d14,Annotation([Ljava.lang.String;@3b74ac8,[Ljava.lang.String;@27adc16e,[Ljava.lang.String;@b83a9be),Annotation([Ljava.lang.String;@2609b277,[Ljava.lang.String;@1fd14d74,[Ledu.cmu.lti.nlp.amr.Dependency;@563e4951),Annotation([Ljava.lang.String;@4066c471,[Ljava.lang.String;@2b175c00,[Ljava.lang.String;@3eb81efb),Annotation([Ljava.lang.String;@1ae8bcbc,[Ljava.lang.String;@6cdba6dc,[Ledu.cmu.lti.nlp.amr.Entity;@7d3d101b))
AMR:


Decoded in 1,528 microseconds
Sentence: 我 想 小 王子 大概 是 利用 一 群 候鸟 迁徙 的 机会 跑 出来 的 。

Spans:
Span 9-10:  候鸟 => 候鸟
Span 14-15:  出来 => 出来
Span 6-7:  利用 => 利用-01
Span 4-5:  大概 => 大概
Span 2-3:  小 => 小
Span 1-2:  想 => 想-05
Span 0-1:  我 => 我
Span 5-6:  是 => 是-04
Span 12-13:  机会 => 机会
Span 3-4:  王子 => 王子
Span 13-14:  跑 => 跑-01
Span 10-11:  迁徙 => 迁徙-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  候鸟 => 候鸟
Oracle Span 14-15:  出来 => 出来-01
Oracle Span 6-7:  利用 => 利用-01
Oracle Span 4-5:  大概 => 大概
Oracle Span 2-3:  小 => 小-01
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  机会 => 机会
Oracle Span 3-4:  王子 => 王子
Oracle Span 13-14:  跑 => 跑-01
Oracle Span 10-11:  迁徙 => 迁徙-01

Incorrect span: 出来 => 出来
Extra span: 是 => 是-04
Incorrect span: 小 => 小
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 出来 => 出来-01
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	dobj	_	_
5	大概	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	2	dep	_	_
7	利用	_	VV	VV	_	13	rcmod	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	群	_	M	M	_	11	clf	_	_
10	候鸟	_	NN	NN	_	11	nn	_	_
11	迁徙	_	NN	NN	_	7	dobj	_	_
12	的	_	DEC	DEC	_	7	cpm	_	_
13	机会	_	NN	NN	_	14	nsubj	_	_
14	跑	_	VV	VV	_	6	attr	_	_
15	出来	_	VV	VV	_	14	comod	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 利用-01)
(x11 / 跑-01, direction, x13 / 出来-01)
(x3 / 利用-01, arg0, x4 / 王子)
(x3 / 利用-01, arg1, x7 / 机会)
(x3 / 利用-01, manner, x6 / 大概)
(x3 / 利用-01, purpose, x11 / 跑-01)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 机会, mod, x8 / 迁徙-01)
(x8 / 迁徙-01, arg0, x9 / 候鸟)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),出来,出来,false), Span(13,14,List(1),跑,跑-01,false), Span(12,13,List(2),机会,机会,false), Span(10,11,List(3),迁徙,迁徙-01,false), Span(9,10,List(4),候鸟,候鸟,false), Span(6,7,List(5),利用,利用-01,false), Span(5,6,List(6),是,是-04,false), Span(4,5,List(7),大概,大概,false), Span(3,4,List(8),王子,王子,false), Span(2,3,List(9),小,小,false), Span(1,2,List(10),想,想-05,false), Span(0,1,List(11),我,我,false)),Map(2 -> 机会, 5 -> 利用-01, 8 -> 王子, 7 -> 大概, 1 -> 跑-01, 11 -> 我, 4 -> 候鸟, 6 -> 是-04, 9 -> 小, 0 -> 出来, 10 -> 想-05, 3 -> 迁徙-01),Map(我 -> 我, 跑 -> 跑-01, 王 -> 王子, 大 -> 大概, 迁 -> 迁徙-01, 候 -> 候鸟, 机 -> 机会, 小 -> 小, 出 -> 出来, 想 -> 想-05, 利 -> 利用-01, 是 -> 是-04))),[Ljava.lang.String;@30c8681,Annotation([Ljava.lang.String;@5cdec700,[Ljava.lang.String;@6d026701,[Ljava.lang.String;@78aa1f72),Annotation([Ljava.lang.String;@1f75a668,[Ljava.lang.String;@35399441,[Ledu.cmu.lti.nlp.amr.Dependency;@4b7dc788),Annotation([Ljava.lang.String;@6304101a,[Ljava.lang.String;@5170bcf4,[Ljava.lang.String;@2812b107),Annotation([Ljava.lang.String;@df6620a,[Ljava.lang.String;@4e31276e,[Ledu.cmu.lti.nlp.amr.Entity;@1a72a540))
AMR:
(利 / 利用-01, manner, 大 / 大概)
(利 / 利用-01, purpose, 跑 / 跑-01)
(利 / 利用-01, value, 机 / 机会)
(想 / 想-05, ARG6, 王 / 王子)
(想 / 想-05, value, 我 / 我)
(是 / 是-04, ARG4, 王 / 王子)
(是 / 是-04, manner, 大 / 大概)
(机 / 机会, mod, 迁 / 迁徙-01)
(王 / 王子, mod, 小 / 小)
(跑 / 跑-01, direction, 出 / 出来)
(迁 / 迁徙-01, location, 候 / 候鸟)

Decoded in 46,045 microseconds
Sentence: 在 他 出发 的 那 天 早上 ， 他 把 他 的 星球 收拾 得 整整齐齐 ，

Spans:
Span 10-11:  他 => 他
Span 8-9:  他 => 他
Span 1-2:  他 => 他
Span 2-3:  出发 => 出发-01
Span 0-1:  在 => 在-01
Span 5-6:  天 => (temporal-quantity :unit 天)
Span 14-15:  得 => 得-06
Span 13-14:  收拾 => 收拾-01
Span 15-16:  整整齐齐 => 整整齐齐
Span 6-7:  早上 => 早上
Span 12-13:  星球 => 星球
Span 4-5:  那 => 那

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  出发 => 出发-01
Oracle Span 13-14:  收拾 => 收拾-01
Oracle Span 15-16:  整整齐齐 => 整整齐齐
Oracle Span 6-7:  早上 => 早上
Oracle Span 12-13:  星球 => 星球

Extra span: 得 => 得-06
Extra span: 他 => 他
Extra span: 他 => 他
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 那 => 那
Extra span: 在 => 在-01
Dependencies:
1	在	_	P	P	_	3	prep	_	_
2	他	_	PN	PN	_	1	pobj	_	_
3	出发	_	VV	VV	_	6	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	那	_	DT	DT	_	6	det	_	_
6	天	_	NN	NN	_	16	nsubj	_	_
7	早上	_	NT	NT	_	16	tmod	_	_
8	,	_	PU	PU	_	16	punct	_	_
9	他	_	PN	PN	_	16	nsubj	_	_
10	把	_	BA	BA	_	16	ba	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	星球	_	NN	NN	_	16	nsubj	_	_
14	收拾	_	VV	VV	_	16	dep	_	_
15	得	_	DER	DER	_	16	dep	_	_
16	整整齐齐	_	VV	VV	_	0	root	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 收拾-01, arg0, x2 / 他)
(x0 / 收拾-01, arg1, x3 / 星球)
(x0 / 收拾-01, time, x6 / 出发-01)
(x5 / 整整齐齐, cause, x0 / 收拾-01)
(x6 / 出发-01, time, x8 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),整整齐齐,整整齐齐,false), Span(14,15,List(1),得,得-06,false), Span(13,14,List(2),收拾,收拾-01,false), Span(12,13,List(3),星球,星球,false), Span(10,11,List(4),他,他,false), Span(8,9,List(5),他,他,false), Span(6,7,List(6),早上,早上,false), Span(5,6,List(8, 7),天,(temporal-quantity :unit 天),false), Span(4,5,List(9),那,那,false), Span(2,3,List(10),出发,出发-01,false), Span(1,2,List(11),他,他,false), Span(0,1,List(12),在,在-01,false)),Map(2 -> 收拾-01, 5 -> 他, 12 -> 在-01, 8 -> 天, 7 -> temporal-quantity, 1 -> 得-06, 4 -> 他, 11 -> 他, 6 -> 早上, 0 -> 整整齐齐, 9 -> 那, 3 -> 星球, 10 -> 出发-01),Map(他2 -> 他, 收 -> 收拾-01, 星 -> 星球, 在 -> 在-01, 早 -> 早上, t -> temporal-quantity, 得 -> 得-06, 整 -> 整整齐齐, 他 -> 他, 出 -> 出发-01, 天 -> 天, 他3 -> 他, 那 -> 那))),[Ljava.lang.String;@27d5a580,Annotation([Ljava.lang.String;@198d6542,[Ljava.lang.String;@5e403b4a,[Ljava.lang.String;@5117dd67),Annotation([Ljava.lang.String;@5be49b60,[Ljava.lang.String;@2931522b,[Ledu.cmu.lti.nlp.amr.Dependency;@7674b62c),Annotation([Ljava.lang.String;@19e7a160,[Ljava.lang.String;@662706a7,[Ljava.lang.String;@45a4b042),Annotation([Ljava.lang.String;@16b2bb0c,[Ljava.lang.String;@327af41b,[Ledu.cmu.lti.nlp.amr.Entity;@6cb6decd))
AMR:
(t / temporal-quantity, ARG1, 早 / 早上)
(t / temporal-quantity, ARG2, 那 / 那)
(t / temporal-quantity, unit, 天 / 天)
(出 / 出发-01, time, 早 / 早上)
(在 / 在-01, ARG0, 他3 / 他)
(在 / 在-01, degree, 出 / 出发-01)
(得 / 得-06, ARG1, 整 / 整整齐齐)
(收 / 收拾-01, ARG1, 得 / 得-06)
(收 / 收拾-01, ARG2, 星 / 星球)
(收 / 收拾-01, time, 出 / 出发-01)
(早 / 早上, ARG4, 他2 / 他)
(星 / 星球, poss, 他 / 他)

Decoded in 54,805 microseconds
Sentence: 把 它 上头 的 活 火山 打扫 得 干干净净 。

Spans:
Span 2-3:  上头 => 上头
Span 1-2:  它 => 它
Span 8-9:  干干净净 => 干干净净
Span 7-8:  得 => 得-06
Span 6-7:  打扫 => 打扫-01
Span 4-5:  活 => 活-04
Span 5-6:  火山 => 火山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  上头 => 上头
Oracle Span 1-2:  它 => 它
Oracle Span 8-9:  干干净净 => 干干净净
Oracle Span 6-7:  打扫 => 打扫-01
Oracle Span 4-5:  活 => 活
Oracle Span 5-6:  火山 => 火山

Extra span: 得 => 得-06
Incorrect span: 活 => 活-04
Missing span: 活 => 活
Dependencies:
1	把	_	BA	BA	_	3	ba	_	_
2	它	_	PN	PN	_	3	nsubj	_	_
3	上头	_	VV	VV	_	7	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	活	_	JJ	JJ	_	6	amod	_	_
6	火山	_	NN	NN	_	7	nn	_	_
7	打扫	_	NN	NN	_	8	nsubj	_	_
8	得	_	VV	VV	_	0	root	_	_
9	干干净净	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 打扫-01, arg1, x2 / 火山)
(x2 / 火山, location, x4 / 上头)
(x2 / 火山, mod, x3 / 活)
(x4 / 上头, arg0, x5 / 它)
(x6 / 干干净净, cause, x0 / 打扫-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),干干净净,干干净净,false), Span(7,8,List(1),得,得-06,false), Span(6,7,List(2),打扫,打扫-01,false), Span(5,6,List(3),火山,火山,false), Span(4,5,List(4),活,活-04,false), Span(2,3,List(5),上头,上头,false), Span(1,2,List(6),它,它,false)),Map(2 -> 打扫-01, 5 -> 上头, 1 -> 得-06, 4 -> 活-04, 6 -> 它, 0 -> 干干净净, 3 -> 火山),Map(干 -> 干干净净, 打 -> 打扫-01, 得 -> 得-06, 它 -> 它, 活 -> 活-04, 上 -> 上头, 火 -> 火山))),[Ljava.lang.String;@c7045b9,Annotation([Ljava.lang.String;@f99f5e0,[Ljava.lang.String;@6aa61224,[Ljava.lang.String;@30bce90b),Annotation([Ljava.lang.String;@3e6f3f28,[Ljava.lang.String;@7e19ebf0,[Ledu.cmu.lti.nlp.amr.Dependency;@2474f125),Annotation([Ljava.lang.String;@7357a011,[Ljava.lang.String;@3406472c,[Ljava.lang.String;@5717c37),Annotation([Ljava.lang.String;@68f4865,[Ljava.lang.String;@4816278d,[Ledu.cmu.lti.nlp.amr.Entity;@4eaf3684))
AMR:
(上 / 上头, value, 它 / 它)
(得 / 得-06, ARG2, 火 / 火山)
(得 / 得-06, quant, 干 / 干干净净)
(打 / 打扫-01, location, 火 / 火山)
(火 / 火山, location, 上 / 上头)
(火 / 火山, mod, 活 / 活-04)

Decoded in 16,117 microseconds
Sentence: 他 有 两 个 活 火山 ， 早上 热 早点 很 方便 。

Spans:
Span 0-1:  他 => 他
Span 10-11:  很 => 很
Span 11-12:  方便 => 方便-03
Span 7-8:  早上 => 早上
Span 9-10:  早点 => 早点
Span 1-2:  有 => 有-06
Span 4-5:  活 => 活-04
Span 5-6:  火山 => 火山
Span 8-9:  热 => 热-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 10-11:  很 => 很
Oracle Span 11-12:  方便 => 方便-03
Oracle Span 7-8:  早上 => 早上
Oracle Span 9-10:  早点 => 早点
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  活 => 活
Oracle Span 5-6:  火山 => 火山
Oracle Span 8-9:  热 => 热-03

Incorrect span: 活 => 活-04
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 活 => 活
Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	两	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	活	_	JJ	JJ	_	6	amod	_	_
6	火山	_	NN	NN	_	2	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	早上	_	NT	NT	_	10	nn	_	_
9	热	_	JJ	JJ	_	10	amod	_	_
10	早点	_	NN	NN	_	12	nsubj	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	方便	_	VA	VA	_	2	conj	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 有-01, arg0, x3 / 他)
(x2 / 有-01, arg1, x4 / 火山)
(x4 / 火山, mod, x5 / 活)
(x7 / 方便-03, arg0, x9 / 热-03)
(x7 / 方便-03, degree, x8 / 很)
(x9 / 热-03, arg1, x11 / 早点)
(x9 / 热-03, time, x12 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),方便,方便-03,false), Span(10,11,List(1),很,很,false), Span(9,10,List(2),早点,早点,false), Span(8,9,List(3),热,热-03,false), Span(7,8,List(4),早上,早上,false), Span(5,6,List(5),火山,火山,false), Span(4,5,List(6),活,活-04,false), Span(1,2,List(7),有,有-06,false), Span(0,1,List(8),他,他,false)),Map(2 -> 早点, 5 -> 火山, 8 -> 他, 7 -> 有-06, 1 -> 很, 4 -> 早上, 6 -> 活-04, 0 -> 方便-03, 3 -> 热-03),Map(早 -> 早点, 热 -> 热-03, 方 -> 方便-03, 很 -> 很, 他 -> 他, 活 -> 活-04, 早2 -> 早上, 火 -> 火山, 有 -> 有-06))),[Ljava.lang.String;@40317ba2,Annotation([Ljava.lang.String;@3c01cfa1,[Ljava.lang.String;@45d2ade3,[Ljava.lang.String;@727eb8cb),Annotation([Ljava.lang.String;@39d9314d,[Ljava.lang.String;@b978d10,[Ledu.cmu.lti.nlp.amr.Dependency;@5b7a8434),Annotation([Ljava.lang.String;@5c45d770,[Ljava.lang.String;@2ce6c6ec,[Ljava.lang.String;@1bae316d),Annotation([Ljava.lang.String;@147a5d08,[Ljava.lang.String;@6676f6a0,[Ledu.cmu.lti.nlp.amr.Entity;@7cbd9d24))
AMR:
(方 / 方便-03, ARG0, 热 / 热-03)
(方 / 方便-03, degree, 很 / 很)
(有 / 有-06, ARG6, 他 / 他)
(有 / 有-06, degree, 方 / 方便-03)
(有 / 有-06, part, 火 / 火山)
(火 / 火山, mod, 活 / 活-04)
(热 / 热-03, ARG6, 早 / 早点)
(热 / 热-03, time, 早2 / 早上)

Decoded in 24,504 microseconds
Sentence: 他 还 有 一 座 死 火山 ， 他 也 把 它 打扫 干净 。

Spans:
Span 9-10:  也 => 也
Span 8-9:  他 => 他
Span 0-1:  他 => 他
Span 11-12:  它 => 它
Span 13-14:  干净 => 干净
Span 12-13:  打扫 => 打扫-01
Span 2-3:  有 => 有-06
Span 5-6:  死 => 死
Span 6-7:  火山 => 火山
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 13-14:  干净 => 干净
Oracle Span 12-13:  打扫 => 打扫-01
Oracle Span 2-3:  有 => 有-01
Oracle Span 5-6:  死 => 死
Oracle Span 6-7:  火山 => 火山
Oracle Span 1-2:  还 => 还

Extra span: 它 => 它
Extra span: 也 => 也
Extra span: 他 => 他
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	nsubj	_	_
6	死	_	VV	VV	_	3	dep	_	_
7	火山	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	他	_	PN	PN	_	14	nsubj	_	_
10	也	_	AD	AD	_	14	advmod	_	_
11	把	_	BA	BA	_	14	ba	_	_
12	它	_	PN	PN	_	14	nsubj	_	_
13	打扫	_	AD	AD	_	14	advmod	_	_
14	干净	_	VA	VA	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 有-01, arg0, x17 / 他)
(x15 / 有-01, arg1, x18 / 火山)
(x15 / 有-01, manner, x16 / 还)
(x18 / 火山, mod, x19 / 死)
(x24 / 干净, cause, x21 / 打扫-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),干净,干净,false), Span(12,13,List(1),打扫,打扫-01,false), Span(11,12,List(2),它,它,false), Span(9,10,List(3),也,也,false), Span(8,9,List(4),他,他,false), Span(6,7,List(5),火山,火山,false), Span(5,6,List(6),死,死,false), Span(2,3,List(7),有,有-06,false), Span(1,2,List(8),还,还,false), Span(0,1,List(9),他,他,false)),Map(2 -> 它, 5 -> 火山, 8 -> 还, 7 -> 有-06, 1 -> 打扫-01, 4 -> 他, 6 -> 死, 9 -> 他, 0 -> 干净, 3 -> 也),Map(他2 -> 他, 干 -> 干净, 也 -> 也, 打 -> 打扫-01, 死 -> 死, 它 -> 它, 他 -> 他, 还 -> 还, 火 -> 火山, 有 -> 有-06))),[Ljava.lang.String;@1672fe87,Annotation([Ljava.lang.String;@5026735c,[Ljava.lang.String;@1b45c0e,[Ljava.lang.String;@11f0a5a1),Annotation([Ljava.lang.String;@10f7f7de,[Ljava.lang.String;@73a8da0f,[Ledu.cmu.lti.nlp.amr.Dependency;@50dfbc58),Annotation([Ljava.lang.String;@4416d64f,[Ljava.lang.String;@6bf08014,[Ljava.lang.String;@5e3d57c7),Annotation([Ljava.lang.String;@732d0d24,[Ljava.lang.String;@1fb19a0,[Ledu.cmu.lti.nlp.amr.Entity;@6ee4d9ab))
AMR:
(它 / 它, ARG4, 也 / 也)
(它 / 它, location, 他 / 他)
(干 / 干净, manner, 打 / 打扫-01)
(打 / 打扫-01, manner, 也 / 也)
(有 / 有-06, ARG0, 火 / 火山)
(有 / 有-06, ARG6, 他2 / 他)
(有 / 有-06, age, 他 / 他)
(有 / 有-06, manner, 还 / 还)
(火 / 火山, mod, 死 / 死)

Decoded in 29,233 microseconds
Sentence: 他 想 ， 说不定 它 还 会 活动 呢 ！

Spans:
Span 0-1:  他 => 他
Span 6-7:  会 => 会-03
Span 4-5:  它 => 它
Span 1-2:  想 => 想-05
Span 7-8:  活动 => 活动-01
Span 3-4:  说不定 => 说不定-01
Span 5-6:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  会 => 会-02
Oracle Span 4-5:  它 => 它
Oracle Span 1-2:  想 => 想-01
Oracle Span 7-8:  活动 => 活动-01
Oracle Span 3-4:  说不定 => 说不定
Oracle Span 5-6:  还 => 还

Incorrect span: 会 => 会-03
Incorrect span: 说不定 => 说不定-01
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 会 => 会-02
Missing span: 说不定 => 说不定
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	说不定	_	NN	NN	_	7	nsubj	_	_
5	它	_	PN	PN	_	7	nsubj	_	_
6	还	_	AD	AD	_	7	advmod	_	_
7	会	_	VV	VV	_	2	ccomp	_	_
8	活动	_	NN	NN	_	7	dobj	_	_
9	呢	_	SP	SP	_	2	dep	_	_
10	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 他)
(x0 / 想-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 活动-01)
(x3 / 会-02, manner, x6 / 还)
(x3 / 会-02, manner, x7 / 说不定)
(x4 / 活动-01, arg0, x5 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),活动,活动-01,false), Span(6,7,List(1),会,会-03,false), Span(5,6,List(2),还,还,false), Span(4,5,List(3),它,它,false), Span(3,4,List(4),说不定,说不定-01,false), Span(1,2,List(5),想,想-05,false), Span(0,1,List(6),他,他,false)),Map(2 -> 还, 5 -> 想-05, 1 -> 会-03, 4 -> 说不定-01, 6 -> 他, 0 -> 活动-01, 3 -> 它),Map(它 -> 它, 他 -> 他, 活 -> 活动-01, 会 -> 会-03, 说 -> 说不定-01, 还 -> 还, 想 -> 想-05))),[Ljava.lang.String;@5a5338df,Annotation([Ljava.lang.String;@418c5a9c,[Ljava.lang.String;@18e36d14,[Ljava.lang.String;@5082d622),Annotation([Ljava.lang.String;@13d4992d,[Ljava.lang.String;@302f7971,[Ledu.cmu.lti.nlp.amr.Dependency;@332729ad),Annotation([Ljava.lang.String;@75d2da2d,[Ljava.lang.String;@4278284b,[Ljava.lang.String;@9573584),Annotation([Ljava.lang.String;@3370f42,[Ljava.lang.String;@6057aebb,[Ledu.cmu.lti.nlp.amr.Entity;@63eef88a))
AMR:
(会 / 会-03, manner, 还 / 还)
(想 / 想-05, manner, 他 / 他)
(想 / 想-05, manner, 说 / 说不定-01)
(活 / 活动-01, manner, 会 / 会-03)
(活 / 活动-01, time, 说 / 说不定-01)
(说 / 说不定-01, ARG3, 它 / 它)

Decoded in 17,596 microseconds
Sentence: 他 也 把 它 打扫 干净 。

Spans:
Span 1-2:  也 => 也
Span 0-1:  他 => 他
Span 3-4:  它 => 它
Span 5-6:  干净 => 干净
Span 4-5:  打扫 => 打扫-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  它 => 它
Oracle Span 5-6:  干净 => 干净-01
Oracle Span 4-5:  打扫 => 打扫-01

Incorrect span: 干净 => 干净
Missing span: 干净 => 干净-01
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	打扫	_	VV	VV	_	0	root	_	_
6	干净	_	VA	VA	_	5	ccomp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 打扫-01, arg0, x2 / 他)
(x0 / 打扫-01, arg1, x3 / 它)
(x0 / 打扫-01, manner, x5 / 也)
(x4 / 干净-01, cause, x0 / 打扫-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),干净,干净,false), Span(4,5,List(1),打扫,打扫-01,false), Span(3,4,List(2),它,它,false), Span(1,2,List(3),也,也,false), Span(0,1,List(4),他,他,false)),Map(2 -> 它, 1 -> 打扫-01, 4 -> 他, 0 -> 干净, 3 -> 也),Map(干 -> 干净, 也 -> 也, 打 -> 打扫-01, 它 -> 它, 他 -> 他))),[Ljava.lang.String;@53251a66,Annotation([Ljava.lang.String;@6853425f,[Ljava.lang.String;@352c1b98,[Ljava.lang.String;@21129f1f),Annotation([Ljava.lang.String;@5a9f4771,[Ljava.lang.String;@282cb7c7,[Ledu.cmu.lti.nlp.amr.Dependency;@7d898981),Annotation([Ljava.lang.String;@48d61b48,[Ljava.lang.String;@68d279ec,[Ljava.lang.String;@258d79be),Annotation([Ljava.lang.String;@14f9390f,[Ljava.lang.String;@6c0d7c83,[Ledu.cmu.lti.nlp.amr.Entity;@176b75f7))
AMR:
(干 / 干净, ARG6, 打 / 打扫-01)
(打 / 打扫-01, manner, 也 / 也)
(打 / 打扫-01, prep-from, 他 / 他)
(打 / 打扫-01, value, 它 / 它)

Decoded in 9,708 microseconds
Sentence: 打扫 干净 了 ， 它们 就 可以 慢慢 地 有 规律 地 燃烧 ， 而 不 会 突然 爆发 。

Spans:
Span 15-16:  不 => 不
Span 16-17:  会 => 会-03
Span 6-7:  可以 => 可以-02
Span 11-12:  地 => 地
Span 8-9:  地 => 地
Span 4-5:  它们 => 它们
Span 5-6:  就 => 就-01
Span 1-2:  干净 => 干净
Span 7-8:  慢慢 => 慢慢
Span 0-1:  打扫 => 打扫-01
Span 9-10:  有 => 有-06
Span 12-13:  燃烧 => 燃烧-01
Span 18-19:  爆发 => 爆发-01
Span 17-18:  突然 => 突然
Span 10-11:  规律 => 规律-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  会 => 会-02
Oracle Span 6-7:  可以 => 可以-01
Oracle Span 4-5:  它们 => 它们
Oracle Span 5-6:  就 => 就
Oracle Span 1-2:  干净 => 干净-01
Oracle Span 7-8:  慢慢 => 慢慢-01
Oracle Span 0-1:  打扫 => 打扫-01
Oracle Span 12-13:  燃烧 => 燃烧-01
Oracle Span 18-19:  爆发 => 爆发-01
Oracle Span 17-18:  突然 => 突然
Oracle Span 10-11:  规律 => 规律-01

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 地 => 地
Extra span: 有 => 有-06
Extra span: 地 => 地
Incorrect span: 慢慢 => 慢慢
Incorrect span: 可以 => 可以-02
Incorrect span: 就 => 就-01
Incorrect span: 干净 => 干净
Missing span: 干净 => 干净-01
Missing span: 可以 => 可以-01
Missing span: 慢慢 => 慢慢-01
Missing span: 就 => 就
Missing span: 会 => 会-02
Dependencies:
1	打扫	_	NN	NN	_	2	nsubj	_	_
2	干净	_	VA	VA	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	它们	_	PN	PN	_	13	nsubj	_	_
6	就	_	AD	AD	_	13	advmod	_	_
7	可以	_	VV	VV	_	13	mmod	_	_
8	慢慢	_	AD	AD	_	13	advmod	_	_
9	地	_	NN	NN	_	13	dep	_	_
10	有	_	VE	VE	_	13	dvpmod	_	_
11	规律	_	NN	NN	_	10	dobj	_	_
12	地	_	DEV	DEV	_	10	dvpm	_	_
13	燃烧	_	VV	VV	_	2	conj	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	而	_	CC	CC	_	13	cc	_	_
16	不	_	AD	AD	_	19	neg	_	_
17	会	_	VV	VV	_	19	mmod	_	_
18	突然	_	AD	AD	_	19	advmod	_	_
19	爆发	_	VV	VV	_	13	conj	_	_
20	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 爆发-01)
(x12 / 爆发-01, manner, x14 / 突然)
(x3 / 干净-01, cause, x2 / 打扫-01)
(x5 / 可以-01, arg0, x7 / 燃烧-01)
(x5 / 可以-01, manner, x6 / 就)
(x7 / 燃烧-01, arg0, x8 / 它们)
(x7 / 燃烧-01, manner, x10 / 规律-01)
(x7 / 燃烧-01, manner, x9 / 慢慢-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),爆发,爆发-01,false), Span(17,18,List(1),突然,突然,false), Span(16,17,List(2),会,会-03,false), Span(15,16,List(3),不,不,false), Span(12,13,List(4),燃烧,燃烧-01,false), Span(11,12,List(5),地,地,false), Span(10,11,List(6),规律,规律-01,false), Span(9,10,List(7),有,有-06,false), Span(8,9,List(8),地,地,false), Span(7,8,List(9),慢慢,慢慢,false), Span(6,7,List(10),可以,可以-02,false), Span(5,6,List(11),就,就-01,false), Span(4,5,List(12),它们,它们,false), Span(1,2,List(13),干净,干净,false), Span(0,1,List(14),打扫,打扫-01,false)),Map(2 -> 会-03, 5 -> 地, 12 -> 它们, 8 -> 地, 7 -> 有-06, 1 -> 突然, 4 -> 燃烧-01, 11 -> 就-01, 14 -> 打扫-01, 6 -> 规律-01, 0 -> 爆发-01, 9 -> 慢慢, 3 -> 不, 10 -> 可以-02, 13 -> 干净),Map(就 -> 就-01, 地2 -> 地, 干 -> 干净, 打 -> 打扫-01, 爆 -> 爆发-01, 它 -> 它们, 突 -> 突然, 地 -> 地, 会 -> 会-03, 不 -> 不, 慢 -> 慢慢, 燃 -> 燃烧-01, 可 -> 可以-02, 规 -> 规律-01, 有 -> 有-06))),[Ljava.lang.String;@5965be2d,Annotation([Ljava.lang.String;@409c54f,[Ljava.lang.String;@3e74829,[Ljava.lang.String;@4f6f416f),Annotation([Ljava.lang.String;@3b8f0a79,[Ljava.lang.String;@71e693fa,[Ledu.cmu.lti.nlp.amr.Dependency;@48793bef),Annotation([Ljava.lang.String;@7d286fb6,[Ljava.lang.String;@3eb77ea8,[Ljava.lang.String;@7b8b43c7),Annotation([Ljava.lang.String;@7aaca91a,[Ljava.lang.String;@44c73c26,[Ledu.cmu.lti.nlp.amr.Entity;@41005828))
AMR:
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, op, 爆 / 爆发-01)
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, prep-out, 燃 / 燃烧-01)
(地2 / 地, ARG5, 慢 / 慢慢)
(就 / 就-01, ARG4, 干 / 干净)
(干 / 干净, prep-into, 打 / 打扫-01)
(有 / 有-06, ARG1, 地2 / 地)
(有 / 有-06, year, 规 / 规律-01)
(燃 / 燃烧-01, ARG0, 不 / 不)
(燃 / 燃烧-01, location, 它 / 它们)
(燃 / 燃烧-01, manner, 规 / 规律-01)
(爆 / 爆发-01, manner, 突 / 突然)
(规 / 规律-01, ARG1, 地 / 地)

Decoded in 65,898 microseconds
Sentence: 火山 爆发 就 象 烟囱 里 的 火焰 一样 。

Spans:
Span 8-9:  一样 => 一样
Span 2-3:  就 => 就-01
Span 0-1:  火山 => 火山
Span 7-8:  火焰 => 火焰
Span 4-5:  烟囱 => 烟囱
Span 1-2:  爆发 => 爆发-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 0-1:  火山 => 火山
Oracle Span 7-8:  火焰 => 火焰
Oracle Span 4-5:  烟囱 => 烟囱
Oracle Span 1-2:  爆发 => 爆发-01

Extra span: 一样 => 一样
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	火山	_	NN	NN	_	2	nsubj	_	_
2	爆发	_	VV	VV	_	0	root	_	_
3	就	_	AD	AD	_	9	advmod	_	_
4	象	_	P	P	_	9	prep	_	_
5	烟囱	_	NN	NN	_	6	lobj	_	_
6	里	_	LC	LC	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	火焰	_	NN	NN	_	4	pobj	_	_
9	一样	_	VA	VA	_	2	dep	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 爆发-01, arg0, x3 / 火山)
(x4 / 火焰, location, x5 / 烟囱)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),一样,一样,false), Span(7,8,List(1),火焰,火焰,false), Span(4,5,List(2),烟囱,烟囱,false), Span(2,3,List(3),就,就-01,false), Span(1,2,List(4),爆发,爆发-01,false), Span(0,1,List(5),火山,火山,false)),Map(2 -> 烟囱, 5 -> 火山, 1 -> 火焰, 4 -> 爆发-01, 0 -> 一样, 3 -> 就-01),Map(就 -> 就-01, 爆 -> 爆发-01, 火2 -> 火山, 火 -> 火焰, 烟 -> 烟囱, 一 -> 一样))),[Ljava.lang.String;@60b4beb4,Annotation([Ljava.lang.String;@7fcf2fc1,[Ljava.lang.String;@2141a12,[Ljava.lang.String;@4196c360),Annotation([Ljava.lang.String;@41294f8,[Ljava.lang.String;@225129c,[Ledu.cmu.lti.nlp.amr.Dependency;@20435c40),Annotation([Ljava.lang.String;@573906eb,[Ljava.lang.String;@479ceda0,[Ljava.lang.String;@6d07a63d),Annotation([Ljava.lang.String;@571c5681,[Ljava.lang.String;@488d1cd7,[Ledu.cmu.lti.nlp.amr.Entity;@68dc098b))
AMR:
(一 / 一样, mod, 火 / 火焰)
(就 / 就-01, ARG4, 爆 / 爆发-01)
(火 / 火焰, location, 烟 / 烟囱)
(爆 / 爆发-01, manner, 一 / 一样)
(爆 / 爆发-01, prep-from, 火2 / 火山)

Decoded in 13,261 microseconds
Sentence: 当然 ， 在 我们 地球 上 我们 人 太 小 ， 不 能 打扫 火山 ，

Spans:
Span 11-12:  不 => 不
Span 7-8:  人 => 人
Span 2-3:  在 => 在-01
Span 4-5:  地球 => 地球
Span 8-9:  太 => 太
Span 9-10:  小 => 小
Span 0-1:  当然 => 当然
Span 6-7:  我们 => 我们
Span 3-4:  我们 => 我们
Span 13-14:  打扫 => 打扫-01
Span 14-15:  火山 => 火山
Span 12-13:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  人 => 人
Oracle Span 4-5:  地球 => 地球
Oracle Span 8-9:  太 => 太
Oracle Span 9-10:  小 => 小-01
Oracle Span 0-1:  当然 => 当然
Oracle Span 3-4:  我们 => 我们
Oracle Span 13-14:  打扫 => 打扫-01
Oracle Span 14-15:  火山 => 火山
Oracle Span 12-13:  能 => 能-01

Incorrect span: 能 => 能
Extra span: 不 => 不
Incorrect span: 小 => 小
Extra span: 我们 => 我们
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Missing span: 能 => 能-01
Dependencies:
1	当然	_	AD	AD	_	10	advmod	_	_
2	,	_	PU	PU	_	10	punct	_	_
3	在	_	P	P	_	10	prep	_	_
4	我们	_	PN	PN	_	5	nn	_	_
5	地球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	3	plmod	_	_
7	我们	_	PN	PN	_	8	nn	_	_
8	人	_	NN	NN	_	10	nsubj	_	_
9	太	_	AD	AD	_	10	advmod	_	_
10	小	_	VA	VA	_	0	root	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	不	_	AD	AD	_	14	neg	_	_
13	能	_	VV	VV	_	14	mmod	_	_
14	打扫	_	VV	VV	_	10	conj	_	_
15	火山	_	NN	NN	_	14	dobj	_	_
16	,	_	PU	PU	_	14	punct	_	_

Oracle:
(x10 / 打扫-01, arg1, x12 / 火山)
(x2 / 小-01, arg0, x3 / 人)
(x2 / 小-01, degree, x4 / 太)
(x2 / 小-01, manner, x7 / 当然)
(x3 / 人, location, x5 / 地球)
(x5 / 地球, poss, x6 / 我们)
(x8 / 能-01, arg0, x10 / 打扫-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),火山,火山,false), Span(13,14,List(1),打扫,打扫-01,false), Span(12,13,List(2),能,能,false), Span(11,12,List(3),不,不,false), Span(9,10,List(4),小,小,false), Span(8,9,List(5),太,太,false), Span(7,8,List(6),人,人,false), Span(6,7,List(7),我们,我们,false), Span(4,5,List(8),地球,地球,false), Span(3,4,List(9),我们,我们,false), Span(2,3,List(10),在,在-01,false), Span(0,1,List(11),当然,当然,false)),Map(2 -> 能, 5 -> 太, 8 -> 地球, 7 -> 我们, 1 -> 打扫-01, 11 -> 当然, 4 -> 小, 6 -> 人, 9 -> 我们, 0 -> 火山, 10 -> 在-01, 3 -> 不),Map(在 -> 在-01, 我 -> 我们, 能 -> 能, 打 -> 打扫-01, 我2 -> 我们, 太 -> 太, 地 -> 地球, 小 -> 小, 不 -> 不, 火 -> 火山, 人 -> 人, 当 -> 当然))),[Ljava.lang.String;@38ba6ce3,Annotation([Ljava.lang.String;@d278d2b,[Ljava.lang.String;@2d6c53fc,[Ljava.lang.String;@25f4878b),Annotation([Ljava.lang.String;@4e423aa2,[Ljava.lang.String;@7fbdb894,[Ledu.cmu.lti.nlp.amr.Dependency;@3081f72c),Annotation([Ljava.lang.String;@3148f668,[Ljava.lang.String;@6e005dc9,[Ljava.lang.String;@7ceb3185),Annotation([Ljava.lang.String;@436c81a3,[Ljava.lang.String;@3561c410,[Ledu.cmu.lti.nlp.amr.Entity;@59e32960))
AMR:
(不 / 不, ARG4, 小 / 小)
(人 / 人, location, 地 / 地球)
(人 / 人, poss, 我 / 我们)
(在 / 在-01, ARG4, 当 / 当然)
(地 / 地球, ARG4, 在 / 在-01)
(地 / 地球, poss, 我2 / 我们)
(小 / 小, degree, 太 / 太)
(小 / 小, snt3, 人 / 人)
(打 / 打扫-01, degree, 不 / 不)
(打 / 打扫-01, quant, 火 / 火山)
(能 / 能, manner, 不 / 不)

Decoded in 39,650 microseconds
Sentence: 所以 火山 给 我们 带来 很多 很多 麻烦 。

Spans:
Span 4-5:  带来 => 带来-02
Span 6-7:  很多 => 很多
Span 5-6:  很多 => 很多
Span 3-4:  我们 => 我们
Span 1-2:  火山 => 火山
Span 2-3:  给 => 给-02
Span 7-8:  麻烦 => 麻烦

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  带来 => 带来-01
Oracle Span 5-6:  很多 => 很多
Oracle Span 6-7:  很多 => 很多
Oracle Span 3-4:  我们 => 我们
Oracle Span 1-2:  火山 => 火山
Oracle Span 7-8:  麻烦 => 麻烦

Incorrect span: 带来 => 带来-02
Extra span: 给 => 给-02
Missing span: 带来 => 带来-01
Dependencies:
1	所以	_	AD	AD	_	5	advmod	_	_
2	火山	_	NN	NN	_	5	nsubj	_	_
3	给	_	P	P	_	5	prep	_	_
4	我们	_	PN	PN	_	3	pobj	_	_
5	带来	_	VV	VV	_	0	root	_	_
6	很多	_	CD	CD	_	8	nummod	_	_
7	很多	_	CD	CD	_	8	nummod	_	_
8	麻烦	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 带来-01, arg0, x3 / 火山)
(x2 / 带来-01, arg1, x4 / 麻烦)
(x2 / 带来-01, arg2, x7 / 我们)
(x4 / 麻烦, mod, x5 / 很多)
(x4 / 麻烦, mod, x6 / 很多)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),麻烦,麻烦,false), Span(6,7,List(1),很多,很多,false), Span(5,6,List(2),很多,很多,false), Span(4,5,List(3),带来,带来-02,false), Span(3,4,List(4),我们,我们,false), Span(2,3,List(5),给,给-02,false), Span(1,2,List(6),火山,火山,false)),Map(2 -> 很多, 5 -> 给-02, 1 -> 很多, 4 -> 我们, 6 -> 火山, 0 -> 麻烦, 3 -> 带来-02),Map(我 -> 我们, 很 -> 很多, 麻 -> 麻烦, 给 -> 给-02, 带 -> 带来-02, 火 -> 火山, 很2 -> 很多))),[Ljava.lang.String;@7c214cc0,Annotation([Ljava.lang.String;@5b67bb7e,[Ljava.lang.String;@609db546,[Ljava.lang.String;@20f5281c),Annotation([Ljava.lang.String;@56c4278e,[Ljava.lang.String;@301eda63,[Ledu.cmu.lti.nlp.amr.Dependency;@3d246ea3),Annotation([Ljava.lang.String;@341814d3,[Ljava.lang.String;@4397ad89,[Ljava.lang.String;@59cba5a),Annotation([Ljava.lang.String;@1bd39d3c,[Ljava.lang.String;@6f19ac19,[Ledu.cmu.lti.nlp.amr.Entity;@119cbf96))
AMR:
(带 / 带来-02, snt3, 麻 / 麻烦)
(给 / 给-02, ARG0, 我 / 我们)
(给 / 给-02, ARG4, 火 / 火山)
(给 / 给-02, degree, 带 / 带来-02)
(麻 / 麻烦, mod, 很 / 很多)
(麻 / 麻烦, mod, 很2 / 很多)

Decoded in 18,097 microseconds
Sentence: 小 王子 还 把 剩下 的 最后 几 颗 猴面包树 苗 全 拔 了 。 他 有点 忧伤 。

Spans:
Span 15-16:  他 => 他
Span 11-12:  全 => 全
Span 7-8:  几 => 几
Span 4-5:  剩下 => 剩下-01
Span 0-1:  小 => 小
Span 17-18:  忧伤 => 忧伤-01
Span 12-13:  拔 => 拔-01
Span 6-7:  最后 => 最后
Span 16-17:  有点 => 有点-01
Span 9-10:  猴面包树 => 猴面包树
Span 1-2:  王子 => 王子
Span 10-11:  苗 => 苗
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  全 => 全-01
Oracle Span 7-8:  几 => 几
Oracle Span 4-5:  剩下 => 剩下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 17-18:  忧伤 => 忧伤
Oracle Span 12-13:  拔 => 拔-01
Oracle Span 6-7:  最后 => 最后
Oracle Span 16-17:  有点 => 有点
Oracle Span 9-10:  猴面包树 => 猴面包树
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  苗 => 苗
Oracle Span 2-3:  还 => 还

Incorrect span: 忧伤 => 忧伤-01
Incorrect span: 有点 => 有点-01
Extra span: 他 => 他
Incorrect span: 全 => 全
Incorrect span: 小 => 小
Missing span: 全 => 全-01
Missing span: 小 => 小-01
Missing span: 忧伤 => 忧伤
Missing span: 有点 => 有点
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	13	nsubj	_	_
3	还	_	AD	AD	_	13	advmod	_	_
4	把	_	BA	BA	_	13	ba	_	_
5	剩下	_	VV	VV	_	11	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	最后	_	AD	AD	_	9	advmod	_	_
8	几	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	11	clf	_	_
10	猴面包树	_	NN	NN	_	11	nn	_	_
11	苗	_	NN	NN	_	13	nsubj	_	_
12	全	_	AD	AD	_	13	advmod	_	_
13	拔	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_
16	他	_	PN	PN	_	17	nsubj	_	_
17	有点	_	VV	VV	_	13	conj	_	_
18	忧伤	_	NN	NN	_	17	dobj	_	_
19	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 苗, mod, x12 / 猴面包树)
(x11 / 苗, mod, x14 / 最后)
(x11 / 苗, quant, x13 / 几)
(x15 / 剩下-01, arg1, x11 / 苗)
(x16 / 忧伤, degree, x17 / 有点)
(x2 / 拔-01, arg0, x3 / 王子)
(x2 / 拔-01, arg1, x11 / 苗)
(x2 / 拔-01, manner, x10 / 还)
(x2 / 拔-01, manner, x5 / 全-01)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),忧伤,忧伤-01,false), Span(16,17,List(1),有点,有点-01,false), Span(15,16,List(2),他,他,false), Span(12,13,List(3),拔,拔-01,false), Span(11,12,List(4),全,全,false), Span(10,11,List(5),苗,苗,false), Span(9,10,List(6),猴面包树,猴面包树,false), Span(7,8,List(7),几,几,false), Span(6,7,List(8),最后,最后,false), Span(4,5,List(9),剩下,剩下-01,false), Span(2,3,List(10),还,还,false), Span(1,2,List(11),王子,王子,false), Span(0,1,List(12),小,小,false)),Map(2 -> 他, 5 -> 苗, 12 -> 小, 8 -> 最后, 7 -> 几, 1 -> 有点-01, 4 -> 全, 11 -> 王子, 6 -> 猴面包树, 0 -> 忧伤-01, 9 -> 剩下-01, 3 -> 拔-01, 10 -> 还),Map(拔 -> 拔-01, 几 -> 几, 全 -> 全, 王 -> 王子, 猴 -> 猴面包树, 忧 -> 忧伤-01, 他 -> 他, 剩 -> 剩下-01, 小 -> 小, 还 -> 还, 苗 -> 苗, 最 -> 最后, 有 -> 有点-01))),[Ljava.lang.String;@71329995,Annotation([Ljava.lang.String;@768fc0f2,[Ljava.lang.String;@5454d35e,[Ljava.lang.String;@20c0a64d),Annotation([Ljava.lang.String;@455b6df1,[Ljava.lang.String;@4ddbbdf8,[Ledu.cmu.lti.nlp.amr.Dependency;@3f67593e),Annotation([Ljava.lang.String;@1ab06251,[Ljava.lang.String;@41ab013,[Ljava.lang.String;@14bee915),Annotation([Ljava.lang.String;@1115ec15,[Ljava.lang.String;@82ea68c,[Ledu.cmu.lti.nlp.amr.Entity;@59e505b2))
AMR:
(剩 / 剩下-01, value, 苗 / 苗)
(忧 / 忧伤-01, ARG3, 拔 / 拔-01)
(忧 / 忧伤-01, degree, 有 / 有点-01)
(拔 / 拔-01, manner, 全 / 全)
(拔 / 拔-01, manner, 还 / 还)
(拔 / 拔-01, mode, 苗 / 苗)
(拔 / 拔-01, prep-on-behalf, 王 / 王子)
(有 / 有点-01, prep-from, 他 / 他)
(王 / 王子, mod, 小 / 小)
(苗 / 苗, mod, 最 / 最后)
(苗 / 苗, mod, 猴 / 猴面包树)
(苗 / 苗, quant, 几 / 几)

Decoded in 50,823 microseconds
Sentence: 他 以为 他 再 也 不 会 回来 了 。

Spans:
Span 5-6:  不 => 不
Span 4-5:  也 => 也
Span 2-3:  他 => 他
Span 0-1:  他 => 他
Span 1-2:  以为 => 以为-02
Span 6-7:  会 => 会-03
Span 3-4:  再 => 再
Span 7-8:  回来 => 回来-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  以为 => 以为-01
Oracle Span 6-7:  会 => 会-02
Oracle Span 3-4:  再 => 再-01
Oracle Span 7-8:  回来 => 回来-01

Incorrect span: 回来 => 回来-02
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 再 => 再
Extra span: 他 => 他
Incorrect span: 以为 => 以为-02
Missing span: 以为 => 以为-01
Missing span: 会 => 会-02
Missing span: 再 => 再-01
Missing span: 回来 => 回来-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	以为	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	8	nsubj	_	_
4	再	_	AD	AD	_	8	advmod	_	_
5	也	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	会	_	VV	VV	_	8	mmod	_	_
8	回来	_	VV	VV	_	2	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 以为-01, arg0, x2 / 他)
(x0 / 以为-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 回来-01)
(x3 / 会-02, manner, x6 / 也)
(x3 / 会-02, manner, x7 / 再-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),回来,回来-02,false), Span(6,7,List(1),会,会-03,false), Span(5,6,List(2),不,不,false), Span(4,5,List(3),也,也,false), Span(3,4,List(4),再,再,false), Span(2,3,List(5),他,他,false), Span(1,2,List(6),以为,以为-02,false), Span(0,1,List(7),他,他,false)),Map(2 -> 不, 5 -> 他, 7 -> 他, 1 -> 会-03, 4 -> 再, 6 -> 以为-02, 0 -> 回来-02, 3 -> 也),Map(他2 -> 他, 也 -> 也, 以 -> 以为-02, 他 -> 他, 不 -> 不, 会 -> 会-03, 回 -> 回来-02, 再 -> 再))),[Ljava.lang.String;@3af0a9da,Annotation([Ljava.lang.String;@43b9fd5,[Ljava.lang.String;@79dc5318,[Ljava.lang.String;@8e50104),Annotation([Ljava.lang.String;@37e4d7bb,[Ljava.lang.String;@6f7923a5,[Ledu.cmu.lti.nlp.amr.Dependency;@74a6f9c1),Annotation([Ljava.lang.String;@54eb2b70,[Ljava.lang.String;@45a37759,[Ljava.lang.String;@63611043),Annotation([Ljava.lang.String;@20ca951f,[Ljava.lang.String;@2d778add,[Ledu.cmu.lti.nlp.amr.Entity;@73302995))
AMR:
(他 / 他, location, 不 / 不)
(以 / 以为-02, manner, 会 / 会-03)
(以 / 以为-02, prep-for, 他2 / 他)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 也 / 也)
(会 / 会-03, manner, 再 / 再)
(会 / 会-03, op, 回 / 回来-02)

Decoded in 19,947 microseconds
Sentence: 这 天 ， 这些 家常 活 使 他 感到 特别 亲切 。

Spans:
Span 10-11:  亲切 => 亲切
Span 7-8:  他 => 他
Span 6-7:  使 => 使-01
Span 1-2:  天 => (temporal-quantity :unit 天)
Span 4-5:  家常 => 家常
Span 8-9:  感到 => 感到-01
Span 5-6:  活 => 活-04
Span 9-10:  特别 => 特别
Span 0-1:  这 => 这
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  亲切 => 亲切
Oracle Span 7-8:  他 => 他
Oracle Span 4-5:  家常 => 家常
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 5-6:  活 => 活
Oracle Span 9-10:  特别 => 特别
Oracle Span 3-4:  这些 => 这些

Extra span: 使 => 使-01
Incorrect span: 活 => 活-04
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 这 => 这
Missing span: 活 => 活
Dependencies:
1	这	_	DT	DT	_	6	dep	_	_
2	天	_	M	M	_	1	clf	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	家常	_	NN	NN	_	6	nsubj	_	_
6	活	_	VV	VV	_	0	root	_	_
7	使	_	VV	VV	_	6	ccomp	_	_
8	他	_	PN	PN	_	7	dobj	_	_
9	感到	_	VV	VV	_	7	dep	_	_
10	特别	_	AD	AD	_	11	advmod	_	_
11	亲切	_	VA	VA	_	9	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 感到-01, arg0, x13 / 他)
(x11 / 感到-01, arg1, x14 / 亲切)
(x11 / 感到-01, cause, x16 / 活)
(x14 / 亲切, degree, x15 / 特别)
(x16 / 活, mod, x17 / 家常)
(x16 / 活, mod, x18 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),亲切,亲切,false), Span(9,10,List(1),特别,特别,false), Span(8,9,List(2),感到,感到-01,false), Span(7,8,List(3),他,他,false), Span(6,7,List(4),使,使-01,false), Span(5,6,List(5),活,活-04,false), Span(4,5,List(6),家常,家常,false), Span(3,4,List(7),这些,这些,false), Span(1,2,List(9, 8),天,(temporal-quantity :unit 天),false), Span(0,1,List(10),这,这,false)),Map(2 -> 感到-01, 5 -> 活-04, 8 -> temporal-quantity, 7 -> 这些, 1 -> 特别, 4 -> 使-01, 6 -> 家常, 9 -> 天, 0 -> 亲切, 10 -> 这, 3 -> 他),Map(t -> temporal-quantity, 感 -> 感到-01, 这 -> 这些, 家 -> 家常, 他 -> 他, 亲 -> 亲切, 活 -> 活-04, 天 -> 天, 这2 -> 这, 使 -> 使-01, 特 -> 特别))),[Ljava.lang.String;@1838ccb8,Annotation([Ljava.lang.String;@6c2ed0cd,[Ljava.lang.String;@7d9e8ef7,[Ljava.lang.String;@f107c50),Annotation([Ljava.lang.String;@51133c06,[Ljava.lang.String;@4b213651,[Ledu.cmu.lti.nlp.amr.Dependency;@4241e0f4),Annotation([Ljava.lang.String;@4ebff610,[Ljava.lang.String;@60410cd,[Ljava.lang.String;@44d52de2),Annotation([Ljava.lang.String;@95e33cc,[Ljava.lang.String;@38604b81,[Ledu.cmu.lti.nlp.amr.Entity;@1e44b638))
AMR:
(t / temporal-quantity, mod, 这2 / 这)
(t / temporal-quantity, unit, 天 / 天)
(亲 / 亲切, degree, 特 / 特别)
(使 / 使-01, prep-on-behalf, 感 / 感到-01)
(感 / 感到-01, ARG1, 亲 / 亲切)
(感 / 感到-01, ARG6, 活 / 活-04)
(感 / 感到-01, beneficiary, 他 / 他)
(活 / 活-04, manner, 这2 / 这)
(活 / 活-04, mod, 家 / 家常)
(活 / 活-04, mod, 这 / 这些)

Decoded in 39,051 microseconds
Sentence: 当 他 最后 一 次 浇花 时 ， 准备 把 她 放 在 玻璃 罩子 下面 。 他 发觉 自己 要 哭 出来 。

Spans:
Span 15-16:  下面 => 下面
Span 17-18:  他 => 他
Span 1-2:  他 => 他
Span 8-9:  准备 => 准备-02
Span 22-23:  出来 => 出来
Span 18-19:  发觉 => 发觉-01
Span 21-22:  哭 => 哭-01
Span 12-13:  在 => 在-01
Span 10-11:  她 => 她
Span 0-1:  当 => 当-04
Span 11-12:  放 => 放-03
Span 2-3:  最后 => 最后
Span 13-14:  玻璃 => 玻璃
Span 14-15:  罩子 => 罩子
Span 19-20:  自己 => 自己
Span 20-21:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  下面 => 下面
Oracle Span 1-2:  他 => 他
Oracle Span 8-9:  准备 => 准备-02
Oracle Span 18-19:  发觉 => 发觉-01
Oracle Span 21-22:  哭 => 哭-01
Oracle Span 10-11:  她 => 她
Oracle Span 11-12:  放 => 放-01
Oracle Span 2-3:  最后 => 最后
Oracle Span 13-14:  玻璃 => 玻璃
Oracle Span 14-15:  罩子 => 罩子
Oracle Span 19-20:  自己 => 自己
Oracle Span 20-21:  要 => 要-03

Extra span: 出来 => 出来
Incorrect span: 要 => 要-02
Extra span: 他 => 他
Extra span: 在 => 在-01
Incorrect span: 放 => 放-03
Extra span: 当 => 当-04
Missing span: 放 => 放-01
Missing span: 要 => 要-03
Dependencies:
1	当	_	P	P	_	9	prep	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	最后	_	AD	AD	_	5	advmod	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	次	_	M	M	_	6	dep	_	_
6	浇花	_	VV	VV	_	7	lccomp	_	_
7	时	_	LC	LC	_	1	plmod	_	_
8	,	_	PU	PU	_	9	punct	_	_
9	准备	_	VV	VV	_	0	root	_	_
10	把	_	BA	BA	_	12	ba	_	_
11	她	_	PN	PN	_	12	nsubj	_	_
12	放	_	VV	VV	_	9	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	玻璃	_	NN	NN	_	16	nn	_	_
15	罩子	_	NN	NN	_	16	nn	_	_
16	下面	_	NN	NN	_	13	pobj	_	_
17	。	_	PU	PU	_	9	punct	_	_
18	他	_	PN	PN	_	19	nsubj	_	_
19	发觉	_	VV	VV	_	9	dep	_	_
20	自己	_	PN	PN	_	23	nsubj	_	_
21	要	_	VV	VV	_	23	mmod	_	_
22	哭	_	AD	AD	_	23	advmod	_	_
23	出来	_	VV	VV	_	19	ccomp	_	_
24	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x17 / 发觉-01, arg1, x19 / 要-03)
(x19 / 要-03, arg0, x20 / 哭-01)
(x2 / 准备-02, arg0, x3 / 他)
(x2 / 准备-02, arg1, x4 / 放-01)
(x20 / 哭-01, arg0, x21 / 自己)
(x4 / 放-01, arg1, x6 / 她)
(x4 / 放-01, arg2, x7 / 下面)
(x7 / 下面, arg0, x9 / 罩子)
(x9 / 罩子, mod, x10 / 玻璃)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),出来,出来,false), Span(21,22,List(1),哭,哭-01,false), Span(20,21,List(2),要,要-02,false), Span(19,20,List(3),自己,自己,false), Span(18,19,List(4),发觉,发觉-01,false), Span(17,18,List(5),他,他,false), Span(15,16,List(6),下面,下面,false), Span(14,15,List(7),罩子,罩子,false), Span(13,14,List(8),玻璃,玻璃,false), Span(12,13,List(9),在,在-01,false), Span(11,12,List(10),放,放-03,false), Span(10,11,List(11),她,她,false), Span(8,9,List(12),准备,准备-02,false), Span(2,3,List(13),最后,最后,false), Span(1,2,List(14),他,他,false), Span(0,1,List(15),当,当-04,false)),Map(2 -> 要-02, 5 -> 他, 12 -> 准备-02, 15 -> 当-04, 8 -> 玻璃, 7 -> 罩子, 1 -> 哭-01, 4 -> 发觉-01, 11 -> 她, 14 -> 他, 6 -> 下面, 0 -> 出来, 9 -> 在-01, 3 -> 自己, 10 -> 放-03, 13 -> 最后),Map(哭 -> 哭-01, 准 -> 准备-02, 发 -> 发觉-01, 他2 -> 他, 自 -> 自己, 在 -> 在-01, 玻 -> 玻璃, 要 -> 要-02, 放 -> 放-03, 下 -> 下面, 他 -> 他, 罩 -> 罩子, 出 -> 出来, 当 -> 当-04, 最 -> 最后, 她 -> 她))),[Ljava.lang.String;@7393222f,Annotation([Ljava.lang.String;@babafc2,[Ljava.lang.String;@31add175,[Ljava.lang.String;@ae3540e),Annotation([Ljava.lang.String;@600b9d27,[Ljava.lang.String;@3688eb5b,[Ledu.cmu.lti.nlp.amr.Dependency;@69f1a286),Annotation([Ljava.lang.String;@7922d892,[Ljava.lang.String;@457c9034,[Ljava.lang.String;@345f69f3),Annotation([Ljava.lang.String;@50de186c,[Ljava.lang.String;@3f57bcad,[Ledu.cmu.lti.nlp.amr.Entity;@1e8b7643))
AMR:
(准 / 准备-02, accompanier, 放 / 放-03)
(准 / 准备-02, time, 他 / 他)
(出 / 出来, manner, 哭 / 哭-01)
(发 / 发觉-01, prep-from, 他 / 他)
(发 / 发觉-01, time, 要 / 要-02)
(哭 / 哭-01, ARG2, 自 / 自己)
(在 / 在-01, ARG3, 下 / 下面)
(在 / 在-01, ARG5, 放 / 放-03)
(在 / 在-01, ARG6, 她 / 她)
(当 / 当-04, ARG5, 他2 / 他)
(当 / 当-04, degree, 准 / 准备-02)
(最 / 最后, timezone, 当 / 当-04)
(玻 / 玻璃, ARG3, 在 / 在-01)
(罩 / 罩子, mod, 玻 / 玻璃)
(要 / 要-02, op, 出 / 出来)

Decoded in 78,285 microseconds
Sentence: “ 再见 了 。 ” 他 对 花儿 说道 。

Spans:
Span 5-6:  他 => 他
Span 1-2:  再见 => 再见
Span 6-7:  对 => 对-02
Span 7-8:  花儿 => 花儿
Span 8-9:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  再见 => 再见
Oracle Span 7-8:  花儿 => 花儿
Oracle Span 8-9:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 对 => 对-02
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	9	dep	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	9	nsubj	_	_
7	对	_	P	P	_	9	prep	_	_
8	花儿	_	NN	NN	_	7	pobj	_	_
9	说道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x0 / 说道-01, arg1, x3 / 再见)
(x0 / 说道-01, arg2, x4 / 花儿)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说道,说道,false), Span(7,8,List(1),花儿,花儿,false), Span(6,7,List(2),对,对-02,false), Span(5,6,List(3),他,他,false), Span(1,2,List(4),再见,再见,false)),Map(2 -> 对-02, 1 -> 花儿, 4 -> 再见, 0 -> 说道, 3 -> 他),Map(他 -> 他, 花 -> 花儿, 说 -> 说道, 对 -> 对-02, 再 -> 再见))),[Ljava.lang.String;@51549490,Annotation([Ljava.lang.String;@71e9ebae,[Ljava.lang.String;@73d983ea,[Ljava.lang.String;@36a5cabc),Annotation([Ljava.lang.String;@432038ec,[Ljava.lang.String;@7daa0fbd,[Ledu.cmu.lti.nlp.amr.Dependency;@42530531),Annotation([Ljava.lang.String;@5a3bc7ed,[Ljava.lang.String;@181e731e,[Ljava.lang.String;@35645047),Annotation([Ljava.lang.String;@6f44a157,[Ljava.lang.String;@6bc407fd,[Ledu.cmu.lti.nlp.amr.Entity;@291f18))
AMR:
(对 / 对-02, degree, 再 / 再见)
(对 / 对-02, location, 他 / 他)
(对 / 对-02, prep-through, 花 / 花儿)
(说 / 说道, mod, 花 / 花儿)

Decoded in 9,394 microseconds
Sentence: 可是 花儿 没有 回答 他 。

Spans:
Span 4-5:  他 => 他
Span 3-4:  回答 => 回答-01
Span 1-2:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 1-2:  花儿 => 花儿

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	花儿	_	NR	NR	_	4	nsubj	_	_
3	没有	_	VV	VV	_	4	neg	_	_
4	回答	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x4 / 花儿)
(x2 / 回答-01, arg3, x5 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),他,他,false), Span(3,4,List(1),回答,回答-01,false), Span(1,2,List(2),花儿,花儿,false)),Map(2 -> 花儿, 1 -> 回答-01, 0 -> 他),Map(他 -> 他, 花 -> 花儿, 回 -> 回答-01))),[Ljava.lang.String;@17d88132,Annotation([Ljava.lang.String;@5ddcc487,[Ljava.lang.String;@16eccb2e,[Ljava.lang.String;@5ef5c734),Annotation([Ljava.lang.String;@d771cc9,[Ljava.lang.String;@36b4091c,[Ledu.cmu.lti.nlp.amr.Dependency;@4671115f),Annotation([Ljava.lang.String;@36cda2c2,[Ljava.lang.String;@3697186,[Ljava.lang.String;@1583741e),Annotation([Ljava.lang.String;@5b367418,[Ljava.lang.String;@36060e,[Ledu.cmu.lti.nlp.amr.Entity;@481ba2cf))
AMR:
(回 / 回答-01, ARG3, 花 / 花儿)
(回 / 回答-01, purpose, 他 / 他)

Decoded in 5,370 microseconds
Sentence: “ 再见 了 。 ” 他 又 说 了 一 遍 。

Spans:
Span 5-6:  他 => 他
Span 1-2:  再见 => 再见
Span 6-7:  又 => 又
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  再见 => 再见
Oracle Span 6-7:  又 => 又
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	8	dep	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	遍	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x7 / 再见)
(x0 / 说-01, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),又,又,false), Span(5,6,List(2),他,他,false), Span(1,2,List(3),再见,再见,false)),Map(2 -> 他, 1 -> 又, 0 -> 说-02, 3 -> 再见),Map(又 -> 又, 他 -> 他, 说 -> 说-02, 再 -> 再见))),[Ljava.lang.String;@46b61c56,Annotation([Ljava.lang.String;@2e48362c,[Ljava.lang.String;@1efe439d,[Ljava.lang.String;@be68757),Annotation([Ljava.lang.String;@7d446ed1,[Ljava.lang.String;@12d2ce03,[Ledu.cmu.lti.nlp.amr.Dependency;@7e5c856f),Annotation([Ljava.lang.String;@413f69cc,[Ljava.lang.String;@1f53a5dc,[Ljava.lang.String;@1b75c2e3),Annotation([Ljava.lang.String;@1984b1f,[Ljava.lang.String;@3bd323e9,[Ledu.cmu.lti.nlp.amr.Entity;@39ac0c0a))
AMR:
(说 / 说-02, degree, 再 / 再见)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, unit, 他 / 他)

Decoded in 7,862 microseconds
Sentence: 花儿 咳嗽 了 一 阵 。

Spans:
Span 1-2:  咳嗽 => 咳嗽-01
Span 0-1:  花儿 => 花儿
Span 4-5:  阵 => 阵

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  咳嗽 => 咳嗽-01
Oracle Span 0-1:  花儿 => 花儿

Extra span: 阵 => 阵
Dependencies:
1	花儿	_	AD	AD	_	2	advmod	_	_
2	咳嗽	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	阵	_	NN	NN	_	2	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 咳嗽-01, arg0, x2 / 花儿)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),阵,阵,false), Span(1,2,List(1),咳嗽,咳嗽-01,false), Span(0,1,List(2),花儿,花儿,false)),Map(2 -> 花儿, 1 -> 咳嗽-01, 0 -> 阵),Map(咳 -> 咳嗽-01, 花 -> 花儿, 阵 -> 阵))),[Ljava.lang.String;@c7ba306,Annotation([Ljava.lang.String;@4ff8d125,[Ljava.lang.String;@6d167f58,[Ljava.lang.String;@3403e2ac),Annotation([Ljava.lang.String;@65b104b9,[Ljava.lang.String;@6c4980d3,[Ledu.cmu.lti.nlp.amr.Dependency;@327bcebd),Annotation([Ljava.lang.String;@19c65cdc,[Ljava.lang.String;@74bf1791,[Ljava.lang.String;@54504ecd),Annotation([Ljava.lang.String;@38b27cdc,[Ljava.lang.String;@1339e7aa,[Ledu.cmu.lti.nlp.amr.Entity;@1fb669c3))
AMR:
(咳 / 咳嗽-01, location, 花 / 花儿)
(咳 / 咳嗽-01, snt3, 阵 / 阵)

Decoded in 5,271 microseconds
Sentence: 但 并 不 是 由于 感冒 。

Spans:
Span 2-3:  不 => 不
Span 1-2:  并 => 并
Span 5-6:  感冒 => 感冒-01
Span 3-4:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  并 => 并
Oracle Span 5-6:  感冒 => 感冒-01

Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	并	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	由于	_	P	P	_	4	prep	_	_
6	感冒	_	VV	VV	_	5	pccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x3 / 感冒-01, manner, x5 / 并)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),感冒,感冒-01,false), Span(3,4,List(1),是,是-04,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),并,并,false)),Map(2 -> 不, 1 -> 是-04, 0 -> 感冒-01, 3 -> 并),Map(感 -> 感冒-01, 不 -> 不, 并 -> 并, 是 -> 是-04))),[Ljava.lang.String;@49c66ade,Annotation([Ljava.lang.String;@6239aba6,[Ljava.lang.String;@3e6104fc,[Ljava.lang.String;@12359a82),Annotation([Ljava.lang.String;@68df9280,[Ljava.lang.String;@479460a6,[Ledu.cmu.lti.nlp.amr.Dependency;@7164ca4c),Annotation([Ljava.lang.String;@4f3bbf68,[Ljava.lang.String;@5be46f9d,[Ljava.lang.String;@3f91b517),Annotation([Ljava.lang.String;@68702e03,[Ljava.lang.String;@7a220c9a,[Ledu.cmu.lti.nlp.amr.Entity;@2421cc4))
AMR:
(感 / 感冒-01, ARG4, 是 / 是-04)
(是 / 是-04, ARG3, 不 / 不)
(是 / 是-04, manner, 并 / 并)

Decoded in 7,002 microseconds
Sentence: 她 终于 对 他 说道 ： “ 我 方才 真 蠢 。

Spans:
Span 3-4:  他 => 他
Span 0-1:  她 => 她
Span 2-3:  对 => 对-02
Span 7-8:  我 => 我
Span 8-9:  方才 => 方才
Span 9-10:  真 => 真
Span 1-2:  终于 => 终于
Span 10-11:  蠢 => 蠢-01
Span 4-5:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 0-1:  她 => 她
Oracle Span 8-9:  方才 => 方才
Oracle Span 9-10:  真 => 真
Oracle Span 1-2:  终于 => 终于
Oracle Span 10-11:  蠢 => 蠢-01
Oracle Span 4-5:  说道 => 说道-01

Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 对 => 对-02
Missing span: 说道 => 说道-01
Dependencies:
1	她	_	PN	PN	_	5	nsubj	_	_
2	终于	_	AD	AD	_	5	advmod	_	_
3	对	_	P	P	_	5	prep	_	_
4	他	_	PN	PN	_	3	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	方才	_	AD	AD	_	11	advmod	_	_
10	真	_	AD	AD	_	11	advmod	_	_
11	蠢	_	VV	VV	_	5	ccomp	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 她)
(x0 / 说道-01, arg1, x4 / 蠢-01)
(x0 / 说道-01, arg2, x8 / 他)
(x0 / 说道-01, manner, x3 / 终于)
(x4 / 蠢-01, degree, x5 / 真)
(x4 / 蠢-01, time, x6 / 方才)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),蠢,蠢-01,false), Span(9,10,List(1),真,真,false), Span(8,9,List(2),方才,方才,false), Span(7,8,List(3),我,我,false), Span(4,5,List(4),说道,说道,false), Span(3,4,List(5),他,他,false), Span(2,3,List(6),对,对-02,false), Span(1,2,List(7),终于,终于,false), Span(0,1,List(8),她,她,false)),Map(2 -> 方才, 5 -> 他, 8 -> 她, 7 -> 终于, 1 -> 真, 4 -> 说道, 6 -> 对-02, 0 -> 蠢-01, 3 -> 我),Map(我 -> 我, 终 -> 终于, 方 -> 方才, 他 -> 他, 说 -> 说道, 蠢 -> 蠢-01, 对 -> 对-02, 她 -> 她, 真 -> 真))),[Ljava.lang.String;@30c93896,Annotation([Ljava.lang.String;@59a008ba,[Ljava.lang.String;@338c99c8,[Ljava.lang.String;@21ba0741),Annotation([Ljava.lang.String;@58ce9668,[Ljava.lang.String;@172b013,[Ledu.cmu.lti.nlp.amr.Dependency;@56673b2c),Annotation([Ljava.lang.String;@2796aeae,[Ljava.lang.String;@b4711e2,[Ljava.lang.String;@1fa1cab1),Annotation([Ljava.lang.String;@70f02c32,[Ljava.lang.String;@62010f5c,[Ledu.cmu.lti.nlp.amr.Entity;@51fadaff))
AMR:
(对 / 对-02, accompanier, 他 / 他)
(对 / 对-02, manner, 终 / 终于)
(方 / 方才, mod, 我 / 我)
(终 / 终于, domain, 她 / 她)
(蠢 / 蠢-01, degree, 真 / 真)
(蠢 / 蠢-01, degree, 说 / 说道)
(蠢 / 蠢-01, time, 方 / 方才)
(说 / 说道, mod, 对 / 对-02)

Decoded in 23,984 microseconds
Sentence: 请 你 原谅 我 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  原谅 => 原谅-01
Span 3-4:  我 => 我
Span 0-1:  请 => 请-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  原谅 => 原谅-01
Oracle Span 3-4:  我 => 我
Oracle Span 0-1:  请 => 请-01

Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	dobj	_	_
3	原谅	_	VV	VV	_	1	dep	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 请-01, arg2, x5 / 原谅-01)
(x5 / 原谅-01, arg0, x6 / 你)
(x5 / 原谅-01, arg1, x7 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),我,我,false), Span(2,3,List(1),原谅,原谅-01,false), Span(1,2,List(2),你,你,false), Span(0,1,List(3),请,请-02,false)),Map(2 -> 你, 1 -> 原谅-01, 0 -> 我, 3 -> 请-02),Map(我 -> 我, 你 -> 你, 请 -> 请-02, 原 -> 原谅-01))),[Ljava.lang.String;@401f7633,Annotation([Ljava.lang.String;@31ff43be,[Ljava.lang.String;@5b6ec132,[Ljava.lang.String;@5c44c582),Annotation([Ljava.lang.String;@67d18ed7,[Ljava.lang.String;@2c78d320,[Ledu.cmu.lti.nlp.amr.Dependency;@132e0cc),Annotation([Ljava.lang.String;@7b205dbd,[Ljava.lang.String;@106cc338,[Ljava.lang.String;@7a67e3c6),Annotation([Ljava.lang.String;@6cc558c6,[Ljava.lang.String;@15713d56,[Ledu.cmu.lti.nlp.amr.Entity;@63f259c3))
AMR:
(原 / 原谅-01, beneficiary, 你 / 你)
(原 / 原谅-01, value, 我 / 我)
(请 / 请-02, prep-on-behalf, 原 / 原谅-01)

Decoded in 6,541 microseconds
Sentence: 希望 你 能 幸福 。 ”

Spans:
Span 1-2:  你 => 你
Span 0-1:  希望 => 希望
Span 3-4:  幸福 => 幸福
Span 2-3:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 0-1:  希望 => 希望-01
Oracle Span 3-4:  幸福 => 幸福-01
Oracle Span 2-3:  能 => 能-01

Incorrect span: 幸福 => 幸福
Incorrect span: 能 => 能
Incorrect span: 希望 => 希望
Missing span: 希望 => 希望-01
Missing span: 能 => 能-01
Missing span: 幸福 => 幸福-01
Dependencies:
1	希望	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	ccomp	_	_
3	能	_	VV	VV	_	1	dep	_	_
4	幸福	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	1	punct	_	_
6	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x7 / 希望-01, arg1, x8 / 能-01)
(x8 / 能-01, arg0, x9 / 幸福-01)
(x9 / 幸福-01, arg0, x10 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),幸福,幸福,false), Span(2,3,List(1),能,能,false), Span(1,2,List(2),你,你,false), Span(0,1,List(3),希望,希望,false)),Map(2 -> 你, 1 -> 能, 0 -> 幸福, 3 -> 希望),Map(希 -> 希望, 能 -> 能, 幸 -> 幸福, 你 -> 你))),[Ljava.lang.String;@26ceffa8,Annotation([Ljava.lang.String;@600b90df,[Ljava.lang.String;@7c8c9a05,[Ljava.lang.String;@d41f816),Annotation([Ljava.lang.String;@5c2375a9,[Ljava.lang.String;@60129b9a,[Ledu.cmu.lti.nlp.amr.Dependency;@78d6692f),Annotation([Ljava.lang.String;@7a55af6b,[Ljava.lang.String;@3d9c13b5,[Ljava.lang.String;@492691d7),Annotation([Ljava.lang.String;@27216cd,[Ljava.lang.String;@558bdf1f,[Ledu.cmu.lti.nlp.amr.Entity;@8576fa0))
AMR:
(能 / 能, mod, 你 / 你)
(能 / 能, mod, 希 / 希望)
(能 / 能, quant, 幸 / 幸福)

Decoded in 6,283 microseconds
Sentence: 花儿 对 他 毫 不 抱怨 ， 他 感到 很 惊讶 。

Spans:
Span 4-5:  不 => 不
Span 7-8:  他 => 他
Span 2-3:  他 => 他
Span 1-2:  对 => 对-02
Span 9-10:  很 => 很
Span 10-11:  惊讶 => 惊讶-01
Span 8-9:  感到 => 感到-01
Span 5-6:  抱怨 => 抱怨-01
Span 3-4:  毫 => 毫
Span 0-1:  花儿 => 花儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  很 => 很
Oracle Span 10-11:  惊讶 => 惊讶-01
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 5-6:  抱怨 => 抱怨-01
Oracle Span 3-4:  毫 => 毫
Oracle Span 0-1:  花儿 => 花儿

Extra span: 他 => 他
Extra span: 不 => 不
Extra span: 对 => 对-02
Dependencies:
1	花儿	_	NR	NR	_	6	nsubj	_	_
2	对	_	P	P	_	6	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	毫	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	抱怨	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	感到	_	VV	VV	_	6	ccomp	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	惊讶	_	VA	VA	_	9	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	他	_	PN	PN	_	11	xsubj	_	_

Oracle:
(x2 / 抱怨-01, arg0, x5 / 花儿)
(x2 / 抱怨-01, arg2, x6 / 他)
(x2 / 抱怨-01, degree, x4 / 毫)
(x7 / 感到-01, arg1, x9 / 惊讶-01)
(x9 / 惊讶-01, degree, x10 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),惊讶,惊讶-01,false), Span(9,10,List(1),很,很,false), Span(8,9,List(2),感到,感到-01,false), Span(7,8,List(3),他,他,false), Span(5,6,List(4),抱怨,抱怨-01,false), Span(4,5,List(5),不,不,false), Span(3,4,List(6),毫,毫,false), Span(2,3,List(7),他,他,false), Span(1,2,List(8),对,对-02,false), Span(0,1,List(9),花儿,花儿,false)),Map(2 -> 感到-01, 5 -> 不, 8 -> 对-02, 7 -> 他, 1 -> 很, 4 -> 抱怨-01, 6 -> 毫, 9 -> 花儿, 0 -> 惊讶-01, 3 -> 他),Map(毫 -> 毫, 他2 -> 他, 感 -> 感到-01, 很 -> 很, 他 -> 他, 惊 -> 惊讶-01, 花 -> 花儿, 不 -> 不, 抱 -> 抱怨-01, 对 -> 对-02))),[Ljava.lang.String;@7582ff54,Annotation([Ljava.lang.String;@67545b57,[Ljava.lang.String;@6c2c1385,[Ljava.lang.String;@5f354bcf),Annotation([Ljava.lang.String;@3daf7722,[Ljava.lang.String;@78641d23,[Ledu.cmu.lti.nlp.amr.Dependency;@74589991),Annotation([Ljava.lang.String;@146dfe6,[Ljava.lang.String;@4716be8b,[Ljava.lang.String;@1fc32e4f),Annotation([Ljava.lang.String;@2f67b837,[Ljava.lang.String;@1869fbd2,[Ledu.cmu.lti.nlp.amr.Entity;@6af9fcb2))
AMR:
(对 / 对-02, day, 他2 / 他)
(对 / 对-02, prep-on-behalf, 不 / 不)
(对 / 对-02, weekday, 花 / 花儿)
(惊 / 惊讶-01, degree, 很 / 很)
(感 / 感到-01, season, 惊 / 惊讶-01)
(感 / 感到-01, source, 抱 / 抱怨-01)
(感 / 感到-01, weekday, 他 / 他)
(抱 / 抱怨-01, degree, 毫 / 毫)
(抱 / 抱怨-01, manner, 不 / 不)

Decoded in 26,039 microseconds
Sentence: 他 举 着 罩子 ， 不知所措 地 伫立 在 那里 。

Spans:
Span 5-6:  不知所措 => 不知所措-01
Span 1-2:  举 => 举-02
Span 0-1:  他 => 他
Span 7-8:  伫立 => 伫立-01
Span 8-9:  在 => 在-01
Span 6-7:  地 => 地
Span 3-4:  罩子 => 罩子
Span 9-10:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  不知所措 => 不知所措-01
Oracle Span 1-2:  举 => 举-02
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  伫立 => 伫立-01
Oracle Span 3-4:  罩子 => 罩子
Oracle Span 9-10:  那里 => 那里

Extra span: 在 => 在-01
Extra span: 地 => 地
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	举	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	罩子	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	不知所措	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	伫立	_	VV	VV	_	2	conj	_	_
9	在	_	P	P	_	8	prep	_	_
10	那里	_	PN	PN	_	9	pobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 举-02, arg0, x13 / 他)
(x12 / 举-02, arg1, x14 / 罩子)
(x15 / 伫立-01, arg1, x17 / 那里)
(x15 / 伫立-01, manner, x18 / 不知所措-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),那里,那里,false), Span(8,9,List(1),在,在-01,false), Span(7,8,List(2),伫立,伫立-01,false), Span(6,7,List(3),地,地,false), Span(5,6,List(4),不知所措,不知所措-01,false), Span(3,4,List(5),罩子,罩子,false), Span(1,2,List(6),举,举-02,false), Span(0,1,List(7),他,他,false)),Map(2 -> 伫立-01, 5 -> 罩子, 7 -> 他, 1 -> 在-01, 4 -> 不知所措-01, 6 -> 举-02, 0 -> 那里, 3 -> 地),Map(在 -> 在-01, 举 -> 举-02, 他 -> 他, 罩 -> 罩子, 地 -> 地, 不 -> 不知所措-01, 那 -> 那里, 伫 -> 伫立-01))),[Ljava.lang.String;@6cce16f4,Annotation([Ljava.lang.String;@7efaad5a,[Ljava.lang.String;@291a7e3c,[Ljava.lang.String;@ca30bc1),Annotation([Ljava.lang.String;@1046d517,[Ljava.lang.String;@3b7d3a38,[Ledu.cmu.lti.nlp.amr.Dependency;@416c58f5),Annotation([Ljava.lang.String;@5505ae1a,[Ljava.lang.String;@73cd37c0,[Ljava.lang.String;@21337f7b),Annotation([Ljava.lang.String;@2bb3058,[Ljava.lang.String;@7a362b6b,[Ledu.cmu.lti.nlp.amr.Entity;@60df60da))
AMR:
(不 / 不知所措-01, ARG1, 地 / 地)
(举 / 举-02, mod, 罩 / 罩子)
(举 / 举-02, prep-from, 他 / 他)
(伫 / 伫立-01, degree, 那 / 那里)
(伫 / 伫立-01, manner, 不 / 不知所措-01)
(在 / 在-01, ARG5, 伫 / 伫立-01)
(在 / 在-01, time, 举 / 举-02)

Decoded in 19,558 microseconds
Sentence: 他 不 明白 她 为什么 会 这样 温柔 恬静 。

Spans:
Span 1-2:  不 => 不
Span 0-1:  他 => 他
Span 5-6:  会 => 会-03
Span 3-4:  她 => 她
Span 8-9:  恬静 => 恬静-01
Span 2-3:  明白 => 明白-01
Span 7-8:  温柔 => 温柔-01
Span 6-7:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  她 => 她
Oracle Span 8-9:  恬静 => 恬静-01
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 7-8:  温柔 => 温柔-01
Oracle Span 6-7:  这样 => 这样

Incorrect span: 这样 => 这样-01
Extra span: 会 => 会-03
Extra span: 不 => 不
Missing span: 这样 => 这样
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	她	_	PN	PN	_	8	nsubj	_	_
5	为什么	_	AD	AD	_	8	advmod	_	_
6	会	_	VV	VV	_	8	mmod	_	_
7	这样	_	AD	AD	_	8	advmod	_	_
8	温柔	_	VV	VV	_	3	ccomp	_	_
9	恬静	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 明白-01, arg0, x3 / 他)
(x5 / 温柔-01, arg0, x7 / 她)
(x5 / 温柔-01, degree, x6 / 这样)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),恬静,恬静-01,false), Span(7,8,List(1),温柔,温柔-01,false), Span(6,7,List(2),这样,这样-01,false), Span(5,6,List(3),会,会-03,false), Span(3,4,List(4),她,她,false), Span(2,3,List(5),明白,明白-01,false), Span(1,2,List(6),不,不,false), Span(0,1,List(7),他,他,false)),Map(2 -> 这样-01, 5 -> 明白-01, 7 -> 他, 1 -> 温柔-01, 4 -> 她, 6 -> 不, 0 -> 恬静-01, 3 -> 会-03),Map(温 -> 温柔-01, 恬 -> 恬静-01, 这 -> 这样-01, 他 -> 他, 不 -> 不, 会 -> 会-03, 明 -> 明白-01, 她 -> 她))),[Ljava.lang.String;@5a2d131d,Annotation([Ljava.lang.String;@14fc1f0,[Ljava.lang.String;@4ae9cfc1,[Ljava.lang.String;@512baff6),Annotation([Ljava.lang.String;@632ceb35,[Ljava.lang.String;@1c93f6e1,[Ledu.cmu.lti.nlp.amr.Dependency;@1800a575),Annotation([Ljava.lang.String;@1458ed9c,[Ljava.lang.String;@10a9d961,[Ljava.lang.String;@130e116b),Annotation([Ljava.lang.String;@e383572,[Ljava.lang.String;@5ddf0d24,[Ledu.cmu.lti.nlp.amr.Entity;@363a52f))
AMR:
(不 / 不, ARG1, 他 / 他)
(会 / 会-03, op, 温 / 温柔-01)
(恬 / 恬静-01, degree, 温 / 温柔-01)
(明 / 明白-01, ARG3, 会 / 会-03)
(明 / 明白-01, manner, 不 / 不)
(温 / 温柔-01, degree, 这 / 这样-01)
(温 / 温柔-01, polite, 她 / 她)

Decoded in 18,718 microseconds
Sentence: “ 的确 ， 我 爱 你 。 ” 花儿 对 他 说道

Spans:
Span 10-11:  他 => 他
Span 5-6:  你 => 你
Span 9-10:  对 => 对-02
Span 3-4:  我 => 我
Span 4-5:  爱 => (person :arg0-of 爱-01)
Span 1-2:  的确 => 的确
Span 8-9:  花儿 => 花儿
Span 11-12:  说道 => 说道

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 但 由于 我 的 过错 ， 你 一点 也 没有 理会 。

Spans:
Span 8-9:  一点 => 一点
Span 9-10:  也 => 也
Span 7-8:  你 => 你
Span 3-4:  我 => 我
Span 11-12:  理会 => 理会-01
Span 5-6:  过错 => 过错

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一点 => 一点
Oracle Span 9-10:  也 => 也
Oracle Span 7-8:  你 => 你
Oracle Span 3-4:  我 => 我
Oracle Span 11-12:  理会 => 理会-01
Oracle Span 5-6:  过错 => 过错

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	但	_	AD	AD	_	11	advmod	_	_
3	由于	_	P	P	_	11	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	过错	_	NN	NN	_	3	pobj	_	_
7	,	_	PU	PU	_	11	punct	_	_
8	你	_	PN	PN	_	11	nsubj	_	_
9	一点	_	AD	AD	_	11	advmod	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	没有	_	VE	VE	_	0	root	_	_
12	理会	_	NN	NN	_	11	dobj	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x6 / 过错, poss, x7 / 我)
(x8 / 理会-01, arg0, x10 / 你)
(x8 / 理会-01, degree, x12 / 一点)
(x8 / 理会-01, manner, x11 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),理会,理会-01,false), Span(9,10,List(1),也,也,false), Span(8,9,List(2),一点,一点,false), Span(7,8,List(3),你,你,false), Span(5,6,List(4),过错,过错,false), Span(3,4,List(5),我,我,false)),Map(2 -> 一点, 5 -> 我, 1 -> 也, 4 -> 过错, 0 -> 理会-01, 3 -> 你),Map(理 -> 理会-01, 我 -> 我, 也 -> 也, 过 -> 过错, 你 -> 你, 一 -> 一点))),[Ljava.lang.String;@2fd953a6,Annotation([Ljava.lang.String;@a4add54,[Ljava.lang.String;@141e5bef,[Ljava.lang.String;@5f9be66c),Annotation([Ljava.lang.String;@3abada5a,[Ljava.lang.String;@66c61024,[Ledu.cmu.lti.nlp.amr.Dependency;@61fe30),Annotation([Ljava.lang.String;@c9d0d6,[Ljava.lang.String;@6ccdb29f,[Ljava.lang.String;@3adcc812),Annotation([Ljava.lang.String;@35432107,[Ljava.lang.String;@7b420819,[Ledu.cmu.lti.nlp.amr.Entity;@7a1a14a4))
AMR:
(理 / 理会-01, degree, 一 / 一点)
(理 / 理会-01, location, 过 / 过错)
(理 / 理会-01, manner, 也 / 也)
(过 / 过错, poss, 你 / 你)
(过 / 过错, poss, 我 / 我)

Decoded in 12,618 microseconds
Sentence: 这 丝毫 不 重要 。

Spans:
Span 2-3:  不 => 不
Span 1-2:  丝毫 => 丝毫
Span 0-1:  这 => 这
Span 3-4:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  丝毫 => 丝毫
Oracle Span 0-1:  这 => 这
Oracle Span 3-4:  重要 => 重要-01

Extra span: 不 => 不
Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	丝毫	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	重要	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 重要-01, arg0, x3 / 这)
(x0 / 重要-01, degree, x4 / 丝毫)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),重要,重要-01,false), Span(2,3,List(1),不,不,false), Span(1,2,List(2),丝毫,丝毫,false), Span(0,1,List(3),这,这,false)),Map(2 -> 丝毫, 1 -> 不, 0 -> 重要-01, 3 -> 这),Map(重 -> 重要-01, 这 -> 这, 丝 -> 丝毫, 不 -> 不))),[Ljava.lang.String;@265adfad,Annotation([Ljava.lang.String;@a3d9978,[Ljava.lang.String;@61544ae6,[Ljava.lang.String;@4b41dd5c),Annotation([Ljava.lang.String;@3b96c42e,[Ljava.lang.String;@5d066c7d,[Ledu.cmu.lti.nlp.amr.Dependency;@1e461e41),Annotation([Ljava.lang.String;@5ba88be8,[Ljava.lang.String;@56928307,[Ljava.lang.String;@3899782c),Annotation([Ljava.lang.String;@1603cd68,[Ljava.lang.String;@9ebe38b,[Ledu.cmu.lti.nlp.amr.Entity;@4b23c30a))
AMR:
(重 / 重要-01, ARG6, 不 / 不)
(重 / 重要-01, degree, 丝 / 丝毫)
(重 / 重要-01, direction, 这 / 这)

Decoded in 6,658 microseconds
Sentence: 不过 ， 你 也 和 我 一样 的 蠢 。

Spans:
Span 6-7:  一样 => 一样
Span 0-1:  不过 => 不过
Span 3-4:  也 => 也
Span 2-3:  你 => 你
Span 5-6:  我 => 我
Span 8-9:  蠢 => 蠢-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一样 => 一样
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 8-9:  蠢 => 蠢-01

Extra span: 也 => 也
Extra span: 不过 => 不过
Dependencies:
1	不过	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	你	_	PN	PN	_	7	nsubj	_	_
4	也	_	AD	AD	_	7	advmod	_	_
5	和	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	一样	_	VA	VA	_	9	nsubj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	蠢	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x3 / 蠢-01, arg0, x7 / 你)
(x3 / 蠢-01, degree, x9 / 一样)
(x7 / 你, compared-to, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),蠢,蠢-01,false), Span(6,7,List(1),一样,一样,false), Span(5,6,List(2),我,我,false), Span(3,4,List(3),也,也,false), Span(2,3,List(4),你,你,false), Span(0,1,List(5),不过,不过,false)),Map(2 -> 我, 5 -> 不过, 1 -> 一样, 4 -> 你, 0 -> 蠢-01, 3 -> 也),Map(也 -> 也, 我 -> 我, 你 -> 你, 不 -> 不过, 蠢 -> 蠢-01, 一 -> 一样))),[Ljava.lang.String;@38089a5a,Annotation([Ljava.lang.String;@30e868be,[Ljava.lang.String;@66c92293,[Ljava.lang.String;@332796d3),Annotation([Ljava.lang.String;@4f0100a7,[Ljava.lang.String;@3cdf2c61,[Ledu.cmu.lti.nlp.amr.Dependency;@13ad5cd3),Annotation([Ljava.lang.String;@1c33c17b,[Ljava.lang.String;@5bf0fe62,[Ljava.lang.String;@1e097d59),Annotation([Ljava.lang.String;@673be18f,[Ljava.lang.String;@6581dc0a,[Ledu.cmu.lti.nlp.amr.Entity;@39de3d36))
AMR:
(一 / 一样, manner, 也 / 也)
(你 / 你, compared-to, 我 / 我)
(蠢 / 蠢-01, ARG3, 你 / 你)
(蠢 / 蠢-01, degree, 一 / 一样)
(蠢 / 蠢-01, manner, 不 / 不过)

Decoded in 12,796 microseconds
Sentence: 希望 你 今后 能 幸福 。 把 罩子 放 在 一边 吧 ，

Spans:
Span 10-11:  一边 => 一边
Span 2-3:  今后 => 今后
Span 1-2:  你 => 你
Span 9-10:  在 => 在-01
Span 0-1:  希望 => 希望
Span 4-5:  幸福 => 幸福
Span 8-9:  放 => 放-03
Span 7-8:  罩子 => 罩子
Span 3-4:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  一边 => 一边
Oracle Span 2-3:  今后 => 今后
Oracle Span 1-2:  你 => 你
Oracle Span 0-1:  希望 => 希望-01
Oracle Span 4-5:  幸福 => 幸福-01
Oracle Span 8-9:  放 => 放-01
Oracle Span 7-8:  罩子 => 罩子
Oracle Span 3-4:  能 => 能-01

Extra span: 在 => 在-01
Incorrect span: 放 => 放-03
Incorrect span: 幸福 => 幸福
Incorrect span: 能 => 能
Incorrect span: 希望 => 希望
Missing span: 希望 => 希望-01
Missing span: 能 => 能-01
Missing span: 幸福 => 幸福-01
Missing span: 放 => 放-01
Dependencies:
1	希望	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	今后	_	NT	NT	_	4	tmod	_	_
4	能	_	VV	VV	_	1	ccomp	_	_
5	幸福	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	把	_	BA	BA	_	9	ba	_	_
8	罩子	_	NN	NN	_	9	nsubj	_	_
9	放	_	VV	VV	_	1	dep	_	_
10	在	_	VV	VV	_	9	dobj	_	_
11	一边	_	CD	CD	_	10	range	_	_
12	吧	_	SP	SP	_	10	dep	_	_
13	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x2 / 希望-01, arg1, x3 / 能-01)
(x3 / 能-01, arg0, x4 / 幸福-01)
(x4 / 幸福-01, arg0, x5 / 你)
(x4 / 幸福-01, duration, x6 / 今后)
(x7 / 放-01, arg1, x8 / 罩子)
(x7 / 放-01, arg2, x9 / 一边)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),一边,一边,false), Span(9,10,List(1),在,在-01,false), Span(8,9,List(2),放,放-03,false), Span(7,8,List(3),罩子,罩子,false), Span(4,5,List(4),幸福,幸福,false), Span(3,4,List(5),能,能,false), Span(2,3,List(6),今后,今后,false), Span(1,2,List(7),你,你,false), Span(0,1,List(8),希望,希望,false)),Map(2 -> 放-03, 5 -> 能, 8 -> 希望, 7 -> 你, 1 -> 在-01, 4 -> 幸福, 6 -> 今后, 0 -> 一边, 3 -> 罩子),Map(在 -> 在-01, 希 -> 希望, 能 -> 能, 幸 -> 幸福, 你 -> 你, 放 -> 放-03, 今 -> 今后, 罩 -> 罩子, 一 -> 一边))),[Ljava.lang.String;@6ce86ce1,Annotation([Ljava.lang.String;@54e7df6a,[Ljava.lang.String;@3fed2870,[Ljava.lang.String;@77128536),Annotation([Ljava.lang.String;@58326051,[Ljava.lang.String;@32c4e8b2,[Ledu.cmu.lti.nlp.amr.Dependency;@64bce832),Annotation([Ljava.lang.String;@764faa6,[Ljava.lang.String;@4c1f22f3,[Ljava.lang.String;@598bd2ba),Annotation([Ljava.lang.String;@5a755cc1,[Ljava.lang.String;@7ae42ce3,[Ledu.cmu.lti.nlp.amr.Entity;@4f5991f6))
AMR:
(一 / 一边, ARG3, 在 / 在-01)
(在 / 在-01, age, 希 / 希望)
(希 / 希望, location, 能 / 能)
(幸 / 幸福, duration, 今 / 今后)
(幸 / 幸福, quant, 你 / 你)
(放 / 放-03, ARG4, 一 / 一边)
(罩 / 罩子, ARG2, 在 / 在-01)
(能 / 能, ARG1, 今 / 今后)

Decoded in 24,424 microseconds
Sentence: 我 用 不 着 它 了 。 ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  它 => 它
Span 0-1:  我 => 我
Span 1-2:  用 => 用

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  它 => 它
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  用 => 用-01

Extra span: 不 => 不
Incorrect span: 用 => 用
Missing span: 用 => 用-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	用	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	2	dep	_	_
4	着	_	VV	VV	_	2	dep	_	_
5	它	_	PN	PN	_	2	dobj	_	_
6	了	_	SP	SP	_	2	dep	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 用-01, arg0, x9 / 我)
(x7 / 用-01, arg1, x10 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),它,它,false), Span(2,3,List(1),不,不,false), Span(1,2,List(2),用,用,false), Span(0,1,List(3),我,我,false)),Map(2 -> 用, 1 -> 不, 0 -> 它, 3 -> 我),Map(用 -> 用, 我 -> 我, 它 -> 它, 不 -> 不))),[Ljava.lang.String;@484094a5,Annotation([Ljava.lang.String;@38234a38,[Ljava.lang.String;@63fbfaeb,[Ljava.lang.String;@602e0143),Annotation([Ljava.lang.String;@2c07545f,[Ljava.lang.String;@e57b96d,[Ledu.cmu.lti.nlp.amr.Dependency;@32c726ee),Annotation([Ljava.lang.String;@22f31dec,[Ljava.lang.String;@34c01041,[Ljava.lang.String;@76f4b65),Annotation([Ljava.lang.String;@c94fd30,[Ljava.lang.String;@36328d33,[Ledu.cmu.lti.nlp.amr.Entity;@2c4d1ac))
AMR:
(不 / 不, mod, 用 / 用)
(它 / 它, location, 不 / 不)
(用 / 用, poss, 我 / 我)

Decoded in 6,435 microseconds
Sentence: “ 要是 风 来 了 怎么 办 ？ ”

Spans:
Span 6-7:  办 => 办-01
Span 5-6:  怎么 => 怎么
Span 3-4:  来 => 来-06
Span 2-3:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  办 => 办-01
Oracle Span 3-4:  来 => 来-06
Oracle Span 2-3:  风 => 风

Extra span: 怎么 => 怎么
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	要是	_	NN	NN	_	3	nn	_	_
3	风	_	NN	NN	_	4	nsubj	_	_
4	来	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	怎么	_	AD	AD	_	7	advmod	_	_
7	办	_	VV	VV	_	4	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x3 / 来-06, arg0, x4 / 风)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),办,办-01,false), Span(5,6,List(1),怎么,怎么,false), Span(3,4,List(2),来,来-06,false), Span(2,3,List(3),风,风,false)),Map(2 -> 来-06, 1 -> 怎么, 0 -> 办-01, 3 -> 风),Map(来 -> 来-06, 怎 -> 怎么, 风 -> 风, 办 -> 办-01))),[Ljava.lang.String;@7f0d96f2,Annotation([Ljava.lang.String;@545b995e,[Ljava.lang.String;@76a2ddf3,[Ljava.lang.String;@524f3b3a),Annotation([Ljava.lang.String;@41e68d87,[Ljava.lang.String;@49ff7d8c,[Ledu.cmu.lti.nlp.amr.Dependency;@29526c05),Annotation([Ljava.lang.String;@2ef14fe,[Ljava.lang.String;@77102b91,[Ljava.lang.String;@45312be2),Annotation([Ljava.lang.String;@7fb95505,[Ljava.lang.String;@58be6e8,[Ledu.cmu.lti.nlp.amr.Entity;@7331196b))
AMR:
(办 / 办-01, location, 怎 / 怎么)
(来 / 来-06, purpose, 办 / 办-01)
(风 / 风, purpose, 来 / 来-06)

Decoded in 6,537 microseconds
Sentence: “ 我 的 感冒 并 不 那么 重 … 夜晚 的 凉风 对 我 倒 有 好处 。

Spans:
Span 5-6:  不 => 不
Span 14-15:  倒 => 倒-02
Span 11-12:  凉风 => 凉风
Span 9-10:  夜晚 => 夜晚
Span 16-17:  好处 => 好处
Span 12-13:  对 => 对-02
Span 4-5:  并 => 并
Span 3-4:  感冒 => 感冒-01
Span 13-14:  我 => 我
Span 1-2:  我 => 我
Span 15-16:  有 => 有-06
Span 6-7:  那么 => 那么
Span 7-8:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  凉风 => 凉风
Oracle Span 9-10:  夜晚 => 夜晚
Oracle Span 16-17:  好处 => 好处
Oracle Span 4-5:  并 => 并
Oracle Span 3-4:  感冒 => 感冒-01
Oracle Span 1-2:  我 => 我
Oracle Span 15-16:  有 => 有-05
Oracle Span 6-7:  那么 => 那么
Oracle Span 7-8:  重 => 重-02

Incorrect span: 有 => 有-06
Extra span: 倒 => 倒-02
Extra span: 我 => 我
Extra span: 对 => 对-02
Extra span: 不 => 不
Missing span: 有 => 有-05
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	感冒	_	NN	NN	_	8	nsubj	_	_
5	并	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	那么	_	AD	AD	_	8	advmod	_	_
8	重	_	VV	VV	_	0	root	_	_
9	…	_	PU	PU	_	8	punct	_	_
10	夜晚	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	凉风	_	NN	NN	_	16	nsubj	_	_
13	对	_	P	P	_	16	prep	_	_
14	我	_	PN	PN	_	13	pobj	_	_
15	倒	_	AD	AD	_	16	advmod	_	_
16	有	_	VE	VE	_	8	conj	_	_
17	好处	_	NN	NN	_	16	dobj	_	_
18	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 有-05, arg0, x11 / 凉风)
(x10 / 有-05, arg1, x13 / 好处)
(x11 / 凉风, time, x12 / 夜晚)
(x3 / 重-02, arg0, x7 / 感冒-01)
(x3 / 重-02, degree, x4 / 那么)
(x3 / 重-02, manner, x6 / 并)
(x7 / 感冒-01, arg0, x9 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),好处,好处,false), Span(15,16,List(1),有,有-06,false), Span(14,15,List(2),倒,倒-02,false), Span(13,14,List(3),我,我,false), Span(12,13,List(4),对,对-02,false), Span(11,12,List(5),凉风,凉风,false), Span(9,10,List(6),夜晚,夜晚,false), Span(7,8,List(7),重,重-02,false), Span(6,7,List(8),那么,那么,false), Span(5,6,List(9),不,不,false), Span(4,5,List(10),并,并,false), Span(3,4,List(11),感冒,感冒-01,false), Span(1,2,List(12),我,我,false)),Map(2 -> 倒-02, 5 -> 凉风, 12 -> 我, 8 -> 那么, 7 -> 重-02, 1 -> 有-06, 4 -> 对-02, 11 -> 感冒-01, 6 -> 夜晚, 0 -> 好处, 9 -> 不, 3 -> 我, 10 -> 并),Map(夜 -> 夜晚, 我 -> 我, 重 -> 重-02, 感 -> 感冒-01, 我2 -> 我, 不 -> 不, 好 -> 好处, 倒 -> 倒-02, 那 -> 那么, 对 -> 对-02, 并 -> 并, 凉 -> 凉风, 有 -> 有-06))),[Ljava.lang.String;@3f9342d4,Annotation([Ljava.lang.String;@ab7395e,[Ljava.lang.String;@50d13246,[Ljava.lang.String;@2bd08376),Annotation([Ljava.lang.String;@e70f13a,[Ljava.lang.String;@3d3e5463,[Ledu.cmu.lti.nlp.amr.Dependency;@64a40280),Annotation([Ljava.lang.String;@4b40f651,[Ljava.lang.String;@42b02722,[Ljava.lang.String;@d62fe5b),Annotation([Ljava.lang.String;@49964d75,[Ljava.lang.String;@528c868,[Ledu.cmu.lti.nlp.amr.Entity;@466276d8))
AMR:
(不 / 不, location, 感 / 感冒-01)
(倒 / 倒-02, beneficiary, 我 / 我)
(倒 / 倒-02, degree, 凉 / 凉风)
(倒 / 倒-02, purpose, 有 / 有-06)
(凉 / 凉风, time, 夜 / 夜晚)
(好 / 好处, mod, 有 / 有-06)
(对 / 对-02, location, 凉 / 凉风)
(并 / 并, location, 感 / 感冒-01)
(感 / 感冒-01, example, 我2 / 我)
(那 / 那么, mod, 不 / 不)
(重 / 重-02, degree, 那 / 那么)
(重 / 重-02, prep-through, 夜 / 夜晚)

Decoded in 44,702 microseconds
Sentence: 我 是 一 朵 花 。 ”

Spans:
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04
Span 4-5:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  花 => 花

Incorrect span: 花 => 花-01
Extra span: 是 => 是-04
Missing span: 花 => 花
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	5	clf	_	_
5	花	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 花, domain, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),花,花-01,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 是-04, 0 -> 花-01),Map(我 -> 我, 花 -> 花-01, 是 -> 是-04))),[Ljava.lang.String;@5ce8d869,Annotation([Ljava.lang.String;@27eedb64,[Ljava.lang.String;@64c63c79,[Ljava.lang.String;@31c7528f),Annotation([Ljava.lang.String;@2b76ff4e,[Ljava.lang.String;@7a1234bf,[Ledu.cmu.lti.nlp.amr.Dependency;@2f62ea70),Annotation([Ljava.lang.String;@24ba9639,[Ljava.lang.String;@38aa816f,[Ljava.lang.String;@53f6fd09),Annotation([Ljava.lang.String;@6bffbc6d,[Ljava.lang.String;@1b84f475,[Ledu.cmu.lti.nlp.amr.Entity;@7749bf93))
AMR:
(是 / 是-04, manner, 我 / 我)
(是 / 是-04, mode, 花 / 花-01)

Decoded in 5,254 microseconds
Sentence: “ 要是 有 虫子 野兽 呢 ？ … ”

Spans:
Span 2-3:  有 => 有-06
Span 3-4:  虫子 => 虫子
Span 4-5:  野兽 => 野兽

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  有 => 有-03
Oracle Span 3-4:  虫子 => 虫子
Oracle Span 4-5:  野兽 => 野兽

Incorrect span: 有 => 有-06
Missing span: 有 => 有-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	要是	_	VV	VV	_	0	root	_	_
3	有	_	VE	VE	_	8	rcmod	_	_
4	虫子	_	NN	NN	_	5	nn	_	_
5	野兽	_	NN	NN	_	3	dobj	_	_
6	呢	_	SP	SP	_	3	dep	_	_
7	？	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	2	dobj	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),野兽,野兽,false), Span(3,4,List(1),虫子,虫子,false), Span(2,3,List(2),有,有-06,false)),Map(2 -> 有-06, 1 -> 虫子, 0 -> 野兽),Map(虫 -> 虫子, 野 -> 野兽, 有 -> 有-06))),[Ljava.lang.String;@13330ac6,Annotation([Ljava.lang.String;@539d019,[Ljava.lang.String;@39a2bb97,[Ljava.lang.String;@3ad2e17),Annotation([Ljava.lang.String;@8c3619e,[Ljava.lang.String;@4331d187,[Ledu.cmu.lti.nlp.amr.Dependency;@6f63b475),Annotation([Ljava.lang.String;@554e218,[Ljava.lang.String;@1608bcbd,[Ljava.lang.String;@5bf8fa12),Annotation([Ljava.lang.String;@29ca3d04,[Ljava.lang.String;@b2c5e07,[Ledu.cmu.lti.nlp.amr.Entity;@5812f68b))
AMR:
(虫 / 虫子, mod, 有 / 有-06)
(野 / 野兽, conj-as-if, 有 / 有-06)

Decoded in 4,987 microseconds
Sentence: “ 我 要是 想 认识 蝴蝶 ， 经 不 起 两三 只 尺蠖 是 不 行 的 。

Spans:
Span 14-15:  不 => 不
Span 8-9:  不 => 不
Span 11-12:  只 => 只
Span 12-13:  尺蠖 => 尺蠖
Span 3-4:  想 => 想-05
Span 1-2:  我 => 我
Span 13-14:  是 => 是-04
Span 7-8:  经 => 经-01
Span 5-6:  蝴蝶 => 蝴蝶
Span 15-16:  行 => 行-04
Span 4-5:  认识 => 认识-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  尺蠖 => 尺蠖
Oracle Span 3-4:  想 => 想-02
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  经 => 经-01
Oracle Span 5-6:  蝴蝶 => 蝴蝶
Oracle Span 4-5:  认识 => 认识-01

Extra span: 行 => 行-04
Extra span: 不 => 不
Extra span: 是 => 是-04
Extra span: 只 => 只
Extra span: 不 => 不
Incorrect span: 想 => 想-05
Missing span: 想 => 想-02
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	要是	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	0	root	_	_
5	认识	_	VV	VV	_	4	ccomp	_	_
6	蝴蝶	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	经	_	P	P	_	14	prep	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	起	_	VV	VV	_	8	pccomp	_	_
11	两三	_	CD	CD	_	12	nummod	_	_
12	只	_	M	M	_	10	range	_	_
13	尺蠖	_	AD	AD	_	14	advmod	_	_
14	是	_	VC	VC	_	4	dep	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	行	_	VV	VV	_	14	attr	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x19 / 想-02, arg0, x20 / 我)
(x19 / 想-02, arg1, x21 / 认识-01)
(x21 / 认识-01, arg1, x23 / 蝴蝶)
(x25 / 经-01, arg1, x27 / 尺蠖)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),行,行-04,false), Span(14,15,List(1),不,不,false), Span(13,14,List(2),是,是-04,false), Span(12,13,List(3),尺蠖,尺蠖,false), Span(11,12,List(4),只,只,false), Span(8,9,List(5),不,不,false), Span(7,8,List(6),经,经-01,false), Span(5,6,List(7),蝴蝶,蝴蝶,false), Span(4,5,List(8),认识,认识-01,false), Span(3,4,List(9),想,想-05,false), Span(1,2,List(10),我,我,false)),Map(2 -> 是-04, 5 -> 不, 8 -> 认识-01, 7 -> 蝴蝶, 1 -> 不, 4 -> 只, 6 -> 经-01, 9 -> 想-05, 0 -> 行-04, 10 -> 我, 3 -> 尺蠖),Map(尺 -> 尺蠖, 我 -> 我, 认 -> 认识-01, 不2 -> 不, 不 -> 不, 只 -> 只, 行 -> 行-04, 想 -> 想-05, 经 -> 经-01, 是 -> 是-04, 蝴 -> 蝴蝶))),[Ljava.lang.String;@4426bff1,Annotation([Ljava.lang.String;@3c7c886c,[Ljava.lang.String;@55493582,[Ljava.lang.String;@1a20270e),Annotation([Ljava.lang.String;@6b88ca8c,[Ljava.lang.String;@336f1079,[Ledu.cmu.lti.nlp.amr.Dependency;@2f16c6b3),Annotation([Ljava.lang.String;@34158c08,[Ljava.lang.String;@19e4fcac,[Ljava.lang.String;@52c3cb31),Annotation([Ljava.lang.String;@4b79ac84,[Ljava.lang.String;@53941c2f,[Ledu.cmu.lti.nlp.amr.Entity;@6dab9b6d))
AMR:
(想 / 想-05, manner, 我 / 我)
(想 / 想-05, purpose, 经 / 经-01)
(是 / 是-04, degree, 尺 / 尺蠖)
(是 / 是-04, location, 不 / 不)
(是 / 是-04, location, 不2 / 不)
(是 / 是-04, manner, 只 / 只)
(经 / 经-01, location, 不2 / 不)
(行 / 行-04, manner, 不 / 不)
(认 / 认识-01, degree, 想 / 想-05)
(认 / 认识-01, prep-through, 蝴 / 蝴蝶)

Decoded in 34,841 microseconds
Sentence: 据说 这 是 很 美 的 。

Spans:
Span 3-4:  很 => 很
Span 0-1:  据说 => 据说-01
Span 2-3:  是 => 是-04
Span 4-5:  美 => 美-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  很 => 很
Oracle Span 0-1:  据说 => 据说-01
Oracle Span 4-5:  美 => 美-01
Oracle Span 1-2:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	据说	_	AD	AD	_	3	advmod	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	美	_	JJ	JJ	_	3	dep	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 据说-01, arg0, x2 / 美-01)
(x2 / 美-01, arg0, x4 / 这)
(x2 / 美-01, degree, x3 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),美,美-01,false), Span(3,4,List(1),很,很,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),这,这,false), Span(0,1,List(4),据说,据说-01,false)),Map(2 -> 是-04, 1 -> 很, 4 -> 据说-01, 0 -> 美-01, 3 -> 这),Map(美 -> 美-01, 这 -> 这, 很 -> 很, 据 -> 据说-01, 是 -> 是-04))),[Ljava.lang.String;@21fd5faa,Annotation([Ljava.lang.String;@2766ca9d,[Ljava.lang.String;@5460cf3a,[Ljava.lang.String;@65a15628),Annotation([Ljava.lang.String;@2e6a5539,[Ljava.lang.String;@3fc9504b,[Ledu.cmu.lti.nlp.amr.Dependency;@6d025197),Annotation([Ljava.lang.String;@27d4a09,[Ljava.lang.String;@7e4204e2,[Ljava.lang.String;@b7c4869),Annotation([Ljava.lang.String;@740d2e78,[Ljava.lang.String;@1c481ff2,[Ledu.cmu.lti.nlp.amr.Entity;@72437d8d))
AMR:
(很 / 很, ARG3, 是 / 是-04)
(据 / 据说-01, ARG3, 美 / 美-01)
(美 / 美-01, degree, 很 / 很)
(这 / 这, ARG3, 是 / 是-04)

Decoded in 29,623 microseconds
Sentence: 不然 还 有 谁 来 看 我 呢 ？

Spans:
Span 6-7:  我 => 我
Span 2-3:  有 => 有-06
Span 4-5:  来 => 来-06
Span 5-6:  看 => 看-10
Span 3-4:  谁 => 谁
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  我 => 我
Oracle Span 4-5:  来 => 来-05
Oracle Span 5-6:  看 => 看-02

Incorrect span: 看 => 看-10
Incorrect span: 来 => 来-06
Extra span: 谁 => 谁
Extra span: 有 => 有-06
Extra span: 还 => 还
Missing span: 来 => 来-05
Missing span: 看 => 看-02
Dependencies:
1	不然	_	NN	NN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	谁	_	PN	PN	_	6	nsubj	_	_
5	来	_	MSP	MSP	_	6	prtmod	_	_
6	看	_	VV	VV	_	3	dep	_	_
7	我	_	PN	PN	_	6	dobj	_	_
8	呢	_	SP	SP	_	6	dep	_	_
9	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 来-05, purpose, x15 / 看-02)
(x15 / 看-02, arg1, x16 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),我,我,false), Span(5,6,List(1),看,看-10,false), Span(4,5,List(2),来,来-06,false), Span(3,4,List(3),谁,谁,false), Span(2,3,List(4),有,有-06,false), Span(1,2,List(5),还,还,false)),Map(2 -> 来-06, 5 -> 还, 1 -> 看-10, 4 -> 有-06, 0 -> 我, 3 -> 谁),Map(来 -> 来-06, 我 -> 我, 谁 -> 谁, 还 -> 还, 看 -> 看-10, 有 -> 有-06))),[Ljava.lang.String;@1b955cac,Annotation([Ljava.lang.String;@676cf48,[Ljava.lang.String;@5a1de7fb,[Ljava.lang.String;@335b5620),Annotation([Ljava.lang.String;@29a0cdb,[Ljava.lang.String;@32a68f4f,[Ledu.cmu.lti.nlp.amr.Dependency;@73194df),Annotation([Ljava.lang.String;@6eb2384f,[Ljava.lang.String;@3c9c0d96,[Ljava.lang.String;@3a4621bd),Annotation([Ljava.lang.String;@31dadd46,[Ljava.lang.String;@4ed5eb72,[Ledu.cmu.lti.nlp.amr.Entity;@12f9af83))
AMR:
(有 / 有-06, manner, 还 / 还)
(来 / 来-06, manner, 谁 / 谁)
(看 / 看-10, manner, 来 / 来-06)
(看 / 看-10, purpose, 我 / 我)
(谁 / 谁, manner, 有 / 有-06)

Decoded in 10,708 microseconds
Sentence: 你 就 要 到 远处 去 了 。 至于 说 大 动物 ， 我 并 不 怕 ，

Spans:
Span 15-16:  不 => 不
Span 0-1:  你 => 你
Span 3-4:  到 => 到-01
Span 11-12:  动物 => 动物
Span 5-6:  去 => 去-02
Span 10-11:  大 => 大
Span 1-2:  就 => 就-01
Span 14-15:  并 => 并
Span 16-17:  怕 => 怕-01
Span 13-14:  我 => 我
Span 2-3:  要 => 要-02
Span 9-10:  说 => 说-02
Span 4-5:  远处 => 远处

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  到 => 到-01
Oracle Span 11-12:  动物 => 动物
Oracle Span 10-11:  大 => 大-01
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  怕 => 怕-01
Oracle Span 13-14:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 4-5:  远处 => 远处

Extra span: 不 => 不
Extra span: 并 => 并
Incorrect span: 大 => 大
Extra span: 说 => 说-02
Extra span: 去 => 去-02
Incorrect span: 要 => 要-02
Incorrect span: 就 => 就-01
Missing span: 要 => 要-03
Missing span: 就 => 就
Missing span: 大 => 大-01
Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	就	_	AD	AD	_	6	advmod	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	到	_	P	P	_	6	prep	_	_
5	远处	_	NN	NN	_	4	pobj	_	_
6	去	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_
9	至于	_	P	P	_	17	prep	_	_
10	说	_	VV	VV	_	12	vmod	_	_
11	大	_	JJ	JJ	_	12	amod	_	_
12	动物	_	NN	NN	_	9	pobj	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	我	_	PN	PN	_	17	nsubj	_	_
15	并	_	AD	AD	_	17	advmod	_	_
16	不	_	AD	AD	_	17	neg	_	_
17	怕	_	VV	VV	_	6	conj	_	_
18	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x10 / 动物, mod, x11 / 大-01)
(x2 / 要-03, arg0, x3 / 到-01)
(x2 / 要-03, manner, x6 / 就)
(x3 / 到-01, arg0, x4 / 你)
(x3 / 到-01, arg1, x5 / 远处)
(x7 / 怕-01, arg0, x8 / 我)
(x7 / 怕-01, arg1, x10 / 动物)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),怕,怕-01,false), Span(15,16,List(1),不,不,false), Span(14,15,List(2),并,并,false), Span(13,14,List(3),我,我,false), Span(11,12,List(4),动物,动物,false), Span(10,11,List(5),大,大,false), Span(9,10,List(6),说,说-02,false), Span(5,6,List(7),去,去-02,false), Span(4,5,List(8),远处,远处,false), Span(3,4,List(9),到,到-01,false), Span(2,3,List(10),要,要-02,false), Span(1,2,List(11),就,就-01,false), Span(0,1,List(12),你,你,false)),Map(2 -> 并, 5 -> 大, 12 -> 你, 8 -> 远处, 7 -> 去-02, 1 -> 不, 4 -> 动物, 11 -> 就-01, 6 -> 说-02, 0 -> 怕-01, 9 -> 到-01, 3 -> 我, 10 -> 要-02),Map(怕 -> 怕-01, 就 -> 就-01, 我 -> 我, 要 -> 要-02, 大 -> 大, 远 -> 远处, 你 -> 你, 去 -> 去-02, 动 -> 动物, 不 -> 不, 到 -> 到-01, 说 -> 说-02, 并 -> 并))),[Ljava.lang.String;@19b93fa8,Annotation([Ljava.lang.String;@7e6ef134,[Ljava.lang.String;@1f010bf0,[Ljava.lang.String;@40db2a24),Annotation([Ljava.lang.String;@10cf09e8,[Ljava.lang.String;@1921ad94,[Ledu.cmu.lti.nlp.amr.Dependency;@ee86bcb),Annotation([Ljava.lang.String;@177bea38,[Ljava.lang.String;@7f132176,[Ljava.lang.String;@6bca7e0d),Annotation([Ljava.lang.String;@2631f68c,[Ljava.lang.String;@6ed3f258,[Ledu.cmu.lti.nlp.amr.Entity;@8ad6665))
AMR:
(到 / 到-01, ARG0, 远 / 远处)
(到 / 到-01, ARG6, 你 / 你)
(动 / 动物, mod, 大 / 大)
(去 / 去-02, degree, 不 / 不)
(怕 / 怕-01, manner, 不 / 不)
(怕 / 怕-01, manner, 并 / 并)
(怕 / 怕-01, unit, 动 / 动物)
(我 / 我, ARG3, 不 / 不)
(要 / 要-02, ARG2, 到 / 到-01)
(要 / 要-02, manner, 就 / 就-01)
(要 / 要-02, prep-through, 去 / 去-02)
(说 / 说-02, ARG0, 大 / 大)

Decoded in 46,332 microseconds
Sentence: 我 有 爪子 。 ”

Spans:
Span 0-1:  我 => 我
Span 1-2:  有 => 有-06
Span 2-3:  爪子 => 爪子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有 => 有-01
Oracle Span 2-3:  爪子 => 爪子

Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	爪子	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 有-01, arg0, x7 / 我)
(x6 / 有-01, arg1, x8 / 爪子)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),爪子,爪子,false), Span(1,2,List(1),有,有-06,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 有-06, 0 -> 爪子),Map(我 -> 我, 爪 -> 爪子, 有 -> 有-06))),[Ljava.lang.String;@30af5b6b,Annotation([Ljava.lang.String;@19835e64,[Ljava.lang.String;@68b32e3e,[Ljava.lang.String;@bcef303),Annotation([Ljava.lang.String;@41709512,[Ljava.lang.String;@42039326,[Ledu.cmu.lti.nlp.amr.Dependency;@33308786),Annotation([Ljava.lang.String;@4f9a2c08,[Ljava.lang.String;@a87f8ec,[Ljava.lang.String;@5443d039),Annotation([Ljava.lang.String;@63787180,[Ljava.lang.String;@7d1cfb8b,[Ledu.cmu.lti.nlp.amr.Entity;@48e92c5c))
AMR:
(有 / 有-06, manner, 我 / 我)
(有 / 有-06, part, 爪 / 爪子)

Decoded in 4,363 microseconds
Sentence: 于是 ， 她 天真 地 显露 出 她 那 四 根 刺 ，

Spans:
Span 6-7:  出 => 出-04
Span 11-12:  刺 => 刺-01
Span 4-5:  地 => 地
Span 3-4:  天真 => 天真-01
Span 7-8:  她 => 她
Span 2-3:  她 => 她
Span 5-6:  显露 => 显露-01
Span 10-11:  根 => 根
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  刺 => 刺
Oracle Span 3-4:  天真 => 天真-01
Oracle Span 2-3:  她 => 她
Oracle Span 5-6:  显露 => 显露-01
Oracle Span 8-9:  那 => 那

Incorrect span: 刺 => 刺-01
Extra span: 根 => 根
Extra span: 她 => 她
Extra span: 出 => 出-04
Extra span: 地 => 地
Missing span: 刺 => 刺
Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	她	_	PN	PN	_	6	nsubj	_	_
4	天真	_	VA	VA	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	显露	_	VV	VV	_	0	root	_	_
7	出	_	VV	VV	_	6	comod	_	_
8	她	_	PN	PN	_	12	nsubj	_	_
9	那	_	DT	DT	_	12	dep	_	_
10	四	_	CD	CD	_	11	nummod	_	_
11	根	_	M	M	_	9	dep	_	_
12	刺	_	VV	VV	_	6	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 显露-01, arg0, x3 / 她)
(x2 / 显露-01, arg1, x6 / 刺)
(x2 / 显露-01, manner, x4 / 天真-01)
(x6 / 刺, mod, x8 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),刺,刺-01,false), Span(10,11,List(1),根,根,false), Span(8,9,List(2),那,那,false), Span(7,8,List(3),她,她,false), Span(6,7,List(4),出,出-04,false), Span(5,6,List(5),显露,显露-01,false), Span(4,5,List(6),地,地,false), Span(3,4,List(7),天真,天真-01,false), Span(2,3,List(8),她,她,false)),Map(2 -> 那, 5 -> 显露-01, 8 -> 她, 7 -> 天真-01, 1 -> 根, 4 -> 出-04, 6 -> 地, 0 -> 刺-01, 3 -> 她),Map(她2 -> 她, 刺 -> 刺-01, 根 -> 根, 地 -> 地, 天 -> 天真-01, 出 -> 出-04, 那 -> 那, 显 -> 显露-01, 她 -> 她))),[Ljava.lang.String;@2e1ef60,Annotation([Ljava.lang.String;@22356acd,[Ljava.lang.String;@386f0da3,[Ljava.lang.String;@39655d3e),Annotation([Ljava.lang.String;@34f22f9d,[Ljava.lang.String;@3d1848cc,[Ledu.cmu.lti.nlp.amr.Dependency;@7dda48d9),Annotation([Ljava.lang.String;@6e4566f1,[Ljava.lang.String;@4b6e2263,[Ljava.lang.String;@344f4dea),Annotation([Ljava.lang.String;@1b7c473a,[Ljava.lang.String;@5e4bd84a,[Ledu.cmu.lti.nlp.amr.Entity;@648c94da))
AMR:
(刺 / 刺-01, ARG1, 根 / 根)
(刺 / 刺-01, mod, 那 / 那)
(她 / 她, ARG5, 那 / 那)
(显 / 显露-01, ARG1, 地 / 地)
(显 / 显露-01, direction, 出 / 出-04)
(显 / 显露-01, manner, 天 / 天真-01)
(显 / 显露-01, op, 她2 / 她)
(显 / 显露-01, snt3, 刺 / 刺-01)

Decoded in 24,271 microseconds
Sentence: 随后 又 说道 ： “ 别 这么 磨蹭 了 。

Spans:
Span 1-2:  又 => 又
Span 7-8:  磨蹭 => 磨蹭-01
Span 2-3:  说道 => 说道
Span 6-7:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  又 => 又
Oracle Span 7-8:  磨蹭 => 磨蹭-01
Oracle Span 2-3:  说道 => 说道-01
Oracle Span 6-7:  这么 => 这么

Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	随后	_	AD	AD	_	3	advmod	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	说道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	8	punct	_	_
6	别	_	DT	DT	_	8	nsubj	_	_
7	这么	_	AD	AD	_	8	advmod	_	_
8	磨蹭	_	VV	VV	_	3	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 说道-01, arg1, x4 / 磨蹭-01)
(x2 / 说道-01, manner, x3 / 又)
(x4 / 磨蹭-01, degree, x6 / 这么)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),磨蹭,磨蹭-01,false), Span(6,7,List(1),这么,这么,false), Span(2,3,List(2),说道,说道,false), Span(1,2,List(3),又,又,false)),Map(2 -> 说道, 1 -> 这么, 0 -> 磨蹭-01, 3 -> 又),Map(又 -> 又, 磨 -> 磨蹭-01, 这 -> 这么, 说 -> 说道))),[Ljava.lang.String;@2a62b5bc,Annotation([Ljava.lang.String;@53de625d,[Ljava.lang.String;@535779e4,[Ljava.lang.String;@53fd0d10),Annotation([Ljava.lang.String;@6c0d9d86,[Ljava.lang.String;@4ce1d6d0,[Ledu.cmu.lti.nlp.amr.Dependency;@24111ef1),Annotation([Ljava.lang.String;@1f3f02ee,[Ljava.lang.String;@1fde5d22,[Ljava.lang.String;@5dcb4f5f),Annotation([Ljava.lang.String;@71812481,[Ljava.lang.String;@16ce702d,[Ledu.cmu.lti.nlp.amr.Entity;@7b94089b))
AMR:
(磨 / 磨蹭-01, degree, 说 / 说道)
(磨 / 磨蹭-01, degree, 这 / 这么)
(说 / 说道, manner, 又 / 又)

Decoded in 7,423 microseconds
Sentence: 真 烦人 ！ 你 既然 决定 离开 这儿 ，

Spans:
Span 3-4:  你 => 你
Span 5-6:  决定 => 决定-01
Span 0-1:  真 => 真
Span 6-7:  离开 => 离开-01
Span 7-8:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 5-6:  决定 => 决定-01
Oracle Span 0-1:  真 => 真
Oracle Span 6-7:  离开 => 离开-01
Oracle Span 7-8:  这儿 => 这儿

Dependencies:
1	真	_	AD	AD	_	2	advmod	_	_
2	烦人	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	7	nsubj	_	_
5	既然	_	CS	CS	_	7	advmod	_	_
6	决定	_	NN	NN	_	7	dobj	_	_
7	离开	_	VV	VV	_	2	dep	_	_
8	这儿	_	PN	PN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 离开-01, arg1, x12 / 这儿)
(x8 / 决定-01, arg0, x9 / 你)
(x8 / 决定-01, arg1, x10 / 离开-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),这儿,这儿,false), Span(6,7,List(1),离开,离开-01,false), Span(5,6,List(2),决定,决定-01,false), Span(3,4,List(3),你,你,false), Span(0,1,List(4),真,真,false)),Map(2 -> 决定-01, 1 -> 离开-01, 4 -> 真, 0 -> 这儿, 3 -> 你),Map(这 -> 这儿, 你 -> 你, 决 -> 决定-01, 离 -> 离开-01, 真 -> 真))),[Ljava.lang.String;@7ca20101,Annotation([Ljava.lang.String;@47f9738,[Ljava.lang.String;@6155d082,[Ljava.lang.String;@3a5ecce3),Annotation([Ljava.lang.String;@561868a0,[Ljava.lang.String;@2ea6e30c,[Ledu.cmu.lti.nlp.amr.Dependency;@6138e79a),Annotation([Ljava.lang.String;@2dcd168a,[Ljava.lang.String;@388526fb,[Ljava.lang.String;@21a21c64),Annotation([Ljava.lang.String;@7803bfd,[Ljava.lang.String;@42bc14c1,[Ledu.cmu.lti.nlp.amr.Entity;@531f4093))
AMR:
(决 / 决定-01, ARG0, 离 / 离开-01)
(决 / 决定-01, prep-on-behalf, 你 / 你)
(决 / 决定-01, purpose, 真 / 真)
(离 / 离开-01, op, 这 / 这儿)

Decoded in 8,919 microseconds
Sentence: 那么 ， 快 走 吧 ！ ”

Spans:
Span 2-3:  快 => 快
Span 3-4:  走 => 走-05
Span 0-1:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  快 => 快-01
Oracle Span 3-4:  走 => 走-01

Incorrect span: 走 => 走-05
Incorrect span: 快 => 快
Extra span: 那么 => 那么
Missing span: 走 => 走-01
Missing span: 快 => 快-01
Dependencies:
1	那么	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	快	_	VA	VA	_	4	dep	_	_
4	走	_	VV	VV	_	0	root	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	！	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 走-01, manner, x14 / 快-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),走,走-05,false), Span(2,3,List(1),快,快,false), Span(0,1,List(2),那么,那么,false)),Map(2 -> 那么, 1 -> 快, 0 -> 走-05),Map(快 -> 快, 走 -> 走-05, 那 -> 那么))),[Ljava.lang.String;@62ef27a8,Annotation([Ljava.lang.String;@6436a7db,[Ljava.lang.String;@460ebd80,[Ljava.lang.String;@6f3c660a),Annotation([Ljava.lang.String;@74f5ce22,[Ljava.lang.String;@25aca718,[Ledu.cmu.lti.nlp.amr.Dependency;@16fdec90),Annotation([Ljava.lang.String;@1afdd473,[Ljava.lang.String;@40238dd0,[Ljava.lang.String;@7776ab),Annotation([Ljava.lang.String;@79179359,[Ljava.lang.String;@dbd8e44,[Ledu.cmu.lti.nlp.amr.Entity;@51acdf2e))
AMR:
(快 / 快, season, 走 / 走-05)
(走 / 走-05, degree, 那 / 那么)

Decoded in 4,541 microseconds
Sentence: 她 是 怕 小 王子 看见 她 在 哭 。

Spans:
Span 8-9:  哭 => 哭-01
Span 7-8:  在 => 在-01
Span 6-7:  她 => 她
Span 0-1:  她 => 她
Span 3-4:  小 => 小
Span 2-3:  怕 => 怕-01
Span 1-2:  是 => 是-04
Span 4-5:  王子 => 王子
Span 5-6:  看见 => 看见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  哭 => 哭-01
Oracle Span 0-1:  她 => 她
Oracle Span 3-4:  小 => 小-01
Oracle Span 2-3:  怕 => 怕-01
Oracle Span 4-5:  王子 => 王子
Oracle Span 5-6:  看见 => 看见-01

Extra span: 在 => 在-01
Extra span: 她 => 她
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	她	_	PN	PN	_	3	top	_	_
2	是	_	VC	VC	_	3	cop	_	_
3	怕	_	VV	VV	_	0	root	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	3	dobj	_	_
6	看见	_	VV	VV	_	3	dep	_	_
7	她	_	PN	PN	_	6	dobj	_	_
8	在	_	P	P	_	6	prep	_	_
9	哭	_	NR	NR	_	8	pobj	_	_
10	。	_	PU	PU	_	3	punct	_	_
11	是	_	VC	VC	_	3	conj	_	_

Oracle:
(x0 / 怕-01, arg0, x2 / 她)
(x0 / 怕-01, arg1, x3 / 看见-01)
(x3 / 看见-01, arg0, x4 / 王子)
(x3 / 看见-01, arg1, x6 / 哭-01)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),哭,哭-01,false), Span(7,8,List(1),在,在-01,false), Span(6,7,List(2),她,她,false), Span(5,6,List(3),看见,看见-01,false), Span(4,5,List(4),王子,王子,false), Span(3,4,List(5),小,小,false), Span(2,3,List(6),怕,怕-01,false), Span(1,2,List(7),是,是-04,false), Span(0,1,List(8),她,她,false)),Map(2 -> 她, 5 -> 小, 8 -> 她, 7 -> 是-04, 1 -> 在-01, 4 -> 王子, 6 -> 怕-01, 0 -> 哭-01, 3 -> 看见-01),Map(哭 -> 哭-01, 怕 -> 怕-01, 在 -> 在-01, 她2 -> 她, 王 -> 王子, 小 -> 小, 看 -> 看见-01, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@6a55299e,Annotation([Ljava.lang.String;@2f1de2d6,[Ljava.lang.String;@4eb386df,[Ljava.lang.String;@79517588),Annotation([Ljava.lang.String;@3a0baae5,[Ljava.lang.String;@7ac0e420,[Ledu.cmu.lti.nlp.amr.Dependency;@289710d9),Annotation([Ljava.lang.String;@5a18cd76,[Ljava.lang.String;@3da30852,[Ljava.lang.String;@403f0a22),Annotation([Ljava.lang.String;@503ecb24,[Ljava.lang.String;@4c51cf28,[Ledu.cmu.lti.nlp.amr.Entity;@6995bf68))
AMR:
(哭 / 哭-01, degree, 在 / 在-01)
(在 / 在-01, degree, 她 / 她)
(在 / 在-01, degree, 看 / 看见-01)
(小 / 小, mod, 怕 / 怕-01)
(怕 / 怕-01, degree, 是 / 是-04)
(怕 / 怕-01, mode, 看 / 看见-01)
(是 / 是-04, degree, 她2 / 她)
(王 / 王子, mod, 小 / 小)

Decoded in 21,328 microseconds
Sentence: 她 是 一 朵 非常 骄傲 的 花 …

Spans:
Span 0-1:  她 => 她
Span 1-2:  是 => 是-04
Span 7-8:  花 => 花-01
Span 4-5:  非常 => 非常
Span 5-6:  骄傲 => 骄傲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  她 => 她
Oracle Span 7-8:  花 => 花
Oracle Span 4-5:  非常 => 非常-01
Oracle Span 5-6:  骄傲 => 骄傲

Incorrect span: 花 => 花-01
Incorrect span: 非常 => 非常
Extra span: 是 => 是-04
Missing span: 花 => 花
Missing span: 非常 => 非常-01
Dependencies:
1	她	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	9	clf	_	_
5	非常	_	AD	AD	_	6	advmod	_	_
6	骄傲	_	VV	VV	_	9	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	花	_	NN	NN	_	9	nn	_	_
9	…	_	NN	NN	_	2	attr	_	_

Oracle:
(x0 / 花, domain, x5 / 她)
(x0 / 花, mod, x3 / 骄傲)
(x3 / 骄傲, degree, x4 / 非常-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),花,花-01,false), Span(5,6,List(1),骄傲,骄傲,false), Span(4,5,List(2),非常,非常,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),她,她,false)),Map(2 -> 非常, 1 -> 骄傲, 4 -> 她, 0 -> 花-01, 3 -> 是-04),Map(骄 -> 骄傲, 非 -> 非常, 花 -> 花-01, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@5143c662,Annotation([Ljava.lang.String;@77825085,[Ljava.lang.String;@3568f9d2,[Ljava.lang.String;@71c27ee8),Annotation([Ljava.lang.String;@3e7dd664,[Ljava.lang.String;@5b1ebf56,[Ledu.cmu.lti.nlp.amr.Dependency;@294a6b8e),Annotation([Ljava.lang.String;@4b1d6571,[Ljava.lang.String;@1b835480,[Ljava.lang.String;@3549bca9),Annotation([Ljava.lang.String;@4f25b795,[Ljava.lang.String;@6fb365ed,[Ledu.cmu.lti.nlp.amr.Entity;@6e950bcf))
AMR:
(是 / 是-04, degree, 她 / 她)
(是 / 是-04, degree, 非 / 非常)
(花 / 花-01, mod, 骄 / 骄傲)
(骄 / 骄傲, degree, 非 / 非常)

Decoded in 8,756 microseconds
Sentence: X 。

Spans:
Span 0-1:  X => X

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  X => X

Dependencies:
1	X	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),X,X,false)),Map(0 -> X),Map(x -> X))),[Ljava.lang.String;@16414e40,Annotation([Ljava.lang.String;@74bada02,[Ljava.lang.String;@525575,[Ljava.lang.String;@46dffdc3),Annotation([Ljava.lang.String;@5a709816,[Ljava.lang.String;@78383390,[Ledu.cmu.lti.nlp.amr.Dependency;@6ad3381f),Annotation([Ljava.lang.String;@53dbe163,[Ljava.lang.String;@db57326,[Ljava.lang.String;@34a875b3),Annotation([Ljava.lang.String;@4748a0f9,[Ljava.lang.String;@4b14918a,[Ledu.cmu.lti.nlp.amr.Entity;@6d1ef78d))
AMR:


Decoded in 3,191 microseconds
Sentence: 在 附近 的 宇宙 中 ， 还 有 325 、 326 、 327 、 328 、 329 、 330 等 几 颗 小 行星 。

Spans:
Span 8-9:  325 => 325
Span 10-11:  326 => 326
Span 12-13:  327 => 327
Span 14-15:  328 => 328
Span 16-17:  329 => 329
Span 18-19:  330 => 330
Span 20-21:  几 => 几
Span 0-1:  在 => 在-01
Span 3-4:  宇宙 => 宇宙
Span 22-23:  小 => 小
Span 7-8:  有 => 有-06
Span 19-20:  等 => 等-01
Span 23-24:  行星 => 行星
Span 6-7:  还 => 还
Span 1-2:  附近 => 附近

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  325 => 325
Oracle Span 10-11:  326 => 326
Oracle Span 12-13:  327 => 327
Oracle Span 14-15:  328 => 328
Oracle Span 16-17:  329 => 329
Oracle Span 18-19:  330 => 330
Oracle Span 20-21:  几 => 几
Oracle Span 3-4:  宇宙 => 宇宙
Oracle Span 22-23:  小 => 小-01
Oracle Span 7-8:  有 => 有-03
Oracle Span 23-24:  行星 => 行星
Oracle Span 6-7:  还 => 还
Oracle Span 1-2:  附近 => 附近-01

Incorrect span: 小 => 小
Extra span: 等 => 等-01
Incorrect span: 有 => 有-06
Incorrect span: 附近 => 附近
Extra span: 在 => 在-01
Missing span: 有 => 有-03
Missing span: 小 => 小-01
Missing span: 附近 => 附近-01
Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	附近	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	宇宙	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	1	plmod	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	有	_	VE	VE	_	0	root	_	_
9	325	_	CD	CD	_	17	nummod	_	_
10	、	_	PU	PU	_	17	punct	_	_
11	326	_	CD	CD	_	17	nummod	_	_
12	、	_	PU	PU	_	17	punct	_	_
13	327	_	CD	CD	_	17	nummod	_	_
14	、	_	PU	PU	_	17	punct	_	_
15	328	_	CD	CD	_	17	nummod	_	_
16	、	_	PU	PU	_	17	punct	_	_
17	329	_	CD	CD	_	8	dep	_	_
18	、	_	PU	PU	_	8	punct	_	_
19	330	_	CD	CD	_	20	nummod	_	_
20	等	_	M	M	_	24	clf	_	_
21	几	_	CD	CD	_	22	nummod	_	_
22	颗	_	M	M	_	24	clf	_	_
23	小	_	JJ	JJ	_	24	amod	_	_
24	行星	_	NN	NN	_	8	dep	_	_
25	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 有-03, arg0, x3 / 宇宙)
(x0 / 有-03, arg1, x5 / 行星)
(x0 / 有-03, manner, x2 / 还)
(x3 / 宇宙, mod, x4 / 附近-01)
(x5 / 行星, mod, x6 / 小-01)
(x5 / 行星, quant, x7 / 几)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),行星,行星,false), Span(22,23,List(1),小,小,false), Span(20,21,List(2),几,几,false), Span(19,20,List(3),等,等-01,false), Span(18,19,List(4),330,330,false), Span(16,17,List(5),329,329,false), Span(14,15,List(6),328,328,false), Span(12,13,List(7),327,327,false), Span(10,11,List(8),326,326,false), Span(8,9,List(9),325,325,false), Span(7,8,List(10),有,有-06,false), Span(6,7,List(11),还,还,false), Span(3,4,List(12),宇宙,宇宙,false), Span(1,2,List(13),附近,附近,false), Span(0,1,List(14),在,在-01,false)),Map(2 -> 几, 5 -> 329, 12 -> 宇宙, 8 -> 326, 7 -> 327, 1 -> 小, 4 -> 330, 11 -> 还, 14 -> 在-01, 6 -> 328, 0 -> 行星, 9 -> 325, 3 -> 等-01, 10 -> 有-06, 13 -> 附近),Map(宇 -> 宇宙, 在 -> 在-01, 33 -> 328, 几 -> 几, 36 -> 325, 35 -> 326, 小 -> 小, 等 -> 等-01, 32 -> 329, 还 -> 还, 34 -> 327, 行 -> 行星, 附 -> 附近, 3 -> 330, 有 -> 有-06))),[Ljava.lang.String;@1a6c1270,Annotation([Ljava.lang.String;@18a136ac,[Ljava.lang.String;@77d67cf3,[Ljava.lang.String;@6dee4f1b),Annotation([Ljava.lang.String;@176b3f44,[Ljava.lang.String;@6ee6f53,[Ledu.cmu.lti.nlp.amr.Dependency;@421bba99),Annotation([Ljava.lang.String;@5d12a356,[Ljava.lang.String;@134d26af,[Ljava.lang.String;@66ac5762),Annotation([Ljava.lang.String;@797cf65c,[Ljava.lang.String;@31bcf236,[Ledu.cmu.lti.nlp.amr.Entity;@4b3ed2f0))
AMR:
(32 / 329, mod, 33 / 328)
(33 / 328, mod, 34 / 327)
(34 / 327, mod, 35 / 326)
(35 / 326, mod, 有 / 有-06)
(36 / 325, mod, 有 / 有-06)
(宇 / 宇宙, mod, 附 / 附近)
(有 / 有-06, manner, 还 / 还)
(有 / 有-06, time, 宇 / 宇宙)
(等 / 等-01, degree, 几 / 几)
(等 / 等-01, location, 3 / 330)
(等 / 等-01, location, 32 / 329)
(行 / 行星, mod, 小 / 小)
(行 / 行星, mod, 等 / 等-01)
(附 / 附近, mod, 在 / 在-01)

Decoded in 65,708 microseconds
Sentence: 他 就 开始 访问 这 几 颗 星球 ， 想 在 那里 找 点 事 干 ， 并且 学习 学习 。

Spans:
Span 14-15:  事 => 事
Span 0-1:  他 => 他
Span 5-6:  几 => 几
Span 10-11:  在 => 在-01
Span 19-20:  学习 => 学习-01
Span 18-19:  学习 => 学习-01
Span 1-2:  就 => 就-01
Span 15-16:  干 => (thing :arg1-of 干-01)
Span 2-3:  开始 => 开始
Span 9-10:  想 => 想-05
Span 12-13:  找 => 找-01
Span 7-8:  星球 => 星球
Span 13-14:  点 => 点
Span 3-4:  访问 => 访问
Span 4-5:  这 => 这
Span 11-12:  那里 => 那里

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 第一 颗 星球 上 住 着 一 个 国王 。

Spans:
Span 4-5:  住 => 住-01
Span 8-9:  国王 => 国王
Span 2-3:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  住 => 住-01
Oracle Span 8-9:  国王 => 国王
Oracle Span 2-3:  星球 => 星球

Dependencies:
1	第一	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	星球	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	5	loc	_	_
5	住	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	国王	_	NN	NN	_	5	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 住-01, arg0, x2 / 国王)
(x0 / 住-01, arg1, x5 / 星球)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),国王,国王,false), Span(4,5,List(1),住,住-01,false), Span(2,3,List(2),星球,星球,false)),Map(2 -> 星球, 1 -> 住-01, 0 -> 国王),Map(星 -> 星球, 国 -> 国王, 住 -> 住-01))),[Ljava.lang.String;@517d4a0d,Annotation([Ljava.lang.String;@7862f56,[Ljava.lang.String;@3a12c404,[Ljava.lang.String;@1941a8ff),Annotation([Ljava.lang.String;@22d7b4f8,[Ljava.lang.String;@149dd36b,[Ledu.cmu.lti.nlp.amr.Dependency;@38831718),Annotation([Ljava.lang.String;@2c1156a7,[Ljava.lang.String;@33fe57a9,[Ljava.lang.String;@4982cc36),Annotation([Ljava.lang.String;@691939c9,[Ljava.lang.String;@4f1bfe23,[Ledu.cmu.lti.nlp.amr.Entity;@e19bb76))
AMR:
(住 / 住-01, op, 星 / 星球)
(住 / 住-01, prep-for, 国 / 国王)

Decoded in 7,192 microseconds
Sentence: 国王 穿 着 用 紫红色 和 白 底 黑 花 的 毛皮 做成 的 大 礼服 ， 坐 在 一 个 很 简单 却 又 十分 威严 的 宝座 上 。

Spans:
Span 12-13:  做成 => 做成-02
Span 25-26:  十分 => 十分
Span 24-25:  又 => 又
Span 0-1:  国王 => 国王
Span 18-19:  在 => 在-01
Span 17-18:  坐 => 坐-03
Span 14-15:  大 => 大
Span 26-27:  威严 => 威严-01
Span 28-29:  宝座 => 宝座
Span 21-22:  很 => 很
Span 11-12:  毛皮 => 毛皮
Span 3-4:  用 => 用
Span 15-16:  礼服 => 礼服
Span 1-2:  穿 => 穿-01
Span 22-23:  简单 => 简单-01
Span 4-5:  紫红色 => 紫红色
Span 9-10:  花 => 花-01
Span 8-9:  黑 => 黑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  做成 => 做成-02
Oracle Span 25-26:  十分 => 十分
Oracle Span 0-1:  国王 => 国王
Oracle Span 17-18:  坐 => 坐-01
Oracle Span 14-15:  大 => 大-01
Oracle Span 26-27:  威严 => 威严-01
Oracle Span 28-29:  宝座 => 宝座
Oracle Span 21-22:  很 => 很
Oracle Span 11-12:  毛皮 => 毛皮
Oracle Span 15-16:  礼服 => 礼服
Oracle Span 1-2:  穿 => 穿-01
Oracle Span 22-23:  简单 => 简单-01
Oracle Span 4-5:  紫红色 => 紫红色

Extra span: 又 => 又
Extra span: 在 => 在-01
Incorrect span: 坐 => 坐-03
Incorrect span: 大 => 大
Extra span: 花 => 花-01
Extra span: 黑 => 黑-01
Extra span: 用 => 用
Missing span: 大 => 大-01
Missing span: 坐 => 坐-01
Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	穿	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	用	_	P	P	_	16	assmod	_	_
5	紫红色	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	白	_	NR	NR	_	8	lobj	_	_
8	底	_	LC	LC	_	10	dep	_	_
9	黑	_	JJ	JJ	_	10	amod	_	_
10	花	_	NN	NN	_	13	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	毛皮	_	NN	NN	_	13	nn	_	_
13	做成	_	NN	NN	_	4	pobj	_	_
14	的	_	DEG	DEG	_	4	assm	_	_
15	大	_	JJ	JJ	_	16	amod	_	_
16	礼服	_	NN	NN	_	2	dobj	_	_
17	,	_	PU	PU	_	2	punct	_	_
18	坐	_	VV	VV	_	2	conj	_	_
19	在	_	P	P	_	18	prep	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	个	_	M	M	_	29	clf	_	_
22	很	_	AD	AD	_	23	advmod	_	_
23	简单	_	VA	VA	_	29	rcmod	_	_
24	却	_	AD	AD	_	27	advmod	_	_
25	又	_	AD	AD	_	27	advmod	_	_
26	十分	_	AD	AD	_	27	advmod	_	_
27	威严	_	VA	VA	_	23	dep	_	_
28	的	_	DEC	DEC	_	23	cpm	_	_
29	宝座	_	NN	NN	_	30	lobj	_	_
30	上	_	LC	LC	_	19	plmod	_	_
31	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 毛皮, mod, x13 / 紫红色)
(x14 / 坐-01, arg1, x16 / 宝座)
(x16 / 宝座, mod, x17 / 简单-01)
(x16 / 宝座, mod, x19 / 威严-01)
(x17 / 简单-01, degree, x18 / 很)
(x19 / 威严-01, degree, x20 / 十分)
(x2 / 穿-01, arg0, x3 / 国王)
(x2 / 穿-01, arg1, x4 / 礼服)
(x4 / 礼服, mod, x5 / 大-01)
(x8 / 做成-02, arg1, x10 / 毛皮)
(x8 / 做成-02, arg2, x4 / 礼服)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),宝座,宝座,false), Span(26,27,List(1),威严,威严-01,false), Span(25,26,List(2),十分,十分,false), Span(24,25,List(3),又,又,false), Span(22,23,List(4),简单,简单-01,false), Span(21,22,List(5),很,很,false), Span(18,19,List(6),在,在-01,false), Span(17,18,List(7),坐,坐-03,false), Span(15,16,List(8),礼服,礼服,false), Span(14,15,List(9),大,大,false), Span(12,13,List(10),做成,做成-02,false), Span(11,12,List(11),毛皮,毛皮,false), Span(9,10,List(12),花,花-01,false), Span(8,9,List(13),黑,黑-01,false), Span(4,5,List(14),紫红色,紫红色,false), Span(3,4,List(15),用,用,false), Span(1,2,List(16),穿,穿-01,false), Span(0,1,List(17),国王,国王,false)),Map(2 -> 十分, 5 -> 很, 12 -> 花-01, 15 -> 用, 8 -> 礼服, 7 -> 坐-03, 17 -> 国王, 1 -> 威严-01, 4 -> 简单-01, 11 -> 毛皮, 14 -> 紫红色, 6 -> 在-01, 0 -> 宝座, 9 -> 大, 16 -> 穿-01, 3 -> 又, 10 -> 做成-02, 13 -> 黑-01),Map(礼 -> 礼服, 穿 -> 穿-01, 又 -> 又, 在 -> 在-01, 用 -> 用, 简 -> 简单-01, 十 -> 十分, 紫 -> 紫红色, 毛 -> 毛皮, 很 -> 很, 大 -> 大, 威 -> 威严-01, 花 -> 花-01, 国 -> 国王, 宝 -> 宝座, 做 -> 做成-02, 坐 -> 坐-03, 黑 -> 黑-01))),[Ljava.lang.String;@512535ff,Annotation([Ljava.lang.String;@71529963,[Ljava.lang.String;@61a88b8c,[Ljava.lang.String;@22295ec4),Annotation([Ljava.lang.String;@5adb0db3,[Ljava.lang.String;@3f270e0a,[Ledu.cmu.lti.nlp.amr.Dependency;@1a760689),Annotation([Ljava.lang.String;@7241a47d,[Ljava.lang.String;@70f59913,[Ljava.lang.String;@77258e59),Annotation([Ljava.lang.String;@5dcd8c7a,[Ljava.lang.String;@2250b9f2,[Ledu.cmu.lti.nlp.amr.Entity;@7e3181aa))
AMR:
(做 / 做成-02, ARG0, 礼 / 礼服)
(做 / 做成-02, ARG4, 黑 / 黑-01)
(在 / 在-01, ARG5, 坐 / 坐-03)
(威 / 威严-01, degree, 十 / 十分)
(威 / 威严-01, manner, 又 / 又)
(宝 / 宝座, manner, 在 / 在-01)
(宝 / 宝座, mod, 威 / 威严-01)
(宝 / 宝座, mod, 简 / 简单-01)
(毛 / 毛皮, mod, 花 / 花-01)
(用 / 用, prep-at, 做 / 做成-02)
(礼 / 礼服, accompanier, 在 / 在-01)
(礼 / 礼服, mod, 大 / 大)
(穿 / 穿-01, ARG4, 用 / 用)
(穿 / 穿-01, manner, 国 / 国王)
(简 / 简单-01, degree, 很 / 很)
(紫 / 紫红色, manner, 用 / 用)
(花 / 花-01, ARG5, 黑 / 黑-01)

Decoded in 98,589 microseconds
Sentence: “ 啊 ，

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@253d9f73,Annotation([Ljava.lang.String;@142269f2,[Ljava.lang.String;@331acdad,[Ljava.lang.String;@41d426b5),Annotation([Ljava.lang.String;@8dbfffb,[Ljava.lang.String;@f316aeb,[Ledu.cmu.lti.nlp.amr.Dependency;@6aa3a905),Annotation([Ljava.lang.String;@a22cb6a,[Ljava.lang.String;@5dd1c9f2,[Ljava.lang.String;@59b38691),Annotation([Ljava.lang.String;@2e2ff723,[Ljava.lang.String;@324a0017,[Ledu.cmu.lti.nlp.amr.Entity;@6187d1f5))
AMR:


Decoded in 1,603 microseconds
Sentence: 来 了 一 个 臣民 。 ” 当 他 看见 小 王子 时 ， 喊 了 起来 ：

Spans:
Span 8-9:  他 => 他
Span 14-15:  喊 => 喊-01
Span 10-11:  小 => 小
Span 7-8:  当 => 当-04
Span 0-1:  来 => 来-06
Span 11-12:  王子 => 王子
Span 9-10:  看见 => 看见-01
Span 4-5:  臣民 => 臣民

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  他 => 他
Oracle Span 14-15:  喊 => 喊-01
Oracle Span 10-11:  小 => 小-01
Oracle Span 0-1:  来 => 来-06
Oracle Span 11-12:  王子 => 王子
Oracle Span 9-10:  看见 => 看见-01
Oracle Span 4-5:  臣民 => 臣民

Incorrect span: 小 => 小
Extra span: 当 => 当-04
Missing span: 小 => 小-01
Dependencies:
1	来	_	VV	VV	_	15	nsubj	_	_
2	了	_	VV	VV	_	5	nsubj	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	nsubj	_	_
5	臣民	_	VV	VV	_	1	dobj	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	1	punct	_	_
8	当	_	P	P	_	15	prep	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	看见	_	VV	VV	_	13	lccomp	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	10	dobj	_	_
13	时	_	LC	LC	_	8	plmod	_	_
14	,	_	PU	PU	_	15	punct	_	_
15	喊	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	起来	_	VV	VV	_	15	conj	_	_
18	：	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 喊-01, arg0, x2 / 他)
(x0 / 喊-01, arg1, x3 / 来-06)
(x0 / 喊-01, time, x6 / 看见-01)
(x3 / 来-06, arg0, x4 / 臣民)
(x6 / 看见-01, arg1, x8 / 王子)
(x8 / 王子, mod, x9 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),喊,喊-01,false), Span(11,12,List(1),王子,王子,false), Span(10,11,List(2),小,小,false), Span(9,10,List(3),看见,看见-01,false), Span(8,9,List(4),他,他,false), Span(7,8,List(5),当,当-04,false), Span(4,5,List(6),臣民,臣民,false), Span(0,1,List(7),来,来-06,false)),Map(2 -> 小, 5 -> 当-04, 7 -> 来-06, 1 -> 王子, 4 -> 他, 6 -> 臣民, 0 -> 喊-01, 3 -> 看见-01),Map(来 -> 来-06, 王 -> 王子, 臣 -> 臣民, 他 -> 他, 小 -> 小, 看 -> 看见-01, 喊 -> 喊-01, 当 -> 当-04))),[Ljava.lang.String;@2445445a,Annotation([Ljava.lang.String;@7502291e,[Ljava.lang.String;@17aad511,[Ljava.lang.String;@487db668),Annotation([Ljava.lang.String;@46944ca9,[Ljava.lang.String;@22bac7bc,[Ledu.cmu.lti.nlp.amr.Dependency;@63798ca7),Annotation([Ljava.lang.String;@4612b856,[Ljava.lang.String;@22875539,[Ljava.lang.String;@5674e1f2),Annotation([Ljava.lang.String;@79c7532f,[Ljava.lang.String;@2a448449,[Ledu.cmu.lti.nlp.amr.Entity;@32f232a5))
AMR:
(喊 / 喊-01, time, 王 / 王子)
(喊 / 喊-01, time, 看 / 看见-01)
(小 / 小, time, 看 / 看见-01)
(来 / 来-06, prep-through, 臣 / 臣民)
(看 / 看见-01, time, 他 / 他)
(看 / 看见-01, time, 当 / 当-04)
(臣 / 臣民, source, 当 / 当-04)

Decoded in 20,468 microseconds
Sentence: 小 王子 思量 着 ： “ 他 从来 也 没有 见 过 我 ， 怎么 会 认识 我 呢 ？ ”

Spans:
Span 8-9:  也 => 也
Span 7-8:  从来 => 从来
Span 6-7:  他 => 他
Span 15-16:  会 => 会-03
Span 0-1:  小 => 小
Span 14-15:  怎么 => 怎么
Span 2-3:  思量 => 思量-01
Span 17-18:  我 => 我
Span 12-13:  我 => 我
Span 1-2:  王子 => 王子
Span 10-11:  见 => 见-01
Span 16-17:  认识 => 认识-01
Span 11-12:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 7-8:  从来 => 从来
Oracle Span 6-7:  他 => 他
Oracle Span 15-16:  会 => 会-02
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  思量 => 思量
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  见 => 见-01
Oracle Span 16-17:  认识 => 认识-01

Extra span: 我 => 我
Incorrect span: 会 => 会-03
Extra span: 怎么 => 怎么
Extra span: 我 => 我
Extra span: 过 => 过-01
Incorrect span: 思量 => 思量-01
Incorrect span: 小 => 小
Missing span: 思量 => 思量
Missing span: 会 => 会-02
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	思量	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	：	_	PU	PU	_	3	punct	_	_
6	“	_	PU	PU	_	11	punct	_	_
7	他	_	PN	PN	_	11	nsubj	_	_
8	从来	_	AD	AD	_	11	advmod	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	没有	_	VV	VV	_	11	neg	_	_
11	见	_	VV	VV	_	3	dep	_	_
12	过	_	AS	AS	_	11	asp	_	_
13	我	_	PN	PN	_	11	dobj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	怎么	_	AD	AD	_	17	advmod	_	_
16	会	_	VV	VV	_	17	mmod	_	_
17	认识	_	VV	VV	_	3	conj	_	_
18	我	_	PN	PN	_	17	dobj	_	_
19	呢	_	SP	SP	_	3	dep	_	_
20	？	_	PU	PU	_	3	punct	_	_
21	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 思量, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x25 / 见-01, arg0, x27 / 他)
(x25 / 见-01, manner, x29 / 也)
(x25 / 见-01, manner, x30 / 从来)
(x32 / 会-02, arg0, x33 / 认识-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),我,我,false), Span(16,17,List(1),认识,认识-01,false), Span(15,16,List(2),会,会-03,false), Span(14,15,List(3),怎么,怎么,false), Span(12,13,List(4),我,我,false), Span(11,12,List(5),过,过-01,false), Span(10,11,List(6),见,见-01,false), Span(8,9,List(7),也,也,false), Span(7,8,List(8),从来,从来,false), Span(6,7,List(9),他,他,false), Span(2,3,List(10),思量,思量-01,false), Span(1,2,List(11),王子,王子,false), Span(0,1,List(12),小,小,false)),Map(2 -> 会-03, 5 -> 过-01, 12 -> 小, 8 -> 从来, 7 -> 也, 1 -> 认识-01, 4 -> 我, 11 -> 王子, 6 -> 见-01, 0 -> 我, 9 -> 他, 3 -> 怎么, 10 -> 思量-01),Map(从 -> 从来, 我 -> 我, 也 -> 也, 过 -> 过-01, 王 -> 王子, 我2 -> 我, 认 -> 认识-01, 他 -> 他, 思 -> 思量-01, 小 -> 小, 怎 -> 怎么, 会 -> 会-03, 见 -> 见-01))),[Ljava.lang.String;@43f82e78,Annotation([Ljava.lang.String;@e54303,[Ljava.lang.String;@e8df99a,[Ljava.lang.String;@2dc995f4),Annotation([Ljava.lang.String;@2f40e5db,[Ljava.lang.String;@517566b,[Ledu.cmu.lti.nlp.amr.Dependency;@64b73e7a),Annotation([Ljava.lang.String;@530712d,[Ljava.lang.String;@2df6226d,[Ljava.lang.String;@12ed9db6),Annotation([Ljava.lang.String;@4ff4357f,[Ljava.lang.String;@49cb9cb5,[Ledu.cmu.lti.nlp.amr.Entity;@55322aab))
AMR:
(会 / 会-03, ARG6, 认 / 认识-01)
(会 / 会-03, location, 怎 / 怎么)
(思 / 思量-01, purpose, 他 / 他)
(思 / 思量-01, value, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(见 / 见-01, manner, 也 / 也)
(见 / 见-01, manner, 从 / 从来)
(见 / 见-01, manner, 思 / 思量-01)
(见 / 见-01, purpose, 过 / 过-01)
(认 / 认识-01, subset, 我 / 我)
(过 / 过-01, ARG6, 我2 / 我)
(过 / 过-01, purpose, 会 / 会-03)

Decoded in 52,523 microseconds
Sentence: 他 哪里 知道 ， 在 那些 国王 的 眼 里 ， 世界 是 非常 简单 的 ：

Spans:
Span 11-12:  世界 => 世界
Span 0-1:  他 => 他
Span 6-7:  国王 => 国王
Span 4-5:  在 => 在-01
Span 12-13:  是 => 是-04
Span 8-9:  眼 => 眼
Span 2-3:  知道 => 知道-01
Span 14-15:  简单 => 简单-01
Span 5-6:  那些 => 那些
Span 13-14:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  世界 => 世界
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  国王 => 国王
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 14-15:  简单 => 简单-01
Oracle Span 5-6:  那些 => 那些
Oracle Span 13-14:  非常 => 非常-01

Incorrect span: 非常 => 非常
Extra span: 是 => 是-04
Extra span: 眼 => 眼
Extra span: 在 => 在-01
Missing span: 非常 => 非常-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	哪里	_	AD	AD	_	3	advmod	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	在	_	P	P	_	13	prep	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	国王	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	眼	_	NN	NN	_	10	lobj	_	_
10	里	_	LC	LC	_	5	plmod	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	世界	_	NN	NN	_	13	top	_	_
13	是	_	VC	VC	_	3	ccomp	_	_
14	非常	_	AD	AD	_	15	advmod	_	_
15	简单	_	VA	VA	_	13	attr	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	：	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 他)
(x0 / 知道-01, arg1, x12 / 简单-01)
(x12 / 简单-01, arg0, x14 / 世界)
(x12 / 简单-01, beneficiary, x15 / 国王)
(x12 / 简单-01, degree, x13 / 非常-01)
(x15 / 国王, mod, x16 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),简单,简单-01,false), Span(13,14,List(1),非常,非常,false), Span(12,13,List(2),是,是-04,false), Span(11,12,List(3),世界,世界,false), Span(8,9,List(4),眼,眼,false), Span(6,7,List(5),国王,国王,false), Span(5,6,List(6),那些,那些,false), Span(4,5,List(7),在,在-01,false), Span(2,3,List(8),知道,知道-01,false), Span(0,1,List(9),他,他,false)),Map(2 -> 是-04, 5 -> 国王, 8 -> 知道-01, 7 -> 在-01, 1 -> 非常, 4 -> 眼, 6 -> 那些, 9 -> 他, 0 -> 简单-01, 3 -> 世界),Map(在 -> 在-01, 简 -> 简单-01, 眼 -> 眼, 他 -> 他, 国 -> 国王, 世 -> 世界, 非 -> 非常, 知 -> 知道-01, 那 -> 那些, 是 -> 是-04))),[Ljava.lang.String;@2b4c1d96,Annotation([Ljava.lang.String;@45fd9a4d,[Ljava.lang.String;@50468873,[Ljava.lang.String;@146587a2),Annotation([Ljava.lang.String;@5f0e9815,[Ljava.lang.String;@76884e4b,[Ledu.cmu.lti.nlp.amr.Dependency;@126945f9),Annotation([Ljava.lang.String;@2a898881,[Ljava.lang.String;@16c63f5,[Ljava.lang.String;@35229f85),Annotation([Ljava.lang.String;@6d3c5255,[Ljava.lang.String;@b1712f3,[Ledu.cmu.lti.nlp.amr.Entity;@6986bbaf))
AMR:
(国 / 国王, mod, 那 / 那些)
(是 / 是-04, degree, 非 / 非常)
(是 / 是-04, location, 世 / 世界)
(是 / 是-04, time, 眼 / 眼)
(眼 / 眼, mod, 在 / 在-01)
(知 / 知道-01, prep-following, 他 / 他)
(知 / 知道-01, subevent, 在 / 在-01)
(简 / 简单-01, degree, 非 / 非常)
(那 / 那些, mod, 在 / 在-01)

Decoded in 31,790 microseconds
Sentence: 所有 的 人 都 是 臣民 。

Spans:
Span 2-3:  人 => 人
Span 0-1:  所有 => 所有
Span 4-5:  是 => 是-04
Span 5-6:  臣民 => 臣民
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  人 => 人
Oracle Span 0-1:  所有 => 所有
Oracle Span 5-6:  臣民 => 臣民
Oracle Span 3-4:  都 => 都

Extra span: 是 => 是-04
Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	人	_	NN	NN	_	5	nsubj	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	臣民	_	NN	NN	_	5	attr	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 臣民, domain, x2 / 人)
(x0 / 臣民, manner, x4 / 都)
(x2 / 人, mod, x3 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),臣民,臣民,false), Span(4,5,List(1),是,是-04,false), Span(3,4,List(2),都,都,false), Span(2,3,List(3),人,人,false), Span(0,1,List(4),所有,所有,false)),Map(2 -> 都, 1 -> 是-04, 4 -> 所有, 0 -> 臣民, 3 -> 人),Map(臣 -> 臣民, 所 -> 所有, 都 -> 都, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@4879dfad,Annotation([Ljava.lang.String;@4758820d,[Ljava.lang.String;@74eb909f,[Ljava.lang.String;@28ec166e),Annotation([Ljava.lang.String;@2eee3069,[Ljava.lang.String;@2da59753,[Ledu.cmu.lti.nlp.amr.Dependency;@5629510),Annotation([Ljava.lang.String;@4df5bcb4,[Ljava.lang.String;@12c7a01b,[Ljava.lang.String;@13d9b21f),Annotation([Ljava.lang.String;@2826f61,[Ljava.lang.String;@62727399,[Ledu.cmu.lti.nlp.amr.Entity;@4d9ac0b4))
AMR:
(人 / 人, mod, 所 / 所有)
(是 / 是-04, manner, 都 / 都)
(臣 / 臣民, domain, 人 / 人)
(臣 / 臣民, manner, 都 / 都)

Decoded in 9,680 microseconds
Sentence: 国王 十分 骄傲 ， 因为 他 终于 成 了 某个 人 的 国王 ， 他 对 小 王子 说道 ： “ 靠近 些 ， 好 让 我 好好 看看 你 。 ”

Spans:
Span 22-23:  些 => 些
Span 10-11:  人 => 人
Span 14-15:  他 => 他
Span 5-6:  他 => 他
Span 29-30:  你 => 你
Span 1-2:  十分 => 十分
Span 12-13:  国王 => 国王
Span 0-1:  国王 => 国王
Span 24-25:  好 => 好-04
Span 27-28:  好好 => 好好-01
Span 15-16:  对 => 对-02
Span 16-17:  小 => 小
Span 7-8:  成 => 成-01
Span 26-27:  我 => 我
Span 9-10:  某个 => 某个
Span 17-18:  王子 => 王子
Span 28-29:  看看 => 看看-01
Span 6-7:  终于 => 终于
Span 25-26:  让 => 让-01
Span 18-19:  说道 => 说道
Span 21-22:  靠近 => 靠近-02
Span 2-3:  骄傲 => 骄傲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  十分 => 十分
Oracle Span 0-1:  国王 => 国王
Oracle Span 12-13:  国王 => 国王
Oracle Span 27-28:  好好 => 好好-01
Oracle Span 16-17:  小 => 小-01
Oracle Span 7-8:  成 => 成-01
Oracle Span 9-10:  某个 => 某个
Oracle Span 17-18:  王子 => 王子
Oracle Span 6-7:  终于 => 终于
Oracle Span 25-26:  让 => 让-02
Oracle Span 18-19:  说道 => 说道-01
Oracle Span 21-22:  靠近 => 靠近-02
Oracle Span 2-3:  骄傲 => 骄傲-01

Extra span: 你 => 你
Extra span: 看看 => 看看-01
Extra span: 我 => 我
Incorrect span: 让 => 让-01
Extra span: 好 => 好-04
Extra span: 些 => 些
Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Extra span: 对 => 对-02
Extra span: 他 => 他
Incorrect span: 骄傲 => 骄傲
Missing span: 骄傲 => 骄傲-01
Missing span: 说道 => 说道-01
Missing span: 让 => 让-02
Missing span: 小 => 小-01
Dependencies:
1	国王	_	NN	NN	_	3	nsubj	_	_
2	十分	_	AD	AD	_	3	advmod	_	_
3	骄傲	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	因为	_	P	P	_	19	prep	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	终于	_	AD	AD	_	8	advmod	_	_
8	成	_	VV	VV	_	5	pccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	某个	_	CD	CD	_	11	nummod	_	_
11	人	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	国王	_	NN	NN	_	8	dobj	_	_
14	,	_	PU	PU	_	19	punct	_	_
15	他	_	PN	PN	_	19	nsubj	_	_
16	对	_	P	P	_	19	prep	_	_
17	小	_	JJ	JJ	_	18	amod	_	_
18	王子	_	NN	NN	_	16	pobj	_	_
19	说道	_	VV	VV	_	3	ccomp	_	_
20	：	_	PU	PU	_	19	punct	_	_
21	“	_	PU	PU	_	23	punct	_	_
22	靠近	_	CD	CD	_	23	nummod	_	_
23	些	_	M	M	_	19	ccomp	_	_
24	,	_	PU	PU	_	19	punct	_	_
25	好	_	VA	VA	_	19	conj	_	_
26	让	_	VV	VV	_	19	dep	_	_
27	我	_	PN	PN	_	26	dobj	_	_
28	好好	_	AD	AD	_	29	advmod	_	_
29	看看	_	VV	VV	_	26	dep	_	_
30	你	_	PN	PN	_	29	dobj	_	_
31	。	_	PU	PU	_	3	punct	_	_
32	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 说道-01, arg1, x15 / 靠近-02)
(x11 / 说道-01, arg2, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x15 / 靠近-02, purpose, x18 / 让-02)
(x2 / 骄傲-01, arg0, x4 / 国王)
(x2 / 骄傲-01, arg1, x5 / 成-01)
(x2 / 骄傲-01, degree, x3 / 十分)
(x5 / 成-01, arg0, x6 / 他)
(x5 / 成-01, arg1, x7 / 国王)
(x5 / 成-01, manner, x10 / 终于)
(x7 / 国王, poss, x8 / 人)
(x8 / 人, mod, x9 / 某个)

Input(Some(Graph(null,ArrayBuffer(Span(29,30,List(0),你,你,false), Span(28,29,List(1),看看,看看-01,false), Span(27,28,List(2),好好,好好-01,false), Span(26,27,List(3),我,我,false), Span(25,26,List(4),让,让-01,false), Span(24,25,List(5),好,好-04,false), Span(22,23,List(6),些,些,false), Span(21,22,List(7),靠近,靠近-02,false), Span(18,19,List(8),说道,说道,false), Span(17,18,List(9),王子,王子,false), Span(16,17,List(10),小,小,false), Span(15,16,List(11),对,对-02,false), Span(14,15,List(12),他,他,false), Span(12,13,List(13),国王,国王,false), Span(10,11,List(14),人,人,false), Span(9,10,List(15),某个,某个,false), Span(7,8,List(16),成,成-01,false), Span(6,7,List(17),终于,终于,false), Span(5,6,List(18),他,他,false), Span(2,3,List(19),骄傲,骄傲,false), Span(1,2,List(20),十分,十分,false), Span(0,1,List(21),国王,国王,false)),Map(2 -> 好好-01, 5 -> 好-04, 12 -> 他, 15 -> 某个, 8 -> 说道, 21 -> 国王, 18 -> 他, 7 -> 靠近-02, 17 -> 终于, 1 -> 看看-01, 4 -> 让-01, 11 -> 对-02, 14 -> 人, 20 -> 十分, 6 -> 些, 0 -> 你, 9 -> 王子, 16 -> 成-01, 19 -> 骄傲, 3 -> 我, 10 -> 小, 13 -> 国王),Map(靠 -> 靠近-02, 他2 -> 他, 骄 -> 骄傲, 些 -> 些, 我 -> 我, 十 -> 十分, 终 -> 终于, 王 -> 王子, 你 -> 你, 某 -> 某个, 他 -> 他, 小 -> 小, 成 -> 成-01, 好2 -> 好-04, 国 -> 国王, 说 -> 说道, 好 -> 好好-01, 国2 -> 国王, 看 -> 看看-01, 让 -> 让-01, 人 -> 人, 对 -> 对-02))),[Ljava.lang.String;@130dca52,Annotation([Ljava.lang.String;@2654635,[Ljava.lang.String;@737a135b,[Ljava.lang.String;@687ef2e0),Annotation([Ljava.lang.String;@15dcfae7,[Ljava.lang.String;@3da05287,[Ledu.cmu.lti.nlp.amr.Dependency;@1e636ea3),Annotation([Ljava.lang.String;@115667d,[Ljava.lang.String;@736caf7a,[Ljava.lang.String;@4ce7fffa),Annotation([Ljava.lang.String;@497486b3,[Ljava.lang.String;@63f8276e,[Ledu.cmu.lti.nlp.amr.Entity;@75f95314))
AMR:
(些 / 些, mod, 靠 / 靠近-02)
(人 / 人, mod, 某 / 某个)
(国 / 国王, poss, 人 / 人)
(国 / 国王, prep-against, 对 / 对-02)
(国2 / 国王, mod, 骄 / 骄傲)
(好 / 好好-01, domain, 我 / 我)
(好 / 好好-01, name, 看 / 看看-01)
(好 / 好好-01, time, 让 / 让-01)
(对 / 对-02, topic, 他 / 他)
(小 / 小, mod, 对 / 对-02)
(成 / 成-01, manner, 终 / 终于)
(成 / 成-01, mod, 骄 / 骄傲)
(成 / 成-01, topic, 他2 / 他)
(某 / 某个, domain, 成 / 成-01)
(王 / 王子, mod, 小 / 小)
(看 / 看看-01, name, 你 / 你)
(让 / 让-01, degree, 好2 / 好-04)
(说 / 说道, mod, 王 / 王子)
(靠 / 靠近-02, domain, 说 / 说道)
(靠 / 靠近-02, purpose, 好2 / 好-04)
(骄 / 骄傲, degree, 十 / 十分)

Decoded in 143,942 microseconds
Sentence: 小 王子 看看 四周 ， 想 找 个 地方 坐 下来 ， 可是 整个 星球 被 国王 华丽 的 白 底 黑 花 皮袍 占满 了 。

Spans:
Span 10-11:  下来 => 下来-02
Span 17-18:  华丽 => 华丽-01
Span 3-4:  四周 => 四周
Span 16-17:  国王 => 国王
Span 8-9:  地方 => 地方
Span 9-10:  坐 => 坐-03
Span 0-1:  小 => 小
Span 5-6:  想 => 想-05
Span 6-7:  找 => 找-01
Span 13-14:  整个 => 整个
Span 14-15:  星球 => 星球
Span 1-2:  王子 => 王子
Span 23-24:  皮袍 => 皮袍
Span 2-3:  看看 => 看看-01
Span 22-23:  花 => 花-01
Span 21-22:  黑 => 黑-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  华丽 => 华丽-01
Oracle Span 3-4:  四周 => 四周
Oracle Span 16-17:  国王 => 国王
Oracle Span 8-9:  地方 => 地方
Oracle Span 9-10:  坐 => 坐-03
Oracle Span 0-1:  小 => 小
Oracle Span 5-6:  想 => 想-02
Oracle Span 6-7:  找 => 找-01
Oracle Span 13-14:  整个 => 整个
Oracle Span 14-15:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 23-24:  皮袍 => 皮袍

Extra span: 花 => 花-01
Extra span: 黑 => 黑-01
Extra span: 下来 => 下来-02
Incorrect span: 想 => 想-05
Extra span: 看看 => 看看-01
Missing span: 想 => 想-02
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	看看	_	VV	VV	_	0	root	_	_
4	四周	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	想	_	VV	VV	_	3	conj	_	_
7	找	_	VV	VV	_	6	ccomp	_	_
8	个	_	M	M	_	9	dep	_	_
9	地方	_	NN	NN	_	7	dobj	_	_
10	坐	_	VV	VV	_	6	dep	_	_
11	下来	_	VV	VV	_	10	comod	_	_
12	,	_	PU	PU	_	3	punct	_	_
13	可是	_	AD	AD	_	25	advmod	_	_
14	整个	_	JJ	JJ	_	15	amod	_	_
15	星球	_	NN	NN	_	25	nsubjpass	_	_
16	被	_	LB	LB	_	25	pass	_	_
17	国王	_	NN	NN	_	18	nn	_	_
18	华丽	_	NN	NN	_	23	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	白	_	JJ	JJ	_	21	amod	_	_
21	底	_	NN	NN	_	23	nn	_	_
22	黑	_	JJ	JJ	_	23	amod	_	_
23	花	_	NN	NN	_	25	nsubj	_	_
24	皮袍	_	AD	AD	_	25	advmod	_	_
25	占满	_	VV	VV	_	3	conj	_	_
26	了	_	AS	AS	_	25	asp	_	_
27	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 皮袍, mod, x17 / 华丽-01)
(x15 / 皮袍, poss, x18 / 国王)
(x21 / 星球, mod, x22 / 整个)
(x4 / 王子, mod, x25 / 小)
(x6 / 想-02, arg1, x8 / 找-01)
(x8 / 找-01, arg1, x10 / 地方)
(x8 / 找-01, arg2, x11 / 坐-03)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),皮袍,皮袍,false), Span(22,23,List(1),花,花-01,false), Span(21,22,List(2),黑,黑-01,false), Span(17,18,List(3),华丽,华丽-01,false), Span(16,17,List(4),国王,国王,false), Span(14,15,List(5),星球,星球,false), Span(13,14,List(6),整个,整个,false), Span(10,11,List(7),下来,下来-02,false), Span(9,10,List(8),坐,坐-03,false), Span(8,9,List(9),地方,地方,false), Span(6,7,List(10),找,找-01,false), Span(5,6,List(11),想,想-05,false), Span(3,4,List(12),四周,四周,false), Span(2,3,List(13),看看,看看-01,false), Span(1,2,List(14),王子,王子,false), Span(0,1,List(15),小,小,false)),Map(2 -> 黑-01, 5 -> 星球, 12 -> 四周, 15 -> 小, 8 -> 坐-03, 7 -> 下来-02, 1 -> 花-01, 4 -> 国王, 11 -> 想-05, 14 -> 王子, 6 -> 整个, 0 -> 皮袍, 9 -> 地方, 3 -> 华丽-01, 10 -> 找-01, 13 -> 看看-01),Map(四 -> 四周, 星 -> 星球, 王 -> 王子, 整 -> 整个, 下 -> 下来-02, 小 -> 小, 地 -> 地方, 花 -> 花-01, 国 -> 国王, 皮 -> 皮袍, 看 -> 看看-01, 坐 -> 坐-03, 找 -> 找-01, 想 -> 想-05, 黑 -> 黑-01, 华 -> 华丽-01))),[Ljava.lang.String;@6127a7e,Annotation([Ljava.lang.String;@6bbe2511,[Ljava.lang.String;@495fac5f,[Ljava.lang.String;@76012793),Annotation([Ljava.lang.String;@635572a7,[Ljava.lang.String;@79d94571,[Ledu.cmu.lti.nlp.amr.Dependency;@4dd02341),Annotation([Ljava.lang.String;@3212a8d7,[Ljava.lang.String;@7a1a3478,[Ljava.lang.String;@495b0487),Annotation([Ljava.lang.String;@55dfcc6,[Ljava.lang.String;@222eb8aa,[Ledu.cmu.lti.nlp.amr.Entity;@93cf163))
AMR:
(坐 / 坐-03, direction, 下 / 下来-02)
(想 / 想-05, prep-along-with, 找 / 找-01)
(找 / 找-01, ARG0, 坐 / 坐-03)
(找 / 找-01, ARG3, 看 / 看看-01)
(找 / 找-01, ARG4, 地 / 地方)
(星 / 星球, mod, 整 / 整个)
(星 / 星球, prep-on-behalf, 花 / 花-01)
(王 / 王子, mod, 小 / 小)
(皮 / 皮袍, mod, 华 / 华丽-01)
(皮 / 皮袍, poss, 国 / 国王)
(看 / 看看-01, degree, 星 / 星球)
(看 / 看看-01, direction, 王 / 王子)
(看 / 看看-01, quant, 四 / 四周)
(花 / 花-01, ARG5, 黑 / 黑-01)
(黑 / 黑-01, ARG4, 华 / 华丽-01)

Decoded in 87,886 microseconds
Sentence: 他 只好 站 在 那里 ， 但是 因为 疲倦 了 ， 他 打 起 哈欠 来 。

Spans:
Span 11-12:  他 => 他
Span 0-1:  他 => 他
Span 1-2:  只好 => 只好
Span 3-4:  在 => 在-01
Span 15-16:  来 => 来-06
Span 8-9:  疲倦 => 疲倦-01
Span 2-3:  站 => 站-01
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  只好 => 只好
Oracle Span 8-9:  疲倦 => 疲倦-01
Oracle Span 2-3:  站 => 站-01
Oracle Span 4-5:  那里 => 那里

Extra span: 来 => 来-06
Extra span: 他 => 他
Extra span: 在 => 在-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	只好	_	AD	AD	_	3	advmod	_	_
3	站	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	那里	_	PN	PN	_	4	pobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	但是	_	AD	AD	_	13	advmod	_	_
8	因为	_	P	P	_	13	prep	_	_
9	疲倦	_	VV	VV	_	8	pccomp	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	他	_	PN	PN	_	13	nsubj	_	_
13	打	_	VV	VV	_	3	conj	_	_
14	起	_	VV	VV	_	13	dep	_	_
15	哈欠	_	NT	NT	_	16	lobj	_	_
16	来	_	LC	LC	_	14	loc	_	_
17	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 站-01, arg0, x4 / 他)
(x2 / 站-01, arg1, x5 / 那里)
(x2 / 站-01, manner, x3 / 只好)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),来,来-06,false), Span(11,12,List(1),他,他,false), Span(8,9,List(2),疲倦,疲倦-01,false), Span(4,5,List(3),那里,那里,false), Span(3,4,List(4),在,在-01,false), Span(2,3,List(5),站,站-01,false), Span(1,2,List(6),只好,只好,false), Span(0,1,List(7),他,他,false)),Map(2 -> 疲倦-01, 5 -> 站-01, 7 -> 他, 1 -> 他, 4 -> 在-01, 6 -> 只好, 0 -> 来-06, 3 -> 那里),Map(站 -> 站-01, 疲 -> 疲倦-01, 他2 -> 他, 在 -> 在-01, 来 -> 来-06, 他 -> 他, 只 -> 只好, 那 -> 那里))),[Ljava.lang.String;@1852a3ff,Annotation([Ljava.lang.String;@7203c7ff,[Ljava.lang.String;@25bfcafd,[Ljava.lang.String;@4b6690c0),Annotation([Ljava.lang.String;@46268f08,[Ljava.lang.String;@2a76840c,[Ledu.cmu.lti.nlp.amr.Dependency;@71454b9d),Annotation([Ljava.lang.String;@eda25e5,[Ljava.lang.String;@7cf6a5f9,[Ljava.lang.String;@623e088f),Annotation([Ljava.lang.String;@39fcbef6,[Ljava.lang.String;@66565121,[Ledu.cmu.lti.nlp.amr.Entity;@2fc6f97f))
AMR:
(他 / 他, prep-out, 来 / 来-06)
(在 / 在-01, ARG4, 只 / 只好)
(在 / 在-01, ARG6, 他2 / 他)
(来 / 来-06, time, 疲 / 疲倦-01)
(疲 / 疲倦-01, time, 在 / 在-01)
(站 / 站-01, ARG5, 在 / 在-01)
(站 / 站-01, degree, 那 / 那里)

Decoded in 22,755 microseconds
Sentence: 君王 对 他 说 ： “ 在 一 个 国王 面前 打哈欠 是 违反 礼节 的 。

Spans:
Span 2-3:  他 => 他
Span 9-10:  国王 => 国王
Span 6-7:  在 => 在-01
Span 1-2:  对 => 对-02
Span 11-12:  打哈欠 => 打哈欠-01
Span 12-13:  是 => 是-04
Span 14-15:  礼节 => 礼节
Span 3-4:  说 => 说-02
Span 13-14:  违反 => 违反-01
Span 10-11:  面前 => 面前

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  国王 => 国王
Oracle Span 11-12:  打哈欠 => 打哈欠-01
Oracle Span 14-15:  礼节 => 礼节
Oracle Span 3-4:  说 => 说-01
Oracle Span 13-14:  违反 => 违反-01
Oracle Span 10-11:  面前 => 面前

Extra span: 是 => 是-04
Extra span: 在 => 在-01
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	君王	_	NR	NR	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	13	punct	_	_
7	在	_	P	P	_	13	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	国王	_	NN	NN	_	11	lobj	_	_
11	面前	_	LC	LC	_	7	plmod	_	_
12	打哈欠	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	4	ccomp	_	_
14	违反	_	VV	VV	_	13	attr	_	_
15	礼节	_	NN	NN	_	14	dobj	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	4	punct	_	_
18	君王	_	NR	NR	_	13	xsubj	_	_

Oracle:
(x0 / 说-01, arg1, x4 / 违反-01)
(x0 / 说-01, arg3, x3 / 他)
(x4 / 违反-01, arg0, x5 / 打哈欠-01)
(x4 / 违反-01, arg1, x10 / 礼节)
(x5 / 打哈欠-01, location, x7 / 面前)
(x7 / 面前, location, x8 / 国王)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),礼节,礼节,false), Span(13,14,List(1),违反,违反-01,false), Span(12,13,List(2),是,是-04,false), Span(11,12,List(3),打哈欠,打哈欠-01,false), Span(10,11,List(4),面前,面前,false), Span(9,10,List(5),国王,国王,false), Span(6,7,List(6),在,在-01,false), Span(3,4,List(7),说,说-02,false), Span(2,3,List(8),他,他,false), Span(1,2,List(9),对,对-02,false)),Map(2 -> 是-04, 5 -> 国王, 8 -> 他, 7 -> 说-02, 1 -> 违反-01, 4 -> 面前, 6 -> 在-01, 9 -> 对-02, 0 -> 礼节, 3 -> 打哈欠-01),Map(礼 -> 礼节, 在 -> 在-01, 面 -> 面前, 打 -> 打哈欠-01, 他 -> 他, 国 -> 国王, 说 -> 说-02, 对 -> 对-02, 是 -> 是-04, 违 -> 违反-01))),[Ljava.lang.String;@3d2ee678,Annotation([Ljava.lang.String;@6179e425,[Ljava.lang.String;@35f26e72,[Ljava.lang.String;@2d6764b2),Annotation([Ljava.lang.String;@67304a40,[Ljava.lang.String;@49c6c24f,[Ledu.cmu.lti.nlp.amr.Dependency;@6fe1b4fb),Annotation([Ljava.lang.String;@79351f41,[Ljava.lang.String;@1c32386d,[Ljava.lang.String;@6399551e),Annotation([Ljava.lang.String;@13d73fa,[Ljava.lang.String;@5023bb8b,[Ledu.cmu.lti.nlp.amr.Entity;@5d5f10b2))
AMR:
(打 / 打哈欠-01, location, 面 / 面前)
(是 / 是-04, day, 违 / 违反-01)
(是 / 是-04, degree, 打 / 打哈欠-01)
(说 / 说-02, day, 在 / 在-01)
(说 / 说-02, prep-on-behalf, 他 / 他)
(说 / 说-02, prep-on-behalf, 对 / 对-02)
(违 / 违反-01, day, 礼 / 礼节)
(面 / 面前, location, 国 / 国王)
(面 / 面前, location, 在 / 在-01)

Decoded in 28,796 microseconds
Sentence: 我 禁止 你 打哈欠 。 ”

Spans:
Span 2-3:  你 => 你
Span 0-1:  我 => 我
Span 3-4:  打哈欠 => 打哈欠-01
Span 1-2:  禁止 => 禁止-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  打哈欠 => 打哈欠-01
Oracle Span 1-2:  禁止 => 禁止-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	禁止	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	4	nsubj	_	_
4	打哈欠	_	VV	VV	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 禁止-01, arg0, x8 / 我)
(x7 / 禁止-01, arg1, x9 / 打哈欠-01)
(x9 / 打哈欠-01, arg0, x10 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),打哈欠,打哈欠-01,false), Span(2,3,List(1),你,你,false), Span(1,2,List(2),禁止,禁止-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 禁止-01, 1 -> 你, 0 -> 打哈欠-01, 3 -> 我),Map(我 -> 我, 打 -> 打哈欠-01, 你 -> 你, 禁 -> 禁止-01))),[Ljava.lang.String;@74c79fa2,Annotation([Ljava.lang.String;@1e0f9063,[Ljava.lang.String;@53bd8fca,[Ljava.lang.String;@7642df8f),Annotation([Ljava.lang.String;@3e30646a,[Ljava.lang.String;@5cde6747,[Ledu.cmu.lti.nlp.amr.Dependency;@63a270c9),Annotation([Ljava.lang.String;@37c7595,[Ljava.lang.String;@3ed242a4,[Ljava.lang.String;@1199fe66),Annotation([Ljava.lang.String;@614df0a4,[Ljava.lang.String;@1fdf1c5,[Ledu.cmu.lti.nlp.amr.Entity;@2d96543c))
AMR:
(禁 / 禁止-01, manner, 我 / 我)
(禁 / 禁止-01, scale, 打 / 打哈欠-01)
(禁 / 禁止-01, year, 你 / 你)

Decoded in 6,160 microseconds
Sentence: 我 实在 忍 不 住

Spans:
Span 3-4:  不 => 不
Span 4-5:  住 => 住-01
Span 1-2:  实在 => 实在-01
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  实在 => 实在
Oracle Span 0-1:  我 => 我

Extra span: 住 => 住-01
Extra span: 不 => 不
Incorrect span: 实在 => 实在-01
Missing span: 实在 => 实在
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	实在	_	AD	AD	_	5	advmod	_	_
3	忍	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	住	_	VV	VV	_	0	root	_	_

Oracle:
(x3 / 实在, arg0, x4 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),住,住-01,false), Span(3,4,List(1),不,不,false), Span(1,2,List(2),实在,实在-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 实在-01, 1 -> 不, 0 -> 住-01, 3 -> 我),Map(我 -> 我, 实 -> 实在-01, 不 -> 不, 住 -> 住-01))),[Ljava.lang.String;@73a2e526,Annotation([Ljava.lang.String;@7d64e326,[Ljava.lang.String;@13f95696,[Ljava.lang.String;@cd1d761),Annotation([Ljava.lang.String;@68be8808,[Ljava.lang.String;@32193bea,[Ledu.cmu.lti.nlp.amr.Dependency;@6b8d96d9),Annotation([Ljava.lang.String;@69653e16,[Ljava.lang.String;@758705fa,[Ljava.lang.String;@ebaa6cb),Annotation([Ljava.lang.String;@906d29b,[Ljava.lang.String;@49d3c823,[Ledu.cmu.lti.nlp.amr.Entity;@436bc36))
AMR:
(住 / 住-01, manner, 不 / 不)
(实 / 实在-01, ARG4, 不 / 不)
(我 / 我, location, 不 / 不)

Decoded in 6,057 microseconds
Sentence: 小 王子 羞愧 地 说道 ： 我 实在 忍 不 住 ，

Spans:
Span 9-10:  不 => 不
Span 10-11:  住 => 住-01
Span 3-4:  地 => 地
Span 7-8:  实在 => 实在-01
Span 0-1:  小 => 小
Span 6-7:  我 => 我
Span 1-2:  王子 => 王子
Span 2-3:  羞愧 => 羞愧-01
Span 4-5:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  实在 => 实在
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  羞愧 => 羞愧-01
Oracle Span 4-5:  说道 => 说道-01

Extra span: 住 => 住-01
Extra span: 不 => 不
Incorrect span: 实在 => 实在-01
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 说道 => 说道-01
Missing span: 实在 => 实在
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	羞愧	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	我	_	PN	PN	_	11	nsubj	_	_
8	实在	_	AD	AD	_	11	advmod	_	_
9	忍	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	住	_	VV	VV	_	5	ccomp	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说道-01, manner, x2 / 羞愧-01)
(x2 / 羞愧-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),住,住-01,false), Span(9,10,List(1),不,不,false), Span(7,8,List(2),实在,实在-01,false), Span(6,7,List(3),我,我,false), Span(4,5,List(4),说道,说道,false), Span(3,4,List(5),地,地,false), Span(2,3,List(6),羞愧,羞愧-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 实在-01, 5 -> 地, 8 -> 小, 7 -> 王子, 1 -> 不, 4 -> 说道, 6 -> 羞愧-01, 0 -> 住-01, 3 -> 我),Map(我 -> 我, 王 -> 王子, 实 -> 实在-01, 小 -> 小, 地 -> 地, 不 -> 不, 羞 -> 羞愧-01, 说 -> 说道, 住 -> 住-01))),[Ljava.lang.String;@5fe1ce85,Annotation([Ljava.lang.String;@604c5de8,[Ljava.lang.String;@37091312,[Ljava.lang.String;@66fdec9),Annotation([Ljava.lang.String;@57abad67,[Ljava.lang.String;@550a1967,[Ledu.cmu.lti.nlp.amr.Dependency;@2a640157),Annotation([Ljava.lang.String;@52851b44,[Ljava.lang.String;@584f54e6,[Ljava.lang.String;@5d8bafa9),Annotation([Ljava.lang.String;@576f63f6,[Ljava.lang.String;@2dca0d64,[Ledu.cmu.lti.nlp.amr.Entity;@f80945f))
AMR:
(住 / 住-01, manner, 不 / 不)
(住 / 住-01, manner, 实 / 实在-01)
(地 / 地, mod, 羞 / 羞愧-01)
(地 / 地, purpose, 实 / 实在-01)
(实 / 实在-01, poss, 我 / 我)
(王 / 王子, mod, 小 / 小)
(羞 / 羞愧-01, poss, 王 / 王子)
(说 / 说道, manner, 地 / 地)

Decoded in 21,678 microseconds
Sentence: “ 我 长途跋涉 来到 这里 ， 还 没有 睡觉 呢 。 ”

Spans:
Span 1-2:  我 => 我
Span 3-4:  来到 => 来到-01
Span 8-9:  睡觉 => 睡觉-01
Span 6-7:  还 => 还
Span 4-5:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  来到 => 来到-01
Oracle Span 8-9:  睡觉 => 睡觉-01
Oracle Span 6-7:  还 => 还
Oracle Span 4-5:  这里 => 这里

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	长途跋涉	_	AD	AD	_	4	advmod	_	_
4	来到	_	VV	VV	_	0	root	_	_
5	这里	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	没有	_	VE	VE	_	4	dep	_	_
9	睡觉	_	NN	NN	_	8	dobj	_	_
10	呢	_	SP	SP	_	4	dep	_	_
11	。	_	PU	PU	_	4	punct	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x31 / 来到-01, arg1, x33 / 这里)
(x34 / 睡觉-01, manner, x37 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),睡觉,睡觉-01,false), Span(6,7,List(1),还,还,false), Span(4,5,List(2),这里,这里,false), Span(3,4,List(3),来到,来到-01,false), Span(1,2,List(4),我,我,false)),Map(2 -> 这里, 1 -> 还, 4 -> 我, 0 -> 睡觉-01, 3 -> 来到-01),Map(我 -> 我, 来 -> 来到-01, 这 -> 这里, 还 -> 还, 睡 -> 睡觉-01))),[Ljava.lang.String;@ff684e1,Annotation([Ljava.lang.String;@23aa363a,[Ljava.lang.String;@5ef6ae06,[Ljava.lang.String;@55dfebeb),Annotation([Ljava.lang.String;@6e35bc3d,[Ljava.lang.String;@1cdc4c27,[Ledu.cmu.lti.nlp.amr.Dependency;@77b14724),Annotation([Ljava.lang.String;@5d9b7a8a,[Ljava.lang.String;@1e8ce150,[Ljava.lang.String;@604f2bd2),Annotation([Ljava.lang.String;@1d3ac898,[Ljava.lang.String;@1b73be9f,[Ledu.cmu.lti.nlp.amr.Entity;@628c4ac0))
AMR:
(来 / 来到-01, example, 我 / 我)
(来 / 来到-01, purpose, 这 / 这里)
(睡 / 睡觉-01, manner, 还 / 还)
(还 / 还, location, 这 / 这里)

Decoded in 9,551 microseconds
Sentence: 国王 说 ： “ 那 好 吧 ，

Spans:
Span 0-1:  国王 => 国王
Span 5-6:  好 => 好-04
Span 1-2:  说 => 说-02
Span 4-5:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 5-6:  好 => 好-02
Oracle Span 1-2:  说 => 说-01

Incorrect span: 好 => 好-04
Extra span: 那 => 那
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 好 => 好-02
Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	那	_	PN	PN	_	6	nsubj	_	_
6	好	_	VA	VA	_	2	ccomp	_	_
7	吧	_	SP	SP	_	6	dep	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x3 / 好-02)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),好,好-04,false), Span(4,5,List(1),那,那,false), Span(1,2,List(2),说,说-02,false), Span(0,1,List(3),国王,国王,false)),Map(2 -> 说-02, 1 -> 那, 0 -> 好-04, 3 -> 国王),Map(国 -> 国王, 说 -> 说-02, 好 -> 好-04, 那 -> 那))),[Ljava.lang.String;@7b84fcf8,Annotation([Ljava.lang.String;@30b19518,[Ljava.lang.String;@363042d7,[Ljava.lang.String;@366ac49b),Annotation([Ljava.lang.String;@6ad59d92,[Ljava.lang.String;@56f0cc85,[Ledu.cmu.lti.nlp.amr.Dependency;@62e20a76),Annotation([Ljava.lang.String;@2cc44ad,[Ljava.lang.String;@44b3606b,[Ljava.lang.String;@1477089c),Annotation([Ljava.lang.String;@663411de,[Ljava.lang.String;@63dd899,[Ledu.cmu.lti.nlp.amr.Entity;@59d2400d))
AMR:
(好 / 好-04, mod, 那 / 那)
(说 / 说-02, ARG5, 国 / 国王)
(说 / 说-02, prep-against, 好 / 好-04)

Decoded in 6,815 microseconds
Sentence: 我 命令 你 打哈欠 。

Spans:
Span 2-3:  你 => 你
Span 1-2:  命令 => 命令-01
Span 0-1:  我 => 我
Span 3-4:  打哈欠 => 打哈欠-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 1-2:  命令 => 命令-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  打哈欠 => 打哈欠-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	命令	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	打哈欠	_	VV	VV	_	2	dep	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 命令-01, arg0, x2 / 我)
(x0 / 命令-01, arg1, x3 / 你)
(x0 / 命令-01, arg2, x4 / 打哈欠-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),打哈欠,打哈欠-01,false), Span(2,3,List(1),你,你,false), Span(1,2,List(2),命令,命令-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 命令-01, 1 -> 你, 0 -> 打哈欠-01, 3 -> 我),Map(我 -> 我, 打 -> 打哈欠-01, 你 -> 你, 命 -> 命令-01))),[Ljava.lang.String;@75cd8043,Annotation([Ljava.lang.String;@33b1c5c5,[Ljava.lang.String;@5b202a3a,[Ljava.lang.String;@10b9db7b),Annotation([Ljava.lang.String;@9ef8eb7,[Ljava.lang.String;@34cdeda2,[Ledu.cmu.lti.nlp.amr.Dependency;@6ee660fb),Annotation([Ljava.lang.String;@305a0c5f,[Ljava.lang.String;@4535b6d5,[Ljava.lang.String;@1ecee32c),Annotation([Ljava.lang.String;@4372b9b6,[Ljava.lang.String;@232a7d73,[Ledu.cmu.lti.nlp.amr.Entity;@4b41e4dd))
AMR:
(命 / 命令-01, prep-on-behalf, 打 / 打哈欠-01)
(命 / 命令-01, value, 我 / 我)
(打 / 打哈欠-01, beneficiary, 你 / 你)

Decoded in 6,649 microseconds
Sentence: 好些 年 来 我 没有 看见 过 任何 人 打哈欠 。

Spans:
Span 8-9:  人 => 人
Span 7-8:  任何 => 任何
Span 0-1:  好些 => 好些
Span 1-2:  年 => 年
Span 3-4:  我 => 我
Span 9-10:  打哈欠 => 打哈欠-01
Span 2-3:  来 => 来-06
Span 5-6:  看见 => 看见-01
Span 6-7:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 7-8:  任何 => 任何
Oracle Span 0-1:  好些 => 好些
Oracle Span 1-2:  年 => 年
Oracle Span 3-4:  我 => 我
Oracle Span 9-10:  打哈欠 => 打哈欠-01
Oracle Span 5-6:  看见 => 看见-01

Extra span: 过 => 过-01
Extra span: 来 => 来-06
Dependencies:
1	好些	_	CD	CD	_	2	nummod	_	_
2	年	_	M	M	_	3	lobj	_	_
3	来	_	LC	LC	_	6	loc	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	没有	_	VV	VV	_	6	neg	_	_
6	看见	_	VV	VV	_	0	root	_	_
7	过	_	AS	AS	_	6	asp	_	_
8	任何	_	DT	DT	_	9	det	_	_
9	人	_	NN	NN	_	10	nn	_	_
10	打哈欠	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 看见-01, arg0, x13 / 我)
(x10 / 看见-01, arg1, x14 / 打哈欠-01)
(x10 / 看见-01, duration, x17 / 年)
(x14 / 打哈欠-01, arg0, x15 / 人)
(x15 / 人, mod, x16 / 任何)
(x17 / 年, mod, x18 / 好些)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),打哈欠,打哈欠-01,false), Span(8,9,List(1),人,人,false), Span(7,8,List(2),任何,任何,false), Span(6,7,List(3),过,过-01,false), Span(5,6,List(4),看见,看见-01,false), Span(3,4,List(5),我,我,false), Span(2,3,List(6),来,来-06,false), Span(1,2,List(7),年,年,false), Span(0,1,List(8),好些,好些,false)),Map(2 -> 任何, 5 -> 我, 8 -> 好些, 7 -> 年, 1 -> 人, 4 -> 看见-01, 6 -> 来-06, 0 -> 打哈欠-01, 3 -> 过-01),Map(任 -> 任何, 来 -> 来-06, 我 -> 我, 过 -> 过-01, 打 -> 打哈欠-01, 年 -> 年, 好 -> 好些, 看 -> 看见-01, 人 -> 人))),[Ljava.lang.String;@22ffa91a,Annotation([Ljava.lang.String;@74960bfa,[Ljava.lang.String;@42721fe,[Ljava.lang.String;@40844aab),Annotation([Ljava.lang.String;@1f6c9cd8,[Ljava.lang.String;@5b619d14,[Ledu.cmu.lti.nlp.amr.Dependency;@66746f57),Annotation([Ljava.lang.String;@447a020,[Ljava.lang.String;@7f36662c,[Ljava.lang.String;@28e8dde3),Annotation([Ljava.lang.String;@6d23017e,[Ljava.lang.String;@54dcfa5a,[Ledu.cmu.lti.nlp.amr.Entity;@1817f1eb))
AMR:
(人 / 人, mod, 任 / 任何)
(年 / 年, mod, 好 / 好些)
(我 / 我, ARG3, 来 / 来-06)
(打 / 打哈欠-01, ARG0, 过 / 过-01)
(来 / 来-06, quant, 好 / 好些)
(看 / 看见-01, time, 来 / 来-06)
(过 / 过-01, ARG1, 看 / 看见-01)
(过 / 过-01, ARG4, 任 / 任何)

Decoded in 26,378 microseconds
Sentence: 对 我 来说 ， 打哈欠 倒 是 新奇 的 事 。

Spans:
Span 9-10:  事 => 事
Span 5-6:  倒 => 倒-02
Span 0-1:  对 => 对-02
Span 1-2:  我 => 我
Span 4-5:  打哈欠 => 打哈欠-01
Span 7-8:  新奇 => 新奇-01
Span 6-7:  是 => 是-04
Span 2-3:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  事 => 事
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  打哈欠 => 打哈欠-01
Oracle Span 7-8:  新奇 => 新奇-01
Oracle Span 2-3:  来说 => 来说-01

Extra span: 是 => 是-04
Extra span: 倒 => 倒-02
Extra span: 对 => 对-02
Dependencies:
1	对	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	打哈欠	_	NN	NN	_	7	nsubj	_	_
6	倒	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	新奇	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	事	_	NN	NN	_	7	attr	_	_
11	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 打哈欠-01)
(x0 / 来说-01, arg1, x3 / 我)
(x0 / 来说-01, arg2, x8 / 事)
(x8 / 事, mod, x9 / 新奇-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),事,事,false), Span(7,8,List(1),新奇,新奇-01,false), Span(6,7,List(2),是,是-04,false), Span(5,6,List(3),倒,倒-02,false), Span(4,5,List(4),打哈欠,打哈欠-01,false), Span(2,3,List(5),来说,来说-01,false), Span(1,2,List(6),我,我,false), Span(0,1,List(7),对,对-02,false)),Map(2 -> 是-04, 5 -> 来说-01, 7 -> 对-02, 1 -> 新奇-01, 4 -> 打哈欠-01, 6 -> 我, 0 -> 事, 3 -> 倒-02),Map(我 -> 我, 来 -> 来说-01, 打 -> 打哈欠-01, 新 -> 新奇-01, 事 -> 事, 倒 -> 倒-02, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@767e20cf,Annotation([Ljava.lang.String;@3a3e78f,[Ljava.lang.String;@301ec38b,[Ljava.lang.String;@17a1e4ca),Annotation([Ljava.lang.String;@10ded6a9,[Ljava.lang.String;@c5dc4a2,[Ledu.cmu.lti.nlp.amr.Dependency;@4a194c39),Annotation([Ljava.lang.String;@52066604,[Ljava.lang.String;@340b9973,[Ljava.lang.String;@56113384),Annotation([Ljava.lang.String;@5669c5fb,[Ljava.lang.String;@373ebf74,[Ledu.cmu.lti.nlp.amr.Entity;@5f9678e1))
AMR:
(事 / 事, mod, 新 / 新奇-01)
(对 / 对-02, ARG3, 来 / 来说-01)
(对 / 对-02, ARG4, 打 / 打哈欠-01)
(对 / 对-02, ARG5, 我 / 我)
(新 / 新奇-01, ARG1, 是 / 是-04)
(是 / 是-04, ARG4, 打 / 打哈欠-01)
(是 / 是-04, manner, 倒 / 倒-02)

Decoded in 22,387 microseconds
Sentence: 来 吧 ，

Spans:
Span 0-1:  来 => 来-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  来 => 来-01

Incorrect span: 来 => 来-06
Missing span: 来 => 来-01
Dependencies:
1	来	_	VV	VV	_	2	mmod	_	_
2	吧	_	CD	CD	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),来,来-06,false)),Map(0 -> 来-06),Map(来 -> 来-06))),[Ljava.lang.String;@c4ed84,Annotation([Ljava.lang.String;@189aa67a,[Ljava.lang.String;@5a9d6f02,[Ljava.lang.String;@362045c0),Annotation([Ljava.lang.String;@112f364d,[Ljava.lang.String;@5ccbeb64,[Ledu.cmu.lti.nlp.amr.Dependency;@6d9f7a80),Annotation([Ljava.lang.String;@59252cb6,[Ljava.lang.String;@31d0e481,[Ljava.lang.String;@3243b914),Annotation([Ljava.lang.String;@241e8ea6,[Ljava.lang.String;@542e560f,[Ledu.cmu.lti.nlp.amr.Entity;@626c44e7))
AMR:


Decoded in 1,942 microseconds
Sentence: 再 打 个 哈欠 ！

Spans:
Span 0-1:  再 => 再

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  再 => 再-01

Incorrect span: 再 => 再
Missing span: 再 => 再-01
Dependencies:
1	再	_	AD	AD	_	2	advmod	_	_
2	打	_	VV	VV	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	哈欠	_	NN	NN	_	2	dobj	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),再,再,false)),Map(0 -> 再),Map(再 -> 再))),[Ljava.lang.String;@4dc8caa7,Annotation([Ljava.lang.String;@1d730606,[Ljava.lang.String;@3bcbb589,[Ljava.lang.String;@3b00856b),Annotation([Ljava.lang.String;@3016fd5e,[Ljava.lang.String;@35d08e6c,[Ledu.cmu.lti.nlp.amr.Dependency;@53d102a2),Annotation([Ljava.lang.String;@6c45ee6e,[Ljava.lang.String;@6b3e12b5,[Ljava.lang.String;@5aac4250),Annotation([Ljava.lang.String;@1338fb5,[Ljava.lang.String;@42463763,[Ledu.cmu.lti.nlp.amr.Entity;@59f63e24))
AMR:


Decoded in 2,617 microseconds
Sentence: 这 是 命令 。 ”

Spans:
Span 2-3:  命令 => 命令-01
Span 1-2:  是 => 是-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  命令 => 命令
Oracle Span 0-1:  这 => 这

Incorrect span: 命令 => 命令-01
Extra span: 是 => 是-04
Missing span: 命令 => 命令
Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	命令	_	NN	NN	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 命令, domain, x6 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),命令,命令-01,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 是-04, 0 -> 命令-01),Map(这 -> 这, 命 -> 命令-01, 是 -> 是-04))),[Ljava.lang.String;@61f05988,Annotation([Ljava.lang.String;@7ca33c24,[Ljava.lang.String;@fade1fc,[Ljava.lang.String;@67c2e933),Annotation([Ljava.lang.String;@41dd05a,[Ljava.lang.String;@613a8ee1,[Ledu.cmu.lti.nlp.amr.Dependency;@178213b),Annotation([Ljava.lang.String;@7103cb56,[Ljava.lang.String;@1b765a2c,[Ljava.lang.String;@2e8e8225),Annotation([Ljava.lang.String;@6ebf0f36,[Ljava.lang.String;@18920cc,[Ledu.cmu.lti.nlp.amr.Entity;@2807bdeb))
AMR:
(命 / 命令-01, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)

Decoded in 4,415 microseconds
Sentence: “ 这 倒 叫 我 有点 紧张 …

Spans:
Span 2-3:  倒 => 倒-02
Span 3-4:  叫 => 叫-06
Span 4-5:  我 => 我
Span 5-6:  有点 => 有点-01
Span 6-7:  紧张 => 紧张-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  有点 => 有点
Oracle Span 6-7:  紧张 => 紧张-01
Oracle Span 1-2:  这 => 这

Incorrect span: 有点 => 有点-01
Extra span: 叫 => 叫-06
Extra span: 倒 => 倒-02
Missing span: 有点 => 有点
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	倒	_	AD	AD	_	4	advmod	_	_
4	叫	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	6	nn	_	_
6	有点	_	NN	NN	_	4	dobj	_	_
7	紧张	_	PU	PU	_	4	punct	_	_
8	…	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 紧张-01, arg0, x12 / 我)
(x10 / 紧张-01, cause, x13 / 这)
(x10 / 紧张-01, degree, x11 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),紧张,紧张-01,false), Span(5,6,List(1),有点,有点-01,false), Span(4,5,List(2),我,我,false), Span(3,4,List(3),叫,叫-06,false), Span(2,3,List(4),倒,倒-02,false), Span(1,2,List(5),这,这,false)),Map(2 -> 我, 5 -> 这, 1 -> 有点-01, 4 -> 倒-02, 0 -> 紧张-01, 3 -> 叫-06),Map(我 -> 我, 这 -> 这, 叫 -> 叫-06, 紧 -> 紧张-01, 倒 -> 倒-02, 有 -> 有点-01))),[Ljava.lang.String;@72c28d64,Annotation([Ljava.lang.String;@6492fab5,[Ljava.lang.String;@2c5529ab,[Ljava.lang.String;@39a8312f),Annotation([Ljava.lang.String;@5f6722d3,[Ljava.lang.String;@2c532cd8,[Ledu.cmu.lti.nlp.amr.Dependency;@294e5088),Annotation([Ljava.lang.String;@51972dc7,[Ljava.lang.String;@3700ec9c,[Ljava.lang.String;@2002348),Annotation([Ljava.lang.String;@5911e990,[Ljava.lang.String;@31000e60,[Ledu.cmu.lti.nlp.amr.Entity;@1d470d0))
AMR:
(倒 / 倒-02, mod, 这 / 这)
(倒 / 倒-02, purpose, 叫 / 叫-06)
(倒 / 倒-02, purpose, 紧 / 紧张-01)
(叫 / 叫-06, subset, 我 / 我)
(紧 / 紧张-01, degree, 有 / 有点-01)

Decoded in 11,330 microseconds
Sentence: 我 打 不 出 哈欠 来 了 … ” 小 王子 红 着 脸 说 。

Spans:
Span 2-3:  不 => 不
Span 3-4:  出 => 出-04
Span 9-10:  小 => 小
Span 0-1:  我 => 我
Span 5-6:  来 => 来-06
Span 10-11:  王子 => 王子
Span 11-12:  红 => 红-01
Span 13-14:  脸 => 脸
Span 14-15:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  王子 => 王子
Oracle Span 14-15:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 脸 => 脸
Extra span: 红 => 红-01
Incorrect span: 小 => 小
Extra span: 来 => 来-06
Extra span: 出 => 出-04
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	打	_	VV	VV	_	14	rcmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	出	_	VV	VV	_	6	lccomp	_	_
5	哈欠	_	NN	NN	_	4	dobj	_	_
6	来	_	LC	LC	_	2	loc	_	_
7	了	_	SP	SP	_	2	dep	_	_
8	…	_	PU	PU	_	12	punct	_	_
9	”	_	NR	NR	_	11	nn	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	红	_	VA	VA	_	2	dep	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	脸	_	NN	NN	_	15	nsubj	_	_
15	说	_	VV	VV	_	0	root	_	_
16	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),说,说-02,false), Span(13,14,List(1),脸,脸,false), Span(11,12,List(2),红,红-01,false), Span(10,11,List(3),王子,王子,false), Span(9,10,List(4),小,小,false), Span(5,6,List(5),来,来-06,false), Span(3,4,List(6),出,出-04,false), Span(2,3,List(7),不,不,false), Span(0,1,List(8),我,我,false)),Map(2 -> 红-01, 5 -> 来-06, 8 -> 我, 7 -> 不, 1 -> 脸, 4 -> 小, 6 -> 出-04, 0 -> 说-02, 3 -> 王子),Map(红 -> 红-01, 我 -> 我, 来 -> 来-06, 王 -> 王子, 小 -> 小, 不 -> 不, 出 -> 出-04, 脸 -> 脸, 说 -> 说-02))),[Ljava.lang.String;@24d09c1,Annotation([Ljava.lang.String;@54c62d71,[Ljava.lang.String;@65045a87,[Ljava.lang.String;@47f4e407),Annotation([Ljava.lang.String;@2d1dee39,[Ljava.lang.String;@48d5f34e,[Ledu.cmu.lti.nlp.amr.Dependency;@fc258b1),Annotation([Ljava.lang.String;@6ff65192,[Ljava.lang.String;@2dd80673,[Ljava.lang.String;@4af0df05),Annotation([Ljava.lang.String;@57ea113a,[Ljava.lang.String;@acdb094,[Ledu.cmu.lti.nlp.amr.Entity;@674bd420))
AMR:
(不 / 不, poss, 我 / 我)
(出 / 出-04, manner, 不 / 不)
(来 / 来-06, manner, 出 / 出-04)
(来 / 来-06, polite, 红 / 红-01)
(王 / 王子, mod, 小 / 小)
(红 / 红-01, beneficiary, 王 / 王子)
(红 / 红-01, part, 脸 / 脸)
(说 / 说-02, part, 脸 / 脸)

Decoded in 26,195 microseconds
Sentence: “ 嗯 ！

Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@2b0f373b,Annotation([Ljava.lang.String;@2ceb80a1,[Ljava.lang.String;@4b45dcb8,[Ljava.lang.String;@7216fb24),Annotation([Ljava.lang.String;@2072acb2,[Ljava.lang.String;@50ecde95,[Ledu.cmu.lti.nlp.amr.Dependency;@35a9782c),Annotation([Ljava.lang.String;@70a36a66,[Ljava.lang.String;@45815ffc,[Ljava.lang.String;@732f29af),Annotation([Ljava.lang.String;@d3957fe,[Ljava.lang.String;@6622fc65,[Ledu.cmu.lti.nlp.amr.Entity;@299321e2))
AMR:


Decoded in 1,426 microseconds
Sentence: 嗯 ！ ” 国王 回答 道 ：

Spans:
Span 0-1:  嗯 => 嗯
Span 4-5:  回答 => 回答-01
Span 3-4:  国王 => 国王
Span 5-6:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  嗯 => 嗯
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 3-4:  国王 => 国王

Extra span: 道 => 道-01
Dependencies:
1	嗯	_	PU	PU	_	2	punct	_	_
2	！	_	NN	NN	_	4	nn	_	_
3	”	_	PU	PU	_	2	punct	_	_
4	国王	_	NN	NN	_	5	nsubj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	道	_	NN	NN	_	5	dobj	_	_
7	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 国王)
(x0 / 回答-01, arg2, x3 / 嗯)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),道,道-01,false), Span(4,5,List(1),回答,回答-01,false), Span(3,4,List(2),国王,国王,false), Span(0,1,List(3),嗯,嗯,false)),Map(2 -> 国王, 1 -> 回答-01, 0 -> 道-01, 3 -> 嗯),Map(国 -> 国王, 道 -> 道-01, 嗯 -> 嗯, 回 -> 回答-01))),[Ljava.lang.String;@23fb172e,Annotation([Ljava.lang.String;@64ba3208,[Ljava.lang.String;@158a3b2e,[Ljava.lang.String;@25a6944c),Annotation([Ljava.lang.String;@5e1fa5b1,[Ljava.lang.String;@6b00f608,[Ledu.cmu.lti.nlp.amr.Dependency;@2f17e30d),Annotation([Ljava.lang.String;@3e821657,[Ljava.lang.String;@1d131e1b,[Ljava.lang.String;@71cf1b07),Annotation([Ljava.lang.String;@615091b8,[Ljava.lang.String;@4fce136b,[Ledu.cmu.lti.nlp.amr.Entity;@4aa83f4f))
AMR:
(回 / 回答-01, ARG4, 国 / 国王)
(道 / 道-01, ARG4, 回 / 回答-01)
(道 / 道-01, degree, 嗯 / 嗯)

Decoded in 6,217 microseconds
Sentence: “ 那么 我 … 命令 你 忽而 打哈欠 ， 忽而 … ”

Spans:
Span 5-6:  你 => 你
Span 4-5:  命令 => 命令-01
Span 9-10:  忽而 => 忽而
Span 6-7:  忽而 => 忽而
Span 2-3:  我 => 我
Span 7-8:  打哈欠 => 打哈欠-01
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 4-5:  命令 => 命令-01
Oracle Span 6-7:  忽而 => 忽而
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  打哈欠 => 打哈欠-01

Extra span: 忽而 => 忽而
Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	我	_	PN	PN	_	0	root	_	_
4	…	_	PU	PU	_	10	punct	_	_
5	命令	_	NN	NN	_	10	nn	_	_
6	你	_	PN	PN	_	10	nn	_	_
7	忽而	_	NN	NN	_	8	nn	_	_
8	打哈欠	_	NN	NN	_	10	dep	_	_
9	,	_	PU	PU	_	10	punct	_	_
10	忽而	_	NR	NR	_	3	prnmod	_	_
11	…	_	PU	PU	_	10	punct	_	_
12	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 命令-01, arg0, x14 / 我)
(x13 / 命令-01, arg1, x15 / 你)
(x13 / 命令-01, arg2, x16 / 打哈欠-01)
(x16 / 打哈欠-01, time, x18 / 忽而)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),忽而,忽而,false), Span(7,8,List(1),打哈欠,打哈欠-01,false), Span(6,7,List(2),忽而,忽而,false), Span(5,6,List(3),你,你,false), Span(4,5,List(4),命令,命令-01,false), Span(2,3,List(5),我,我,false), Span(1,2,List(6),那么,那么,false)),Map(2 -> 忽而, 5 -> 我, 1 -> 打哈欠-01, 4 -> 命令-01, 6 -> 那么, 0 -> 忽而, 3 -> 你),Map(忽2 -> 忽而, 忽 -> 忽而, 我 -> 我, 打 -> 打哈欠-01, 你 -> 你, 命 -> 命令-01, 那 -> 那么))),[Ljava.lang.String;@43b6123e,Annotation([Ljava.lang.String;@260e86a1,[Ljava.lang.String;@19648c40,[Ljava.lang.String;@12bd8a64),Annotation([Ljava.lang.String;@61e94def,[Ljava.lang.String;@3300f4fd,[Ledu.cmu.lti.nlp.amr.Dependency;@ebb6851),Annotation([Ljava.lang.String;@70ab2d48,[Ljava.lang.String;@5b068087,[Ljava.lang.String;@6f152006),Annotation([Ljava.lang.String;@3a393455,[Ljava.lang.String;@13518f37,[Ledu.cmu.lti.nlp.amr.Entity;@7cbc3762))
AMR:
(命 / 命令-01, degree, 那 / 那么)
(命 / 命令-01, example, 打 / 打哈欠-01)
(命 / 命令-01, prep-through, 你 / 你)
(我 / 我, degree, 那 / 那么)
(打 / 打哈欠-01, time, 忽 / 忽而)
(打 / 打哈欠-01, time, 忽2 / 忽而)

Decoded in 15,662 microseconds
Sentence: 他 嘟嘟囔囔 ， 显出 有点 恼怒 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  嘟嘟囔囔 => 嘟嘟囔囔
Span 5-6:  恼怒 => 恼怒-01
Span 3-4:  显出 => 显出-01
Span 4-5:  有点 => 有点-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  嘟嘟囔囔 => 嘟嘟囔囔
Oracle Span 5-6:  恼怒 => 恼怒-01
Oracle Span 3-4:  显出 => 显出-01
Oracle Span 4-5:  有点 => 有点

Incorrect span: 有点 => 有点-01
Missing span: 有点 => 有点
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	嘟嘟囔囔	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	显出	_	VV	VV	_	2	ccomp	_	_
5	有点	_	NN	NN	_	6	nn	_	_
6	恼怒	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 嘟嘟囔囔, arg0, x3 / 他)
(x4 / 显出-01, arg1, x6 / 恼怒-01)
(x6 / 恼怒-01, degree, x7 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),恼怒,恼怒-01,false), Span(4,5,List(1),有点,有点-01,false), Span(3,4,List(2),显出,显出-01,false), Span(1,2,List(3),嘟嘟囔囔,嘟嘟囔囔,false), Span(0,1,List(4),他,他,false)),Map(2 -> 显出-01, 1 -> 有点-01, 4 -> 他, 0 -> 恼怒-01, 3 -> 嘟嘟囔囔),Map(他 -> 他, 恼 -> 恼怒-01, 嘟 -> 嘟嘟囔囔, 显 -> 显出-01, 有 -> 有点-01))),[Ljava.lang.String;@3a6f2de3,Annotation([Ljava.lang.String;@49872d67,[Ljava.lang.String;@56303b57,[Ljava.lang.String;@4b2a01d4),Annotation([Ljava.lang.String;@8692d67,[Ljava.lang.String;@78f5c518,[Ledu.cmu.lti.nlp.amr.Dependency;@2f48b3d2),Annotation([Ljava.lang.String;@34f7234e,[Ljava.lang.String;@753432a2,[Ljava.lang.String;@23bff419),Annotation([Ljava.lang.String;@4983159f,[Ljava.lang.String;@44e3a2b2,[Ledu.cmu.lti.nlp.amr.Entity;@101639ae))
AMR:
(嘟 / 嘟嘟囔囔, mod, 显 / 显出-01)
(嘟 / 嘟嘟囔囔, prep-from, 他 / 他)
(恼 / 恼怒-01, degree, 有 / 有点-01)
(显 / 显出-01, prep-on-behalf, 恼 / 恼怒-01)

Decoded in 9,456 microseconds
Sentence: 因为 国王 所 要求 的 主要 是 保持 他 的 威严 受到 尊敬 。

Spans:
Span 5-6:  主要 => 主要-01
Span 8-9:  他 => 他
Span 7-8:  保持 => 保持-01
Span 11-12:  受到 => 受到-01
Span 1-2:  国王 => 国王
Span 10-11:  威严 => 威严-01
Span 12-13:  尊敬 => 尊敬-01
Span 6-7:  是 => 是-04
Span 3-4:  要求 => 要求-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  主要 => 主要-01
Oracle Span 7-8:  保持 => 保持-01
Oracle Span 11-12:  受到 => 受到-01
Oracle Span 1-2:  国王 => 国王
Oracle Span 10-11:  威严 => 威严-01
Oracle Span 12-13:  尊敬 => 尊敬-01
Oracle Span 3-4:  要求 => 要求-03

Extra span: 他 => 他
Extra span: 是 => 是-04
Dependencies:
1	因为	_	P	P	_	12	prep	_	_
2	国王	_	NN	NN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	要求	_	VV	VV	_	7	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	主要	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	1	pccomp	_	_
8	保持	_	VV	VV	_	7	attr	_	_
9	他	_	PN	PN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	威严	_	AD	AD	_	12	advmod	_	_
12	受到	_	VV	VV	_	0	root	_	_
13	尊敬	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x11 / 受到-01, arg1, x12 / 尊敬-01)
(x2 / 要求-03, arg0, x3 / 国王)
(x2 / 要求-03, arg1, x4 / 保持-01)
(x4 / 保持-01, arg1, x6 / 威严-01)
(x4 / 保持-01, arg2, x11 / 受到-01)
(x4 / 保持-01, manner, x10 / 主要-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),尊敬,尊敬-01,false), Span(11,12,List(1),受到,受到-01,false), Span(10,11,List(2),威严,威严-01,false), Span(8,9,List(3),他,他,false), Span(7,8,List(4),保持,保持-01,false), Span(6,7,List(5),是,是-04,false), Span(5,6,List(6),主要,主要-01,false), Span(3,4,List(7),要求,要求-03,false), Span(1,2,List(8),国王,国王,false)),Map(2 -> 威严-01, 5 -> 是-04, 8 -> 国王, 7 -> 要求-03, 1 -> 受到-01, 4 -> 保持-01, 6 -> 主要-01, 0 -> 尊敬-01, 3 -> 他),Map(受 -> 受到-01, 主 -> 主要-01, 尊 -> 尊敬-01, 要 -> 要求-03, 威 -> 威严-01, 他 -> 他, 保 -> 保持-01, 国 -> 国王, 是 -> 是-04))),[Ljava.lang.String;@4c550889,Annotation([Ljava.lang.String;@1d2bd371,[Ljava.lang.String;@44040454,[Ljava.lang.String;@65fe9e33),Annotation([Ljava.lang.String;@18bc345,[Ljava.lang.String;@42f8285e,[Ledu.cmu.lti.nlp.amr.Dependency;@26bab2f1),Annotation([Ljava.lang.String;@3724af13,[Ljava.lang.String;@68ead359,[Ljava.lang.String;@6b53bcc2),Annotation([Ljava.lang.String;@180da663,[Ljava.lang.String;@a43ce46,[Ledu.cmu.lti.nlp.amr.Entity;@340da44c))
AMR:
(保 / 保持-01, ARG1, 是 / 是-04)
(保 / 保持-01, manner, 威 / 威严-01)
(保 / 保持-01, time, 受 / 受到-01)
(受 / 受到-01, prep-within, 尊 / 尊敬-01)
(是 / 是-04, ARG4, 他 / 他)
(是 / 是-04, manner, 主 / 主要-01)
(要 / 要求-03, ARG3, 保 / 保持-01)
(要 / 要求-03, op, 国 / 国王)

Decoded in 25,570 microseconds
Sentence: 他 不 能 容忍 不 听 他 的 命令 。

Spans:
Span 4-5:  不 => 不
Span 1-2:  不 => 不
Span 6-7:  他 => 他
Span 0-1:  他 => 他
Span 5-6:  听 => 听-02
Span 8-9:  命令 => 命令-01
Span 3-4:  容忍 => 容忍-01
Span 2-3:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  听 => 听-02
Oracle Span 8-9:  命令 => 命令-01
Oracle Span 3-4:  容忍 => 容忍-01
Oracle Span 2-3:  能 => 能-01

Extra span: 他 => 他
Extra span: 不 => 不
Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Dependencies:
1	他	_	PN	PN	_	6	nsubj	_	_
2	不	_	AD	AD	_	6	neg	_	_
3	能	_	VV	VV	_	6	mmod	_	_
4	容忍	_	VV	VV	_	6	mmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	听	_	VV	VV	_	0	root	_	_
7	他	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	命令	_	NN	NN	_	6	dobj	_	_
10	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 能-01, arg0, x2 / 容忍-01)
(x2 / 容忍-01, arg0, x4 / 他)
(x2 / 容忍-01, arg1, x5 / 听-02)
(x5 / 听-02, arg1, x7 / 命令-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),命令,命令-01,false), Span(6,7,List(1),他,他,false), Span(5,6,List(2),听,听-02,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),容忍,容忍-01,false), Span(2,3,List(5),能,能,false), Span(1,2,List(6),不,不,false), Span(0,1,List(7),他,他,false)),Map(2 -> 听-02, 5 -> 能, 7 -> 他, 1 -> 他, 4 -> 容忍-01, 6 -> 不, 0 -> 命令-01, 3 -> 不),Map(他2 -> 他, 容 -> 容忍-01, 能 -> 能, 他 -> 他, 命 -> 命令-01, 不2 -> 不, 不 -> 不, 听 -> 听-02))),[Ljava.lang.String;@424ebba3,Annotation([Ljava.lang.String;@37052337,[Ljava.lang.String;@2320fa6f,[Ljava.lang.String;@7a560583),Annotation([Ljava.lang.String;@4d722ac9,[Ljava.lang.String;@53f0a4cb,[Ledu.cmu.lti.nlp.amr.Dependency;@77a7cf58),Annotation([Ljava.lang.String;@3d97a632,[Ljava.lang.String;@616fe72b,[Ljava.lang.String;@37efd131),Annotation([Ljava.lang.String;@7e7b159b,[Ljava.lang.String;@7e5d9a50,[Ledu.cmu.lti.nlp.amr.Entity;@60957c0f))
AMR:
(听 / 听-02, manner, 不 / 不)
(听 / 听-02, snt3, 命 / 命令-01)
(命 / 命令-01, poss, 他 / 他)
(容 / 容忍-01, ARG0, 不 / 不)
(容 / 容忍-01, example, 他2 / 他)
(能 / 能, ARG6, 容 / 容忍-01)
(能 / 能, manner, 不2 / 不)

Decoded in 18,657 microseconds
Sentence: 他 是 一 位 绝对 的 君主 。

Spans:
Span 0-1:  他 => 他
Span 6-7:  君主 => 君主
Span 1-2:  是 => 是-04
Span 4-5:  绝对 => 绝对

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  君主 => 君主
Oracle Span 4-5:  绝对 => 绝对-01

Incorrect span: 绝对 => 绝对
Extra span: 是 => 是-04
Missing span: 绝对 => 绝对-01
Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	位	_	M	M	_	7	clf	_	_
5	绝对	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	君主	_	NN	NN	_	2	attr	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 君主, domain, x4 / 他)
(x0 / 君主, mod, x2 / 绝对-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),君主,君主,false), Span(4,5,List(1),绝对,绝对,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),他,他,false)),Map(2 -> 是-04, 1 -> 绝对, 0 -> 君主, 3 -> 他),Map(绝 -> 绝对, 君 -> 君主, 他 -> 他, 是 -> 是-04))),[Ljava.lang.String;@293a5f75,Annotation([Ljava.lang.String;@fcb4004,[Ljava.lang.String;@1dd6d4b7,[Ljava.lang.String;@56e8b606),Annotation([Ljava.lang.String;@2dd29a59,[Ljava.lang.String;@784c3487,[Ledu.cmu.lti.nlp.amr.Dependency;@53142455),Annotation([Ljava.lang.String;@40dff0b7,[Ljava.lang.String;@7966baa7,[Ljava.lang.String;@60975100),Annotation([Ljava.lang.String;@1253e7cb,[Ljava.lang.String;@2d36e77e,[Ledu.cmu.lti.nlp.amr.Entity;@61c9c3fd))
AMR:
(君 / 君主, domain, 他 / 他)
(君 / 君主, mod, 绝 / 绝对)
(是 / 是-04, ARG1, 他 / 他)

Decoded in 7,473 microseconds
Sentence: 可是 ， 他 却 很 善良 ， 他 下 的 命令 都 是 有 理智 的 。

Spans:
Span 8-9:  下 => 下-07
Span 7-8:  他 => 他
Span 2-3:  他 => 他
Span 10-11:  命令 => 命令-01
Span 5-6:  善良 => 善良-01
Span 4-5:  很 => 很
Span 12-13:  是 => 是-04
Span 13-14:  有 => 有-06
Span 14-15:  理智 => 理智-01
Span 11-12:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 10-11:  命令 => 命令-01
Oracle Span 5-6:  善良 => 善良-01
Oracle Span 4-5:  很 => 很
Oracle Span 14-15:  理智 => 理智-01
Oracle Span 11-12:  都 => 都

Extra span: 有 => 有-06
Extra span: 是 => 是-04
Extra span: 下 => 下-07
Extra span: 他 => 他
Dependencies:
1	可是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	却	_	AD	AD	_	6	advmod	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	善良	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	他	_	PN	PN	_	9	lobj	_	_
9	下	_	LC	LC	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	命令	_	NN	NN	_	13	nsubj	_	_
12	都	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	6	ccomp	_	_
14	有	_	VE	VE	_	13	attr	_	_
15	理智	_	VA	VA	_	14	dep	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 善良-01, arg0, x14 / 他)
(x12 / 善良-01, degree, x13 / 很)
(x15 / 理智-01, arg0, x16 / 命令-01)
(x15 / 理智-01, manner, x18 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),理智,理智-01,false), Span(13,14,List(1),有,有-06,false), Span(12,13,List(2),是,是-04,false), Span(11,12,List(3),都,都,false), Span(10,11,List(4),命令,命令-01,false), Span(8,9,List(5),下,下-07,false), Span(7,8,List(6),他,他,false), Span(5,6,List(7),善良,善良-01,false), Span(4,5,List(8),很,很,false), Span(2,3,List(9),他,他,false)),Map(2 -> 是-04, 5 -> 下-07, 8 -> 很, 7 -> 善良-01, 1 -> 有-06, 4 -> 命令-01, 6 -> 他, 9 -> 他, 0 -> 理智-01, 3 -> 都),Map(他2 -> 他, 理 -> 理智-01, 很 -> 很, 下 -> 下-07, 他 -> 他, 命 -> 命令-01, 善 -> 善良-01, 都 -> 都, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@3b0c9195,Annotation([Ljava.lang.String;@366c4480,[Ljava.lang.String;@2c7b5824,[Ljava.lang.String;@302a07d),Annotation([Ljava.lang.String;@5cdd09b1,[Ljava.lang.String;@8c11eee,[Ledu.cmu.lti.nlp.amr.Dependency;@7e8dcdaa),Annotation([Ljava.lang.String;@681a8b4e,[Ljava.lang.String;@5cbe877d,[Ljava.lang.String;@5c08c46a),Annotation([Ljava.lang.String;@4cf8b2dc,[Ljava.lang.String;@708400f6,[Ledu.cmu.lti.nlp.amr.Entity;@5829e4f4))
AMR:
(下 / 下-07, ARG1, 他 / 他)
(命 / 命令-01, ARG4, 下 / 下-07)
(善 / 善良-01, degree, 很 / 很)
(善 / 善良-01, mode, 他2 / 他)
(是 / 是-04, ARG1, 有 / 有-06)
(是 / 是-04, ARG4, 命 / 命令-01)
(是 / 是-04, manner, 都 / 都)
(是 / 是-04, time, 善 / 善良-01)
(理 / 理智-01, ARG1, 有 / 有-06)

Decoded in 33,503 microseconds
Sentence: 他 常常 说 ： “ 如果 我 叫 一 位 将军 变成 一 只 海鸟 ， 而 这 位 将军 不 服从 我 的 命令 ， 那么 这 就 不 是 将军 的 过错 ，

Spans:
Span 29-30:  不 => 不
Span 20-21:  不 => 不
Span 0-1:  他 => 他
Span 11-12:  变成 => 变成-01
Span 13-14:  只 => 只
Span 7-8:  叫 => 叫-06
Span 24-25:  命令 => 命令-01
Span 31-32:  将军 => 将军
Span 19-20:  将军 => 将军
Span 10-11:  将军 => 将军
Span 28-29:  就 => 就-01
Span 1-2:  常常 => 常常
Span 22-23:  我 => 我
Span 6-7:  我 => 我
Span 30-31:  是 => 是-04
Span 21-22:  服从 => 服从-01
Span 14-15:  海鸟 => 海鸟
Span 2-3:  说 => 说-02
Span 33-34:  过错 => 过错
Span 27-28:  这 => 这
Span 17-18:  这 => 这
Span 26-27:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 11-12:  变成 => 变成-01
Oracle Span 7-8:  叫 => 叫-04
Oracle Span 24-25:  命令 => 命令-01
Oracle Span 10-11:  将军 => 将军
Oracle Span 28-29:  就 => 就
Oracle Span 1-2:  常常 => 常常
Oracle Span 21-22:  服从 => 服从-01
Oracle Span 14-15:  海鸟 => 海鸟
Oracle Span 2-3:  说 => 说-01
Oracle Span 33-34:  过错 => 过错
Oracle Span 17-18:  这 => 这

Extra span: 将军 => 将军
Extra span: 是 => 是-04
Extra span: 不 => 不
Incorrect span: 就 => 就-01
Extra span: 这 => 这
Extra span: 那么 => 那么
Extra span: 我 => 我
Extra span: 不 => 不
Extra span: 将军 => 将军
Extra span: 只 => 只
Incorrect span: 叫 => 叫-06
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 就 => 就
Missing span: 叫 => 叫-04
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	常常	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	31	punct	_	_
6	如果	_	CS	CS	_	8	advmod	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	叫	_	VV	VV	_	31	pccomp	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	位	_	M	M	_	11	clf	_	_
11	将军	_	NN	NN	_	12	nsubj	_	_
12	变成	_	VV	VV	_	8	ccomp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	只	_	M	M	_	15	clf	_	_
15	海鸟	_	NN	NN	_	12	dobj	_	_
16	,	_	PU	PU	_	12	punct	_	_
17	而	_	AD	AD	_	22	advmod	_	_
18	这	_	DT	DT	_	20	det	_	_
19	位	_	M	M	_	18	clf	_	_
20	将军	_	NN	NN	_	22	nsubj	_	_
21	不	_	AD	AD	_	22	neg	_	_
22	服从	_	VV	VV	_	12	conj	_	_
23	我	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	命令	_	NN	NN	_	22	dobj	_	_
26	,	_	PU	PU	_	31	punct	_	_
27	那么	_	AD	AD	_	31	advmod	_	_
28	这	_	PN	PN	_	31	nsubj	_	_
29	就	_	AD	AD	_	31	advmod	_	_
30	不	_	AD	AD	_	31	neg	_	_
31	是	_	VC	VC	_	3	ccomp	_	_
32	将军	_	NN	NN	_	34	assmod	_	_
33	的	_	DEG	DEG	_	32	assm	_	_
34	过错	_	NN	NN	_	31	attr	_	_
35	,	_	PU	PU	_	31	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 他)
(x0 / 说-01, frequency, x2 / 常常)
(x21 / 过错, domain, x26 / 这)
(x28 / 叫-04, arg1, x32 / 将军)
(x28 / 叫-04, arg2, x34 / 变成-01)
(x34 / 变成-01, arg2, x35 / 海鸟)
(x37 / 服从-01, arg1, x40 / 命令-01)

Input(Some(Graph(null,ArrayBuffer(Span(33,34,List(0),过错,过错,false), Span(31,32,List(1),将军,将军,false), Span(30,31,List(2),是,是-04,false), Span(29,30,List(3),不,不,false), Span(28,29,List(4),就,就-01,false), Span(27,28,List(5),这,这,false), Span(26,27,List(6),那么,那么,false), Span(24,25,List(7),命令,命令-01,false), Span(22,23,List(8),我,我,false), Span(21,22,List(9),服从,服从-01,false), Span(20,21,List(10),不,不,false), Span(19,20,List(11),将军,将军,false), Span(17,18,List(12),这,这,false), Span(14,15,List(13),海鸟,海鸟,false), Span(13,14,List(14),只,只,false), Span(11,12,List(15),变成,变成-01,false), Span(10,11,List(16),将军,将军,false), Span(7,8,List(17),叫,叫-06,false), Span(6,7,List(18),我,我,false), Span(2,3,List(19),说,说-02,false), Span(1,2,List(20),常常,常常,false), Span(0,1,List(21),他,他,false)),Map(2 -> 是-04, 5 -> 这, 12 -> 这, 15 -> 变成-01, 8 -> 我, 21 -> 他, 18 -> 我, 7 -> 命令-01, 17 -> 叫-06, 1 -> 将军, 4 -> 就-01, 11 -> 将军, 14 -> 只, 20 -> 常常, 6 -> 那么, 0 -> 过错, 9 -> 服从-01, 16 -> 将军, 19 -> 说-02, 3 -> 不, 10 -> 不, 13 -> 海鸟),Map(就 -> 就-01, 我 -> 我, 过 -> 过错, 这 -> 这, 将2 -> 将军, 我2 -> 我, 他 -> 他, 叫 -> 叫-06, 海 -> 海鸟, 将 -> 将军, 命 -> 命令-01, 不 -> 不, 不2 -> 不, 常 -> 常常, 说 -> 说-02, 变 -> 变成-01, 只 -> 只, 服 -> 服从-01, 这2 -> 这, 那 -> 那么, 是 -> 是-04, 将3 -> 将军))),[Ljava.lang.String;@4218500f,Annotation([Ljava.lang.String;@4bff64c2,[Ljava.lang.String;@1b2c4efb,[Ljava.lang.String;@c35172e),Annotation([Ljava.lang.String;@c2db68f,[Ljava.lang.String;@3cc41abc,[Ledu.cmu.lti.nlp.amr.Dependency;@4566d049),Annotation([Ljava.lang.String;@61ce23ac,[Ljava.lang.String;@3668d4,[Ljava.lang.String;@1c3b9394),Annotation([Ljava.lang.String;@6f2cfcc2,[Ljava.lang.String;@7f6f61c8,[Ledu.cmu.lti.nlp.amr.Entity;@4c2cc639))
AMR:
(不2 / 不, mod, 将2 / 将军)
(不2 / 不, mod, 这2 / 这)
(变 / 变成-01, degree, 将3 / 将军)
(变 / 变成-01, manner, 只 / 只)
(变 / 变成-01, time, 叫 / 叫-06)
(叫 / 叫-06, manner, 我2 / 我)
(命 / 命令-01, degree, 那 / 那么)
(命 / 命令-01, prep-following, 服 / 服从-01)
(将 / 将军, mod, 是 / 是-04)
(就 / 就-01, degree, 那 / 那么)
(就 / 就-01, mod, 这 / 这)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, manner, 就 / 就-01)
(服 / 服从-01, manner, 不2 / 不)
(服 / 服从-01, manner, 只 / 只)
(服 / 服从-01, prep-following, 我 / 我)
(海 / 海鸟, manner, 只 / 只)
(说 / 说-02, ARG3, 叫 / 叫-06)
(说 / 说-02, degree, 常 / 常常)
(说 / 说-02, prep-following, 他 / 他)
(过 / 过错, quant, 是 / 是-04)

Decoded in 149,170 microseconds
Sentence: 而 是 我 的 过错 。 ”

Spans:
Span 2-3:  我 => 我
Span 1-2:  是 => 是-04
Span 4-5:  过错 => 过错

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  过错 => 过错

Extra span: 是 => 是-04
Dependencies:
1	而	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	过错	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 过错, poss, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),过错,过错,false), Span(2,3,List(1),我,我,false), Span(1,2,List(2),是,是-04,false)),Map(2 -> 是-04, 1 -> 我, 0 -> 过错),Map(我 -> 我, 过 -> 过错, 是 -> 是-04))),[Ljava.lang.String;@ccb4b1b,Annotation([Ljava.lang.String;@4097cac,[Ljava.lang.String;@ec2cc4,[Ljava.lang.String;@2a5b3fee),Annotation([Ljava.lang.String;@7c1e2a2d,[Ljava.lang.String;@333dd51e,[Ledu.cmu.lti.nlp.amr.Dependency;@52d645b1),Annotation([Ljava.lang.String;@2101b44a,[Ljava.lang.String;@2cc3ad05,[Ljava.lang.String;@710b18a6),Annotation([Ljava.lang.String;@119020fb,[Ljava.lang.String;@3d9f6567,[Ledu.cmu.lti.nlp.amr.Entity;@c055c54))
AMR:
(过 / 过错, poss, 我 / 我)
(过 / 过错, poss, 是 / 是-04)

Decoded in 5,515 microseconds
Sentence: 小 王子 腼腆 地 试探 道 ： “ 我 可以 坐下 吗 ？ ”

Spans:
Span 9-10:  可以 => 可以-02
Span 3-4:  地 => 地
Span 10-11:  坐下 => 坐下-01
Span 0-1:  小 => 小
Span 8-9:  我 => 我
Span 1-2:  王子 => 王子
Span 2-3:  腼腆 => 腼腆-01
Span 4-5:  试探 => 试探-01
Span 5-6:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  可以 => 可以-02
Oracle Span 10-11:  坐下 => 坐下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  腼腆 => 腼腆-01
Oracle Span 4-5:  试探 => 试探-01
Oracle Span 5-6:  道 => 道-01

Extra span: 我 => 我
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	腼腆	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	试探	_	VV	VV	_	0	root	_	_
6	道	_	VV	VV	_	5	dep	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	可以	_	VV	VV	_	11	dep	_	_
11	坐下	_	VV	VV	_	6	ccomp	_	_
12	吗	_	SP	SP	_	5	dep	_	_
13	？	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x25 / 试探-01, arg0, x26 / 王子)
(x25 / 试探-01, manner, x28 / 腼腆-01)
(x26 / 王子, mod, x27 / 小-01)
(x29 / 道-01, arg1, x31 / 可以-02)
(x31 / 可以-02, arg0, x32 / 坐下-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),坐下,坐下-01,false), Span(9,10,List(1),可以,可以-02,false), Span(8,9,List(2),我,我,false), Span(5,6,List(3),道,道-01,false), Span(4,5,List(4),试探,试探-01,false), Span(3,4,List(5),地,地,false), Span(2,3,List(6),腼腆,腼腆-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 我, 5 -> 地, 8 -> 小, 7 -> 王子, 1 -> 可以-02, 4 -> 试探-01, 6 -> 腼腆-01, 0 -> 坐下-01, 3 -> 道-01),Map(试 -> 试探-01, 我 -> 我, 王 -> 王子, 小 -> 小, 地 -> 地, 道 -> 道-01, 坐 -> 坐下-01, 腼 -> 腼腆-01, 可 -> 可以-02))),[Ljava.lang.String;@25e2ab5a,Annotation([Ljava.lang.String;@35e5d0e5,[Ljava.lang.String;@73173f63,[Ljava.lang.String;@55562aa9),Annotation([Ljava.lang.String;@655ef322,[Ljava.lang.String;@7e276594,[Ledu.cmu.lti.nlp.amr.Dependency;@3401a114),Annotation([Ljava.lang.String;@5066d65f,[Ljava.lang.String;@4233e892,[Ljava.lang.String;@77d2e85),Annotation([Ljava.lang.String;@3ecd267f,[Ljava.lang.String;@58ffcbd7,[Ledu.cmu.lti.nlp.amr.Entity;@555cf22))
AMR:
(可 / 可以-02, ARG6, 坐 / 坐下-01)
(可 / 可以-02, poss, 我 / 我)
(地 / 地, mod, 小 / 小)
(王 / 王子, mod, 小 / 小)
(试 / 试探-01, manner, 地 / 地)
(试 / 试探-01, manner, 腼 / 腼腆-01)
(道 / 道-01, manner, 试 / 试探-01)
(道 / 道-01, purpose, 可 / 可以-02)

Decoded in 28,427 microseconds
Sentence: “ 我 命令 你 坐下 。 ” 国王 一边 回答 ， 一边 庄重 地 把 他 那 白 底 黑 花 皮袍 大襟 挪动 了 一下 。

Spans:
Span 11-12:  一边 => 一边
Span 8-9:  一边 => 一边
Span 15-16:  他 => 他
Span 3-4:  你 => 你
Span 2-3:  命令 => 命令-01
Span 9-10:  回答 => 回答-01
Span 7-8:  国王 => 国王
Span 13-14:  地 => 地
Span 4-5:  坐下 => 坐下-01
Span 22-23:  大襟 => 大襟
Span 12-13:  庄重 => 庄重
Span 1-2:  我 => 我
Span 23-24:  挪动 => 挪动-01
Span 21-22:  皮袍 => 皮袍
Span 20-21:  花 => 花-01
Span 16-17:  那 => 那
Span 19-20:  黑 => 黑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 2-3:  命令 => 命令-01
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 7-8:  国王 => 国王
Oracle Span 4-5:  坐下 => 坐下-01
Oracle Span 22-23:  大襟 => 大襟
Oracle Span 12-13:  庄重 => 庄重
Oracle Span 23-24:  挪动 => 挪动-01
Oracle Span 21-22:  皮袍 => 皮袍

Extra span: 花 => 花-01
Extra span: 黑 => 黑-01
Extra span: 那 => 那
Extra span: 他 => 他
Extra span: 地 => 地
Extra span: 一边 => 一边
Extra span: 一边 => 一边
Extra span: 我 => 我
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	命令	_	NN	NN	_	5	dep	_	_
4	你	_	PN	PN	_	5	prep	_	_
5	坐下	_	VV	VV	_	8	vmod	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	国王	_	NN	NN	_	10	nsubj	_	_
9	一边	_	CD	CD	_	10	nsubj	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	一边	_	CD	CD	_	24	nsubj	_	_
13	庄重	_	VA	VA	_	24	dvpmod	_	_
14	地	_	DEV	DEV	_	13	dvpm	_	_
15	把	_	BA	BA	_	24	ba	_	_
16	他	_	PN	PN	_	19	nn	_	_
17	那	_	DT	DT	_	19	det	_	_
18	白	_	JJ	JJ	_	19	amod	_	_
19	底	_	NN	NN	_	21	nn	_	_
20	黑	_	JJ	JJ	_	21	amod	_	_
21	花	_	NN	NN	_	23	nn	_	_
22	皮袍	_	NN	NN	_	23	nn	_	_
23	大襟	_	NN	NN	_	24	nsubj	_	_
24	挪动	_	VV	VV	_	10	conj	_	_
25	了	_	AS	AS	_	24	asp	_	_
26	一下	_	AD	AD	_	24	advmod	_	_
27	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x26 / 回答-01, arg0, x27 / 国王)
(x26 / 回答-01, arg2, x28 / 命令-01)
(x28 / 命令-01, arg1, x30 / 你)
(x28 / 命令-01, arg1, x31 / 坐下-01)
(x32 / 挪动-01, arg1, x35 / 大襟)
(x32 / 挪动-01, manner, x34 / 庄重)
(x35 / 大襟, mod, x36 / 皮袍)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),挪动,挪动-01,false), Span(22,23,List(1),大襟,大襟,false), Span(21,22,List(2),皮袍,皮袍,false), Span(20,21,List(3),花,花-01,false), Span(19,20,List(4),黑,黑-01,false), Span(16,17,List(5),那,那,false), Span(15,16,List(6),他,他,false), Span(13,14,List(7),地,地,false), Span(12,13,List(8),庄重,庄重,false), Span(11,12,List(9),一边,一边,false), Span(9,10,List(10),回答,回答-01,false), Span(8,9,List(11),一边,一边,false), Span(7,8,List(12),国王,国王,false), Span(4,5,List(13),坐下,坐下-01,false), Span(3,4,List(14),你,你,false), Span(2,3,List(15),命令,命令-01,false), Span(1,2,List(16),我,我,false)),Map(2 -> 皮袍, 5 -> 那, 12 -> 国王, 15 -> 命令-01, 8 -> 庄重, 7 -> 地, 1 -> 大襟, 4 -> 黑-01, 11 -> 一边, 14 -> 你, 6 -> 他, 0 -> 挪动-01, 9 -> 一边, 16 -> 我, 3 -> 花-01, 10 -> 回答-01, 13 -> 坐下-01),Map(庄 -> 庄重, 我 -> 我, 挪 -> 挪动-01, 你 -> 你, 大 -> 大襟, 一2 -> 一边, 他 -> 他, 命 -> 命令-01, 地 -> 地, 花 -> 花-01, 国 -> 国王, 皮 -> 皮袍, 那 -> 那, 坐 -> 坐下-01, 回 -> 回答-01, 黑 -> 黑-01, 一 -> 一边))),[Ljava.lang.String;@6bb2d00b,Annotation([Ljava.lang.String;@3c9bfddc,[Ljava.lang.String;@1a9c38eb,[Ljava.lang.String;@319bc845),Annotation([Ljava.lang.String;@4c5474f5,[Ljava.lang.String;@2f4205be,[Ledu.cmu.lti.nlp.amr.Dependency;@54e22bdd),Annotation([Ljava.lang.String;@3bd418e4,[Ljava.lang.String;@544820b7,[Ljava.lang.String;@6b98a075),Annotation([Ljava.lang.String;@2e61d218,[Ljava.lang.String;@3569fc08,[Ledu.cmu.lti.nlp.amr.Entity;@20b12f8a))
AMR:
(一2 / 一边, location, 国 / 国王)
(一2 / 一边, topic, 坐 / 坐下-01)
(命 / 命令-01, example, 我 / 我)
(命 / 命令-01, prep-through, 坐 / 坐下-01)
(回 / 回答-01, location, 一 / 一边)
(回 / 回答-01, manner, 一2 / 一边)
(地 / 地, mod, 庄 / 庄重)
(地 / 地, mod, 那 / 那)
(地 / 地, prep-through, 他 / 他)
(坐 / 坐下-01, degree, 你 / 你)
(大 / 大襟, mod, 皮 / 皮袍)
(庄 / 庄重, mod, 一 / 一边)
(挪 / 挪动-01, location, 大 / 大襟)
(皮 / 皮袍, location, 花 / 花-01)
(黑 / 黑-01, mod, 那 / 那)
(黑 / 黑-01, purpose, 花 / 花-01)

Decoded in 88,949 microseconds
Sentence: 可是 小 王子 感到 很 奇怪 。

Spans:
Span 5-6:  奇怪 => 奇怪-02
Span 1-2:  小 => 小
Span 4-5:  很 => 很
Span 3-4:  感到 => 感到-01
Span 2-3:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  奇怪 => 奇怪-02
Oracle Span 1-2:  小 => 小-01
Oracle Span 4-5:  很 => 很
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 2-3:  王子 => 王子

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	4	nsubj	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	奇怪	_	VA	VA	_	4	ccomp	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	王子	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x2 / 感到-01, arg0, x3 / 王子)
(x2 / 感到-01, arg1, x5 / 奇怪-02)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 奇怪-02, degree, x6 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),奇怪,奇怪-02,false), Span(4,5,List(1),很,很,false), Span(3,4,List(2),感到,感到-01,false), Span(2,3,List(3),王子,王子,false), Span(1,2,List(4),小,小,false)),Map(2 -> 感到-01, 1 -> 很, 4 -> 小, 0 -> 奇怪-02, 3 -> 王子),Map(感 -> 感到-01, 王 -> 王子, 很 -> 很, 小 -> 小, 奇 -> 奇怪-02))),[Ljava.lang.String;@e84a8e1,Annotation([Ljava.lang.String;@2e554a3b,[Ljava.lang.String;@54a67a45,[Ljava.lang.String;@7d42c224),Annotation([Ljava.lang.String;@56aaaecd,[Ljava.lang.String;@522a32b1,[Ledu.cmu.lti.nlp.amr.Dependency;@35390ee3),Annotation([Ljava.lang.String;@5e01a982,[Ljava.lang.String;@5ddea849,[Ljava.lang.String;@5ee2b6f9),Annotation([Ljava.lang.String;@23d1e5d0,[Ljava.lang.String;@704f1591,[Ledu.cmu.lti.nlp.amr.Entity;@58fb7731))
AMR:
(奇 / 奇怪-02, degree, 很 / 很)
(感 / 感到-01, example, 奇 / 奇怪-02)
(感 / 感到-01, example, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 8,746 microseconds
Sentence: 这么 小 的 行星 ，

Spans:
Span 1-2:  小 => 小
Span 3-4:  行星 => 行星
Span 0-1:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  行星 => 行星
Oracle Span 0-1:  这么 => 这么

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	这么	_	AD	AD	_	2	advmod	_	_
2	小	_	VA	VA	_	4	nsubj	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	行星	_	NN	NN	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 行星, mod, x2 / 小-01)
(x2 / 小-01, degree, x3 / 这么)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),行星,行星,false), Span(1,2,List(1),小,小,false), Span(0,1,List(2),这么,这么,false)),Map(2 -> 这么, 1 -> 小, 0 -> 行星),Map(这 -> 这么, 小 -> 小, 行 -> 行星))),[Ljava.lang.String;@13e547a9,Annotation([Ljava.lang.String;@3fb6cf60,[Ljava.lang.String;@37ddb69a,[Ljava.lang.String;@349c1daf),Annotation([Ljava.lang.String;@dfddc9a,[Ljava.lang.String;@4b9df8a,[Ledu.cmu.lti.nlp.amr.Dependency;@5e8ac0e1),Annotation([Ljava.lang.String;@aafcffa,[Ljava.lang.String;@6955cb39,[Ljava.lang.String;@235a0c16),Annotation([Ljava.lang.String;@2b5f4d54,[Ljava.lang.String;@5f7b97da,[Ledu.cmu.lti.nlp.amr.Entity;@18b0930f))
AMR:
(小 / 小, degree, 这 / 这么)
(行 / 行星, mod, 小 / 小)

Decoded in 4,878 microseconds
Sentence: 国王 他 对 什么 进行 统治 呢 ？

Spans:
Span 3-4:  什么 => 什么
Span 1-2:  他 => 他
Span 0-1:  国王 => 国王
Span 2-3:  对 => 对-02
Span 5-6:  统治 => 统治-01
Span 4-5:  进行 => 进行-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 5-6:  统治 => 统治-01
Oracle Span 4-5:  进行 => 进行-01

Extra span: 什么 => 什么
Extra span: 对 => 对-02
Extra span: 他 => 他
Dependencies:
1	国王	_	NN	NN	_	5	nsubj	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	什么	_	PN	PN	_	3	pobj	_	_
5	进行	_	VV	VV	_	0	root	_	_
6	统治	_	NN	NN	_	5	dobj	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x4 / 进行-01, arg0, x6 / 国王)
(x4 / 进行-01, arg1, x7 / 统治-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),统治,统治-01,false), Span(4,5,List(1),进行,进行-01,false), Span(3,4,List(2),什么,什么,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),他,他,false), Span(0,1,List(5),国王,国王,false)),Map(2 -> 什么, 5 -> 国王, 1 -> 进行-01, 4 -> 他, 0 -> 统治-01, 3 -> 对-02),Map(他 -> 他, 国 -> 国王, 统 -> 统治-01, 进 -> 进行-01, 什 -> 什么, 对 -> 对-02))),[Ljava.lang.String;@6b7906b3,Annotation([Ljava.lang.String;@3a1dd365,[Ljava.lang.String;@395b56bb,[Ljava.lang.String;@256f8274),Annotation([Ljava.lang.String;@68044f4,[Ljava.lang.String;@52d239ba,[Ledu.cmu.lti.nlp.amr.Dependency;@315f43d5),Annotation([Ljava.lang.String;@68fa0ba8,[Ljava.lang.String;@6c5945a7,[Ljava.lang.String;@2f05be7f),Annotation([Ljava.lang.String;@640f11a1,[Ljava.lang.String;@5c10f1c3,[Ledu.cmu.lti.nlp.amr.Entity;@7ac2e39b))
AMR:
(对 / 对-02, topic, 他 / 他)
(进 / 进行-01, mod, 什 / 什么)
(进 / 进行-01, name, 统 / 统治-01)
(进 / 进行-01, time, 国 / 国王)
(进 / 进行-01, time, 对 / 对-02)

Decoded in 10,735 microseconds
Sentence: 他 对 国王 说 ： “ 陛下 … 请 原谅 ， 我 想 问 您 … ”

Spans:
Span 0-1:  他 => 他
Span 9-10:  原谅 => 原谅-01
Span 2-3:  国王 => 国王
Span 1-2:  对 => 对-02
Span 14-15:  您 => 您
Span 12-13:  想 => 想-05
Span 11-12:  我 => 我
Span 3-4:  说 => 说-02
Span 8-9:  请 => 请-02
Span 13-14:  问 => 问-01
Span 6-7:  陛下 => 陛下

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  原谅 => 原谅-01
Oracle Span 2-3:  国王 => 国王
Oracle Span 12-13:  想 => 想-02
Oracle Span 3-4:  说 => 说-02
Oracle Span 8-9:  请 => 请-03
Oracle Span 13-14:  问 => 问-01

Extra span: 您 => 您
Incorrect span: 想 => 想-05
Extra span: 我 => 我
Incorrect span: 请 => 请-02
Extra span: 陛下 => 陛下
Extra span: 对 => 对-02
Missing span: 请 => 请-03
Missing span: 想 => 想-02
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	国王	_	NN	NN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	7	punct	_	_
7	陛下	_	NN	NN	_	4	ccomp	_	_
8	…	_	PU	PU	_	15	punct	_	_
9	请	_	VV	VV	_	10	dep	_	_
10	原谅	_	VV	VV	_	13	dep	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	我	_	PN	PN	_	13	nsubj	_	_
13	想	_	VV	VV	_	14	rcmod	_	_
14	问	_	NN	NN	_	15	nn	_	_
15	您	_	PN	PN	_	7	prnmod	_	_
16	…	_	PU	PU	_	15	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-02, arg0, x3 / 他)
(x0 / 说-02, arg1, x16 / 请-03)
(x0 / 说-02, arg3, x4 / 国王)
(x16 / 请-03, arg0, x17 / 原谅-01)
(x17 / 原谅-01, arg1, x19 / 想-02)
(x19 / 想-02, arg1, x21 / 问-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),您,您,false), Span(13,14,List(1),问,问-01,false), Span(12,13,List(2),想,想-05,false), Span(11,12,List(3),我,我,false), Span(9,10,List(4),原谅,原谅-01,false), Span(8,9,List(5),请,请-02,false), Span(6,7,List(6),陛下,陛下,false), Span(3,4,List(7),说,说-02,false), Span(2,3,List(8),国王,国王,false), Span(1,2,List(9),对,对-02,false), Span(0,1,List(10),他,他,false)),Map(2 -> 想-05, 5 -> 请-02, 8 -> 国王, 7 -> 说-02, 1 -> 问-01, 4 -> 原谅-01, 6 -> 陛下, 9 -> 对-02, 0 -> 您, 10 -> 他, 3 -> 我),Map(陛 -> 陛下, 我 -> 我, 他 -> 他, 国 -> 国王, 说 -> 说-02, 请 -> 请-02, 原 -> 原谅-01, 问 -> 问-01, 对 -> 对-02, 想 -> 想-05, 您 -> 您))),[Ljava.lang.String;@78365cfa,Annotation([Ljava.lang.String;@64a8c844,[Ljava.lang.String;@3f6db3fb,[Ljava.lang.String;@52de51b6),Annotation([Ljava.lang.String;@18c5069b,[Ljava.lang.String;@3a0d172f,[Ledu.cmu.lti.nlp.amr.Dependency;@68ad99fe),Annotation([Ljava.lang.String;@485e36bc,[Ljava.lang.String;@781f10f2,[Ljava.lang.String;@2a79d4b1),Annotation([Ljava.lang.String;@2e9fda69,[Ljava.lang.String;@17cdf2d0,[Ledu.cmu.lti.nlp.amr.Entity;@1755e85b))
AMR:
(原 / 原谅-01, manner, 请 / 请-02)
(对 / 对-02, prep-following, 他 / 他)
(想 / 想-05, manner, 原 / 原谅-01)
(想 / 想-05, manner, 我 / 我)
(说 / 说-02, direction, 国 / 国王)
(说 / 说-02, prep-following, 对 / 对-02)
(说 / 说-02, prep-following, 陛 / 陛下)
(请 / 请-02, manner, 陛 / 陛下)
(问 / 问-01, manner, 想 / 想-05)
(问 / 问-01, prep-along-with, 您 / 您)

Decoded in 33,285 microseconds
Sentence: 国王 急忙 抢 着 说道 ： “ 我 命令 你 问 我 。 ”

Spans:
Span 9-10:  你 => 你
Span 8-9:  命令 => 命令-01
Span 0-1:  国王 => 国王
Span 1-2:  急忙 => 急忙
Span 11-12:  我 => 我
Span 7-8:  我 => 我
Span 2-3:  抢 => 抢-02
Span 4-5:  说道 => 说道
Span 10-11:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  你 => 你
Oracle Span 8-9:  命令 => 命令-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 1-2:  急忙 => 急忙
Oracle Span 2-3:  抢 => 抢-02
Oracle Span 4-5:  说道 => 说道-01
Oracle Span 10-11:  问 => 问-01

Extra span: 我 => 我
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	急忙	_	VV	VV	_	0	root	_	_
3	抢	_	VV	VV	_	2	ccomp	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	说道	_	NN	NN	_	3	dobj	_	_
6	：	_	PU	PU	_	2	punct	_	_
7	“	_	PU	PU	_	2	punct	_	_
8	我	_	PN	PN	_	9	nsubj	_	_
9	命令	_	VV	VV	_	2	conj	_	_
10	你	_	PN	PN	_	11	nsubj	_	_
11	问	_	VV	VV	_	9	ccomp	_	_
12	我	_	PN	PN	_	11	ccomp	_	_
13	。	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 抢-02, arg0, x4 / 国王)
(x2 / 抢-02, arg1, x6 / 说道-01)
(x2 / 抢-02, manner, x5 / 急忙)
(x6 / 说道-01, arg1, x8 / 命令-01)
(x8 / 命令-01, arg1, x10 / 你)
(x8 / 命令-01, arg2, x11 / 问-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),我,我,false), Span(10,11,List(1),问,问-01,false), Span(9,10,List(2),你,你,false), Span(8,9,List(3),命令,命令-01,false), Span(7,8,List(4),我,我,false), Span(4,5,List(5),说道,说道,false), Span(2,3,List(6),抢,抢-02,false), Span(1,2,List(7),急忙,急忙,false), Span(0,1,List(8),国王,国王,false)),Map(2 -> 你, 5 -> 说道, 8 -> 国王, 7 -> 急忙, 1 -> 问-01, 4 -> 我, 6 -> 抢-02, 0 -> 我, 3 -> 命令-01),Map(我 -> 我, 我2 -> 我, 你 -> 你, 命 -> 命令-01, 国 -> 国王, 说 -> 说道, 问 -> 问-01, 急 -> 急忙, 抢 -> 抢-02))),[Ljava.lang.String;@736d6a5c,Annotation([Ljava.lang.String;@2371aaca,[Ljava.lang.String;@5b529706,[Ljava.lang.String;@63fdab07),Annotation([Ljava.lang.String;@7b5a12ae,[Ljava.lang.String;@5553d0f5,[Ledu.cmu.lti.nlp.amr.Dependency;@1af687fe),Annotation([Ljava.lang.String;@14dda234,[Ljava.lang.String;@3f390d63,[Ljava.lang.String;@74a6a609),Annotation([Ljava.lang.String;@5a411614,[Ljava.lang.String;@2374d36a,[Ledu.cmu.lti.nlp.amr.Entity;@54d18072))
AMR:
(命 / 命令-01, destination, 问 / 问-01)
(命 / 命令-01, domain, 我2 / 我)
(命 / 命令-01, time, 说 / 说道)
(急 / 急忙, mod, 国 / 国王)
(抢 / 抢-02, degree, 说 / 说道)
(抢 / 抢-02, manner, 急 / 急忙)
(问 / 问-01, condition, 我 / 我)
(问 / 问-01, domain, 你 / 你)

Decoded in 28,997 microseconds
Sentence: “ 陛下 … 你 统治 什么 呢 ？ ”

Spans:
Span 5-6:  什么 => 什么
Span 3-4:  你 => 你
Span 4-5:  统治 => 统治-01
Span 1-2:  陛下 => 陛下

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  统治 => 统治-01
Oracle Span 1-2:  陛下 => 陛下

Extra span: 什么 => 什么
Extra span: 你 => 你
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	陛下	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	5	punct	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	统治	_	NN	NN	_	2	dep	_	_
6	什么	_	PN	PN	_	2	dep	_	_
7	呢	_	SP	SP	_	2	dep	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 统治-01, arg0, x8 / 陛下)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),什么,什么,false), Span(4,5,List(1),统治,统治-01,false), Span(3,4,List(2),你,你,false), Span(1,2,List(3),陛下,陛下,false)),Map(2 -> 你, 1 -> 统治-01, 0 -> 什么, 3 -> 陛下),Map(陛 -> 陛下, 你 -> 你, 统 -> 统治-01, 什 -> 什么))),[Ljava.lang.String;@1506f20f,Annotation([Ljava.lang.String;@47a5b70d,[Ljava.lang.String;@424fd310,[Ljava.lang.String;@1a45193b),Annotation([Ljava.lang.String;@38f116f6,[Ljava.lang.String;@5286c33a,[Ledu.cmu.lti.nlp.amr.Dependency;@6e6d5d29),Annotation([Ljava.lang.String;@5c530d1e,[Ljava.lang.String;@6c25e6c4,[Ljava.lang.String;@85e6769),Annotation([Ljava.lang.String;@c5ee75e,[Ljava.lang.String;@48a12036,[Ledu.cmu.lti.nlp.amr.Entity;@bf1ec20))
AMR:
(统 / 统治-01, direction, 你 / 你)
(统 / 统治-01, manner, 陛 / 陛下)
(统 / 统治-01, subset, 什 / 什么)

Decoded in 6,743 microseconds
Sentence: 国王 非常 简单 明了 地 说 ： “ 我 统治 一切 。 ”

Spans:
Span 10-11:  一切 => 一切
Span 0-1:  国王 => 国王
Span 4-5:  地 => 地
Span 8-9:  我 => 我
Span 2-3:  简单 => 简单-01
Span 9-10:  统治 => 统治-01
Span 5-6:  说 => 说-02
Span 1-2:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  一切 => 一切
Oracle Span 0-1:  国王 => 国王
Oracle Span 9-10:  统治 => 统治-01
Oracle Span 5-6:  说 => 说-01
Oracle Span 1-2:  非常 => 非常-01

Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Extra span: 简单 => 简单-01
Incorrect span: 非常 => 非常
Missing span: 说 => 说-01
Missing span: 非常 => 非常-01
Dependencies:
1	国王	_	NN	NN	_	6	nsubj	_	_
2	非常	_	AD	AD	_	3	advmod	_	_
3	简单	_	VA	VA	_	6	dvpmod	_	_
4	明了	_	VA	VA	_	3	comod	_	_
5	地	_	DEV	DEV	_	3	dvpm	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	10	punct	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	统治	_	NN	NN	_	6	ccomp	_	_
11	一切	_	PN	PN	_	10	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 国王)
(x0 / 说-01, arg1, x5 / 统治-01)
(x5 / 统治-01, arg1, x7 / 一切)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),一切,一切,false), Span(9,10,List(1),统治,统治-01,false), Span(8,9,List(2),我,我,false), Span(5,6,List(3),说,说-02,false), Span(4,5,List(4),地,地,false), Span(2,3,List(5),简单,简单-01,false), Span(1,2,List(6),非常,非常,false), Span(0,1,List(7),国王,国王,false)),Map(2 -> 我, 5 -> 简单-01, 7 -> 国王, 1 -> 统治-01, 4 -> 地, 6 -> 非常, 0 -> 一切, 3 -> 说-02),Map(简 -> 简单-01, 我 -> 我, 地 -> 地, 国 -> 国王, 非 -> 非常, 统 -> 统治-01, 说 -> 说-02, 一 -> 一切))),[Ljava.lang.String;@70efb718,Annotation([Ljava.lang.String;@b70da4c,[Ljava.lang.String;@4a11eb84,[Ljava.lang.String;@4e858e0a),Annotation([Ljava.lang.String;@435fb7b5,[Ljava.lang.String;@4e70a728,[Ledu.cmu.lti.nlp.amr.Dependency;@b7838a9),Annotation([Ljava.lang.String;@696f0212,[Ljava.lang.String;@5733f295,[Ljava.lang.String;@1c3146bc),Annotation([Ljava.lang.String;@56c698e3,[Ljava.lang.String;@47a86fbb,[Ledu.cmu.lti.nlp.amr.Entity;@f478a81))
AMR:
(国 / 国王, mod, 简 / 简单-01)
(地 / 地, mod, 简 / 简单-01)
(简 / 简单-01, degree, 非 / 非常)
(统 / 统治-01, domain, 我 / 我)
(统 / 统治-01, prep-in, 一 / 一切)
(说 / 说-02, degree, 地 / 地)
(说 / 说-02, domain, 一 / 一切)

Decoded in 21,355 microseconds
Sentence: “ 一切 ？ ”

Spans:
Span 1-2:  一切 => 一切

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一切 => 一切

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	一切	_	PN	PN	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),一切,一切,false)),Map(0 -> 一切),Map(一 -> 一切))),[Ljava.lang.String;@19553973,Annotation([Ljava.lang.String;@7bb6ab3a,[Ljava.lang.String;@7fe7c640,[Ljava.lang.String;@4c4748bf),Annotation([Ljava.lang.String;@7ce97ee5,[Ljava.lang.String;@32c8e539,[Ledu.cmu.lti.nlp.amr.Dependency;@73dce0e6),Annotation([Ljava.lang.String;@5a85c92,[Ljava.lang.String;@32811494,[Ljava.lang.String;@4795ded0),Annotation([Ljava.lang.String;@53dacd14,[Ljava.lang.String;@14d14731,[Ledu.cmu.lti.nlp.amr.Entity;@2eced48b))
AMR:


Decoded in 1,598 microseconds
Sentence: 国王 轻轻 地 用 手 指 着 他 的 行星 和 其他 的 行星 ， 以及 所有 的 星星 。

Spans:
Span 7-8:  他 => 他
Span 11-12:  其他 => 其他
Span 0-1:  国王 => 国王
Span 2-3:  地 => 地
Span 16-17:  所有 => 所有
Span 4-5:  手 => 手
Span 5-6:  指 => 指-02
Span 18-19:  星星 => 星星
Span 3-4:  用 => 用
Span 13-14:  行星 => 行星
Span 9-10:  行星 => 行星
Span 1-2:  轻轻 => 轻轻-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 11-12:  其他 => 其他
Oracle Span 0-1:  国王 => 国王
Oracle Span 16-17:  所有 => 所有
Oracle Span 4-5:  手 => 手
Oracle Span 5-6:  指 => 指-02
Oracle Span 18-19:  星星 => 星星
Oracle Span 3-4:  用 => 用-01
Oracle Span 9-10:  行星 => 行星
Oracle Span 13-14:  行星 => 行星
Oracle Span 1-2:  轻轻 => 轻轻-01

Incorrect span: 用 => 用
Extra span: 地 => 地
Missing span: 用 => 用-01
Dependencies:
1	国王	_	NN	NN	_	6	nsubj	_	_
2	轻轻	_	VA	VA	_	6	dep	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	用	_	P	P	_	6	prep	_	_
5	手	_	NN	NN	_	4	pobj	_	_
6	指	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	行星	_	NN	NN	_	19	conj	_	_
11	和	_	CC	CC	_	19	cc	_	_
12	其他	_	DT	DT	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	行星	_	NN	NN	_	19	dep	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	以及	_	CC	CC	_	19	cc	_	_
17	所有	_	DT	DT	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	星星	_	NN	NN	_	6	dobj	_	_
20	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 用-01, arg0, x2 / 国王)
(x0 / 用-01, arg1, x3 / 手)
(x0 / 用-01, arg2, x5 / 指-02)
(x0 / 用-01, manner, x4 / 轻轻-01)
(x10 / 行星, mod, x11 / 其他)
(x12 / 星星, mod, x13 / 所有)
(x8 / 行星, poss, x9 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),星星,星星,false), Span(16,17,List(1),所有,所有,false), Span(13,14,List(2),行星,行星,false), Span(11,12,List(3),其他,其他,false), Span(9,10,List(4),行星,行星,false), Span(7,8,List(5),他,他,false), Span(5,6,List(6),指,指-02,false), Span(4,5,List(7),手,手,false), Span(3,4,List(8),用,用,false), Span(2,3,List(9),地,地,false), Span(1,2,List(10),轻轻,轻轻-01,false), Span(0,1,List(11),国王,国王,false)),Map(2 -> 行星, 5 -> 他, 8 -> 用, 7 -> 手, 1 -> 所有, 11 -> 国王, 4 -> 行星, 6 -> 指-02, 9 -> 地, 0 -> 星星, 10 -> 轻轻-01, 3 -> 其他),Map(指 -> 指-02, 用 -> 用, 星 -> 星星, 他 -> 他, 所 -> 所有, 地 -> 地, 国 -> 国王, 行2 -> 行星, 其 -> 其他, 轻 -> 轻轻-01, 行 -> 行星, 手 -> 手))),[Ljava.lang.String;@47c4ecdc,Annotation([Ljava.lang.String;@42f33b5d,[Ljava.lang.String;@5c8504fd,[Ljava.lang.String;@4b7e96a),Annotation([Ljava.lang.String;@6475472c,[Ljava.lang.String;@3f07b12c,[Ledu.cmu.lti.nlp.amr.Dependency;@4bd1f8dd),Annotation([Ljava.lang.String;@7096b474,[Ljava.lang.String;@3e14c16d,[Ljava.lang.String;@3c989952),Annotation([Ljava.lang.String;@784b990c,[Ljava.lang.String;@3d3ba765,[Ledu.cmu.lti.nlp.amr.Entity;@25bc0606))
AMR:
(他 / 他, timezone, 指 / 指-02)
(指 / 指-02, age, 所 / 所有)
(星 / 星星, domain, 其 / 其他)
(星 / 星星, mod, 所 / 所有)
(用 / 用, location, 国 / 国王)
(用 / 用, manner, 轻 / 轻轻-01)
(用 / 用, prep-by, 指 / 指-02)
(用 / 用, quant, 手 / 手)
(行 / 行星, mod, 其 / 其他)
(行2 / 行星, poss, 他 / 他)
(轻 / 轻轻-01, ARG1, 地 / 地)

Decoded in 50,400 microseconds
Sentence: 小 王子 说 ： “ 统治 这 一切 ？ ”

Spans:
Span 7-8:  一切 => 一切
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 5-6:  统治 => 统治-01
Span 2-3:  说 => 说-02
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  一切 => 一切
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  统治 => 统治-01
Oracle Span 2-3:  说 => 说-01
Oracle Span 6-7:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	6	punct	_	_
6	统治	_	NN	NN	_	3	ccomp	_	_
7	这	_	DT	DT	_	8	det	_	_
8	一切	_	PN	PN	_	6	dobj	_	_
9	？	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 统治-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 统治-01, arg1, x5 / 一切)
(x5 / 一切, mod, x6 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),一切,一切,false), Span(6,7,List(1),这,这,false), Span(5,6,List(2),统治,统治-01,false), Span(2,3,List(3),说,说-02,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小,false)),Map(2 -> 统治-01, 5 -> 小, 1 -> 这, 4 -> 王子, 0 -> 一切, 3 -> 说-02),Map(这 -> 这, 王 -> 王子, 小 -> 小, 统 -> 统治-01, 说 -> 说-02, 一 -> 一切))),[Ljava.lang.String;@5d1659ea,Annotation([Ljava.lang.String;@793138bd,[Ljava.lang.String;@1951b871,[Ljava.lang.String;@5c18016b),Annotation([Ljava.lang.String;@33aeca0b,[Ljava.lang.String;@43aaf813,[Ledu.cmu.lti.nlp.amr.Dependency;@57ac5227),Annotation([Ljava.lang.String;@4ba302e0,[Ljava.lang.String;@e98770d,[Ljava.lang.String;@1ae67cad),Annotation([Ljava.lang.String;@2f6e28bc,[Ljava.lang.String;@7c098bb3,[Ledu.cmu.lti.nlp.amr.Entity;@31e4bb20))
AMR:
(一 / 一切, mod, 这 / 这)
(王 / 王子, mod, 小 / 小)
(统 / 统治-01, ARG6, 一 / 一切)
(统 / 统治-01, manner, 说 / 说-02)
(说 / 说-02, mode, 王 / 王子)

Decoded in 12,554 microseconds
Sentence: “ 统治 这 一切 。 ”

Spans:
Span 3-4:  一切 => 一切
Span 1-2:  统治 => 统治-01
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  一切 => 一切
Oracle Span 1-2:  统治 => 统治-01
Oracle Span 2-3:  这 => 这

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	统治	_	NN	NN	_	0	root	_	_
3	这	_	DT	DT	_	4	det	_	_
4	一切	_	PN	PN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 统治-01, arg1, x7 / 一切)
(x7 / 一切, mod, x8 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),一切,一切,false), Span(2,3,List(1),这,这,false), Span(1,2,List(2),统治,统治-01,false)),Map(2 -> 统治-01, 1 -> 这, 0 -> 一切),Map(这 -> 这, 统 -> 统治-01, 一 -> 一切))),[Ljava.lang.String;@18cebaa5,Annotation([Ljava.lang.String;@463b4ac8,[Ljava.lang.String;@765f05af,[Ljava.lang.String;@62f68dff),Annotation([Ljava.lang.String;@f001896,[Ljava.lang.String;@13f17eb4,[Ledu.cmu.lti.nlp.amr.Dependency;@1d0d6318),Annotation([Ljava.lang.String;@4bc28c33,[Ljava.lang.String;@4409e975,[Ljava.lang.String;@5c153b9e),Annotation([Ljava.lang.String;@2a7686a7,[Ljava.lang.String;@758a34ce,[Ledu.cmu.lti.nlp.amr.Entity;@7ec3394b))
AMR:
(一 / 一切, mod, 这 / 这)
(统 / 统治-01, location, 一 / 一切)

Decoded in 4,484 microseconds
Sentence: 原来 他 不仅 是 一 个 绝对 的 君主 ， 而且 是 整个 宇宙 的 君主 。

Spans:
Span 1-2:  他 => 他
Span 0-1:  原来 => 原来-01
Span 15-16:  君主 => 君主
Span 8-9:  君主 => 君主
Span 13-14:  宇宙 => 宇宙
Span 12-13:  整个 => 整个
Span 11-12:  是 => 是-04
Span 3-4:  是 => 是-04
Span 6-7:  绝对 => 绝对

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他 => 他
Oracle Span 8-9:  君主 => 君主
Oracle Span 15-16:  君主 => 君主
Oracle Span 13-14:  宇宙 => 宇宙
Oracle Span 12-13:  整个 => 整个
Oracle Span 6-7:  绝对 => 绝对-01

Extra span: 是 => 是-04
Incorrect span: 绝对 => 绝对
Extra span: 是 => 是-04
Extra span: 原来 => 原来-01
Missing span: 绝对 => 绝对-01
Dependencies:
1	原来	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	不仅	_	CC	CC	_	4	cc	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	9	clf	_	_
7	绝对	_	JJ	JJ	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	君主	_	NN	NN	_	4	attr	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	而且	_	CC	CC	_	4	cc	_	_
12	是	_	VC	VC	_	4	conj	_	_
13	整个	_	JJ	JJ	_	14	amod	_	_
14	宇宙	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	君主	_	NN	NN	_	12	attr	_	_
17	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x4 / 君主, domain, x7 / 他)
(x4 / 君主, mod, x5 / 绝对-01)
(x9 / 宇宙, mod, x10 / 整个)
(x9 / 宇宙, poss, x8 / 君主)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),君主,君主,false), Span(13,14,List(1),宇宙,宇宙,false), Span(12,13,List(2),整个,整个,false), Span(11,12,List(3),是,是-04,false), Span(8,9,List(4),君主,君主,false), Span(6,7,List(5),绝对,绝对,false), Span(3,4,List(6),是,是-04,false), Span(1,2,List(7),他,他,false), Span(0,1,List(8),原来,原来-01,false)),Map(2 -> 整个, 5 -> 绝对, 8 -> 原来-01, 7 -> 他, 1 -> 宇宙, 4 -> 君主, 6 -> 是-04, 0 -> 君主, 3 -> 是-04),Map(宇 -> 宇宙, 绝 -> 绝对, 整 -> 整个, 君 -> 君主, 他 -> 他, 君2 -> 君主, 原 -> 原来-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@bff34c6,Annotation([Ljava.lang.String;@1522d8a0,[Ljava.lang.String;@312ab28e,[Ljava.lang.String;@5644dc81),Annotation([Ljava.lang.String;@246f8b8b,[Ljava.lang.String;@278bb07e,[Ledu.cmu.lti.nlp.amr.Dependency;@4351c8c3),Annotation([Ljava.lang.String;@3381b4fc,[Ljava.lang.String;@6bea52d4,[Ljava.lang.String;@11981797),Annotation([Ljava.lang.String;@5c42d2b7,[Ljava.lang.String;@625abb97,[Ledu.cmu.lti.nlp.amr.Entity;@5b1f29fa))
AMR:
(原 / 原来-01, ARG1, 他 / 他)
(君2 / 君主, mod, 绝 / 绝对)
(君2 / 君主, time, 原 / 原来-01)
(宇 / 宇宙, mod, 整 / 整个)
(宇 / 宇宙, poss, 君 / 君主)
(是 / 是-04, ARG0, 君2 / 君主)
(是 / 是-04, ARG4, 整 / 整个)
(是2 / 是-04, ARG4, 他 / 他)

Decoded in 29,529 microseconds
Sentence: “ 那么 ， 星星 都 服从 您 吗 ？ ”

Spans:
Span 6-7:  您 => 您
Span 3-4:  星星 => 星星
Span 5-6:  服从 => 服从-01
Span 1-2:  那么 => 那么
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  您 => 您
Oracle Span 3-4:  星星 => 星星
Oracle Span 5-6:  服从 => 服从-01
Oracle Span 4-5:  都 => 都

Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	星星	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	服从	_	VV	VV	_	0	root	_	_
7	您	_	PN	PN	_	6	dobj	_	_
8	吗	_	SP	SP	_	6	dep	_	_
9	？	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 服从-01, arg0, x10 / 星星)
(x9 / 服从-01, arg1, x12 / 您)
(x9 / 服从-01, manner, x11 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),您,您,false), Span(5,6,List(1),服从,服从-01,false), Span(4,5,List(2),都,都,false), Span(3,4,List(3),星星,星星,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 都, 1 -> 服从-01, 4 -> 那么, 0 -> 您, 3 -> 星星),Map(星 -> 星星, 服 -> 服从-01, 那 -> 那么, 都 -> 都, 您 -> 您))),[Ljava.lang.String;@aeab9a1,Annotation([Ljava.lang.String;@40f70521,[Ljava.lang.String;@774698ab,[Ljava.lang.String;@55342f40),Annotation([Ljava.lang.String;@a4ca3f6,[Ljava.lang.String;@72ea6193,[Ledu.cmu.lti.nlp.amr.Dependency;@31aa3ca5),Annotation([Ljava.lang.String;@45905bff,[Ljava.lang.String;@2a2c13a8,[Ljava.lang.String;@b6b1987),Annotation([Ljava.lang.String;@6b44435b,[Ljava.lang.String;@2ccca26f,[Ledu.cmu.lti.nlp.amr.Entity;@66b7550d))
AMR:
(服 / 服从-01, degree, 那 / 那么)
(服 / 服从-01, location, 星 / 星星)
(服 / 服从-01, manner, 都 / 都)
(服 / 服从-01, prep-through, 您 / 您)

Decoded in 9,570 microseconds
Sentence: “ 那 当然 ！ ” 国王 对 他 说 ，

Spans:
Span 7-8:  他 => 他
Span 5-6:  国王 => 国王
Span 6-7:  对 => 对-02
Span 2-3:  当然 => 当然
Span 8-9:  说 => 说-02
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 5-6:  国王 => 国王
Oracle Span 2-3:  当然 => 当然
Oracle Span 8-9:  说 => 说-01
Oracle Span 1-2:  那 => 那

Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那	_	PN	PN	_	4	nsubj	_	_
3	当然	_	AD	AD	_	4	advmod	_	_
4	！	_	VV	VV	_	0	root	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	国王	_	NN	NN	_	9	nsubj	_	_
7	对	_	P	P	_	9	prep	_	_
8	他	_	PN	PN	_	7	pobj	_	_
9	说	_	VV	VV	_	4	conj	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x3 / 当然)
(x0 / 说-01, arg3, x5 / 他)
(x3 / 当然, mod, x4 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),他,他,false), Span(6,7,List(2),对,对-02,false), Span(5,6,List(3),国王,国王,false), Span(2,3,List(4),当然,当然,false), Span(1,2,List(5),那,那,false)),Map(2 -> 对-02, 5 -> 那, 1 -> 他, 4 -> 当然, 0 -> 说-02, 3 -> 国王),Map(他 -> 他, 国 -> 国王, 说 -> 说-02, 那 -> 那, 对 -> 对-02, 当 -> 当然))),[Ljava.lang.String;@3543df7d,Annotation([Ljava.lang.String;@7c541c15,[Ljava.lang.String;@3542162a,[Ljava.lang.String;@698122b2),Annotation([Ljava.lang.String;@4212a0c8,[Ljava.lang.String;@1e7aa82b,[Ledu.cmu.lti.nlp.amr.Dependency;@3b2c0e88),Annotation([Ljava.lang.String;@5bd82fed,[Ljava.lang.String;@c1bd0be,[Ljava.lang.String;@476b0ae6),Annotation([Ljava.lang.String;@1c6804cd,[Ljava.lang.String;@655f7ea,[Ledu.cmu.lti.nlp.amr.Entity;@549949be))
AMR:
(对 / 对-02, location, 国 / 国王)
(对 / 对-02, manner, 当 / 当然)
(当 / 当然, mod, 那 / 那)
(说 / 说-02, degree, 对 / 对-02)
(说 / 说-02, direction, 他 / 他)

Decoded in 17,921 microseconds
Sentence: “ 它们 立即 就 得 服从 。

Spans:
Span 1-2:  它们 => 它们
Span 3-4:  就 => 就-01
Span 4-5:  得 => 得-06
Span 5-6:  服从 => 服从-01
Span 2-3:  立即 => 立即

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  它们 => 它们
Oracle Span 3-4:  就 => 就
Oracle Span 5-6:  服从 => 服从-01
Oracle Span 2-3:  立即 => 立即

Extra span: 得 => 得-06
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它们	_	PN	PN	_	5	nsubj	_	_
3	立即	_	AD	AD	_	5	advmod	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	得	_	VV	VV	_	6	dep	_	_
6	服从	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 服从-01, arg0, x10 / 它们)
(x7 / 服从-01, manner, x8 / 就)
(x7 / 服从-01, manner, x9 / 立即)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),服从,服从-01,false), Span(4,5,List(1),得,得-06,false), Span(3,4,List(2),就,就-01,false), Span(2,3,List(3),立即,立即,false), Span(1,2,List(4),它们,它们,false)),Map(2 -> 就-01, 1 -> 得-06, 4 -> 它们, 0 -> 服从-01, 3 -> 立即),Map(就 -> 就-01, 得 -> 得-06, 它 -> 它们, 服 -> 服从-01, 立 -> 立即))),[Ljava.lang.String;@4b3a45f1,Annotation([Ljava.lang.String;@17a87e37,[Ljava.lang.String;@3eeb318f,[Ljava.lang.String;@20a14b55),Annotation([Ljava.lang.String;@39ad977d,[Ljava.lang.String;@6da00fb9,[Ledu.cmu.lti.nlp.amr.Dependency;@a202ccb),Annotation([Ljava.lang.String;@20f12539,[Ljava.lang.String;@75b25825,[Ljava.lang.String;@18025ced),Annotation([Ljava.lang.String;@13cf7d52,[Ljava.lang.String;@3a3e4aff,[Ledu.cmu.lti.nlp.amr.Entity;@5d2a4eed))
AMR:
(它 / 它们, location, 立 / 立即)
(得 / 得-06, degree, 立 / 立即)
(得 / 得-06, manner, 就 / 就-01)
(服 / 服从-01, manner, 得 / 得-06)

Decoded in 12,260 microseconds
Sentence: 我 是 不 允许 无 纪律 的 。 ”

Spans:
Span 2-3:  不 => 不
Span 3-4:  允许 => 允许-01
Span 0-1:  我 => 我
Span 4-5:  无 => 无-02
Span 1-2:  是 => 是-04
Span 5-6:  纪律 => 纪律

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  允许 => 允许-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  无 => 无-02
Oracle Span 5-6:  纪律 => 纪律

Extra span: 不 => 不
Extra span: 是 => 是-04
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	允许	_	VV	VV	_	2	attr	_	_
5	无	_	VE	VE	_	4	ccomp	_	_
6	纪律	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 允许-01, arg0, x12 / 我)
(x10 / 允许-01, arg2, x13 / 无-02)
(x13 / 无-02, arg1, x14 / 纪律)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),纪律,纪律,false), Span(4,5,List(1),无,无-02,false), Span(3,4,List(2),允许,允许-01,false), Span(2,3,List(3),不,不,false), Span(1,2,List(4),是,是-04,false), Span(0,1,List(5),我,我,false)),Map(2 -> 允许-01, 5 -> 我, 1 -> 无-02, 4 -> 是-04, 0 -> 纪律, 3 -> 不),Map(我 -> 我, 纪 -> 纪律, 无 -> 无-02, 允 -> 允许-01, 不 -> 不, 是 -> 是-04))),[Ljava.lang.String;@57459491,Annotation([Ljava.lang.String;@3f0846c6,[Ljava.lang.String;@77a98a6a,[Ljava.lang.String;@78fbff54),Annotation([Ljava.lang.String;@3e10dc6,[Ljava.lang.String;@7e22550a,[Ledu.cmu.lti.nlp.amr.Dependency;@45e37a7e),Annotation([Ljava.lang.String;@62452cc9,[Ljava.lang.String;@6941827a,[Ljava.lang.String;@5a7005d),Annotation([Ljava.lang.String;@5bc9ba1d,[Ljava.lang.String;@1021f6c9,[Ledu.cmu.lti.nlp.amr.Entity;@7516e4e5))
AMR:
(允 / 允许-01, manner, 不 / 不)
(允 / 允许-01, manner, 是 / 是-04)
(允 / 允许-01, snt11, 无 / 无-02)
(无 / 无-02, snt11, 纪 / 纪律)
(是 / 是-04, manner, 我 / 我)

Decoded in 15,746 microseconds
Sentence: 这样 的 权力 使 小 王子 惊叹 不已 。

Spans:
Span 3-4:  使 => 使-01
Span 4-5:  小 => 小
Span 2-3:  权力 => 权力
Span 5-6:  王子 => 王子
Span 0-1:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  小 => 小
Oracle Span 2-3:  权力 => 权力
Oracle Span 5-6:  王子 => 王子
Oracle Span 0-1:  这样 => 这样

Extra span: 使 => 使-01
Incorrect span: 这样 => 这样-01
Missing span: 这样 => 这样
Dependencies:
1	这样	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	权力	_	NN	NN	_	4	nsubj	_	_
4	使	_	VV	VV	_	0	root	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	4	dobj	_	_
7	惊叹	_	VV	VV	_	4	dep	_	_
8	不已	_	AD	AD	_	7	advmod	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 权力, mod, x13 / 这样)
(x9 / 王子, mod, x10 / 小)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),王子,王子,false), Span(4,5,List(1),小,小,false), Span(3,4,List(2),使,使-01,false), Span(2,3,List(3),权力,权力,false), Span(0,1,List(4),这样,这样-01,false)),Map(2 -> 使-01, 1 -> 小, 4 -> 这样-01, 0 -> 王子, 3 -> 权力),Map(这 -> 这样-01, 王 -> 王子, 权 -> 权力, 小 -> 小, 使 -> 使-01))),[Ljava.lang.String;@488eb7f2,Annotation([Ljava.lang.String;@5e81e5ac,[Ljava.lang.String;@4189d70b,[Ljava.lang.String;@3fa2213),Annotation([Ljava.lang.String;@3e7634b9,[Ljava.lang.String;@6f0b0a5e,[Ledu.cmu.lti.nlp.amr.Dependency;@6035b93b),Annotation([Ljava.lang.String;@320de594,[Ljava.lang.String;@3dd1dc90,[Ljava.lang.String;@abf688e),Annotation([Ljava.lang.String;@478ee483,[Ljava.lang.String;@1a7288a3,[Ledu.cmu.lti.nlp.amr.Entity;@2974f221))
AMR:
(使 / 使-01, ARG6, 王 / 王子)
(权 / 权力, mod, 这 / 这样-01)
(王 / 王子, mod, 小 / 小)
(这 / 这样-01, ARG0, 使 / 使-01)

Decoded in 10,756 microseconds
Sentence: 如果 掌握 了 这样 的 权力 ， 那么 ， 他 一 天 就 不 只 是 看到 四十三 次 日落 ， 而 可以 看到 七十二 次 ， 甚至 一百 次 ， 或是 二百 次 日落 ， 也 不 必 要 去 挪动 椅子 了 ！

Spans:
Span 37-38:  不 => 不
Span 13-14:  不 => 不
Span 36-37:  也 => 也
Span 9-10:  他 => 他
Span 40-41:  去 => 去-02
Span 14-15:  只 => 只
Span 22-23:  可以 => 可以-02
Span 11-12:  天 => (temporal-quantity :unit 天)
Span 12-13:  就 => 就-01
Span 41-42:  挪动 => 挪动-01
Span 1-2:  掌握 => 掌握-01
Span 34-35:  日落 => 日落
Span 19-20:  日落 => 日落
Span 15-16:  是 => 是-04
Span 5-6:  权力 => 权力
Span 42-43:  椅子 => 椅子
Span 27-28:  甚至 => 甚至
Span 23-24:  看到 => (thing :arg1-of 看到-01)
Span 16-17:  看到 => (thing :arg1-of 看到-01)
Span 39-40:  要 => 要-02
Span 3-4:  这样 => 这样-01
Span 7-8:  那么 => 那么

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 由于 他 想起 了 他 那 被 遗弃 的 小 星球 ， 心里 有点 难过 ， 他 大胆 地 向 国王 提出 了 一 个 请求 ： “ 我 想 看 日落 ， 请求 您 …

Spans:
Span 16-17:  他 => 他
Span 4-5:  他 => 他
Span 1-2:  他 => 他
Span 20-21:  国王 => 国王
Span 18-19:  地 => 地
Span 17-18:  大胆 => 大胆-01
Span 9-10:  小 => 小
Span 12-13:  心里 => 心里
Span 34-35:  您 => 您
Span 29-30:  想 => 想-05
Span 2-3:  想起 => 想起-01
Span 28-29:  我 => 我
Span 21-22:  提出 => 提出-01
Span 31-32:  日落 => 日落
Span 10-11:  星球 => 星球
Span 13-14:  有点 => 有点-01
Span 30-31:  看 => 看-10
Span 33-34:  请求 => 请求-02
Span 25-26:  请求 => 请求-02
Span 7-8:  遗弃 => 遗弃-01
Span 5-6:  那 => 那
Span 14-15:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  他 => 他
Oracle Span 20-21:  国王 => 国王
Oracle Span 17-18:  大胆 => 大胆-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 29-30:  想 => 想-01
Oracle Span 2-3:  想起 => 想起-01
Oracle Span 28-29:  我 => 我
Oracle Span 21-22:  提出 => 提出-01
Oracle Span 31-32:  日落 => 日落-01
Oracle Span 10-11:  星球 => 星球
Oracle Span 13-14:  有点 => 有点
Oracle Span 30-31:  看 => 看-02
Oracle Span 25-26:  请求 => 请求-02
Oracle Span 7-8:  遗弃 => 遗弃-01
Oracle Span 5-6:  那 => 那
Oracle Span 14-15:  难过 => 难过-01

Extra span: 您 => 您
Extra span: 请求 => 请求-02
Incorrect span: 日落 => 日落
Incorrect span: 看 => 看-10
Incorrect span: 想 => 想-05
Extra span: 地 => 地
Extra span: 他 => 他
Incorrect span: 有点 => 有点-01
Extra span: 心里 => 心里
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 有点 => 有点
Missing span: 想 => 想-01
Missing span: 看 => 看-02
Missing span: 日落 => 日落-01
Dependencies:
1	由于	_	P	P	_	15	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	想起	_	VV	VV	_	1	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	6	dep	_	_
6	那	_	PN	PN	_	8	nsubjpass	_	_
7	被	_	SB	SB	_	8	pass	_	_
8	遗弃	_	VV	VV	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	星球	_	NN	NN	_	3	dobj	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	心里	_	NN	NN	_	15	nsubj	_	_
14	有点	_	AD	AD	_	15	advmod	_	_
15	难过	_	VV	VV	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	他	_	PN	PN	_	22	nsubj	_	_
18	大胆	_	VA	VA	_	22	dep	_	_
19	地	_	DEV	DEV	_	18	dvpm	_	_
20	向	_	P	P	_	22	prep	_	_
21	国王	_	NN	NN	_	20	pobj	_	_
22	提出	_	VV	VV	_	15	conj	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	一	_	CD	CD	_	25	nummod	_	_
25	个	_	M	M	_	26	clf	_	_
26	请求	_	NN	NN	_	22	dobj	_	_
27	：	_	PU	PU	_	15	punct	_	_
28	“	_	PU	PU	_	15	punct	_	_
29	我	_	PN	PN	_	30	nsubj	_	_
30	想	_	VV	VV	_	15	conj	_	_
31	看	_	VV	VV	_	30	ccomp	_	_
32	日落	_	NN	NN	_	31	dobj	_	_
33	,	_	PU	PU	_	31	punct	_	_
34	请求	_	VV	VV	_	31	conj	_	_
35	您	_	PU	PU	_	15	punct	_	_
36	…	_	PU	PU	_	15	punct	_	_
37	我	_	PN	PN	_	31	xsubj	_	_

Oracle:
(x14 / 难过-01, degree, x15 / 有点)
(x19 / 提出-01, arg1, x22 / 请求-02)
(x19 / 提出-01, manner, x21 / 大胆-01)
(x22 / 请求-02, arg1, x25 / 国王)
(x22 / 请求-02, arg2, x26 / 想-01)
(x26 / 想-01, arg0, x27 / 我)
(x26 / 想-01, arg1, x28 / 看-02)
(x28 / 看-02, arg1, x30 / 日落-01)
(x7 / 想起-01, arg0, x8 / 他)
(x7 / 想起-01, arg1, x9 / 星球)
(x9 / 星球, arg1, x12 / 遗弃-01)
(x9 / 星球, mod, x10 / 小-01)
(x9 / 星球, mod, x11 / 那)
(x9 / 星球, poss, x13 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(34,35,List(0),您,您,false), Span(33,34,List(1),请求,请求-02,false), Span(31,32,List(2),日落,日落,false), Span(30,31,List(3),看,看-10,false), Span(29,30,List(4),想,想-05,false), Span(28,29,List(5),我,我,false), Span(25,26,List(6),请求,请求-02,false), Span(21,22,List(7),提出,提出-01,false), Span(20,21,List(8),国王,国王,false), Span(18,19,List(9),地,地,false), Span(17,18,List(10),大胆,大胆-01,false), Span(16,17,List(11),他,他,false), Span(14,15,List(12),难过,难过-01,false), Span(13,14,List(13),有点,有点-01,false), Span(12,13,List(14),心里,心里,false), Span(10,11,List(15),星球,星球,false), Span(9,10,List(16),小,小,false), Span(7,8,List(17),遗弃,遗弃-01,false), Span(5,6,List(18),那,那,false), Span(4,5,List(19),他,他,false), Span(2,3,List(20),想起,想起-01,false), Span(1,2,List(21),他,他,false)),Map(2 -> 日落, 5 -> 我, 12 -> 难过-01, 15 -> 星球, 8 -> 国王, 21 -> 他, 18 -> 那, 7 -> 提出-01, 17 -> 遗弃-01, 1 -> 请求-02, 4 -> 想-05, 11 -> 他, 14 -> 心里, 20 -> 想起-01, 6 -> 请求-02, 0 -> 您, 9 -> 地, 16 -> 小, 19 -> 他, 3 -> 看-10, 10 -> 大胆-01, 13 -> 有点-01),Map(想2 -> 想起-01, 他2 -> 他, 星 -> 星球, 请2 -> 请求-02, 我 -> 我, 难 -> 难过-01, 遗 -> 遗弃-01, 大 -> 大胆-01, 心 -> 心里, 他 -> 他, 小 -> 小, 地 -> 地, 国 -> 国王, 日 -> 日落, 他3 -> 他, 请 -> 请求-02, 看 -> 看-10, 那 -> 那, 提 -> 提出-01, 想 -> 想-05, 您 -> 您, 有 -> 有点-01))),[Ljava.lang.String;@686449f9,Annotation([Ljava.lang.String;@665df3c6,[Ljava.lang.String;@68b6f0d6,[Ljava.lang.String;@4044fb95),Annotation([Ljava.lang.String;@aa549e5,[Ljava.lang.String;@36f48b4,[Ledu.cmu.lti.nlp.amr.Dependency;@5c00384f),Annotation([Ljava.lang.String;@3b7ff809,[Ljava.lang.String;@1bb564e2,[Ljava.lang.String;@62e6b5c8),Annotation([Ljava.lang.String;@3f792b9b,[Ljava.lang.String;@7b8233cd,[Ledu.cmu.lti.nlp.amr.Entity;@4b20ca2b))
AMR:
(大 / 大胆-01, degree, 他 / 他)
(大 / 大胆-01, degree, 地 / 地)
(想 / 想-05, degree, 我 / 我)
(想 / 想-05, degree, 看 / 看-10)
(想2 / 想起-01, century, 他2 / 他)
(想2 / 想起-01, degree, 遗 / 遗弃-01)
(想2 / 想起-01, prep-along-with, 他3 / 他)
(提 / 提出-01, degree, 请2 / 请求-02)
(提 / 提出-01, manner, 大 / 大胆-01)
(提 / 提出-01, mode, 国 / 国王)
(日 / 日落, mod, 看 / 看-10)
(星 / 星球, mod, 小 / 小)
(星 / 星球, part, 心 / 心里)
(有 / 有点-01, degree, 心 / 心里)
(请 / 请求-02, degree, 您 / 您)
(请 / 请求-02, degree, 看 / 看-10)
(请2 / 请求-02, degree, 想 / 想-05)
(遗 / 遗弃-01, degree, 小 / 小)
(那 / 那, degree, 遗 / 遗弃-01)
(难 / 难过-01, degree, 大 / 大胆-01)
(难 / 难过-01, degree, 有 / 有点-01)

Decoded in 152,511 microseconds
Sentence: 命令 太阳 落山 吧 … ”

NER Entity: (country :name (name :op "命令"))
NER Entity: (country :name (name :op "命令"))
Spans:
Span 0-1:  命令 => 命令-01
Span 1-2:  太阳 => 太阳
Span 2-3:  落山 => 落山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  命令 => 命令-01
Oracle Span 1-2:  太阳 => 太阳
Oracle Span 2-3:  落山 => 落山

Dependencies:
1	命令	_	NN	NN	_	2	nsubj	_	_
2	太阳	_	VV	VV	_	0	root	_	_
3	落山	_	NN	NN	_	5	nn	_	_
4	吧	_	NN	NN	_	5	nn	_	_
5	…	_	NN	NN	_	2	dobj	_	_
6	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 命令-01, arg1, x5 / 太阳)
(x2 / 命令-01, arg2, x6 / 落山)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),落山,落山,false), Span(1,2,List(1),太阳,太阳,false), Span(0,1,List(2),命令,命令-01,false)),Map(2 -> 命令-01, 1 -> 太阳, 0 -> 落山),Map(落 -> 落山, 太 -> 太阳, 命 -> 命令-01))),[Ljava.lang.String;@1cbf6e72,Annotation([Ljava.lang.String;@6aecbb8d,[Ljava.lang.String;@1af146,[Ljava.lang.String;@4da602fc),Annotation([Ljava.lang.String;@2a8d39c4,[Ljava.lang.String;@25b2cfcb,[Ledu.cmu.lti.nlp.amr.Dependency;@72758afa),Annotation([Ljava.lang.String;@fb9c7aa,[Ljava.lang.String;@4c398c80,[Ljava.lang.String;@7fc6de5b),Annotation([Ljava.lang.String;@21baa903,[Ljava.lang.String;@607fbe09,[Ledu.cmu.lti.nlp.amr.Entity;@60a2630a))
AMR:
(命 / 命令-01, prep-in, 太 / 太阳)
(太 / 太阳, manner, 落 / 落山)

Decoded in 5,116 microseconds
Sentence: 国王 说道 ： “ 如果 我 命令 一 个 将军 象 一 只 蝴蝶 那样 从 这 朵 花 飞到 那 朵 花 ， 或者 命令 他 写作 一 个 悲剧 剧本 或者 变 一 只 海鸟 ， 而 如果 这 位 将军 接到 命令 不 执行 的话 ， 那么 ， 我们 中 的 谁 是 错误 的 呢

Spans:
Span 45-46:  不 => 不
Span 26-27:  他 => 他
Span 27-28:  写作 => 写作-01
Span 31-32:  剧本 => 剧本
Span 33-34:  变 => 变-01
Span 35-36:  只 => 只
Span 12-13:  只 => 只
Span 44-45:  命令 => 命令-01
Span 25-26:  命令 => 命令-01
Span 6-7:  命令 => 命令-01
Span 0-1:  国王 => 国王
Span 42-43:  将军 => 将军
Span 9-10:  将军 => 将军
Span 30-31:  悲剧 => 悲剧
Span 5-6:  我 => 我
Span 51-52:  我们 => 我们
Span 46-47:  执行 => 执行-01
Span 43-44:  接到 => 接到-01
Span 55-56:  是 => 是-04
Span 36-37:  海鸟 => 海鸟
Span 22-23:  花 => 花-01
Span 18-19:  花 => 花-01
Span 13-14:  蝴蝶 => 蝴蝶
Span 1-2:  说道 => 说道
Span 54-55:  谁 => 谁
Span 40-41:  这 => 这
Span 16-17:  这 => 这
Span 20-21:  那 => 那
Span 49-50:  那么 => 那么
Span 56-57:  错误 => 错误-01
Span 19-20:  飞到 => 飞到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 27-28:  写作 => 写作-01
Oracle Span 31-32:  剧本 => 剧本
Oracle Span 33-34:  变 => 变-01
Oracle Span 6-7:  命令 => 命令-01
Oracle Span 25-26:  命令 => 命令-01
Oracle Span 44-45:  命令 => 命令
Oracle Span 0-1:  国王 => 国王
Oracle Span 9-10:  将军 => 将军
Oracle Span 30-31:  悲剧 => 悲剧
Oracle Span 5-6:  我 => 我
Oracle Span 51-52:  我们 => 我们
Oracle Span 46-47:  执行 => 执行-01
Oracle Span 43-44:  接到 => 接到-01
Oracle Span 36-37:  海鸟 => 海鸟
Oracle Span 18-19:  花 => 花
Oracle Span 22-23:  花 => 花
Oracle Span 13-14:  蝴蝶 => 蝴蝶
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 16-17:  这 => 这
Oracle Span 20-21:  那 => 那
Oracle Span 56-57:  错误 => 错误-01
Oracle Span 19-20:  飞到 => 飞到-01

Extra span: 是 => 是-04
Extra span: 谁 => 谁
Extra span: 那么 => 那么
Extra span: 不 => 不
Incorrect span: 命令 => 命令-01
Extra span: 将军 => 将军
Extra span: 这 => 这
Extra span: 只 => 只
Extra span: 他 => 他
Incorrect span: 花 => 花-01
Incorrect span: 花 => 花-01
Extra span: 只 => 只
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 花 => 花
Missing span: 花 => 花
Missing span: 命令 => 命令
Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	如果	_	CS	CS	_	7	advmod	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	命令	_	VV	VV	_	56	dep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	将军	_	NN	NN	_	7	dobj	_	_
11	象	_	P	P	_	15	dep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	蝴蝶	_	NN	NN	_	11	pobj	_	_
15	那样	_	AD	AD	_	20	advmod	_	_
16	从	_	P	P	_	20	prep	_	_
17	这	_	DT	DT	_	19	det	_	_
18	朵	_	M	M	_	17	clf	_	_
19	花	_	NN	NN	_	16	pobj	_	_
20	飞到	_	VV	VV	_	7	dep	_	_
21	那	_	DT	DT	_	23	det	_	_
22	朵	_	M	M	_	21	clf	_	_
23	花	_	NN	NN	_	20	dobj	_	_
24	,	_	PU	PU	_	20	punct	_	_
25	或者	_	CC	CC	_	20	cc	_	_
26	命令	_	VV	VV	_	20	dep	_	_
27	他	_	PN	PN	_	28	nsubj	_	_
28	写作	_	VV	VV	_	26	ccomp	_	_
29	一	_	CD	CD	_	30	nummod	_	_
30	个	_	M	M	_	32	clf	_	_
31	悲剧	_	NN	NN	_	32	nn	_	_
32	剧本	_	NN	NN	_	28	dobj	_	_
33	或者	_	CC	CC	_	28	cc	_	_
34	变	_	VV	VV	_	28	conj	_	_
35	一	_	CD	CD	_	36	nummod	_	_
36	只	_	M	M	_	37	clf	_	_
37	海鸟	_	NN	NN	_	34	dobj	_	_
38	,	_	PU	PU	_	56	punct	_	_
39	而	_	AD	AD	_	56	advmod	_	_
40	如果	_	CS	CS	_	45	advmod	_	_
41	这	_	DT	DT	_	43	det	_	_
42	位	_	M	M	_	41	clf	_	_
43	将军	_	NN	NN	_	45	nsubj	_	_
44	接到	_	VV	VV	_	45	mmod	_	_
45	命令	_	VV	VV	_	56	pccomp	_	_
46	不	_	AD	AD	_	47	neg	_	_
47	执行	_	VV	VV	_	45	ccomp	_	_
48	的话	_	SP	SP	_	45	dep	_	_
49	,	_	PU	PU	_	56	punct	_	_
50	那么	_	AD	AD	_	56	advmod	_	_
51	,	_	PU	PU	_	56	punct	_	_
52	我们	_	PN	PN	_	53	lobj	_	_
53	中	_	LC	LC	_	55	assmod	_	_
54	的	_	DEG	DEG	_	53	assm	_	_
55	谁	_	PN	PN	_	56	top	_	_
56	是	_	VC	VC	_	2	ccomp	_	_
57	错误	_	VA	VA	_	56	attr	_	_
58	的	_	DEC	DEC	_	57	cpm	_	_
59	呢	_	SP	SP	_	56	dep	_	_
60	将军	_	NN	NN	_	47	xsubj	_	_

Oracle:
(x45 / 说道-01, arg0, x47 / 国王)
(x51 / 命令-01, arg0, x52 / 我)
(x51 / 命令-01, arg1, x53 / 将军)
(x59 / 飞到-01, arg1, x61 / 花)
(x59 / 飞到-01, arg2, x63 / 花)
(x61 / 花, mod, x62 / 那)
(x63 / 花, mod, x64 / 这)
(x69 / 写作-01, arg1, x71 / 剧本)
(x71 / 剧本, topic, x73 / 悲剧)
(x75 / 变-01, arg2, x76 / 海鸟)
(x84 / 接到-01, arg1, x86 / 命令)

Input(Some(Graph(null,ArrayBuffer(Span(56,57,List(0),错误,错误-01,false), Span(55,56,List(1),是,是-04,false), Span(54,55,List(2),谁,谁,false), Span(51,52,List(3),我们,我们,false), Span(49,50,List(4),那么,那么,false), Span(46,47,List(5),执行,执行-01,false), Span(45,46,List(6),不,不,false), Span(44,45,List(7),命令,命令-01,false), Span(43,44,List(8),接到,接到-01,false), Span(42,43,List(9),将军,将军,false), Span(40,41,List(10),这,这,false), Span(36,37,List(11),海鸟,海鸟,false), Span(35,36,List(12),只,只,false), Span(33,34,List(13),变,变-01,false), Span(31,32,List(14),剧本,剧本,false), Span(30,31,List(15),悲剧,悲剧,false), Span(27,28,List(16),写作,写作-01,false), Span(26,27,List(17),他,他,false), Span(25,26,List(18),命令,命令-01,false), Span(22,23,List(19),花,花-01,false), Span(20,21,List(20),那,那,false), Span(19,20,List(21),飞到,飞到-01,false), Span(18,19,List(22),花,花-01,false), Span(16,17,List(23),这,这,false), Span(13,14,List(24),蝴蝶,蝴蝶,false), Span(12,13,List(25),只,只,false), Span(9,10,List(26),将军,将军,false), Span(6,7,List(27),命令,命令-01,false), Span(5,6,List(28),我,我,false), Span(1,2,List(29),说道,说道,false), Span(0,1,List(30),国王,国王,false)),Map(30 -> 国王, 2 -> 谁, 5 -> 执行-01, 27 -> 命令-01, 12 -> 只, 8 -> 接到-01, 15 -> 悲剧, 21 -> 飞到-01, 18 -> 命令-01, 24 -> 蝴蝶, 7 -> 命令-01, 1 -> 是-04, 17 -> 他, 23 -> 这, 26 -> 将军, 4 -> 那么, 11 -> 海鸟, 14 -> 剧本, 29 -> 说道, 20 -> 那, 28 -> 我, 6 -> 不, 9 -> 将军, 0 -> 错误-01, 22 -> 花-01, 16 -> 写作-01, 19 -> 花-01, 10 -> 这, 3 -> 我们, 25 -> 只, 13 -> 变-01),Map(写 -> 写作-01, 接 -> 接到-01, 我 -> 我们, 剧 -> 剧本, 这 -> 这, 将2 -> 将军, 谁 -> 谁, 我2 -> 我, 飞 -> 飞到-01, 花2 -> 花-01, 海 -> 海鸟, 他 -> 他, 命3 -> 命令-01, 执 -> 执行-01, 将 -> 将军, 命 -> 命令-01, 悲 -> 悲剧, 花 -> 花-01, 国 -> 国王, 不 -> 不, 只 -> 只, 那2 -> 那, 说 -> 说道, 变 -> 变-01, 只2 -> 只, 这2 -> 这, 那 -> 那么, 错 -> 错误-01, 命2 -> 命令-01, 是 -> 是-04, 蝴 -> 蝴蝶))),[Ljava.lang.String;@29df4d43,Annotation([Ljava.lang.String;@5dd91bca,[Ljava.lang.String;@40cb698e,[Ljava.lang.String;@3382f8ae),Annotation([Ljava.lang.String;@60641ec8,[Ljava.lang.String;@75f65e45,[Ledu.cmu.lti.nlp.amr.Dependency;@6eeade6c),Annotation([Ljava.lang.String;@4a891c97,[Ljava.lang.String;@a5bd950,[Ljava.lang.String;@4d18aa28),Annotation([Ljava.lang.String;@75390459,[Ljava.lang.String;@7756c3cd,[Ledu.cmu.lti.nlp.amr.Entity;@2313052e))
AMR:
(剧 / 剧本, topic, 悲 / 悲剧)
(变 / 变-01, manner, 只 / 只)
(变 / 变-01, time, 剧 / 剧本)
(只2 / 只, domain, 将2 / 将军)
(命 / 命令-01, ARG5, 接 / 接到-01)
(命 / 命令-01, prep-in, 不 / 不)
(命2 / 命令-01, degree, 花 / 花-01)
(命2 / 命令-01, destination, 写 / 写作-01)
(命2 / 命令-01, season, 他 / 他)
(命3 / 命令-01, domain, 我2 / 我)
(命3 / 命令-01, domain, 说 / 说道)
(命3 / 命令-01, prep-in, 将2 / 将军)
(将 / 将军, mod, 这 / 这)
(悲 / 悲剧, mod, 写 / 写作-01)
(执 / 执行-01, degree, 那 / 那么)
(执 / 执行-01, manner, 不 / 不)
(接 / 接到-01, domain, 海 / 海鸟)
(接 / 接到-01, mod, 将 / 将军)
(是 / 是-04, degree, 谁 / 谁)
(是 / 是-04, degree, 那 / 那么)
(是 / 是-04, name, 错 / 错误-01)
(海 / 海鸟, manner, 只 / 只)
(花2 / 花-01, mod, 这2 / 这)
(蝴 / 蝴蝶, domain, 花2 / 花-01)
(蝴 / 蝴蝶, manner, 只2 / 只)
(说 / 说道, mod, 国 / 国王)
(谁 / 谁, domain, 我 / 我们)
(飞 / 飞到-01, manner, 花2 / 花-01)
(飞 / 飞到-01, mod, 那2 / 那)
(飞 / 飞到-01, prep-against, 花 / 花-01)

Decoded in 355,381 microseconds
Sentence: 将军 还是 我 自己 ？ ”

Spans:
Span 0-1:  将军 => 将军
Span 2-3:  我 => 我
Span 3-4:  自己 => 自己
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  将军 => 将军
Oracle Span 2-3:  我 => 我

Extra span: 自己 => 自己
Extra span: 还是 => 还是
Dependencies:
1	将军	_	NN	NN	_	4	nsubj	_	_
2	还是	_	AD	AD	_	4	advmod	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	自己	_	PN	PN	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),自己,自己,false), Span(2,3,List(1),我,我,false), Span(1,2,List(2),还是,还是,false), Span(0,1,List(3),将军,将军,false)),Map(2 -> 还是, 1 -> 我, 0 -> 自己, 3 -> 将军),Map(自 -> 自己, 我 -> 我, 将 -> 将军, 还 -> 还是))),[Ljava.lang.String;@2bd2b28e,Annotation([Ljava.lang.String;@16746061,[Ljava.lang.String;@57fd91c9,[Ljava.lang.String;@6cfcd46d),Annotation([Ljava.lang.String;@52045dbe,[Ljava.lang.String;@674658f7,[Ledu.cmu.lti.nlp.amr.Dependency;@5c8eee0f),Annotation([Ljava.lang.String;@565b064f,[Ljava.lang.String;@26425897,[Ljava.lang.String;@73163d48),Annotation([Ljava.lang.String;@58c34bb3,[Ljava.lang.String;@56a4479a,[Ledu.cmu.lti.nlp.amr.Entity;@62163b39))
AMR:
(将 / 将军, manner, 还 / 还是)
(自 / 自己, domain, 我 / 我)
(自 / 自己, manner, 还 / 还是)

Decoded in 5,528 microseconds
Sentence: “ 那 当然 是 您 的 不对 。 ” 小 王子 肯定 地 回答 。

Spans:
Span 13-14:  回答 => 回答-01
Span 12-13:  地 => 地
Span 9-10:  小 => 小
Span 2-3:  当然 => 当然
Span 4-5:  您 => 您
Span 3-4:  是 => 是-04
Span 10-11:  王子 => 王子
Span 11-12:  肯定 => 肯定-02
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  回答 => 回答-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 2-3:  当然 => 当然
Oracle Span 4-5:  您 => 您
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  肯定 => 肯定-02

Extra span: 地 => 地
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 那 => 那
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那	_	PN	PN	_	4	nsubj	_	_
3	当然	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	您	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	不对	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	14	nsubj	_	_
12	肯定	_	VA	VA	_	14	dvpmod	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	回答	_	VV	VV	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x3 / 王子)
(x0 / 回答-01, manner, x2 / 肯定-02)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 您, manner, x9 / 当然)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),回答,回答-01,false), Span(12,13,List(1),地,地,false), Span(11,12,List(2),肯定,肯定-02,false), Span(10,11,List(3),王子,王子,false), Span(9,10,List(4),小,小,false), Span(4,5,List(5),您,您,false), Span(3,4,List(6),是,是-04,false), Span(2,3,List(7),当然,当然,false), Span(1,2,List(8),那,那,false)),Map(2 -> 肯定-02, 5 -> 您, 8 -> 那, 7 -> 当然, 1 -> 地, 4 -> 小, 6 -> 是-04, 0 -> 回答-01, 3 -> 王子),Map(王 -> 王子, 肯 -> 肯定-02, 小 -> 小, 地 -> 地, 那 -> 那, 是 -> 是-04, 回 -> 回答-01, 当 -> 当然, 您 -> 您))),[Ljava.lang.String;@20a8a64e,Annotation([Ljava.lang.String;@62f4ff3b,[Ljava.lang.String;@1698fc68,[Ljava.lang.String;@4504d271),Annotation([Ljava.lang.String;@207b8649,[Ljava.lang.String;@65b3a85a,[Ledu.cmu.lti.nlp.amr.Dependency;@34997338),Annotation([Ljava.lang.String;@57eda880,[Ljava.lang.String;@2b5825fa,[Ljava.lang.String;@53d1b9b3),Annotation([Ljava.lang.String;@2cae1042,[Ljava.lang.String;@163d04ff,[Ledu.cmu.lti.nlp.amr.Entity;@7c209437))
AMR:
(回 / 回答-01, manner, 肯 / 肯定-02)
(地 / 地, mod, 是 / 是-04)
(地 / 地, mod, 肯 / 肯定-02)
(当 / 当然, mod, 那 / 那)
(是 / 是-04, manner, 当 / 当然)
(是 / 是-04, prep-through, 您 / 您)
(王 / 王子, mod, 小 / 小)
(肯 / 肯定-02, direction, 王 / 王子)

Decoded in 26,288 microseconds
Sentence: “ 一点 也 不错 ， ”

Spans:
Span 1-2:  一点 => 一点
Span 3-4:  不错 => 不错-01
Span 2-3:  也 => 也

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点
Oracle Span 3-4:  不错 => 不错-01
Oracle Span 2-3:  也 => 也

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一点	_	CD	CD	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	不错	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 不错-01, degree, x9 / 一点)
(x8 / 不错-01, manner, x10 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),不错,不错-01,false), Span(2,3,List(1),也,也,false), Span(1,2,List(2),一点,一点,false)),Map(2 -> 一点, 1 -> 也, 0 -> 不错-01),Map(也 -> 也, 不 -> 不错-01, 一 -> 一点))),[Ljava.lang.String;@2262b621,Annotation([Ljava.lang.String;@7e928e2f,[Ljava.lang.String;@f667fe,[Ljava.lang.String;@788fcafb),Annotation([Ljava.lang.String;@4febb875,[Ljava.lang.String;@25e2a451,[Ledu.cmu.lti.nlp.amr.Dependency;@1698ee84),Annotation([Ljava.lang.String;@10c626be,[Ljava.lang.String;@2fc0cc3,[Ljava.lang.String;@328cf0e1),Annotation([Ljava.lang.String;@63b1d4fa,[Ljava.lang.String;@42e3ede4,[Ledu.cmu.lti.nlp.amr.Entity;@201b6b6f))
AMR:
(不 / 不错-01, degree, 一 / 一点)
(不 / 不错-01, manner, 也 / 也)

Decoded in 4,711 microseconds
Sentence: 国王 接着 说 ， “ 向 每 个 人 提出 的 要求 应该 是 他们 所 能 做到 的 。

Spans:
Span 8-9:  人 => 人
Span 14-15:  他们 => 他们
Span 17-18:  做到 => 做到-01
Span 0-1:  国王 => 国王
Span 12-13:  应该 => 应该-01
Span 1-2:  接着 => 接着-01
Span 9-10:  提出 => 提出-01
Span 13-14:  是 => 是-04
Span 6-7:  每 => 每
Span 16-17:  能 => 能
Span 11-12:  要求 => 要求-03
Span 2-3:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 17-18:  做到 => 做到-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 12-13:  应该 => 应该-02
Oracle Span 9-10:  提出 => 提出-01
Oracle Span 6-7:  每 => 每
Oracle Span 16-17:  能 => 能-01
Oracle Span 11-12:  要求 => 要求-02
Oracle Span 2-3:  说 => 说-01

Incorrect span: 能 => 能
Extra span: 他们 => 他们
Extra span: 是 => 是-04
Incorrect span: 应该 => 应该-01
Incorrect span: 要求 => 要求-03
Incorrect span: 说 => 说-02
Extra span: 接着 => 接着-01
Missing span: 说 => 说-01
Missing span: 应该 => 应该-02
Missing span: 能 => 能-01
Missing span: 要求 => 要求-02
Dependencies:
1	国王	_	NN	NN	_	2	nn	_	_
2	接着	_	NN	NN	_	3	nsubj	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	14	punct	_	_
6	向	_	P	P	_	10	prep	_	_
7	每	_	DT	DT	_	9	det	_	_
8	个	_	M	M	_	7	clf	_	_
9	人	_	NN	NN	_	6	pobj	_	_
10	提出	_	VV	VV	_	12	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	要求	_	NN	NN	_	14	nsubj	_	_
13	应该	_	VV	VV	_	14	mmod	_	_
14	是	_	VC	VC	_	3	ccomp	_	_
15	他们	_	PN	PN	_	18	nsubj	_	_
16	所	_	MSP	MSP	_	18	prtmod	_	_
17	能	_	VV	VV	_	18	dep	_	_
18	做到	_	VV	VV	_	14	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 提出-01, arg0, x12 / 人)
(x11 / 提出-01, arg1, x14 / 要求-02)
(x12 / 人, mod, x13 / 每)
(x2 / 说-01, arg0, x3 / 国王)
(x2 / 说-01, arg1, x4 / 应该-02)
(x4 / 应该-02, arg0, x5 / 能-01)
(x5 / 能-01, arg0, x6 / 做到-01)
(x5 / 能-01, domain, x11 / 提出-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),做到,做到-01,false), Span(16,17,List(1),能,能,false), Span(14,15,List(2),他们,他们,false), Span(13,14,List(3),是,是-04,false), Span(12,13,List(4),应该,应该-01,false), Span(11,12,List(5),要求,要求-03,false), Span(9,10,List(6),提出,提出-01,false), Span(8,9,List(7),人,人,false), Span(6,7,List(8),每,每,false), Span(2,3,List(9),说,说-02,false), Span(1,2,List(10),接着,接着-01,false), Span(0,1,List(11),国王,国王,false)),Map(2 -> 他们, 5 -> 要求-03, 8 -> 每, 7 -> 人, 1 -> 能, 11 -> 国王, 4 -> 应该-01, 6 -> 提出-01, 9 -> 说-02, 0 -> 做到-01, 10 -> 接着-01, 3 -> 是-04),Map(接 -> 接着-01, 要 -> 要求-03, 能 -> 能, 每 -> 每, 他 -> 他们, 国 -> 国王, 说 -> 说-02, 做 -> 做到-01, 提 -> 提出-01, 人 -> 人, 应 -> 应该-01, 是 -> 是-04))),[Ljava.lang.String;@75459c75,Annotation([Ljava.lang.String;@183e8023,[Ljava.lang.String;@45efc20d,[Ljava.lang.String;@3e5499cc),Annotation([Ljava.lang.String;@67ab1c47,[Ljava.lang.String;@b78a709,[Ledu.cmu.lti.nlp.amr.Dependency;@30bcf3c1),Annotation([Ljava.lang.String;@2a3c96e3,[Ljava.lang.String;@15cafec7,[Ljava.lang.String;@5b444398),Annotation([Ljava.lang.String;@cb191ca,[Ljava.lang.String;@42f48531,[Ledu.cmu.lti.nlp.amr.Entity;@a776e))
AMR:
(人 / 人, mod, 每 / 每)
(做 / 做到-01, degree, 能 / 能)
(应 / 应该-01, manner, 要 / 要求-03)
(接 / 接着-01, time, 国 / 国王)
(提 / 提出-01, destination, 要 / 要求-03)
(提 / 提出-01, manner, 人 / 人)
(是 / 是-04, manner, 应 / 应该-01)
(是 / 是-04, season, 他 / 他们)
(每 / 每, mod, 说 / 说-02)
(能 / 能, mod, 是 / 是-04)
(说 / 说-02, mod, 接 / 接着-01)

Decoded in 44,756 microseconds
Sentence: 权威 首先 应该 建立 在 理性 的 基础 上 。

Spans:
Span 4-5:  在 => 在-01
Span 2-3:  应该 => 应该-01
Span 3-4:  建立 => 建立-01
Span 0-1:  权威 => 权威-01
Span 5-6:  理性 => 理性
Span 1-2:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  应该 => 应该-02
Oracle Span 3-4:  建立 => 建立-01
Oracle Span 0-1:  权威 => 权威
Oracle Span 5-6:  理性 => 理性
Oracle Span 1-2:  首先 => 首先

Extra span: 在 => 在-01
Incorrect span: 应该 => 应该-01
Incorrect span: 权威 => 权威-01
Missing span: 应该 => 应该-02
Missing span: 权威 => 权威
Dependencies:
1	权威	_	NN	NN	_	4	nsubj	_	_
2	首先	_	AD	AD	_	4	advmod	_	_
3	应该	_	VV	VV	_	4	mmod	_	_
4	建立	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	4	prep	_	_
6	理性	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	基础	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	5	plmod	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 建立-01, arg1, x11 / 权威)
(x10 / 建立-01, arg2, x12 / 理性)
(x8 / 应该-02, arg0, x10 / 建立-01)
(x8 / 应该-02, manner, x13 / 首先)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),理性,理性,false), Span(4,5,List(1),在,在-01,false), Span(3,4,List(2),建立,建立-01,false), Span(2,3,List(3),应该,应该-01,false), Span(1,2,List(4),首先,首先,false), Span(0,1,List(5),权威,权威-01,false)),Map(2 -> 建立-01, 5 -> 权威-01, 1 -> 在-01, 4 -> 首先, 0 -> 理性, 3 -> 应该-01),Map(理 -> 理性, 在 -> 在-01, 权 -> 权威-01, 首 -> 首先, 建 -> 建立-01, 应 -> 应该-01))),[Ljava.lang.String;@792bbc74,Annotation([Ljava.lang.String;@79145d5a,[Ljava.lang.String;@1f2f9244,[Ljava.lang.String;@4c4d27c8),Annotation([Ljava.lang.String;@6821ea29,[Ljava.lang.String;@338494fa,[Ledu.cmu.lti.nlp.amr.Dependency;@505a9d7c),Annotation([Ljava.lang.String;@758c83d8,[Ljava.lang.String;@129b4fe2,[Ljava.lang.String;@5af3a0f),Annotation([Ljava.lang.String;@19ae6bb,[Ljava.lang.String;@10993713,[Ledu.cmu.lti.nlp.amr.Entity;@58359ebd))
AMR:
(在 / 在-01, ARG5, 建 / 建立-01)
(应 / 应该-01, ARG2, 在 / 在-01)
(应 / 应该-01, manner, 首 / 首先)
(建 / 建立-01, prep-on-behalf, 权 / 权威-01)
(理 / 理性, manner, 在 / 在-01)

Decoded in 13,977 microseconds
Sentence: 如果 命令 你 的 老百姓 去 投 海 ， 他们 非 起来 革命 不 可 。

Spans:
Span 13-14:  不 => 不
Span 9-10:  他们 => 他们
Span 2-3:  你 => 你
Span 5-6:  去 => 去-02
Span 14-15:  可 => 可-01
Span 1-2:  命令 => 命令-01
Span 6-7:  投 => 投-01
Span 7-8:  海 => 海
Span 4-5:  老百姓 => 老百姓
Span 12-13:  革命 => 革命-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  他们 => 他们
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  去 => 去-01
Oracle Span 1-2:  命令 => 命令-01
Oracle Span 6-7:  投 => 投-01
Oracle Span 7-8:  海 => 海
Oracle Span 4-5:  老百姓 => 老百姓
Oracle Span 12-13:  革命 => 革命-01

Extra span: 可 => 可-01
Extra span: 不 => 不
Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Dependencies:
1	如果	_	CS	CS	_	2	advmod	_	_
2	命令	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	老百姓	_	NN	NN	_	7	nsubj	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	投	_	VV	VV	_	2	ccomp	_	_
8	海	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	他们	_	PN	PN	_	12	nsubj	_	_
11	非	_	AD	AD	_	12	advmod	_	_
12	起来	_	VV	VV	_	7	conj	_	_
13	革命	_	NN	NN	_	12	dobj	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	可	_	VV	VV	_	2	ccomp	_	_
16	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 革命-01, arg0, x12 / 他们)
(x2 / 命令-01, arg1, x3 / 老百姓)
(x2 / 命令-01, arg2, x5 / 去-01)
(x3 / 老百姓, poss, x4 / 你)
(x5 / 去-01, arg1, x7 / 投-01)
(x7 / 投-01, arg1, x9 / 海)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),可,可-01,false), Span(13,14,List(1),不,不,false), Span(12,13,List(2),革命,革命-01,false), Span(9,10,List(3),他们,他们,false), Span(7,8,List(4),海,海,false), Span(6,7,List(5),投,投-01,false), Span(5,6,List(6),去,去-02,false), Span(4,5,List(7),老百姓,老百姓,false), Span(2,3,List(8),你,你,false), Span(1,2,List(9),命令,命令-01,false)),Map(2 -> 革命-01, 5 -> 投-01, 8 -> 你, 7 -> 老百姓, 1 -> 不, 4 -> 海, 6 -> 去-02, 9 -> 命令-01, 0 -> 可-01, 3 -> 他们),Map(革 -> 革命-01, 投 -> 投-01, 你 -> 你, 去 -> 去-02, 海 -> 海, 他 -> 他们, 命 -> 命令-01, 不 -> 不, 老 -> 老百姓, 可 -> 可-01))),[Ljava.lang.String;@24b6b8f6,Annotation([Ljava.lang.String;@72cf2de5,[Ljava.lang.String;@2bb7bd00,[Ljava.lang.String;@5f031ebd),Annotation([Ljava.lang.String;@4ee37ca3,[Ljava.lang.String;@45c8d09f,[Ledu.cmu.lti.nlp.amr.Dependency;@53812a9b),Annotation([Ljava.lang.String;@14b030a0,[Ljava.lang.String;@41e350f1,[Ljava.lang.String;@422c3c7a),Annotation([Ljava.lang.String;@18230356,[Ljava.lang.String;@d8305c2,[Ledu.cmu.lti.nlp.amr.Entity;@56bca85b))
AMR:
(去 / 去-02, prep-through, 投 / 投-01)
(可 / 可-01, manner, 不 / 不)
(可 / 可-01, time, 投 / 投-01)
(可 / 可-01, value, 革 / 革命-01)
(命 / 命令-01, ARG4, 去 / 去-02)
(命 / 命令-01, op, 老 / 老百姓)
(投 / 投-01, quant, 海 / 海)
(老 / 老百姓, poss, 你 / 你)
(革 / 革命-01, ARG3, 他 / 他们)

Decoded in 35,750 microseconds
Sentence: 我 的 命令 是 合理 的 ， 所以 我 有 权 要 别人 服从 。 ”

Spans:
Span 12-13:  别人 => 别人
Span 4-5:  合理 => 合理-01
Span 2-3:  命令 => 命令-01
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 3-4:  是 => 是-04
Span 9-10:  有 => 有-06
Span 13-14:  服从 => 服从-01
Span 11-12:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  别人 => 别人
Oracle Span 4-5:  合理 => 合理-01
Oracle Span 2-3:  命令 => 命令
Oracle Span 0-1:  我 => 我
Oracle Span 13-14:  服从 => 服从-01
Oracle Span 11-12:  要 => 要-03

Incorrect span: 要 => 要-02
Extra span: 有 => 有-06
Extra span: 我 => 我
Extra span: 是 => 是-04
Incorrect span: 命令 => 命令-01
Missing span: 命令 => 命令
Missing span: 要 => 要-03
Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	命令	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	合理	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	所以	_	AD	AD	_	10	advmod	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	有	_	VE	VE	_	4	conj	_	_
11	权	_	NN	NN	_	10	dobj	_	_
12	要	_	VV	VV	_	10	conj	_	_
13	别人	_	NN	NN	_	12	dobj	_	_
14	服从	_	VV	VV	_	12	conj	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x17 / 合理-01, arg0, x18 / 命令)
(x18 / 命令, poss, x19 / 我)
(x22 / 要-03, arg0, x23 / 服从-01)
(x23 / 服从-01, arg0, x24 / 别人)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),服从,服从-01,false), Span(12,13,List(1),别人,别人,false), Span(11,12,List(2),要,要-02,false), Span(9,10,List(3),有,有-06,false), Span(8,9,List(4),我,我,false), Span(4,5,List(5),合理,合理-01,false), Span(3,4,List(6),是,是-04,false), Span(2,3,List(7),命令,命令-01,false), Span(0,1,List(8),我,我,false)),Map(2 -> 要-02, 5 -> 合理-01, 8 -> 我, 7 -> 命令-01, 1 -> 别人, 4 -> 我, 6 -> 是-04, 0 -> 服从-01, 3 -> 有-06),Map(我 -> 我, 要 -> 要-02, 别 -> 别人, 我2 -> 我, 命 -> 命令-01, 服 -> 服从-01, 合 -> 合理-01, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@75d0911a,Annotation([Ljava.lang.String;@75e91545,[Ljava.lang.String;@60d1a32f,[Ljava.lang.String;@531c311e),Annotation([Ljava.lang.String;@22b53226,[Ljava.lang.String;@1fcb4808,[Ledu.cmu.lti.nlp.amr.Dependency;@726e5805),Annotation([Ljava.lang.String;@40c80397,[Ljava.lang.String;@4b672daa,[Ljava.lang.String;@ea9b7c6),Annotation([Ljava.lang.String;@e077866,[Ljava.lang.String;@ed3068a,[Ledu.cmu.lti.nlp.amr.Entity;@7c2b6087))
AMR:
(合 / 合理-01, manner, 是 / 是-04)
(命 / 命令-01, prep-following, 我2 / 我)
(命 / 命令-01, snt11, 是 / 是-04)
(有 / 有-06, manner, 我 / 我)
(有 / 有-06, polite, 是 / 是-04)
(要 / 要-02, manner, 有 / 有-06)
(要 / 要-02, mode, 服 / 服从-01)
(要 / 要-02, snt11, 别 / 别人)

Decoded in 24,643 microseconds
Sentence: “ 那么 我 提出 的 日落 呢 ？ ” 小 王子 一旦 提出 一 个 问题 ， 他 是 不 会 忘记 这 个 问题 的 。

Spans:
Span 19-20:  不 => 不
Span 17-18:  他 => 他
Span 20-21:  会 => 会-03
Span 9-10:  小 => 小
Span 21-22:  忘记 => 忘记-01
Span 2-3:  我 => 我
Span 12-13:  提出 => 提出-01
Span 3-4:  提出 => 提出-01
Span 5-6:  日落 => 日落
Span 18-19:  是 => 是-04
Span 10-11:  王子 => 王子
Span 22-23:  这 => 这
Span 1-2:  那么 => 那么
Span 24-25:  问题 => 问题
Span 15-16:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  他 => 他
Oracle Span 20-21:  会 => 会-02
Oracle Span 9-10:  小 => 小-01
Oracle Span 21-22:  忘记 => 忘记-01
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 12-13:  提出 => 提出-01
Oracle Span 5-6:  日落 => 日落
Oracle Span 10-11:  王子 => 王子
Oracle Span 22-23:  这 => 这
Oracle Span 15-16:  问题 => 问题
Oracle Span 24-25:  问题 => 问题

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 是 => 是-04
Incorrect span: 小 => 小
Extra span: 那么 => 那么
Missing span: 小 => 小-01
Missing span: 会 => 会-02
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	我	_	PN	PN	_	11	rcmod	_	_
4	提出	_	VV	VV	_	6	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	日落	_	VA	VA	_	3	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	13	nsubj	_	_
12	一旦	_	CS	CS	_	13	advmod	_	_
13	提出	_	VV	VV	_	0	root	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	个	_	M	M	_	16	clf	_	_
16	问题	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_
18	他	_	PN	PN	_	19	top	_	_
19	是	_	VC	VC	_	13	conj	_	_
20	不	_	AD	AD	_	22	neg	_	_
21	会	_	VV	VV	_	22	mmod	_	_
22	忘记	_	VV	VV	_	19	attr	_	_
23	这	_	DT	DT	_	25	det	_	_
24	个	_	M	M	_	23	clf	_	_
25	问题	_	NN	NN	_	22	dobj	_	_
26	的	_	DEC	DEC	_	22	cpm	_	_
27	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 会-02, arg0, x15 / 忘记-01)
(x15 / 忘记-01, arg0, x16 / 他)
(x15 / 忘记-01, arg1, x17 / 问题)
(x17 / 问题, mod, x18 / 这)
(x3 / 提出-01, arg0, x4 / 我)
(x3 / 提出-01, arg1, x5 / 日落)
(x8 / 提出-01, arg0, x9 / 王子)
(x8 / 提出-01, arg1, x11 / 问题)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),问题,问题,false), Span(22,23,List(1),这,这,false), Span(21,22,List(2),忘记,忘记-01,false), Span(20,21,List(3),会,会-03,false), Span(19,20,List(4),不,不,false), Span(18,19,List(5),是,是-04,false), Span(17,18,List(6),他,他,false), Span(15,16,List(7),问题,问题,false), Span(12,13,List(8),提出,提出-01,false), Span(10,11,List(9),王子,王子,false), Span(9,10,List(10),小,小,false), Span(5,6,List(11),日落,日落,false), Span(3,4,List(12),提出,提出-01,false), Span(2,3,List(13),我,我,false), Span(1,2,List(14),那么,那么,false)),Map(2 -> 忘记-01, 5 -> 是-04, 12 -> 提出-01, 8 -> 提出-01, 7 -> 问题, 1 -> 这, 4 -> 不, 11 -> 日落, 14 -> 那么, 6 -> 他, 0 -> 问题, 9 -> 王子, 3 -> 会-03, 10 -> 小, 13 -> 我),Map(问2 -> 问题, 我 -> 我, 这 -> 这, 王 -> 王子, 他 -> 他, 小 -> 小, 忘 -> 忘记-01, 会 -> 会-03, 不 -> 不, 日 -> 日落, 那 -> 那么, 问 -> 问题, 提 -> 提出-01, 提2 -> 提出-01, 是 -> 是-04))),[Ljava.lang.String;@3fffff43,Annotation([Ljava.lang.String;@a8e6492,[Ljava.lang.String;@1c7fd41f,[Ljava.lang.String;@3b77a04f),Annotation([Ljava.lang.String;@7b324585,[Ljava.lang.String;@2e11485,[Ledu.cmu.lti.nlp.amr.Dependency;@60dce7ea),Annotation([Ljava.lang.String;@662f5666,[Ljava.lang.String;@fd8294b,[Ljava.lang.String;@5974109),Annotation([Ljava.lang.String;@27305e6,[Ljava.lang.String;@1ef3efa8,[Ledu.cmu.lti.nlp.amr.Entity;@502f1f4c))
AMR:
(会 / 会-03, location, 不 / 不)
(忘 / 忘记-01, prep-through, 这 / 这)
(忘 / 忘记-01, time, 会 / 会-03)
(提 / 提出-01, prep-through, 王 / 王子)
(提 / 提出-01, prep-through, 问2 / 问题)
(提2 / 提出-01, degree, 那 / 那么)
(提2 / 提出-01, example, 我 / 我)
(提2 / 提出-01, prep-through, 日 / 日落)
(日 / 日落, mod, 小 / 小)
(是 / 是-04, location, 不 / 不)
(是 / 是-04, location, 他 / 他)
(王 / 王子, mod, 小 / 小)
(问 / 问题, mod, 这 / 这)
(问2 / 问题, purpose, 是 / 是-04)

Decoded in 67,514 microseconds
Sentence: “ 日落 么 ， 你 会 看到 的 。

Spans:
Span 5-6:  会 => 会-03
Span 4-5:  你 => 你
Span 1-2:  日落 => 日落
Span 6-7:  看到 => (thing :arg1-of 看到-01)

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 一定 要 太阳 落山 ，

Spans:
Span 1-2:  一定 => 一定
Span 3-4:  太阳 => 太阳
Span 0-1:  我 => 我
Span 4-5:  落山 => 落山
Span 2-3:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一定 => 一定
Oracle Span 3-4:  太阳 => 太阳
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  落山 => 落山
Oracle Span 2-3:  要 => 要-04

Incorrect span: 要 => 要-02
Missing span: 要 => 要-04
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	一定	_	AD	AD	_	5	advmod	_	_
3	要	_	VV	VV	_	5	mmod	_	_
4	太阳	_	NN	NN	_	5	dep	_	_
5	落山	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 一定, arg0, x15 / 要-04)
(x15 / 要-04, arg0, x16 / 我)
(x15 / 要-04, arg1, x17 / 太阳)
(x15 / 要-04, arg2, x18 / 落山)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),落山,落山,false), Span(3,4,List(1),太阳,太阳,false), Span(2,3,List(2),要,要-02,false), Span(1,2,List(3),一定,一定,false), Span(0,1,List(4),我,我,false)),Map(2 -> 要-02, 1 -> 太阳, 4 -> 我, 0 -> 落山, 3 -> 一定),Map(落 -> 落山, 我 -> 我, 要 -> 要-02, 太 -> 太阳, 一 -> 一定))),[Ljava.lang.String;@75c9e76b,Annotation([Ljava.lang.String;@7446d8d5,[Ljava.lang.String;@5c3b6c6e,[Ljava.lang.String;@4fbda97b),Annotation([Ljava.lang.String;@75f5fd58,[Ljava.lang.String;@37b70343,[Ledu.cmu.lti.nlp.amr.Dependency;@306851c7),Annotation([Ljava.lang.String;@12bcd0c0,[Ljava.lang.String;@4879f0f2,[Ljava.lang.String;@47db5fa5),Annotation([Ljava.lang.String;@354fc8f0,[Ljava.lang.String;@41813449,[Ledu.cmu.lti.nlp.amr.Entity;@4678a2eb))
AMR:
(一 / 一定, degree, 要 / 要-02)
(要 / 要-02, ARG5, 太 / 太阳)
(要 / 要-02, medium, 我 / 我)
(要 / 要-02, op, 落 / 落山)

Decoded in 8,739 microseconds
Sentence: 不过 按照 我 的 统治 科学 ， 我 得 等到 条件 成熟 的 时候 。 ”

Spans:
Span 0-1:  不过 => 不过
Span 8-9:  得 => 得-06
Span 11-12:  成熟 => 成熟-01
Span 7-8:  我 => 我
Span 2-3:  我 => 我
Span 1-2:  按照 => 按照-01
Span 13-14:  时候 => 时候
Span 10-11:  条件 => 条件
Span 5-6:  科学 => 科学
Span 9-10:  等到 => 等到-01
Span 4-5:  统治 => 统治-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  得 => 得-02
Oracle Span 11-12:  成熟 => 成熟-01
Oracle Span 2-3:  我 => 我
Oracle Span 1-2:  按照 => 按照-01
Oracle Span 10-11:  条件 => 条件
Oracle Span 5-6:  科学 => 科学
Oracle Span 9-10:  等到 => 等到-01
Oracle Span 4-5:  统治 => 统治-01

Extra span: 时候 => 时候
Incorrect span: 得 => 得-06
Extra span: 我 => 我
Extra span: 不过 => 不过
Missing span: 得 => 得-02
Dependencies:
1	不过	_	AD	AD	_	10	advmod	_	_
2	按照	_	P	P	_	10	prep	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	统治	_	NN	NN	_	6	nn	_	_
6	科学	_	NN	NN	_	2	pobj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	得	_	VV	VV	_	10	mmod	_	_
10	等到	_	VV	VV	_	0	root	_	_
11	条件	_	NN	NN	_	12	nsubj	_	_
12	成熟	_	VA	VA	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	时候	_	NN	NN	_	10	dobj	_	_
15	。	_	PU	PU	_	10	punct	_	_
16	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x17 / 得-02, arg0, x18 / 我)
(x17 / 得-02, arg1, x19 / 等到-01)
(x17 / 得-02, cause, x23 / 按照-01)
(x19 / 等到-01, arg1, x21 / 成熟-01)
(x21 / 成熟-01, arg0, x22 / 条件)
(x23 / 按照-01, arg1, x24 / 科学)
(x24 / 科学, mod, x25 / 统治-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),时候,时候,false), Span(11,12,List(1),成熟,成熟-01,false), Span(10,11,List(2),条件,条件,false), Span(9,10,List(3),等到,等到-01,false), Span(8,9,List(4),得,得-06,false), Span(7,8,List(5),我,我,false), Span(5,6,List(6),科学,科学,false), Span(4,5,List(7),统治,统治-01,false), Span(2,3,List(8),我,我,false), Span(1,2,List(9),按照,按照-01,false), Span(0,1,List(10),不过,不过,false)),Map(2 -> 条件, 5 -> 我, 8 -> 我, 7 -> 统治-01, 1 -> 成熟-01, 4 -> 得-06, 6 -> 科学, 9 -> 按照-01, 0 -> 时候, 10 -> 不过, 3 -> 等到-01),Map(科 -> 科学, 我 -> 我, 得 -> 得-06, 按 -> 按照-01, 我2 -> 我, 等 -> 等到-01, 条 -> 条件, 不 -> 不过, 统 -> 统治-01, 成 -> 成熟-01, 时 -> 时候))),[Ljava.lang.String;@5b43fbf6,Annotation([Ljava.lang.String;@1080b026,[Ljava.lang.String;@58ebfd03,[Ljava.lang.String;@5b07730f),Annotation([Ljava.lang.String;@1fdfafd2,[Ljava.lang.String;@a4b2d8f,[Ledu.cmu.lti.nlp.amr.Dependency;@dcfda20),Annotation([Ljava.lang.String;@6d304f9d,[Ljava.lang.String;@f73dcd6,[Ljava.lang.String;@5c87bfe2),Annotation([Ljava.lang.String;@2fea7088,[Ljava.lang.String;@40499e4f,[Ledu.cmu.lti.nlp.amr.Entity;@51cd7ffc))
AMR:
(不 / 不过, prep-out, 按 / 按照-01)
(得 / 得-06, ARG5, 等 / 等到-01)
(得 / 得-06, location, 科 / 科学)
(得 / 得-06, poss, 我 / 我)
(成 / 成熟-01, location, 条 / 条件)
(按 / 按照-01, subset, 我2 / 我)
(时 / 时候, mod, 成 / 成熟-01)
(科 / 科学, mod, 统 / 统治-01)
(等 / 等到-01, snt1, 成 / 成熟-01)
(统 / 统治-01, prep-on-behalf, 按 / 按照-01)

Decoded in 32,609 microseconds
Sentence: 小 王子 问道 ： “ 这 要 等到 什么 时候 呢 ？ ”

Spans:
Span 8-9:  什么 => 什么
Span 0-1:  小 => 小
Span 9-10:  时候 => 时候
Span 1-2:  王子 => 王子
Span 7-8:  等到 => 等到-01
Span 6-7:  要 => 要-02
Span 5-6:  这 => 这
Span 2-3:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  等到 => 等到-01
Oracle Span 6-7:  要 => 要-03
Oracle Span 5-6:  这 => 这
Oracle Span 2-3:  问道 => 问道-01

Extra span: 时候 => 时候
Extra span: 什么 => 什么
Incorrect span: 要 => 要-02
Incorrect span: 小 => 小
Missing span: 要 => 要-03
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	问道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	这	_	PN	PN	_	8	nsubj	_	_
7	要	_	VV	VV	_	8	mmod	_	_
8	等到	_	VV	VV	_	3	ccomp	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	时候	_	NN	NN	_	8	dobj	_	_
11	呢	_	SP	SP	_	3	dep	_	_
12	？	_	PU	PU	_	3	punct	_	_
13	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 要-03)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, arg0, x5 / 等到-01)
(x5 / 等到-01, arg0, x6 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),时候,时候,false), Span(8,9,List(1),什么,什么,false), Span(7,8,List(2),等到,等到-01,false), Span(6,7,List(3),要,要-02,false), Span(5,6,List(4),这,这,false), Span(2,3,List(5),问道,问道-01,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小,false)),Map(2 -> 等到-01, 5 -> 问道-01, 7 -> 小, 1 -> 什么, 4 -> 这, 6 -> 王子, 0 -> 时候, 3 -> 要-02),Map(这 -> 这, 要 -> 要-02, 王 -> 王子, 小 -> 小, 等 -> 等到-01, 问 -> 问道-01, 什 -> 什么, 时 -> 时候))),[Ljava.lang.String;@30d4b288,Annotation([Ljava.lang.String;@4cc6fa2a,[Ljava.lang.String;@40f1be1b,[Ljava.lang.String;@7a791b66),Annotation([Ljava.lang.String;@6f2cb653,[Ljava.lang.String;@14c01636,[Ledu.cmu.lti.nlp.amr.Dependency;@590c73d3),Annotation([Ljava.lang.String;@6b9ce1bf,[Ljava.lang.String;@61884cb1,[Ljava.lang.String;@75ed9710),Annotation([Ljava.lang.String;@4fc5e095,[Ljava.lang.String;@435871cb,[Ledu.cmu.lti.nlp.amr.Entity;@609640d5))
AMR:
(时 / 时候, mod, 什 / 什么)
(时 / 时候, mod, 等 / 等到-01)
(王 / 王子, mod, 小 / 小)
(要 / 要-02, mod, 这 / 这)
(要 / 要-02, purpose, 等 / 等到-01)
(问 / 问道-01, purpose, 等 / 等到-01)
(问 / 问道-01, value, 王 / 王子)

Decoded in 19,121 microseconds
Sentence: 嗯 ！

Spans:
Span 0-1:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  嗯 => 嗯

Dependencies:
1	嗯	_	VV	VV	_	0	root	_	_
2	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@79da1ec0,Annotation([Ljava.lang.String;@19fb8826,[Ljava.lang.String;@192d74fb,[Ljava.lang.String;@4bef0fe3),Annotation([Ljava.lang.String;@62ea3440,[Ljava.lang.String;@27953a83,[Ledu.cmu.lti.nlp.amr.Dependency;@556d0826),Annotation([Ljava.lang.String;@66ce957f,[Ljava.lang.String;@55b5f5d2,[Ljava.lang.String;@5bfa8cc5),Annotation([Ljava.lang.String;@666b83a4,[Ljava.lang.String;@749c877b,[Ledu.cmu.lti.nlp.amr.Entity;@efde75f))
AMR:


Decoded in 1,426 microseconds
Sentence: 国王 在 回答 之前 ， 首先 翻阅 了 一 本 厚厚 的 日历 ， 嘴里 慢慢 说道 ：

Spans:
Span 3-4:  之前 => 之前
Span 10-11:  厚厚 => 厚厚-01
Span 2-3:  回答 => 回答-01
Span 0-1:  国王 => 国王
Span 1-2:  在 => 在-01
Span 15-16:  慢慢 => 慢慢
Span 12-13:  日历 => 日历
Span 9-10:  本 => 本
Span 6-7:  翻阅 => 翻阅-01
Span 16-17:  说道 => 说道
Span 5-6:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  之前 => 之前
Oracle Span 10-11:  厚厚 => 厚厚-01
Oracle Span 2-3:  回答 => 回答-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 15-16:  慢慢 => 慢慢-01
Oracle Span 12-13:  日历 => 日历
Oracle Span 6-7:  翻阅 => 翻阅-01
Oracle Span 16-17:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 慢慢 => 慢慢
Extra span: 本 => 本
Extra span: 首先 => 首先
Extra span: 在 => 在-01
Missing span: 说道 => 说道-01
Missing span: 慢慢 => 慢慢-01
Dependencies:
1	国王	_	NN	NN	_	7	nsubj	_	_
2	在	_	P	P	_	7	prep	_	_
3	回答	_	VV	VV	_	4	lccomp	_	_
4	之前	_	LC	LC	_	2	plmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	首先	_	AD	AD	_	7	advmod	_	_
7	翻阅	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	一	_	CD	CD	_	13	nummod	_	_
10	本	_	DT	DT	_	11	det	_	_
11	厚厚	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	日历	_	NN	NN	_	7	dobj	_	_
14	,	_	PU	PU	_	7	punct	_	_
15	嘴里	_	NN	NN	_	17	nsubj	_	_
16	慢慢	_	AD	AD	_	17	advmod	_	_
17	说道	_	VV	VV	_	7	conj	_	_
18	：	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 说道-01, manner, x11 / 慢慢-01)
(x2 / 翻阅-01, arg0, x3 / 国王)
(x2 / 翻阅-01, arg1, x4 / 日历)
(x2 / 翻阅-01, time, x7 / 之前)
(x4 / 日历, mod, x5 / 厚厚-01)
(x7 / 之前, mod, x8 / 回答-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),说道,说道,false), Span(15,16,List(1),慢慢,慢慢,false), Span(12,13,List(2),日历,日历,false), Span(10,11,List(3),厚厚,厚厚-01,false), Span(9,10,List(4),本,本,false), Span(6,7,List(5),翻阅,翻阅-01,false), Span(5,6,List(6),首先,首先,false), Span(3,4,List(7),之前,之前,false), Span(2,3,List(8),回答,回答-01,false), Span(1,2,List(9),在,在-01,false), Span(0,1,List(10),国王,国王,false)),Map(2 -> 日历, 5 -> 翻阅-01, 8 -> 回答-01, 7 -> 之前, 1 -> 慢慢, 4 -> 本, 6 -> 首先, 9 -> 在-01, 0 -> 说道, 10 -> 国王, 3 -> 厚厚-01),Map(在 -> 在-01, 本 -> 本, 厚 -> 厚厚-01, 翻 -> 翻阅-01, 国 -> 国王, 首 -> 首先, 日 -> 日历, 说 -> 说道, 慢 -> 慢慢, 回 -> 回答-01, 之 -> 之前))),[Ljava.lang.String;@16ecee1,Annotation([Ljava.lang.String;@3b220bcb,[Ljava.lang.String;@2b95e48b,[Ljava.lang.String;@4a3329b9),Annotation([Ljava.lang.String;@3dddefd8,[Ljava.lang.String;@160ac7fb,[Ledu.cmu.lti.nlp.amr.Dependency;@12bfd80d),Annotation([Ljava.lang.String;@41925502,[Ljava.lang.String;@13e3c1c7,[Ljava.lang.String;@5316e95f),Annotation([Ljava.lang.String;@3f053c80,[Ljava.lang.String;@6c6c5427,[Ledu.cmu.lti.nlp.amr.Entity;@618c5d94))
AMR:
(之 / 之前, mod, 回 / 回答-01)
(之 / 之前, mod, 在 / 在-01)
(厚 / 厚厚-01, manner, 本 / 本)
(国 / 国王, mod, 在 / 在-01)
(慢 / 慢慢, domain, 日 / 日历)
(日 / 日历, mod, 厚 / 厚厚-01)
(翻 / 翻阅-01, manner, 本 / 本)
(翻 / 翻阅-01, time, 之 / 之前)
(翻 / 翻阅-01, time, 首 / 首先)
(说 / 说道, mod, 慢 / 慢慢)

Decoded in 33,792 microseconds
Sentence: “ 嗯 ！

Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@5b40ceb,Annotation([Ljava.lang.String;@13c3c1e1,[Ljava.lang.String;@1d8062d2,[Ljava.lang.String;@1e63ec0b),Annotation([Ljava.lang.String;@3b956878,[Ljava.lang.String;@36546a22,[Ledu.cmu.lti.nlp.amr.Dependency;@285c08c8),Annotation([Ljava.lang.String;@295eaa7c,[Ljava.lang.String;@3918c187,[Ljava.lang.String;@2c88b9fc),Annotation([Ljava.lang.String;@64dafeed,[Ljava.lang.String;@388ba540,[Ledu.cmu.lti.nlp.amr.Entity;@47605f2f))
AMR:


Decoded in 1,472 microseconds
Sentence: 嗯 ！

Spans:
Span 0-1:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  嗯 => 嗯

Dependencies:
1	嗯	_	VV	VV	_	0	root	_	_
2	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@2ece4966,Annotation([Ljava.lang.String;@1dd0e7c4,[Ljava.lang.String;@7894f09b,[Ljava.lang.String;@3d484181),Annotation([Ljava.lang.String;@6111ba37,[Ljava.lang.String;@7be58f16,[Ledu.cmu.lti.nlp.amr.Dependency;@242aa8d9),Annotation([Ljava.lang.String;@5b11a194,[Ljava.lang.String;@37bd68c3,[Ljava.lang.String;@60f7cc1d),Annotation([Ljava.lang.String;@11eadcba,[Ljava.lang.String;@4721d212,[Ledu.cmu.lti.nlp.amr.Entity;@1b065145))
AMR:


Decoded in 1,259 microseconds
Sentence: 日落 大约 … 大约 … 在 今晚 七时 四十分 的 时候 ！

Spans:
Span 6-7:  今晚 => 今晚
Span 5-6:  在 => 在-01
Span 3-4:  大约 => 大约
Span 1-2:  大约 => 大约
Span 0-1:  日落 => 日落
Span 10-11:  时候 => 时候

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  今晚 => 今晚
Oracle Span 1-2:  大约 => 大约
Oracle Span 0-1:  日落 => 日落-01

Extra span: 时候 => 时候
Extra span: 在 => 在-01
Extra span: 大约 => 大约
Incorrect span: 日落 => 日落
Missing span: 日落 => 日落-01
Dependencies:
1	日落	_	VV	VV	_	0	root	_	_
2	大约	_	AD	AD	_	11	advmod	_	_
3	…	_	PU	PU	_	6	dep	_	_
4	大约	_	AD	AD	_	6	advmod	_	_
5	…	_	PU	PU	_	6	dep	_	_
6	在	_	VV	VV	_	11	rcmod	_	_
7	今晚	_	NT	NT	_	8	dep	_	_
8	七时	_	CD	CD	_	6	range	_	_
9	四十分	_	CD	CD	_	6	nummod	_	_
10	的	_	DEC	DEC	_	6	cpm	_	_
11	时候	_	NN	NN	_	1	dobj	_	_
12	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 日落-01, manner, x5 / 大约)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),时候,时候,false), Span(6,7,List(1),今晚,今晚,false), Span(5,6,List(2),在,在-01,false), Span(3,4,List(3),大约,大约,false), Span(1,2,List(4),大约,大约,false), Span(0,1,List(5),日落,日落,false)),Map(2 -> 在-01, 5 -> 日落, 1 -> 今晚, 4 -> 大约, 0 -> 时候, 3 -> 大约),Map(大2 -> 大约, 在 -> 在-01, 大 -> 大约, 今 -> 今晚, 日 -> 日落, 时 -> 时候))),[Ljava.lang.String;@45cff11c,Annotation([Ljava.lang.String;@207ea13,[Ljava.lang.String;@4bff1903,[Ljava.lang.String;@62dae540),Annotation([Ljava.lang.String;@5827af16,[Ljava.lang.String;@654d8173,[Ledu.cmu.lti.nlp.amr.Dependency;@56c9bbd8),Annotation([Ljava.lang.String;@630cb4a4,[Ljava.lang.String;@636e8cc,[Ljava.lang.String;@f79a760),Annotation([Ljava.lang.String;@14f5da2c,[Ljava.lang.String;@12dae582,[Ledu.cmu.lti.nlp.amr.Entity;@239b0f9d))
AMR:
(在 / 在-01, manner, 今 / 今晚)
(在 / 在-01, manner, 大 / 大约)
(大 / 大约, manner, 大2 / 大约)
(日 / 日落, manner, 大2 / 大约)
(时 / 时候, mod, 在 / 在-01)

Decoded in 11,876 microseconds
Sentence: 你 将 看到 我 的 命令 一定 会 被 服从 的 。 ”

Spans:
Span 6-7:  一定 => 一定
Span 7-8:  会 => 会-03
Span 0-1:  你 => 你
Span 5-6:  命令 => 命令-01
Span 1-2:  将 => 将-01
Span 3-4:  我 => 我
Span 9-10:  服从 => 服从-01
Span 2-3:  看到 => (thing :arg1-of 看到-01)

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 又 打 起 哈欠 来 了 。

Spans:
Span 2-3:  又 => 又
Span 0-1:  小 => 小
Span 6-7:  来 => 来-06
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Extra span: 来 => 来-06
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	打	_	VV	VV	_	5	lccomp	_	_
5	起	_	LC	LC	_	7	loc	_	_
6	哈欠	_	AD	AD	_	7	advmod	_	_
7	来	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),来,来-06,false), Span(2,3,List(1),又,又,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小,false)),Map(2 -> 王子, 1 -> 又, 0 -> 来-06, 3 -> 小),Map(又 -> 又, 来 -> 来-06, 王 -> 王子, 小 -> 小))),[Ljava.lang.String;@5b057c8c,Annotation([Ljava.lang.String;@1eb6749b,[Ljava.lang.String;@652a7737,[Ljava.lang.String;@5b7ea70d),Annotation([Ljava.lang.String;@2bef51f2,[Ljava.lang.String;@650eab8,[Ledu.cmu.lti.nlp.amr.Dependency;@30f5a68a),Annotation([Ljava.lang.String;@1e1d3956,[Ljava.lang.String;@4f2c9ba6,[Ljava.lang.String;@4e28bdd1),Annotation([Ljava.lang.String;@53f48368,[Ljava.lang.String;@24d4d7c9,[Ledu.cmu.lti.nlp.amr.Entity;@f0e995e))
AMR:
(又 / 又, prep-out, 来 / 来-06)
(来 / 来-06, prep-following, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 7,869 microseconds
Sentence: 他 遗憾 没有 看到 日落 。

Spans:
Span 0-1:  他 => 他
Span 4-5:  日落 => 日落
Span 3-4:  看到 => (thing :arg1-of 看到-01)
Span 1-2:  遗憾 => 遗憾-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 有点 厌烦 了 ，

Spans:
Span 0-1:  他 => 他
Span 2-3:  厌烦 => 厌烦-01
Span 1-2:  有点 => 有点-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  厌烦 => 厌烦-01
Oracle Span 1-2:  有点 => 有点

Incorrect span: 有点 => 有点-01
Missing span: 有点 => 有点
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	有点	_	AD	AD	_	3	advmod	_	_
3	厌烦	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 厌烦-01, arg0, x2 / 他)
(x0 / 厌烦-01, degree, x3 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),厌烦,厌烦-01,false), Span(1,2,List(1),有点,有点-01,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 有点-01, 0 -> 厌烦-01),Map(厌 -> 厌烦-01, 他 -> 他, 有 -> 有点-01))),[Ljava.lang.String;@73db4768,Annotation([Ljava.lang.String;@71b3bc45,[Ljava.lang.String;@a8c1f44,[Ljava.lang.String;@150ab4ed),Annotation([Ljava.lang.String;@3c435123,[Ljava.lang.String;@50fe837a,[Ledu.cmu.lti.nlp.amr.Dependency;@3a62c01e),Annotation([Ljava.lang.String;@7a8fa663,[Ljava.lang.String;@5ce33a58,[Ljava.lang.String;@78a287ed),Annotation([Ljava.lang.String;@546ccad7,[Ljava.lang.String;@5357c287,[Ledu.cmu.lti.nlp.amr.Entity;@1623134f))
AMR:
(厌 / 厌烦-01, ARG6, 他 / 他)
(厌 / 厌烦-01, degree, 有 / 有点-01)

Decoded in 4,986 microseconds
Sentence: 他 对 国王 说 ： “ 我 没有 必要 再 呆 在 这儿 了 。

Spans:
Span 0-1:  他 => 他
Span 9-10:  再 => 再
Span 10-11:  呆 => 呆-02
Span 2-3:  国王 => 国王
Span 11-12:  在 => 在-01
Span 1-2:  对 => 对-02
Span 8-9:  必要 => 必要-01
Span 6-7:  我 => 我
Span 3-4:  说 => 说-02
Span 12-13:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  再 => 再
Oracle Span 10-11:  呆 => 呆-02
Oracle Span 2-3:  国王 => 国王
Oracle Span 8-9:  必要 => 必要-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 12-13:  这儿 => 这儿

Extra span: 在 => 在-01
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	4	xsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	国王	_	NN	NN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	没有	_	VV	VV	_	9	dep	_	_
9	必要	_	VV	VV	_	4	dep	_	_
10	再	_	AD	AD	_	9	advmod	_	_
11	呆	_	JJ	JJ	_	4	dep	_	_
12	在	_	P	P	_	4	prep	_	_
13	这儿	_	PN	PN	_	12	pobj	_	_
14	了	_	AS	AS	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	他	_	PN	PN	_	4	nsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x11 / 必要-01)
(x0 / 说-01, arg3, x3 / 国王)
(x11 / 必要-01, arg0, x14 / 呆-02)
(x14 / 呆-02, arg1, x17 / 这儿)
(x14 / 呆-02, manner, x15 / 再)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),这儿,这儿,false), Span(11,12,List(1),在,在-01,false), Span(10,11,List(2),呆,呆-02,false), Span(9,10,List(3),再,再,false), Span(8,9,List(4),必要,必要-01,false), Span(6,7,List(5),我,我,false), Span(3,4,List(6),说,说-02,false), Span(2,3,List(7),国王,国王,false), Span(1,2,List(8),对,对-02,false), Span(0,1,List(9),他,他,false)),Map(2 -> 呆-02, 5 -> 我, 8 -> 对-02, 7 -> 国王, 1 -> 在-01, 4 -> 必要-01, 6 -> 说-02, 9 -> 他, 0 -> 这儿, 3 -> 再),Map(在 -> 在-01, 我 -> 我, 这 -> 这儿, 他 -> 他, 国 -> 国王, 说 -> 说-02, 对 -> 对-02, 必 -> 必要-01, 呆 -> 呆-02, 再 -> 再))),[Ljava.lang.String;@7a527389,Annotation([Ljava.lang.String;@485a3466,[Ljava.lang.String;@25748410,[Ljava.lang.String;@2b43529a),Annotation([Ljava.lang.String;@4264b240,[Ljava.lang.String;@5b04476e,[Ledu.cmu.lti.nlp.amr.Dependency;@5ad10c1a),Annotation([Ljava.lang.String;@6bb75258,[Ljava.lang.String;@c260bdc,[Ljava.lang.String;@75e01201),Annotation([Ljava.lang.String;@2783717b,[Ljava.lang.String;@76f7d241,[Ledu.cmu.lti.nlp.amr.Entity;@4a335fa8))
AMR:
(呆 / 呆-02, manner, 再 / 再)
(呆 / 呆-02, manner, 必 / 必要-01)
(在 / 在-01, location, 这 / 这儿)
(在 / 在-01, manner, 呆 / 呆-02)
(对 / 对-02, prep-following, 他 / 他)
(必 / 必要-01, manner, 我 / 我)
(说 / 说-02, ARG3, 必 / 必要-01)
(说 / 说-02, direction, 国 / 国王)
(说 / 说-02, prep-following, 对 / 对-02)

Decoded in 27,879 microseconds
Sentence: 我 要 走 了 。 ”

Spans:
Span 0-1:  我 => 我
Span 1-2:  要 => 要-02
Span 2-3:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  要 => 要-03
Oracle Span 2-3:  走 => 走-07

Incorrect span: 走 => 走-05
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 走 => 走-07
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	走	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 要-03, arg0, x7 / 走-07)
(x7 / 走-07, arg0, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),走,走-05,false), Span(1,2,List(1),要,要-02,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 要-02, 0 -> 走-05),Map(我 -> 我, 要 -> 要-02, 走 -> 走-05))),[Ljava.lang.String;@3f363cf5,Annotation([Ljava.lang.String;@3829ac1,[Ljava.lang.String;@4baf352a,[Ljava.lang.String;@1bb1fde8),Annotation([Ljava.lang.String;@15eebbff,[Ljava.lang.String;@22d6f11,[Ledu.cmu.lti.nlp.amr.Dependency;@30990c1b),Annotation([Ljava.lang.String;@2453f95d,[Ljava.lang.String;@44828f6b,[Ljava.lang.String;@2dbe250d),Annotation([Ljava.lang.String;@553f1d75,[Ljava.lang.String;@6e1d8f9e,[Ledu.cmu.lti.nlp.amr.Entity;@3e34ace1))
AMR:
(要 / 要-02, manner, 我 / 我)
(要 / 要-02, snt11, 走 / 走-05)

Decoded in 4,956 microseconds
Sentence: 这 位 因为 刚刚 有 了 一 个 臣民 而 十分 骄傲 自得 的 国王 说道 ： “ 别 走 ，

Spans:
Span 3-4:  刚刚 => 刚刚
Span 10-11:  十分 => 十分
Span 14-15:  国王 => 国王
Span 4-5:  有 => 有-06
Span 8-9:  臣民 => 臣民
Span 12-13:  自得 => 自得
Span 15-16:  说道 => 说道
Span 19-20:  走 => 走-05
Span 0-1:  这 => 这
Span 11-12:  骄傲 => 骄傲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  刚刚 => 刚刚
Oracle Span 10-11:  十分 => 十分
Oracle Span 14-15:  国王 => 国王
Oracle Span 4-5:  有 => 有-01
Oracle Span 8-9:  臣民 => 臣民
Oracle Span 12-13:  自得 => 自得
Oracle Span 15-16:  说道 => 说道-01
Oracle Span 19-20:  走 => 走-02
Oracle Span 0-1:  这 => 这
Oracle Span 11-12:  骄傲 => 骄傲-01

Incorrect span: 走 => 走-05
Incorrect span: 说道 => 说道
Incorrect span: 骄傲 => 骄傲
Incorrect span: 有 => 有-06
Missing span: 说道 => 说道-01
Missing span: 走 => 走-02
Missing span: 骄傲 => 骄傲-01
Missing span: 有 => 有-01
Dependencies:
1	这	_	DT	DT	_	16	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	因为	_	P	P	_	12	prep	_	_
4	刚刚	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	3	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	臣民	_	NN	NN	_	5	dobj	_	_
10	而	_	MSP	MSP	_	12	prtmod	_	_
11	十分	_	AD	AD	_	12	advmod	_	_
12	骄傲	_	VV	VV	_	16	rcmod	_	_
13	自得	_	NN	NN	_	12	dobj	_	_
14	的	_	DEC	DEC	_	12	cpm	_	_
15	国王	_	NN	NN	_	16	nn	_	_
16	说道	_	NN	NN	_	20	nsubj	_	_
17	：	_	PU	PU	_	20	punct	_	_
18	“	_	PU	PU	_	20	punct	_	_
19	别	_	DT	DT	_	20	nsubj	_	_
20	走	_	VV	VV	_	0	root	_	_
21	,	_	PU	PU	_	20	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 国王)
(x0 / 说道-01, arg1, x4 / 走-02)
(x2 / 国王, mod, x3 / 这)
(x36 / 有-01, arg1, x38 / 臣民)
(x36 / 有-01, time, x40 / 刚刚)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),走,走-05,false), Span(15,16,List(1),说道,说道,false), Span(14,15,List(2),国王,国王,false), Span(12,13,List(3),自得,自得,false), Span(11,12,List(4),骄傲,骄傲,false), Span(10,11,List(5),十分,十分,false), Span(8,9,List(6),臣民,臣民,false), Span(4,5,List(7),有,有-06,false), Span(3,4,List(8),刚刚,刚刚,false), Span(0,1,List(9),这,这,false)),Map(2 -> 国王, 5 -> 十分, 8 -> 刚刚, 7 -> 有-06, 1 -> 说道, 4 -> 骄傲, 6 -> 臣民, 9 -> 这, 0 -> 走-05, 3 -> 自得),Map(骄 -> 骄傲, 自 -> 自得, 这 -> 这, 十 -> 十分, 臣 -> 臣民, 国 -> 国王, 说 -> 说道, 走 -> 走-05, 刚 -> 刚刚, 有 -> 有-06))),[Ljava.lang.String;@62fe6067,Annotation([Ljava.lang.String;@4f071df8,[Ljava.lang.String;@4de41af9,[Ljava.lang.String;@56ace400),Annotation([Ljava.lang.String;@47404bea,[Ljava.lang.String;@305f7627,[Ledu.cmu.lti.nlp.amr.Dependency;@5d018107),Annotation([Ljava.lang.String;@6cbcf243,[Ljava.lang.String;@29e6eb25,[Ljava.lang.String;@62435e70),Annotation([Ljava.lang.String;@339bf286,[Ljava.lang.String;@38be305c,[Ledu.cmu.lti.nlp.amr.Entity;@269f4bad))
AMR:
(十 / 十分, mod, 骄 / 骄傲)
(国 / 国王, mod, 说 / 说道)
(国 / 国王, mod, 骄 / 骄傲)
(有 / 有-06, mod, 这 / 这)
(有 / 有-06, snt2, 臣 / 臣民)
(有 / 有-06, time, 刚 / 刚刚)
(臣 / 臣民, mod, 骄 / 骄傲)
(自 / 自得, mod, 骄 / 骄傲)
(说 / 说道, manner, 走 / 走-05)

Decoded in 31,868 microseconds
Sentence: 别 走 。

Spans:
Span 1-2:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  走 => 走-07

Incorrect span: 走 => 走-05
Missing span: 走 => 走-07
Dependencies:
1	别	_	DT	DT	_	2	nsubj	_	_
2	走	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),走,走-05,false)),Map(0 -> 走-05),Map(走 -> 走-05))),[Ljava.lang.String;@5ed731d0,Annotation([Ljava.lang.String;@3234f74e,[Ljava.lang.String;@7bc10d84,[Ljava.lang.String;@275fe372),Annotation([Ljava.lang.String;@40e10ff8,[Ljava.lang.String;@557a1e2d,[Ledu.cmu.lti.nlp.amr.Dependency;@26a4842b),Annotation([Ljava.lang.String;@7e38a7fe,[Ljava.lang.String;@366ef90e,[Ljava.lang.String;@33e01298),Annotation([Ljava.lang.String;@31e75d13,[Ljava.lang.String;@a5b0b86,[Ledu.cmu.lti.nlp.amr.Entity;@4b3c354a))
AMR:


Decoded in 2,111 microseconds
Sentence: 我 任命 你 当 大臣 。 ”

Spans:
Span 1-2:  任命 => 任命-01
Span 2-3:  你 => 你
Span 4-5:  大臣 => 大臣
Span 3-4:  当 => 当-04
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  任命 => 任命-01
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  大臣 => 大臣
Oracle Span 0-1:  我 => 我

Extra span: 当 => 当-04
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	任命	_	VV	VV	_	0	root	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	当	_	VV	VV	_	2	dep	_	_
5	大臣	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 任命-01, arg0, x8 / 我)
(x7 / 任命-01, arg1, x9 / 你)
(x7 / 任命-01, arg2, x13 / 大臣)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),大臣,大臣,false), Span(3,4,List(1),当,当-04,false), Span(2,3,List(2),你,你,false), Span(1,2,List(3),任命,任命-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 你, 1 -> 当-04, 4 -> 我, 0 -> 大臣, 3 -> 任命-01),Map(任 -> 任命-01, 我 -> 我, 你 -> 你, 大 -> 大臣, 当 -> 当-04))),[Ljava.lang.String;@78fb9a67,Annotation([Ljava.lang.String;@73ff4fae,[Ljava.lang.String;@21aa6d6c,[Ljava.lang.String;@b968a76),Annotation([Ljava.lang.String;@2f9a01c1,[Ljava.lang.String;@2611b9a3,[Ledu.cmu.lti.nlp.amr.Dependency;@54227100),Annotation([Ljava.lang.String;@6b5894c8,[Ljava.lang.String;@1433046b,[Ljava.lang.String;@3f446bef),Annotation([Ljava.lang.String;@7829b776,[Ljava.lang.String;@5778826f,[Ledu.cmu.lti.nlp.amr.Entity;@5b64c4b7))
AMR:
(任 / 任命-01, manner, 我 / 我)
(任 / 任命-01, mode, 当 / 当-04)
(任 / 任命-01, snt11, 你 / 你)
(大 / 大臣, mod, 当 / 当-04)

Decoded in 8,672 microseconds
Sentence: “ 什么 大臣 ”

Spans:
Span 1-2:  什么 => 什么
Span 2-3:  大臣 => 大臣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  大臣 => 大臣

Extra span: 什么 => 什么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	DT	DT	_	3	det	_	_
3	大臣	_	NN	NN	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),大臣,大臣,false), Span(1,2,List(1),什么,什么,false)),Map(1 -> 什么, 0 -> 大臣),Map(大 -> 大臣, 什 -> 什么))),[Ljava.lang.String;@4763c727,Annotation([Ljava.lang.String;@72445aba,[Ljava.lang.String;@61bcd567,[Ljava.lang.String;@1c80e49b),Annotation([Ljava.lang.String;@458342d3,[Ljava.lang.String;@15c25153,[Ledu.cmu.lti.nlp.amr.Dependency;@1252b961),Annotation([Ljava.lang.String;@9ed238c,[Ljava.lang.String;@56276db8,[Ljava.lang.String;@51e8e6e6),Annotation([Ljava.lang.String;@56f6d40b,[Ljava.lang.String;@36676c1a,[Ledu.cmu.lti.nlp.amr.Entity;@5b408dc3))
AMR:
(大 / 大臣, mod, 什 / 什么)

Decoded in 2,930 microseconds
Sentence: “ 嗯 … … 司法 大臣 ！ ”

Spans:
Span 4-5:  司法 => 司法-01
Span 1-2:  嗯 => 嗯
Span 5-6:  大臣 => 大臣

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  司法 => 司法-01
Oracle Span 5-6:  大臣 => 大臣

Extra span: 嗯 => 嗯
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	6	punct	_	_
4	…	_	PU	PU	_	5	dep	_	_
5	司法	_	NN	NN	_	6	nsubj	_	_
6	大臣	_	NN	NN	_	2	dep	_	_
7	！	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 大臣, topic, x7 / 司法-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),大臣,大臣,false), Span(4,5,List(1),司法,司法-01,false), Span(1,2,List(2),嗯,嗯,false)),Map(2 -> 嗯, 1 -> 司法-01, 0 -> 大臣),Map(大 -> 大臣, 嗯 -> 嗯, 司 -> 司法-01))),[Ljava.lang.String;@4d098f9b,Annotation([Ljava.lang.String;@2dbf4cbd,[Ljava.lang.String;@20b5f2ac,[Ljava.lang.String;@7fc44dec),Annotation([Ljava.lang.String;@7e3060d8,[Ljava.lang.String;@293d0107,[Ledu.cmu.lti.nlp.amr.Dependency;@2692b61e),Annotation([Ljava.lang.String;@7b64240d,[Ljava.lang.String;@62fad19,[Ljava.lang.String;@47dbb1e2),Annotation([Ljava.lang.String;@74cadd41,[Ljava.lang.String;@2e54db99,[Ledu.cmu.lti.nlp.amr.Entity;@55e8ec2f))
AMR:
(司 / 司法-01, degree, 嗯 / 嗯)
(大 / 大臣, topic, 司 / 司法-01)

Decoded in 5,494 microseconds
Sentence: “ 可是 ， 这儿 没有 一 个 要 审判 的 人 。 ”

Spans:
Span 10-11:  人 => 人
Span 8-9:  审判 => 审判-01
Span 7-8:  要 => 要-02
Span 3-4:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 8-9:  审判 => 审判-01
Oracle Span 7-8:  要 => 要-03
Oracle Span 3-4:  这儿 => 这儿

Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	这儿	_	PN	PN	_	5	nsubj	_	_
5	没有	_	VE	VE	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	5	dep	_	_
8	要	_	VV	VV	_	5	conj	_	_
9	审判	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	人	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x21 / 审判-01, arg1, x20 / 人)
(x22 / 要-03, arg0, x21 / 审判-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),人,人,false), Span(8,9,List(1),审判,审判-01,false), Span(7,8,List(2),要,要-02,false), Span(3,4,List(3),这儿,这儿,false)),Map(2 -> 要-02, 1 -> 审判-01, 0 -> 人, 3 -> 这儿),Map(这 -> 这儿, 要 -> 要-02, 审 -> 审判-01, 人 -> 人))),[Ljava.lang.String;@4f2613d1,Annotation([Ljava.lang.String;@6d24ffa1,[Ljava.lang.String;@65a4798f,[Ljava.lang.String;@773f7880),Annotation([Ljava.lang.String;@878452d,[Ljava.lang.String;@426b6a74,[Ledu.cmu.lti.nlp.amr.Dependency;@4c51bb7),Annotation([Ljava.lang.String;@83298d7,[Ljava.lang.String;@42a9e5d1,[Ljava.lang.String;@5b080f3a),Annotation([Ljava.lang.String;@773cbf4f,[Ljava.lang.String;@6b54655f,[Ledu.cmu.lti.nlp.amr.Entity;@665e9289))
AMR:
(人 / 人, location, 审 / 审判-01)
(要 / 要-02, compared-to, 审 / 审判-01)
(要 / 要-02, time, 这 / 这儿)

Decoded in 7,893 microseconds
Sentence: “ 很 难 说 呀 ， ” 国王 说道 。

Spans:
Span 7-8:  国王 => 国王
Span 1-2:  很 => 很
Span 3-4:  说 => 说-02
Span 8-9:  说道 => 说道
Span 2-3:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  国王 => 国王
Oracle Span 1-2:  很 => 很
Oracle Span 8-9:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 说 => 说-02
Extra span: 难 => 难-01
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	很	_	AD	AD	_	4	advmod	_	_
3	难	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	9	pccomp	_	_
5	呀	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	”	_	PU	PU	_	9	punct	_	_
8	国王	_	NN	NN	_	9	nsubj	_	_
9	说道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 国王)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说道,说道,false), Span(7,8,List(1),国王,国王,false), Span(3,4,List(2),说,说-02,false), Span(2,3,List(3),难,难-01,false), Span(1,2,List(4),很,很,false)),Map(2 -> 说-02, 1 -> 国王, 4 -> 很, 0 -> 说道, 3 -> 难-01),Map(难 -> 难-01, 说2 -> 说-02, 很 -> 很, 国 -> 国王, 说 -> 说道))),[Ljava.lang.String;@7d3430a7,Annotation([Ljava.lang.String;@6f603e89,[Ljava.lang.String;@2756c0a7,[Ljava.lang.String;@350ec41e),Annotation([Ljava.lang.String;@69637b10,[Ljava.lang.String;@71984c3,[Ledu.cmu.lti.nlp.amr.Dependency;@165b2f7f),Annotation([Ljava.lang.String;@5536379e,[Ljava.lang.String;@277f7dd3,[Ljava.lang.String;@6c8bca63),Annotation([Ljava.lang.String;@2364305a,[Ljava.lang.String;@470a696f,[Ledu.cmu.lti.nlp.amr.Entity;@1bc715b8))
AMR:
(说 / 说道, beneficiary, 国 / 国王)
(说2 / 说-02, degree, 难 / 难-01)
(说2 / 说-02, purpose, 国 / 国王)
(难 / 难-01, degree, 很 / 很)

Decoded in 9,195 microseconds
Sentence: 因此 我 还 没有 巡视 过 我 的 王国 呢 ！ ”

Spans:
Span 4-5:  巡视 => 巡视-01
Span 6-7:  我 => 我
Span 1-2:  我 => 我
Span 8-9:  王国 => 王国
Span 5-6:  过 => 过-01
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  巡视 => 巡视-01
Oracle Span 1-2:  我 => 我
Oracle Span 8-9:  王国 => 王国
Oracle Span 2-3:  还 => 还

Extra span: 我 => 我
Extra span: 过 => 过-01
Dependencies:
1	因此	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	还	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	巡视	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	王国	_	NN	NN	_	5	dobj	_	_
10	呢	_	SP	SP	_	5	dep	_	_
11	！	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x12 / 巡视-01, arg0, x14 / 我)
(x12 / 巡视-01, arg1, x16 / 王国)
(x12 / 巡视-01, manner, x15 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),王国,王国,false), Span(6,7,List(1),我,我,false), Span(5,6,List(2),过,过-01,false), Span(4,5,List(3),巡视,巡视-01,false), Span(2,3,List(4),还,还,false), Span(1,2,List(5),我,我,false)),Map(2 -> 过-01, 5 -> 我, 1 -> 我, 4 -> 还, 0 -> 王国, 3 -> 巡视-01),Map(我 -> 我, 过 -> 过-01, 我2 -> 我, 王 -> 王国, 还 -> 还, 巡 -> 巡视-01))),[Ljava.lang.String;@292d1c71,Annotation([Ljava.lang.String;@2b491fee,[Ljava.lang.String;@3f1c5af9,[Ljava.lang.String;@1c55f277),Annotation([Ljava.lang.String;@5ddabb18,[Ljava.lang.String;@3e8f7922,[Ledu.cmu.lti.nlp.amr.Dependency;@63192798),Annotation([Ljava.lang.String;@50eca7c6,[Ljava.lang.String;@58e6d4b8,[Ljava.lang.String;@1de5f0ef),Annotation([Ljava.lang.String;@376a312c,[Ljava.lang.String;@28d6290,[Ledu.cmu.lti.nlp.amr.Entity;@6ca0256d))
AMR:
(巡 / 巡视-01, direction, 过 / 过-01)
(巡 / 巡视-01, manner, 我2 / 我)
(巡 / 巡视-01, manner, 还 / 还)
(过 / 过-01, direction, 我 / 我)
(过 / 过-01, snt1, 王 / 王国)

Decoded in 12,581 microseconds
Sentence: “ 我 很 老 了 ，

Spans:
Span 2-3:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  老 => 老

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  老 => 老-01

Incorrect span: 老 => 老
Missing span: 老 => 老-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	dep	_	_
4	老	_	NR	NR	_	0	root	_	_
5	了	_	VV	VV	_	4	conj	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x6 / 老-01, arg0, x8 / 我)
(x6 / 老-01, degree, x7 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),老,老,false), Span(2,3,List(1),很,很,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 很, 0 -> 老),Map(我 -> 我, 很 -> 很, 老 -> 老))),[Ljava.lang.String;@5ef0d29e,Annotation([Ljava.lang.String;@38f57b3d,[Ljava.lang.String;@51850751,[Ljava.lang.String;@3ce3db41),Annotation([Ljava.lang.String;@64df9a61,[Ljava.lang.String;@77602954,[Ledu.cmu.lti.nlp.amr.Dependency;@e260766),Annotation([Ljava.lang.String;@2c3dec30,[Ljava.lang.String;@34a97744,[Ljava.lang.String;@4275c20c),Annotation([Ljava.lang.String;@7c56e013,[Ljava.lang.String;@3fc9dfc5,[Ledu.cmu.lti.nlp.amr.Entity;@40258c2f))
AMR:
(老 / 老, degree, 很 / 很)
(老 / 老, poss, 我 / 我)

Decoded in 4,335 microseconds
Sentence: 我 这 地方 又 小 ， 没有 放 銮驾 的 地方 ，

Spans:
Span 3-4:  又 => 又
Span 10-11:  地方 => 地方
Span 2-3:  地方 => 地方
Span 4-5:  小 => 小
Span 0-1:  我 => 我
Span 7-8:  放 => 放-03
Span 1-2:  这 => 这
Span 8-9:  銮驾 => 銮驾

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 2-3:  地方 => 地方
Oracle Span 10-11:  地方 => 地方
Oracle Span 4-5:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  放 => 放-03
Oracle Span 1-2:  这 => 这
Oracle Span 8-9:  銮驾 => 銮驾

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	这	_	DT	DT	_	3	det	_	_
3	地方	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	小	_	VA	VA	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	没有	_	VE	VE	_	5	dep	_	_
8	放	_	VV	VV	_	11	rcmod	_	_
9	銮驾	_	NN	NN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x34 / 小-01, arg0, x36 / 地方)
(x34 / 小-01, manner, x35 / 又)
(x36 / 地方, mod, x37 / 这)
(x36 / 地方, poss, x38 / 我)
(x39 / 放-03, arg1, x40 / 銮驾)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),地方,地方,false), Span(8,9,List(1),銮驾,銮驾,false), Span(7,8,List(2),放,放-03,false), Span(4,5,List(3),小,小,false), Span(3,4,List(4),又,又,false), Span(2,3,List(5),地方,地方,false), Span(1,2,List(6),这,这,false), Span(0,1,List(7),我,我,false)),Map(2 -> 放-03, 5 -> 地方, 7 -> 我, 1 -> 銮驾, 4 -> 又, 6 -> 这, 0 -> 地方, 3 -> 小),Map(又 -> 又, 地2 -> 地方, 我 -> 我, 这 -> 这, 放 -> 放-03, 小 -> 小, 地 -> 地方, 銮 -> 銮驾))),[Ljava.lang.String;@2cac4385,Annotation([Ljava.lang.String;@6731787b,[Ljava.lang.String;@16f7b4af,[Ljava.lang.String;@7adf16aa),Annotation([Ljava.lang.String;@34a1d21f,[Ljava.lang.String;@58bf8650,[Ledu.cmu.lti.nlp.amr.Dependency;@73c60324),Annotation([Ljava.lang.String;@71ae31b0,[Ljava.lang.String;@4ba534b0,[Ljava.lang.String;@6f0ca692),Annotation([Ljava.lang.String;@2c104774,[Ljava.lang.String;@2cb3d0f7,[Ledu.cmu.lti.nlp.amr.Entity;@4e517165))
AMR:
(地 / 地方, ARG4, 銮 / 銮驾)
(地 / 地方, mod, 这 / 这)
(地 / 地方, poss, 我 / 我)
(地2 / 地方, mod, 这 / 这)
(小 / 小, domain, 地 / 地方)
(小 / 小, manner, 又 / 又)
(放 / 放-03, quant, 銮 / 銮驾)

Decoded in 19,669 microseconds
Sentence: 另外 ， 一 走路 我 就 累 。

Spans:
Span 0-1:  另外 => 另外
Span 5-6:  就 => 就-01
Span 4-5:  我 => 我
Span 6-7:  累 => 累-02
Span 3-4:  走路 => 走路-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  就 => 就
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  累 => 累-02
Oracle Span 3-4:  走路 => 走路-01

Incorrect span: 就 => 就-01
Extra span: 另外 => 另外
Missing span: 就 => 就
Dependencies:
1	另外	_	AD	AD	_	7	advmod	_	_
2	,	_	PU	PU	_	7	punct	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	走路	_	NN	NN	_	7	nsubj	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	累	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x22 / 走路-01, arg0, x23 / 我)
(x24 / 累-02, manner, x25 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),累,累-02,false), Span(5,6,List(1),就,就-01,false), Span(4,5,List(2),我,我,false), Span(3,4,List(3),走路,走路-01,false), Span(0,1,List(4),另外,另外,false)),Map(2 -> 我, 1 -> 就-01, 4 -> 另外, 0 -> 累-02, 3 -> 走路-01),Map(就 -> 就-01, 另 -> 另外, 我 -> 我, 走 -> 走路-01, 累 -> 累-02))),[Ljava.lang.String;@44e3760b,Annotation([Ljava.lang.String;@6a66a204,[Ljava.lang.String;@5860f3d7,[Ljava.lang.String;@1d7f7be7),Annotation([Ljava.lang.String;@42f3156d,[Ljava.lang.String;@1ddae9b5,[Ledu.cmu.lti.nlp.amr.Dependency;@427b5f92),Annotation([Ljava.lang.String;@24bdb479,[Ljava.lang.String;@7e3f95fe,[Ljava.lang.String;@34625ccd),Annotation([Ljava.lang.String;@2c7d121c,[Ljava.lang.String;@65aa6596,[Ledu.cmu.lti.nlp.amr.Entity;@67389cb8))
AMR:
(累 / 累-02, manner, 另 / 另外)
(累 / 累-02, manner, 就 / 就-01)
(走 / 走路-01, ARG0, 就 / 就-01)
(走 / 走路-01, ARG4, 我 / 我)

Decoded in 9,737 microseconds
Sentence: “ 噢 ！ 可是 我 已经 看 过 了 。 ” 小 王子 说道 ， 并 探身 朝 星球 的 那 一 侧 看 了 看 。

Spans:
Span 1-2:  噢 => 噢
Span 11-12:  小 => 小
Span 5-6:  已经 => 已经
Span 15-16:  并 => 并
Span 4-5:  我 => 我
Span 16-17:  探身 => 探身
Span 18-19:  星球 => 星球
Span 12-13:  王子 => 王子
Span 25-26:  看 => 看-10
Span 23-24:  看 => 看-10
Span 6-7:  看 => 看-10
Span 13-14:  说道 => 说道
Span 7-8:  过 => 过-01
Span 20-21:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  小 => 小-01
Oracle Span 5-6:  已经 => 已经
Oracle Span 4-5:  我 => 我
Oracle Span 16-17:  探身 => 探身
Oracle Span 18-19:  星球 => 星球
Oracle Span 12-13:  王子 => 王子
Oracle Span 6-7:  看 => 看-02
Oracle Span 23-24:  看 => 看-02
Oracle Span 13-14:  说道 => 说道-01

Extra span: 看 => 看-10
Incorrect span: 看 => 看-10
Extra span: 那 => 那
Extra span: 并 => 并
Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Extra span: 过 => 过-01
Incorrect span: 看 => 看-10
Extra span: 噢 => 噢
Missing span: 说道 => 说道-01
Missing span: 看 => 看-02
Missing span: 小 => 小-01
Missing span: 看 => 看-02
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	噢	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	可是	_	AD	AD	_	7	advmod	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	已经	_	AD	AD	_	7	advmod	_	_
7	看	_	VV	VV	_	2	dep	_	_
8	过	_	VV	VV	_	7	rcomp	_	_
9	了	_	AS	AS	_	7	asp	_	_
10	。	_	PU	PU	_	7	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	说道	_	VV	VV	_	7	conj	_	_
15	,	_	PU	PU	_	7	punct	_	_
16	并	_	CC	CC	_	7	cc	_	_
17	探身	_	NN	NN	_	24	nsubj	_	_
18	朝	_	P	P	_	24	prep	_	_
19	星球	_	NN	NN	_	21	dep	_	_
20	的	_	DEG	DEG	_	19	assm	_	_
21	那	_	DT	DT	_	23	lobj	_	_
22	一	_	CD	CD	_	21	dep	_	_
23	侧	_	LC	LC	_	18	plmod	_	_
24	看	_	VV	VV	_	7	dep	_	_
25	了	_	AS	AS	_	24	asp	_	_
26	看	_	VV	VV	_	24	dep	_	_
27	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 看-02, arg0, x14 / 我)
(x12 / 看-02, time, x13 / 已经)
(x17 / 看-02, manner, x21 / 探身)
(x8 / 说道-01, arg0, x9 / 王子)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),看,看-10,false), Span(23,24,List(1),看,看-10,false), Span(20,21,List(2),那,那,false), Span(18,19,List(3),星球,星球,false), Span(16,17,List(4),探身,探身,false), Span(15,16,List(5),并,并,false), Span(13,14,List(6),说道,说道,false), Span(12,13,List(7),王子,王子,false), Span(11,12,List(8),小,小,false), Span(7,8,List(9),过,过-01,false), Span(6,7,List(10),看,看-10,false), Span(5,6,List(11),已经,已经,false), Span(4,5,List(12),我,我,false), Span(1,2,List(13),噢,噢,false)),Map(2 -> 那, 5 -> 并, 12 -> 我, 8 -> 小, 7 -> 王子, 1 -> 看-10, 4 -> 探身, 11 -> 已经, 6 -> 说道, 0 -> 看-10, 9 -> 过-01, 3 -> 星球, 10 -> 看-10, 13 -> 噢),Map(已 -> 已经, 星 -> 星球, 探 -> 探身, 我 -> 我, 看2 -> 看-10, 过 -> 过-01, 王 -> 王子, 噢 -> 噢, 小 -> 小, 说 -> 说道, 看 -> 看-10, 那 -> 那, 并 -> 并, 看3 -> 看-10))),[Ljava.lang.String;@419a20a6,Annotation([Ljava.lang.String;@533377b,[Ljava.lang.String;@3383649e,[Ljava.lang.String;@10fde30a),Annotation([Ljava.lang.String;@f27ea3,[Ljava.lang.String;@1ce61929,[Ledu.cmu.lti.nlp.amr.Dependency;@346939bf),Annotation([Ljava.lang.String;@4bf3798b,[Ljava.lang.String;@58670130,[Ljava.lang.String;@74e47444),Annotation([Ljava.lang.String;@9bd0fa6,[Ljava.lang.String;@59d2103b,[Ledu.cmu.lti.nlp.amr.Entity;@39dcf4b0))
AMR:
(小 / 小, topic, 过 / 过-01)
(探 / 探身, location, 星 / 星球)
(探 / 探身, mod, 并 / 并)
(星 / 星球, mod, 那 / 那)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, degree, 看2 / 看-10)
(看2 / 看-10, mod, 那 / 那)
(看3 / 看-10, degree, 噢 / 噢)
(看3 / 看-10, poss, 我 / 我)
(看3 / 看-10, time, 已 / 已经)
(说 / 说道, beneficiary, 王 / 王子)
(说 / 说道, prep-through, 并 / 并)
(过 / 过-01, degree, 看3 / 看-10)

Decoded in 58,265 microseconds
Sentence: 那边 也 没有 一 个 人 …

Spans:
Span 1-2:  也 => 也
Span 5-6:  人 => 人
Span 0-1:  那边 => 那边

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  也 => 也
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  那边 => 那边

Dependencies:
1	那边	_	NR	NR	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	7	clf	_	_
6	人	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	3	dobj	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),人,人,false), Span(1,2,List(1),也,也,false), Span(0,1,List(2),那边,那边,false)),Map(2 -> 那边, 1 -> 也, 0 -> 人),Map(也 -> 也, 那 -> 那边, 人 -> 人))),[Ljava.lang.String;@6e4de19b,Annotation([Ljava.lang.String;@f6c03cb,[Ljava.lang.String;@46f699d5,[Ljava.lang.String;@18518ccf),Annotation([Ljava.lang.String;@1991f767,[Ljava.lang.String;@768ccdc5,[Ledu.cmu.lti.nlp.amr.Dependency;@4c6daf0),Annotation([Ljava.lang.String;@10650953,[Ljava.lang.String;@659eef7,[Ljava.lang.String;@162be91c),Annotation([Ljava.lang.String;@2488b073,[Ljava.lang.String;@1c9f0a20,[Ledu.cmu.lti.nlp.amr.Entity;@55787112))
AMR:
(人 / 人, location, 那 / 那边)
(那 / 那边, day, 也 / 也)

Decoded in 4,469 microseconds
Sentence: “ 那么 你 就 审判 你 自己 呀 ！ ” 国王 回答 他 说 。

Spans:
Span 12-13:  他 => 他
Span 5-6:  你 => 你
Span 2-3:  你 => 你
Span 11-12:  回答 => 回答-01
Span 10-11:  国王 => 国王
Span 4-5:  审判 => 审判-01
Span 3-4:  就 => 就-01
Span 6-7:  自己 => 自己
Span 13-14:  说 => 说-02
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  他 => 他
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  你 => 你
Oracle Span 11-12:  回答 => 回答-01
Oracle Span 10-11:  国王 => 国王
Oracle Span 4-5:  审判 => 审判-01
Oracle Span 3-4:  就 => 就
Oracle Span 6-7:  自己 => 自己

Extra span: 说 => 说-02
Incorrect span: 就 => 就-01
Extra span: 那么 => 那么
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	那么	_	AD	AD	_	5	advmod	_	_
3	你	_	PN	PN	_	5	prep	_	_
4	就	_	AD	AD	_	3	advmod	_	_
5	审判	_	VV	VV	_	11	vmod	_	_
6	你	_	PN	PN	_	7	nsubj	_	_
7	自己	_	PN	PN	_	5	dobj	_	_
8	呀	_	SP	SP	_	7	dep	_	_
9	！	_	PU	PU	_	5	punct	_	_
10	”	_	PU	PU	_	5	punct	_	_
11	国王	_	NN	NN	_	12	nsubj	_	_
12	回答	_	VV	VV	_	0	root	_	_
13	他	_	PN	PN	_	12	dobj	_	_
14	说	_	VV	VV	_	12	conj	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 国王)
(x0 / 回答-01, arg3, x3 / 他)
(x5 / 审判-01, arg0, x6 / 你)
(x5 / 审判-01, arg1, x7 / 自己)
(x5 / 审判-01, manner, x9 / 就)
(x7 / 自己, mod, x8 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),说,说-02,false), Span(12,13,List(1),他,他,false), Span(11,12,List(2),回答,回答-01,false), Span(10,11,List(3),国王,国王,false), Span(6,7,List(4),自己,自己,false), Span(5,6,List(5),你,你,false), Span(4,5,List(6),审判,审判-01,false), Span(3,4,List(7),就,就-01,false), Span(2,3,List(8),你,你,false), Span(1,2,List(9),那么,那么,false)),Map(2 -> 回答-01, 5 -> 你, 8 -> 你, 7 -> 就-01, 1 -> 他, 4 -> 自己, 6 -> 审判-01, 9 -> 那么, 0 -> 说-02, 3 -> 国王),Map(就 -> 就-01, 自 -> 自己, 审 -> 审判-01, 你 -> 你, 他 -> 他, 国 -> 国王, 你2 -> 你, 说 -> 说-02, 那 -> 那么, 回 -> 回答-01))),[Ljava.lang.String;@1cd201a8,Annotation([Ljava.lang.String;@7db82169,[Ljava.lang.String;@1992eaf4,[Ljava.lang.String;@f74e835),Annotation([Ljava.lang.String;@3276732,[Ljava.lang.String;@3f28bd56,[Ledu.cmu.lti.nlp.amr.Dependency;@31e3250d),Annotation([Ljava.lang.String;@19fe4644,[Ljava.lang.String;@21d8bcbe,[Ljava.lang.String;@5be067de),Annotation([Ljava.lang.String;@7383eae2,[Ljava.lang.String;@18245eb0,[Ledu.cmu.lti.nlp.amr.Entity;@7c7d3c46))
AMR:
(回 / 回答-01, location, 国 / 国王)
(审 / 审判-01, manner, 就 / 就-01)
(审 / 审判-01, prep-through, 自 / 自己)
(就 / 就-01, degree, 你2 / 你)
(就 / 就-01, degree, 那 / 那么)
(自 / 自己, mod, 你 / 你)
(说 / 说-02, degree, 那 / 那么)
(说 / 说-02, direction, 他 / 他)
(说 / 说-02, example, 回 / 回答-01)

Decoded in 27,992 microseconds
Sentence: “ 这 可是 最 难 的 了 。

Spans:
Span 3-4:  最 => 最
Span 1-2:  这 => 这
Span 4-5:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  最 => 最
Oracle Span 1-2:  这 => 这
Oracle Span 4-5:  难 => 难-01

Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	这	_	PN	PN	_	7	nsubj	_	_
3	可是	_	AD	AD	_	7	advmod	_	_
4	最	_	AD	AD	_	5	advmod	_	_
5	难	_	VA	VA	_	7	nsubj	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	了	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 难-01, arg0, x11 / 这)
(x8 / 难-01, degree, x9 / 最)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),难,难-01,false), Span(3,4,List(1),最,最,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 最, 0 -> 难-01),Map(难 -> 难-01, 这 -> 这, 最 -> 最))),[Ljava.lang.String;@24fb6a80,Annotation([Ljava.lang.String;@48c35007,[Ljava.lang.String;@72a85671,[Ljava.lang.String;@6722db6e),Annotation([Ljava.lang.String;@18f20260,[Ljava.lang.String;@4ae33a11,[Ledu.cmu.lti.nlp.amr.Dependency;@7a48e6e2),Annotation([Ljava.lang.String;@b40bb6e,[Ljava.lang.String;@3a94964,[Ljava.lang.String;@5049d8b2),Annotation([Ljava.lang.String;@6d0b5baf,[Ljava.lang.String;@631e06ab,[Ledu.cmu.lti.nlp.amr.Entity;@2a3591c5))
AMR:
(最 / 最, mod, 这 / 这)
(难 / 难-01, degree, 最 / 最)

Decoded in 5,006 microseconds
Sentence: 审判 自己 比 审判 别人 要 难 得 多 啊 ！

Spans:
Span 4-5:  别人 => 别人
Span 9-10:  啊 => 啊
Span 8-9:  多 => 多
Span 3-4:  审判 => 审判-01
Span 0-1:  审判 => 审判-01
Span 7-8:  得 => 得-06
Span 1-2:  自己 => 自己
Span 5-6:  要 => 要-02
Span 6-7:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  别人 => 别人
Oracle Span 8-9:  多 => 多
Oracle Span 0-1:  审判 => 审判-01
Oracle Span 3-4:  审判 => 审判-01
Oracle Span 1-2:  自己 => 自己
Oracle Span 6-7:  难 => 难-01

Extra span: 啊 => 啊
Extra span: 得 => 得-06
Extra span: 要 => 要-02
Dependencies:
1	审判	_	NN	NN	_	9	nsubj	_	_
2	自己	_	PN	PN	_	9	nsubj	_	_
3	比	_	P	P	_	9	prep	_	_
4	审判	_	NN	NN	_	5	nn	_	_
5	别人	_	NN	NN	_	3	pobj	_	_
6	要	_	AD	AD	_	9	advmod	_	_
7	难	_	VA	VA	_	9	dep	_	_
8	得	_	DER	DER	_	9	dep	_	_
9	多	_	VA	VA	_	0	root	_	_
10	啊	_	SP	SP	_	9	dep	_	_
11	！	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 审判-01, arg1, x12 / 自己)
(x11 / 审判-01, compared-to, x14 / 审判-01)
(x14 / 审判-01, arg1, x15 / 别人)
(x9 / 难-01, arg0, x11 / 审判-01)
(x9 / 难-01, degree, x16 / 多)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),啊,啊,false), Span(8,9,List(1),多,多,false), Span(7,8,List(2),得,得-06,false), Span(6,7,List(3),难,难-01,false), Span(5,6,List(4),要,要-02,false), Span(4,5,List(5),别人,别人,false), Span(3,4,List(6),审判,审判-01,false), Span(1,2,List(7),自己,自己,false), Span(0,1,List(8),审判,审判-01,false)),Map(2 -> 得-06, 5 -> 别人, 8 -> 审判-01, 7 -> 自己, 1 -> 多, 4 -> 要-02, 6 -> 审判-01, 0 -> 啊, 3 -> 难-01),Map(啊 -> 啊, 自 -> 自己, 难 -> 难-01, 审2 -> 审判-01, 审 -> 审判-01, 别 -> 别人, 要 -> 要-02, 得 -> 得-06, 多 -> 多))),[Ljava.lang.String;@34a75079,Annotation([Ljava.lang.String;@346a361,[Ljava.lang.String;@107ed6fc,[Ljava.lang.String;@1643d68f),Annotation([Ljava.lang.String;@186978a6,[Ljava.lang.String;@2e029d61,[Ledu.cmu.lti.nlp.amr.Dependency;@482d776b),Annotation([Ljava.lang.String;@4052274f,[Ljava.lang.String;@132ddbab,[Ljava.lang.String;@297ea53a),Annotation([Ljava.lang.String;@acb0951,[Ljava.lang.String;@5bf22f18,[Ledu.cmu.lti.nlp.amr.Entity;@267f474e))
AMR:
(啊 / 啊, degree, 多 / 多)
(审2 / 审判-01, compared-to, 审 / 审判-01)
(审2 / 审判-01, prep-following, 自 / 自己)
(得 / 得-06, degree, 多 / 多)
(得 / 得-06, degree, 难 / 难-01)
(要 / 要-02, degree, 别 / 别人)
(要 / 要-02, topic, 审 / 审判-01)
(难 / 难-01, degree, 要 / 要-02)

Decoded in 22,017 microseconds
Sentence: 你 要是 能 审判 好 自己 ， 你 就 是 一 个 真正 有 才智 的 人 。 ”

Spans:
Span 16-17:  人 => 人
Span 7-8:  你 => 你
Span 0-1:  你 => 你
Span 4-5:  好 => 好-04
Span 3-4:  审判 => 审判-01
Span 8-9:  就 => 就-01
Span 14-15:  才智 => 才智
Span 9-10:  是 => 是-04
Span 13-14:  有 => 有-06
Span 12-13:  真正 => 真正
Span 2-3:  能 => 能
Span 5-6:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  人 => 人
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  好 => 好-01
Oracle Span 3-4:  审判 => 审判-01
Oracle Span 8-9:  就 => 就
Oracle Span 14-15:  才智 => 才智
Oracle Span 13-14:  有 => 有-01
Oracle Span 12-13:  真正 => 真正
Oracle Span 2-3:  能 => 能-01
Oracle Span 5-6:  自己 => 自己

Incorrect span: 有 => 有-06
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 你 => 你
Incorrect span: 好 => 好-04
Incorrect span: 能 => 能
Missing span: 能 => 能-01
Missing span: 好 => 好-01
Missing span: 就 => 就
Missing span: 有 => 有-01
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	要是	_	VV	VV	_	10	dep	_	_
3	能	_	VV	VV	_	2	ccomp	_	_
4	审判	_	NN	NN	_	3	dobj	_	_
5	好	_	VA	VA	_	2	dep	_	_
6	自己	_	PN	PN	_	10	nsubj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	你	_	PN	PN	_	10	nsubj	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	0	root	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	个	_	M	M	_	17	clf	_	_
13	真正	_	AD	AD	_	14	advmod	_	_
14	有	_	VE	VE	_	17	rcmod	_	_
15	才智	_	NN	NN	_	14	dobj	_	_
16	的	_	DEC	DEC	_	14	cpm	_	_
17	人	_	NN	NN	_	10	attr	_	_
18	。	_	PU	PU	_	10	punct	_	_
19	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x19 / 能-01, arg0, x20 / 审判-01)
(x20 / 审判-01, arg0, x21 / 你)
(x20 / 审判-01, arg1, x22 / 自己)
(x20 / 审判-01, manner, x23 / 好-01)
(x24 / 人, manner, x30 / 就)
(x25 / 有-01, arg0, x24 / 人)
(x25 / 有-01, arg1, x26 / 才智)
(x25 / 有-01, manner, x27 / 真正)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),人,人,false), Span(14,15,List(1),才智,才智,false), Span(13,14,List(2),有,有-06,false), Span(12,13,List(3),真正,真正,false), Span(9,10,List(4),是,是-04,false), Span(8,9,List(5),就,就-01,false), Span(7,8,List(6),你,你,false), Span(5,6,List(7),自己,自己,false), Span(4,5,List(8),好,好-04,false), Span(3,4,List(9),审判,审判-01,false), Span(2,3,List(10),能,能,false), Span(0,1,List(11),你,你,false)),Map(2 -> 有-06, 5 -> 就-01, 8 -> 好-04, 7 -> 自己, 1 -> 才智, 11 -> 你, 4 -> 是-04, 6 -> 你, 9 -> 审判-01, 0 -> 人, 10 -> 能, 3 -> 真正),Map(就 -> 就-01, 自 -> 自己, 才 -> 才智, 能 -> 能, 审 -> 审判-01, 你 -> 你, 你2 -> 你, 好 -> 好-04, 人 -> 人, 是 -> 是-04, 真 -> 真正, 有 -> 有-06))),[Ljava.lang.String;@7a7471ce,Annotation([Ljava.lang.String;@28276e50,[Ljava.lang.String;@62e70ea3,[Ljava.lang.String;@3efe7086),Annotation([Ljava.lang.String;@675d8c96,[Ljava.lang.String;@741b3bc3,[Ledu.cmu.lti.nlp.amr.Dependency;@2ed3b1f5),Annotation([Ljava.lang.String;@63648ee9,[Ljava.lang.String;@68d6972f,[Ljava.lang.String;@45be7cd5),Annotation([Ljava.lang.String;@7651218e,[Ljava.lang.String;@3185fa6b,[Ledu.cmu.lti.nlp.amr.Entity;@6d366c9b))
AMR:
(人 / 人, manner, 有 / 有-06)
(审 / 审判-01, accompanier, 好 / 好-04)
(审 / 审判-01, manner, 能 / 能)
(就 / 就-01, quant, 你 / 你)
(才 / 才智, manner, 有 / 有-06)
(是 / 是-04, degree, 好 / 好-04)
(是 / 是-04, manner, 就 / 就-01)
(有 / 有-06, manner, 是 / 是-04)
(有 / 有-06, manner, 真 / 真正)
(能 / 能, poss, 你2 / 你)
(自 / 自己, quant, 好 / 好-04)

Decoded in 46,766 microseconds
Sentence: “ 我 吗 ， 随便 在 什么 地方 我 都 可以 审度 自己 。

Spans:
Span 6-7:  什么 => 什么
Span 10-11:  可以 => 可以-02
Span 5-6:  在 => 在-01
Span 7-8:  地方 => 地方
Span 11-12:  审度 => 审度-01
Span 8-9:  我 => 我
Span 1-2:  我 => 我
Span 12-13:  自己 => 自己
Span 9-10:  都 => 都
Span 4-5:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  什么 => 什么
Oracle Span 10-11:  可以 => 可以-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 11-12:  审度 => 审度-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  自己 => 自己
Oracle Span 9-10:  都 => 都
Oracle Span 4-5:  随便 => 随便-01

Incorrect span: 可以 => 可以-02
Extra span: 我 => 我
Extra span: 在 => 在-01
Incorrect span: 随便 => 随便
Missing span: 可以 => 可以-01
Missing span: 随便 => 随便-01
Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	我	_	PN	PN	_	11	pccomp	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	随便	_	NR	NR	_	8	nn	_	_
6	在	_	P	P	_	8	prep	_	_
7	什么	_	PN	PN	_	6	pobj	_	_
8	地方	_	NN	NN	_	11	nsubj	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	都	_	AD	AD	_	11	advmod	_	_
11	可以	_	VV	VV	_	12	conj	_	_
12	审度	_	VV	VV	_	0	root	_	_
13	自己	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x12 / 可以-01, arg0, x13 / 审度-01)
(x12 / 可以-01, manner, x14 / 都)
(x13 / 审度-01, arg0, x15 / 我)
(x13 / 审度-01, arg1, x16 / 自己)
(x13 / 审度-01, location, x17 / 地方)
(x17 / 地方, mod, x18 / 什么)
(x17 / 地方, mod, x19 / 随便-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),自己,自己,false), Span(11,12,List(1),审度,审度-01,false), Span(10,11,List(2),可以,可以-02,false), Span(9,10,List(3),都,都,false), Span(8,9,List(4),我,我,false), Span(7,8,List(5),地方,地方,false), Span(6,7,List(6),什么,什么,false), Span(5,6,List(7),在,在-01,false), Span(4,5,List(8),随便,随便,false), Span(1,2,List(9),我,我,false)),Map(2 -> 可以-02, 5 -> 地方, 8 -> 随便, 7 -> 在-01, 1 -> 审度-01, 4 -> 我, 6 -> 什么, 9 -> 我, 0 -> 自己, 3 -> 都),Map(在 -> 在-01, 自 -> 自己, 我 -> 我, 审 -> 审度-01, 我2 -> 我, 地 -> 地方, 什 -> 什么, 都 -> 都, 随 -> 随便, 可 -> 可以-02))),[Ljava.lang.String;@5b58ed3c,Annotation([Ljava.lang.String;@24faea88,[Ljava.lang.String;@3a320ade,[Ljava.lang.String;@64beebb7),Annotation([Ljava.lang.String;@7813cb11,[Ljava.lang.String;@bcec031,[Ledu.cmu.lti.nlp.amr.Dependency;@21005f6c),Annotation([Ljava.lang.String;@32f0fba8,[Ljava.lang.String;@545de5a4,[Ljava.lang.String;@29ef6856),Annotation([Ljava.lang.String;@ab7a938,[Ljava.lang.String;@3faf2e7d,[Ledu.cmu.lti.nlp.amr.Entity;@4648ce9))
AMR:
(可 / 可以-02, manner, 都 / 都)
(在 / 在-01, manner, 随 / 随便)
(在 / 在-01, poss, 我2 / 我)
(地 / 地方, compared-to, 我 / 我)
(地 / 地方, mod, 什 / 什么)
(地 / 地方, mod, 在 / 在-01)
(审 / 审度-01, degree, 可 / 可以-02)
(审 / 审度-01, location, 地 / 地方)
(审 / 审度-01, location, 自 / 自己)

Decoded in 30,787 microseconds
Sentence: 我 没有 必要 留 在 这里 。 ”

Spans:
Span 4-5:  在 => 在-01
Span 2-3:  必要 => 必要-01
Span 0-1:  我 => 我
Span 3-4:  留 => 留-05
Span 5-6:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  必要 => 必要-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  留 => 留-01
Oracle Span 5-6:  这里 => 这里

Extra span: 在 => 在-01
Incorrect span: 留 => 留-05
Missing span: 留 => 留-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	必要	_	NN	NN	_	2	dobj	_	_
4	留	_	VV	VV	_	2	dep	_	_
5	在	_	P	P	_	4	prep	_	_
6	这里	_	PN	PN	_	5	pobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 留-01, arg0, x12 / 我)
(x11 / 留-01, arg1, x13 / 这里)
(x9 / 必要-01, arg0, x11 / 留-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),这里,这里,false), Span(4,5,List(1),在,在-01,false), Span(3,4,List(2),留,留-05,false), Span(2,3,List(3),必要,必要-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 留-05, 1 -> 在-01, 4 -> 我, 0 -> 这里, 3 -> 必要-01),Map(在 -> 在-01, 我 -> 我, 这 -> 这里, 留 -> 留-05, 必 -> 必要-01))),[Ljava.lang.String;@569bf9eb,Annotation([Ljava.lang.String;@61526469,[Ljava.lang.String;@274872f8,[Ljava.lang.String;@76ba13c),Annotation([Ljava.lang.String;@eb6449b,[Ljava.lang.String;@7c351808,[Ledu.cmu.lti.nlp.amr.Dependency;@180e6ac4),Annotation([Ljava.lang.String;@42b64ab8,[Ljava.lang.String;@7e985ce9,[Ljava.lang.String;@2a39fe6a),Annotation([Ljava.lang.String;@410ae9a3,[Ljava.lang.String;@319988b0,[Ledu.cmu.lti.nlp.amr.Entity;@d5ae57e))
AMR:
(在 / 在-01, location, 这 / 这里)
(留 / 留-05, manner, 必 / 必要-01)
(留 / 留-05, manner, 我 / 我)
(留 / 留-05, snt11, 在 / 在-01)

Decoded in 8,814 microseconds
Sentence: “ 嗯

Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@68759011,Annotation([Ljava.lang.String;@7e242b4d,[Ljava.lang.String;@305f031,[Ljava.lang.String;@592e843a),Annotation([Ljava.lang.String;@1d1f7216,[Ljava.lang.String;@423e4cbb,[Ledu.cmu.lti.nlp.amr.Dependency;@6e16b8b5),Annotation([Ljava.lang.String;@43b4fe19,[Ljava.lang.String;@25ddbbbb,[Ljava.lang.String;@1536602f),Annotation([Ljava.lang.String;@4ebea12c,[Ljava.lang.String;@2a1edad4,[Ledu.cmu.lti.nlp.amr.Entity;@6256ac4f))
AMR:


Decoded in 1,672 microseconds
Sentence: 国王 又 说 ： “ 嗯 …

Spans:
Span 1-2:  又 => 又
Span 5-6:  嗯 => 嗯
Span 0-1:  国王 => 国王
Span 2-3:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  又 => 又
Oracle Span 5-6:  嗯 => 嗯
Oracle Span 0-1:  国王 => 国王
Oracle Span 2-3:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	国王	_	NN	NN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	嗯	_	NR	NR	_	7	nsubj	_	_
7	…	_	VA	VA	_	3	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 国王)
(x0 / 说-01, arg1, x4 / 嗯)
(x0 / 说-01, manner, x2 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),嗯,嗯,false), Span(2,3,List(1),说,说-02,false), Span(1,2,List(2),又,又,false), Span(0,1,List(3),国王,国王,false)),Map(2 -> 又, 1 -> 说-02, 0 -> 嗯, 3 -> 国王),Map(又 -> 又, 国 -> 国王, 说 -> 说-02, 嗯 -> 嗯))),[Ljava.lang.String;@44c79f32,Annotation([Ljava.lang.String;@7fcbe147,[Ljava.lang.String;@235f4c10,[Ljava.lang.String;@743cb8e0),Annotation([Ljava.lang.String;@c7a975a,[Ljava.lang.String;@2c1b9e4b,[Ledu.cmu.lti.nlp.amr.Dependency;@757d6814),Annotation([Ljava.lang.String;@649725e3,[Ljava.lang.String;@3c0fae6c,[Ljava.lang.String;@4c168660),Annotation([Ljava.lang.String;@52b56a3e,[Ljava.lang.String;@fd0e5b6,[Ledu.cmu.lti.nlp.amr.Entity;@4eed46ee))
AMR:
(说 / 说-02, conj-as-if, 国 / 国王)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, prep-against, 嗯 / 嗯)

Decoded in 7,193 microseconds
Sentence: 我 想 ， 在 我 的 星球 上 有 一 只 老 耗子 。

Spans:
Span 10-11:  只 => 只
Span 3-4:  在 => 在-01
Span 1-2:  想 => 想-05
Span 4-5:  我 => 我
Span 0-1:  我 => 我
Span 6-7:  星球 => 星球
Span 8-9:  有 => 有-06
Span 11-12:  老 => 老
Span 12-13:  耗子 => 耗子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  星球 => 星球
Oracle Span 8-9:  有 => 有-03
Oracle Span 11-12:  老 => 老-01
Oracle Span 12-13:  耗子 => 耗子

Incorrect span: 老 => 老
Extra span: 只 => 只
Incorrect span: 有 => 有-06
Extra span: 在 => 在-01
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 有 => 有-03
Missing span: 老 => 老-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	在	_	P	P	_	9	prep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	plmod	_	_
9	有	_	VE	VE	_	2	ccomp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	只	_	M	M	_	13	clf	_	_
12	老	_	JJ	JJ	_	13	amod	_	_
13	耗子	_	NN	NN	_	9	dobj	_	_
14	。	_	PU	PU	_	2	punct	_	_
15	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 有-03)
(x3 / 有-03, arg0, x4 / 星球)
(x3 / 有-03, arg1, x6 / 耗子)
(x4 / 星球, poss, x5 / 我)
(x6 / 耗子, mod, x7 / 老-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),耗子,耗子,false), Span(11,12,List(1),老,老,false), Span(10,11,List(2),只,只,false), Span(8,9,List(3),有,有-06,false), Span(6,7,List(4),星球,星球,false), Span(4,5,List(5),我,我,false), Span(3,4,List(6),在,在-01,false), Span(1,2,List(7),想,想-05,false), Span(0,1,List(8),我,我,false)),Map(2 -> 只, 5 -> 我, 8 -> 我, 7 -> 想-05, 1 -> 老, 4 -> 星球, 6 -> 在-01, 0 -> 耗子, 3 -> 有-06),Map(在 -> 在-01, 星 -> 星球, 耗 -> 耗子, 我 -> 我, 我2 -> 我, 只 -> 只, 老 -> 老, 想 -> 想-05, 有 -> 有-06))),[Ljava.lang.String;@36b0fcd5,Annotation([Ljava.lang.String;@4fad94a7,[Ljava.lang.String;@475835b1,[Ljava.lang.String;@6326d182),Annotation([Ljava.lang.String;@5241cf67,[Ljava.lang.String;@716a7124,[Ledu.cmu.lti.nlp.amr.Dependency;@77192705),Annotation([Ljava.lang.String;@226642a5,[Ljava.lang.String;@7e809b79,[Ljava.lang.String;@5cc126dc),Annotation([Ljava.lang.String;@625e134e,[Ljava.lang.String;@72bd06ca,[Ledu.cmu.lti.nlp.amr.Entity;@89c10b7))
AMR:
(在 / 在-01, snt11, 我 / 我)
(想 / 想-05, manner, 我2 / 我)
(想 / 想-05, mode, 在 / 在-01)
(星 / 星球, mod, 在 / 在-01)
(星 / 星球, mode, 有 / 有-06)
(老 / 老, manner, 只 / 只)
(耗 / 耗子, mod, 有 / 有-06)
(耗 / 耗子, mod, 老 / 老)

Decoded in 23,345 microseconds
Sentence: 夜里 ， 我 听见 它 的 声音 。

Spans:
Span 3-4:  听见 => 听见-01
Span 6-7:  声音 => 声音
Span 0-1:  夜里 => 夜里
Span 4-5:  它 => 它
Span 2-3:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  听见 => 听见-01
Oracle Span 6-7:  声音 => 声音
Oracle Span 0-1:  夜里 => 夜里
Oracle Span 4-5:  它 => 它
Oracle Span 2-3:  我 => 我

Dependencies:
1	夜里	_	NN	NN	_	4	nsubj	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	听见	_	VV	VV	_	0	root	_	_
5	它	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	声音	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 听见-01, arg0, x2 / 我)
(x0 / 听见-01, arg1, x3 / 声音)
(x0 / 听见-01, time, x5 / 夜里)
(x3 / 声音, poss, x4 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),声音,声音,false), Span(4,5,List(1),它,它,false), Span(3,4,List(2),听见,听见-01,false), Span(2,3,List(3),我,我,false), Span(0,1,List(4),夜里,夜里,false)),Map(2 -> 听见-01, 1 -> 它, 4 -> 夜里, 0 -> 声音, 3 -> 我),Map(夜 -> 夜里, 我 -> 我, 它 -> 它, 听 -> 听见-01, 声 -> 声音))),[Ljava.lang.String;@5dbe30be,Annotation([Ljava.lang.String;@4fe89c24,[Ljava.lang.String;@55795845,[Ljava.lang.String;@3d08f3f5),Annotation([Ljava.lang.String;@119f1f2a,[Ljava.lang.String;@1a1da881,[Ledu.cmu.lti.nlp.amr.Dependency;@5b970f7),Annotation([Ljava.lang.String;@7fd4acee,[Ljava.lang.String;@165b8a71,[Ljava.lang.String;@6175619b),Annotation([Ljava.lang.String;@2f058b8a,[Ljava.lang.String;@756cf158,[Ledu.cmu.lti.nlp.amr.Entity;@3f2ef586))
AMR:
(听 / 听见-01, snt3, 声 / 声音)
(听 / 听见-01, time, 夜 / 夜里)
(听 / 听见-01, value, 我 / 我)
(声 / 声音, poss, 它 / 它)

Decoded in 9,698 microseconds
Sentence: 你 可以 审判 它 ，

Spans:
Span 0-1:  你 => 你
Span 1-2:  可以 => 可以-02
Span 3-4:  它 => 它
Span 2-3:  审判 => 审判-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 3-4:  它 => 它
Oracle Span 2-3:  审判 => 审判-01

Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	advmod	_	_
3	审判	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 审判-01)
(x2 / 审判-01, arg0, x3 / 你)
(x2 / 审判-01, arg1, x4 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),它,它,false), Span(2,3,List(1),审判,审判-01,false), Span(1,2,List(2),可以,可以-02,false), Span(0,1,List(3),你,你,false)),Map(2 -> 可以-02, 1 -> 审判-01, 0 -> 它, 3 -> 你),Map(审 -> 审判-01, 你 -> 你, 它 -> 它, 可 -> 可以-02))),[Ljava.lang.String;@751d3241,Annotation([Ljava.lang.String;@76c7beb3,[Ljava.lang.String;@64337702,[Ljava.lang.String;@2cf92cc7),Annotation([Ljava.lang.String;@30ea8c23,[Ljava.lang.String;@7b139eab,[Ledu.cmu.lti.nlp.amr.Dependency;@4e76dac),Annotation([Ljava.lang.String;@611df6e3,[Ljava.lang.String;@5f2f577,[Ljava.lang.String;@6273c5a4),Annotation([Ljava.lang.String;@5d465e4b,[Ljava.lang.String;@53e211ee,[Ledu.cmu.lti.nlp.amr.Entity;@41a90fa8))
AMR:
(可 / 可以-02, ARG4, 审 / 审判-01)
(审 / 审判-01, mode, 你 / 你)
(审 / 审判-01, purpose, 它 / 它)

Decoded in 6,417 microseconds
Sentence: 不时 地 判处 它 死刑 。

Spans:
Span 0-1:  不时 => 不时
Span 2-3:  判处 => 判处-01
Span 1-2:  地 => 地
Span 3-4:  它 => 它
Span 4-5:  死刑 => 死刑

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  不时 => 不时
Oracle Span 2-3:  判处 => 判处-01
Oracle Span 3-4:  它 => 它
Oracle Span 4-5:  死刑 => 死刑

Extra span: 地 => 地
Dependencies:
1	不时	_	AD	AD	_	3	advmod	_	_
2	地	_	NN	NN	_	3	prep	_	_
3	判处	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	3	dobj	_	_
5	死刑	_	NN	NN	_	3	dobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	死刑	_	NN	NN	_	3	range	_	_

Oracle:
(x0 / 判处-01, arg1, x2 / 它)
(x0 / 判处-01, arg2, x3 / 死刑)
(x0 / 判处-01, time, x4 / 不时)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),死刑,死刑,false), Span(3,4,List(1),它,它,false), Span(2,3,List(2),判处,判处-01,false), Span(1,2,List(3),地,地,false), Span(0,1,List(4),不时,不时,false)),Map(2 -> 判处-01, 1 -> 它, 4 -> 不时, 0 -> 死刑, 3 -> 地),Map(死 -> 死刑, 它 -> 它, 地 -> 地, 判 -> 判处-01, 不 -> 不时))),[Ljava.lang.String;@3d8bbcdc,Annotation([Ljava.lang.String;@52500920,[Ljava.lang.String;@117e0fe5,[Ljava.lang.String;@18a3962d),Annotation([Ljava.lang.String;@78aea4b9,[Ljava.lang.String;@2a65bb85,[Ledu.cmu.lti.nlp.amr.Dependency;@4b85880b),Annotation([Ljava.lang.String;@4f936da8,[Ljava.lang.String;@4215838f,[Ljava.lang.String;@452ba1db),Annotation([Ljava.lang.String;@2289aca5,[Ljava.lang.String;@76a36b71,[Ledu.cmu.lti.nlp.amr.Entity;@184497d1))
AMR:
(判 / 判处-01, op, 死 / 死刑)
(判 / 判处-01, subset, 它 / 它)
(判 / 判处-01, time, 不 / 不时)
(判 / 判处-01, time, 地 / 地)

Decoded in 8,223 microseconds
Sentence: 因此 它 的 生命 取决 于 你 的 判决 。

Spans:
Span 6-7:  你 => 你
Span 8-9:  判决 => 判决-01
Span 4-5:  取决 => 取决-01
Span 1-2:  它 => 它
Span 3-4:  生命 => 生命

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 8-9:  判决 => 判决-01
Oracle Span 4-5:  取决 => 取决-01
Oracle Span 1-2:  它 => 它
Oracle Span 3-4:  生命 => 生命

Dependencies:
1	因此	_	AD	AD	_	5	advmod	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	生命	_	NN	NN	_	5	nsubj	_	_
5	取决	_	VV	VV	_	0	root	_	_
6	于	_	P	P	_	5	prep	_	_
7	你	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	判决	_	NN	NN	_	6	pobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 取决-01, arg0, x3 / 判决-01)
(x2 / 取决-01, arg1, x7 / 生命)
(x3 / 判决-01, poss, x4 / 你)
(x7 / 生命, poss, x8 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),判决,判决-01,false), Span(6,7,List(1),你,你,false), Span(4,5,List(2),取决,取决-01,false), Span(3,4,List(3),生命,生命,false), Span(1,2,List(4),它,它,false)),Map(2 -> 取决-01, 1 -> 你, 4 -> 它, 0 -> 判决-01, 3 -> 生命),Map(生 -> 生命, 你 -> 你, 它 -> 它, 取 -> 取决-01, 判 -> 判决-01))),[Ljava.lang.String;@f9d87b,Annotation([Ljava.lang.String;@6ffab045,[Ljava.lang.String;@26fb628,[Ljava.lang.String;@3e2943ab),Annotation([Ljava.lang.String;@70dd7e15,[Ljava.lang.String;@4a9f80d3,[Ledu.cmu.lti.nlp.amr.Dependency;@35beb15e),Annotation([Ljava.lang.String;@41fe9859,[Ljava.lang.String;@5ac86ba5,[Ljava.lang.String;@6c67e137),Annotation([Ljava.lang.String;@2c9399a4,[Ljava.lang.String;@191ae03f,[Ledu.cmu.lti.nlp.amr.Entity;@9635fa))
AMR:
(判 / 判决-01, poss, 你 / 你)
(取 / 取决-01, ARG1, 判 / 判决-01)
(它 / 它, ARG3, 取 / 取决-01)
(生 / 生命, poss, 它 / 它)

Decoded in 10,572 microseconds
Sentence: 可是 ， 你 要 有 节制 地 使用 这 只 耗子 ， 每 次 判刑 后 都 要 赦免 它 ，

Spans:
Span 2-3:  你 => 你
Span 7-8:  使用 => 使用-01
Span 14-15:  判刑 => 判刑-01
Span 9-10:  只 => 只
Span 15-16:  后 => 后
Span 6-7:  地 => 地
Span 19-20:  它 => 它
Span 4-5:  有 => 有-06
Span 12-13:  每 => 每
Span 10-11:  耗子 => 耗子
Span 5-6:  节制 => 节制-01
Span 17-18:  要 => 要-02
Span 3-4:  要 => 要-02
Span 18-19:  赦免 => 赦免-01
Span 8-9:  这 => 这
Span 16-17:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 7-8:  使用 => 使用-01
Oracle Span 14-15:  判刑 => 判刑-01
Oracle Span 15-16:  后 => 后
Oracle Span 4-5:  有 => 有-04
Oracle Span 10-11:  耗子 => 耗子
Oracle Span 5-6:  节制 => 节制-01
Oracle Span 3-4:  要 => 要-03
Oracle Span 17-18:  要 => 要-03
Oracle Span 18-19:  赦免 => 赦免-01
Oracle Span 8-9:  这 => 这
Oracle Span 16-17:  都 => 都

Extra span: 它 => 它
Incorrect span: 要 => 要-02
Extra span: 每 => 每
Extra span: 只 => 只
Extra span: 地 => 地
Incorrect span: 有 => 有-06
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 有 => 有-04
Missing span: 要 => 要-03
Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	要	_	VV	VV	_	8	mmod	_	_
5	有	_	VE	VE	_	8	dvpmod	_	_
6	节制	_	NN	NN	_	5	dobj	_	_
7	地	_	DEV	DEV	_	5	dvpm	_	_
8	使用	_	VV	VV	_	0	root	_	_
9	这	_	DT	DT	_	11	det	_	_
10	只	_	M	M	_	9	clf	_	_
11	耗子	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	每	_	DT	DT	_	15	det	_	_
14	次	_	M	M	_	13	clf	_	_
15	判刑	_	NN	NN	_	16	lobj	_	_
16	后	_	LC	LC	_	19	loc	_	_
17	都	_	AD	AD	_	19	advmod	_	_
18	要	_	VV	VV	_	19	mmod	_	_
19	赦免	_	VV	VV	_	8	conj	_	_
20	它	_	PN	PN	_	19	dobj	_	_
21	,	_	PU	PU	_	19	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 有-04)
(x12 / 有-04, arg0, x13 / 节制-01)
(x13 / 节制-01, arg0, x14 / 你)
(x13 / 节制-01, arg1, x15 / 使用-01)
(x15 / 使用-01, arg1, x17 / 耗子)
(x17 / 耗子, mod, x18 / 这)
(x40 / 要-03, arg0, x41 / 赦免-01)
(x40 / 要-03, manner, x44 / 都)
(x41 / 赦免-01, time, x45 / 后)
(x45 / 后, arg0, x46 / 判刑-01)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),它,它,false), Span(18,19,List(1),赦免,赦免-01,false), Span(17,18,List(2),要,要-02,false), Span(16,17,List(3),都,都,false), Span(15,16,List(4),后,后,false), Span(14,15,List(5),判刑,判刑-01,false), Span(12,13,List(6),每,每,false), Span(10,11,List(7),耗子,耗子,false), Span(9,10,List(8),只,只,false), Span(8,9,List(9),这,这,false), Span(7,8,List(10),使用,使用-01,false), Span(6,7,List(11),地,地,false), Span(5,6,List(12),节制,节制-01,false), Span(4,5,List(13),有,有-06,false), Span(3,4,List(14),要,要-02,false), Span(2,3,List(15),你,你,false)),Map(2 -> 要-02, 5 -> 判刑-01, 12 -> 节制-01, 15 -> 你, 8 -> 只, 7 -> 耗子, 1 -> 赦免-01, 4 -> 后, 11 -> 地, 14 -> 要-02, 6 -> 每, 0 -> 它, 9 -> 这, 3 -> 都, 10 -> 使用-01, 13 -> 有-06),Map(节 -> 节制-01, 耗 -> 耗子, 要 -> 要-02, 这 -> 这, 你 -> 你, 它 -> 它, 每 -> 每, 判 -> 判刑-01, 地 -> 地, 要2 -> 要-02, 后 -> 后, 只 -> 只, 都 -> 都, 使 -> 使用-01, 赦 -> 赦免-01, 有 -> 有-06))),[Ljava.lang.String;@53ab0286,Annotation([Ljava.lang.String;@63c5efee,[Ljava.lang.String;@2d10e0b1,[Ljava.lang.String;@1c98290c),Annotation([Ljava.lang.String;@172ca72b,[Ljava.lang.String;@5bda80bf,[Ledu.cmu.lti.nlp.amr.Dependency;@71e5f61d),Annotation([Ljava.lang.String;@2ce86164,[Ljava.lang.String;@5e8f9e2d,[Ljava.lang.String;@51df223b),Annotation([Ljava.lang.String;@fd46303,[Ljava.lang.String;@60d8c0dc,[Ledu.cmu.lti.nlp.amr.Entity;@4204541c))
AMR:
(使 / 使用-01, ARG1, 地 / 地)
(使 / 使用-01, snt3, 耗 / 耗子)
(判 / 判刑-01, ARG4, 每 / 每)
(只 / 只, mod, 这 / 这)
(后 / 后, ARG4, 判 / 判刑-01)
(它 / 它, domain, 使 / 使用-01)
(有 / 有-06, year, 节 / 节制-01)
(耗 / 耗子, frequency, 只 / 只)
(节 / 节制-01, ARG1, 地 / 地)
(节 / 节制-01, time, 你 / 你)
(要 / 要-02, manner, 都 / 都)
(要 / 要-02, op, 赦 / 赦免-01)
(要2 / 要-02, ARG0, 有 / 有-06)
(赦 / 赦免-01, purpose, 它 / 它)
(赦 / 赦免-01, time, 后 / 后)

Decoded in 76,071 microseconds
Sentence: 因为 只有 这 一 只 耗子 。 ”

Spans:
Span 4-5:  只 => 只
Span 1-2:  只有 => 只有-01
Span 5-6:  耗子 => 耗子
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  只有 => 只有-01
Oracle Span 5-6:  耗子 => 耗子
Oracle Span 2-3:  这 => 这

Extra span: 只 => 只
Dependencies:
1	因为	_	CS	CS	_	2	advmod	_	_
2	只有	_	VV	VV	_	0	root	_	_
3	这	_	DT	DT	_	6	det	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	只	_	M	M	_	3	dep	_	_
6	耗子	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 耗子, mod, x12 / 这)
(x9 / 只有-01, arg0, x10 / 耗子)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),耗子,耗子,false), Span(4,5,List(1),只,只,false), Span(2,3,List(2),这,这,false), Span(1,2,List(3),只有,只有-01,false)),Map(2 -> 这, 1 -> 只, 0 -> 耗子, 3 -> 只有-01),Map(耗 -> 耗子, 这 -> 这, 只2 -> 只有-01, 只 -> 只))),[Ljava.lang.String;@6a62689d,Annotation([Ljava.lang.String;@4602c2a9,[Ljava.lang.String;@60fa3495,[Ljava.lang.String;@3e2822),Annotation([Ljava.lang.String;@79e18e38,[Ljava.lang.String;@29a60c27,[Ledu.cmu.lti.nlp.amr.Dependency;@1849db1a),Annotation([Ljava.lang.String;@69c79f09,[Ljava.lang.String;@1ca25c47,[Ljava.lang.String;@5fcacc0),Annotation([Ljava.lang.String;@533b266e,[Ljava.lang.String;@6d1d4d7,[Ledu.cmu.lti.nlp.amr.Entity;@89ff02e))
AMR:
(只2 / 只有-01, prep-as, 耗 / 耗子)
(耗 / 耗子, mod, 只 / 只)
(耗 / 耗子, mod, 这 / 这)

Decoded in 6,750 microseconds
Sentence: “ 可是 我 不 愿 判 死刑 ， ” 小 王子 回答 道 。

Spans:
Span 3-4:  不 => 不
Span 5-6:  判 => 判-01
Span 11-12:  回答 => 回答-01
Span 9-10:  小 => 小
Span 4-5:  愿 => 愿-01
Span 2-3:  我 => 我
Span 6-7:  死刑 => 死刑
Span 10-11:  王子 => 王子
Span 12-13:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  判 => 判-01
Oracle Span 11-12:  回答 => 回答-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 4-5:  愿 => 愿-01
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  死刑 => 死刑
Oracle Span 10-11:  王子 => 王子

Extra span: 道 => 道-01
Incorrect span: 小 => 小
Extra span: 不 => 不
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	可是	_	AD	AD	_	6	advmod	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	愿	_	VV	VV	_	6	mmod	_	_
6	判	_	VV	VV	_	0	root	_	_
7	死刑	_	NN	NN	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	回答	_	VV	VV	_	6	conj	_	_
13	道	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 愿-01, arg0, x7 / 我)
(x5 / 愿-01, arg1, x8 / 判-01)
(x8 / 判-01, arg3, x10 / 死刑)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),道,道-01,false), Span(11,12,List(1),回答,回答-01,false), Span(10,11,List(2),王子,王子,false), Span(9,10,List(3),小,小,false), Span(6,7,List(4),死刑,死刑,false), Span(5,6,List(5),判,判-01,false), Span(4,5,List(6),愿,愿-01,false), Span(3,4,List(7),不,不,false), Span(2,3,List(8),我,我,false)),Map(2 -> 王子, 5 -> 判-01, 8 -> 我, 7 -> 不, 1 -> 回答-01, 4 -> 死刑, 6 -> 愿-01, 0 -> 道-01, 3 -> 小),Map(我 -> 我, 死 -> 死刑, 王 -> 王子, 愿 -> 愿-01, 判 -> 判-01, 小 -> 小, 不 -> 不, 道 -> 道-01, 回 -> 回答-01))),[Ljava.lang.String;@6865c751,Annotation([Ljava.lang.String;@62679465,[Ljava.lang.String;@6a988392,[Ljava.lang.String;@1d71006f),Annotation([Ljava.lang.String;@5b6813df,[Ljava.lang.String;@5f2606b,[Ledu.cmu.lti.nlp.amr.Dependency;@2b58f754),Annotation([Ljava.lang.String;@3ebff828,[Ljava.lang.String;@2552f2cb,[Ljava.lang.String;@33352f32),Annotation([Ljava.lang.String;@5f3b9c57,[Ljava.lang.String;@1e044120,[Ledu.cmu.lti.nlp.amr.Entity;@2cf23c81))
AMR:
(不 / 不, poss, 我 / 我)
(判 / 判-01, prep-through, 死 / 死刑)
(回 / 回答-01, ARG1, 王 / 王子)
(愿 / 愿-01, manner, 不 / 不)
(愿 / 愿-01, purpose, 判 / 判-01)
(王 / 王子, mod, 小 / 小)
(道 / 道-01, degree, 判 / 判-01)
(道 / 道-01, degree, 回 / 回答-01)

Decoded in 29,701 microseconds
Sentence: 我 想 我 还是 应该 走 。 ”

Spans:
Span 4-5:  应该 => 应该-01
Span 1-2:  想 => 想-05
Span 2-3:  我 => 我
Span 0-1:  我 => 我
Span 5-6:  走 => 走-05
Span 3-4:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  应该 => 应该-02
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  走 => 走-07
Oracle Span 3-4:  还是 => 还是

Incorrect span: 走 => 走-05
Incorrect span: 应该 => 应该-01
Extra span: 我 => 我
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 应该 => 应该-02
Missing span: 走 => 走-07
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	还是	_	AD	AD	_	6	advmod	_	_
5	应该	_	VV	VV	_	6	dep	_	_
6	走	_	VV	VV	_	2	ccomp	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 应该-02, arg1, x14 / 走-07)
(x11 / 应该-02, manner, x12 / 还是)
(x9 / 想-01, arg0, x10 / 我)
(x9 / 想-01, arg1, x11 / 应该-02)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),走,走-05,false), Span(4,5,List(1),应该,应该-01,false), Span(3,4,List(2),还是,还是,false), Span(2,3,List(3),我,我,false), Span(1,2,List(4),想,想-05,false), Span(0,1,List(5),我,我,false)),Map(2 -> 还是, 5 -> 我, 1 -> 应该-01, 4 -> 想-05, 0 -> 走-05, 3 -> 我),Map(我 -> 我, 我2 -> 我, 还 -> 还是, 走 -> 走-05, 想 -> 想-05, 应 -> 应该-01))),[Ljava.lang.String;@3624da92,Annotation([Ljava.lang.String;@35fe2125,[Ljava.lang.String;@94f6bfb,[Ljava.lang.String;@34645867),Annotation([Ljava.lang.String;@2484f433,[Ljava.lang.String;@60b71e8f,[Ledu.cmu.lti.nlp.amr.Dependency;@1255b1d1),Annotation([Ljava.lang.String;@464649c,[Ljava.lang.String;@7c22d4f,[Ljava.lang.String;@5f59185e),Annotation([Ljava.lang.String;@60bdf15d,[Ljava.lang.String;@47da3952,[Ledu.cmu.lti.nlp.amr.Entity;@51e4ccb3))
AMR:
(应 / 应该-01, manner, 还 / 还是)
(想 / 想-05, manner, 我2 / 我)
(想 / 想-05, manner, 还 / 还是)
(想 / 想-05, snt11, 我 / 我)
(走 / 走-05, manner, 应 / 应该-01)

Decoded in 14,910 microseconds
Sentence: “ 不 行 。 ” 国王 说 。

Spans:
Span 1-2:  不 => 不
Span 5-6:  国王 => 国王
Span 2-3:  行 => 行-04
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  国王 => 国王
Oracle Span 2-3:  行 => 行-04
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 不 => 不
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	行	_	VV	VV	_	6	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	国王	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 国王)
(x0 / 说-01, arg1, x4 / 行-04)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),国王,国王,false), Span(2,3,List(2),行,行-04,false), Span(1,2,List(3),不,不,false)),Map(2 -> 行-04, 1 -> 国王, 0 -> 说-02, 3 -> 不),Map(不 -> 不, 国 -> 国王, 说 -> 说-02, 行 -> 行-04))),[Ljava.lang.String;@46e8a539,Annotation([Ljava.lang.String;@495083a0,[Ljava.lang.String;@5fd62371,[Ljava.lang.String;@28a0fd6c),Annotation([Ljava.lang.String;@2b62442c,[Ljava.lang.String;@66629f63,[Ledu.cmu.lti.nlp.amr.Dependency;@841e575),Annotation([Ljava.lang.String;@27a5328c,[Ljava.lang.String;@1e5f4170,[Ljava.lang.String;@6c345c5f),Annotation([Ljava.lang.String;@6b5966e1,[Ljava.lang.String;@65e61854,[Ledu.cmu.lti.nlp.amr.Entity;@1568159))
AMR:
(行 / 行-04, manner, 不 / 不)
(说 / 说-02, direction, 国 / 国王)
(说 / 说-02, purpose, 行 / 行-04)

Decoded in 7,009 microseconds
Sentence: 但是 小 王子 ， 准备 完毕 之后 ， 不 想 使 老 君主 难过 ，

Spans:
Span 8-9:  不 => 不
Span 6-7:  之后 => 之后-01
Span 10-11:  使 => 使-01
Span 4-5:  准备 => 准备-02
Span 12-13:  君主 => 君主
Span 5-6:  完毕 => 完毕-01
Span 1-2:  小 => 小
Span 9-10:  想 => 想-05
Span 2-3:  王子 => 王子
Span 11-12:  老 => 老
Span 13-14:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  之后 => 之后-01
Oracle Span 4-5:  准备 => 准备
Oracle Span 12-13:  君主 => 君主
Oracle Span 5-6:  完毕 => 完毕-01
Oracle Span 1-2:  小 => 小-01
Oracle Span 9-10:  想 => 想-02
Oracle Span 2-3:  王子 => 王子
Oracle Span 11-12:  老 => 老
Oracle Span 13-14:  难过 => 难过-01

Extra span: 使 => 使-01
Incorrect span: 想 => 想-05
Extra span: 不 => 不
Incorrect span: 准备 => 准备-02
Incorrect span: 小 => 小
Missing span: 想 => 想-02
Missing span: 准备 => 准备
Missing span: 小 => 小-01
Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	,	_	PU	PU	_	5	punct	_	_
5	准备	_	VV	VV	_	0	root	_	_
6	完毕	_	VV	VV	_	5	ccomp	_	_
7	之后	_	AD	AD	_	10	advmod	_	_
8	,	_	PU	PU	_	10	punct	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	想	_	VV	VV	_	5	conj	_	_
11	使	_	VV	VV	_	10	ccomp	_	_
12	老	_	JJ	JJ	_	13	amod	_	_
13	君主	_	NN	NN	_	11	dobj	_	_
14	难过	_	VV	VV	_	11	dep	_	_
15	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x12 / 之后-01, op, x19 / 完毕-01)
(x16 / 难过-01, arg0, x17 / 君主)
(x17 / 君主, mod, x18 / 老)
(x19 / 完毕-01, arg0, x20 / 准备)
(x3 / 想-02, arg0, x6 / 王子)
(x3 / 想-02, arg1, x16 / 难过-01)
(x3 / 想-02, time, x12 / 之后-01)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),难过,难过-01,false), Span(12,13,List(1),君主,君主,false), Span(11,12,List(2),老,老,false), Span(10,11,List(3),使,使-01,false), Span(9,10,List(4),想,想-05,false), Span(8,9,List(5),不,不,false), Span(6,7,List(6),之后,之后-01,false), Span(5,6,List(7),完毕,完毕-01,false), Span(4,5,List(8),准备,准备-02,false), Span(2,3,List(9),王子,王子,false), Span(1,2,List(10),小,小,false)),Map(2 -> 老, 5 -> 不, 8 -> 准备-02, 7 -> 完毕-01, 1 -> 君主, 4 -> 想-05, 6 -> 之后-01, 9 -> 王子, 0 -> 难过-01, 10 -> 小, 3 -> 使-01),Map(准 -> 准备-02, 难 -> 难过-01, 王 -> 王子, 君 -> 君主, 完 -> 完毕-01, 小 -> 小, 不 -> 不, 老 -> 老, 想 -> 想-05, 使 -> 使-01, 之 -> 之后-01))),[Ljava.lang.String;@4fcee388,Annotation([Ljava.lang.String;@6f80fafe,[Ljava.lang.String;@3af17be2,[Ljava.lang.String;@f9879ac),Annotation([Ljava.lang.String;@37f21974,[Ljava.lang.String;@5f4d427e,[Ledu.cmu.lti.nlp.amr.Dependency;@6e521c1e),Annotation([Ljava.lang.String;@224b4d61,[Ljava.lang.String;@5d5d9e5,[Ljava.lang.String;@303e3593),Annotation([Ljava.lang.String;@4ef27d66,[Ljava.lang.String;@362a019c,[Ledu.cmu.lti.nlp.amr.Entity;@1d9bec4d))
AMR:
(之 / 之后-01, op, 完 / 完毕-01)
(使 / 使-01, ARG6, 君 / 君主)
(使 / 使-01, degree, 不 / 不)
(君 / 君主, mod, 老 / 老)
(完 / 完毕-01, ARG0, 准 / 准备-02)
(想 / 想-05, ARG5, 难 / 难过-01)
(想 / 想-05, location, 王 / 王子)
(想 / 想-05, manner, 不 / 不)
(想 / 想-05, time, 之 / 之后-01)
(王 / 王子, mod, 小 / 小)

Decoded in 35,237 microseconds
Sentence: 说道 ： “ 如果 国王 陛下 想要 不折不扣 地 得到 服从 ， 你 可以 给 我 下 一 个 合理 的 命令 。

Spans:
Span 16-17:  下 => 下-07
Span 7-8:  不折不扣 => 不折不扣
Span 12-13:  你 => 你
Span 13-14:  可以 => 可以-02
Span 19-20:  合理 => 合理-01
Span 21-22:  命令 => 命令-01
Span 4-5:  国王 => 国王
Span 8-9:  地 => 地
Span 9-10:  得到 => 得到-01
Span 6-7:  想要 => 想要-02
Span 15-16:  我 => 我
Span 10-11:  服从 => 服从-01
Span 14-15:  给 => 给-02
Span 0-1:  说道 => 说道
Span 5-6:  陛下 => 陛下

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  下 => 下-07
Oracle Span 7-8:  不折不扣 => 不折不扣
Oracle Span 12-13:  你 => 你
Oracle Span 13-14:  可以 => 可以-01
Oracle Span 19-20:  合理 => 合理-01
Oracle Span 21-22:  命令 => 命令
Oracle Span 4-5:  国王 => 国王
Oracle Span 9-10:  得到 => 得到-01
Oracle Span 6-7:  想要 => 想要-01
Oracle Span 15-16:  我 => 我
Oracle Span 10-11:  服从 => 服从-01
Oracle Span 0-1:  说道 => 说道-01

Incorrect span: 命令 => 命令-01
Extra span: 给 => 给-02
Incorrect span: 可以 => 可以-02
Extra span: 地 => 地
Incorrect span: 想要 => 想要-02
Extra span: 陛下 => 陛下
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 想要 => 想要-01
Missing span: 可以 => 可以-01
Missing span: 命令 => 命令
Dependencies:
1	说道	_	VV	VV	_	0	root	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	1	punct	_	_
4	如果	_	CS	CS	_	10	advmod	_	_
5	国王	_	NN	NN	_	7	nn	_	_
6	陛下	_	NN	NN	_	7	nn	_	_
7	想要	_	NN	NN	_	10	nsubj	_	_
8	不折不扣	_	AD	AD	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	得到	_	VV	VV	_	17	pccomp	_	_
11	服从	_	VV	VV	_	10	comod	_	_
12	,	_	PU	PU	_	17	punct	_	_
13	你	_	PN	PN	_	17	nsubj	_	_
14	可以	_	VV	VV	_	17	mmod	_	_
15	给	_	P	P	_	17	prep	_	_
16	我	_	PN	PN	_	15	pobj	_	_
17	下	_	VV	VV	_	1	ccomp	_	_
18	一	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	22	clf	_	_
20	合理	_	VA	VA	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	命令	_	NN	NN	_	17	dobj	_	_
23	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x20 / 下-07, arg0, x21 / 你)
(x20 / 下-07, arg1, x22 / 命令)
(x20 / 下-07, beneficiary, x25 / 我)
(x22 / 命令, mod, x23 / 合理-01)
(x3 / 想要-01, arg0, x4 / 国王)
(x3 / 想要-01, arg1, x5 / 得到-01)
(x5 / 得到-01, arg1, x8 / 服从-01)
(x5 / 得到-01, manner, x6 / 不折不扣)
(x9 / 可以-01, arg0, x20 / 下-07)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),命令,命令-01,false), Span(19,20,List(1),合理,合理-01,false), Span(16,17,List(2),下,下-07,false), Span(15,16,List(3),我,我,false), Span(14,15,List(4),给,给-02,false), Span(13,14,List(5),可以,可以-02,false), Span(12,13,List(6),你,你,false), Span(10,11,List(7),服从,服从-01,false), Span(9,10,List(8),得到,得到-01,false), Span(8,9,List(9),地,地,false), Span(7,8,List(10),不折不扣,不折不扣,false), Span(6,7,List(11),想要,想要-02,false), Span(5,6,List(12),陛下,陛下,false), Span(4,5,List(13),国王,国王,false), Span(0,1,List(14),说道,说道,false)),Map(2 -> 下-07, 5 -> 可以-02, 12 -> 陛下, 8 -> 得到-01, 7 -> 服从-01, 1 -> 合理-01, 4 -> 给-02, 11 -> 想要-02, 14 -> 说道, 6 -> 你, 0 -> 命令-01, 9 -> 地, 3 -> 我, 10 -> 不折不扣, 13 -> 国王),Map(我 -> 我, 陛 -> 陛下, 得 -> 得到-01, 下 -> 下-07, 你 -> 你, 给 -> 给-02, 命 -> 命令-01, 地 -> 地, 国 -> 国王, 不 -> 不折不扣, 说 -> 说道, 服 -> 服从-01, 合 -> 合理-01, 想 -> 想要-02, 可 -> 可以-02))),[Ljava.lang.String;@5c48c0c0,Annotation([Ljava.lang.String;@10c8f62,[Ljava.lang.String;@674c583e,[Ljava.lang.String;@25f7391e),Annotation([Ljava.lang.String;@3f23a3a0,[Ljava.lang.String;@5ab14cb9,[Ledu.cmu.lti.nlp.amr.Dependency;@5fb97279),Annotation([Ljava.lang.String;@439a8f59,[Ljava.lang.String;@61861a29,[Ljava.lang.String;@31024624),Annotation([Ljava.lang.String;@25bcd0c7,[Ljava.lang.String;@32cb636e,[Ledu.cmu.lti.nlp.amr.Entity;@63cd604c))
AMR:
(下 / 下-07, beneficiary, 合 / 合理-01)
(下 / 下-07, beneficiary, 我 / 我)
(下 / 下-07, beneficiary, 给 / 给-02)
(可 / 可以-02, beneficiary, 你 / 你)
(可 / 可以-02, manner, 给 / 给-02)
(命 / 命令-01, conj-as-if, 合 / 合理-01)
(国 / 国王, mod, 陛 / 陛下)
(得 / 得到-01, manner, 不 / 不折不扣)
(得 / 得到-01, manner, 地 / 地)
(想 / 想要-02, beneficiary, 陛 / 陛下)
(想 / 想要-02, manner, 不 / 不折不扣)
(服 / 服从-01, beneficiary, 得 / 得到-01)
(服 / 服从-01, source, 可 / 可以-02)
(说 / 说道, beneficiary, 陛 / 陛下)

Decoded in 65,521 microseconds
Sentence: 比如 说 ， 你 可以 命令 我 ， 一 分钟 之内 必须 离开 。

Spans:
Span 3-4:  你 => 你
Span 9-10:  分钟 => 分钟
Span 4-5:  可以 => 可以-02
Span 5-6:  命令 => 命令-01
Span 11-12:  必须 => 必须-02
Span 6-7:  我 => 我
Span 0-1:  比如 => 比如-01
Span 12-13:  离开 => 离开-01
Span 1-2:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 9-10:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 5-6:  命令 => 命令-01
Oracle Span 11-12:  必须 => 必须-02
Oracle Span 6-7:  我 => 我
Oracle Span 0-1:  比如 => 比如-01
Oracle Span 12-13:  离开 => 离开-01

Incorrect span: 分钟 => 分钟
Incorrect span: 可以 => 可以-02
Extra span: 说 => 说-02
Missing span: 可以 => 可以-01
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Dependencies:
1	比如	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	可以	_	VV	VV	_	6	mmod	_	_
6	命令	_	VV	VV	_	2	ccomp	_	_
7	我	_	PN	PN	_	13	nsubj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	分钟	_	M	M	_	11	lobj	_	_
11	之内	_	LC	LC	_	13	loc	_	_
12	必须	_	VV	VV	_	13	dep	_	_
13	离开	_	VV	VV	_	6	ccomp	_	_
14	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x20 / 比如-01, arg0, x22 / 可以-01)
(x22 / 可以-01, arg0, x23 / 命令-01)
(x23 / 命令-01, arg0, x24 / 你)
(x23 / 命令-01, arg1, x25 / 我)
(x23 / 命令-01, arg2, x26 / 必须-02)
(x26 / 必须-02, arg0, x27 / 离开-01)
(x31 / temporal-quantity, unit, x33 / 分钟)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),离开,离开-01,false), Span(11,12,List(1),必须,必须-02,false), Span(9,10,List(2),分钟,分钟,false), Span(6,7,List(3),我,我,false), Span(5,6,List(4),命令,命令-01,false), Span(4,5,List(5),可以,可以-02,false), Span(3,4,List(6),你,你,false), Span(1,2,List(7),说,说-02,false), Span(0,1,List(8),比如,比如-01,false)),Map(2 -> 分钟, 5 -> 可以-02, 8 -> 比如-01, 7 -> 说-02, 1 -> 必须-02, 4 -> 命令-01, 6 -> 你, 0 -> 离开-01, 3 -> 我),Map(我 -> 我, 你 -> 你, 命 -> 命令-01, 说 -> 说-02, 分 -> 分钟, 离 -> 离开-01, 比 -> 比如-01, 必 -> 必须-02, 可 -> 可以-02))),[Ljava.lang.String;@40dd3977,Annotation([Ljava.lang.String;@3a4e343,[Ljava.lang.String;@6a1d204a,[Ljava.lang.String;@62dae245),Annotation([Ljava.lang.String;@4b6579e8,[Ljava.lang.String;@6fff253c,[Ledu.cmu.lti.nlp.amr.Dependency;@6c6357f9),Annotation([Ljava.lang.String;@591e58fa,[Ljava.lang.String;@3954d008,[Ljava.lang.String;@2f94c4db),Annotation([Ljava.lang.String;@593e824f,[Ljava.lang.String;@72ccd81a,[Ledu.cmu.lti.nlp.amr.Entity;@6d8792db))
AMR:
(你 / 你, ARG4, 说 / 说-02)
(可 / 可以-02, op, 命 / 命令-01)
(命 / 命令-01, direction, 必 / 必须-02)
(命 / 命令-01, direction, 我 / 我)
(必 / 必须-02, compared-to, 离 / 离开-01)
(离 / 离开-01, ARG3, 分 / 分钟)
(说 / 说-02, ARG3, 可 / 可以-02)
(说 / 说-02, manner, 比 / 比如-01)

Decoded in 27,647 microseconds
Sentence: 我 认为 这个 条件 是 成熟 的 … ”

Spans:
Span 5-6:  成熟 => 成熟-01
Span 0-1:  我 => 我
Span 4-5:  是 => 是-04
Span 3-4:  条件 => 条件
Span 1-2:  认为 => 认为-02
Span 2-3:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  成熟 => 成熟-01
Oracle Span 3-4:  条件 => 条件
Oracle Span 1-2:  认为 => 认为-02

Extra span: 是 => 是-04
Extra span: 这个 => 这个
Extra span: 我 => 我
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	认为	_	VV	VV	_	0	root	_	_
3	这个	_	NR	NR	_	5	dep	_	_
4	条件	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	2	ccomp	_	_
6	成熟	_	VA	VA	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	…	_	NN	NN	_	5	attr	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 认为-02, arg0, x9 / 条件)
(x8 / 认为-02, arg1, x12 / 成熟-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),成熟,成熟-01,false), Span(4,5,List(1),是,是-04,false), Span(3,4,List(2),条件,条件,false), Span(2,3,List(3),这个,这个,false), Span(1,2,List(4),认为,认为-02,false), Span(0,1,List(5),我,我,false)),Map(2 -> 条件, 5 -> 我, 1 -> 是-04, 4 -> 认为-02, 0 -> 成熟-01, 3 -> 这个),Map(我 -> 我, 这 -> 这个, 认 -> 认为-02, 条 -> 条件, 成 -> 成熟-01, 是 -> 是-04))),[Ljava.lang.String;@64bc21ac,Annotation([Ljava.lang.String;@493dfb8e,[Ljava.lang.String;@5d25e6bb,[Ljava.lang.String;@ce5a68e),Annotation([Ljava.lang.String;@9d157ff,[Ljava.lang.String;@2f162cc0,[Ledu.cmu.lti.nlp.amr.Dependency;@5df417a7),Annotation([Ljava.lang.String;@7c041b41,[Ljava.lang.String;@7f69d591,[Ljava.lang.String;@61078690),Annotation([Ljava.lang.String;@1cb3ec38,[Ljava.lang.String;@403132fc,[Ledu.cmu.lti.nlp.amr.Entity;@71c5b236))
AMR:
(成 / 成熟-01, manner, 是 / 是-04)
(是 / 是-04, manner, 条 / 条件)
(认 / 认为-02, manner, 我 / 我)
(认 / 认为-02, mode, 是 / 是-04)
(认 / 认为-02, snt11, 这 / 这个)

Decoded in 11,446 microseconds
Sentence: 国王 什么 也 没有 回答 。 起初 ， 小 王子 有些 犹疑不决 ，

Spans:
Span 2-3:  也 => 也
Span 1-2:  什么 => 什么
Span 4-5:  回答 => 回答-01
Span 0-1:  国王 => 国王
Span 8-9:  小 => 小
Span 10-11:  有些 => 有些
Span 11-12:  犹疑不决 => 犹疑不决
Span 9-10:  王子 => 王子
Span 6-7:  起初 => 起初

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 0-1:  国王 => 国王
Oracle Span 8-9:  小 => 小-01
Oracle Span 10-11:  有些 => 有些
Oracle Span 11-12:  犹疑不决 => 犹疑不决
Oracle Span 9-10:  王子 => 王子
Oracle Span 6-7:  起初 => 起初

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Missing span: 小 => 小-01
Dependencies:
1	国王	_	NN	NN	_	5	nsubj	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	起初	_	NN	NN	_	12	nsubj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	有些	_	AD	AD	_	12	advmod	_	_
12	犹疑不决	_	VA	VA	_	5	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x4 / 国王)
(x2 / 回答-01, manner, x6 / 也)
(x7 / 犹疑不决, arg0, x9 / 王子)
(x7 / 犹疑不决, degree, x8 / 有些)
(x7 / 犹疑不决, time, x11 / 起初)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),犹疑不决,犹疑不决,false), Span(10,11,List(1),有些,有些,false), Span(9,10,List(2),王子,王子,false), Span(8,9,List(3),小,小,false), Span(6,7,List(4),起初,起初,false), Span(4,5,List(5),回答,回答-01,false), Span(2,3,List(6),也,也,false), Span(1,2,List(7),什么,什么,false), Span(0,1,List(8),国王,国王,false)),Map(2 -> 王子, 5 -> 回答-01, 8 -> 国王, 7 -> 什么, 1 -> 有些, 4 -> 起初, 6 -> 也, 0 -> 犹疑不决, 3 -> 小),Map(也 -> 也, 起 -> 起初, 王 -> 王子, 犹 -> 犹疑不决, 小 -> 小, 国 -> 国王, 什 -> 什么, 回 -> 回答-01, 有 -> 有些))),[Ljava.lang.String;@2cab9998,Annotation([Ljava.lang.String;@2f7a7219,[Ljava.lang.String;@669513d8,[Ljava.lang.String;@3a1d593e),Annotation([Ljava.lang.String;@4a8a60bc,[Ljava.lang.String;@361c294e,[Ledu.cmu.lti.nlp.amr.Dependency;@7859e786),Annotation([Ljava.lang.String;@285d851a,[Ljava.lang.String;@314b8f2d,[Ljava.lang.String;@664a9613),Annotation([Ljava.lang.String;@5118388b,[Ljava.lang.String;@15a902e7,[Ledu.cmu.lti.nlp.amr.Entity;@7876d598))
AMR:
(回 / 回答-01, manner, 也 / 也)
(回 / 回答-01, season, 什 / 什么)
(国 / 国王, ARG4, 什 / 什么)
(犹 / 犹疑不决, degree, 有 / 有些)
(犹 / 犹疑不决, prep-on-behalf, 回 / 回答-01)
(犹 / 犹疑不决, snt3, 王 / 王子)
(犹 / 犹疑不决, time, 起 / 起初)
(王 / 王子, mod, 小 / 小)

Decoded in 24,454 microseconds
Sentence: 随后 叹 了 口气 ， 就 离开 了 …

Spans:
Span 5-6:  就 => 就-01
Span 6-7:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  就 => 就
Oracle Span 6-7:  离开 => 离开-01

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	随后	_	AD	AD	_	2	advmod	_	_
2	叹	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	口气	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	离开	_	VV	VV	_	2	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	…	_	NN	NN	_	7	dobj	_	_

Oracle:
(x3 / 离开-01, manner, x4 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),离开,离开-01,false), Span(5,6,List(1),就,就-01,false)),Map(1 -> 就-01, 0 -> 离开-01),Map(就 -> 就-01, 离 -> 离开-01))),[Ljava.lang.String;@4a3e3e8b,Annotation([Ljava.lang.String;@5af28b27,[Ljava.lang.String;@71104a4,[Ljava.lang.String;@4985cbcb),Annotation([Ljava.lang.String;@72f46e16,[Ljava.lang.String;@3c9168dc,[Ledu.cmu.lti.nlp.amr.Dependency;@332a7fce),Annotation([Ljava.lang.String;@549621f3,[Ljava.lang.String;@54361a9,[Ljava.lang.String;@32232e55),Annotation([Ljava.lang.String;@5217f3d0,[Ljava.lang.String;@37ebc9d8,[Ledu.cmu.lti.nlp.amr.Entity;@293bb8a5))
AMR:
(离 / 离开-01, manner, 就 / 就-01)

Decoded in 3,634 microseconds
Sentence: “ 我 派 你 当 我 的 大使 。 ” 国王 匆忙 地 喊道 。

Spans:
Span 3-4:  你 => 你
Span 11-12:  匆忙 => 匆忙-01
Span 13-14:  喊道 => 喊道-01
Span 10-11:  国王 => 国王
Span 12-13:  地 => 地
Span 7-8:  大使 => 大使
Span 4-5:  当 => 当-04
Span 5-6:  我 => 我
Span 1-2:  我 => 我
Span 2-3:  派 => 派-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 11-12:  匆忙 => 匆忙-01
Oracle Span 13-14:  喊道 => 喊道-01
Oracle Span 10-11:  国王 => 国王
Oracle Span 7-8:  大使 => 大使
Oracle Span 4-5:  当 => 当-04
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  派 => 派-01

Extra span: 地 => 地
Extra span: 我 => 我
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	派	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	8	nsubj	_	_
5	当	_	P	P	_	8	nsubj	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	的	_	DEG	DEG	_	5	assm	_	_
8	大使	_	NN	NN	_	3	ccomp	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	国王	_	NN	NN	_	14	nsubj	_	_
12	匆忙	_	VA	VA	_	14	dvpmod	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	喊道	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 喊道-01, arg0, x2 / 国王)
(x0 / 喊道-01, arg1, x5 / 派-01)
(x0 / 喊道-01, manner, x3 / 匆忙-01)
(x5 / 派-01, arg0, x6 / 我)
(x5 / 派-01, arg1, x7 / 你)
(x5 / 派-01, arg2, x9 / 当-04)
(x9 / 当-04, arg1, x11 / 大使)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),喊道,喊道-01,false), Span(12,13,List(1),地,地,false), Span(11,12,List(2),匆忙,匆忙-01,false), Span(10,11,List(3),国王,国王,false), Span(7,8,List(4),大使,大使,false), Span(5,6,List(5),我,我,false), Span(4,5,List(6),当,当-04,false), Span(3,4,List(7),你,你,false), Span(2,3,List(8),派,派-01,false), Span(1,2,List(9),我,我,false)),Map(2 -> 匆忙-01, 5 -> 我, 8 -> 派-01, 7 -> 你, 1 -> 地, 4 -> 大使, 6 -> 当-04, 9 -> 我, 0 -> 喊道-01, 3 -> 国王),Map(我 -> 我, 我2 -> 我, 你 -> 你, 大 -> 大使, 地 -> 地, 派 -> 派-01, 国 -> 国王, 喊 -> 喊道-01, 当 -> 当-04, 匆 -> 匆忙-01))),[Ljava.lang.String;@2416a51,Annotation([Ljava.lang.String;@6fa590ba,[Ljava.lang.String;@6e9319f,[Ljava.lang.String;@72e34f77),Annotation([Ljava.lang.String;@7bf9b098,[Ljava.lang.String;@389adf1d,[Ledu.cmu.lti.nlp.amr.Dependency;@77307458),Annotation([Ljava.lang.String;@1fc0053e,[Ljava.lang.String;@290b1b2e,[Ljava.lang.String;@47874b25),Annotation([Ljava.lang.String;@33617539,[Ljava.lang.String;@2c177f9e,[Ledu.cmu.lti.nlp.amr.Entity;@5db4c359))
AMR:
(匆 / 匆忙-01, location, 国 / 国王)
(匆 / 匆忙-01, time, 大 / 大使)
(喊 / 喊道-01, location, 地 / 地)
(喊 / 喊道-01, manner, 匆 / 匆忙-01)
(当 / 当-04, location, 大 / 大使)
(当 / 当-04, subset, 我 / 我)
(派 / 派-01, beneficiary, 我2 / 我)
(派 / 派-01, prep-through, 你 / 你)
(派 / 派-01, purpose, 当 / 当-04)

Decoded in 27,393 microseconds
Sentence: 国王 显出 非常 有 权威 的 样子 。

Spans:
Span 0-1:  国王 => 国王
Span 1-2:  显出 => 显出-01
Span 3-4:  有 => 有-06
Span 4-5:  权威 => 权威-01
Span 6-7:  样子 => 样子
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  国王 => 国王
Oracle Span 1-2:  显出 => 显出-01
Oracle Span 3-4:  有 => 有-06
Oracle Span 4-5:  权威 => 权威-01
Oracle Span 6-7:  样子 => 样子
Oracle Span 2-3:  非常 => 非常

Dependencies:
1	国王	_	NN	NN	_	2	nsubj	_	_
2	显出	_	VV	VV	_	0	root	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	7	rcmod	_	_
5	权威	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	样子	_	NN	NN	_	2	dobj	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 显出-01, arg0, x2 / 国王)
(x0 / 显出-01, arg1, x3 / 样子)
(x3 / 样子, mod, x4 / 权威-01)
(x4 / 权威-01, degree, x7 / 非常)
(x5 / 有-06, arg1, x4 / 权威-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),样子,样子,false), Span(4,5,List(1),权威,权威-01,false), Span(3,4,List(2),有,有-06,false), Span(2,3,List(3),非常,非常,false), Span(1,2,List(4),显出,显出-01,false), Span(0,1,List(5),国王,国王,false)),Map(2 -> 有-06, 5 -> 国王, 1 -> 权威-01, 4 -> 显出-01, 0 -> 样子, 3 -> 非常),Map(权 -> 权威-01, 国 -> 国王, 非 -> 非常, 显 -> 显出-01, 样 -> 样子, 有 -> 有-06))),[Ljava.lang.String;@209775a9,Annotation([Ljava.lang.String;@18e7143f,[Ljava.lang.String;@f9b7332,[Ljava.lang.String;@74cec793),Annotation([Ljava.lang.String;@6fefce9e,[Ljava.lang.String;@4f8969b0,[Ledu.cmu.lti.nlp.amr.Dependency;@1bdf8190),Annotation([Ljava.lang.String;@192f2f27,[Ljava.lang.String;@8a589a2,[Ljava.lang.String;@c65a5ef),Annotation([Ljava.lang.String;@6b5176f2,[Ljava.lang.String;@b672aa8,[Ledu.cmu.lti.nlp.amr.Entity;@2fab4aff))
AMR:
(显 / 显出-01, manner, 国 / 国王)
(显 / 显出-01, subset, 样 / 样子)
(有 / 有-06, year, 权 / 权威-01)
(权 / 权威-01, degree, 非 / 非常)
(样 / 样子, mod, 权 / 权威-01)

Decoded in 12,227 microseconds
Sentence: 小 王子 在 旅途 中 自言自语 地 说 ： “ 这些 大人 真 奇怪 。 ”

Spans:
Span 2-3:  在 => 在-01
Span 6-7:  地 => 地
Span 11-12:  大人 => 大人
Span 13-14:  奇怪 => 奇怪-02
Span 0-1:  小 => 小
Span 3-4:  旅途 => 旅途
Span 1-2:  王子 => 王子
Span 12-13:  真 => 真
Span 5-6:  自言自语 => 自言自语
Span 7-8:  说 => 说-02
Span 10-11:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  大人 => 大人
Oracle Span 13-14:  奇怪 => 奇怪-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  旅途 => 旅途
Oracle Span 1-2:  王子 => 王子
Oracle Span 12-13:  真 => 真
Oracle Span 5-6:  自言自语 => 自言自语
Oracle Span 7-8:  说 => 说-01
Oracle Span 10-11:  这些 => 这些

Incorrect span: 奇怪 => 奇怪-02
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 奇怪 => 奇怪-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	8	nsubj	_	_
3	在	_	P	P	_	8	prep	_	_
4	旅途	_	NN	NN	_	5	lobj	_	_
5	中	_	LC	LC	_	3	plmod	_	_
6	自言自语	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	14	punct	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	大人	_	NN	NN	_	14	nsubj	_	_
13	真	_	AD	AD	_	14	advmod	_	_
14	奇怪	_	VA	VA	_	8	ccomp	_	_
15	。	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x6 / 奇怪-01)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, time, x3 / 旅途)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, arg0, x8 / 大人)
(x6 / 奇怪-01, degree, x7 / 真)
(x8 / 大人, mod, x9 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),奇怪,奇怪-02,false), Span(12,13,List(1),真,真,false), Span(11,12,List(2),大人,大人,false), Span(10,11,List(3),这些,这些,false), Span(7,8,List(4),说,说-02,false), Span(6,7,List(5),地,地,false), Span(5,6,List(6),自言自语,自言自语,false), Span(3,4,List(7),旅途,旅途,false), Span(2,3,List(8),在,在-01,false), Span(1,2,List(9),王子,王子,false), Span(0,1,List(10),小,小,false)),Map(2 -> 大人, 5 -> 地, 8 -> 在-01, 7 -> 旅途, 1 -> 真, 4 -> 说-02, 6 -> 自言自语, 9 -> 王子, 0 -> 奇怪-02, 10 -> 小, 3 -> 这些),Map(在 -> 在-01, 自 -> 自言自语, 这 -> 这些, 王 -> 王子, 旅 -> 旅途, 大 -> 大人, 小 -> 小, 地 -> 地, 说 -> 说-02, 奇 -> 奇怪-02, 真 -> 真))),[Ljava.lang.String;@ec0c838,Annotation([Ljava.lang.String;@6e46d9f4,[Ljava.lang.String;@5cc69cfe,[Ljava.lang.String;@29cfd92b),Annotation([Ljava.lang.String;@21c64522,[Ljava.lang.String;@7997b197,[Ledu.cmu.lti.nlp.amr.Dependency;@11dee337),Annotation([Ljava.lang.String;@460f76a6,[Ljava.lang.String;@55f3c410,[Ljava.lang.String;@11acdc30),Annotation([Ljava.lang.String;@770d4269,[Ljava.lang.String;@4a8ab068,[Ledu.cmu.lti.nlp.amr.Entity;@1922e6d))
AMR:
(在 / 在-01, time, 旅 / 旅途)
(在 / 在-01, value, 王 / 王子)
(地 / 地, manner, 自 / 自言自语)
(大 / 大人, mod, 这 / 这些)
(奇 / 奇怪-02, degree, 大 / 大人)
(奇 / 奇怪-02, degree, 真 / 真)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, purpose, 奇 / 奇怪-02)
(说 / 说-02, time, 旅 / 旅途)

Decoded in 32,742 microseconds
Sentence: XI 。

Spans:
Span 0-1:  XI => XI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XI => XI

Dependencies:
1	XI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XI,XI,false)),Map(0 -> XI),Map(x -> XI))),[Ljava.lang.String;@76a82f33,Annotation([Ljava.lang.String;@6bab2585,[Ljava.lang.String;@74bdc168,[Ljava.lang.String;@644c78d4),Annotation([Ljava.lang.String;@532a02d9,[Ljava.lang.String;@611f8234,[Ledu.cmu.lti.nlp.amr.Dependency;@7bb3a9fe),Annotation([Ljava.lang.String;@7cbee484,[Ljava.lang.String;@7f811d00,[Ljava.lang.String;@62923ee6),Annotation([Ljava.lang.String;@4089713,[Ljava.lang.String;@f19c9d2,[Ledu.cmu.lti.nlp.amr.Entity;@7807ac2c))
AMR:


Decoded in 1,373 microseconds
Sentence: 第二 个 行星 上 住 着 一 个 爱 虚荣 的 人 。

Spans:
Span 11-12:  人 => 人
Span 4-5:  住 => 住-01
Span 8-9:  爱 => (person :arg0-of 爱-01)
Span 9-10:  虚荣 => 虚荣-01
Span 2-3:  行星 => 行星

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 喔唷 ！

Spans:
Span 1-2:  喔唷 => 喔唷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  喔唷 => 喔唷

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	喔唷	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),喔唷,喔唷,false)),Map(0 -> 喔唷),Map(喔 -> 喔唷))),[Ljava.lang.String;@4b6166aa,Annotation([Ljava.lang.String;@a77614d,[Ljava.lang.String;@4fd4cae3,[Ljava.lang.String;@4a067c25),Annotation([Ljava.lang.String;@a1217f9,[Ljava.lang.String;@3bde62ff,[Ledu.cmu.lti.nlp.amr.Dependency;@523424b5),Annotation([Ljava.lang.String;@2baa8d82,[Ljava.lang.String;@319dead1,[Ljava.lang.String;@791cbf87),Annotation([Ljava.lang.String;@a7e2d9d,[Ljava.lang.String;@754777cd,[Ledu.cmu.lti.nlp.amr.Entity;@2b52c0d6))
AMR:


Decoded in 1,299 microseconds
Sentence: “ 喔唷 ！

Spans:
Span 1-2:  喔唷 => 喔唷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  喔唷 => 喔唷

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	喔唷	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),喔唷,喔唷,false)),Map(0 -> 喔唷),Map(喔 -> 喔唷))),[Ljava.lang.String;@372ea2bc,Annotation([Ljava.lang.String;@4cc76301,[Ljava.lang.String;@2f08c4b,[Ljava.lang.String;@3f19b8b3),Annotation([Ljava.lang.String;@7de0c6ae,[Ljava.lang.String;@a486d78,[Ledu.cmu.lti.nlp.amr.Dependency;@cdc3aae),Annotation([Ljava.lang.String;@7ef2d7a6,[Ljava.lang.String;@5dcbb60,[Ljava.lang.String;@4c36250e),Annotation([Ljava.lang.String;@21526f6c,[Ljava.lang.String;@49f5c307,[Ledu.cmu.lti.nlp.amr.Entity;@299266e2))
AMR:


Decoded in 1,289 microseconds
Sentence: 一 个 崇拜 我 的 人 来 拜访 了 ！ ” 这个 爱 虚荣 的 人 一 见到 小 王子 ， 老远 就 叫喊 起来 。

Spans:
Span 15-16:  人 => 人
Span 5-6:  人 => 人
Span 23-24:  叫喊 => 叫喊-01
Span 18-19:  小 => 小
Span 22-23:  就 => 就-01
Span 2-3:  崇拜 => 崇拜-01
Span 3-4:  我 => 我
Span 7-8:  拜访 => 拜访-01
Span 6-7:  来 => 来-06
Span 12-13:  爱 => (person :arg0-of 爱-01)
Span 19-20:  王子 => 王子
Span 21-22:  老远 => 老远
Span 13-14:  虚荣 => 虚荣-01
Span 17-18:  见到 => 见到-01
Span 11-12:  这个 => 这个

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 在 那些 爱 虚荣 的 人 眼 里 ， 别人 都 成 了 他们 的 崇拜者 。

Spans:
Span 5-6:  人 => 人
Span 13-14:  他们 => 他们
Span 9-10:  别人 => 别人
Span 0-1:  在 => 在-01
Span 15-16:  崇拜者 => 崇拜者
Span 11-12:  成 => 成-01
Span 2-3:  爱 => (person :arg0-of 爱-01)
Span 6-7:  眼 => 眼
Span 3-4:  虚荣 => 虚荣-01
Span 1-2:  那些 => 那些
Span 10-11:  都 => 都

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 你 好 ！ ” 小 王子 说道 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Incorrect span: 好 => 好-04
Missing span: 说道 => 说道-01
Missing span: 好 => 好-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	！	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x0 / 说道-01, arg1, x4 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好-01, arg0, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说道,说道,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),好,好-04,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 说道, 3 -> 好-04),Map(你 -> 你, 王 -> 王子, 小 -> 小, 好 -> 好-04, 说 -> 说道))),[Ljava.lang.String;@1601e47,Annotation([Ljava.lang.String;@3bffddff,[Ljava.lang.String;@66971f6b,[Ljava.lang.String;@50687efb),Annotation([Ljava.lang.String;@517bd097,[Ljava.lang.String;@142eef62,[Ledu.cmu.lti.nlp.amr.Dependency;@4a9cc6cb),Annotation([Ljava.lang.String;@5990e6c5,[Ljava.lang.String;@56e07a08,[Ljava.lang.String;@35d6ca49),Annotation([Ljava.lang.String;@1950e8a6,[Ljava.lang.String;@47289387,[Ledu.cmu.lti.nlp.amr.Entity;@12cd9150))
AMR:
(好 / 好-04, location, 你 / 你)
(小 / 小, degree, 好 / 好-04)
(王 / 王子, mod, 小 / 小)
(说 / 说道, beneficiary, 王 / 王子)

Decoded in 8,702 microseconds
Sentence: “ 你 的 帽子 很 奇怪 。 ”

Spans:
Span 1-2:  你 => 你
Span 5-6:  奇怪 => 奇怪-02
Span 3-4:  帽子 => 帽子
Span 4-5:  很 => 很

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  奇怪 => 奇怪-01
Oracle Span 3-4:  帽子 => 帽子
Oracle Span 4-5:  很 => 很

Incorrect span: 奇怪 => 奇怪-02
Missing span: 奇怪 => 奇怪-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	帽子	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	奇怪	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 奇怪-01, arg0, x9 / 帽子)
(x7 / 奇怪-01, degree, x8 / 很)
(x9 / 帽子, poss, x10 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),奇怪,奇怪-02,false), Span(4,5,List(1),很,很,false), Span(3,4,List(2),帽子,帽子,false), Span(1,2,List(3),你,你,false)),Map(2 -> 帽子, 1 -> 很, 0 -> 奇怪-02, 3 -> 你),Map(你 -> 你, 很 -> 很, 奇 -> 奇怪-02, 帽 -> 帽子))),[Ljava.lang.String;@114a85c2,Annotation([Ljava.lang.String;@f415a95,[Ljava.lang.String;@cf65451,[Ljava.lang.String;@724f138e),Annotation([Ljava.lang.String;@37eeec90,[Ljava.lang.String;@32fe9d0a,[Ledu.cmu.lti.nlp.amr.Dependency;@c9413d8),Annotation([Ljava.lang.String;@64da2a7,[Ljava.lang.String;@46074492,[Ljava.lang.String;@d78795),Annotation([Ljava.lang.String;@2c715e84,[Ljava.lang.String;@47428937,[Ledu.cmu.lti.nlp.amr.Entity;@3b9d6699))
AMR:
(奇 / 奇怪-02, degree, 帽 / 帽子)
(奇 / 奇怪-02, degree, 很 / 很)
(帽 / 帽子, poss, 你 / 你)

Decoded in 6,346 microseconds
Sentence: “ 这 是 为了 向 人 致意 用 的 。 ” 爱 虚荣 的 人 回答 道 ，

Spans:
Span 3-4:  为了 => 为了-01
Span 14-15:  人 => 人
Span 5-6:  人 => 人
Span 15-16:  回答 => 回答-01
Span 2-3:  是 => 是-04
Span 11-12:  爱 => (person :arg0-of 爱-01)
Span 7-8:  用 => 用
Span 6-7:  致意 => 致意-01
Span 12-13:  虚荣 => 虚荣-01
Span 1-2:  这 => 这
Span 16-17:  道 => 道-01

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 当 人们 向 我 欢呼 的 时候 ， 我 就 用 帽子 向 他们 致意 。

Spans:
Span 2-3:  人们 => 人们
Span 14-15:  他们 => 他们
Span 10-11:  就 => 就-01
Span 12-13:  帽子 => 帽子
Span 1-2:  当 => 当-04
Span 9-10:  我 => 我
Span 4-5:  我 => 我
Span 7-8:  时候 => 时候
Span 5-6:  欢呼 => 欢呼-01
Span 11-12:  用 => 用
Span 15-16:  致意 => 致意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人们 => 人们
Oracle Span 14-15:  他们 => 他们
Oracle Span 12-13:  帽子 => 帽子
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  欢呼 => 欢呼-01
Oracle Span 15-16:  致意 => 致意-01

Extra span: 用 => 用
Extra span: 就 => 就-01
Extra span: 我 => 我
Extra span: 时候 => 时候
Extra span: 当 => 当-04
Dependencies:
1	“	_	PU	PU	_	16	punct	_	_
2	当	_	P	P	_	16	prep	_	_
3	人们	_	NN	NN	_	6	nsubj	_	_
4	向	_	P	P	_	6	prep	_	_
5	我	_	PN	PN	_	4	pobj	_	_
6	欢呼	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	时候	_	NN	NN	_	2	pobj	_	_
9	,	_	PU	PU	_	16	punct	_	_
10	我	_	PN	PN	_	16	nsubj	_	_
11	就	_	AD	AD	_	16	advmod	_	_
12	用	_	P	P	_	16	prep	_	_
13	帽子	_	NN	NN	_	12	pobj	_	_
14	向	_	P	P	_	16	prep	_	_
15	他们	_	PN	PN	_	14	pobj	_	_
16	致意	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x25 / 致意-01, arg0, x26 / 我)
(x25 / 致意-01, arg1, x27 / 他们)
(x25 / 致意-01, instrument, x28 / 帽子)
(x25 / 致意-01, time, x29 / 欢呼-01)
(x29 / 欢呼-01, arg0, x30 / 人们)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),致意,致意-01,false), Span(14,15,List(1),他们,他们,false), Span(12,13,List(2),帽子,帽子,false), Span(11,12,List(3),用,用,false), Span(10,11,List(4),就,就-01,false), Span(9,10,List(5),我,我,false), Span(7,8,List(6),时候,时候,false), Span(5,6,List(7),欢呼,欢呼-01,false), Span(4,5,List(8),我,我,false), Span(2,3,List(9),人们,人们,false), Span(1,2,List(10),当,当-04,false)),Map(2 -> 帽子, 5 -> 我, 8 -> 我, 7 -> 欢呼-01, 1 -> 他们, 4 -> 就-01, 6 -> 时候, 9 -> 人们, 0 -> 致意-01, 10 -> 当-04, 3 -> 用),Map(就 -> 就-01, 欢 -> 欢呼-01, 用 -> 用, 我 -> 我, 我2 -> 我, 他 -> 他们, 致 -> 致意-01, 人 -> 人们, 时 -> 时候, 当 -> 当-04, 帽 -> 帽子))),[Ljava.lang.String;@21694e53,Annotation([Ljava.lang.String;@72b16078,[Ljava.lang.String;@22c86919,[Ljava.lang.String;@70fab835),Annotation([Ljava.lang.String;@1b0a7baf,[Ljava.lang.String;@62417a16,[Ledu.cmu.lti.nlp.amr.Dependency;@32057e6),Annotation([Ljava.lang.String;@26be6ca7,[Ljava.lang.String;@6ea1bcdc,[Ljava.lang.String;@759fad4),Annotation([Ljava.lang.String;@64712be,[Ljava.lang.String;@53499d85,[Ledu.cmu.lti.nlp.amr.Entity;@30ed9c6c))
AMR:
(人 / 人们, mod, 当 / 当-04)
(就 / 就-01, beneficiary, 我 / 我)
(帽 / 帽子, location, 用 / 用)
(当 / 当-04, purpose, 欢 / 欢呼-01)
(时 / 时候, time, 欢 / 欢呼-01)
(欢 / 欢呼-01, beneficiary, 我2 / 我)
(用 / 用, manner, 就 / 就-01)
(致 / 致意-01, degree, 他 / 他们)
(致 / 致意-01, instrument, 帽 / 帽子)
(致 / 致意-01, time, 欢 / 欢呼-01)

Decoded in 35,626 microseconds
Sentence: 可惜 ， 没有 一 个 人 经过 这里 。 ”

Spans:
Span 5-6:  人 => 人
Span 6-7:  经过 => 经过-01
Span 7-8:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  经过 => 经过-01
Oracle Span 7-8:  这里 => 这里

Dependencies:
1	可惜	_	VA	VA	_	3	dep	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	7	nsubj	_	_
7	经过	_	VV	VV	_	3	dep	_	_
8	这里	_	PN	PN	_	7	dobj	_	_
9	。	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 经过-01, arg0, x13 / 人)
(x12 / 经过-01, arg1, x15 / 这里)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),这里,这里,false), Span(6,7,List(1),经过,经过-01,false), Span(5,6,List(2),人,人,false)),Map(2 -> 人, 1 -> 经过-01, 0 -> 这里),Map(这 -> 这里, 人 -> 人, 经 -> 经过-01))),[Ljava.lang.String;@782a4fff,Annotation([Ljava.lang.String;@46c670a6,[Ljava.lang.String;@59fc684e,[Ljava.lang.String;@5ae81e1),Annotation([Ljava.lang.String;@2fd1731c,[Ljava.lang.String;@5ae76500,[Ledu.cmu.lti.nlp.amr.Dependency;@6063d80a),Annotation([Ljava.lang.String;@1133ec6e,[Ljava.lang.String;@355e34c7,[Ljava.lang.String;@54709809),Annotation([Ljava.lang.String;@2a2da905,[Ljava.lang.String;@24f360b2,[Ledu.cmu.lti.nlp.amr.Entity;@60cf80e7))
AMR:
(经 / 经过-01, prep-through, 人 / 人)
(经 / 经过-01, time, 这 / 这里)

Decoded in 5,030 microseconds
Sentence: 小 王子 不 解 其 意 。 说道 ： “ 啊 ？ 是 吗 ？ ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  其 => 其
Span 10-11:  啊 => 啊
Span 0-1:  小 => 小
Span 5-6:  意 => 意
Span 12-13:  是 => 是-04
Span 1-2:  王子 => 王子
Span 3-4:  解 => 解-02
Span 7-8:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  其 => 其
Oracle Span 10-11:  啊 => 啊
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  意 => 意
Oracle Span 12-13:  是 => 是-03
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  解 => 解-02
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 是 => 是-04
Incorrect span: 说道 => 说道
Extra span: 不 => 不
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 说道 => 说道-01
Missing span: 是 => 是-03
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	解	_	VV	VV	_	8	dep	_	_
5	其	_	PN	PN	_	6	nn	_	_
6	意	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	13	punct	_	_
11	啊	_	NN	NN	_	12	nn	_	_
12	？	_	NN	NN	_	13	top	_	_
13	是	_	VC	VC	_	8	dep	_	_
14	吗	_	SP	SP	_	13	dep	_	_
15	？	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 解-02, arg0, x4 / 王子)
(x2 / 解-02, arg1, x6 / 意)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 意, poss, x7 / 其)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),是,是-04,false), Span(10,11,List(1),啊,啊,false), Span(7,8,List(2),说道,说道,false), Span(5,6,List(3),意,意,false), Span(4,5,List(4),其,其,false), Span(3,4,List(5),解,解-02,false), Span(2,3,List(6),不,不,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 说道, 5 -> 解-02, 8 -> 小, 7 -> 王子, 1 -> 啊, 4 -> 其, 6 -> 不, 0 -> 是-04, 3 -> 意),Map(啊 -> 啊, 王 -> 王子, 意 -> 意, 小 -> 小, 不 -> 不, 解 -> 解-02, 其 -> 其, 说 -> 说道, 是 -> 是-04))),[Ljava.lang.String;@302fec27,Annotation([Ljava.lang.String;@770d0ea6,[Ljava.lang.String;@48c40605,[Ljava.lang.String;@54107f42),Annotation([Ljava.lang.String;@1b11ef33,[Ljava.lang.String;@476aac9,[Ledu.cmu.lti.nlp.amr.Dependency;@6cea706c),Annotation([Ljava.lang.String;@3bd7f8dc,[Ljava.lang.String;@2f2bf0e2,[Ljava.lang.String;@1eba372c),Annotation([Ljava.lang.String;@21ec5d87,[Ljava.lang.String;@25f9407e,[Ledu.cmu.lti.nlp.amr.Entity;@552518c3))
AMR:
(不 / 不, mod, 王 / 王子)
(啊 / 啊, purpose, 是 / 是-04)
(意 / 意, poss, 其 / 其)
(意 / 意, purpose, 是 / 是-04)
(王 / 王子, mod, 小 / 小)
(解 / 解-02, ARG6, 其 / 其)
(解 / 解-02, manner, 不 / 不)
(说 / 说道, mod, 意 / 意)

Decoded in 23,000 microseconds
Sentence: 爱 虚荣 的 人 向 小 王子 建议 道 ： “ 你 用 一 只 手 去 拍 另 一 只 手 。 ”

NER Entity: (person :name (name :op "爱"))
NER Entity: (person :name (name :op "爱"))
Spans:
Span 3-4:  人 => 人
Span 11-12:  你 => 你
Span 16-17:  去 => 去-02
Span 18-19:  另 => 另
Span 20-21:  只 => 只
Span 14-15:  只 => 只
Span 5-6:  小 => 小
Span 7-8:  建议 => 建议-01
Span 21-22:  手 => 手
Span 15-16:  手 => 手
Span 17-18:  拍 => 拍-02
Span 0-1:  爱 => (person :arg0-of 爱-01)
Span 6-7:  王子 => 王子
Span 12-13:  用 => 用
Span 1-2:  虚荣 => 虚荣-01
Span 8-9:  道 => 道-01

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 就 拍 起 巴掌 来 。

Spans:
Span 0-1:  小 => 小
Span 2-3:  就 => 就-01
Span 5-6:  巴掌 => 巴掌
Span 3-4:  拍 => 拍-02
Span 6-7:  来 => 来-06
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  就 => 就
Oracle Span 5-6:  巴掌 => 巴掌
Oracle Span 3-4:  拍 => 拍-02
Oracle Span 1-2:  王子 => 王子

Extra span: 来 => 来-06
Incorrect span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 就 => 就
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	就	_	P	P	_	6	prep	_	_
4	拍	_	NN	NN	_	5	lobj	_	_
5	起	_	LC	LC	_	3	plmod	_	_
6	巴掌	_	VV	VV	_	0	root	_	_
7	来	_	VV	VV	_	6	comod	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 拍-02, arg0, x3 / 王子)
(x0 / 拍-02, arg1, x5 / 巴掌)
(x0 / 拍-02, manner, x2 / 就)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),来,来-06,false), Span(5,6,List(1),巴掌,巴掌,false), Span(3,4,List(2),拍,拍-02,false), Span(2,3,List(3),就,就-01,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小,false)),Map(2 -> 拍-02, 5 -> 小, 1 -> 巴掌, 4 -> 王子, 0 -> 来-06, 3 -> 就-01),Map(就 -> 就-01, 来 -> 来-06, 王 -> 王子, 巴 -> 巴掌, 拍 -> 拍-02, 小 -> 小))),[Ljava.lang.String;@59aa20b3,Annotation([Ljava.lang.String;@363f6148,[Ljava.lang.String;@4b21844c,[Ljava.lang.String;@1b28f282),Annotation([Ljava.lang.String;@138fe6ec,[Ljava.lang.String;@5e77f0f4,[Ledu.cmu.lti.nlp.amr.Dependency;@19b30c92),Annotation([Ljava.lang.String;@455351c4,[Ljava.lang.String;@29876704,[Ljava.lang.String;@4816c290),Annotation([Ljava.lang.String;@4940809c,[Ljava.lang.String;@16423501,[Ledu.cmu.lti.nlp.amr.Entity;@4efcf8a))
AMR:
(巴 / 巴掌, direction, 来 / 来-06)
(拍 / 拍-02, manner, 就 / 就-01)
(来 / 来-06, ARG4, 就 / 就-01)
(王 / 王子, ARG1, 就 / 就-01)
(王 / 王子, mod, 小 / 小)

Decoded in 12,625 microseconds
Sentence: 这 位 爱 虚荣 者 就 谦逊 地 举起 帽子 向 小 王子 致意 。

Spans:
Span 8-9:  举起 => 举起-01
Span 7-8:  地 => 地
Span 11-12:  小 => 小
Span 5-6:  就 => 就-01
Span 9-10:  帽子 => 帽子
Span 2-3:  爱 => (person :arg0-of 爱-01)
Span 12-13:  王子 => 王子
Span 4-5:  者 => 者
Span 13-14:  致意 => 致意-01
Span 3-4:  虚荣 => 虚荣-01
Span 6-7:  谦逊 => 谦逊
Span 0-1:  这 => 这

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 心想 ： “ 这 比 访问 那 位 国王 有趣 。 ”

Spans:
Span 10-11:  国王 => 国王
Span 0-1:  小 => 小
Span 11-12:  有趣 => 有趣-01
Span 1-2:  王子 => 王子
Span 7-8:  访问 => 访问
Span 5-6:  这 => 这
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  国王 => 国王
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  有趣 => 有趣-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  访问 => 访问-01
Oracle Span 5-6:  这 => 这
Oracle Span 8-9:  那 => 那

Incorrect span: 访问 => 访问
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 访问 => 访问-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	心想	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	12	punct	_	_
6	这	_	PN	PN	_	12	nsubj	_	_
7	比	_	P	P	_	12	prep	_	_
8	访问	_	NN	NN	_	11	nn	_	_
9	那	_	DT	DT	_	11	det	_	_
10	位	_	M	M	_	9	clf	_	_
11	国王	_	NN	NN	_	7	pobj	_	_
12	有趣	_	VV	VV	_	3	ccomp	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 有趣-01, arg0, x12 / 这)
(x12 / 这, compared-to, x23 / 访问-01)
(x2 / 王子, mod, x3 / 小-01)
(x23 / 访问-01, arg1, x24 / 国王)
(x24 / 国王, mod, x25 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),有趣,有趣-01,false), Span(10,11,List(1),国王,国王,false), Span(8,9,List(2),那,那,false), Span(7,8,List(3),访问,访问,false), Span(5,6,List(4),这,这,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小,false)),Map(2 -> 那, 5 -> 王子, 1 -> 国王, 4 -> 这, 6 -> 小, 0 -> 有趣-01, 3 -> 访问),Map(这 -> 这, 王 -> 王子, 访 -> 访问, 小 -> 小, 国 -> 国王, 那 -> 那, 有 -> 有趣-01))),[Ljava.lang.String;@379ab47b,Annotation([Ljava.lang.String;@307765b4,[Ljava.lang.String;@4a9e6faf,[Ljava.lang.String;@2c95ac9e),Annotation([Ljava.lang.String;@4e4efc1b,[Ljava.lang.String;@459f7aa3,[Ledu.cmu.lti.nlp.amr.Dependency;@7cc586a8),Annotation([Ljava.lang.String;@7db534f2,[Ljava.lang.String;@44a2b17b,[Ljava.lang.String;@7a56812e),Annotation([Ljava.lang.String;@2a76b80a,[Ljava.lang.String;@7eb01b12,[Ledu.cmu.lti.nlp.amr.Entity;@2f4854d6))
AMR:
(国 / 国王, mod, 那 / 那)
(有 / 有趣-01, value, 国 / 国王)
(王 / 王子, mod, 小 / 小)
(访 / 访问, mod, 小 / 小)
(访 / 访问, mod, 这 / 这)
(访 / 访问, mod, 那 / 那)

Decoded in 15,979 microseconds
Sentence: 于是 他 又 拍 起 巴掌 来 。

Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 5-6:  巴掌 => 巴掌
Span 3-4:  拍 => 拍-02
Span 6-7:  来 => 来-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 5-6:  巴掌 => 巴掌
Oracle Span 3-4:  拍 => 拍-02

Extra span: 来 => 来-06
Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	拍	_	NN	NN	_	5	lobj	_	_
5	起	_	LC	LC	_	6	loc	_	_
6	巴掌	_	VV	VV	_	0	root	_	_
7	来	_	VV	VV	_	6	ccomp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 拍-02, arg0, x4 / 他)
(x2 / 拍-02, arg1, x5 / 巴掌)
(x2 / 拍-02, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),来,来-06,false), Span(5,6,List(1),巴掌,巴掌,false), Span(3,4,List(2),拍,拍-02,false), Span(2,3,List(3),又,又,false), Span(1,2,List(4),他,他,false)),Map(2 -> 拍-02, 1 -> 巴掌, 4 -> 他, 0 -> 来-06, 3 -> 又),Map(又 -> 又, 来 -> 来-06, 巴 -> 巴掌, 拍 -> 拍-02, 他 -> 他))),[Ljava.lang.String;@61d9efe0,Annotation([Ljava.lang.String;@7e70bd39,[Ljava.lang.String;@e6516e,[Ljava.lang.String;@6de54b40),Annotation([Ljava.lang.String;@43ed0ff3,[Ljava.lang.String;@388ffbc2,[Ledu.cmu.lti.nlp.amr.Dependency;@a50b09c),Annotation([Ljava.lang.String;@4da855dd,[Ljava.lang.String;@6691490c,[Ljava.lang.String;@2187fff7),Annotation([Ljava.lang.String;@2e5c7f0b,[Ljava.lang.String;@21d5c1a0,[Ledu.cmu.lti.nlp.amr.Entity;@4de025bf))
AMR:
(巴 / 巴掌, prep-along-with, 来 / 来-06)
(拍 / 拍-02, ARG5, 巴 / 巴掌)
(拍 / 拍-02, manner, 又 / 又)
(拍 / 拍-02, time, 他 / 他)

Decoded in 9,239 microseconds
Sentence: 爱 虚荣者 又 举起 帽子 来 向 他 致意 。

Spans:
Span 3-4:  举起 => 举起-01
Span 7-8:  他 => 他
Span 2-3:  又 => 又
Span 4-5:  帽子 => 帽子
Span 5-6:  来 => 来-06
Span 0-1:  爱 => (person :arg0-of 爱-01)
Span 8-9:  致意 => 致意-01

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 这样 做 了 五 分钟 ， 之后 对 这 种 单调 的 把戏 有点 厌倦 了 ，

Spans:
Span 8-9:  之后 => 之后-01
Span 3-4:  做 => 做-04
Span 6-7:  分钟 => 分钟
Span 12-13:  单调 => 单调-01
Span 16-17:  厌倦 => 厌倦-01
Span 9-10:  对 => 对-02
Span 0-1:  小 => 小
Span 14-15:  把戏 => 把戏
Span 15-16:  有点 => 有点-01
Span 1-2:  王子 => 王子
Span 11-12:  种 => 种
Span 10-11:  这 => 这
Span 2-3:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  做 => 做-01
Oracle Span 6-7:  分钟 => 分钟
Oracle Span 12-13:  单调 => 单调-01
Oracle Span 16-17:  厌倦 => 厌倦-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 14-15:  把戏 => 把戏
Oracle Span 15-16:  有点 => 有点
Oracle Span 1-2:  王子 => 王子
Oracle Span 10-11:  这 => 这
Oracle Span 2-3:  这样 => 这样

Incorrect span: 有点 => 有点-01
Extra span: 种 => 种
Extra span: 对 => 对-02
Extra span: 之后 => 之后-01
Incorrect span: 做 => 做-04
Incorrect span: 这样 => 这样-01
Incorrect span: 小 => 小
Missing span: 做 => 做-01
Missing span: 这样 => 这样
Missing span: 小 => 小-01
Missing span: 有点 => 有点
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	这样	_	AD	AD	_	4	advmod	_	_
4	做	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	五	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	4	dep	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	之后	_	AD	AD	_	17	advmod	_	_
10	对	_	P	P	_	15	assmod	_	_
11	这	_	DT	DT	_	13	det	_	_
12	种	_	M	M	_	11	clf	_	_
13	单调	_	NN	NN	_	10	pobj	_	_
14	的	_	DEG	DEG	_	10	assm	_	_
15	把戏	_	NN	NN	_	17	nsubj	_	_
16	有点	_	AD	AD	_	17	advmod	_	_
17	厌倦	_	VV	VV	_	4	conj	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x11 / 把戏, mod, x12 / 这)
(x11 / 把戏, mod, x13 / 单调-01)
(x2 / 做-01, arg0, x3 / 王子)
(x2 / 做-01, manner, x5 / 这样)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 厌倦-01, arg1, x11 / 把戏)
(x8 / 厌倦-01, degree, x9 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),厌倦,厌倦-01,false), Span(15,16,List(1),有点,有点-01,false), Span(14,15,List(2),把戏,把戏,false), Span(12,13,List(3),单调,单调-01,false), Span(11,12,List(4),种,种,false), Span(10,11,List(5),这,这,false), Span(9,10,List(6),对,对-02,false), Span(8,9,List(7),之后,之后-01,false), Span(6,7,List(8),分钟,分钟,false), Span(3,4,List(9),做,做-04,false), Span(2,3,List(10),这样,这样-01,false), Span(1,2,List(11),王子,王子,false), Span(0,1,List(12),小,小,false)),Map(2 -> 把戏, 5 -> 这, 12 -> 小, 8 -> 分钟, 7 -> 之后-01, 1 -> 有点-01, 4 -> 种, 11 -> 王子, 6 -> 对-02, 0 -> 厌倦-01, 9 -> 做-04, 3 -> 单调-01, 10 -> 这样-01),Map(厌 -> 厌倦-01, 这 -> 这, 王 -> 王子, 小 -> 小, 单 -> 单调-01, 种 -> 种, 分 -> 分钟, 这2 -> 这样-01, 把 -> 把戏, 做 -> 做-04, 对 -> 对-02, 之 -> 之后-01, 有 -> 有点-01))),[Ljava.lang.String;@1eef9aef,Annotation([Ljava.lang.String;@11389053,[Ljava.lang.String;@5db99216,[Ljava.lang.String;@3ec11999),Annotation([Ljava.lang.String;@5c1bd44c,[Ljava.lang.String;@9f46d94,[Ledu.cmu.lti.nlp.amr.Dependency;@18cc679e),Annotation([Ljava.lang.String;@2e77b8cf,[Ljava.lang.String;@2c4ca0f9,[Ljava.lang.String;@67ef029),Annotation([Ljava.lang.String;@7df587ef,[Ljava.lang.String;@6e57e95e,[Ledu.cmu.lti.nlp.amr.Entity;@2755d705))
AMR:
(做 / 做-04, ARG5, 之 / 之后-01)
(做 / 做-04, manner, 这2 / 这样-01)
(做 / 做-04, value, 王 / 王子)
(分 / 分钟, ARG4, 这2 / 这样-01)
(单 / 单调-01, ARG4, 种 / 种)
(厌 / 厌倦-01, degree, 有 / 有点-01)
(厌 / 厌倦-01, mode, 把 / 把戏)
(对 / 对-02, ARG1, 这 / 这)
(对 / 对-02, manner, 之 / 之后-01)
(把 / 把戏, mod, 单 / 单调-01)
(王 / 王子, mod, 小 / 小)
(种 / 种, mod, 这 / 这)

Decoded in 53,892 microseconds
Sentence: 说道 ： “ 要 想 叫 你 的 帽子 掉 下来 ， 该 怎么 做 呢 ？ ”

Spans:
Span 10-11:  下来 => 下来-02
Span 6-7:  你 => 你
Span 14-15:  做 => 做-04
Span 5-6:  叫 => 叫-06
Span 8-9:  帽子 => 帽子
Span 13-14:  怎么 => 怎么
Span 4-5:  想 => 想-05
Span 9-10:  掉 => 掉-01
Span 3-4:  要 => 要-02
Span 12-13:  该 => 该-01
Span 0-1:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  下来 => 下来-01
Oracle Span 6-7:  你 => 你
Oracle Span 14-15:  做 => 做-01
Oracle Span 5-6:  叫 => 叫-06
Oracle Span 8-9:  帽子 => 帽子
Oracle Span 4-5:  想 => 想-02
Oracle Span 9-10:  掉 => 掉-01
Oracle Span 3-4:  要 => 要-02
Oracle Span 12-13:  该 => 该-01
Oracle Span 0-1:  说道 => 说道-01

Incorrect span: 做 => 做-04
Extra span: 怎么 => 怎么
Incorrect span: 下来 => 下来-02
Incorrect span: 想 => 想-05
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 做 => 做-01
Missing span: 想 => 想-02
Missing span: 下来 => 下来-01
Dependencies:
1	说道	_	VV	VV	_	15	dep	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	5	punct	_	_
4	要	_	VV	VV	_	5	dep	_	_
5	想	_	VV	VV	_	1	ccomp	_	_
6	叫	_	VV	VV	_	5	ccomp	_	_
7	你	_	PN	PN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	帽子	_	NN	NN	_	10	nn	_	_
10	掉	_	NN	NN	_	6	dobj	_	_
11	下来	_	VV	VV	_	5	dep	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	该	_	DT	DT	_	15	dep	_	_
14	怎么	_	AD	AD	_	15	advmod	_	_
15	做	_	VV	VV	_	0	root	_	_
16	呢	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	15	punct	_	_
18	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg2, x12 / 该-01)
(x12 / 该-01, arg0, x13 / 做-01)
(x3 / 要-02, arg0, x4 / 想-02)
(x4 / 想-02, arg1, x5 / 叫-06)
(x5 / 叫-06, arg1, x6 / 帽子)
(x6 / 帽子, poss, x7 / 你)
(x9 / 掉-01, arg1, x6 / 帽子)
(x9 / 掉-01, direction, x11 / 下来-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),做,做-04,false), Span(13,14,List(1),怎么,怎么,false), Span(12,13,List(2),该,该-01,false), Span(10,11,List(3),下来,下来-02,false), Span(9,10,List(4),掉,掉-01,false), Span(8,9,List(5),帽子,帽子,false), Span(6,7,List(6),你,你,false), Span(5,6,List(7),叫,叫-06,false), Span(4,5,List(8),想,想-05,false), Span(3,4,List(9),要,要-02,false), Span(0,1,List(10),说道,说道,false)),Map(2 -> 该-01, 5 -> 帽子, 8 -> 想-05, 7 -> 叫-06, 1 -> 怎么, 4 -> 掉-01, 6 -> 你, 9 -> 要-02, 0 -> 做-04, 10 -> 说道, 3 -> 下来-02),Map(要 -> 要-02, 你 -> 你, 下 -> 下来-02, 叫 -> 叫-06, 怎 -> 怎么, 掉 -> 掉-01, 说 -> 说道, 该 -> 该-01, 做 -> 做-04, 想 -> 想-05, 帽 -> 帽子))),[Ljava.lang.String;@56db847e,Annotation([Ljava.lang.String;@740abb5,[Ljava.lang.String;@560cbf1a,[Ljava.lang.String;@5fe8b721),Annotation([Ljava.lang.String;@551a20d6,[Ljava.lang.String;@578524c3,[Ledu.cmu.lti.nlp.amr.Dependency;@64c2b546),Annotation([Ljava.lang.String;@7e094740,[Ljava.lang.String;@7a11c4c7,[Ljava.lang.String;@4cc547a),Annotation([Ljava.lang.String;@7555b920,[Ljava.lang.String;@4152d38d,[Ledu.cmu.lti.nlp.amr.Entity;@3591009c))
AMR:
(做 / 做-04, beneficiary, 该 / 该-01)
(做 / 做-04, manner, 怎 / 怎么)
(帽 / 帽子, poss, 你 / 你)
(想 / 想-05, manner, 叫 / 叫-06)
(想 / 想-05, manner, 帽 / 帽子)
(想 / 想-05, manner, 要 / 要-02)
(掉 / 掉-01, direction, 下 / 下来-02)
(掉 / 掉-01, manner, 帽 / 帽子)
(要 / 要-02, beneficiary, 说 / 说道)
(该 / 该-01, conj-as-if, 下 / 下来-02)

Decoded in 38,660 microseconds
Sentence: 可 这 回 爱 虚荣 者 听 不 进 他 的 话 ，

Spans:
Span 7-8:  不 => 不
Span 9-10:  他 => 他
Span 0-1:  可 => 可-01
Span 6-7:  听 => 听-02
Span 2-3:  回 => 回
Span 3-4:  爱 => (person :arg0-of 爱-01)
Span 5-6:  者 => 者
Span 4-5:  虚荣 => 虚荣-01
Span 11-12:  话 => 话-01
Span 1-2:  这 => 这

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 因为 凡是 爱 虚荣 的 人 只 听 得 进 赞美 的 话 。

Spans:
Span 5-6:  人 => 人
Span 1-2:  凡是 => 凡是
Span 6-7:  只 => 只
Span 7-8:  听 => 听-02
Span 8-9:  得 => 得-06
Span 2-3:  爱 => (person :arg0-of 爱-01)
Span 3-4:  虚荣 => 虚荣-01
Span 12-13:  话 => 话-01
Span 10-11:  赞美 => 赞美-01

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 问 小 王子 道 ： “ 你 真的 钦佩 我 吗 ？ ”

Spans:
Span 0-1:  他 => 他
Span 7-8:  你 => 你
Span 2-3:  小 => 小
Span 10-11:  我 => 我
Span 3-4:  王子 => 王子
Span 8-9:  真的 => 真的
Span 4-5:  道 => 道-01
Span 9-10:  钦佩 => 钦佩
Span 1-2:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  你 => 你
Oracle Span 2-3:  小 => 小-01
Oracle Span 10-11:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 8-9:  真的 => 真的-01
Oracle Span 9-10:  钦佩 => 钦佩-01
Oracle Span 1-2:  问 => 问-01

Incorrect span: 钦佩 => 钦佩
Incorrect span: 真的 => 真的
Extra span: 道 => 道-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 钦佩 => 钦佩-01
Missing span: 真的 => 真的-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	问	_	VV	VV	_	0	root	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	dobj	_	_
5	道	_	VV	VV	_	2	dep	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	你	_	PN	PN	_	10	nsubj	_	_
9	真的	_	NN	NN	_	10	dep	_	_
10	钦佩	_	VV	VV	_	5	ccomp	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	吗	_	SP	SP	_	2	dep	_	_
13	？	_	PU	PU	_	2	punct	_	_
14	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 他)
(x0 / 问-01, arg1, x3 / 钦佩-01)
(x0 / 问-01, arg2, x7 / 王子)
(x3 / 钦佩-01, arg0, x4 / 你)
(x3 / 钦佩-01, arg1, x5 / 我)
(x3 / 钦佩-01, manner, x6 / 真的-01)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),我,我,false), Span(9,10,List(1),钦佩,钦佩,false), Span(8,9,List(2),真的,真的,false), Span(7,8,List(3),你,你,false), Span(4,5,List(4),道,道-01,false), Span(3,4,List(5),王子,王子,false), Span(2,3,List(6),小,小,false), Span(1,2,List(7),问,问-01,false), Span(0,1,List(8),他,他,false)),Map(2 -> 真的, 5 -> 王子, 8 -> 他, 7 -> 问-01, 1 -> 钦佩, 4 -> 道-01, 6 -> 小, 0 -> 我, 3 -> 你),Map(我 -> 我, 王 -> 王子, 你 -> 你, 他 -> 他, 钦 -> 钦佩, 小 -> 小, 道 -> 道-01, 问 -> 问-01, 真 -> 真的))),[Ljava.lang.String;@5cc5b667,Annotation([Ljava.lang.String;@61edc883,[Ljava.lang.String;@758f4f03,[Ljava.lang.String;@182f1e9a),Annotation([Ljava.lang.String;@6928f576,[Ljava.lang.String;@660e9100,[Ledu.cmu.lti.nlp.amr.Dependency;@69f63d95),Annotation([Ljava.lang.String;@9cd25ff,[Ljava.lang.String;@27e0f2f5,[Ljava.lang.String;@3574e198),Annotation([Ljava.lang.String;@6db66836,[Ljava.lang.String;@db44aa2,[Ledu.cmu.lti.nlp.amr.Entity;@2de366bb))
AMR:
(小 / 小, prep-following, 问 / 问-01)
(真 / 真的, mod, 你 / 你)
(道 / 道-01, degree, 问 / 问-01)
(道 / 道-01, prep-following, 王 / 王子)
(道 / 道-01, topic, 真 / 真的)
(钦 / 钦佩, manner, 真 / 真的)
(钦 / 钦佩, prep-along-with, 我 / 我)
(问 / 问-01, manner, 他 / 他)

Decoded in 26,489 microseconds
Sentence: “ 钦佩 是 什么 意思 ？ ”

Spans:
Span 3-4:  什么 => 什么
Span 4-5:  意思 => 意思-01
Span 2-3:  是 => 是-04
Span 1-2:  钦佩 => 钦佩

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  钦佩 => 钦佩

Extra span: 意思 => 意思-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	钦佩	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	意思	_	NN	NN	_	3	attr	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),意思,意思-01,false), Span(3,4,List(1),什么,什么,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),钦佩,钦佩,false)),Map(2 -> 是-04, 1 -> 什么, 0 -> 意思-01, 3 -> 钦佩),Map(钦 -> 钦佩, 意 -> 意思-01, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@3f093abe,Annotation([Ljava.lang.String;@61a002b1,[Ljava.lang.String;@4eeea57d,[Ljava.lang.String;@780ec4a5),Annotation([Ljava.lang.String;@e24ddd0,[Ljava.lang.String;@6f70f32f,[Ledu.cmu.lti.nlp.amr.Dependency;@548e76f1),Annotation([Ljava.lang.String;@5aabbb29,[Ljava.lang.String;@72c927f1,[Ljava.lang.String;@1ac85b0c),Annotation([Ljava.lang.String;@3dd69f5a,[Ljava.lang.String;@3aa3193a,[Ledu.cmu.lti.nlp.amr.Entity;@1ee4730))
AMR:
(什 / 什么, mod, 是 / 是-04)
(意 / 意思-01, degree, 是 / 是-04)
(是 / 是-04, degree, 钦 / 钦佩)

Decoded in 6,053 microseconds
Sentence: “ 钦佩 么 ， 就 是 承认 我 是 星球 上 最 美 的 人 ， 服饰 最 好 的 人 ， 最 富有 的 人 ， 最 聪明 的 人 。 ”

Spans:
Span 30-31:  人 => 人
Span 25-26:  人 => 人
Span 20-21:  人 => 人
Span 14-15:  人 => 人
Span 18-19:  好 => 好-04
Span 23-24:  富有 => 富有-01
Span 4-5:  就 => 就-01
Span 7-8:  我 => 我
Span 6-7:  承认 => 承认-02
Span 9-10:  星球 => 星球
Span 8-9:  是 => 是-04
Span 5-6:  是 => 是-04
Span 27-28:  最 => 最
Span 22-23:  最 => 最
Span 17-18:  最 => 最
Span 11-12:  最 => 最
Span 16-17:  服饰 => 服饰
Span 12-13:  美 => 美-01
Span 28-29:  聪明 => 聪明-01
Span 1-2:  钦佩 => 钦佩

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 14-15:  人 => 人
Oracle Span 20-21:  人 => 人
Oracle Span 25-26:  人 => 人
Oracle Span 30-31:  人 => 人
Oracle Span 18-19:  好 => 好-01
Oracle Span 23-24:  富有 => 富有
Oracle Span 4-5:  就 => 就
Oracle Span 7-8:  我 => 我
Oracle Span 6-7:  承认 => 承认-02
Oracle Span 9-10:  星球 => 星球
Oracle Span 11-12:  最 => 最
Oracle Span 17-18:  最 => 最
Oracle Span 22-23:  最 => 最
Oracle Span 27-28:  最 => 最
Oracle Span 16-17:  服饰 => 服饰
Oracle Span 12-13:  美 => 美-01
Oracle Span 28-29:  聪明 => 聪明-01
Oracle Span 1-2:  钦佩 => 钦佩

Incorrect span: 富有 => 富有-01
Incorrect span: 好 => 好-04
Extra span: 是 => 是-04
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 好 => 好-01
Missing span: 富有 => 富有
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	钦佩	_	AD	AD	_	3	advmod	_	_
3	么	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	3	ccomp	_	_
7	承认	_	VV	VV	_	31	rcmod	_	_
8	我	_	PN	PN	_	9	top	_	_
9	是	_	VC	VC	_	7	ccomp	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	15	dep	_	_
12	最	_	AD	AD	_	13	advmod	_	_
13	美	_	JJ	JJ	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	人	_	NN	NN	_	9	attr	_	_
16	,	_	PU	PU	_	9	punct	_	_
17	服饰	_	NN	NN	_	19	nsubj	_	_
18	最	_	AD	AD	_	19	advmod	_	_
19	好	_	VA	VA	_	21	rcmod	_	_
20	的	_	DEC	DEC	_	19	cpm	_	_
21	人	_	NN	NN	_	29	nsubj	_	_
22	,	_	PU	PU	_	29	punct	_	_
23	最	_	AD	AD	_	24	advmod	_	_
24	富有	_	VV	VV	_	26	rcmod	_	_
25	的	_	DEC	DEC	_	24	cpm	_	_
26	人	_	NN	NN	_	29	nsubj	_	_
27	,	_	PU	PU	_	29	punct	_	_
28	最	_	AD	AD	_	29	advmod	_	_
29	聪明	_	VV	VV	_	9	conj	_	_
30	的	_	DEC	DEC	_	7	cpm	_	_
31	人	_	NN	NN	_	6	attr	_	_
32	。	_	PU	PU	_	3	punct	_	_
33	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x42 / 承认-02, domain, x62 / 钦佩)
(x42 / 承认-02, manner, x63 / 就)
(x44 / 人, domain, x48 / 我)
(x44 / 人, location, x47 / 星球)
(x44 / 人, mod, x45 / 美-01)
(x45 / 美-01, degree, x46 / 最)
(x50 / 服饰, mod, x51 / 好-01)
(x50 / 服饰, poss, x49 / 人)
(x51 / 好-01, degree, x52 / 最)
(x54 / 人, mod, x55 / 富有)
(x55 / 富有, degree, x56 / 最)
(x58 / 人, mod, x59 / 聪明-01)
(x59 / 聪明-01, degree, x60 / 最)

Input(Some(Graph(null,ArrayBuffer(Span(30,31,List(0),人,人,false), Span(28,29,List(1),聪明,聪明-01,false), Span(27,28,List(2),最,最,false), Span(25,26,List(3),人,人,false), Span(23,24,List(4),富有,富有-01,false), Span(22,23,List(5),最,最,false), Span(20,21,List(6),人,人,false), Span(18,19,List(7),好,好-04,false), Span(17,18,List(8),最,最,false), Span(16,17,List(9),服饰,服饰,false), Span(14,15,List(10),人,人,false), Span(12,13,List(11),美,美-01,false), Span(11,12,List(12),最,最,false), Span(9,10,List(13),星球,星球,false), Span(8,9,List(14),是,是-04,false), Span(7,8,List(15),我,我,false), Span(6,7,List(16),承认,承认-02,false), Span(5,6,List(17),是,是-04,false), Span(4,5,List(18),就,就-01,false), Span(1,2,List(19),钦佩,钦佩,false)),Map(2 -> 最, 5 -> 最, 12 -> 最, 15 -> 我, 8 -> 最, 18 -> 就-01, 7 -> 好-04, 17 -> 是-04, 1 -> 聪明-01, 4 -> 富有-01, 11 -> 美-01, 14 -> 是-04, 6 -> 人, 0 -> 人, 9 -> 服饰, 16 -> 承认-02, 19 -> 钦佩, 3 -> 人, 10 -> 人, 13 -> 星球),Map(富 -> 富有-01, 就 -> 就-01, 美 -> 美-01, 星 -> 星球, 最3 -> 最, 我 -> 我, 人2 -> 人, 聪 -> 聪明-01, 钦 -> 钦佩, 承 -> 承认-02, 最2 -> 最, 好 -> 好-04, 服 -> 服饰, 人4 -> 人, 最4 -> 最, 人 -> 人, 是2 -> 是-04, 是 -> 是-04, 最 -> 最, 人3 -> 人))),[Ljava.lang.String;@59a67c3a,Annotation([Ljava.lang.String;@5003041b,[Ljava.lang.String;@724bade8,[Ljava.lang.String;@16fb356),Annotation([Ljava.lang.String;@6bc248ed,[Ljava.lang.String;@23a9ba52,[Ledu.cmu.lti.nlp.amr.Dependency;@ca27722),Annotation([Ljava.lang.String;@70ab80e3,[Ljava.lang.String;@9573b3b,[Ljava.lang.String;@67427b69),Annotation([Ljava.lang.String;@78461bc4,[Ljava.lang.String;@544630b7,[Ledu.cmu.lti.nlp.amr.Entity;@64f857e7))
AMR:
(人 / 人, mod, 聪 / 聪明-01)
(人2 / 人, mod, 富 / 富有-01)
(人3 / 人, location, 好 / 好-04)
(人4 / 人, mod, 美 / 美-01)
(好 / 好-04, degree, 最3 / 最)
(富 / 富有-01, degree, 好 / 好-04)
(富 / 富有-01, degree, 最2 / 最)
(富 / 富有-01, purpose, 聪 / 聪明-01)
(承 / 承认-02, degree, 是2 / 是-04)
(是 / 是-04, beneficiary, 我 / 我)
(是 / 是-04, degree, 是2 / 是-04)
(是 / 是-04, degree, 最4 / 最)
(是 / 是-04, location, 星 / 星球)
(是2 / 是-04, manner, 就 / 就-01)
(服 / 服饰, degree, 最3 / 最)
(服 / 服饰, poss, 人4 / 人)
(美 / 美-01, degree, 最4 / 最)
(聪 / 聪明-01, degree, 最 / 最)
(钦 / 钦佩, purpose, 是2 / 是-04)

Decoded in 121,653 microseconds
Sentence: “ 可 您 是 您 的 星球 上 唯一 的 人 呀 ！ ”

Spans:
Span 10-11:  人 => 人
Span 1-2:  可 => 可-01
Span 8-9:  唯一 => 唯一
Span 4-5:  您 => 您
Span 2-3:  您 => 您
Span 6-7:  星球 => 星球
Span 3-4:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 10-11:  人 => 人
Oracle Span 8-9:  唯一 => 唯一
Oracle Span 2-3:  您 => 您
Oracle Span 4-5:  您 => 您
Oracle Span 6-7:  星球 => 星球

Extra span: 是 => 是-04
Extra span: 可 => 可-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	可	_	VV	VV	_	4	mmod	_	_
3	您	_	PN	PN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	您	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	11	dep	_	_
9	唯一	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	人	_	NN	NN	_	4	attr	_	_
12	呀	_	SP	SP	_	4	dep	_	_
13	！	_	PU	PU	_	4	punct	_	_
14	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 人, domain, x15 / 您)
(x11 / 人, location, x13 / 星球)
(x11 / 人, mod, x12 / 唯一)
(x13 / 星球, poss, x14 / 您)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),人,人,false), Span(8,9,List(1),唯一,唯一,false), Span(6,7,List(2),星球,星球,false), Span(4,5,List(3),您,您,false), Span(3,4,List(4),是,是-04,false), Span(2,3,List(5),您,您,false), Span(1,2,List(6),可,可-01,false)),Map(2 -> 星球, 5 -> 您, 1 -> 唯一, 4 -> 是-04, 6 -> 可-01, 0 -> 人, 3 -> 您),Map(唯 -> 唯一, 星 -> 星球, 您2 -> 您, 人 -> 人, 是 -> 是-04, 可 -> 可-01, 您 -> 您))),[Ljava.lang.String;@1095f122,Annotation([Ljava.lang.String;@58c540cf,[Ljava.lang.String;@3d6300e8,[Ljava.lang.String;@1b822fcc),Annotation([Ljava.lang.String;@24a1c17f,[Ljava.lang.String;@56102e1c,[Ledu.cmu.lti.nlp.amr.Dependency;@73511076),Annotation([Ljava.lang.String;@7927bd9f,[Ljava.lang.String;@532721fd,[Ljava.lang.String;@410954b),Annotation([Ljava.lang.String;@7fb9f71f,[Ljava.lang.String;@3b366632,[Ledu.cmu.lti.nlp.amr.Entity;@51f49060))
AMR:
(人 / 人, mod, 唯 / 唯一)
(唯 / 唯一, location, 星 / 星球)
(星 / 星球, poss, 您 / 您)
(是 / 是-04, degree, 可 / 可-01)
(是 / 是-04, degree, 您2 / 您)
(是 / 是-04, prep-through, 您 / 您)

Decoded in 18,552 microseconds
Sentence: “ 让 我 高兴 吧 ，

Spans:
Span 2-3:  我 => 我
Span 1-2:  让 => 让-01
Span 3-4:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 1-2:  让 => 让-02
Oracle Span 3-4:  高兴 => 高兴-01

Incorrect span: 高兴 => 高兴
Incorrect span: 让 => 让-01
Missing span: 让 => 让-02
Missing span: 高兴 => 高兴-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	让	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	高兴	_	VA	VA	_	2	dep	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 让-02, arg1, x8 / 我)
(x7 / 让-02, arg2, x9 / 高兴-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),高兴,高兴,false), Span(2,3,List(1),我,我,false), Span(1,2,List(2),让,让-01,false)),Map(2 -> 让-01, 1 -> 我, 0 -> 高兴),Map(高 -> 高兴, 我 -> 我, 让 -> 让-01))),[Ljava.lang.String;@514eedd8,Annotation([Ljava.lang.String;@617fe9e1,[Ljava.lang.String;@6970140a,[Ljava.lang.String;@1cf2fed4),Annotation([Ljava.lang.String;@3af4e0bf,[Ljava.lang.String;@245a26e1,[Ledu.cmu.lti.nlp.amr.Dependency;@4d63b624),Annotation([Ljava.lang.String;@466cf502,[Ljava.lang.String;@5b800468,[Ljava.lang.String;@2e185cd7),Annotation([Ljava.lang.String;@7e1a1da6,[Ljava.lang.String;@5f7f2382,[Ledu.cmu.lti.nlp.amr.Entity;@407cf41))
AMR:
(让 / 让-01, location, 高 / 高兴)
(高 / 高兴, poss, 我 / 我)

Decoded in 4,920 microseconds
Sentence: 请 你 还是 来 钦佩 我 吧 ！ ”

Spans:
Span 1-2:  你 => 你
Span 5-6:  我 => 我
Span 3-4:  来 => 来-06
Span 0-1:  请 => 请-02
Span 2-3:  还是 => 还是
Span 4-5:  钦佩 => 钦佩

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  来 => 来-05
Oracle Span 0-1:  请 => 请-01
Oracle Span 2-3:  还是 => 还是
Oracle Span 4-5:  钦佩 => 钦佩-01

Incorrect span: 钦佩 => 钦佩
Incorrect span: 来 => 来-06
Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Missing span: 来 => 来-05
Missing span: 钦佩 => 钦佩-01
Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你	_	PN	PN	_	1	dobj	_	_
3	还是	_	AD	AD	_	5	advmod	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	钦佩	_	VV	VV	_	1	dep	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	吧	_	SP	SP	_	1	dep	_	_
8	！	_	PU	PU	_	1	punct	_	_
9	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x12 / 请-01, arg1, x13 / 你)
(x12 / 请-01, arg2, x14 / 来-05)
(x14 / 来-05, arg1, x17 / 钦佩-01)
(x14 / 来-05, manner, x15 / 还是)
(x17 / 钦佩-01, arg1, x19 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),我,我,false), Span(4,5,List(1),钦佩,钦佩,false), Span(3,4,List(2),来,来-06,false), Span(2,3,List(3),还是,还是,false), Span(1,2,List(4),你,你,false), Span(0,1,List(5),请,请-02,false)),Map(2 -> 来-06, 5 -> 请-02, 1 -> 钦佩, 4 -> 你, 0 -> 我, 3 -> 还是),Map(来 -> 来-06, 我 -> 我, 你 -> 你, 钦 -> 钦佩, 还 -> 还是, 请 -> 请-02))),[Ljava.lang.String;@6815c5f2,Annotation([Ljava.lang.String;@46cc127b,[Ljava.lang.String;@60094a13,[Ljava.lang.String;@5aceec94),Annotation([Ljava.lang.String;@1c32886a,[Ljava.lang.String;@3a4b0e5d,[Ledu.cmu.lti.nlp.amr.Dependency;@10b892d5),Annotation([Ljava.lang.String;@3d3f761a,[Ljava.lang.String;@3546d80f,[Ljava.lang.String;@579d011c),Annotation([Ljava.lang.String;@3670f00,[Ljava.lang.String;@452e26d0,[Ledu.cmu.lti.nlp.amr.Entity;@46ab18da))
AMR:
(来 / 来-06, manner, 还 / 还是)
(请 / 请-02, manner, 还 / 还是)
(请 / 请-02, ord, 你 / 你)
(钦 / 钦佩, mod, 来 / 来-06)
(钦 / 钦佩, quant, 我 / 我)

Decoded in 12,201 microseconds
Sentence: 小 王子 轻轻 地 耸了耸 肩膀 ， 说道 ： “ 我 钦佩 你 ， 可是 ， 这 有 什么 能 使 你 这样 感 兴趣 的 ？ ”

Spans:
Span 18-19:  什么 => 什么
Span 21-22:  你 => 你
Span 12-13:  你 => 你
Span 20-21:  使 => 使-01
Span 3-4:  地 => 地
Span 0-1:  小 => 小
Span 10-11:  我 => 我
Span 17-18:  有 => 有-06
Span 1-2:  王子 => 王子
Span 19-20:  能 => 能
Span 7-8:  说道 => 说道
Span 2-3:  轻轻 => 轻轻-01
Span 16-17:  这 => 这
Span 22-23:  这样 => 这样-01
Span 11-12:  钦佩 => 钦佩

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  你 => 你
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 19-20:  能 => 能-01
Oracle Span 7-8:  说道 => 说道-01
Oracle Span 2-3:  轻轻 => 轻轻-01
Oracle Span 22-23:  这样 => 这样
Oracle Span 11-12:  钦佩 => 钦佩-01

Incorrect span: 这样 => 这样-01
Extra span: 你 => 你
Extra span: 使 => 使-01
Incorrect span: 能 => 能
Extra span: 什么 => 什么
Extra span: 有 => 有-06
Extra span: 这 => 这
Incorrect span: 钦佩 => 钦佩
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 说道 => 说道-01
Missing span: 钦佩 => 钦佩-01
Missing span: 能 => 能-01
Missing span: 这样 => 这样
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	轻轻	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	耸了耸	_	VV	VV	_	0	root	_	_
6	肩膀	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	说道	_	VV	VV	_	5	conj	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	12	punct	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	钦佩	_	VV	VV	_	8	ccomp	_	_
13	你	_	PN	PN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	可是	_	AD	AD	_	18	advmod	_	_
16	,	_	PU	PU	_	18	punct	_	_
17	这	_	PN	PN	_	18	top	_	_
18	有	_	VE	VE	_	12	conj	_	_
19	什么	_	PN	PN	_	21	nsubj	_	_
20	能	_	VV	VV	_	21	mmod	_	_
21	使	_	VV	VV	_	18	dep	_	_
22	你	_	PN	PN	_	21	dobj	_	_
23	这样	_	AD	AD	_	24	advmod	_	_
24	感	_	VV	VV	_	21	dep	_	_
25	兴趣	_	NN	NN	_	24	dobj	_	_
26	的	_	SP	SP	_	5	dep	_	_
27	？	_	PU	PU	_	5	punct	_	_
28	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x30 / 王子, mod, x31 / 小-01)
(x35 / 钦佩-01, arg1, x37 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),这样,这样-01,false), Span(21,22,List(1),你,你,false), Span(20,21,List(2),使,使-01,false), Span(19,20,List(3),能,能,false), Span(18,19,List(4),什么,什么,false), Span(17,18,List(5),有,有-06,false), Span(16,17,List(6),这,这,false), Span(12,13,List(7),你,你,false), Span(11,12,List(8),钦佩,钦佩,false), Span(10,11,List(9),我,我,false), Span(7,8,List(10),说道,说道,false), Span(3,4,List(11),地,地,false), Span(2,3,List(12),轻轻,轻轻-01,false), Span(1,2,List(13),王子,王子,false), Span(0,1,List(14),小,小,false)),Map(2 -> 使-01, 5 -> 有-06, 12 -> 轻轻-01, 8 -> 钦佩, 7 -> 你, 1 -> 你, 4 -> 什么, 11 -> 地, 14 -> 小, 6 -> 这, 0 -> 这样-01, 9 -> 我, 3 -> 能, 10 -> 说道, 13 -> 王子),Map(我 -> 我, 这 -> 这样-01, 能 -> 能, 王 -> 王子, 你 -> 你, 钦 -> 钦佩, 小 -> 小, 地 -> 地, 说 -> 说道, 这2 -> 这, 你2 -> 你, 什 -> 什么, 轻 -> 轻轻-01, 使 -> 使-01, 有 -> 有-06))),[Ljava.lang.String;@790174f2,Annotation([Ljava.lang.String;@42257bdd,[Ljava.lang.String;@7689ddef,[Ljava.lang.String;@687a762c),Annotation([Ljava.lang.String;@1a2e2935,[Ljava.lang.String;@733c423e,[Ledu.cmu.lti.nlp.amr.Dependency;@4b629f13),Annotation([Ljava.lang.String;@70925b45,[Ljava.lang.String;@1b9ea3e3,[Ljava.lang.String;@aa22f1c),Annotation([Ljava.lang.String;@55e7a35c,[Ljava.lang.String;@37cd92d6,[Ledu.cmu.lti.nlp.amr.Entity;@5922ae77))
AMR:
(使 / 使-01, manner, 能 / 能)
(使 / 使-01, snt9, 你 / 你)
(地 / 地, mod, 小 / 小)
(地 / 地, mod, 轻 / 轻轻-01)
(地 / 地, purpose, 说 / 说道)
(有 / 有-06, mod, 这2 / 这)
(王 / 王子, mod, 小 / 小)
(能 / 能, mod, 什 / 什么)
(能 / 能, mod, 有 / 有-06)
(这 / 这样-01, purpose, 使 / 使-01)
(钦 / 钦佩, mod, 说 / 说道)
(钦 / 钦佩, poss, 我 / 我)
(钦 / 钦佩, purpose, 有 / 有-06)
(钦 / 钦佩, value, 你2 / 你)

Decoded in 85,370 microseconds
Sentence: 于是 小 王子 就 走开 了 。

Spans:
Span 1-2:  小 => 小
Span 3-4:  就 => 就-01
Span 2-3:  王子 => 王子
Span 4-5:  走开 => 走开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  王子 => 王子
Oracle Span 4-5:  走开 => 走开-01

Incorrect span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 就 => 就
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走开	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 走开-01, arg0, x4 / 王子)
(x2 / 走开-01, manner, x3 / 就)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),走开,走开-01,false), Span(3,4,List(1),就,就-01,false), Span(2,3,List(2),王子,王子,false), Span(1,2,List(3),小,小,false)),Map(2 -> 王子, 1 -> 就-01, 0 -> 走开-01, 3 -> 小),Map(就 -> 就-01, 王 -> 王子, 小 -> 小, 走 -> 走开-01))),[Ljava.lang.String;@4263b080,Annotation([Ljava.lang.String;@2af616d3,[Ljava.lang.String;@71f67a79,[Ljava.lang.String;@3deb2326),Annotation([Ljava.lang.String;@62d363ab,[Ljava.lang.String;@7889a1ac,[Ledu.cmu.lti.nlp.amr.Dependency;@3aee3976),Annotation([Ljava.lang.String;@5ef8df1e,[Ljava.lang.String;@27cf3151,[Ljava.lang.String;@127e70c5),Annotation([Ljava.lang.String;@5910de75,[Ljava.lang.String;@4108fa66,[Ledu.cmu.lti.nlp.amr.Entity;@1f130eaf))
AMR:
(王 / 王子, mod, 小 / 小)
(走 / 走开-01, manner, 就 / 就-01)
(走 / 走开-01, value, 王 / 王子)

Decoded in 13,130 microseconds
Sentence: 小 王子 在 路上 自言自语 地 说 了 一 句 ： “ 这些 大人 ， 肯定 是 十分 古怪 的 。 ”

Spans:
Span 17-18:  十分 => 十分
Span 18-19:  古怪 => 古怪-01
Span 9-10:  句 => 句
Span 2-3:  在 => 在-01
Span 5-6:  地 => 地
Span 13-14:  大人 => 大人
Span 0-1:  小 => 小
Span 16-17:  是 => 是-04
Span 1-2:  王子 => 王子
Span 15-16:  肯定 => 肯定-02
Span 4-5:  自言自语 => 自言自语
Span 6-7:  说 => 说-02
Span 3-4:  路上 => 路上
Span 12-13:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  十分 => 十分
Oracle Span 18-19:  古怪 => 古怪-01
Oracle Span 13-14:  大人 => 大人
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  肯定 => 肯定-02
Oracle Span 4-5:  自言自语 => 自言自语
Oracle Span 6-7:  说 => 说-01
Oracle Span 3-4:  路上 => 路上
Oracle Span 12-13:  这些 => 这些

Extra span: 是 => 是-04
Extra span: 句 => 句
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	在	_	P	P	_	7	prep	_	_
4	路上	_	NR	NR	_	3	pobj	_	_
5	自言自语	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	说	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	一	_	NT	NT	_	10	dep	_	_
10	句	_	VV	VV	_	7	ccomp	_	_
11	：	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	17	punct	_	_
13	这些	_	DT	DT	_	14	det	_	_
14	大人	_	NN	NN	_	17	nsubj	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	肯定	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	10	ccomp	_	_
18	十分	_	AD	AD	_	19	advmod	_	_
19	古怪	_	VA	VA	_	17	attr	_	_
20	的	_	DEC	DEC	_	19	cpm	_	_
21	。	_	PU	PU	_	7	punct	_	_
22	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x11 / 肯定-02)
(x0 / 说-01, location, x3 / 路上)
(x0 / 说-01, manner, x2 / 自言自语)
(x11 / 肯定-02, arg0, x12 / 古怪-01)
(x12 / 古怪-01, arg0, x14 / 大人)
(x12 / 古怪-01, degree, x13 / 十分)
(x14 / 大人, mod, x15 / 这些)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),古怪,古怪-01,false), Span(17,18,List(1),十分,十分,false), Span(16,17,List(2),是,是-04,false), Span(15,16,List(3),肯定,肯定-02,false), Span(13,14,List(4),大人,大人,false), Span(12,13,List(5),这些,这些,false), Span(9,10,List(6),句,句,false), Span(6,7,List(7),说,说-02,false), Span(5,6,List(8),地,地,false), Span(4,5,List(9),自言自语,自言自语,false), Span(3,4,List(10),路上,路上,false), Span(2,3,List(11),在,在-01,false), Span(1,2,List(12),王子,王子,false), Span(0,1,List(13),小,小,false)),Map(2 -> 是-04, 5 -> 这些, 12 -> 王子, 8 -> 地, 7 -> 说-02, 1 -> 十分, 4 -> 大人, 11 -> 在-01, 6 -> 句, 0 -> 古怪-01, 9 -> 自言自语, 3 -> 肯定-02, 10 -> 路上, 13 -> 小),Map(自 -> 自言自语, 在 -> 在-01, 路 -> 路上, 十 -> 十分, 这 -> 这些, 肯 -> 肯定-02, 王 -> 王子, 大 -> 大人, 句 -> 句, 小 -> 小, 地 -> 地, 说 -> 说-02, 古 -> 古怪-01, 是 -> 是-04))),[Ljava.lang.String;@7e0aadd0,Annotation([Ljava.lang.String;@21362712,[Ljava.lang.String;@27eb3298,[Ljava.lang.String;@200a26bc),Annotation([Ljava.lang.String;@bc57b40,[Ljava.lang.String;@1b5bc39d,[Ledu.cmu.lti.nlp.amr.Dependency;@655a5d9c),Annotation([Ljava.lang.String;@1494b84d,[Ljava.lang.String;@34abdee4,[Ljava.lang.String;@71a9b4c7),Annotation([Ljava.lang.String;@4628b1d3,[Ljava.lang.String;@77cf3f8b,[Ledu.cmu.lti.nlp.amr.Entity;@1df98368))
AMR:
(古 / 古怪-01, degree, 十 / 十分)
(古 / 古怪-01, degree, 是 / 是-04)
(在 / 在-01, value, 王 / 王子)
(地 / 地, manner, 自 / 自言自语)
(地 / 地, mod, 路 / 路上)
(大 / 大人, mod, 句 / 句)
(大 / 大人, mod, 这 / 这些)
(是 / 是-04, manner, 肯 / 肯定-02)
(是 / 是-04, value, 大 / 大人)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, unit, 句 / 句)
(路 / 路上, mod, 在 / 在-01)

Decoded in 56,325 microseconds
Sentence: XII 。

Spans:
Span 0-1:  XII => XII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XII => XII

Dependencies:
1	XII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XII,XII,false)),Map(0 -> XII),Map(x -> XII))),[Ljava.lang.String;@21ca139c,Annotation([Ljava.lang.String;@226f885f,[Ljava.lang.String;@2cd2c8fe,[Ljava.lang.String;@7d61eccf),Annotation([Ljava.lang.String;@cc6460c,[Ljava.lang.String;@52350abb,[Ledu.cmu.lti.nlp.amr.Dependency;@681aad3b),Annotation([Ljava.lang.String;@1a6f2363,[Ljava.lang.String;@2427e004,[Ljava.lang.String;@5ebd56e9),Annotation([Ljava.lang.String;@63f34b70,[Ljava.lang.String;@641856,[Ledu.cmu.lti.nlp.amr.Entity;@1b58ff9e))
AMR:


Decoded in 1,612 microseconds
Sentence: 小 王子 所 访问 的 下 一 个 星球 上 住 着 一 个 酒鬼 。

Spans:
Span 5-6:  下 => 下-07
Span 10-11:  住 => 住-01
Span 0-1:  小 => 小
Span 8-9:  星球 => 星球
Span 1-2:  王子 => 王子
Span 3-4:  访问 => 访问
Span 14-15:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  住 => 住-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 8-9:  星球 => 星球
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  访问 => 访问-01
Oracle Span 14-15:  酒鬼 => 酒鬼

Extra span: 下 => 下-07
Incorrect span: 访问 => 访问
Incorrect span: 小 => 小
Missing span: 访问 => 访问-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	11	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	访问	_	VV	VV	_	9	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	下	_	DT	DT	_	9	det	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	6	dep	_	_
9	星球	_	NN	NN	_	10	lobj	_	_
10	上	_	LC	LC	_	11	loc	_	_
11	住	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	个	_	M	M	_	15	clf	_	_
15	酒鬼	_	NN	NN	_	11	dobj	_	_
16	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 住-01, arg0, x2 / 酒鬼)
(x0 / 住-01, arg1, x4 / 星球)
(x6 / 访问-01, arg0, x7 / 王子)
(x6 / 访问-01, arg1, x4 / 星球)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),酒鬼,酒鬼,false), Span(10,11,List(1),住,住-01,false), Span(8,9,List(2),星球,星球,false), Span(5,6,List(3),下,下-07,false), Span(3,4,List(4),访问,访问,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小,false)),Map(2 -> 星球, 5 -> 王子, 1 -> 住-01, 4 -> 访问, 6 -> 小, 0 -> 酒鬼, 3 -> 下-07),Map(星 -> 星球, 酒 -> 酒鬼, 王 -> 王子, 下 -> 下-07, 访 -> 访问, 小 -> 小, 住 -> 住-01))),[Ljava.lang.String;@2f66e802,Annotation([Ljava.lang.String;@56b78e55,[Ljava.lang.String;@76318a7d,[Ljava.lang.String;@2a492f2a),Annotation([Ljava.lang.String;@3277e499,[Ljava.lang.String;@585811a4,[Ledu.cmu.lti.nlp.amr.Dependency;@22c01ab0),Annotation([Ljava.lang.String;@411341bd,[Ljava.lang.String;@4c4d362a,[Ljava.lang.String;@5400db36),Annotation([Ljava.lang.String;@76b74e9c,[Ljava.lang.String;@2d72f75e,[Ledu.cmu.lti.nlp.amr.Entity;@8ab78bc))
AMR:
(住 / 住-01, op, 星 / 星球)
(住 / 住-01, prep-for, 酒 / 酒鬼)
(星 / 星球, mod, 下 / 下-07)
(王 / 王子, mod, 小 / 小)
(访 / 访问, mod, 星 / 星球)
(访 / 访问, mod, 王 / 王子)

Decoded in 20,140 microseconds
Sentence: 访问 时间 非常 短 ， 可是 它 却 使 小 王子 非常 忧伤 。

Spans:
Span 8-9:  使 => 使-01
Span 6-7:  它 => 它
Span 9-10:  小 => 小
Span 12-13:  忧伤 => 忧伤-01
Span 1-2:  时间 => 时间
Span 10-11:  王子 => 王子
Span 3-4:  短 => 短-01
Span 0-1:  访问 => 访问
Span 11-12:  非常 => 非常
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 12-13:  忧伤 => 忧伤
Oracle Span 1-2:  时间 => 时间
Oracle Span 10-11:  王子 => 王子
Oracle Span 3-4:  短 => 短-01
Oracle Span 0-1:  访问 => 访问
Oracle Span 2-3:  非常 => 非常
Oracle Span 11-12:  非常 => 非常

Incorrect span: 忧伤 => 忧伤-01
Incorrect span: 小 => 小
Extra span: 使 => 使-01
Extra span: 它 => 它
Missing span: 忧伤 => 忧伤
Missing span: 小 => 小-01
Dependencies:
1	访问	_	NN	NN	_	2	nn	_	_
2	时间	_	NN	NN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	短	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	可是	_	AD	AD	_	9	advmod	_	_
7	它	_	PN	PN	_	9	nsubj	_	_
8	却	_	AD	AD	_	9	advmod	_	_
9	使	_	VV	VV	_	4	conj	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	9	dobj	_	_
12	非常	_	AD	AD	_	13	advmod	_	_
13	忧伤	_	VV	VV	_	9	dep	_	_
14	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x15 / 忧伤, arg0, x17 / 王子)
(x15 / 忧伤, degree, x16 / 非常)
(x17 / 王子, mod, x18 / 小-01)
(x4 / 短-01, arg0, x6 / 时间)
(x4 / 短-01, degree, x5 / 非常)
(x6 / 时间, mod, x14 / 访问)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),忧伤,忧伤-01,false), Span(11,12,List(1),非常,非常,false), Span(10,11,List(2),王子,王子,false), Span(9,10,List(3),小,小,false), Span(8,9,List(4),使,使-01,false), Span(6,7,List(5),它,它,false), Span(3,4,List(6),短,短-01,false), Span(2,3,List(7),非常,非常,false), Span(1,2,List(8),时间,时间,false), Span(0,1,List(9),访问,访问,false)),Map(2 -> 王子, 5 -> 它, 8 -> 时间, 7 -> 非常, 1 -> 非常, 4 -> 使-01, 6 -> 短-01, 9 -> 访问, 0 -> 忧伤-01, 3 -> 小),Map(短 -> 短-01, 王 -> 王子, 它 -> 它, 访 -> 访问, 忧 -> 忧伤-01, 非2 -> 非常, 小 -> 小, 非 -> 非常, 时 -> 时间, 使 -> 使-01))),[Ljava.lang.String;@5aa0dbf4,Annotation([Ljava.lang.String;@16afbd92,[Ljava.lang.String;@2c5d601e,[Ljava.lang.String;@7fe083b1),Annotation([Ljava.lang.String;@23c388c2,[Ljava.lang.String;@486be205,[Ledu.cmu.lti.nlp.amr.Dependency;@f713686),Annotation([Ljava.lang.String;@74f7d1d2,[Ljava.lang.String;@4b4dd216,[Ljava.lang.String;@5ca17ab0),Annotation([Ljava.lang.String;@5a62b2a4,[Ljava.lang.String;@1051817b,[Ledu.cmu.lti.nlp.amr.Entity;@35293c05))
AMR:
(使 / 使-01, ARG6, 王 / 王子)
(使 / 使-01, mode, 它 / 它)
(忧 / 忧伤-01, degree, 非 / 非常)
(忧 / 忧伤-01, time, 王 / 王子)
(时 / 时间, mod, 访 / 访问)
(王 / 王子, mod, 小 / 小)
(短 / 短-01, ARG3, 它 / 它)
(短 / 短-01, degree, 非2 / 非常)
(短 / 短-01, op, 时 / 时间)

Decoded in 29,906 microseconds
Sentence: “ 你 在 干 什么 ？ ” 小 王子 问 酒鬼 ， 这个 酒鬼 默默 地 坐 在 那里 ， 面前 有 一 堆 酒瓶子 ， 有的 装 着 酒 ， 有的 是 空 的 。

Spans:
Span 4-5:  什么 => 什么
Span 1-2:  你 => 你
Span 17-18:  在 => 在-01
Span 2-3:  在 => 在-01
Span 15-16:  地 => 地
Span 16-17:  坐 => 坐-03
Span 23-24:  堆 => 堆
Span 7-8:  小 => 小
Span 3-4:  干 => (thing :arg1-of 干-01)
Span 32-33:  是 => 是-04
Span 21-22:  有 => 有-06
Span 8-9:  王子 => 王子
Span 33-34:  空 => 空-01
Span 27-28:  装 => 装-03
Span 12-13:  这个 => 这个
Span 18-19:  那里 => 那里
Span 29-30:  酒 => 酒
Span 24-25:  酒瓶子 => 酒瓶子
Span 13-14:  酒鬼 => 酒鬼
Span 10-11:  酒鬼 => 酒鬼
Span 9-10:  问 => 问-01
Span 20-21:  面前 => 面前
Span 14-15:  默默 => 默默

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我 喝酒 。 ” 他 阴沉 忧郁 地 回答 道 。

Spans:
Span 5-6:  他 => 他
Span 2-3:  喝酒 => 喝酒-01
Span 9-10:  回答 => 回答-01
Span 8-9:  地 => 地
Span 7-8:  忧郁 => 忧郁-01
Span 1-2:  我 => 我
Span 10-11:  道 => 道-01
Span 6-7:  阴沉 => 阴沉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 2-3:  喝酒 => 喝酒-01
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 7-8:  忧郁 => 忧郁-01
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  阴沉 => 阴沉-01

Extra span: 道 => 道-01
Extra span: 地 => 地
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	喝酒	_	NN	NN	_	4	nn	_	_
4	。	_	NN	NN	_	10	nsubj	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	他	_	PN	PN	_	10	nsubj	_	_
7	阴沉	_	VA	VA	_	10	dvpmod	_	_
8	忧郁	_	VA	VA	_	7	comod	_	_
9	地	_	DEV	DEV	_	7	dvpm	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	道	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 他)
(x0 / 回答-01, arg2, x5 / 喝酒-01)
(x0 / 回答-01, manner, x3 / 阴沉-01)
(x0 / 回答-01, manner, x4 / 忧郁-01)
(x5 / 喝酒-01, arg0, x6 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),道,道-01,false), Span(9,10,List(1),回答,回答-01,false), Span(8,9,List(2),地,地,false), Span(7,8,List(3),忧郁,忧郁-01,false), Span(6,7,List(4),阴沉,阴沉-01,false), Span(5,6,List(5),他,他,false), Span(2,3,List(6),喝酒,喝酒-01,false), Span(1,2,List(7),我,我,false)),Map(2 -> 地, 5 -> 他, 7 -> 我, 1 -> 回答-01, 4 -> 阴沉-01, 6 -> 喝酒-01, 0 -> 道-01, 3 -> 忧郁-01),Map(我 -> 我, 喝 -> 喝酒-01, 阴 -> 阴沉-01, 他 -> 他, 忧 -> 忧郁-01, 地 -> 地, 道 -> 道-01, 回 -> 回答-01))),[Ljava.lang.String;@2db2dd9d,Annotation([Ljava.lang.String;@3174cb09,[Ljava.lang.String;@4d411036,[Ljava.lang.String;@7adbd080),Annotation([Ljava.lang.String;@41beb473,[Ljava.lang.String;@560513ce,[Ledu.cmu.lti.nlp.amr.Dependency;@13006998),Annotation([Ljava.lang.String;@37fbe4a8,[Ljava.lang.String;@352c308,[Ljava.lang.String;@7d373bcf),Annotation([Ljava.lang.String;@6d6bc158,[Ljava.lang.String;@5dda6f9,[Ledu.cmu.lti.nlp.amr.Entity;@10027fc9))
AMR:
(喝 / 喝酒-01, beneficiary, 我 / 我)
(喝 / 喝酒-01, purpose, 阴 / 阴沉-01)
(回 / 回答-01, manner, 阴 / 阴沉-01)
(地 / 地, mod, 忧 / 忧郁-01)
(忧 / 忧郁-01, manner, 阴 / 阴沉-01)
(道 / 道-01, degree, 回 / 回答-01)
(阴 / 阴沉-01, location, 他 / 他)

Decoded in 21,601 microseconds
Sentence: “ 你 为什么 喝酒 ？ ” 小 王子 问道 。

Spans:
Span 1-2:  你 => 你
Span 3-4:  喝酒 => 喝酒-01
Span 6-7:  小 => 小
Span 7-8:  王子 => 王子
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  喝酒 => 喝酒-01
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  问道 => 问道-01

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	为什么	_	AD	AD	_	4	advmod	_	_
4	喝酒	_	VV	VV	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	问道	_	VV	VV	_	4	dep	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 喝酒-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 喝酒-01, arg0, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),问道,问道-01,false), Span(7,8,List(1),王子,王子,false), Span(6,7,List(2),小,小,false), Span(3,4,List(3),喝酒,喝酒-01,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 问道-01, 3 -> 喝酒-01),Map(你 -> 你, 喝 -> 喝酒-01, 王 -> 王子, 小 -> 小, 问 -> 问道-01))),[Ljava.lang.String;@54afd745,Annotation([Ljava.lang.String;@677dbd89,[Ljava.lang.String;@fff25f1,[Ljava.lang.String;@c00fff0),Annotation([Ljava.lang.String;@263f04ca,[Ljava.lang.String;@2ca47471,[Ledu.cmu.lti.nlp.amr.Dependency;@5a021cb9),Annotation([Ljava.lang.String;@51768776,[Ljava.lang.String;@f31c0c6,[Ljava.lang.String;@b93aad),Annotation([Ljava.lang.String;@4a9419d7,[Ljava.lang.String;@2f3c6ac4,[Ledu.cmu.lti.nlp.amr.Entity;@2e8ab815))
AMR:
(喝 / 喝酒-01, location, 你 / 你)
(王 / 王子, mod, 小 / 小)
(问 / 问道-01, ARG3, 王 / 王子)
(问 / 问道-01, example, 喝 / 喝酒-01)

Decoded in 9,424 microseconds
Sentence: “ 为了 忘却 。 ” 酒鬼 回答 。

Spans:
Span 1-2:  为了 => 为了-01
Span 6-7:  回答 => 回答-01
Span 2-3:  忘却 => 忘却-01
Span 5-6:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  为了 => 为了-01
Oracle Span 6-7:  回答 => 回答-01
Oracle Span 2-3:  忘却 => 忘却-01
Oracle Span 5-6:  酒鬼 => 酒鬼

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	为了	_	P	P	_	6	prep	_	_
3	忘却	_	NN	NN	_	4	nn	_	_
4	。	_	NN	NN	_	2	pobj	_	_
5	”	_	PU	PU	_	2	punct	_	_
6	酒鬼	_	NN	NN	_	7	nsubj	_	_
7	回答	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 酒鬼)
(x0 / 回答-01, arg2, x3 / 为了-01)
(x3 / 为了-01, arg1, x4 / 忘却-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),回答,回答-01,false), Span(5,6,List(1),酒鬼,酒鬼,false), Span(2,3,List(2),忘却,忘却-01,false), Span(1,2,List(3),为了,为了-01,false)),Map(2 -> 忘却-01, 1 -> 酒鬼, 0 -> 回答-01, 3 -> 为了-01),Map(酒 -> 酒鬼, 忘 -> 忘却-01, 为 -> 为了-01, 回 -> 回答-01))),[Ljava.lang.String;@67af833b,Annotation([Ljava.lang.String;@d1f74b8,[Ljava.lang.String;@41394595,[Ljava.lang.String;@3a0807b7),Annotation([Ljava.lang.String;@21a5fd96,[Ljava.lang.String;@5769e7ae,[Ledu.cmu.lti.nlp.amr.Dependency;@5c77053b),Annotation([Ljava.lang.String;@26b894bd,[Ljava.lang.String;@287f94b1,[Ljava.lang.String;@30b34287),Annotation([Ljava.lang.String;@5489c777,[Ljava.lang.String;@3676ac27,[Ledu.cmu.lti.nlp.amr.Entity;@62f87c44))
AMR:
(为 / 为了-01, example, 忘 / 忘却-01)
(为 / 为了-01, location, 酒 / 酒鬼)
(回 / 回答-01, location, 酒 / 酒鬼)

Decoded in 6,867 microseconds
Sentence: 小 王子 已经 有些 可怜 酒鬼 。 他 问道 ： “ 忘却 什么 呢 ？ ”

Spans:
Span 12-13:  什么 => 什么
Span 7-8:  他 => 他
Span 4-5:  可怜 => 可怜-01
Span 0-1:  小 => 小
Span 2-3:  已经 => 已经
Span 11-12:  忘却 => 忘却-01
Span 3-4:  有些 => 有些
Span 1-2:  王子 => 王子
Span 5-6:  酒鬼 => 酒鬼
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 4-5:  可怜 => 可怜-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  已经 => 已经
Oracle Span 11-12:  忘却 => 忘却-01
Oracle Span 3-4:  有些 => 有些
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  酒鬼 => 酒鬼
Oracle Span 8-9:  问道 => 问道-01

Extra span: 什么 => 什么
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	已经	_	AD	AD	_	5	advmod	_	_
4	有些	_	AD	AD	_	5	advmod	_	_
5	可怜	_	VV	VV	_	0	root	_	_
6	酒鬼	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	问道	_	VV	VV	_	5	conj	_	_
10	：	_	PU	PU	_	5	punct	_	_
11	“	_	PU	PU	_	12	punct	_	_
12	忘却	_	VV	VV	_	5	dep	_	_
13	什么	_	PN	PN	_	12	dobj	_	_
14	呢	_	SP	SP	_	12	dep	_	_
15	？	_	PU	PU	_	5	punct	_	_
16	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 可怜-01, arg0, x3 / 王子)
(x2 / 可怜-01, arg1, x7 / 酒鬼)
(x2 / 可怜-01, degree, x5 / 有些)
(x2 / 可怜-01, time, x6 / 已经)
(x3 / 王子, mod, x4 / 小-01)
(x8 / 问道-01, arg0, x9 / 他)
(x8 / 问道-01, arg1, x10 / 忘却-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),什么,什么,false), Span(11,12,List(1),忘却,忘却-01,false), Span(8,9,List(2),问道,问道-01,false), Span(7,8,List(3),他,他,false), Span(5,6,List(4),酒鬼,酒鬼,false), Span(4,5,List(5),可怜,可怜-01,false), Span(3,4,List(6),有些,有些,false), Span(2,3,List(7),已经,已经,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小,false)),Map(2 -> 问道-01, 5 -> 可怜-01, 8 -> 王子, 7 -> 已经, 1 -> 忘却-01, 4 -> 酒鬼, 6 -> 有些, 9 -> 小, 0 -> 什么, 3 -> 他),Map(已 -> 已经, 酒 -> 酒鬼, 王 -> 王子, 他 -> 他, 小 -> 小, 忘 -> 忘却-01, 问 -> 问道-01, 什 -> 什么, 有 -> 有些, 可 -> 可怜-01))),[Ljava.lang.String;@48f5bde6,Annotation([Ljava.lang.String;@525d79f0,[Ljava.lang.String;@5149f008,[Ljava.lang.String;@7072bc39),Annotation([Ljava.lang.String;@158d255c,[Ljava.lang.String;@2ca65ce4,[Ledu.cmu.lti.nlp.amr.Dependency;@327120c8),Annotation([Ljava.lang.String;@5707c1cb,[Ljava.lang.String;@2b5cb9b2,[Ljava.lang.String;@35038141),Annotation([Ljava.lang.String;@ecf9049,[Ljava.lang.String;@672f11c2,[Ledu.cmu.lti.nlp.amr.Entity;@2970a5bc))
AMR:
(可 / 可怜-01, degree, 有 / 有些)
(可 / 可怜-01, time, 已 / 已经)
(可 / 可怜-01, value, 酒 / 酒鬼)
(小 / 小, time, 已 / 已经)
(忘 / 忘却-01, purpose, 什 / 什么)
(王 / 王子, mod, 小 / 小)
(问 / 问道-01, ARG6, 忘 / 忘却-01)
(问 / 问道-01, poss, 他 / 他)
(问 / 问道-01, purpose, 可 / 可怜-01)

Decoded in 33,014 microseconds
Sentence: 酒鬼 垂下 脑袋 坦白 道 ： “ 为了 忘却 我 的 羞愧 。 ”

Spans:
Span 7-8:  为了 => 为了-01
Span 3-4:  坦白 => 坦白-01
Span 1-2:  垂下 => 垂下-01
Span 8-9:  忘却 => 忘却-01
Span 9-10:  我 => 我
Span 11-12:  羞愧 => 羞愧-01
Span 2-3:  脑袋 => 脑袋
Span 4-5:  道 => 道-01
Span 0-1:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  为了 => 为了-01
Oracle Span 3-4:  坦白 => 坦白-01
Oracle Span 1-2:  垂下 => 垂下-01
Oracle Span 8-9:  忘却 => 忘却-01
Oracle Span 9-10:  我 => 我
Oracle Span 11-12:  羞愧 => 羞愧-01
Oracle Span 2-3:  脑袋 => 脑袋
Oracle Span 0-1:  酒鬼 => 酒鬼

Extra span: 道 => 道-01
Dependencies:
1	酒鬼	_	NN	NN	_	4	nn	_	_
2	垂下	_	NN	NN	_	4	nn	_	_
3	脑袋	_	NN	NN	_	4	nn	_	_
4	坦白	_	NN	NN	_	5	nsubj	_	_
5	道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	5	punct	_	_
8	为了	_	P	P	_	5	ccomp	_	_
9	忘却	_	VV	VV	_	8	pccomp	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	羞愧	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x16 / 为了-01, arg1, x17 / 忘却-01)
(x17 / 忘却-01, arg1, x18 / 羞愧-01)
(x18 / 羞愧-01, poss, x19 / 我)
(x4 / 坦白-01, arg0, x6 / 酒鬼)
(x4 / 坦白-01, arg1, x16 / 为了-01)
(x4 / 坦白-01, manner, x7 / 垂下-01)
(x7 / 垂下-01, arg1, x9 / 脑袋)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),羞愧,羞愧-01,false), Span(9,10,List(1),我,我,false), Span(8,9,List(2),忘却,忘却-01,false), Span(7,8,List(3),为了,为了-01,false), Span(4,5,List(4),道,道-01,false), Span(3,4,List(5),坦白,坦白-01,false), Span(2,3,List(6),脑袋,脑袋,false), Span(1,2,List(7),垂下,垂下-01,false), Span(0,1,List(8),酒鬼,酒鬼,false)),Map(2 -> 忘却-01, 5 -> 坦白-01, 8 -> 酒鬼, 7 -> 垂下-01, 1 -> 我, 4 -> 道-01, 6 -> 脑袋, 0 -> 羞愧-01, 3 -> 为了-01),Map(垂 -> 垂下-01, 我 -> 我, 酒 -> 酒鬼, 坦 -> 坦白-01, 忘 -> 忘却-01, 道 -> 道-01, 为 -> 为了-01, 羞 -> 羞愧-01, 脑 -> 脑袋))),[Ljava.lang.String;@50305a,Annotation([Ljava.lang.String;@72efb5c1,[Ljava.lang.String;@6d511b5f,[Ljava.lang.String;@41200e0c),Annotation([Ljava.lang.String;@40f33492,[Ljava.lang.String;@4fbdc0f0,[Ledu.cmu.lti.nlp.amr.Dependency;@2ad3a1bb),Annotation([Ljava.lang.String;@6bc28a83,[Ljava.lang.String;@324c64cd,[Ljava.lang.String;@13579834),Annotation([Ljava.lang.String;@24be2d9c,[Ljava.lang.String;@5bd73d1a,[Ledu.cmu.lti.nlp.amr.Entity;@aec50a1))
AMR:
(为 / 为了-01, manner, 坦 / 坦白-01)
(为 / 为了-01, manner, 羞 / 羞愧-01)
(为 / 为了-01, season, 忘 / 忘却-01)
(坦 / 坦白-01, manner, 垂 / 垂下-01)
(坦 / 坦白-01, manner, 脑 / 脑袋)
(羞 / 羞愧-01, poss, 我 / 我)
(道 / 道-01, manner, 坦 / 坦白-01)
(酒 / 酒鬼, season, 垂 / 垂下-01)

Decoded in 23,471 microseconds
Sentence: “ 你 羞愧 什么 呢 ？ ” 小 王子 很 想 救助 他 。

Spans:
Span 3-4:  什么 => 什么
Span 12-13:  他 => 他
Span 1-2:  你 => 你
Span 7-8:  小 => 小
Span 9-10:  很 => 很
Span 10-11:  想 => 想-05
Span 11-12:  救助 => 救助-01
Span 8-9:  王子 => 王子
Span 2-3:  羞愧 => 羞愧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  他 => 他
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  很 => 很
Oracle Span 10-11:  想 => 想-02
Oracle Span 11-12:  救助 => 救助-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 2-3:  羞愧 => 羞愧-01

Incorrect span: 想 => 想-05
Incorrect span: 小 => 小
Extra span: 什么 => 什么
Missing span: 想 => 想-02
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	羞愧	_	NR	NR	_	4	nsubj	_	_
4	什么	_	PN	PN	_	9	vmod	_	_
5	呢	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	11	nsubj	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	想	_	VV	VV	_	0	root	_	_
12	救助	_	VV	VV	_	11	ccomp	_	_
13	他	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x29 / 羞愧-01, arg0, x30 / 你)
(x33 / 想-02, arg0, x35 / 王子)
(x33 / 想-02, arg1, x37 / 救助-01)
(x33 / 想-02, degree, x34 / 很)
(x35 / 王子, mod, x36 / 小-01)
(x37 / 救助-01, arg1, x39 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),他,他,false), Span(11,12,List(1),救助,救助-01,false), Span(10,11,List(2),想,想-05,false), Span(9,10,List(3),很,很,false), Span(8,9,List(4),王子,王子,false), Span(7,8,List(5),小,小,false), Span(3,4,List(6),什么,什么,false), Span(2,3,List(7),羞愧,羞愧-01,false), Span(1,2,List(8),你,你,false)),Map(2 -> 想-05, 5 -> 小, 8 -> 你, 7 -> 羞愧-01, 1 -> 救助-01, 4 -> 王子, 6 -> 什么, 0 -> 他, 3 -> 很),Map(救 -> 救助-01, 你 -> 你, 王 -> 王子, 很 -> 很, 他 -> 他, 小 -> 小, 羞 -> 羞愧-01, 什 -> 什么, 想 -> 想-05))),[Ljava.lang.String;@2555fff0,Annotation([Ljava.lang.String;@70d2e40b,[Ljava.lang.String;@120f38e6,[Ljava.lang.String;@7a0e1b5e),Annotation([Ljava.lang.String;@702ed190,[Ljava.lang.String;@173b9122,[Ledu.cmu.lti.nlp.amr.Dependency;@7c18432b),Annotation([Ljava.lang.String;@7646731d,[Ljava.lang.String;@70e29e14,[Ljava.lang.String;@3b1bb3ab),Annotation([Ljava.lang.String;@5a4bef8,[Ljava.lang.String;@40bffbca,[Ledu.cmu.lti.nlp.amr.Entity;@2449cff7))
AMR:
(想 / 想-05, beneficiary, 王 / 王子)
(想 / 想-05, degree, 很 / 很)
(想 / 想-05, example, 救 / 救助-01)
(想 / 想-05, manner, 羞 / 羞愧-01)
(救 / 救助-01, purpose, 他 / 他)
(王 / 王子, mod, 小 / 小)
(羞 / 羞愧-01, location, 你 / 你)
(羞 / 羞愧-01, subset, 什 / 什么)

Decoded in 25,865 microseconds
Sentence: “ 我 羞愧 我 喝酒 。 ”

Spans:
Span 4-5:  喝酒 => 喝酒-01
Span 3-4:  我 => 我
Span 1-2:  我 => 我
Span 2-3:  羞愧 => 羞愧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  喝酒 => 喝酒-01
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  羞愧 => 羞愧-01

Extra span: 我 => 我
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	羞愧	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	喝酒	_	VV	VV	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 羞愧-01, arg0, x8 / 我)
(x7 / 羞愧-01, cause, x9 / 喝酒-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),喝酒,喝酒-01,false), Span(3,4,List(1),我,我,false), Span(2,3,List(2),羞愧,羞愧-01,false), Span(1,2,List(3),我,我,false)),Map(2 -> 羞愧-01, 1 -> 我, 0 -> 喝酒-01, 3 -> 我),Map(我 -> 我, 我2 -> 我, 喝 -> 喝酒-01, 羞 -> 羞愧-01))),[Ljava.lang.String;@42a9a63e,Annotation([Ljava.lang.String;@62da83ed,[Ljava.lang.String;@5d8445d7,[Ljava.lang.String;@37d80fe7),Annotation([Ljava.lang.String;@384fc774,[Ljava.lang.String;@e3cee7b,[Ledu.cmu.lti.nlp.amr.Dependency;@71e9a896),Annotation([Ljava.lang.String;@6b9267b,[Ljava.lang.String;@408b35bf,[Ljava.lang.String;@29ad44e3),Annotation([Ljava.lang.String;@15bcf458,[Ljava.lang.String;@5af9926a,[Ledu.cmu.lti.nlp.amr.Entity;@43c67247))
AMR:
(羞 / 羞愧-01, example, 喝 / 喝酒-01)
(羞 / 羞愧-01, poss, 我 / 我)
(羞 / 羞愧-01, poss, 我2 / 我)

Decoded in 6,053 microseconds
Sentence: 酒鬼 说完 以后 就 再 也 不 开口 了 。

Spans:
Span 6-7:  不 => 不
Span 5-6:  也 => 也
Span 4-5:  再 => 再
Span 3-4:  就 => 就-01
Span 7-8:  开口 => 开口-01
Span 1-2:  说完 => 说完-01
Span 0-1:  酒鬼 => 酒鬼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 4-5:  再 => 再-01
Oracle Span 3-4:  就 => 就
Oracle Span 7-8:  开口 => 开口-01
Oracle Span 1-2:  说完 => 说完-01
Oracle Span 0-1:  酒鬼 => 酒鬼

Extra span: 不 => 不
Incorrect span: 再 => 再
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 再 => 再-01
Dependencies:
1	酒鬼	_	NN	NN	_	2	nn	_	_
2	说完	_	NN	NN	_	3	lobj	_	_
3	以后	_	LC	LC	_	8	loc	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	再	_	AD	AD	_	8	advmod	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	不	_	AD	AD	_	8	neg	_	_
8	开口	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 说完-01, arg0, x3 / 酒鬼)
(x4 / 开口-01, manner, x6 / 也)
(x4 / 开口-01, manner, x7 / 再-01)
(x4 / 开口-01, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),开口,开口-01,false), Span(6,7,List(1),不,不,false), Span(5,6,List(2),也,也,false), Span(4,5,List(3),再,再,false), Span(3,4,List(4),就,就-01,false), Span(1,2,List(5),说完,说完-01,false), Span(0,1,List(6),酒鬼,酒鬼,false)),Map(2 -> 也, 5 -> 说完-01, 1 -> 不, 4 -> 就-01, 6 -> 酒鬼, 0 -> 开口-01, 3 -> 再),Map(就 -> 就-01, 也 -> 也, 酒 -> 酒鬼, 不 -> 不, 说 -> 说完-01, 开 -> 开口-01, 再 -> 再))),[Ljava.lang.String;@fac80,Annotation([Ljava.lang.String;@726386ed,[Ljava.lang.String;@649f2009,[Ljava.lang.String;@14bb2297),Annotation([Ljava.lang.String;@69adf72c,[Ljava.lang.String;@797501a,[Ledu.cmu.lti.nlp.amr.Dependency;@1a15b789),Annotation([Ljava.lang.String;@57f791c6,[Ljava.lang.String;@51650883,[Ljava.lang.String;@6c4f9535),Annotation([Ljava.lang.String;@5bd1ceca,[Ljava.lang.String;@30c31dd7,[Ledu.cmu.lti.nlp.amr.Entity;@499b2a5c))
AMR:
(开 / 开口-01, manner, 不 / 不)
(开 / 开口-01, manner, 也 / 也)
(开 / 开口-01, manner, 再 / 再)
(开 / 开口-01, manner, 就 / 就-01)
(说 / 说完-01, ARG0, 就 / 就-01)
(说 / 说完-01, location, 酒 / 酒鬼)

Decoded in 15,553 microseconds
Sentence: 小 王子 迷惑不解 地 离开 了 。

Spans:
Span 3-4:  地 => 地
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 4-5:  离开 => 离开-01
Span 2-3:  迷惑不解 => 迷惑不解-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  离开 => 离开-01
Oracle Span 2-3:  迷惑不解 => 迷惑不解-01

Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	迷惑不解	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	离开	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 离开-01, arg0, x2 / 王子)
(x0 / 离开-01, manner, x4 / 迷惑不解-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),离开,离开-01,false), Span(3,4,List(1),地,地,false), Span(2,3,List(2),迷惑不解,迷惑不解-01,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小,false)),Map(2 -> 迷惑不解-01, 1 -> 地, 4 -> 小, 0 -> 离开-01, 3 -> 王子),Map(王 -> 王子, 迷 -> 迷惑不解-01, 小 -> 小, 地 -> 地, 离 -> 离开-01))),[Ljava.lang.String;@596df867,Annotation([Ljava.lang.String;@c1fca1e,[Ljava.lang.String;@241a53ef,[Ljava.lang.String;@344344fa),Annotation([Ljava.lang.String;@2db2cd5,[Ljava.lang.String;@70e659aa,[Ledu.cmu.lti.nlp.amr.Dependency;@615f972),Annotation([Ljava.lang.String;@285f09de,[Ljava.lang.String;@73393584,[Ljava.lang.String;@31500940),Annotation([Ljava.lang.String;@1827a871,[Ljava.lang.String;@48e64352,[Ledu.cmu.lti.nlp.amr.Entity;@7249dadf))
AMR:
(王 / 王子, mod, 小 / 小)
(离 / 离开-01, manner, 迷 / 迷惑不解-01)
(离 / 离开-01, prep-on-behalf, 王 / 王子)
(迷 / 迷惑不解-01, ARG1, 地 / 地)

Decoded in 8,969 microseconds
Sentence: 在 旅途 中 ， 他 自言自语 地 说道 ： “ 这些 大人 确实 真 叫 怪 。 ”

Spans:
Span 4-5:  他 => 他
Span 14-15:  叫 => 叫-06
Span 0-1:  在 => 在-01
Span 6-7:  地 => 地
Span 11-12:  大人 => 大人
Span 15-16:  怪 => 怪-02
Span 1-2:  旅途 => 旅途
Span 13-14:  真 => 真
Span 12-13:  确实 => 确实-01
Span 5-6:  自言自语 => 自言自语
Span 7-8:  说道 => 说道
Span 10-11:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 11-12:  大人 => 大人
Oracle Span 15-16:  怪 => 怪-02
Oracle Span 1-2:  旅途 => 旅途
Oracle Span 13-14:  真 => 真
Oracle Span 12-13:  确实 => 确实
Oracle Span 5-6:  自言自语 => 自言自语
Oracle Span 7-8:  说道 => 说道-01
Oracle Span 10-11:  这些 => 这些

Extra span: 叫 => 叫-06
Incorrect span: 确实 => 确实-01
Incorrect span: 说道 => 说道
Extra span: 地 => 地
Extra span: 在 => 在-01
Missing span: 说道 => 说道-01
Missing span: 确实 => 确实
Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	旅途	_	NN	NN	_	3	lobj	_	_
3	中	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	他	_	PN	PN	_	8	nsubj	_	_
6	自言自语	_	VA	VA	_	8	dvpmod	_	_
7	地	_	DEV	DEV	_	6	dvpm	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	15	punct	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	大人	_	NN	NN	_	15	nsubj	_	_
13	确实	_	AD	AD	_	15	advmod	_	_
14	真	_	AD	AD	_	15	advmod	_	_
15	叫	_	VV	VV	_	8	ccomp	_	_
16	怪	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	8	punct	_	_
18	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x0 / 说道-01, arg1, x4 / 怪-02)
(x0 / 说道-01, manner, x3 / 自言自语)
(x0 / 说道-01, time, x9 / 旅途)
(x4 / 怪-02, arg0, x7 / 大人)
(x4 / 怪-02, degree, x5 / 真)
(x4 / 怪-02, degree, x6 / 确实)
(x7 / 大人, mod, x8 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),怪,怪-02,false), Span(14,15,List(1),叫,叫-06,false), Span(13,14,List(2),真,真,false), Span(12,13,List(3),确实,确实-01,false), Span(11,12,List(4),大人,大人,false), Span(10,11,List(5),这些,这些,false), Span(7,8,List(6),说道,说道,false), Span(6,7,List(7),地,地,false), Span(5,6,List(8),自言自语,自言自语,false), Span(4,5,List(9),他,他,false), Span(1,2,List(10),旅途,旅途,false), Span(0,1,List(11),在,在-01,false)),Map(2 -> 真, 5 -> 这些, 8 -> 自言自语, 7 -> 地, 1 -> 叫-06, 11 -> 在-01, 4 -> 大人, 6 -> 说道, 9 -> 他, 0 -> 怪-02, 10 -> 旅途, 3 -> 确实-01),Map(确 -> 确实-01, 在 -> 在-01, 自 -> 自言自语, 怪 -> 怪-02, 这 -> 这些, 旅 -> 旅途, 大 -> 大人, 他 -> 他, 叫 -> 叫-06, 地 -> 地, 说 -> 说道, 真 -> 真))),[Ljava.lang.String;@4362d7df,Annotation([Ljava.lang.String;@66238be2,[Ljava.lang.String;@1c25b8a7,[Ljava.lang.String;@200606de),Annotation([Ljava.lang.String;@750fe12e,[Ljava.lang.String;@f8908f6,[Ledu.cmu.lti.nlp.amr.Dependency;@3e587920),Annotation([Ljava.lang.String;@2ef8a8c3,[Ljava.lang.String;@24f43aa3,[Ljava.lang.String;@63fd4873),Annotation([Ljava.lang.String;@1e11bc55,[Ljava.lang.String;@7544a1e4,[Ledu.cmu.lti.nlp.amr.Entity;@70e0accd))
AMR:
(在 / 在-01, degree, 旅 / 旅途)
(地 / 地, manner, 自 / 自言自语)
(地 / 地, mod, 他 / 他)
(地 / 地, time, 旅 / 旅途)
(大 / 大人, mod, 这 / 这些)
(怪 / 怪-02, degree, 叫 / 叫-06)
(怪 / 怪-02, degree, 真 / 真)
(怪 / 怪-02, degree, 确 / 确实-01)
(怪 / 怪-02, degree, 说 / 说道)
(确 / 确实-01, time, 大 / 大人)
(说 / 说道, mod, 地 / 地)

Decoded in 38,945 microseconds
Sentence: XIII 。

Spans:
Span 0-1:  XIII => XIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIII => XIII

Dependencies:
1	XIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XIII,XIII,false)),Map(0 -> XIII),Map(x -> XIII))),[Ljava.lang.String;@7957dc72,Annotation([Ljava.lang.String;@6ab72419,[Ljava.lang.String;@3aacf32a,[Ljava.lang.String;@4fdfa676),Annotation([Ljava.lang.String;@82c57b3,[Ljava.lang.String;@5be82d43,[Ledu.cmu.lti.nlp.amr.Dependency;@600b0b7),Annotation([Ljava.lang.String;@345e5a17,[Ljava.lang.String;@5ea502e0,[Ljava.lang.String;@443dbe42),Annotation([Ljava.lang.String;@473b3b7a,[Ljava.lang.String;@1734f68,[Ledu.cmu.lti.nlp.amr.Entity;@77b7ffa4))
AMR:


Decoded in 1,368 microseconds
Sentence: 第四 个 行星 是 一 个 实业家 的 星球 。

Spans:
Span 6-7:  实业家 => 实业家
Span 8-9:  星球 => 星球
Span 3-4:  是 => 是-04
Span 2-3:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  实业家 => 实业家
Oracle Span 8-9:  星球 => 星球
Oracle Span 2-3:  行星 => 行星

Extra span: 是 => 是-04
Dependencies:
1	第四	_	OD	OD	_	2	ordmod	_	_
2	个	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	实业家	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 星球, domain, x4 / 行星)
(x0 / 星球, poss, x2 / 实业家)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),星球,星球,false), Span(6,7,List(1),实业家,实业家,false), Span(3,4,List(2),是,是-04,false), Span(2,3,List(3),行星,行星,false)),Map(2 -> 是-04, 1 -> 实业家, 0 -> 星球, 3 -> 行星),Map(星 -> 星球, 实 -> 实业家, 行 -> 行星, 是 -> 是-04))),[Ljava.lang.String;@5ed190be,Annotation([Ljava.lang.String;@402f80f5,[Ljava.lang.String;@5bbc9f97,[Ljava.lang.String;@133e019b),Annotation([Ljava.lang.String;@41382722,[Ljava.lang.String;@7dac3fd8,[Ledu.cmu.lti.nlp.amr.Dependency;@425357dd),Annotation([Ljava.lang.String;@2102a4d5,[Ljava.lang.String;@210386e0,[Ljava.lang.String;@3d4d3fe7),Annotation([Ljava.lang.String;@65f87a2c,[Ljava.lang.String;@51684e4a,[Ledu.cmu.lti.nlp.amr.Entity;@6ce1f601))
AMR:
(星 / 星球, domain, 行 / 行星)
(星 / 星球, poss, 实 / 实业家)
(是 / 是-04, ARG1, 行 / 行星)

Decoded in 8,253 microseconds
Sentence: 这个 人 忙 得 不可开交 ， 小 王子 到来 的 时候 ， 他 甚至 连 头 都 没有 抬 一下 。

Spans:
Span 4-5:  不可开交 => 不可开交-01
Span 1-2:  人 => 人
Span 12-13:  他 => 他
Span 8-9:  到来 => 到来-01
Span 6-7:  小 => 小
Span 3-4:  得 => 得-06
Span 2-3:  忙 => 忙-01
Span 10-11:  时候 => 时候
Span 7-8:  王子 => 王子
Span 13-14:  甚至 => 甚至
Span 0-1:  这个 => 这个
Span 16-17:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  不可开交 => 不可开交-01
Oracle Span 1-2:  人 => 人
Oracle Span 12-13:  他 => 他
Oracle Span 8-9:  到来 => 到来-01
Oracle Span 6-7:  小 => 小-01
Oracle Span 2-3:  忙 => 忙-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 13-14:  甚至 => 甚至
Oracle Span 16-17:  都 => 都

Extra span: 时候 => 时候
Incorrect span: 小 => 小
Extra span: 得 => 得-06
Extra span: 这个 => 这个
Missing span: 小 => 小-01
Dependencies:
1	这个	_	CD	CD	_	2	nummod	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	忙	_	VV	VV	_	0	root	_	_
4	得	_	VV	VV	_	3	ccomp	_	_
5	不可开交	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	到来	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	时候	_	NN	NN	_	19	nsubj	_	_
12	,	_	PU	PU	_	19	punct	_	_
13	他	_	PN	PN	_	19	nsubj	_	_
14	甚至	_	AD	AD	_	19	advmod	_	_
15	连	_	AD	AD	_	16	advmod	_	_
16	头	_	NN	NN	_	19	dobj	_	_
17	都	_	AD	AD	_	19	advmod	_	_
18	没有	_	VV	VV	_	19	neg	_	_
19	抬	_	VV	VV	_	3	conj	_	_
20	一下	_	AD	AD	_	19	advmod	_	_
21	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 到来-01, arg0, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x3 / 忙-01, arg0, x5 / 人)
(x3 / 忙-01, degree, x7 / 不可开交-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),都,都,false), Span(13,14,List(1),甚至,甚至,false), Span(12,13,List(2),他,他,false), Span(10,11,List(3),时候,时候,false), Span(8,9,List(4),到来,到来-01,false), Span(7,8,List(5),王子,王子,false), Span(6,7,List(6),小,小,false), Span(4,5,List(7),不可开交,不可开交-01,false), Span(3,4,List(8),得,得-06,false), Span(2,3,List(9),忙,忙-01,false), Span(1,2,List(10),人,人,false), Span(0,1,List(11),这个,这个,false)),Map(2 -> 他, 5 -> 王子, 8 -> 得-06, 7 -> 不可开交-01, 1 -> 甚至, 11 -> 这个, 4 -> 到来-01, 6 -> 小, 9 -> 忙-01, 0 -> 都, 10 -> 人, 3 -> 时候),Map(忙 -> 忙-01, 这 -> 这个, 得 -> 得-06, 王 -> 王子, 他 -> 他, 小 -> 小, 不 -> 不可开交-01, 到 -> 到来-01, 都 -> 都, 人 -> 人, 时 -> 时候, 甚 -> 甚至))),[Ljava.lang.String;@38875e7d,Annotation([Ljava.lang.String;@1e886a5b,[Ljava.lang.String;@d816dde,[Ljava.lang.String;@6e33c391),Annotation([Ljava.lang.String;@6c451c9c,[Ljava.lang.String;@31c269fd,[Ledu.cmu.lti.nlp.amr.Dependency;@372b0d86),Annotation([Ljava.lang.String;@47747fb9,[Ljava.lang.String;@3113a37,[Ljava.lang.String;@213e3629),Annotation([Ljava.lang.String;@4e9658b5,[Ljava.lang.String;@2a7b6f69,[Ledu.cmu.lti.nlp.amr.Entity;@20312893))
AMR:
(人 / 人, mod, 这 / 这个)
(到 / 到来-01, consist, 王 / 王子)
(到 / 到来-01, op, 时 / 时候)
(忙 / 忙-01, ARG4, 这 / 这个)
(忙 / 忙-01, degree, 不 / 不可开交-01)
(忙 / 忙-01, prep-along-with, 得 / 得-06)
(时 / 时候, ARG2, 他 / 他)
(时 / 时候, poss, 都 / 都)
(时 / 时候, prep-on-behalf, 忙 / 忙-01)
(王 / 王子, mod, 小 / 小)
(甚 / 甚至, domain, 时 / 时候)

Decoded in 47,755 microseconds
Sentence: 小 王子 对 他 说 ： “ 您 好 。

Spans:
Span 3-4:  他 => 他
Span 8-9:  好 => 好-04
Span 2-3:  对 => 对-02
Span 0-1:  小 => 小
Span 7-8:  您 => 您
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 8-9:  好 => 好-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Incorrect span: 好 => 好-04
Extra span: 您 => 您
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 好 => 好-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	他	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	9	punct	_	_
8	您	_	PN	PN	_	9	nsubj	_	_
9	好	_	VA	VA	_	5	ccomp	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 好-01)
(x0 / 说-01, arg3, x4 / 他)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),好,好-04,false), Span(7,8,List(1),您,您,false), Span(4,5,List(2),说,说-02,false), Span(3,4,List(3),他,他,false), Span(2,3,List(4),对,对-02,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小,false)),Map(2 -> 说-02, 5 -> 王子, 1 -> 您, 4 -> 对-02, 6 -> 小, 0 -> 好-04, 3 -> 他),Map(王 -> 王子, 他 -> 他, 小 -> 小, 说 -> 说-02, 好 -> 好-04, 对 -> 对-02, 您 -> 您))),[Ljava.lang.String;@70eecdc2,Annotation([Ljava.lang.String;@c41709a,[Ljava.lang.String;@7db0565c,[Ljava.lang.String;@54ec8cc9),Annotation([Ljava.lang.String;@52eacb4b,[Ljava.lang.String;@5528a42c,[Ledu.cmu.lti.nlp.amr.Dependency;@2a551a63),Annotation([Ljava.lang.String;@1a6f5124,[Ljava.lang.String;@1edb61b1,[Ljava.lang.String;@ec2bf82),Annotation([Ljava.lang.String;@cc62a3b,[Ljava.lang.String;@6cc0bcf6,[Ledu.cmu.lti.nlp.amr.Entity;@29539e36))
AMR:
(好 / 好-04, poss, 您 / 您)
(对 / 对-02, value, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, poss, 他 / 他)
(说 / 说-02, purpose, 好 / 好-04)
(说 / 说-02, purpose, 对 / 对-02)

Decoded in 13,990 microseconds
Sentence: 您 的 烟卷 灭 了 。 ”

Spans:
Span 0-1:  您 => 您
Span 3-4:  灭 => 灭-01
Span 2-3:  烟卷 => 烟卷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  您 => 您
Oracle Span 3-4:  灭 => 灭-01
Oracle Span 2-3:  烟卷 => 烟卷

Dependencies:
1	您	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	烟卷	_	NN	NN	_	4	nsubj	_	_
4	灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 灭-01, arg1, x7 / 烟卷)
(x7 / 烟卷, poss, x8 / 您)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),灭,灭-01,false), Span(2,3,List(1),烟卷,烟卷,false), Span(0,1,List(2),您,您,false)),Map(2 -> 您, 1 -> 烟卷, 0 -> 灭-01),Map(灭 -> 灭-01, 烟 -> 烟卷, 您 -> 您))),[Ljava.lang.String;@32f61a31,Annotation([Ljava.lang.String;@f5c79a6,[Ljava.lang.String;@669253b7,[Ljava.lang.String;@5305c37d),Annotation([Ljava.lang.String;@51a06cbe,[Ljava.lang.String;@3dddbe65,[Ledu.cmu.lti.nlp.amr.Dependency;@49a64d82),Annotation([Ljava.lang.String;@344561e0,[Ljava.lang.String;@66d23e4a,[Ljava.lang.String;@36ac8a63),Annotation([Ljava.lang.String;@4d9d1b69,[Ljava.lang.String;@52c8295b,[Ledu.cmu.lti.nlp.amr.Entity;@251f7d26))
AMR:
(灭 / 灭-01, location, 烟 / 烟卷)
(烟 / 烟卷, poss, 您 / 您)

Decoded in 4,459 microseconds
Sentence: “ 三 加 二 等于 五 。

Spans:
Span 2-3:  加 => 加-02
Span 4-5:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  加 => 加-02
Oracle Span 4-5:  等于 => 等于-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	三	_	CD	CD	_	4	nummod	_	_
3	加	_	CC	CC	_	4	cc	_	_
4	二	_	CD	CD	_	5	conj	_	_
5	等于	_	VV	VV	_	0	root	_	_
6	五	_	CD	CD	_	5	range	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 等于-01, arg0, x12 / 加-02)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),等于,等于-01,false), Span(2,3,List(1),加,加-02,false)),Map(1 -> 加-02, 0 -> 等于-01),Map(加 -> 加-02, 等 -> 等于-01))),[Ljava.lang.String;@77b21474,Annotation([Ljava.lang.String;@52d10fb8,[Ljava.lang.String;@41c07648,[Ljava.lang.String;@1fe8d51b),Annotation([Ljava.lang.String;@781e7326,[Ljava.lang.String;@22680f52,[Ledu.cmu.lti.nlp.amr.Dependency;@60d84f61),Annotation([Ljava.lang.String;@39c11e6c,[Ljava.lang.String;@324dcd31,[Ljava.lang.String;@503d56b5),Annotation([Ljava.lang.String;@72bca894,[Ljava.lang.String;@433ffad1,[Ledu.cmu.lti.nlp.amr.Entity;@1fc793c2))
AMR:
(等 / 等于-01, degree, 加 / 加-02)

Decoded in 3,240 microseconds
Sentence: 五 加 七 等于 十二 。

Spans:
Span 1-2:  加 => 加-02
Span 3-4:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  等于 => 等于-01

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	五	_	CD	CD	_	3	nummod	_	_
2	加	_	CC	CC	_	3	cc	_	_
3	七	_	CD	CD	_	4	conj	_	_
4	等于	_	VV	VV	_	0	root	_	_
5	十二	_	CD	CD	_	4	range	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 等于-01, arg0, x8 / 加-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),等于,等于-01,false), Span(1,2,List(1),加,加-02,false)),Map(1 -> 加-02, 0 -> 等于-01),Map(加 -> 加-02, 等 -> 等于-01))),[Ljava.lang.String;@2575f671,Annotation([Ljava.lang.String;@329a1243,[Ljava.lang.String;@ecf9fb3,[Ljava.lang.String;@2d35442b),Annotation([Ljava.lang.String;@27f9e982,[Ljava.lang.String;@4593ff34,[Ledu.cmu.lti.nlp.amr.Dependency;@37d3d232),Annotation([Ljava.lang.String;@30c0ccff,[Ljava.lang.String;@581d969c,[Ljava.lang.String;@22db8f4),Annotation([Ljava.lang.String;@2b46a8c1,[Ljava.lang.String;@1d572e62,[Ledu.cmu.lti.nlp.amr.Entity;@29caf222))
AMR:
(等 / 等于-01, degree, 加 / 加-02)

Decoded in 3,641 microseconds
Sentence: 十二 加 三 等于 十五 。

Spans:
Span 1-2:  加 => 加-02
Span 3-4:  等于 => 等于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  等于 => 等于-01

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	十二	_	CD	CD	_	3	nummod	_	_
2	加	_	CC	CC	_	3	cc	_	_
3	三	_	CD	CD	_	4	conj	_	_
4	等于	_	VV	VV	_	0	root	_	_
5	十五	_	CD	CD	_	4	range	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 等于-01, arg0, x8 / 加-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),等于,等于-01,false), Span(1,2,List(1),加,加-02,false)),Map(1 -> 加-02, 0 -> 等于-01),Map(加 -> 加-02, 等 -> 等于-01))),[Ljava.lang.String;@46cf05f7,Annotation([Ljava.lang.String;@5851bd4f,[Ljava.lang.String;@7cd1ac19,[Ljava.lang.String;@2f40a43),Annotation([Ljava.lang.String;@3caa4757,[Ljava.lang.String;@69c43e48,[Ledu.cmu.lti.nlp.amr.Dependency;@1804f60d),Annotation([Ljava.lang.String;@3a80515c,[Ljava.lang.String;@547e29a4,[Ljava.lang.String;@1c807b1d),Annotation([Ljava.lang.String;@238b521e,[Ljava.lang.String;@1b39fd82,[Ledu.cmu.lti.nlp.amr.Entity;@3e2fc448))
AMR:
(等 / 等于-01, degree, 加 / 加-02)

Decoded in 4,987 microseconds
Sentence: 你 好 。

Spans:
Span 0-1:  你 => 你
Span 1-2:  好 => 好-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  好 => 好-01

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	好	_	VA	VA	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 好-01, arg0, x2 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),好,好-04,false), Span(0,1,List(1),你,你,false)),Map(1 -> 你, 0 -> 好-04),Map(你 -> 你, 好 -> 好-04))),[Ljava.lang.String;@21680803,Annotation([Ljava.lang.String;@588ab592,[Ljava.lang.String;@c8b96ec,[Ljava.lang.String;@4cc61eb1),Annotation([Ljava.lang.String;@2d8f2f3a,[Ljava.lang.String;@2024293c,[Ledu.cmu.lti.nlp.amr.Dependency;@7048f722),Annotation([Ljava.lang.String;@c074c0c,[Ljava.lang.String;@58a55449,[Ljava.lang.String;@5949eba8),Annotation([Ljava.lang.String;@6e0ff644,[Ljava.lang.String;@58dea0a5,[Ledu.cmu.lti.nlp.amr.Entity;@2a2bb0eb))
AMR:
(好 / 好-04, ARG0, 你 / 你)

Decoded in 3,006 microseconds
Sentence: 十五 加 七 ， 二十二 。

Spans:
Span 1-2:  加 => 加-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	十五	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	七	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	二十二	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),加,加-02,false)),Map(0 -> 加-02),Map(加 -> 加-02))),[Ljava.lang.String;@3c291aad,Annotation([Ljava.lang.String;@2d0566ba,[Ljava.lang.String;@733037,[Ljava.lang.String;@7728643a),Annotation([Ljava.lang.String;@320e400,[Ljava.lang.String;@5167268,[Ledu.cmu.lti.nlp.amr.Dependency;@1cfd1875),Annotation([Ljava.lang.String;@28c0b664,[Ljava.lang.String;@2c444798,[Ljava.lang.String;@1af7f54a),Annotation([Ljava.lang.String;@6ebd78d1,[Ljava.lang.String;@436390f4,[Ledu.cmu.lti.nlp.amr.Entity;@4d157787))
AMR:


Decoded in 2,726 microseconds
Sentence: 二十二 加 六 ， 二十八 。

Spans:
Span 1-2:  加 => 加-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	二十二	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	六	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	二十八	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),加,加-02,false)),Map(0 -> 加-02),Map(加 -> 加-02))),[Ljava.lang.String;@68ed96ca,Annotation([Ljava.lang.String;@6d1310f6,[Ljava.lang.String;@3228d990,[Ljava.lang.String;@54e7391d),Annotation([Ljava.lang.String;@50b8ae8d,[Ljava.lang.String;@255990cc,[Ledu.cmu.lti.nlp.amr.Dependency;@51c929ae),Annotation([Ljava.lang.String;@3c8bdd5b,[Ljava.lang.String;@29d2d081,[Ljava.lang.String;@40e4ea87),Annotation([Ljava.lang.String;@58783f6c,[Ljava.lang.String;@3a7b503d,[Ledu.cmu.lti.nlp.amr.Entity;@512d92b))
AMR:


Decoded in 2,617 microseconds
Sentence: 没有 时间 去 再 点 着 它 。

Spans:
Span 3-4:  再 => 再
Span 2-3:  去 => 去-02
Span 6-7:  它 => 它
Span 1-2:  时间 => 时间
Span 4-5:  点 => 点

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  再 => 再
Oracle Span 2-3:  去 => 去-01
Oracle Span 6-7:  它 => 它
Oracle Span 1-2:  时间 => 时间
Oracle Span 4-5:  点 => 点-01

Incorrect span: 点 => 点
Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Missing span: 点 => 点-01
Dependencies:
1	没有	_	VE	VE	_	0	root	_	_
2	时间	_	NN	NN	_	1	dobj	_	_
3	去	_	MSP	MSP	_	6	prtmod	_	_
4	再	_	AD	AD	_	6	advmod	_	_
5	点	_	NN	NN	_	6	prep	_	_
6	着	_	VV	VV	_	1	conj	_	_
7	它	_	PN	PN	_	6	dobj	_	_
8	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x11 / 去-01, arg1, x12 / 点-01)
(x12 / 点-01, arg1, x13 / 它)
(x12 / 点-01, manner, x14 / 再)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),它,它,false), Span(4,5,List(1),点,点,false), Span(3,4,List(2),再,再,false), Span(2,3,List(3),去,去-02,false), Span(1,2,List(4),时间,时间,false)),Map(2 -> 再, 1 -> 点, 4 -> 时间, 0 -> 它, 3 -> 去-02),Map(去 -> 去-02, 它 -> 它, 点 -> 点, 时 -> 时间, 再 -> 再))),[Ljava.lang.String;@62c5bbdc,Annotation([Ljava.lang.String;@7bdf6bb7,[Ljava.lang.String;@1bc53649,[Ljava.lang.String;@88d6f9b),Annotation([Ljava.lang.String;@47d93e0d,[Ljava.lang.String;@475b7792,[Ledu.cmu.lti.nlp.amr.Dependency;@751e664e),Annotation([Ljava.lang.String;@160c3ec1,[Ljava.lang.String;@182b435b,[Ljava.lang.String;@4d0402b),Annotation([Ljava.lang.String;@2fa7ae9,[Ljava.lang.String;@7577b641,[Ledu.cmu.lti.nlp.amr.Entity;@3704122f))
AMR:
(去 / 去-02, ARG3, 时 / 时间)
(去 / 去-02, manner, 再 / 再)
(点 / 点, ARG3, 它 / 它)
(点 / 点, manner, 再 / 再)

Decoded in 9,327 microseconds
Sentence: 二十六 加 五 ， 三十一 。

Spans:
Span 1-2:  加 => 加-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  加 => 加-01

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	二十六	_	CD	CD	_	2	nsubj	_	_
2	加	_	VV	VV	_	0	root	_	_
3	五	_	CD	CD	_	2	range	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	三十一	_	CD	CD	_	2	conj	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),加,加-02,false)),Map(0 -> 加-02),Map(加 -> 加-02))),[Ljava.lang.String;@3153ddfc,Annotation([Ljava.lang.String;@60afd40d,[Ljava.lang.String;@28a2a3e7,[Ljava.lang.String;@3f2049b6),Annotation([Ljava.lang.String;@10b3df93,[Ljava.lang.String;@ea27e34,[Ledu.cmu.lti.nlp.amr.Dependency;@33a2499c),Annotation([Ljava.lang.String;@e72dba7,[Ljava.lang.String;@33c2bd,[Ljava.lang.String;@1dfd5f51),Annotation([Ljava.lang.String;@3c321bdb,[Ljava.lang.String;@24855019,[Ledu.cmu.lti.nlp.amr.Entity;@3abd581e))
AMR:


Decoded in 2,609 microseconds
Sentence: 哎哟！

NER Entity: (person :name (name :op "哎哟"))
NER Entity: (person :name (name :op "哎哟"))
Spans:
Span 0-1:  哎哟 => 哎哟

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  哎哟 => 哎哟

Dependencies:
1	哎哟！	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),哎哟,哎哟,false)),Map(0 -> 哎哟),Map(哎 -> 哎哟))),[Ljava.lang.String;@4d4d8fcf,Annotation([Ljava.lang.String;@610db97e,[Ljava.lang.String;@6f0628de,[Ljava.lang.String;@3fabf088),Annotation([Ljava.lang.String;@1e392345,[Ljava.lang.String;@12f3afb5,[Ledu.cmu.lti.nlp.amr.Dependency;@4ced35ed),Annotation([Ljava.lang.String;@2c22a348,[Ljava.lang.String;@7bd69e82,[Ljava.lang.String;@74d7184a),Annotation([Ljava.lang.String;@51b01960,[Ljava.lang.String;@6831d8fd,[Ledu.cmu.lti.nlp.amr.Entity;@27dc79f7))
AMR:


Decoded in 1,209 microseconds
Sentence: 一共 是 五亿一百六十二万二千七百三十一 。 ”

Spans:
Span 0-1:  一共 => 一共
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  一共 => 一共

Extra span: 是 => 是-04
Dependencies:
1	一共	_	CD	CD	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	五亿一百六十二万二千七百三十一	_	CD	CD	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),是,是-04,false), Span(0,1,List(1),一共,一共,false)),Map(1 -> 一共, 0 -> 是-04),Map(一 -> 一共, 是 -> 是-04))),[Ljava.lang.String;@6b85300e,Annotation([Ljava.lang.String;@3aaf4f07,[Ljava.lang.String;@5cbf9e9f,[Ljava.lang.String;@18e8473e),Annotation([Ljava.lang.String;@5a2f016d,[Ljava.lang.String;@1a38ba58,[Ledu.cmu.lti.nlp.amr.Dependency;@3ad394e6),Annotation([Ljava.lang.String;@6058e535,[Ljava.lang.String;@42deb43a,[Ljava.lang.String;@1deb2c43),Annotation([Ljava.lang.String;@3bb9efbc,[Ljava.lang.String;@1cefc4b3,[Ledu.cmu.lti.nlp.amr.Entity;@2b27cc70))
AMR:
(是 / 是-04, degree, 一 / 一共)

Decoded in 3,446 microseconds
Sentence: “ 五亿 什么 呀 ？ ”

Spans:
Span 2-3:  什么 => 什么

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span: 什么 => 什么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	五亿	_	CD	CD	_	3	nummod	_	_
3	什么	_	PN	PN	_	0	root	_	_
4	呀	_	SP	SP	_	3	dep	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),什么,什么,false)),Map(0 -> 什么),Map(什 -> 什么))),[Ljava.lang.String;@6f6a7463,Annotation([Ljava.lang.String;@1bdaa23d,[Ljava.lang.String;@79f227a9,[Ljava.lang.String;@6ca320ab),Annotation([Ljava.lang.String;@50d68830,[Ljava.lang.String;@1e53135d,[Ledu.cmu.lti.nlp.amr.Dependency;@7674a051),Annotation([Ljava.lang.String;@3a7704c,[Ljava.lang.String;@6754ef00,[Ljava.lang.String;@619bd14c),Annotation([Ljava.lang.String;@323e8306,[Ljava.lang.String;@a23a01d,[Ledu.cmu.lti.nlp.amr.Entity;@4acf72b6))
AMR:


Decoded in 2,887 microseconds
Sentence: “ 嗯 ？

Spans:
Span 1-2:  嗯 => 嗯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  嗯 => 嗯

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	嗯	_	VV	VV	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),嗯,嗯,false)),Map(0 -> 嗯),Map(嗯 -> 嗯))),[Ljava.lang.String;@7561db12,Annotation([Ljava.lang.String;@3301500b,[Ljava.lang.String;@24b52d3e,[Ljava.lang.String;@15deb1dc),Annotation([Ljava.lang.String;@6e9c413e,[Ljava.lang.String;@57a4d5ee,[Ledu.cmu.lti.nlp.amr.Dependency;@5af5def9),Annotation([Ljava.lang.String;@3a45c42a,[Ljava.lang.String;@36dce7ed,[Ljava.lang.String;@47a64f7d),Annotation([Ljava.lang.String;@33d05366,[Ljava.lang.String;@27a0a5a2,[Ledu.cmu.lti.nlp.amr.Entity;@7692cd34))
AMR:


Decoded in 1,425 microseconds
Sentence: 你 还 待 在 这儿 那 ？

Spans:
Span 0-1:  你 => 你
Span 3-4:  在 => 在-01
Span 2-3:  待 => 待-01
Span 1-2:  还 => 还
Span 4-5:  这儿 => 这儿
Span 5-6:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  待 => 待-01
Oracle Span 1-2:  还 => 还
Oracle Span 4-5:  这儿 => 这儿

Extra span: 那 => 那
Extra span: 在 => 在-01
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	待	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这儿	_	PN	PN	_	6	dep	_	_
6	那	_	PN	PN	_	4	pobj	_	_
7	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 待-01, arg0, x3 / 你)
(x0 / 待-01, arg1, x4 / 这儿)
(x0 / 待-01, manner, x2 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),那,那,false), Span(4,5,List(1),这儿,这儿,false), Span(3,4,List(2),在,在-01,false), Span(2,3,List(3),待,待-01,false), Span(1,2,List(4),还,还,false), Span(0,1,List(5),你,你,false)),Map(2 -> 在-01, 5 -> 你, 1 -> 这儿, 4 -> 还, 0 -> 那, 3 -> 待-01),Map(在 -> 在-01, 待 -> 待-01, 这 -> 这儿, 你 -> 你, 还 -> 还, 那 -> 那))),[Ljava.lang.String;@33aa93c,Annotation([Ljava.lang.String;@32c0915e,[Ljava.lang.String;@106faf11,[Ljava.lang.String;@70f43b45),Annotation([Ljava.lang.String;@26d10f2e,[Ljava.lang.String;@10ad20cb,[Ledu.cmu.lti.nlp.amr.Dependency;@7dd712e8),Annotation([Ljava.lang.String;@2c282004,[Ljava.lang.String;@22ee2d0,[Ljava.lang.String;@7bfc3126),Annotation([Ljava.lang.String;@3e792ce3,[Ljava.lang.String;@53bc1328,[Ledu.cmu.lti.nlp.amr.Entity;@26f143ed))
AMR:
(在 / 在-01, location, 这 / 这儿)
(在 / 在-01, manner, 待 / 待-01)
(待 / 待-01, manner, 还 / 还)
(待 / 待-01, poss, 你 / 你)
(那 / 那, quant, 这 / 这儿)

Decoded in 10,930 microseconds
Sentence: 五亿一百万 … 我 也 不 知道 是 什么 了 。

Spans:
Span 4-5:  不 => 不
Span 3-4:  也 => 也
Span 7-8:  什么 => 什么
Span 2-3:  我 => 我
Span 6-7:  是 => 是-04
Span 5-6:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  我 => 我
Oracle Span 5-6:  知道 => 知道-01

Extra span: 什么 => 什么
Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	五亿一百万	_	CD	CD	_	6	dep	_	_
2	…	_	PU	PU	_	6	dep	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	知道	_	VV	VV	_	0	root	_	_
7	是	_	VC	VC	_	6	dobj	_	_
8	什么	_	PN	PN	_	7	attr	_	_
9	了	_	SP	SP	_	7	dep	_	_
10	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x3 / 知道-01, arg0, x6 / 我)
(x3 / 知道-01, manner, x5 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),什么,什么,false), Span(6,7,List(1),是,是-04,false), Span(5,6,List(2),知道,知道-01,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),也,也,false), Span(2,3,List(5),我,我,false)),Map(2 -> 知道-01, 5 -> 我, 1 -> 是-04, 4 -> 也, 0 -> 什么, 3 -> 不),Map(我 -> 我, 也 -> 也, 不 -> 不, 知 -> 知道-01, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@3c1e3314,Annotation([Ljava.lang.String;@4b770e40,[Ljava.lang.String;@78e16155,[Ljava.lang.String;@54a3ab8f),Annotation([Ljava.lang.String;@1968a49c,[Ljava.lang.String;@6a1ebcff,[Ledu.cmu.lti.nlp.amr.Dependency;@19868320),Annotation([Ljava.lang.String;@50b0bc4c,[Ljava.lang.String;@c20be82,[Ljava.lang.String;@13c612bd),Annotation([Ljava.lang.String;@3ef41c66,[Ljava.lang.String;@6b739528,[Ledu.cmu.lti.nlp.amr.Entity;@622ef26a))
AMR:
(不 / 不, manner, 也 / 也)
(不 / 不, subset, 我 / 我)
(是 / 是-04, ARG1, 什 / 什么)
(是 / 是-04, ARG4, 不 / 不)
(知 / 知道-01, ARG4, 不 / 不)

Decoded in 13,224 microseconds
Sentence: 我 的 工作 很多 …

Spans:
Span 2-3:  工作 => 工作-01
Span 3-4:  很多 => 很多
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  工作 => 工作
Oracle Span 0-1:  我 => 我

Extra span: 很多 => 很多
Incorrect span: 工作 => 工作-01
Missing span: 工作 => 工作
Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	工作	_	NN	NN	_	5	nsubj	_	_
4	很多	_	CD	CD	_	5	nummod	_	_
5	…	_	M	M	_	0	root	_	_

Oracle:
(x5 / 工作, poss, x6 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),很多,很多,false), Span(2,3,List(1),工作,工作-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 工作-01, 0 -> 很多),Map(我 -> 我, 很 -> 很多, 工 -> 工作-01))),[Ljava.lang.String;@41de5768,Annotation([Ljava.lang.String;@5f577419,[Ljava.lang.String;@28fa700e,[Ljava.lang.String;@3d526ad9),Annotation([Ljava.lang.String;@e041f0c,[Ljava.lang.String;@6a175569,[Ledu.cmu.lti.nlp.amr.Dependency;@11963225),Annotation([Ljava.lang.String;@3f3c966c,[Ljava.lang.String;@11ee02f8,[Ljava.lang.String;@4102b1b1),Annotation([Ljava.lang.String;@61a5b4ae,[Ljava.lang.String;@3a71c100,[Ledu.cmu.lti.nlp.amr.Entity;@5b69fd74))
AMR:
(工 / 工作-01, poss, 我 / 我)
(很 / 很多, mod, 工 / 工作-01)

Decoded in 4,819 microseconds
Sentence: 我 是 很 严肃 的 ，

Spans:
Span 3-4:  严肃 => 严肃
Span 2-3:  很 => 很
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  我 => 我

Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Missing span: 严肃 => 严肃-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	严肃	_	JJ	JJ	_	2	attr	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 严肃-01, arg0, x3 / 我)
(x0 / 严肃-01, degree, x2 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),严肃,严肃,false), Span(2,3,List(1),很,很,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),我,我,false)),Map(2 -> 是-04, 1 -> 很, 0 -> 严肃, 3 -> 我),Map(我 -> 我, 很 -> 很, 严 -> 严肃, 是 -> 是-04))),[Ljava.lang.String;@f325091,Annotation([Ljava.lang.String;@437e951d,[Ljava.lang.String;@77b325b3,[Ljava.lang.String;@63a5e46c),Annotation([Ljava.lang.String;@7e8e8651,[Ljava.lang.String;@49ef32e0,[Ledu.cmu.lti.nlp.amr.Dependency;@271f18d3),Annotation([Ljava.lang.String;@6bd51ed8,[Ljava.lang.String;@61e3a1fd,[Ljava.lang.String;@51abf713),Annotation([Ljava.lang.String;@eadb475,[Ljava.lang.String;@4d4d48a6,[Ledu.cmu.lti.nlp.amr.Entity;@315df4bb))
AMR:
(严 / 严肃, degree, 很 / 很)
(很 / 很, ARG3, 是 / 是-04)
(我 / 我, ARG3, 是 / 是-04)

Decoded in 18,282 microseconds
Sentence: 我 可是 从来 也 没有 功夫 去 闲聊 ！

Spans:
Span 3-4:  也 => 也
Span 2-3:  从来 => 从来
Span 5-6:  功夫 => 功夫
Span 6-7:  去 => 去-02
Span 0-1:  我 => 我
Span 7-8:  闲聊 => 闲聊-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  从来 => 从来
Oracle Span 5-6:  功夫 => 功夫
Oracle Span 6-7:  去 => 去-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  闲聊 => 闲聊-01

Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	7	conj	_	_
6	功夫	_	NN	NN	_	5	dobj	_	_
7	去	_	VV	VV	_	0	root	_	_
8	闲聊	_	NN	NN	_	7	dobj	_	_
9	！	_	PU	PU	_	7	punct	_	_

Oracle:
(x17 / 去-01, arg1, x19 / 闲聊-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),闲聊,闲聊-01,false), Span(6,7,List(1),去,去-02,false), Span(5,6,List(2),功夫,功夫,false), Span(3,4,List(3),也,也,false), Span(2,3,List(4),从来,从来,false), Span(0,1,List(5),我,我,false)),Map(2 -> 功夫, 5 -> 我, 1 -> 去-02, 4 -> 从来, 0 -> 闲聊-01, 3 -> 也),Map(从 -> 从来, 我 -> 我, 也 -> 也, 闲 -> 闲聊-01, 去 -> 去-02, 功 -> 功夫))),[Ljava.lang.String;@3fc08eec,Annotation([Ljava.lang.String;@5cad8b7d,[Ljava.lang.String;@7b02e036,[Ljava.lang.String;@25243bc1),Annotation([Ljava.lang.String;@1e287667,[Ljava.lang.String;@2e6ee0bc,[Ledu.cmu.lti.nlp.amr.Dependency;@4201a617),Annotation([Ljava.lang.String;@467f77a5,[Ljava.lang.String;@1bb9aa43,[Ljava.lang.String;@420bc288),Annotation([Ljava.lang.String;@df5f5c0,[Ljava.lang.String;@308a6984,[Ledu.cmu.lti.nlp.amr.Entity;@66b72664))
AMR:
(从 / 从来, domain, 我 / 我)
(功 / 功夫, mode, 去 / 去-02)
(去 / 去-02, manner, 也 / 也)
(去 / 去-02, manner, 从 / 从来)
(闲 / 闲聊-01, manner, 去 / 去-02)

Decoded in 10,645 microseconds
Sentence: 二 加 五 得 七 … ”

Spans:
Span 1-2:  加 => 加-02
Span 3-4:  得 => 得-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  加 => 加-01
Oracle Span 3-4:  得 => 得-06

Incorrect span: 加 => 加-02
Missing span: 加 => 加-01
Dependencies:
1	二	_	CD	CD	_	2	nummod	_	_
2	加	_	NR	NR	_	4	nsubj	_	_
3	五	_	CD	CD	_	4	nsubj	_	_
4	得	_	VV	VV	_	0	root	_	_
5	七	_	CD	CD	_	7	nummod	_	_
6	…	_	PU	PU	_	7	punct	_	_
7	”	_	CD	CD	_	4	range	_	_

Oracle:
(x13 / 得-06, arg0, x17 / 加-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),得,得-06,false), Span(1,2,List(1),加,加-02,false)),Map(1 -> 加-02, 0 -> 得-06),Map(加 -> 加-02, 得 -> 得-06))),[Ljava.lang.String;@7a34b7b8,Annotation([Ljava.lang.String;@58cd06cb,[Ljava.lang.String;@3be8821f,[Ljava.lang.String;@64b31700),Annotation([Ljava.lang.String;@3b65e559,[Ljava.lang.String;@bae47a0,[Ledu.cmu.lti.nlp.amr.Dependency;@74a9c4b0),Annotation([Ljava.lang.String;@85ec632,[Ljava.lang.String;@1c05a54d,[Ljava.lang.String;@65ef722a),Annotation([Ljava.lang.String;@5fd9b663,[Ljava.lang.String;@214894fc,[Ledu.cmu.lti.nlp.amr.Entity;@10567255))
AMR:
(得 / 得-06, ARG4, 加 / 加-02)

Decoded in 3,084 microseconds
Sentence: “ 五亿一百万 什么 呀 ？ ” 小 王子 重复 问道 。 一旦 他 提出 了 一 个 问题 ， 是 从来 也 不 会 放弃 的 。

Spans:
Span 22-23:  不 => 不
Span 21-22:  也 => 也
Span 2-3:  什么 => 什么
Span 20-21:  从来 => 从来
Span 12-13:  他 => 他
Span 23-24:  会 => 会-03
Span 6-7:  小 => 小
Span 13-14:  提出 => 提出-01
Span 24-25:  放弃 => 放弃-01
Span 19-20:  是 => 是-04
Span 7-8:  王子 => 王子
Span 8-9:  重复 => 重复-01
Span 9-10:  问道 => 问道-01
Span 17-18:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 20-21:  从来 => 从来
Oracle Span 12-13:  他 => 他
Oracle Span 23-24:  会 => 会-02
Oracle Span 6-7:  小 => 小-01
Oracle Span 13-14:  提出 => 提出-01
Oracle Span 24-25:  放弃 => 放弃-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  重复 => 重复-01
Oracle Span 9-10:  问道 => 问道-01
Oracle Span 17-18:  问题 => 问题

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 是 => 是-04
Incorrect span: 小 => 小
Extra span: 什么 => 什么
Missing span: 小 => 小-01
Missing span: 会 => 会-02
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	五亿一百万	_	CD	CD	_	5	nummod	_	_
3	什么	_	DT	DT	_	4	det	_	_
4	呀	_	NN	NN	_	5	nn	_	_
5	？	_	NN	NN	_	8	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	重复	_	VV	VV	_	0	root	_	_
10	问道	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	一旦	_	CD	CD	_	14	nsubj	_	_
13	他	_	PN	PN	_	14	nsubj	_	_
14	提出	_	VV	VV	_	9	conj	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	18	clf	_	_
18	问题	_	NN	NN	_	14	dobj	_	_
19	,	_	PU	PU	_	9	punct	_	_
20	是	_	VC	VC	_	9	conj	_	_
21	从来	_	AD	AD	_	24	advmod	_	_
22	也	_	AD	AD	_	24	advmod	_	_
23	不	_	AD	AD	_	24	neg	_	_
24	会	_	VV	VV	_	20	attr	_	_
25	放弃	_	VV	VV	_	24	comod	_	_
26	的	_	DEC	DEC	_	24	cpm	_	_
27	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 提出-01, arg0, x12 / 他)
(x11 / 提出-01, arg1, x13 / 问题)
(x15 / 会-02, arg0, x16 / 放弃-01)
(x15 / 会-02, manner, x18 / 从来)
(x2 / 问道-01, manner, x3 / 重复-01)
(x3 / 重复-01, arg0, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),放弃,放弃-01,false), Span(23,24,List(1),会,会-03,false), Span(22,23,List(2),不,不,false), Span(21,22,List(3),也,也,false), Span(20,21,List(4),从来,从来,false), Span(19,20,List(5),是,是-04,false), Span(17,18,List(6),问题,问题,false), Span(13,14,List(7),提出,提出-01,false), Span(12,13,List(8),他,他,false), Span(9,10,List(9),问道,问道-01,false), Span(8,9,List(10),重复,重复-01,false), Span(7,8,List(11),王子,王子,false), Span(6,7,List(12),小,小,false), Span(2,3,List(13),什么,什么,false)),Map(2 -> 不, 5 -> 是-04, 12 -> 小, 8 -> 他, 7 -> 提出-01, 1 -> 会-03, 4 -> 从来, 11 -> 王子, 6 -> 问题, 0 -> 放弃-01, 9 -> 问道-01, 3 -> 也, 10 -> 重复-01, 13 -> 什么),Map(问2 -> 问道-01, 从 -> 从来, 也 -> 也, 重 -> 重复-01, 放 -> 放弃-01, 王 -> 王子, 他 -> 他, 小 -> 小, 会 -> 会-03, 不 -> 不, 问 -> 问题, 什 -> 什么, 提 -> 提出-01, 是 -> 是-04))),[Ljava.lang.String;@e362c57,Annotation([Ljava.lang.String;@1c4ee95c,[Ljava.lang.String;@79c4715d,[Ljava.lang.String;@5aa360ea),Annotation([Ljava.lang.String;@6548bb7d,[Ljava.lang.String;@e27ba81,[Ledu.cmu.lti.nlp.amr.Dependency;@54336c81),Annotation([Ljava.lang.String;@1556f2dd,[Ljava.lang.String;@35e52059,[Ljava.lang.String;@62577d6),Annotation([Ljava.lang.String;@49bd54f7,[Ljava.lang.String;@6b5f8707,[Ledu.cmu.lti.nlp.amr.Entity;@772485dd))
AMR:
(不 / 不, manner, 也 / 也)
(会 / 会-03, example, 放 / 放弃-01)
(会 / 会-03, location, 不 / 不)
(提 / 提出-01, ARG4, 他 / 他)
(提 / 提出-01, manner, 问2 / 问道-01)
(提 / 提出-01, prep-through, 问 / 问题)
(是 / 是-04, duration, 从 / 从来)
(是 / 是-04, location, 不 / 不)
(王 / 王子, mod, 小 / 小)
(重 / 重复-01, purpose, 什 / 什么)
(重 / 重复-01, topic, 王 / 王子)
(问 / 问题, purpose, 是 / 是-04)
(问2 / 问道-01, manner, 重 / 重复-01)

Decoded in 57,695 microseconds
Sentence: 这 位 实业家 抬 起 头 ， 说 ：

Spans:
Span 2-3:  实业家 => 实业家
Span 7-8:  说 => 说-02
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  实业家 => 实业家
Oracle Span 7-8:  说 => 说-01
Oracle Span 0-1:  这 => 这

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	实业家	_	NN	NN	_	5	nsubj	_	_
4	抬	_	AD	AD	_	5	advmod	_	_
5	起	_	VV	VV	_	0	root	_	_
6	头	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	说	_	VV	VV	_	5	conj	_	_
9	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 实业家, mod, x12 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(2,3,List(1),实业家,实业家,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 实业家, 0 -> 说-02),Map(这 -> 这, 实 -> 实业家, 说 -> 说-02))),[Ljava.lang.String;@5a12c728,Annotation([Ljava.lang.String;@79ab3a71,[Ljava.lang.String;@6e5bfdfc,[Ljava.lang.String;@3d829787),Annotation([Ljava.lang.String;@71652c98,[Ljava.lang.String;@51bde877,[Ledu.cmu.lti.nlp.amr.Dependency;@60b85ba1),Annotation([Ljava.lang.String;@492fc69e,[Ljava.lang.String;@117632cf,[Ljava.lang.String;@2fb68ec6),Annotation([Ljava.lang.String;@d71adc2,[Ljava.lang.String;@3add81c4,[Ledu.cmu.lti.nlp.amr.Entity;@1a1d3c1a))
AMR:
(实 / 实业家, mod, 这 / 这)
(说 / 说-02, degree, 实 / 实业家)

Decoded in 5,134 microseconds
Sentence: “ 我 住 在 这个 星球 上 五十四 年 以来 ， 只 被 打搅 过 三 次 。

Spans:
Span 2-3:  住 => 住-01
Span 11-12:  只 => 只
Span 3-4:  在 => 在-01
Span 8-9:  年 => 年
Span 1-2:  我 => 我
Span 13-14:  打搅 => 打搅-01
Span 5-6:  星球 => 星球
Span 14-15:  过 => 过-01
Span 4-5:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  住 => 住-01
Oracle Span 11-12:  只 => 只
Oracle Span 8-9:  年 => (temporal-quantity :unit 年)
Oracle Span 1-2:  我 => 我
Oracle Span 13-14:  打搅 => 打搅-01
Oracle Span 5-6:  星球 => 星球

Extra span: 过 => 过-01
Incorrect span: 年 => 年
Extra span: 这个 => 这个
Extra span: 在 => 在-01
Missing span: 年 => (temporal-quantity :unit 年)
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	住	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这个	_	NN	NN	_	6	nn	_	_
6	星球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	4	plmod	_	_
8	五十四	_	CD	CD	_	9	nummod	_	_
9	年	_	M	M	_	10	lobj	_	_
10	以来	_	LC	LC	_	14	loc	_	_
11	,	_	PU	PU	_	14	punct	_	_
12	只	_	AD	AD	_	14	advmod	_	_
13	被	_	SB	SB	_	14	pass	_	_
14	打搅	_	VV	VV	_	3	conj	_	_
15	过	_	AS	AS	_	14	asp	_	_
16	三	_	CD	CD	_	17	nummod	_	_
17	次	_	M	M	_	14	dep	_	_
18	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x19 / 打搅-01, arg1, x20 / 我)
(x19 / 打搅-01, duration, x24 / temporal-quantity)
(x19 / 打搅-01, manner, x22 / 只)
(x24 / temporal-quantity, unit, x31 / 年)
(x27 / 住-01, arg1, x29 / 星球)
(x27 / 住-01, duration, x24 / temporal-quantity)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),过,过-01,false), Span(13,14,List(1),打搅,打搅-01,false), Span(11,12,List(2),只,只,false), Span(8,9,List(3),年,年,false), Span(5,6,List(4),星球,星球,false), Span(4,5,List(5),这个,这个,false), Span(3,4,List(6),在,在-01,false), Span(2,3,List(7),住,住-01,false), Span(1,2,List(8),我,我,false)),Map(2 -> 只, 5 -> 这个, 8 -> 我, 7 -> 住-01, 1 -> 打搅-01, 4 -> 星球, 6 -> 在-01, 0 -> 过-01, 3 -> 年),Map(在 -> 在-01, 星 -> 星球, 我 -> 我, 这 -> 这个, 打 -> 打搅-01, 过 -> 过-01, 年 -> 年, 只 -> 只, 住 -> 住-01))),[Ljava.lang.String;@1c65121,Annotation([Ljava.lang.String;@159e366,[Ljava.lang.String;@57dc9128,[Ljava.lang.String;@24528a25),Annotation([Ljava.lang.String;@17ae98d7,[Ljava.lang.String;@59221b97,[Ledu.cmu.lti.nlp.amr.Dependency;@6ac4944a),Annotation([Ljava.lang.String;@5a772895,[Ljava.lang.String;@39fc6b2c,[Ljava.lang.String;@704b2127),Annotation([Ljava.lang.String;@3ee39da0,[Ljava.lang.String;@5d332969,[Ledu.cmu.lti.nlp.amr.Entity;@7cc9ce8))
AMR:
(住 / 住-01, degree, 我 / 我)
(住 / 住-01, purpose, 在 / 在-01)
(打 / 打搅-01, degree, 在 / 在-01)
(打 / 打搅-01, location, 年 / 年)
(打 / 打搅-01, manner, 只 / 只)
(星 / 星球, mod, 这 / 这个)
(过 / 过-01, degree, 打 / 打搅-01)
(这 / 这个, location, 在 / 在-01)

Decoded in 24,565 microseconds
Sentence: 第一 次 是 二十二 年 前 ， 不 知 从 哪里 跑来 了 一 只 金龟子 来 打搅 我 。

Spans:
Span 7-8:  不 => 不
Span 5-6:  前 => 前
Span 14-15:  只 => 只
Span 4-5:  年 => 年
Span 18-19:  我 => 我
Span 17-18:  打搅 => 打搅-01
Span 2-3:  是 => 是-04
Span 16-17:  来 => 来-06
Span 8-9:  知 => 知-01
Span 11-12:  跑来 => 跑来-01
Span 15-16:  金龟子 => 金龟子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  前 => 前
Oracle Span 4-5:  年 => (temporal-quantity :unit 年)
Oracle Span 18-19:  我 => 我
Oracle Span 17-18:  打搅 => 打搅-01
Oracle Span 8-9:  知 => 知-01
Oracle Span 11-12:  跑来 => 跑来-01
Oracle Span 15-16:  金龟子 => 金龟子

Extra span: 来 => 来-06
Extra span: 只 => 只
Extra span: 不 => 不
Incorrect span: 年 => 年
Extra span: 是 => 是-04
Missing span: 年 => (temporal-quantity :unit 年)
Dependencies:
1	第一	_	OD	OD	_	2	ordmod	_	_
2	次	_	M	M	_	3	dep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	二十二	_	CD	CD	_	5	nummod	_	_
5	年	_	M	M	_	6	lobj	_	_
6	前	_	LC	LC	_	9	loc	_	_
7	,	_	PU	PU	_	9	punct	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	知	_	VV	VV	_	3	ccomp	_	_
10	从	_	P	P	_	18	prep	_	_
11	哪里	_	AD	AD	_	12	advmod	_	_
12	跑来	_	VV	VV	_	17	lccomp	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	只	_	M	M	_	16	clf	_	_
16	金龟子	_	NN	NN	_	12	dobj	_	_
17	来	_	LC	LC	_	10	plmod	_	_
18	打搅	_	VV	VV	_	9	ccomp	_	_
19	我	_	PN	PN	_	18	dobj	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x25 / 打搅-01, arg0, x27 / 金龟子)
(x25 / 打搅-01, arg1, x32 / 我)
(x25 / 打搅-01, time, x33 / 前)
(x28 / 跑来-01, arg0, x27 / 金龟子)
(x33 / 前, quant, x35 / temporal-quantity)
(x35 / temporal-quantity, unit, x37 / 年)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),我,我,false), Span(17,18,List(1),打搅,打搅-01,false), Span(16,17,List(2),来,来-06,false), Span(15,16,List(3),金龟子,金龟子,false), Span(14,15,List(4),只,只,false), Span(11,12,List(5),跑来,跑来-01,false), Span(8,9,List(6),知,知-01,false), Span(7,8,List(7),不,不,false), Span(5,6,List(8),前,前,false), Span(4,5,List(9),年,年,false), Span(2,3,List(10),是,是-04,false)),Map(2 -> 来-06, 5 -> 跑来-01, 8 -> 前, 7 -> 不, 1 -> 打搅-01, 4 -> 只, 6 -> 知-01, 9 -> 年, 0 -> 我, 10 -> 是-04, 3 -> 金龟子),Map(来 -> 来-06, 我 -> 我, 跑 -> 跑来-01, 打 -> 打搅-01, 年 -> 年, 不 -> 不, 只 -> 只, 知 -> 知-01, 前 -> 前, 是 -> 是-04, 金 -> 金龟子))),[Ljava.lang.String;@2e27d72f,Annotation([Ljava.lang.String;@c0b41d6,[Ljava.lang.String;@4837595f,[Ljava.lang.String;@2bffa76d),Annotation([Ljava.lang.String;@3b718392,[Ljava.lang.String;@6d2260db,[Ledu.cmu.lti.nlp.amr.Dependency;@1f2d2181),Annotation([Ljava.lang.String;@49bf29c6,[Ljava.lang.String;@7ee55e70,[Ljava.lang.String;@3fcdcf),Annotation([Ljava.lang.String;@7668d560,[Ljava.lang.String;@46292372,[Ledu.cmu.lti.nlp.amr.Entity;@126be319))
AMR:
(不 / 不, ARG4, 前 / 前)
(前 / 前, quant, 年 / 年)
(打 / 打搅-01, time, 前 / 前)
(打 / 打搅-01, value, 我 / 我)
(是 / 是-04, ARG0, 前 / 前)
(来 / 来-06, ARG1, 打 / 打搅-01)
(来 / 来-06, ARG4, 金 / 金龟子)
(知 / 知-01, manner, 不 / 不)
(跑 / 跑来-01, ARG0, 只 / 只)
(金 / 金龟子, ARG4, 只 / 只)

Decoded in 41,237 microseconds
Sentence: 它 发出 一 种 可怕 的 噪音 ， 使 我 在 一 笔 帐目 中 出 了 四 个 差错 。

Spans:
Span 8-9:  使 => 使-01
Span 15-16:  出 => 出-04
Span 1-2:  发出 => 发出-01
Span 4-5:  可怕 => 可怕-01
Span 6-7:  噪音 => 噪音
Span 10-11:  在 => 在-01
Span 0-1:  它 => 它
Span 19-20:  差错 => 差错
Span 9-10:  我 => 我
Span 3-4:  种 => 种
Span 12-13:  笔 => 笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  出 => 出-01
Oracle Span 1-2:  发出 => 发出-02
Oracle Span 4-5:  可怕 => 可怕
Oracle Span 6-7:  噪音 => 噪音
Oracle Span 0-1:  它 => 它
Oracle Span 19-20:  差错 => 差错
Oracle Span 9-10:  我 => 我
Oracle Span 3-4:  种 => 种
Oracle Span 12-13:  笔 => 笔

Incorrect span: 出 => 出-04
Extra span: 在 => 在-01
Extra span: 使 => 使-01
Incorrect span: 可怕 => 可怕-01
Incorrect span: 发出 => 发出-01
Missing span: 出 => 出-01
Missing span: 发出 => 发出-02
Missing span: 可怕 => 可怕
Dependencies:
1	它	_	PN	PN	_	2	nsubj	_	_
2	发出	_	VV	VV	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	种	_	M	M	_	5	clf	_	_
5	可怕	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	噪音	_	NN	NN	_	2	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	使	_	VV	VV	_	2	conj	_	_
10	我	_	PN	PN	_	9	dobj	_	_
11	在	_	P	P	_	16	prep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	笔	_	M	M	_	14	clf	_	_
14	帐目	_	NN	NN	_	15	lobj	_	_
15	中	_	LC	LC	_	11	plmod	_	_
16	出	_	VV	VV	_	9	dep	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	四	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	20	clf	_	_
20	差错	_	NN	NN	_	16	dobj	_	_
21	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x16 / 出-01, arg0, x18 / 我)
(x16 / 出-01, arg1, x19 / 差错)
(x16 / 出-01, cause, x24 / 发出-02)
(x24 / 发出-02, arg0, x25 / 它)
(x24 / 发出-02, arg1, x26 / 噪音)
(x26 / 噪音, mod, x27 / 可怕)
(x26 / 噪音, unit, x29 / 种)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),差错,差错,false), Span(15,16,List(1),出,出-04,false), Span(12,13,List(2),笔,笔,false), Span(10,11,List(3),在,在-01,false), Span(9,10,List(4),我,我,false), Span(8,9,List(5),使,使-01,false), Span(6,7,List(6),噪音,噪音,false), Span(4,5,List(7),可怕,可怕-01,false), Span(3,4,List(8),种,种,false), Span(1,2,List(9),发出,发出-01,false), Span(0,1,List(10),它,它,false)),Map(2 -> 笔, 5 -> 使-01, 8 -> 种, 7 -> 可怕-01, 1 -> 出-04, 4 -> 我, 6 -> 噪音, 9 -> 发出-01, 0 -> 差错, 10 -> 它, 3 -> 在-01),Map(发 -> 发出-01, 在 -> 在-01, 笔 -> 笔, 我 -> 我, 它 -> 它, 差 -> 差错, 出 -> 出-04, 种 -> 种, 噪 -> 噪音, 使 -> 使-01, 可 -> 可怕-01))),[Ljava.lang.String;@6c44052e,Annotation([Ljava.lang.String;@5c371e13,[Ljava.lang.String;@530a8454,[Ljava.lang.String;@1e34c607),Annotation([Ljava.lang.String;@5215cd9a,[Ljava.lang.String;@36b6964d,[Ledu.cmu.lti.nlp.amr.Dependency;@31198ceb),Annotation([Ljava.lang.String;@9257031,[Ljava.lang.String;@75201592,[Ljava.lang.String;@7726e185),Annotation([Ljava.lang.String;@aa5455e,[Ljava.lang.String;@282308c3,[Ledu.cmu.lti.nlp.amr.Entity;@5dda14d0))
AMR:
(使 / 使-01, value, 我 / 我)
(出 / 出-04, ARG3, 在 / 在-01)
(出 / 出-04, prep-for, 差 / 差错)
(出 / 出-04, time, 发 / 发出-01)
(发 / 发出-01, subset, 噪 / 噪音)
(发 / 发出-01, value, 它 / 它)
(噪 / 噪音, mod, 可 / 可怕-01)
(噪 / 噪音, unit, 种 / 种)
(在 / 在-01, ARG4, 使 / 使-01)
(笔 / 笔, timezone, 在 / 在-01)

Decoded in 38,639 microseconds
Sentence: 第二 次 ， 在 十一 年 前 ， 是 风湿病 发作 ， 因为 我 缺乏 锻炼 所 致 。

Spans:
Span 6-7:  前 => 前
Span 10-11:  发作 => 发作-01
Span 3-4:  在 => 在-01
Span 5-6:  年 => 年
Span 13-14:  我 => 我
Span 8-9:  是 => 是-04
Span 14-15:  缺乏 => 缺乏-01
Span 15-16:  锻炼 => 锻炼-01
Span 9-10:  风湿病 => 风湿病

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  前 => 前
Oracle Span 10-11:  发作 => 发作-01
Oracle Span 5-6:  年 => (temporal-quantity :unit 年)
Oracle Span 13-14:  我 => 我
Oracle Span 14-15:  缺乏 => 缺乏-01
Oracle Span 15-16:  锻炼 => 锻炼-01
Oracle Span 9-10:  风湿病 => 风湿病

Extra span: 是 => 是-04
Incorrect span: 年 => 年
Extra span: 在 => 在-01
Missing span: 年 => (temporal-quantity :unit 年)
Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	次	_	M	M	_	9	nsubj	_	_
3	,	_	PU	PU	_	9	punct	_	_
4	在	_	P	P	_	9	prep	_	_
5	十一	_	CD	CD	_	6	nummod	_	_
6	年	_	M	M	_	7	lobj	_	_
7	前	_	LC	LC	_	4	plmod	_	_
8	,	_	PU	PU	_	9	punct	_	_
9	是	_	VC	VC	_	0	root	_	_
10	风湿病	_	NN	NN	_	9	attr	_	_
11	发作	_	VV	VV	_	9	conj	_	_
12	,	_	PU	PU	_	9	punct	_	_
13	因为	_	P	P	_	18	prep	_	_
14	我	_	PN	PN	_	15	nsubj	_	_
15	缺乏	_	VV	VV	_	13	pccomp	_	_
16	锻炼	_	NN	NN	_	15	dobj	_	_
17	所	_	MSP	MSP	_	18	prtmod	_	_
18	致	_	VV	VV	_	9	dep	_	_
19	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 发作-01, arg0, x2 / 风湿病)
(x0 / 发作-01, cause, x3 / 缺乏-01)
(x0 / 发作-01, time, x15 / 前)
(x15 / 前, quant, x18 / temporal-quantity)
(x18 / temporal-quantity, unit, x20 / 年)
(x3 / 缺乏-01, arg0, x4 / 我)
(x3 / 缺乏-01, arg1, x5 / 锻炼-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),锻炼,锻炼-01,false), Span(14,15,List(1),缺乏,缺乏-01,false), Span(13,14,List(2),我,我,false), Span(10,11,List(3),发作,发作-01,false), Span(9,10,List(4),风湿病,风湿病,false), Span(8,9,List(5),是,是-04,false), Span(6,7,List(6),前,前,false), Span(5,6,List(7),年,年,false), Span(3,4,List(8),在,在-01,false)),Map(2 -> 我, 5 -> 是-04, 8 -> 在-01, 7 -> 年, 1 -> 缺乏-01, 4 -> 风湿病, 6 -> 前, 0 -> 锻炼-01, 3 -> 发作-01),Map(发 -> 发作-01, 在 -> 在-01, 我 -> 我, 缺 -> 缺乏-01, 年 -> 年, 风 -> 风湿病, 锻 -> 锻炼-01, 前 -> 前, 是 -> 是-04))),[Ljava.lang.String;@1db0ec27,Annotation([Ljava.lang.String;@3d9fc57a,[Ljava.lang.String;@d4ab71a,[Ljava.lang.String;@3b4ef7),Annotation([Ljava.lang.String;@1af05b03,[Ljava.lang.String;@5987e932,[Ledu.cmu.lti.nlp.amr.Dependency;@1ad777f),Annotation([Ljava.lang.String;@5bbbdd4b,[Ljava.lang.String;@438bad7c,[Ljava.lang.String;@25230246),Annotation([Ljava.lang.String;@4fdf8f12,[Ljava.lang.String;@4a8b5227,[Ledu.cmu.lti.nlp.amr.Entity;@54f5f647))
AMR:
(前 / 前, quant, 年 / 年)
(发 / 发作-01, ARG4, 是 / 是-04)
(发 / 发作-01, time, 缺 / 缺乏-01)
(在 / 在-01, ARG4, 年 / 年)
(是 / 是-04, ARG1, 风 / 风湿病)
(是 / 是-04, ARG4, 前 / 前)
(缺 / 缺乏-01, extent, 锻 / 锻炼-01)
(缺 / 缺乏-01, value, 我 / 我)

Decoded in 28,345 microseconds
Sentence: 我 没有 功夫 闲逛 。

Spans:
Span 2-3:  功夫 => 功夫
Span 0-1:  我 => 我
Span 3-4:  闲逛 => 闲逛-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  功夫 => 功夫
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  闲逛 => 闲逛-01

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	功夫	_	NN	NN	_	4	nn	_	_
4	闲逛	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),闲逛,闲逛-01,false), Span(2,3,List(1),功夫,功夫,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 功夫, 0 -> 闲逛-01),Map(我 -> 我, 闲 -> 闲逛-01, 功 -> 功夫))),[Ljava.lang.String;@6979efad,Annotation([Ljava.lang.String;@5a6d5a8f,[Ljava.lang.String;@4a67318f,[Ljava.lang.String;@315ba14a),Annotation([Ljava.lang.String;@17f9344b,[Ljava.lang.String;@27f0ad19,[Ledu.cmu.lti.nlp.amr.Dependency;@54e81b21),Annotation([Ljava.lang.String;@38d5b107,[Ljava.lang.String;@6650813a,[Ljava.lang.String;@44ea608c),Annotation([Ljava.lang.String;@50cf5a23,[Ljava.lang.String;@450794b4,[Ledu.cmu.lti.nlp.amr.Entity;@273c947f))
AMR:
(功 / 功夫, ARG5, 闲 / 闲逛-01)
(我 / 我, location, 功 / 功夫)

Decoded in 4,271 microseconds
Sentence: 我 可 是 个 严肃 的 人 。

Spans:
Span 4-5:  严肃 => 严肃
Span 6-7:  人 => 人
Span 1-2:  可 => 可-01
Span 0-1:  我 => 我
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  严肃 => 严肃-01
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  可 => 可-01
Oracle Span 0-1:  我 => 我

Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Missing span: 严肃 => 严肃-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	可	_	VV	VV	_	3	mmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	个	_	M	M	_	7	clf	_	_
5	严肃	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	人	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 人, domain, x5 / 我)
(x2 / 人, manner, x6 / 可-01)
(x2 / 人, mod, x4 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),人,人,false), Span(4,5,List(1),严肃,严肃,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),可,可-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 是-04, 1 -> 严肃, 4 -> 我, 0 -> 人, 3 -> 可-01),Map(我 -> 我, 严 -> 严肃, 人 -> 人, 是 -> 是-04, 可 -> 可-01))),[Ljava.lang.String;@30457e14,Annotation([Ljava.lang.String;@1af1347d,[Ljava.lang.String;@632aa1a3,[Ljava.lang.String;@20765ed5),Annotation([Ljava.lang.String;@3b582111,[Ljava.lang.String;@2899a8db,[Ledu.cmu.lti.nlp.amr.Dependency;@1e8823d2),Annotation([Ljava.lang.String;@c1a4620,[Ljava.lang.String;@76b0ae1b,[Ljava.lang.String;@130a0f66),Annotation([Ljava.lang.String;@4c432866,[Ljava.lang.String;@12365c88,[Ledu.cmu.lti.nlp.amr.Entity;@6105f8a3))
AMR:
(人 / 人, domain, 我 / 我)
(人 / 人, manner, 可 / 可-01)
(人 / 人, mod, 严 / 严肃)
(可 / 可-01, ARG1, 是 / 是-04)

Decoded in 9,160 microseconds
Sentence: 现在 … 这 是 第三 次 ！

Spans:
Span 3-4:  是 => 是-04
Span 0-1:  现在 => 现在
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  现在 => 现在
Oracle Span 2-3:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	现在	_	NT	NT	_	4	dep	_	_
2	…	_	PU	PU	_	4	dep	_	_
3	这	_	PN	PN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	第三	_	OD	OD	_	6	ordmod	_	_
6	次	_	M	M	_	4	attr	_	_
7	！	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),是,是-04,false), Span(2,3,List(1),这,这,false), Span(0,1,List(2),现在,现在,false)),Map(2 -> 现在, 1 -> 这, 0 -> 是-04),Map(这 -> 这, 是 -> 是-04, 现 -> 现在))),[Ljava.lang.String;@2237bada,Annotation([Ljava.lang.String;@77e2a6e2,[Ljava.lang.String;@5710768a,[Ljava.lang.String;@199e4c2b),Annotation([Ljava.lang.String;@6e0d4a8,[Ljava.lang.String;@64d7b720,[Ledu.cmu.lti.nlp.amr.Dependency;@30272916),Annotation([Ljava.lang.String;@5bb3d42d,[Ljava.lang.String;@5bf61e67,[Ljava.lang.String;@2c1dc8e),Annotation([Ljava.lang.String;@b273a59,[Ljava.lang.String;@4e7095ac,[Ledu.cmu.lti.nlp.amr.Entity;@251ebf23))
AMR:
(是 / 是-04, mod, 这 / 这)
(是 / 是-04, time, 现 / 现在)

Decoded in 4,376 microseconds
Sentence: 我 计算 的 结果 是 五亿一百万 … ”

Spans:
Span 0-1:  我 => 我
Span 4-5:  是 => 是-04
Span 3-4:  结果 => 结果-01
Span 1-2:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  结果 => 结果
Oracle Span 1-2:  计算 => 计算-01

Extra span: 是 => 是-04
Incorrect span: 结果 => 结果-01
Missing span: 结果 => 结果
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	计算	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	结果	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	五亿一百万	_	CD	CD	_	8	nummod	_	_
7	…	_	PU	PU	_	8	punct	_	_
8	”	_	CD	CD	_	5	attr	_	_

Oracle:
(x14 / 计算-01, arg0, x15 / 我)
(x14 / 计算-01, arg1, x13 / 结果)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),是,是-04,false), Span(3,4,List(1),结果,结果-01,false), Span(1,2,List(2),计算,计算-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 计算-01, 1 -> 结果-01, 0 -> 是-04, 3 -> 我),Map(我 -> 我, 计 -> 计算-01, 结 -> 结果-01, 是 -> 是-04))),[Ljava.lang.String;@29b732a2,Annotation([Ljava.lang.String;@1b70203f,[Ljava.lang.String;@51671b08,[Ljava.lang.String;@15051a0),Annotation([Ljava.lang.String;@1162410a,[Ljava.lang.String;@b09fac1,[Ledu.cmu.lti.nlp.amr.Dependency;@62df0ff3),Annotation([Ljava.lang.String;@61019f59,[Ljava.lang.String;@62e8f862,[Ljava.lang.String;@26f3d90c),Annotation([Ljava.lang.String;@3c49fab6,[Ljava.lang.String;@515f4131,[Ledu.cmu.lti.nlp.amr.Entity;@74518890))
AMR:
(是 / 是-04, manner, 结 / 结果-01)
(计 / 计算-01, beneficiary, 我 / 我)
(计 / 计算-01, mode, 结 / 结果-01)

Decoded in 6,333 microseconds
Sentence: “ 几百万 什么 ？ ”

Spans:
Span 2-3:  什么 => 什么

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span: 什么 => 什么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	几百万	_	CD	CD	_	3	nummod	_	_
3	什么	_	PN	PN	_	0	root	_	_
4	？	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),什么,什么,false)),Map(0 -> 什么),Map(什 -> 什么))),[Ljava.lang.String;@4c5204af,Annotation([Ljava.lang.String;@3f3ddbd9,[Ljava.lang.String;@14c053c6,[Ljava.lang.String;@6c2d4cc6),Annotation([Ljava.lang.String;@30865a90,[Ljava.lang.String;@6134ac4a,[Ledu.cmu.lti.nlp.amr.Dependency;@777c9dc9),Annotation([Ljava.lang.String;@71b1a49c,[Ljava.lang.String;@73e132e0,[Ljava.lang.String;@3773862a),Annotation([Ljava.lang.String;@2472c7d8,[Ljava.lang.String;@589b028e,[Ledu.cmu.lti.nlp.amr.Entity;@22175d4f))
AMR:


Decoded in 1,612 microseconds
Sentence: 这 位 实业家 知道 要 想 安宁 是 无望 的 了 ，

Spans:
Span 6-7:  安宁 => 安宁
Span 2-3:  实业家 => 实业家
Span 5-6:  想 => 想-05
Span 8-9:  无望 => 无望-01
Span 7-8:  是 => 是-04
Span 3-4:  知道 => 知道-01
Span 4-5:  要 => 要-02
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  安宁 => 安宁
Oracle Span 2-3:  实业家 => 实业家
Oracle Span 5-6:  想 => 想-02
Oracle Span 8-9:  无望 => 无望-01
Oracle Span 3-4:  知道 => 知道-01
Oracle Span 4-5:  要 => 要-03
Oracle Span 0-1:  这 => 这

Extra span: 是 => 是-04
Incorrect span: 想 => 想-05
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 想 => 想-02
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	位	_	M	M	_	1	clf	_	_
3	实业家	_	NN	NN	_	4	nsubj	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	想	_	VV	VV	_	4	ccomp	_	_
7	安宁	_	NN	NN	_	6	dobj	_	_
8	是	_	VC	VC	_	6	dobj	_	_
9	无望	_	VV	VV	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	了	_	SP	SP	_	8	dep	_	_
12	,	_	PU	PU	_	6	punct	_	_
13	是	_	VC	VC	_	6	range	_	_
14	实业家	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 实业家)
(x0 / 知道-01, arg1, x11 / 无望-01)
(x11 / 无望-01, arg1, x12 / 要-03)
(x12 / 要-03, arg0, x13 / 想-02)
(x13 / 想-02, arg1, x14 / 安宁)
(x2 / 实业家, mod, x3 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),无望,无望-01,false), Span(7,8,List(1),是,是-04,false), Span(6,7,List(2),安宁,安宁,false), Span(5,6,List(3),想,想-05,false), Span(4,5,List(4),要,要-02,false), Span(3,4,List(5),知道,知道-01,false), Span(2,3,List(6),实业家,实业家,false), Span(0,1,List(7),这,这,false)),Map(2 -> 安宁, 5 -> 知道-01, 7 -> 这, 1 -> 是-04, 4 -> 要-02, 6 -> 实业家, 0 -> 无望-01, 3 -> 想-05),Map(这 -> 这, 要 -> 要-02, 安 -> 安宁, 无 -> 无望-01, 实 -> 实业家, 知 -> 知道-01, 想 -> 想-05, 是 -> 是-04))),[Ljava.lang.String;@9fecdf1,Annotation([Ljava.lang.String;@3b809711,[Ljava.lang.String;@3b0f7d9d,[Ljava.lang.String;@236ab296),Annotation([Ljava.lang.String;@5c84624f,[Ljava.lang.String;@63034ed1,[Ledu.cmu.lti.nlp.amr.Dependency;@232024b9),Annotation([Ljava.lang.String;@55a8dc49,[Ljava.lang.String;@2a415aa9,[Ljava.lang.String;@53cdecf6),Annotation([Ljava.lang.String;@71ea1fda,[Ljava.lang.String;@62b3df3a,[Ledu.cmu.lti.nlp.amr.Entity;@420745d7))
AMR:
(实 / 实业家, mod, 这 / 这)
(想 / 想-05, manner, 安 / 安宁)
(想 / 想-05, manner, 是 / 是-04)
(是 / 是-04, manner, 无 / 无望-01)
(知 / 知道-01, degree, 实 / 实业家)
(要 / 要-02, manner, 想 / 想-05)
(要 / 要-02, manner, 知 / 知道-01)

Decoded in 21,349 microseconds
Sentence: 就 说道 ： “ 几百万 个 小 东西 ， 这些 小 东西 有时 出现 在 天空 中 。 ”

Spans:
Span 11-12:  东西 => 东西
Span 7-8:  东西 => 东西
Span 13-14:  出现 => 出现-01
Span 14-15:  在 => 在-01
Span 15-16:  天空 => 天空
Span 10-11:  小 => 小
Span 6-7:  小 => 小
Span 0-1:  就 => 就-01
Span 12-13:  有时 => 有时
Span 1-2:  说道 => 说道
Span 9-10:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  东西 => 东西
Oracle Span 13-14:  出现 => 出现-01
Oracle Span 15-16:  天空 => 天空
Oracle Span 6-7:  小 => 小-01
Oracle Span 0-1:  就 => 就-01
Oracle Span 12-13:  有时 => 有时
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 9-10:  这些 => 这些

Extra span: 在 => 在-01
Extra span: 东西 => 东西
Extra span: 小 => 小
Incorrect span: 小 => 小
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 小 => 小-01
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	14	punct	_	_
5	几百万	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	东西	_	NN	NN	_	14	nsubj	_	_
9	,	_	PU	PU	_	14	punct	_	_
10	这些	_	DT	DT	_	12	det	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	东西	_	NN	NN	_	14	nsubj	_	_
13	有时	_	AD	AD	_	14	advmod	_	_
14	出现	_	VV	VV	_	2	ccomp	_	_
15	在	_	P	P	_	14	prep	_	_
16	天空	_	NN	NN	_	17	lobj	_	_
17	中	_	LC	LC	_	15	plmod	_	_
18	。	_	PU	PU	_	2	punct	_	_
19	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说道-01, manner, x2 / 就-01)
(x4 / 东西, mod, x5 / 小-01)
(x7 / 出现-01, arg0, x8 / 天空)
(x7 / 出现-01, time, x11 / 有时)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),天空,天空,false), Span(14,15,List(1),在,在-01,false), Span(13,14,List(2),出现,出现-01,false), Span(12,13,List(3),有时,有时,false), Span(11,12,List(4),东西,东西,false), Span(10,11,List(5),小,小,false), Span(9,10,List(6),这些,这些,false), Span(7,8,List(7),东西,东西,false), Span(6,7,List(8),小,小,false), Span(1,2,List(9),说道,说道,false), Span(0,1,List(10),就,就-01,false)),Map(2 -> 出现-01, 5 -> 小, 8 -> 小, 7 -> 东西, 1 -> 在-01, 4 -> 东西, 6 -> 这些, 9 -> 说道, 0 -> 天空, 10 -> 就-01, 3 -> 有时),Map(就 -> 就-01, 东2 -> 东西, 在 -> 在-01, 这 -> 这些, 小 -> 小, 东 -> 东西, 出 -> 出现-01, 天 -> 天空, 说 -> 说道, 小2 -> 小, 有 -> 有时))),[Ljava.lang.String;@7e11ab3d,Annotation([Ljava.lang.String;@5fa47fea,[Ljava.lang.String;@2392212b,[Ljava.lang.String;@5b43e173),Annotation([Ljava.lang.String;@28f8e165,[Ljava.lang.String;@545f80bf,[Ledu.cmu.lti.nlp.amr.Dependency;@66f66866),Annotation([Ljava.lang.String;@22fa55b2,[Ljava.lang.String;@4d666b41,[Ljava.lang.String;@6594402a),Annotation([Ljava.lang.String;@30f4b1a6,[Ljava.lang.String;@405325cf,[Ledu.cmu.lti.nlp.amr.Entity;@3e1162e7))
AMR:
(东 / 东西, mod, 小 / 小)
(东 / 东西, mod, 这 / 这些)
(东2 / 东西, domain, 说 / 说道)
(东2 / 东西, mod, 小2 / 小)
(东2 / 东西, quant, 东 / 东西)
(出 / 出现-01, prep-on-behalf, 东 / 东西)
(出 / 出现-01, time, 有 / 有时)
(在 / 在-01, manner, 出 / 出现-01)
(天 / 天空, manner, 在 / 在-01)
(说 / 说道, manner, 就 / 就-01)

Decoded in 33,307 microseconds
Sentence: “ 苍蝇 吗 ？ ”

Spans:
Span 1-2:  苍蝇 => 苍蝇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  苍蝇 => 苍蝇

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	苍蝇	_	VV	VV	_	0	root	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),苍蝇,苍蝇,false)),Map(0 -> 苍蝇),Map(苍 -> 苍蝇))),[Ljava.lang.String;@79c3f01f,Annotation([Ljava.lang.String;@6c2f1700,[Ljava.lang.String;@350b3a17,[Ljava.lang.String;@38600b),Annotation([Ljava.lang.String;@669d2b1b,[Ljava.lang.String;@721eb7df,[Ledu.cmu.lti.nlp.amr.Dependency;@1ea9f009),Annotation([Ljava.lang.String;@5d52e3ef,[Ljava.lang.String;@5298dead,[Ljava.lang.String;@553f3b6e),Annotation([Ljava.lang.String;@4c7a078,[Ljava.lang.String;@4e406694,[Ledu.cmu.lti.nlp.amr.Entity;@5ab9b447))
AMR:


Decoded in 1,657 microseconds
Sentence: “ 不 是 ，

Spans:
Span 1-2:  不 => 不
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  是 => 是-03

Incorrect span: 是 => 是-04
Extra span: 不 => 不
Missing span: 是 => 是-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),是,是-04,false), Span(1,2,List(1),不,不,false)),Map(1 -> 不, 0 -> 是-04),Map(不 -> 不, 是 -> 是-04))),[Ljava.lang.String;@76f10035,Annotation([Ljava.lang.String;@4f8caaf3,[Ljava.lang.String;@2b50150,[Ljava.lang.String;@15b986cd),Annotation([Ljava.lang.String;@6bb7cce7,[Ljava.lang.String;@41c62850,[Ledu.cmu.lti.nlp.amr.Dependency;@6b530eb9),Annotation([Ljava.lang.String;@328572f0,[Ljava.lang.String;@678040b3,[Ljava.lang.String;@17f460bb),Annotation([Ljava.lang.String;@64a1923a,[Ljava.lang.String;@7d2a6eac,[Ledu.cmu.lti.nlp.amr.Entity;@18ca3c62))
AMR:
(是 / 是-04, manner, 不 / 不)

Decoded in 2,561 microseconds
Sentence: 是 些 闪闪发亮 的 小 东西 。 ”

Spans:
Span 5-6:  东西 => 东西
Span 1-2:  些 => 些
Span 4-5:  小 => 小
Span 0-1:  是 => 是-04
Span 2-3:  闪闪发亮 => 闪闪发亮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  东西 => 东西
Oracle Span 1-2:  些 => 些
Oracle Span 4-5:  小 => 小-01
Oracle Span 2-3:  闪闪发亮 => 闪闪发亮

Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	些	_	CD	CD	_	3	nummod	_	_
3	闪闪发亮	_	NN	NN	_	6	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	东西	_	NN	NN	_	1	attr	_	_
7	。	_	PU	PU	_	1	punct	_	_
8	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x8 / 东西, mod, x10 / 闪闪发亮)
(x8 / 东西, mod, x9 / 小-01)
(x8 / 东西, quant, x11 / 些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),东西,东西,false), Span(4,5,List(1),小,小,false), Span(2,3,List(2),闪闪发亮,闪闪发亮,false), Span(1,2,List(3),些,些,false), Span(0,1,List(4),是,是-04,false)),Map(2 -> 闪闪发亮, 1 -> 小, 4 -> 是-04, 0 -> 东西, 3 -> 些),Map(闪 -> 闪闪发亮, 些 -> 些, 小 -> 小, 东 -> 东西, 是 -> 是-04))),[Ljava.lang.String;@2c0f7678,Annotation([Ljava.lang.String;@44d70181,[Ljava.lang.String;@6aa648b9,[Ljava.lang.String;@23c650a3),Annotation([Ljava.lang.String;@742d4e15,[Ljava.lang.String;@88a8218,[Ledu.cmu.lti.nlp.amr.Dependency;@50b1f030),Annotation([Ljava.lang.String;@4163f1cd,[Ljava.lang.String;@5fa05212,[Ljava.lang.String;@3e681bc),Annotation([Ljava.lang.String;@5c09d180,[Ljava.lang.String;@23aae55,[Ledu.cmu.lti.nlp.amr.Entity;@5f574cc2))
AMR:
(东 / 东西, mod, 小 / 小)
(东 / 东西, mod, 闪 / 闪闪发亮)
(些 / 些, quant, 是 / 是-04)
(闪 / 闪闪发亮, quant, 是 / 是-04)

Decoded in 8,078 microseconds
Sentence: “ 是 蜜蜂 吗 ？ ”

Spans:
Span 1-2:  是 => 是-04
Span 2-3:  蜜蜂 => 蜜蜂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  蜜蜂 => 蜜蜂

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	蜜蜂	_	NN	NN	_	2	attr	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),蜜蜂,蜜蜂,false), Span(1,2,List(1),是,是-04,false)),Map(1 -> 是-04, 0 -> 蜜蜂),Map(蜜 -> 蜜蜂, 是 -> 是-04))),[Ljava.lang.String;@680bddf5,Annotation([Ljava.lang.String;@7a9c84a5,[Ljava.lang.String;@2d83c5a5,[Ljava.lang.String;@48d7ad8b),Annotation([Ljava.lang.String;@7e053511,[Ljava.lang.String;@60222fd8,[Ledu.cmu.lti.nlp.amr.Dependency;@53bf7094),Annotation([Ljava.lang.String;@26f1249d,[Ljava.lang.String;@710b30ef,[Ljava.lang.String;@a68df9),Annotation([Ljava.lang.String;@28b576a9,[Ljava.lang.String;@7cf7aee,[Ledu.cmu.lti.nlp.amr.Entity;@2f6bbeb0))
AMR:
(蜜 / 蜜蜂, mod, 是 / 是-04)

Decoded in 2,659 microseconds
Sentence: “ 不 是 ，

Spans:
Span 1-2:  不 => 不
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  是 => 是-03

Incorrect span: 是 => 是-04
Extra span: 不 => 不
Missing span: 是 => 是-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),是,是-04,false), Span(1,2,List(1),不,不,false)),Map(1 -> 不, 0 -> 是-04),Map(不 -> 不, 是 -> 是-04))),[Ljava.lang.String;@1b1637e1,Annotation([Ljava.lang.String;@18151a14,[Ljava.lang.String;@64711bf2,[Ljava.lang.String;@169da7f2),Annotation([Ljava.lang.String;@3c1e23ff,[Ljava.lang.String;@ceb4bd2,[Ledu.cmu.lti.nlp.amr.Dependency;@60297f36),Annotation([Ljava.lang.String;@1bf0f6f6,[Ljava.lang.String;@56bc3fac,[Ljava.lang.String;@df4b72),Annotation([Ljava.lang.String;@2ba45490,[Ljava.lang.String;@37ff4054,[Ledu.cmu.lti.nlp.amr.Entity;@894858))
AMR:
(是 / 是-04, manner, 不 / 不)

Decoded in 2,466 microseconds
Sentence: 是 金黄色 的 小 东西 ， 这些 小 东西 叫 那些 懒汉们 胡思乱想 。

Spans:
Span 8-9:  东西 => 东西
Span 4-5:  东西 => 东西
Span 9-10:  叫 => 叫-06
Span 7-8:  小 => 小
Span 3-4:  小 => 小
Span 11-12:  懒汉们 => 懒汉们
Span 0-1:  是 => 是-04
Span 12-13:  胡思乱想 => 胡思乱想
Span 6-7:  这些 => 这些
Span 10-11:  那些 => 那些
Span 1-2:  金黄色 => 金黄色

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  东西 => 东西
Oracle Span 9-10:  叫 => 叫-04
Oracle Span 3-4:  小 => 小-01
Oracle Span 11-12:  懒汉们 => 懒汉们
Oracle Span 12-13:  胡思乱想 => 胡思乱想
Oracle Span 6-7:  这些 => 这些
Oracle Span 10-11:  那些 => 那些
Oracle Span 1-2:  金黄色 => 金黄色

Incorrect span: 叫 => 叫-06
Extra span: 东西 => 东西
Extra span: 小 => 小
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Missing span: 叫 => 叫-04
Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	金黄色	_	JJ	JJ	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	东西	_	NN	NN	_	1	attr	_	_
6	,	_	PU	PU	_	1	punct	_	_
7	这些	_	DT	DT	_	9	det	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	东西	_	NN	NN	_	10	nsubj	_	_
10	叫	_	VV	VV	_	1	dep	_	_
11	那些	_	DT	DT	_	13	det	_	_
12	懒汉们	_	NN	NN	_	13	nn	_	_
13	胡思乱想	_	NN	NN	_	10	dobj	_	_
14	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x10 / 懒汉们, mod, x11 / 那些)
(x3 / 东西, mod, x4 / 小-01)
(x3 / 东西, mod, x5 / 金黄色)
(x7 / 叫-04, arg1, x10 / 懒汉们)
(x7 / 叫-04, arg2, x12 / 胡思乱想)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),胡思乱想,胡思乱想,false), Span(11,12,List(1),懒汉们,懒汉们,false), Span(10,11,List(2),那些,那些,false), Span(9,10,List(3),叫,叫-06,false), Span(8,9,List(4),东西,东西,false), Span(7,8,List(5),小,小,false), Span(6,7,List(6),这些,这些,false), Span(4,5,List(7),东西,东西,false), Span(3,4,List(8),小,小,false), Span(1,2,List(9),金黄色,金黄色,false), Span(0,1,List(10),是,是-04,false)),Map(2 -> 那些, 5 -> 小, 8 -> 小, 7 -> 东西, 1 -> 懒汉们, 4 -> 东西, 6 -> 这些, 9 -> 金黄色, 0 -> 胡思乱想, 10 -> 是-04, 3 -> 叫-06),Map(东2 -> 东西, 这 -> 这些, 懒 -> 懒汉们, 叫 -> 叫-06, 小 -> 小, 东 -> 东西, 胡 -> 胡思乱想, 那 -> 那些, 是 -> 是-04, 金 -> 金黄色, 小2 -> 小))),[Ljava.lang.String;@7af707e0,Annotation([Ljava.lang.String;@737edcfa,[Ljava.lang.String;@3ecedf21,[Ljava.lang.String;@74cf8b28),Annotation([Ljava.lang.String;@36c54a56,[Ljava.lang.String;@3359c978,[Ledu.cmu.lti.nlp.amr.Dependency;@7ba63fe5),Annotation([Ljava.lang.String;@73386d72,[Ljava.lang.String;@6f330eb9,[Ljava.lang.String;@125c082e),Annotation([Ljava.lang.String;@584f5497,[Ljava.lang.String;@68ace111,[Ledu.cmu.lti.nlp.amr.Entity;@1f9d6c7b))
AMR:
(东 / 东西, mod, 小 / 小)
(东2 / 东西, mod, 小2 / 小)
(东2 / 东西, mod, 金 / 金黄色)
(叫 / 叫-06, ARG3, 小 / 小)
(叫 / 叫-06, ARG6, 懒 / 懒汉们)
(叫 / 叫-06, age, 是 / 是-04)
(叫 / 叫-06, snt3, 胡 / 胡思乱想)
(小 / 小, ARG3, 这 / 这些)
(懒 / 懒汉们, mod, 那 / 那些)
(是 / 是-04, ARG1, 金 / 金黄色)

Decoded in 43,957 microseconds
Sentence: 我 是 个 严肃 的 人 。

Spans:
Span 3-4:  严肃 => 严肃
Span 5-6:  人 => 人
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  我 => 我

Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Missing span: 严肃 => 严肃-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	6	clf	_	_
4	严肃	_	JJ	JJ	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	人	_	NN	NN	_	2	attr	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 人, domain, x3 / 我)
(x0 / 人, mod, x2 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),人,人,false), Span(3,4,List(1),严肃,严肃,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),我,我,false)),Map(2 -> 是-04, 1 -> 严肃, 0 -> 人, 3 -> 我),Map(我 -> 我, 严 -> 严肃, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@6df20ade,Annotation([Ljava.lang.String;@4fbb001b,[Ljava.lang.String;@4010d494,[Ljava.lang.String;@341a8659),Annotation([Ljava.lang.String;@4943defe,[Ljava.lang.String;@5eefa415,[Ledu.cmu.lti.nlp.amr.Dependency;@181d7f28),Annotation([Ljava.lang.String;@78d50a3c,[Ljava.lang.String;@2fb69ff6,[Ljava.lang.String;@cda4919),Annotation([Ljava.lang.String;@7f4d9395,[Ljava.lang.String;@2f19f2aa,[Ledu.cmu.lti.nlp.amr.Entity;@344b8190))
AMR:
(人 / 人, mod, 严 / 严肃)
(是 / 是-04, ARG1, 我 / 我)
(是 / 是-04, ARG4, 严 / 严肃)

Decoded in 6,635 microseconds
Sentence: 我 没有 时间 胡思乱想 。 ”

Spans:
Span 0-1:  我 => 我
Span 2-3:  时间 => 时间
Span 3-4:  胡思乱想 => 胡思乱想

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  时间 => 时间
Oracle Span 3-4:  胡思乱想 => 胡思乱想

Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	时间	_	NN	NN	_	4	nn	_	_
4	胡思乱想	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),胡思乱想,胡思乱想,false), Span(2,3,List(1),时间,时间,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 时间, 0 -> 胡思乱想),Map(我 -> 我, 胡 -> 胡思乱想, 时 -> 时间))),[Ljava.lang.String;@6a078481,Annotation([Ljava.lang.String;@79c5636f,[Ljava.lang.String;@1929425f,[Ljava.lang.String;@718607eb),Annotation([Ljava.lang.String;@27f3b6d6,[Ljava.lang.String;@757f675c,[Ledu.cmu.lti.nlp.amr.Dependency;@2617f816),Annotation([Ljava.lang.String;@676f0a60,[Ljava.lang.String;@5d10455d,[Ljava.lang.String;@535b8c24),Annotation([Ljava.lang.String;@4a951911,[Ljava.lang.String;@55b62629,[Ledu.cmu.lti.nlp.amr.Entity;@a53bb6f))
AMR:
(时 / 时间, poss, 我 / 我)
(胡 / 胡思乱想, poss, 时 / 时间)

Decoded in 3,895 microseconds
Sentence: “ 啊 ，

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@5e63cad,Annotation([Ljava.lang.String;@6759f091,[Ljava.lang.String;@33a053d,[Ljava.lang.String;@14a54ef6),Annotation([Ljava.lang.String;@20921b9b,[Ljava.lang.String;@867ba60,[Ledu.cmu.lti.nlp.amr.Dependency;@5ba745bc),Annotation([Ljava.lang.String;@654b72c0,[Ljava.lang.String;@55b5e331,[Ljava.lang.String;@6034e75d),Annotation([Ljava.lang.String;@15fc442,[Ljava.lang.String;@3f3c7bdb,[Ledu.cmu.lti.nlp.amr.Entity;@456abb66))
AMR:


Decoded in 1,256 microseconds
Sentence: 是 星星 吗 ？ ”

Spans:
Span 1-2:  星星 => 星星
Span 0-1:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  星星 => 星星

Extra span: 是 => 是-04
Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	星星	_	NN	NN	_	1	attr	_	_
3	吗	_	SP	SP	_	1	dep	_	_
4	？	_	PU	PU	_	1	punct	_	_
5	”	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),星星,星星,false), Span(0,1,List(1),是,是-04,false)),Map(1 -> 是-04, 0 -> 星星),Map(星 -> 星星, 是 -> 是-04))),[Ljava.lang.String;@2a3a299,Annotation([Ljava.lang.String;@7da10b5b,[Ljava.lang.String;@219f4597,[Ljava.lang.String;@31be6b49),Annotation([Ljava.lang.String;@2e16b08d,[Ljava.lang.String;@5b989dc7,[Ledu.cmu.lti.nlp.amr.Dependency;@70d8de),Annotation([Ljava.lang.String;@42561fba,[Ljava.lang.String;@595f4da5,[Ljava.lang.String;@46b695ec),Annotation([Ljava.lang.String;@408613cc,[Ljava.lang.String;@325f7fa9,[Ledu.cmu.lti.nlp.amr.Entity;@11ce2e22))
AMR:
(星 / 星星, quant, 是 / 是-04)

Decoded in 2,566 microseconds
Sentence: “ 对 了 ，

Spans:
Span 1-2:  对 => 对-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对 => 对-02

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	对	_	VV	VV	_	0	root	_	_
3	了	_	VV	VV	_	2	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),对,对-02,false)),Map(0 -> 对-02),Map(对 -> 对-02))),[Ljava.lang.String;@63a5d002,Annotation([Ljava.lang.String;@13cda7c9,[Ljava.lang.String;@5aa6202e,[Ljava.lang.String;@3af9aa66),Annotation([Ljava.lang.String;@771158fb,[Ljava.lang.String;@91c4a3f,[Ledu.cmu.lti.nlp.amr.Dependency;@62d0ac62),Annotation([Ljava.lang.String;@150d80c4,[Ljava.lang.String;@6826c41e,[Ljava.lang.String;@3003697),Annotation([Ljava.lang.String;@64d43929,[Ljava.lang.String;@1d269ed7,[Ledu.cmu.lti.nlp.amr.Entity;@437ebf59))
AMR:


Decoded in 1,432 microseconds
Sentence: 就 是 星星 。 ”

Spans:
Span 0-1:  就 => 就-01
Span 2-3:  星星 => 星星
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 2-3:  星星 => 星星

Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	星星	_	NN	NN	_	2	attr	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 星星, manner, x6 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),星星,星星,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),就,就-01,false)),Map(2 -> 就-01, 1 -> 是-04, 0 -> 星星),Map(就 -> 就-01, 星 -> 星星, 是 -> 是-04))),[Ljava.lang.String;@41c89d2f,Annotation([Ljava.lang.String;@410e94e,[Ljava.lang.String;@2d691f3d,[Ljava.lang.String;@1bdbf9be),Annotation([Ljava.lang.String;@1e7f2e0f,[Ljava.lang.String;@1da6ee17,[Ledu.cmu.lti.nlp.amr.Dependency;@78d39a69),Annotation([Ljava.lang.String;@3c818ac4,[Ljava.lang.String;@5b69d40d,[Ljava.lang.String;@71154f21),Annotation([Ljava.lang.String;@15f193b8,[Ljava.lang.String;@2516fc68,[Ledu.cmu.lti.nlp.amr.Entity;@304a9d7b))
AMR:
(星 / 星星, manner, 是 / 是-04)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 3,881 microseconds
Sentence: “ 你 要 拿 这 五亿 星星 做 什么 ？ ”

Spans:
Span 8-9:  什么 => 什么
Span 1-2:  你 => 你
Span 7-8:  做 => 做-04
Span 3-4:  拿 => 拿-02
Span 6-7:  星星 => 星星
Span 2-3:  要 => 要-02
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  做 => 做-01
Oracle Span 3-4:  拿 => 拿-07
Oracle Span 6-7:  星星 => 星星
Oracle Span 2-3:  要 => 要-03
Oracle Span 4-5:  这 => 这

Extra span: 什么 => 什么
Incorrect span: 做 => 做-04
Incorrect span: 拿 => 拿-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 拿 => 拿-07
Missing span: 做 => 做-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	拿	_	VV	VV	_	0	root	_	_
5	这	_	DT	DT	_	7	det	_	_
6	五亿	_	CD	CD	_	5	dep	_	_
7	星星	_	NN	NN	_	4	dobj	_	_
8	做	_	VV	VV	_	4	dep	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	？	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 要-03, arg0, x14 / 拿-07)
(x14 / 拿-07, arg0, x15 / 你)
(x14 / 拿-07, arg1, x16 / 星星)
(x14 / 拿-07, purpose, x19 / 做-01)
(x16 / 星星, mod, x17 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),什么,什么,false), Span(7,8,List(1),做,做-04,false), Span(6,7,List(2),星星,星星,false), Span(4,5,List(3),这,这,false), Span(3,4,List(4),拿,拿-02,false), Span(2,3,List(5),要,要-02,false), Span(1,2,List(6),你,你,false)),Map(2 -> 星星, 5 -> 要-02, 1 -> 做-04, 4 -> 拿-02, 6 -> 你, 0 -> 什么, 3 -> 这),Map(星 -> 星星, 要 -> 要-02, 这 -> 这, 你 -> 你, 拿 -> 拿-02, 做 -> 做-04, 什 -> 什么))),[Ljava.lang.String;@6bfdb014,Annotation([Ljava.lang.String;@72889280,[Ljava.lang.String;@606fc505,[Ljava.lang.String;@4aa3d36),Annotation([Ljava.lang.String;@2d140a7,[Ljava.lang.String;@347bdeef,[Ledu.cmu.lti.nlp.amr.Dependency;@2aa27288),Annotation([Ljava.lang.String;@7f34a967,[Ljava.lang.String;@77e80a5e,[Ljava.lang.String;@1d8e2eea),Annotation([Ljava.lang.String;@240139e1,[Ljava.lang.String;@7ea4d397,[Ledu.cmu.lti.nlp.amr.Entity;@49298ce7))
AMR:
(做 / 做-04, location, 星 / 星星)
(做 / 做-04, manner, 拿 / 拿-02)
(做 / 做-04, subset, 什 / 什么)
(星 / 星星, mod, 这 / 这)
(要 / 要-02, degree, 你 / 你)
(要 / 要-02, purpose, 拿 / 拿-02)

Decoded in 14,630 microseconds
Sentence: “ 五亿一百六十二万七百三十一 颗 星星 。

Spans:
Span 3-4:  星星 => 星星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  星星 => 星星

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	五亿一百六十二万七百三十一	_	CD	CD	_	3	nummod	_	_
3	颗	_	M	M	_	4	dep	_	_
4	星星	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),星星,星星,false)),Map(0 -> 星星),Map(星 -> 星星))),[Ljava.lang.String;@253c1256,Annotation([Ljava.lang.String;@8dfe921,[Ljava.lang.String;@503fbbc6,[Ljava.lang.String;@55f45b92),Annotation([Ljava.lang.String;@109f5dd8,[Ljava.lang.String;@67fe380b,[Ledu.cmu.lti.nlp.amr.Dependency;@4a325eb9),Annotation([Ljava.lang.String;@3dedb4a6,[Ljava.lang.String;@57f64f5e,[Ljava.lang.String;@415e0bcb),Annotation([Ljava.lang.String;@194152cf,[Ljava.lang.String;@49d98dc5,[Ledu.cmu.lti.nlp.amr.Entity;@2c30b71f))
AMR:


Decoded in 1,908 microseconds
Sentence: 我 是 严肃 的 人 ， 我 是 非常 精确 的 。 ”

Spans:
Span 2-3:  严肃 => 严肃
Span 4-5:  人 => 人
Span 6-7:  我 => 我
Span 0-1:  我 => 我
Span 7-8:  是 => 是-04
Span 1-2:  是 => 是-04
Span 9-10:  精确 => 精确-01
Span 8-9:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  严肃 => 严肃-01
Oracle Span 4-5:  人 => 人
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  精确 => 精确-01
Oracle Span 8-9:  非常 => 非常

Extra span: 是 => 是-04
Extra span: 我 => 我
Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Missing span: 严肃 => 严肃-01
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	严肃	_	JJ	JJ	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	人	_	NN	NN	_	2	attr	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	我	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	2	conj	_	_
9	非常	_	AD	AD	_	10	advmod	_	_
10	精确	_	VA	VA	_	8	attr	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	。	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 人, domain, x23 / 我)
(x21 / 人, mod, x22 / 严肃-01)
(x24 / 精确-01, degree, x25 / 非常)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),精确,精确-01,false), Span(8,9,List(1),非常,非常,false), Span(7,8,List(2),是,是-04,false), Span(6,7,List(3),我,我,false), Span(4,5,List(4),人,人,false), Span(2,3,List(5),严肃,严肃,false), Span(1,2,List(6),是,是-04,false), Span(0,1,List(7),我,我,false)),Map(2 -> 是-04, 5 -> 严肃, 7 -> 我, 1 -> 非常, 4 -> 人, 6 -> 是-04, 0 -> 精确-01, 3 -> 我),Map(我 -> 我, 我2 -> 我, 严 -> 严肃, 非 -> 非常, 人 -> 人, 精 -> 精确-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@1d81e101,Annotation([Ljava.lang.String;@ec50f54,[Ljava.lang.String;@bf71cec,[Ljava.lang.String;@22d6cac2),Annotation([Ljava.lang.String;@30cdae70,[Ljava.lang.String;@1654a892,[Ledu.cmu.lti.nlp.amr.Dependency;@2577d6c8),Annotation([Ljava.lang.String;@3163987e,[Ljava.lang.String;@6c000e0c,[Ljava.lang.String;@5f233b26),Annotation([Ljava.lang.String;@44f9779c,[Ljava.lang.String;@6974a715,[Ledu.cmu.lti.nlp.amr.Entity;@5e8a459))
AMR:
(严 / 严肃, degree, 是2 / 是-04)
(人 / 人, mod, 严 / 严肃)
(是 / 是-04, degree, 非 / 非常)
(是 / 是-04, manner, 我 / 我)
(是 / 是-04, prep-following, 人 / 人)
(是2 / 是-04, manner, 我2 / 我)
(精 / 精确-01, degree, 非 / 非常)

Decoded in 18,660 microseconds
Sentence: “ 你 拿 这些 星星 做 什么 ？ ”

Spans:
Span 6-7:  什么 => 什么
Span 1-2:  你 => 你
Span 5-6:  做 => 做-04
Span 2-3:  拿 => 拿-02
Span 4-5:  星星 => 星星
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  做 => 做-01
Oracle Span 2-3:  拿 => 拿-07
Oracle Span 4-5:  星星 => 星星
Oracle Span 3-4:  这些 => 这些

Extra span: 什么 => 什么
Incorrect span: 做 => 做-04
Incorrect span: 拿 => 拿-02
Missing span: 拿 => 拿-07
Missing span: 做 => 做-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	拿	_	VV	VV	_	0	root	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	星星	_	NN	NN	_	3	dobj	_	_
6	做	_	VV	VV	_	3	conj	_	_
7	什么	_	PN	PN	_	6	dobj	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 拿-07, arg0, x12 / 你)
(x11 / 拿-07, arg1, x13 / 星星)
(x11 / 拿-07, purpose, x15 / 做-01)
(x13 / 星星, mod, x14 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),什么,什么,false), Span(5,6,List(1),做,做-04,false), Span(4,5,List(2),星星,星星,false), Span(3,4,List(3),这些,这些,false), Span(2,3,List(4),拿,拿-02,false), Span(1,2,List(5),你,你,false)),Map(2 -> 星星, 5 -> 你, 1 -> 做-04, 4 -> 拿-02, 0 -> 什么, 3 -> 这些),Map(星 -> 星星, 这 -> 这些, 你 -> 你, 拿 -> 拿-02, 做 -> 做-04, 什 -> 什么))),[Ljava.lang.String;@43d455c9,Annotation([Ljava.lang.String;@4c9e9fb8,[Ljava.lang.String;@9ec531,[Ljava.lang.String;@40147317),Annotation([Ljava.lang.String;@210f0cc1,[Ljava.lang.String;@19542407,[Ledu.cmu.lti.nlp.amr.Dependency;@6f95cd51),Annotation([Ljava.lang.String;@c7a977f,[Ljava.lang.String;@55caeb35,[Ljava.lang.String;@6d868997),Annotation([Ljava.lang.String;@2c383e33,[Ljava.lang.String;@74a195a4,[Ledu.cmu.lti.nlp.amr.Entity;@76304b46))
AMR:
(做 / 做-04, location, 星 / 星星)
(做 / 做-04, manner, 拿 / 拿-02)
(做 / 做-04, subset, 什 / 什么)
(拿 / 拿-02, degree, 你 / 你)
(星 / 星星, mod, 这 / 这些)

Decoded in 11,190 microseconds
Sentence: “ 我 要 它 做 什么 ？ ”

Spans:
Span 5-6:  什么 => 什么
Span 4-5:  做 => 做-04
Span 3-4:  它 => 它
Span 1-2:  我 => 我
Span 2-3:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  做 => 做-01
Oracle Span 3-4:  它 => 它
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  要 => 要-04

Extra span: 什么 => 什么
Incorrect span: 做 => 做-04
Incorrect span: 要 => 要-02
Missing span: 要 => 要-04
Missing span: 做 => 做-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	要	_	VV	VV	_	0	root	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	做	_	VV	VV	_	3	ccomp	_	_
6	什么	_	PN	PN	_	5	dobj	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x9 / 要-04, arg0, x10 / 我)
(x9 / 要-04, arg1, x11 / 它)
(x9 / 要-04, arg2, x12 / 做-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),什么,什么,false), Span(4,5,List(1),做,做-04,false), Span(3,4,List(2),它,它,false), Span(2,3,List(3),要,要-02,false), Span(1,2,List(4),我,我,false)),Map(2 -> 它, 1 -> 做-04, 4 -> 我, 0 -> 什么, 3 -> 要-02),Map(我 -> 我, 要 -> 要-02, 它 -> 它, 做 -> 做-04, 什 -> 什么))),[Ljava.lang.String;@2fa3be26,Annotation([Ljava.lang.String;@4287d447,[Ljava.lang.String;@3af37506,[Ljava.lang.String;@4e6d7365),Annotation([Ljava.lang.String;@7c0da600,[Ljava.lang.String;@d4602a,[Ledu.cmu.lti.nlp.amr.Dependency;@21ae6e73),Annotation([Ljava.lang.String;@47dd778,[Ljava.lang.String;@15515c51,[Ljava.lang.String;@36a7abe1),Annotation([Ljava.lang.String;@64a896b0,[Ljava.lang.String;@e044b4a,[Ledu.cmu.lti.nlp.amr.Entity;@11a82d0f))
AMR:
(做 / 做-04, ARG3, 它 / 它)
(做 / 做-04, manner, 要 / 要-02)
(做 / 做-04, subset, 什 / 什么)
(要 / 要-02, beneficiary, 我 / 我)

Decoded in 8,299 microseconds
Sentence: “ 是 呀 。 ”

Spans:
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Incorrect span: 是 => 是-04
Missing span: 是 => 是-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	呀	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),是,是-04,false)),Map(0 -> 是-04),Map(是 -> 是-04))),[Ljava.lang.String;@1adb7478,Annotation([Ljava.lang.String;@3ae66c85,[Ljava.lang.String;@16943e88,[Ljava.lang.String;@4604b900),Annotation([Ljava.lang.String;@73d6d0c,[Ljava.lang.String;@e36bb2a,[Ledu.cmu.lti.nlp.amr.Dependency;@3961a41a),Annotation([Ljava.lang.String;@5a4ed68f,[Ljava.lang.String;@367795c7,[Ljava.lang.String;@d2387c8),Annotation([Ljava.lang.String;@3956b302,[Ljava.lang.String;@1500e009,[Ledu.cmu.lti.nlp.amr.Entity;@1fd386c3))
AMR:


Decoded in 1,812 microseconds
Sentence: “ 什么 也 不 做 。

Spans:
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 1-2:  什么 => 什么
Span 4-5:  做 => 做-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  什么 => 什么
Oracle Span 4-5:  做 => 做-04

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	什么	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	做	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 做-04, arg1, x9 / 什么)
(x7 / 做-04, manner, x10 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),做,做-04,false), Span(3,4,List(1),不,不,false), Span(2,3,List(2),也,也,false), Span(1,2,List(3),什么,什么,false)),Map(2 -> 也, 1 -> 不, 0 -> 做-04, 3 -> 什么),Map(也 -> 也, 不 -> 不, 做 -> 做-04, 什 -> 什么))),[Ljava.lang.String;@edf4f36,Annotation([Ljava.lang.String;@29d334c,[Ljava.lang.String;@100f9bbe,[Ljava.lang.String;@13e9f2e2),Annotation([Ljava.lang.String;@673bb956,[Ljava.lang.String;@cd7f1ae,[Ledu.cmu.lti.nlp.amr.Dependency;@60e949e1),Annotation([Ljava.lang.String;@3c4bc9fc,[Ljava.lang.String;@680362a,[Ljava.lang.String;@3569edd5),Annotation([Ljava.lang.String;@1f651cd8,[Ljava.lang.String;@7d0332e1,[Ledu.cmu.lti.nlp.amr.Entity;@7a356a0d))
AMR:
(不 / 不, mod, 什 / 什么)
(做 / 做-04, manner, 不 / 不)
(做 / 做-04, manner, 也 / 也)

Decoded in 6,384 microseconds
Sentence: 它们 都 是 属于 我 的 。 ”

Spans:
Span 0-1:  它们 => 它们
Span 3-4:  属于 => 属于-01
Span 4-5:  我 => 我
Span 2-3:  是 => 是-04
Span 1-2:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它们 => 它们
Oracle Span 3-4:  属于 => 属于-01
Oracle Span 4-5:  我 => 我
Oracle Span 1-2:  都 => 都

Extra span: 是 => 是-04
Dependencies:
1	它们	_	PN	PN	_	3	nsubj	_	_
2	都	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	属于	_	VV	VV	_	3	attr	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 属于-01, arg0, x9 / 它们)
(x7 / 属于-01, arg1, x10 / 我)
(x7 / 属于-01, manner, x8 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),我,我,false), Span(3,4,List(1),属于,属于-01,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),都,都,false), Span(0,1,List(4),它们,它们,false)),Map(2 -> 是-04, 1 -> 属于-01, 4 -> 它们, 0 -> 我, 3 -> 都),Map(属 -> 属于-01, 我 -> 我, 它 -> 它们, 都 -> 都, 是 -> 是-04))),[Ljava.lang.String;@c827db,Annotation([Ljava.lang.String;@377c68c6,[Ljava.lang.String;@538cd0f2,[Ljava.lang.String;@238ad8c),Annotation([Ljava.lang.String;@430fa4ef,[Ljava.lang.String;@1761de10,[Ledu.cmu.lti.nlp.amr.Dependency;@22df874e),Annotation([Ljava.lang.String;@654c1a54,[Ljava.lang.String;@5bdaf2ce,[Ljava.lang.String;@42d236fb),Annotation([Ljava.lang.String;@1ce93c18,[Ljava.lang.String;@19f21b6b,[Ledu.cmu.lti.nlp.amr.Entity;@1532c619))
AMR:
(属 / 属于-01, manner, 是 / 是-04)
(属 / 属于-01, year, 我 / 我)
(是 / 是-04, manner, 都 / 都)
(是 / 是-04, quant, 它 / 它们)

Decoded in 8,135 microseconds
Sentence: “ 星星 是 属于 你 的 ？ ”

Spans:
Span 4-5:  你 => 你
Span 3-4:  属于 => 属于-01
Span 1-2:  星星 => 星星
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 3-4:  属于 => 属于-01
Oracle Span 1-2:  星星 => 星星

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	星星	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	属于	_	VV	VV	_	3	attr	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 属于-01, arg0, x8 / 星星)
(x7 / 属于-01, arg1, x9 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),属于,属于-01,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),星星,星星,false)),Map(2 -> 是-04, 1 -> 属于-01, 0 -> 你, 3 -> 星星),Map(属 -> 属于-01, 星 -> 星星, 你 -> 你, 是 -> 是-04))),[Ljava.lang.String;@46044faa,Annotation([Ljava.lang.String;@1358b28e,[Ljava.lang.String;@1a78dacd,[Ljava.lang.String;@19f9d595),Annotation([Ljava.lang.String;@7de4a01f,[Ljava.lang.String;@2bfeb1ef,[Ledu.cmu.lti.nlp.amr.Dependency;@778ca8ef),Annotation([Ljava.lang.String;@208e9ef6,[Ljava.lang.String;@78b236a0,[Ljava.lang.String;@261d8190),Annotation([Ljava.lang.String;@34448e6c,[Ljava.lang.String;@60e9df3c,[Ledu.cmu.lti.nlp.amr.Entity;@907f2b7))
AMR:
(属 / 属于-01, manner, 是 / 是-04)
(属 / 属于-01, prep-through, 你 / 你)
(是 / 是-04, location, 星 / 星星)

Decoded in 6,167 microseconds
Sentence: “ 是 的 。 ”

Spans:
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Incorrect span: 是 => 是-04
Missing span: 是 => 是-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	的	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),是,是-04,false)),Map(0 -> 是-04),Map(是 -> 是-04))),[Ljava.lang.String;@435ce306,Annotation([Ljava.lang.String;@537b32ef,[Ljava.lang.String;@7dc51783,[Ljava.lang.String;@4b61d0c6),Annotation([Ljava.lang.String;@6f815e7f,[Ljava.lang.String;@65e7f52a,[Ledu.cmu.lti.nlp.amr.Dependency;@304b9f1a),Annotation([Ljava.lang.String;@75699e35,[Ljava.lang.String;@107e5441,[Ljava.lang.String;@4aeaadc1),Annotation([Ljava.lang.String;@263558c9,[Ljava.lang.String;@1f14f20c,[Ledu.cmu.lti.nlp.amr.Entity;@7daa61f3))
AMR:


Decoded in 1,548 microseconds
Sentence: “ 可是 我 已经 见到 过 一 个 国王 ， 他 … ”

Spans:
Span 10-11:  他 => 他
Span 8-9:  国王 => 国王
Span 3-4:  已经 => 已经
Span 2-3:  我 => 我
Span 4-5:  见到 => 见到-01
Span 5-6:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  国王 => 国王
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  见到 => 见到-01

Extra span: 他 => 他
Extra span: 过 => 过-01
Extra span: 已经 => 已经
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可是	_	AD	AD	_	5	advmod	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	已经	_	AD	AD	_	5	advmod	_	_
5	见到	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	国王	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	5	punct	_	_
11	他	_	PN	PN	_	12	dep	_	_
12	…	_	VV	VV	_	5	conj	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x17 / 见到-01, arg0, x18 / 我)
(x17 / 见到-01, arg1, x19 / 国王)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),他,他,false), Span(8,9,List(1),国王,国王,false), Span(5,6,List(2),过,过-01,false), Span(4,5,List(3),见到,见到-01,false), Span(3,4,List(4),已经,已经,false), Span(2,3,List(5),我,我,false)),Map(2 -> 过-01, 5 -> 我, 1 -> 国王, 4 -> 已经, 0 -> 他, 3 -> 见到-01),Map(已 -> 已经, 我 -> 我, 过 -> 过-01, 他 -> 他, 国 -> 国王, 见 -> 见到-01))),[Ljava.lang.String;@62315f22,Annotation([Ljava.lang.String;@6e4ea0bd,[Ljava.lang.String;@56f2bbea,[Ljava.lang.String;@78f9ed3e),Annotation([Ljava.lang.String;@1059754c,[Ljava.lang.String;@b0964b2,[Ledu.cmu.lti.nlp.amr.Dependency;@48e7b3d2),Annotation([Ljava.lang.String;@7f4037ed,[Ljava.lang.String;@24e8de5c,[Ljava.lang.String;@64040287),Annotation([Ljava.lang.String;@110844f6,[Ljava.lang.String;@6f89f665,[Ledu.cmu.lti.nlp.amr.Entity;@df1cff6))
AMR:
(国 / 国王, op, 过 / 过-01)
(国 / 国王, prep-through, 他 / 他)
(见 / 见到-01, example, 我 / 我)
(见 / 见到-01, time, 已 / 已经)
(过 / 过-01, time, 见 / 见到-01)

Decoded in 14,229 microseconds
Sentence: “ 国王 并不 占有 ， 他们 只是 进行 ‘ 统治 ’ 。

Spans:
Span 5-6:  他们 => 他们
Span 3-4:  占有 => 占有-01
Span 6-7:  只是 => 只是
Span 1-2:  国王 => 国王
Span 9-10:  统治 => 统治-01
Span 7-8:  进行 => 进行-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  占有 => 占有-01
Oracle Span 1-2:  国王 => 国王
Oracle Span 9-10:  统治 => 统治-01

Extra span: 进行 => 进行-01
Extra span: 只是 => 只是
Extra span: 他们 => 他们
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	国王	_	NN	NN	_	3	nsubj	_	_
3	并不	_	VV	VV	_	0	root	_	_
4	占有	_	VV	VV	_	3	ccomp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	他们	_	PN	PN	_	8	nsubj	_	_
7	只是	_	AD	AD	_	8	advmod	_	_
8	进行	_	VV	VV	_	3	conj	_	_
9	‘	_	PU	PU	_	10	punct	_	_
10	统治	_	NN	NN	_	8	dobj	_	_
11	’	_	PU	PU	_	10	punct	_	_
12	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x23 / 占有-01, arg0, x25 / 国王)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),统治,统治-01,false), Span(7,8,List(1),进行,进行-01,false), Span(6,7,List(2),只是,只是,false), Span(5,6,List(3),他们,他们,false), Span(3,4,List(4),占有,占有-01,false), Span(1,2,List(5),国王,国王,false)),Map(2 -> 只是, 5 -> 国王, 1 -> 进行-01, 4 -> 占有-01, 0 -> 统治-01, 3 -> 他们),Map(他 -> 他们, 国 -> 国王, 统 -> 统治-01, 只 -> 只是, 进 -> 进行-01, 占 -> 占有-01))),[Ljava.lang.String;@4925f4f5,Annotation([Ljava.lang.String;@1ad926d3,[Ljava.lang.String;@3a43d133,[Ljava.lang.String;@39ce27f2),Annotation([Ljava.lang.String;@5f2afe62,[Ljava.lang.String;@c96a4ea,[Ledu.cmu.lti.nlp.amr.Dependency;@28782602),Annotation([Ljava.lang.String;@60c16548,[Ljava.lang.String;@68105edc,[Ljava.lang.String;@511816c0),Annotation([Ljava.lang.String;@38b972d7,[Ljava.lang.String;@5339bbad,[Ledu.cmu.lti.nlp.amr.Entity;@3935e9a8))
AMR:
(占 / 占有-01, location, 国 / 国王)
(进 / 进行-01, location, 他 / 他们)
(进 / 进行-01, manner, 只 / 只是)
(进 / 进行-01, prep-through, 统 / 统治-01)
(进 / 进行-01, topic, 占 / 占有-01)

Decoded in 12,322 microseconds
Sentence: 这 不 是 一码 事 。 ”

Spans:
Span 1-2:  不 => 不
Span 4-5:  事 => 事
Span 2-3:  是 => 是-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  事 => 事
Oracle Span 0-1:  这 => 这

Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一码	_	CD	CD	_	5	nummod	_	_
5	事	_	NN	NN	_	3	attr	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 事, domain, x10 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),事,事,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),不,不,false), Span(0,1,List(3),这,这,false)),Map(2 -> 不, 1 -> 是-04, 0 -> 事, 3 -> 这),Map(这 -> 这, 不 -> 不, 事 -> 事, 是 -> 是-04))),[Ljava.lang.String;@288a4658,Annotation([Ljava.lang.String;@5b56b654,[Ljava.lang.String;@452c8a40,[Ljava.lang.String;@534243e4),Annotation([Ljava.lang.String;@29006752,[Ljava.lang.String;@470a9030,[Ledu.cmu.lti.nlp.amr.Dependency;@66d57c1b),Annotation([Ljava.lang.String;@27494e46,[Ljava.lang.String;@d59970a,[Ljava.lang.String;@1e411d81),Annotation([Ljava.lang.String;@53b98ff6,[Ljava.lang.String;@3e6fd0b9,[Ledu.cmu.lti.nlp.amr.Entity;@7fcff1b9))
AMR:
(不 / 不, mod, 这 / 这)
(事 / 事, manner, 是 / 是-04)
(是 / 是-04, manner, 不 / 不)

Decoded in 5,726 microseconds
Sentence: “ 你 拥有 这 许多 星星 有 什么 用 ？ ”

Spans:
Span 7-8:  什么 => 什么
Span 1-2:  你 => 你
Span 2-3:  拥有 => 拥有-01
Span 5-6:  星星 => 星星
Span 6-7:  有 => 有-06
Span 8-9:  用 => 用
Span 4-5:  许多 => 许多
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  拥有 => 拥有-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 4-5:  许多 => 许多
Oracle Span 3-4:  这 => 这

Extra span: 用 => 用
Extra span: 什么 => 什么
Extra span: 有 => 有-06
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	拥有	_	VV	VV	_	0	root	_	_
4	这	_	DT	DT	_	6	det	_	_
5	许多	_	CD	CD	_	4	dep	_	_
6	星星	_	NN	NN	_	3	dobj	_	_
7	有	_	VE	VE	_	3	conj	_	_
8	什么	_	PN	PN	_	9	nsubj	_	_
9	用	_	VV	VV	_	7	dep	_	_
10	？	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 拥有-01, arg0, x13 / 你)
(x12 / 拥有-01, arg1, x14 / 星星)
(x14 / 星星, mod, x15 / 许多)
(x14 / 星星, mod, x16 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),用,用,false), Span(7,8,List(1),什么,什么,false), Span(6,7,List(2),有,有-06,false), Span(5,6,List(3),星星,星星,false), Span(4,5,List(4),许多,许多,false), Span(3,4,List(5),这,这,false), Span(2,3,List(6),拥有,拥有-01,false), Span(1,2,List(7),你,你,false)),Map(2 -> 有-06, 5 -> 这, 7 -> 你, 1 -> 什么, 4 -> 许多, 6 -> 拥有-01, 0 -> 用, 3 -> 星星),Map(星 -> 星星, 用 -> 用, 这 -> 这, 你 -> 你, 拥 -> 拥有-01, 许 -> 许多, 什 -> 什么, 有 -> 有-06))),[Ljava.lang.String;@697446d4,Annotation([Ljava.lang.String;@76adb233,[Ljava.lang.String;@36074e47,[Ljava.lang.String;@36453307),Annotation([Ljava.lang.String;@7dcc91fd,[Ljava.lang.String;@66eb985d,[Ledu.cmu.lti.nlp.amr.Dependency;@6a9287b1),Annotation([Ljava.lang.String;@75504cef,[Ljava.lang.String;@6c8a68c1,[Ljava.lang.String;@56193c7d),Annotation([Ljava.lang.String;@28c88600,[Ljava.lang.String;@5f8890c2,[Ledu.cmu.lti.nlp.amr.Entity;@607b2792))
AMR:
(什 / 什么, mod, 有 / 有-06)
(拥 / 拥有-01, location, 你 / 你)
(拥 / 拥有-01, purpose, 有 / 有-06)
(星 / 星星, mod, 许 / 许多)
(星 / 星星, mod, 这 / 这)
(有 / 有-06, location, 星 / 星星)
(有 / 有-06, location, 用 / 用)

Decoded in 20,431 microseconds
Sentence: 它 能 让 我 变得 富有 。

Spans:
Span 4-5:  变得 => 变得-01
Span 0-1:  它 => 它
Span 5-6:  富有 => 富有-01
Span 3-4:  我 => 我
Span 1-2:  能 => 能
Span 2-3:  让 => 让-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它 => 它
Oracle Span 5-6:  富有 => 富有-01
Oracle Span 3-4:  我 => 我
Oracle Span 1-2:  能 => 能-01
Oracle Span 2-3:  让 => 让-02

Extra span: 变得 => 变得-01
Incorrect span: 让 => 让-01
Incorrect span: 能 => 能
Missing span: 能 => 能-01
Missing span: 让 => 让-02
Dependencies:
1	它	_	PN	PN	_	3	nsubj	_	_
2	能	_	VV	VV	_	3	mmod	_	_
3	让	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	3	dobj	_	_
5	变得	_	VV	VV	_	3	dep	_	_
6	富有	_	VV	VV	_	3	dep	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 能-01, arg0, x2 / 让-02)
(x2 / 让-02, arg0, x3 / 它)
(x2 / 让-02, arg1, x4 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),富有,富有-01,false), Span(4,5,List(1),变得,变得-01,false), Span(3,4,List(2),我,我,false), Span(2,3,List(3),让,让-01,false), Span(1,2,List(4),能,能,false), Span(0,1,List(5),它,它,false)),Map(2 -> 我, 5 -> 它, 1 -> 变得-01, 4 -> 能, 0 -> 富有-01, 3 -> 让-01),Map(富 -> 富有-01, 我 -> 我, 能 -> 能, 它 -> 它, 变 -> 变得-01, 让 -> 让-01))),[Ljava.lang.String;@7f9e1534,Annotation([Ljava.lang.String;@138a7441,[Ljava.lang.String;@81ff872,[Ljava.lang.String;@31611954),Annotation([Ljava.lang.String;@3e598df9,[Ljava.lang.String;@7e31ce0f,[Ledu.cmu.lti.nlp.amr.Dependency;@99a65d3),Annotation([Ljava.lang.String;@3088660d,[Ljava.lang.String;@42cc13a0,[Ljava.lang.String;@32fdec40),Annotation([Ljava.lang.String;@6813a331,[Ljava.lang.String;@1bd81830,[Ledu.cmu.lti.nlp.amr.Entity;@39ab59f8))
AMR:
(变 / 变得-01, ARG3, 富 / 富有-01)
(能 / 能, mod, 让 / 让-01)
(让 / 让-01, prep-on-behalf, 变 / 变得-01)
(让 / 让-01, snt1, 它 / 它)
(让 / 让-01, value, 我 / 我)

Decoded in 11,470 microseconds
Sentence: 富 了 有 什么 好处 呢 ？

Spans:
Span 3-4:  什么 => 什么
Span 4-5:  好处 => 好处
Span 0-1:  富 => 富-02
Span 2-3:  有 => 有-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  好处 => 好处
Oracle Span 0-1:  富 => 富-02
Oracle Span 2-3:  有 => 有-01

Extra span: 什么 => 什么
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	富	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	有	_	VE	VE	_	1	dep	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	好处	_	NN	NN	_	3	dobj	_	_
6	呢	_	SP	SP	_	1	dep	_	_
7	？	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 富-02)
(x0 / 有-01, arg1, x3 / 好处)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),好处,好处,false), Span(3,4,List(1),什么,什么,false), Span(2,3,List(2),有,有-06,false), Span(0,1,List(3),富,富-02,false)),Map(2 -> 有-06, 1 -> 什么, 0 -> 好处, 3 -> 富-02),Map(富 -> 富-02, 好 -> 好处, 什 -> 什么, 有 -> 有-06))),[Ljava.lang.String;@64e92d61,Annotation([Ljava.lang.String;@111610e6,[Ljava.lang.String;@4ad4936c,[Ljava.lang.String;@29d37757),Annotation([Ljava.lang.String;@4fcc529,[Ljava.lang.String;@25cc7470,[Ledu.cmu.lti.nlp.amr.Dependency;@4beddc56),Annotation([Ljava.lang.String;@79b663b3,[Ljava.lang.String;@1b812421,[Ljava.lang.String;@5d28bcd5),Annotation([Ljava.lang.String;@7882c44a,[Ljava.lang.String;@32639b12,[Ledu.cmu.lti.nlp.amr.Entity;@20d11153))
AMR:
(好 / 好处, mod, 什 / 什么)
(好 / 好处, mod, 有 / 有-06)
(有 / 有-06, degree, 富 / 富-02)

Decoded in 5,986 microseconds
Sentence: “ 富 了 就 可以 去 买 别的 星星 ， 如果 有 人 发现 了 别的 星星 的话 。 ”

Spans:
Span 6-7:  买 => 买-01
Span 12-13:  人 => 人
Span 15-16:  别的 => 别的
Span 7-8:  别的 => 别的
Span 5-6:  去 => 去-02
Span 13-14:  发现 => 发现-01
Span 4-5:  可以 => 可以-02
Span 1-2:  富 => 富-02
Span 3-4:  就 => 就-01
Span 16-17:  星星 => 星星
Span 8-9:  星星 => 星星
Span 11-12:  有 => 有-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  买 => 买-01
Oracle Span 12-13:  人 => 人
Oracle Span 7-8:  别的 => 别的
Oracle Span 15-16:  别的 => 别的
Oracle Span 5-6:  去 => 去-01
Oracle Span 13-14:  发现 => 发现-01
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 1-2:  富 => 富
Oracle Span 3-4:  就 => 就
Oracle Span 8-9:  星星 => 星星
Oracle Span 16-17:  星星 => 星星
Oracle Span 11-12:  有 => 有-03

Incorrect span: 有 => 有-06
Incorrect span: 去 => 去-02
Incorrect span: 可以 => 可以-02
Incorrect span: 就 => 就-01
Incorrect span: 富 => 富-02
Missing span: 有 => 有-03
Missing span: 富 => 富
Missing span: 可以 => 可以-01
Missing span: 就 => 就
Missing span: 去 => 去-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	富	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	就	_	AD	AD	_	7	advmod	_	_
5	可以	_	VV	VV	_	7	mmod	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	买	_	VV	VV	_	2	dep	_	_
8	别的	_	NN	NN	_	9	nn	_	_
9	星星	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	7	punct	_	_
11	如果	_	CS	CS	_	12	advmod	_	_
12	有	_	VE	VE	_	7	dep	_	_
13	人	_	NN	NN	_	14	nsubj	_	_
14	发现	_	VV	VV	_	12	dep	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	别的	_	NN	NN	_	17	nn	_	_
17	星星	_	NN	NN	_	14	dobj	_	_
18	的话	_	SP	SP	_	14	dep	_	_
19	。	_	PU	PU	_	2	punct	_	_
20	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x18 / 发现-01, arg0, x19 / 人)
(x18 / 发现-01, arg1, x21 / 星星)
(x20 / 有-03, arg1, x19 / 人)
(x21 / 星星, mod, x22 / 别的)
(x25 / 可以-01, arg0, x26 / 去-01)
(x25 / 可以-01, manner, x27 / 就)
(x26 / 去-01, arg1, x28 / 买-01)
(x28 / 买-01, arg1, x29 / 星星)
(x29 / 星星, mod, x30 / 别的)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),星星,星星,false), Span(15,16,List(1),别的,别的,false), Span(13,14,List(2),发现,发现-01,false), Span(12,13,List(3),人,人,false), Span(11,12,List(4),有,有-06,false), Span(8,9,List(5),星星,星星,false), Span(7,8,List(6),别的,别的,false), Span(6,7,List(7),买,买-01,false), Span(5,6,List(8),去,去-02,false), Span(4,5,List(9),可以,可以-02,false), Span(3,4,List(10),就,就-01,false), Span(1,2,List(11),富,富-02,false)),Map(2 -> 发现-01, 5 -> 星星, 8 -> 去-02, 7 -> 买-01, 1 -> 别的, 11 -> 富-02, 4 -> 有-06, 6 -> 别的, 9 -> 可以-02, 0 -> 星星, 10 -> 就-01, 3 -> 人),Map(富 -> 富-02, 就 -> 就-01, 发 -> 发现-01, 别2 -> 别的, 星 -> 星星, 别 -> 别的, 去 -> 去-02, 买 -> 买-01, 星2 -> 星星, 人 -> 人, 可 -> 可以-02, 有 -> 有-06))),[Ljava.lang.String;@3887cf88,Annotation([Ljava.lang.String;@5649ec46,[Ljava.lang.String;@78dc4696,[Ljava.lang.String;@502f8b57),Annotation([Ljava.lang.String;@5652f555,[Ljava.lang.String;@4fe01805,[Ledu.cmu.lti.nlp.amr.Dependency;@55120f99),Annotation([Ljava.lang.String;@794b435f,[Ljava.lang.String;@38f2e97e,[Ljava.lang.String;@779dfe55),Annotation([Ljava.lang.String;@323659f8,[Ljava.lang.String;@1144a55a,[Ledu.cmu.lti.nlp.amr.Entity;@3e521715))
AMR:
(买 / 买-01, time, 去 / 去-02)
(人 / 人, mod, 有 / 有-06)
(别 / 别的, conj-as-if, 发 / 发现-01)
(别2 / 别的, degree, 买 / 买-01)
(发 / 发现-01, conj-as-if, 有 / 有-06)
(可 / 可以-02, degree, 富 / 富-02)
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, purpose, 去 / 去-02)
(星 / 星星, mod, 别 / 别的)
(星2 / 星星, mod, 别2 / 别的)
(有 / 有-06, location, 星2 / 星星)

Decoded in 43,677 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 这个 人 想 问题 有点 象 那个 酒鬼 一样 。 ”

Spans:
Span 15-16:  一样 => 一样
Span 8-9:  人 => 人
Span 3-4:  地 => 地
Span 0-1:  小 => 小
Span 9-10:  想 => 想-05
Span 11-12:  有点 => 有点-01
Span 1-2:  王子 => 王子
Span 2-3:  自言自语 => 自言自语
Span 4-5:  说 => 说-02
Span 7-8:  这个 => 这个
Span 13-14:  那个 => 那个
Span 14-15:  酒鬼 => 酒鬼
Span 10-11:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  想 => 想-01
Oracle Span 11-12:  有点 => 有点
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 4-5:  说 => 说-01
Oracle Span 7-8:  这个 => 这个
Oracle Span 13-14:  那个 => 那个
Oracle Span 14-15:  酒鬼 => 酒鬼
Oracle Span 10-11:  问题 => 问题

Extra span: 一样 => 一样
Incorrect span: 有点 => 有点-01
Incorrect span: 想 => 想-05
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 有点 => 有点
Missing span: 想 => 想-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	这个	_	CD	CD	_	9	nummod	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	想	_	VV	VV	_	5	ccomp	_	_
11	问题	_	NN	NN	_	12	nn	_	_
12	有点	_	NN	NN	_	16	nsubj	_	_
13	象	_	P	P	_	16	prep	_	_
14	那个	_	NN	NN	_	15	nn	_	_
15	酒鬼	_	NN	NN	_	13	pobj	_	_
16	一样	_	VA	VA	_	10	ccomp	_	_
17	。	_	PU	PU	_	5	punct	_	_
18	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 王子)
(x0 / 说-01, manner, x2 / 自言自语)
(x11 / 酒鬼, mod, x12 / 那个)
(x3 / 王子, mod, x4 / 小-01)
(x7 / 想-01, arg0, x8 / 人)
(x7 / 想-01, arg1, x10 / 问题)
(x8 / 人, mod, x9 / 这个)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),一样,一样,false), Span(14,15,List(1),酒鬼,酒鬼,false), Span(13,14,List(2),那个,那个,false), Span(11,12,List(3),有点,有点-01,false), Span(10,11,List(4),问题,问题,false), Span(9,10,List(5),想,想-05,false), Span(8,9,List(6),人,人,false), Span(7,8,List(7),这个,这个,false), Span(4,5,List(8),说,说-02,false), Span(3,4,List(9),地,地,false), Span(2,3,List(10),自言自语,自言自语,false), Span(1,2,List(11),王子,王子,false), Span(0,1,List(12),小,小,false)),Map(2 -> 那个, 5 -> 想-05, 12 -> 小, 8 -> 说-02, 7 -> 这个, 1 -> 酒鬼, 4 -> 问题, 11 -> 王子, 6 -> 人, 0 -> 一样, 9 -> 地, 3 -> 有点-01, 10 -> 自言自语),Map(自 -> 自言自语, 酒 -> 酒鬼, 这 -> 这个, 王 -> 王子, 小 -> 小, 地 -> 地, 说 -> 说-02, 那 -> 那个, 问 -> 问题, 想 -> 想-05, 人 -> 人, 一 -> 一样, 有 -> 有点-01))),[Ljava.lang.String;@26a529dc,Annotation([Ljava.lang.String;@265c5d69,[Ljava.lang.String;@1286528d,[Ljava.lang.String;@3cc20577),Annotation([Ljava.lang.String;@33a630fa,[Ljava.lang.String;@775594f2,[Ledu.cmu.lti.nlp.amr.Dependency;@5767b2af),Annotation([Ljava.lang.String;@7b22ec89,[Ljava.lang.String;@790132f7,[Ljava.lang.String;@2228db21),Annotation([Ljava.lang.String;@48b0e701,[Ljava.lang.String;@241a0c3a,[Ledu.cmu.lti.nlp.amr.Entity;@547c04c4))
AMR:
(一 / 一样, mod, 酒 / 酒鬼)
(人 / 人, mod, 这 / 这个)
(地 / 地, manner, 自 / 自言自语)
(地 / 地, mod, 小 / 小)
(想 / 想-05, degree, 有 / 有点-01)
(想 / 想-05, manner, 人 / 人)
(有 / 有点-01, degree, 那 / 那个)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, purpose, 想 / 想-05)
(酒 / 酒鬼, mod, 那 / 那个)
(问 / 问题, mod, 想 / 想-05)

Decoded in 47,562 microseconds
Sentence: 可是 他 又 提 了 一些 问题 ：

Spans:
Span 5-6:  一些 => 一些
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  提 => 提-01
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一些 => 一些
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  提 => 提-01
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	提	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一些	_	CD	CD	_	7	nummod	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 提-01, arg0, x4 / 他)
(x2 / 提-01, arg1, x5 / 问题)
(x2 / 提-01, manner, x3 / 又)
(x5 / 问题, quant, x6 / 一些)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),问题,问题,false), Span(5,6,List(1),一些,一些,false), Span(3,4,List(2),提,提-01,false), Span(2,3,List(3),又,又,false), Span(1,2,List(4),他,他,false)),Map(2 -> 提-01, 1 -> 一些, 4 -> 他, 0 -> 问题, 3 -> 又),Map(又 -> 又, 他 -> 他, 提 -> 提-01, 问 -> 问题, 一 -> 一些))),[Ljava.lang.String;@30e92cb9,Annotation([Ljava.lang.String;@7fae4d4a,[Ljava.lang.String;@ba1f559,[Ljava.lang.String;@3f4f9acd),Annotation([Ljava.lang.String;@46baf579,[Ljava.lang.String;@4bf324f9,[Ledu.cmu.lti.nlp.amr.Dependency;@4f7c0be3),Annotation([Ljava.lang.String;@ca66933,[Ljava.lang.String;@1d2644e3,[Ljava.lang.String;@4fa06f52),Annotation([Ljava.lang.String;@602c4656,[Ljava.lang.String;@5ffc5491,[Ledu.cmu.lti.nlp.amr.Entity;@705202d1))
AMR:
(提 / 提-01, manner, 又 / 又)
(提 / 提-01, prep-on-behalf, 他 / 他)
(提 / 提-01, quant, 一 / 一些)
(问 / 问题, quant, 一 / 一些)

Decoded in 8,382 microseconds
Sentence: “ 你 怎么 能 占有 星星 呢 ？ ”

Spans:
Span 1-2:  你 => 你
Span 4-5:  占有 => 占有-01
Span 2-3:  怎么 => 怎么
Span 5-6:  星星 => 星星
Span 3-4:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  占有 => 占有-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  能 => 能-01

Incorrect span: 能 => 能
Extra span: 怎么 => 怎么
Missing span: 能 => 能-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	占有	_	VV	VV	_	0	root	_	_
6	星星	_	NN	NN	_	5	dobj	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 占有-01, arg0, x11 / 你)
(x10 / 占有-01, arg1, x12 / 星星)
(x9 / 能-01, arg0, x10 / 占有-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),星星,星星,false), Span(4,5,List(1),占有,占有-01,false), Span(3,4,List(2),能,能,false), Span(2,3,List(3),怎么,怎么,false), Span(1,2,List(4),你,你,false)),Map(2 -> 能, 1 -> 占有-01, 4 -> 你, 0 -> 星星, 3 -> 怎么),Map(星 -> 星星, 能 -> 能, 你 -> 你, 怎 -> 怎么, 占 -> 占有-01))),[Ljava.lang.String;@3c443976,Annotation([Ljava.lang.String;@3e58d65e,[Ljava.lang.String;@3bd55d8,[Ljava.lang.String;@63998bf4),Annotation([Ljava.lang.String;@7e0b9178,[Ljava.lang.String;@61942c1,[Ledu.cmu.lti.nlp.amr.Dependency;@6f63c44f),Annotation([Ljava.lang.String;@408a247c,[Ljava.lang.String;@62a8fd44,[Ljava.lang.String;@2e6ba49a),Annotation([Ljava.lang.String;@5f5b5ca4,[Ljava.lang.String;@4ee33af7,[Ledu.cmu.lti.nlp.amr.Entity;@6b04acb2))
AMR:
(占 / 占有-01, degree, 能 / 能)
(占 / 占有-01, direction, 星 / 星星)
(能 / 能, mod, 怎 / 怎么)
(能 / 能, poss, 你 / 你)

Decoded in 8,566 microseconds
Sentence: “ 那么 你 说 星星 是 谁 的 呀 ？ ” 实业家 不 高兴 地 顶 了 小 王子 一 句 。

Spans:
Span 12-13:  不 => 不
Span 2-3:  你 => 你
Span 20-21:  句 => 句
Span 14-15:  地 => 地
Span 11-12:  实业家 => 实业家
Span 17-18:  小 => 小
Span 4-5:  星星 => 星星
Span 5-6:  是 => 是-04
Span 18-19:  王子 => 王子
Span 3-4:  说 => 说-02
Span 6-7:  谁 => 谁
Span 1-2:  那么 => 那么
Span 15-16:  顶 => 顶-02
Span 13-14:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  实业家 => 实业家
Oracle Span 17-18:  小 => 小-01
Oracle Span 4-5:  星星 => 星星
Oracle Span 18-19:  王子 => 王子
Oracle Span 3-4:  说 => 说-01
Oracle Span 15-16:  顶 => 顶-02
Oracle Span 13-14:  高兴 => 高兴

Extra span: 句 => 句
Incorrect span: 小 => 小
Extra span: 地 => 地
Extra span: 不 => 不
Extra span: 谁 => 谁
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 你 => 你
Extra span: 那么 => 那么
Missing span: 小 => 小-01
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	你	_	PN	PN	_	4	prep	_	_
4	说	_	VV	VV	_	0	root	_	_
5	星星	_	NN	NN	_	6	top	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	谁	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	呀	_	SP	SP	_	6	dep	_	_
10	？	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_
12	实业家	_	NN	NN	_	16	nsubj	_	_
13	不	_	AD	AD	_	16	neg	_	_
14	高兴	_	VA	VA	_	16	dvpmod	_	_
15	地	_	DEV	DEV	_	14	dvpm	_	_
16	顶	_	VV	VV	_	4	dep	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	小	_	JJ	JJ	_	19	amod	_	_
19	王子	_	NN	NN	_	21	nn	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	句	_	NN	NN	_	16	dobj	_	_
22	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x16 / 顶-02, arg0, x19 / 实业家)
(x16 / 顶-02, arg1, x20 / 王子)
(x16 / 顶-02, manner, x17 / 高兴)
(x20 / 王子, mod, x21 / 小-01)
(x24 / 说-01, arg1, x26 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),句,句,false), Span(18,19,List(1),王子,王子,false), Span(17,18,List(2),小,小,false), Span(15,16,List(3),顶,顶-02,false), Span(14,15,List(4),地,地,false), Span(13,14,List(5),高兴,高兴,false), Span(12,13,List(6),不,不,false), Span(11,12,List(7),实业家,实业家,false), Span(6,7,List(8),谁,谁,false), Span(5,6,List(9),是,是-04,false), Span(4,5,List(10),星星,星星,false), Span(3,4,List(11),说,说-02,false), Span(2,3,List(12),你,你,false), Span(1,2,List(13),那么,那么,false)),Map(2 -> 小, 5 -> 高兴, 12 -> 你, 8 -> 谁, 7 -> 实业家, 1 -> 王子, 4 -> 地, 11 -> 说-02, 6 -> 不, 0 -> 句, 9 -> 是-04, 3 -> 顶-02, 10 -> 星星, 13 -> 那么),Map(顶 -> 顶-02, 高 -> 高兴, 星 -> 星星, 王 -> 王子, 谁 -> 谁, 句 -> 句, 你 -> 你, 实 -> 实业家, 小 -> 小, 地 -> 地, 不 -> 不, 说 -> 说-02, 那 -> 那么, 是 -> 是-04))),[Ljava.lang.String;@18388a3c,Annotation([Ljava.lang.String;@1d035be3,[Ljava.lang.String;@4a60ee36,[Ljava.lang.String;@4cfbaf4),Annotation([Ljava.lang.String;@58faa93b,[Ljava.lang.String;@5f212d84,[Ledu.cmu.lti.nlp.amr.Dependency;@127d7908),Annotation([Ljava.lang.String;@6b9c69a9,[Ljava.lang.String;@6622a690,[Ljava.lang.String;@30b9eadd),Annotation([Ljava.lang.String;@497570fb,[Ljava.lang.String;@412c995d,[Ledu.cmu.lti.nlp.amr.Entity;@3249a1ce))
AMR:
(实 / 实业家, mod, 不 / 不)
(是 / 是-04, location, 不 / 不)
(是 / 是-04, location, 星 / 星星)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, degree, 那 / 那么)
(说 / 说-02, direction, 你 / 你)
(说 / 说-02, purpose, 是 / 是-04)
(谁 / 谁, mod, 是 / 是-04)
(顶 / 顶-02, location, 句 / 句)
(顶 / 顶-02, location, 地 / 地)
(顶 / 顶-02, location, 小 / 小)
(顶 / 顶-02, manner, 高 / 高兴)
(高 / 高兴, location, 不 / 不)

Decoded in 55,865 microseconds
Sentence: “ 我 不 知道 ，

Spans:
Span 2-3:  不 => 不
Span 1-2:  我 => 我
Span 3-4:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  知道 => 知道-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	不	_	NN	NN	_	0	root	_	_
4	知道	_	VV	VV	_	3	conj	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 知道-01, arg0, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),知道,知道-01,false), Span(2,3,List(1),不,不,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 不, 0 -> 知道-01),Map(我 -> 我, 不 -> 不, 知 -> 知道-01))),[Ljava.lang.String;@4dd94a58,Annotation([Ljava.lang.String;@2f4919b0,[Ljava.lang.String;@a8a8b75,[Ljava.lang.String;@75b21c3b),Annotation([Ljava.lang.String;@72be135f,[Ljava.lang.String;@155d1021,[Ledu.cmu.lti.nlp.amr.Dependency;@4bd2f0dc),Annotation([Ljava.lang.String;@2e647e59,[Ljava.lang.String;@2c42b421,[Ljava.lang.String;@51e37590),Annotation([Ljava.lang.String;@deb3b60,[Ljava.lang.String;@701a32,[Ledu.cmu.lti.nlp.amr.Entity;@39aa45a1))
AMR:
(不 / 不, poss, 我 / 我)
(知 / 知道-01, time, 不 / 不)

Decoded in 3,923 microseconds
Sentence: 不 属于 任何 人 。 ”

Spans:
Span 0-1:  不 => 不
Span 3-4:  人 => 人
Span 2-3:  任何 => 任何
Span 1-2:  属于 => 属于-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 2-3:  任何 => 任何
Oracle Span 1-2:  属于 => 属于-01

Extra span: 不 => 不
Dependencies:
1	不	_	AD	AD	_	2	neg	_	_
2	属于	_	VV	VV	_	0	root	_	_
3	任何	_	DT	DT	_	4	det	_	_
4	人	_	NN	NN	_	2	dobj	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 属于-01, arg1, x9 / 人)
(x9 / 人, mod, x10 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),人,人,false), Span(2,3,List(1),任何,任何,false), Span(1,2,List(2),属于,属于-01,false), Span(0,1,List(3),不,不,false)),Map(2 -> 属于-01, 1 -> 任何, 0 -> 人, 3 -> 不),Map(属 -> 属于-01, 任 -> 任何, 不 -> 不, 人 -> 人))),[Ljava.lang.String;@73aff8f1,Annotation([Ljava.lang.String;@27cbfddf,[Ljava.lang.String;@27ead29e,[Ljava.lang.String;@4c060c8f),Annotation([Ljava.lang.String;@40620d8e,[Ljava.lang.String;@383f3558,[Ledu.cmu.lti.nlp.amr.Dependency;@49b07ee3),Annotation([Ljava.lang.String;@352e612e,[Ljava.lang.String;@65f00478,[Ljava.lang.String;@2424686b),Annotation([Ljava.lang.String;@6ea94d6a,[Ljava.lang.String;@28486680,[Ledu.cmu.lti.nlp.amr.Entity;@4d7e7435))
AMR:
(人 / 人, mod, 任 / 任何)
(属 / 属于-01, direction, 任 / 任何)
(属 / 属于-01, manner, 不 / 不)

Decoded in 5,787 microseconds
Sentence: “ 那么 ， 它们 就 是 我 的 ， 因为 是 我 第一 个 想到 了 这 件 事情 的 。 ”

Spans:
Span 18-19:  事情 => 事情
Span 3-4:  它们 => 它们
Span 4-5:  就 => 就-01
Span 14-15:  想到 => 想到-01
Span 11-12:  我 => 我
Span 6-7:  我 => 我
Span 10-11:  是 => 是-04
Span 5-6:  是 => 是-04
Span 16-17:  这 => 这
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  事情 => 事情
Oracle Span 3-4:  它们 => 它们
Oracle Span 14-15:  想到 => 想到-01
Oracle Span 6-7:  我 => 我
Oracle Span 16-17:  这 => 这

Extra span: 我 => 我
Extra span: 是 => 是-04
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	它们	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	我	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	,	_	PU	PU	_	6	punct	_	_
10	因为	_	P	P	_	6	conj	_	_
11	是	_	VC	VC	_	10	pccomp	_	_
12	我	_	PN	PN	_	15	nsubj	_	_
13	第一	_	OD	OD	_	14	ordmod	_	_
14	个	_	M	M	_	15	dep	_	_
15	想到	_	VV	VV	_	11	attr	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	这	_	DT	DT	_	19	det	_	_
18	件	_	M	M	_	17	clf	_	_
19	事情	_	NN	NN	_	15	ccomp	_	_
20	的	_	DEC	DEC	_	15	cpm	_	_
21	。	_	PU	PU	_	6	punct	_	_
22	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x15 / 想到-01, arg0, x16 / 我)
(x15 / 想到-01, arg1, x17 / 事情)
(x17 / 事情, mod, x18 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),事情,事情,false), Span(16,17,List(1),这,这,false), Span(14,15,List(2),想到,想到-01,false), Span(11,12,List(3),我,我,false), Span(10,11,List(4),是,是-04,false), Span(6,7,List(5),我,我,false), Span(5,6,List(6),是,是-04,false), Span(4,5,List(7),就,就-01,false), Span(3,4,List(8),它们,它们,false), Span(1,2,List(9),那么,那么,false)),Map(2 -> 想到-01, 5 -> 我, 8 -> 它们, 7 -> 就-01, 1 -> 这, 4 -> 是-04, 6 -> 是-04, 9 -> 那么, 0 -> 事情, 3 -> 我),Map(就 -> 就-01, 我 -> 我, 这 -> 这, 我2 -> 我, 它 -> 它们, 事 -> 事情, 那 -> 那么, 想 -> 想到-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@4a1e3ac1,Annotation([Ljava.lang.String;@6e78fcf5,[Ljava.lang.String;@56febdc,[Ljava.lang.String;@3b8ee898),Annotation([Ljava.lang.String;@7d151a,[Ljava.lang.String;@294bdeb4,[Ledu.cmu.lti.nlp.amr.Dependency;@5300f14a),Annotation([Ljava.lang.String;@1f86099a,[Ljava.lang.String;@77bb0ab5,[Ljava.lang.String;@f2c488),Annotation([Ljava.lang.String;@54acff7d,[Ljava.lang.String;@7bc9e6ab,[Ledu.cmu.lti.nlp.amr.Entity;@5488b5c5))
AMR:
(事 / 事情, mod, 这 / 这)
(就 / 就-01, degree, 它 / 它们)
(就 / 就-01, degree, 那 / 那么)
(想 / 想到-01, duration, 事 / 事情)
(是 / 是-04, degree, 是2 / 是-04)
(是 / 是-04, purpose, 想 / 想到-01)
(是 / 是-04, subset, 我 / 我)
(是2 / 是-04, manner, 就 / 就-01)
(是2 / 是-04, subset, 我2 / 我)

Decoded in 29,824 microseconds
Sentence: “ 这 就 行 了 吗 ？ ”

Spans:
Span 2-3:  就 => 就-01
Span 3-4:  行 => 行-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  行 => 行-04
Oracle Span 1-2:  这 => 这

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	行	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	吗	_	SP	SP	_	4	dep	_	_
7	？	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 行-04, arg0, x9 / 这)
(x7 / 行-04, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),行,行-04,false), Span(2,3,List(1),就,就-01,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 就-01, 0 -> 行-04),Map(就 -> 就-01, 这 -> 这, 行 -> 行-04))),[Ljava.lang.String;@4248ed58,Annotation([Ljava.lang.String;@712ca57b,[Ljava.lang.String;@4564e94b,[Ljava.lang.String;@54534abf),Annotation([Ljava.lang.String;@51745f40,[Ljava.lang.String;@45673f68,[Ledu.cmu.lti.nlp.amr.Dependency;@27abb83e),Annotation([Ljava.lang.String;@69e308c6,[Ljava.lang.String;@1a1ed4e5,[Ljava.lang.String;@667e34b1),Annotation([Ljava.lang.String;@1c6e0a08,[Ljava.lang.String;@6dba847b,[Ledu.cmu.lti.nlp.amr.Entity;@1efdcd5))
AMR:
(就 / 就-01, mod, 这 / 这)
(行 / 行-04, manner, 就 / 就-01)

Decoded in 4,800 microseconds
Sentence: “ 那 当然 。

Spans:
Span 2-3:  当然 => 当然
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  当然 => 当然
Oracle Span 1-2:  那 => 那

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那	_	PN	PN	_	3	nsubj	_	_
3	当然	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 当然, mod, x6 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),当然,当然,false), Span(1,2,List(1),那,那,false)),Map(1 -> 那, 0 -> 当然),Map(那 -> 那, 当 -> 当然))),[Ljava.lang.String;@1623bbe5,Annotation([Ljava.lang.String;@7af1cd63,[Ljava.lang.String;@4351171a,[Ljava.lang.String;@3c2772d1),Annotation([Ljava.lang.String;@37d00a23,[Ljava.lang.String;@433e536f,[Ledu.cmu.lti.nlp.amr.Dependency;@89c65d5),Annotation([Ljava.lang.String;@faa3fed,[Ljava.lang.String;@381cad29,[Ljava.lang.String;@988246e),Annotation([Ljava.lang.String;@62515a47,[Ljava.lang.String;@3c5a54b7,[Ledu.cmu.lti.nlp.amr.Entity;@61f2c3f0))
AMR:
(当 / 当然, mod, 那 / 那)

Decoded in 2,600 microseconds
Sentence: 如果 你 发现 了 一 颗 没有 主人 的 钻石 ， 那么 这 颗 钻石 就 是 属于 你 的 。

Spans:
Span 7-8:  主人 => 主人
Span 18-19:  你 => 你
Span 1-2:  你 => 你
Span 2-3:  发现 => 发现-01
Span 15-16:  就 => 就-01
Span 17-18:  属于 => 属于-01
Span 16-17:  是 => 是-04
Span 12-13:  这 => 这
Span 11-12:  那么 => 那么
Span 14-15:  钻石 => 钻石
Span 9-10:  钻石 => 钻石

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  主人 => 主人
Oracle Span 1-2:  你 => 你
Oracle Span 18-19:  你 => 你
Oracle Span 2-3:  发现 => 发现-01
Oracle Span 15-16:  就 => 就
Oracle Span 17-18:  属于 => 属于-01
Oracle Span 12-13:  这 => 这
Oracle Span 9-10:  钻石 => 钻石
Oracle Span 14-15:  钻石 => 钻石

Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 那么 => 那么
Missing span: 就 => 就
Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	发现	_	VV	VV	_	17	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	10	clf	_	_
7	没有	_	VE	VE	_	10	rcmod	_	_
8	主人	_	NN	NN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	钻石	_	NN	NN	_	3	dobj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	那么	_	AD	AD	_	17	advmod	_	_
13	这	_	DT	DT	_	15	det	_	_
14	颗	_	M	M	_	13	clf	_	_
15	钻石	_	NN	NN	_	17	nsubj	_	_
16	就	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	0	root	_	_
18	属于	_	VV	VV	_	17	attr	_	_
19	你	_	PN	PN	_	18	dobj	_	_
20	的	_	DEC	DEC	_	18	cpm	_	_
21	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x2 / 发现-01, arg0, x3 / 你)
(x2 / 发现-01, arg1, x4 / 钻石)
(x8 / 属于-01, arg0, x9 / 钻石)
(x8 / 属于-01, arg1, x11 / 你)
(x8 / 属于-01, manner, x14 / 就)
(x9 / 钻石, mod, x10 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),你,你,false), Span(17,18,List(1),属于,属于-01,false), Span(16,17,List(2),是,是-04,false), Span(15,16,List(3),就,就-01,false), Span(14,15,List(4),钻石,钻石,false), Span(12,13,List(5),这,这,false), Span(11,12,List(6),那么,那么,false), Span(9,10,List(7),钻石,钻石,false), Span(7,8,List(8),主人,主人,false), Span(2,3,List(9),发现,发现-01,false), Span(1,2,List(10),你,你,false)),Map(2 -> 是-04, 5 -> 这, 8 -> 主人, 7 -> 钻石, 1 -> 属于-01, 4 -> 钻石, 6 -> 那么, 9 -> 发现-01, 0 -> 你, 10 -> 你, 3 -> 就-01),Map(发 -> 发现-01, 就 -> 就-01, 属 -> 属于-01, 主 -> 主人, 钻2 -> 钻石, 这 -> 这, 钻 -> 钻石, 你 -> 你, 你2 -> 你, 那 -> 那么, 是 -> 是-04))),[Ljava.lang.String;@291120f4,Annotation([Ljava.lang.String;@417ad4f3,[Ljava.lang.String;@2f6bcf87,[Ljava.lang.String;@58f174d9),Annotation([Ljava.lang.String;@78c7f9b3,[Ljava.lang.String;@6f8d7714,[Ledu.cmu.lti.nlp.amr.Dependency;@1e6b9a95),Annotation([Ljava.lang.String;@4d6f623d,[Ljava.lang.String;@aa21042,[Ljava.lang.String;@e93f3d5),Annotation([Ljava.lang.String;@4cee7fa0,[Ljava.lang.String;@7a26928a,[Ledu.cmu.lti.nlp.amr.Entity;@601cbd8c))
AMR:
(发 / 发现-01, compared-to, 你2 / 你)
(发 / 发现-01, prep-from, 钻2 / 钻石)
(属 / 属于-01, time, 钻 / 钻石)
(是 / 是-04, ARG1, 属 / 属于-01)
(是 / 是-04, ARG4, 你 / 你)
(是 / 是-04, manner, 就 / 就-01)
(是 / 是-04, time, 钻2 / 钻石)
(这 / 这, ARG6, 那 / 那么)
(钻 / 钻石, mod, 这 / 这)
(钻2 / 钻石, ARG4, 主 / 主人)

Decoded in 42,154 microseconds
Sentence: 当 你 发现 一 个 岛 是 没有 主 的 ， 那么 这个 岛 就 是 你 的 。

Spans:
Span 8-9:  主 => 主
Span 16-17:  你 => 你
Span 1-2:  你 => 你
Span 2-3:  发现 => 发现-01
Span 14-15:  就 => 就-01
Span 13-14:  岛 => 岛
Span 5-6:  岛 => 岛
Span 0-1:  当 => 当-04
Span 15-16:  是 => 是-04
Span 6-7:  是 => 是-04
Span 12-13:  这个 => 这个
Span 11-12:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  主 => 主
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  发现 => 发现-01
Oracle Span 14-15:  就 => 就
Oracle Span 5-6:  岛 => 岛
Oracle Span 13-14:  岛 => 岛

Extra span: 你 => 你
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 这个 => 这个
Extra span: 那么 => 那么
Extra span: 是 => 是-04
Extra span: 当 => 当-04
Missing span: 就 => 就
Dependencies:
1	当	_	P	P	_	3	prep	_	_
2	你	_	PN	PN	_	1	pobj	_	_
3	发现	_	VV	VV	_	7	conj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	岛	_	NN	NN	_	3	dobj	_	_
7	是	_	VC	VC	_	0	root	_	_
8	没有	_	VE	VE	_	7	attr	_	_
9	主	_	NN	NN	_	8	dobj	_	_
10	的	_	DEC	DEC	_	8	cpm	_	_
11	,	_	PU	PU	_	7	punct	_	_
12	那么	_	AD	AD	_	16	advmod	_	_
13	这个	_	NN	NN	_	14	nn	_	_
14	岛	_	NN	NN	_	16	nsubj	_	_
15	就	_	AD	AD	_	16	advmod	_	_
16	是	_	VC	VC	_	7	dep	_	_
17	你	_	PN	PN	_	16	attr	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	。	_	PU	PU	_	7	punct	_	_
20	发现	_	VV	VV	_	7	top	_	_

Oracle:
(x15 / 岛, manner, x17 / 就)
(x2 / 发现-01, arg0, x3 / 你)
(x2 / 发现-01, arg1, x4 / 岛)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),你,你,false), Span(15,16,List(1),是,是-04,false), Span(14,15,List(2),就,就-01,false), Span(13,14,List(3),岛,岛,false), Span(12,13,List(4),这个,这个,false), Span(11,12,List(5),那么,那么,false), Span(8,9,List(6),主,主,false), Span(6,7,List(7),是,是-04,false), Span(5,6,List(8),岛,岛,false), Span(2,3,List(9),发现,发现-01,false), Span(1,2,List(10),你,你,false), Span(0,1,List(11),当,当-04,false)),Map(2 -> 就-01, 5 -> 那么, 8 -> 岛, 7 -> 是-04, 1 -> 是-04, 11 -> 当-04, 4 -> 这个, 6 -> 主, 9 -> 发现-01, 0 -> 你, 10 -> 你, 3 -> 岛),Map(发 -> 发现-01, 就 -> 就-01, 主 -> 主, 这 -> 这个, 你 -> 你, 你2 -> 你, 岛 -> 岛, 那 -> 那么, 岛2 -> 岛, 是2 -> 是-04, 是 -> 是-04, 当 -> 当-04))),[Ljava.lang.String;@7180e701,Annotation([Ljava.lang.String;@4e2c95ee,[Ljava.lang.String;@d0ec63,[Ljava.lang.String;@5a5c128),Annotation([Ljava.lang.String;@73eb8672,[Ljava.lang.String;@5942ee04,[Ledu.cmu.lti.nlp.amr.Dependency;@5e76a2bb),Annotation([Ljava.lang.String;@757194dc,[Ljava.lang.String;@5a865416,[Ljava.lang.String;@14faa38c),Annotation([Ljava.lang.String;@7ff2b8d2,[Ljava.lang.String;@6dc1484,[Ledu.cmu.lti.nlp.amr.Entity;@6e92c6ad))
AMR:
(发 / 发现-01, manner, 当 / 当-04)
(发 / 发现-01, poss, 你2 / 你)
(岛 / 岛, manner, 就 / 就-01)
(岛 / 岛, mod, 这 / 这个)
(是 / 是-04, degree, 你 / 你)
(是 / 是-04, manner, 就 / 就-01)
(是2 / 是-04, degree, 主 / 主)
(是2 / 是-04, degree, 那 / 那么)
(是2 / 是-04, manner, 岛2 / 岛)
(是2 / 是-04, time, 发 / 发现-01)
(这 / 这个, degree, 那 / 那么)

Decoded in 41,608 microseconds
Sentence: 当 你 首先 想出 了 一 个 办法 ， 你 就 去 领 一 个 专利证 ， 这个 办法 就 是 属于 你 的 。

Spans:
Span 15-16:  专利证 => 专利证
Span 22-23:  你 => 你
Span 9-10:  你 => 你
Span 1-2:  你 => 你
Span 18-19:  办法 => 办法
Span 7-8:  办法 => 办法
Span 11-12:  去 => 去-02
Span 19-20:  就 => 就-01
Span 10-11:  就 => 就-01
Span 21-22:  属于 => 属于-01
Span 0-1:  当 => 当-04
Span 3-4:  想出 => 想出-01
Span 20-21:  是 => 是-04
Span 17-18:  这个 => 这个
Span 12-13:  领 => 领-01
Span 2-3:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  专利证 => 专利证
Oracle Span 1-2:  你 => 你
Oracle Span 7-8:  办法 => 办法
Oracle Span 21-22:  属于 => 属于-01
Oracle Span 3-4:  想出 => 想出-01
Oracle Span 12-13:  领 => 领-01
Oracle Span 2-3:  首先 => 首先

Extra span: 你 => 你
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 办法 => 办法
Extra span: 这个 => 这个
Extra span: 去 => 去-02
Extra span: 就 => 就-01
Extra span: 你 => 你
Extra span: 当 => 当-04
Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	首先	_	AD	AD	_	4	advmod	_	_
4	想出	_	VV	VV	_	1	pccomp	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	8	clf	_	_
8	办法	_	NN	NN	_	4	dobj	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	你	_	PN	PN	_	13	nsubj	_	_
11	就	_	AD	AD	_	13	advmod	_	_
12	去	_	MSP	MSP	_	13	prtmod	_	_
13	领	_	VV	VV	_	0	root	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	个	_	M	M	_	16	clf	_	_
16	专利证	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	13	punct	_	_
18	这个	_	NN	NN	_	19	nn	_	_
19	办法	_	NN	NN	_	21	nsubj	_	_
20	就	_	AD	AD	_	21	advmod	_	_
21	是	_	VC	VC	_	13	conj	_	_
22	属于	_	VV	VV	_	21	attr	_	_
23	你	_	PN	PN	_	22	dobj	_	_
24	的	_	DEC	DEC	_	22	cpm	_	_
25	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x21 / 想出-01, arg0, x22 / 你)
(x21 / 想出-01, arg1, x23 / 办法)
(x21 / 想出-01, manner, x25 / 首先)
(x28 / 领-01, arg1, x30 / 专利证)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),你,你,false), Span(21,22,List(1),属于,属于-01,false), Span(20,21,List(2),是,是-04,false), Span(19,20,List(3),就,就-01,false), Span(18,19,List(4),办法,办法,false), Span(17,18,List(5),这个,这个,false), Span(15,16,List(6),专利证,专利证,false), Span(12,13,List(7),领,领-01,false), Span(11,12,List(8),去,去-02,false), Span(10,11,List(9),就,就-01,false), Span(9,10,List(10),你,你,false), Span(7,8,List(11),办法,办法,false), Span(3,4,List(12),想出,想出-01,false), Span(2,3,List(13),首先,首先,false), Span(1,2,List(14),你,你,false), Span(0,1,List(15),当,当-04,false)),Map(2 -> 是-04, 5 -> 这个, 12 -> 想出-01, 15 -> 当-04, 8 -> 去-02, 7 -> 领-01, 1 -> 属于-01, 4 -> 办法, 11 -> 办法, 14 -> 你, 6 -> 专利证, 0 -> 你, 9 -> 就-01, 3 -> 就-01, 10 -> 你, 13 -> 首先),Map(办2 -> 办法, 就 -> 就-01, 属 -> 属于-01, 你3 -> 你, 这 -> 这个, 你 -> 你, 去 -> 去-02, 就2 -> 就-01, 领 -> 领-01, 首 -> 首先, 办 -> 办法, 你2 -> 你, 专 -> 专利证, 想 -> 想出-01, 是 -> 是-04, 当 -> 当-04))),[Ljava.lang.String;@2fb5fe30,Annotation([Ljava.lang.String;@456be73c,[Ljava.lang.String;@2375b321,[Ljava.lang.String;@5baaae4c),Annotation([Ljava.lang.String;@5b6e8f77,[Ljava.lang.String;@41a6d121,[Ledu.cmu.lti.nlp.amr.Dependency;@4f449e8f),Annotation([Ljava.lang.String;@411291e5,[Ljava.lang.String;@6e28bb87,[Ljava.lang.String;@19f040ba),Annotation([Ljava.lang.String;@72ab05ed,[Ljava.lang.String;@27e32fe4,[Ledu.cmu.lti.nlp.amr.Entity;@c3c4c1c))
AMR:
(专 / 专利证, ARG3, 去 / 去-02)
(办 / 办法, mod, 这 / 这个)
(去 / 去-02, ARG5, 你2 / 你)
(去 / 去-02, manner, 就2 / 就-01)
(去 / 去-02, prep-through, 领 / 领-01)
(属 / 属于-01, ARG1, 是 / 是-04)
(属 / 属于-01, time, 办 / 办法)
(当 / 当-04, ARG4, 首 / 首先)
(当 / 当-04, ARG5, 你3 / 你)
(当 / 当-04, manner, 就2 / 就-01)
(当 / 当-04, time, 办2 / 办法)
(想 / 想出-01, manner, 首 / 首先)
(是 / 是-04, ARG3, 专 / 专利证)
(是 / 是-04, ARG4, 你 / 你)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 72,984 microseconds
Sentence: 既然 在 我 之前 不 曾 有 任何 人 想到 要 占有 这些 星星 ， 那 我 就 占有 这些 星星 。 ”

Spans:
Span 4-5:  不 => 不
Span 3-4:  之前 => 之前
Span 8-9:  人 => 人
Span 7-8:  任何 => 任何
Span 18-19:  占有 => 占有-01
Span 11-12:  占有 => 占有-01
Span 1-2:  在 => 在-01
Span 17-18:  就 => 就-01
Span 9-10:  想到 => 想到-01
Span 16-17:  我 => 我
Span 2-3:  我 => 我
Span 20-21:  星星 => 星星
Span 13-14:  星星 => 星星
Span 5-6:  曾 => 曾
Span 6-7:  有 => 有-06
Span 10-11:  要 => 要-02
Span 19-20:  这些 => 这些
Span 12-13:  这些 => 这些
Span 15-16:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  之前 => 之前
Oracle Span 8-9:  人 => 人
Oracle Span 7-8:  任何 => 任何
Oracle Span 11-12:  占有 => 占有-01
Oracle Span 18-19:  占有 => 占有-01
Oracle Span 17-18:  就 => 就
Oracle Span 9-10:  想到 => 想到-01
Oracle Span 2-3:  我 => 我
Oracle Span 13-14:  星星 => 星星
Oracle Span 20-21:  星星 => 星星
Oracle Span 6-7:  有 => 有-04
Oracle Span 10-11:  要 => 要-03
Oracle Span 12-13:  这些 => 这些
Oracle Span 19-20:  这些 => 这些

Incorrect span: 就 => 就-01
Extra span: 我 => 我
Extra span: 那 => 那
Incorrect span: 要 => 要-02
Incorrect span: 有 => 有-06
Extra span: 曾 => 曾
Extra span: 不 => 不
Extra span: 在 => 在-01
Missing span: 有 => 有-04
Missing span: 要 => 要-03
Missing span: 就 => 就
Dependencies:
1	既然	_	CS	CS	_	7	advmod	_	_
2	在	_	P	P	_	7	prep	_	_
3	我	_	PN	PN	_	4	lobj	_	_
4	之前	_	LC	LC	_	2	plmod	_	_
5	不	_	AD	AD	_	7	neg	_	_
6	曾	_	AD	AD	_	7	advmod	_	_
7	有	_	VE	VE	_	0	root	_	_
8	任何	_	DT	DT	_	9	det	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	想到	_	VV	VV	_	7	dep	_	_
11	要	_	VV	VV	_	12	mmod	_	_
12	占有	_	VV	VV	_	10	ccomp	_	_
13	这些	_	DT	DT	_	14	det	_	_
14	星星	_	NN	NN	_	12	dobj	_	_
15	,	_	PU	PU	_	12	punct	_	_
16	那	_	AD	AD	_	19	advmod	_	_
17	我	_	PN	PN	_	19	nsubj	_	_
18	就	_	AD	AD	_	19	advmod	_	_
19	占有	_	VV	VV	_	12	dep	_	_
20	这些	_	DT	DT	_	21	det	_	_
21	星星	_	NN	NN	_	19	dobj	_	_
22	。	_	PU	PU	_	7	punct	_	_
23	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x27 / 有-04, arg0, x30 / 想到-01)
(x27 / 有-04, time, x38 / 之前)
(x30 / 想到-01, arg0, x31 / 人)
(x30 / 想到-01, arg1, x33 / 要-03)
(x31 / 人, mod, x32 / 任何)
(x33 / 要-03, arg0, x34 / 占有-01)
(x34 / 占有-01, arg1, x36 / 星星)
(x36 / 星星, mod, x37 / 这些)
(x38 / 之前, mod, x39 / 我)
(x40 / 占有-01, arg1, x43 / 星星)
(x40 / 占有-01, manner, x42 / 就)
(x43 / 星星, mod, x44 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),星星,星星,false), Span(19,20,List(1),这些,这些,false), Span(18,19,List(2),占有,占有-01,false), Span(17,18,List(3),就,就-01,false), Span(16,17,List(4),我,我,false), Span(15,16,List(5),那,那,false), Span(13,14,List(6),星星,星星,false), Span(12,13,List(7),这些,这些,false), Span(11,12,List(8),占有,占有-01,false), Span(10,11,List(9),要,要-02,false), Span(9,10,List(10),想到,想到-01,false), Span(8,9,List(11),人,人,false), Span(7,8,List(12),任何,任何,false), Span(6,7,List(13),有,有-06,false), Span(5,6,List(14),曾,曾,false), Span(4,5,List(15),不,不,false), Span(3,4,List(16),之前,之前,false), Span(2,3,List(17),我,我,false), Span(1,2,List(18),在,在-01,false)),Map(2 -> 占有-01, 5 -> 那, 12 -> 任何, 15 -> 不, 8 -> 占有-01, 18 -> 在-01, 7 -> 这些, 17 -> 我, 1 -> 这些, 4 -> 我, 11 -> 人, 14 -> 曾, 6 -> 星星, 0 -> 星星, 9 -> 要-02, 16 -> 之前, 3 -> 就-01, 10 -> 想到-01, 13 -> 有-06),Map(就 -> 就-01, 占2 -> 占有-01, 任 -> 任何, 在 -> 在-01, 星 -> 星星, 我 -> 我, 这 -> 这些, 要 -> 要-02, 我2 -> 我, 曾 -> 曾, 不 -> 不, 这2 -> 这些, 那 -> 那, 占 -> 占有-01, 星2 -> 星星, 想 -> 想到-01, 人 -> 人, 之 -> 之前, 有 -> 有-06))),[Ljava.lang.String;@17d238b1,Annotation([Ljava.lang.String;@3d7cc3cb,[Ljava.lang.String;@35e478f,[Ljava.lang.String;@6d6cb754),Annotation([Ljava.lang.String;@6b7d1df8,[Ljava.lang.String;@3044e9c7,[Ledu.cmu.lti.nlp.amr.Dependency;@41d7b27f),Annotation([Ljava.lang.String;@49096b06,[Ljava.lang.String;@4a183d02,[Ljava.lang.String;@5d05ef57),Annotation([Ljava.lang.String;@213deac2,[Ljava.lang.String;@23eee4b8,[Ledu.cmu.lti.nlp.amr.Entity;@28952dea))
AMR:
(不 / 不, mod, 之 / 之前)
(之 / 之前, mod, 在 / 在-01)
(之 / 之前, mod, 我2 / 我)
(人 / 人, mod, 任 / 任何)
(人 / 人, prep-as, 想 / 想到-01)
(任 / 任何, mod, 有 / 有-06)
(占 / 占有-01, mod, 就 / 就-01)
(占 / 占有-01, prep-as, 星 / 星星)
(占2 / 占有-01, prep-as, 星2 / 星星)
(就 / 就-01, beneficiary, 我 / 我)
(就 / 就-01, mod, 那 / 那)
(星 / 星星, mod, 这 / 这些)
(星2 / 星星, mod, 这2 / 这些)
(星2 / 星星, mod, 那 / 那)
(曾 / 曾, mod, 不 / 不)
(有 / 有-06, time, 曾 / 曾)
(要 / 要-02, snt2, 占2 / 占有-01)
(要 / 要-02, year, 想 / 想到-01)

Decoded in 98,247 microseconds
Sentence: “ 这 倒 也 是 。 ” 小 王子 说 。

Spans:
Span 3-4:  也 => 也
Span 2-3:  倒 => 倒-02
Span 7-8:  小 => 小
Span 4-5:  是 => 是-04
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 7-8:  小 => 小-01
Oracle Span 4-5:  是 => 是-03
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 是 => 是-04
Extra span: 倒 => 倒-02
Missing span: 说 => 说-01
Missing span: 是 => 是-03
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	倒	_	VV	VV	_	10	dep	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	3	dobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 是-03)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 是-03, arg0, x6 / 这)
(x4 / 是-03, manner, x5 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(4,5,List(3),是,是-04,false), Span(3,4,List(4),也,也,false), Span(2,3,List(5),倒,倒-02,false), Span(1,2,List(6),这,这,false)),Map(2 -> 小, 5 -> 倒-02, 1 -> 王子, 4 -> 也, 6 -> 这, 0 -> 说-02, 3 -> 是-04),Map(也 -> 也, 这 -> 这, 王 -> 王子, 小 -> 小, 说 -> 说-02, 倒 -> 倒-02, 是 -> 是-04))),[Ljava.lang.String;@5a9800f8,Annotation([Ljava.lang.String;@143d9a93,[Ljava.lang.String;@40226788,[Ljava.lang.String;@4159e81b),Annotation([Ljava.lang.String;@5b5caf08,[Ljava.lang.String;@23cd4ff2,[Ledu.cmu.lti.nlp.amr.Dependency;@70807224),Annotation([Ljava.lang.String;@7e97551f,[Ljava.lang.String;@400d912a,[Ljava.lang.String;@9f6e406),Annotation([Ljava.lang.String;@7a94b64e,[Ljava.lang.String;@3e6f3bae,[Ledu.cmu.lti.nlp.amr.Entity;@12477988))
AMR:
(倒 / 倒-02, mod, 这 / 这)
(倒 / 倒-02, purpose, 是 / 是-04)
(是 / 是-04, manner, 也 / 也)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 是 / 是-04)

Decoded in 17,320 microseconds
Sentence: “ 可是 你 用 它们 来 干 什么 ？ ”

Spans:
Span 7-8:  什么 => 什么
Span 2-3:  你 => 你
Span 4-5:  它们 => 它们
Span 6-7:  干 => (thing :arg1-of 干-01)
Span 5-6:  来 => 来-06
Span 3-4:  用 => 用

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我 经营 管理 这些 星星 。 ”

Spans:
Span 1-2:  我 => 我
Span 5-6:  星星 => 星星
Span 3-4:  管理 => 管理-01
Span 2-3:  经营 => 经营-01
Span 4-5:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  管理 => 管理-01
Oracle Span 2-3:  经营 => 经营-01
Oracle Span 4-5:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	经营	_	VV	VV	_	0	root	_	_
4	管理	_	NN	NN	_	6	nn	_	_
5	这些	_	DT	DT	_	6	det	_	_
6	星星	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x19 / 经营-01, arg0, x20 / 我)
(x19 / 经营-01, arg1, x21 / 星星)
(x21 / 星星, mod, x22 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),星星,星星,false), Span(4,5,List(1),这些,这些,false), Span(3,4,List(2),管理,管理-01,false), Span(2,3,List(3),经营,经营-01,false), Span(1,2,List(4),我,我,false)),Map(2 -> 管理-01, 1 -> 这些, 4 -> 我, 0 -> 星星, 3 -> 经营-01),Map(管 -> 管理-01, 星 -> 星星, 我 -> 我, 这 -> 这些, 经 -> 经营-01))),[Ljava.lang.String;@73d69c0f,Annotation([Ljava.lang.String;@34237b90,[Ljava.lang.String;@1d01dfa5,[Ljava.lang.String;@4a31c2ee),Annotation([Ljava.lang.String;@d400943,[Ljava.lang.String;@22101c80,[Ledu.cmu.lti.nlp.amr.Dependency;@31ff1390),Annotation([Ljava.lang.String;@759d81f3,[Ljava.lang.String;@781a9412,[Ljava.lang.String;@5a4c638d),Annotation([Ljava.lang.String;@13e698c7,[Ljava.lang.String;@aed0151,[Ledu.cmu.lti.nlp.amr.Entity;@267bbe1a))
AMR:
(星 / 星星, mod, 这 / 这些)
(经 / 经营-01, beneficiary, 我 / 我)
(经 / 经营-01, location, 星 / 星星)
(经 / 经营-01, purpose, 管 / 管理-01)

Decoded in 8,422 microseconds
Sentence: 我 一 遍 又 一 遍 地 计算 它们 的 数目 。

Spans:
Span 3-4:  又 => 又
Span 6-7:  地 => 地
Span 8-9:  它们 => 它们
Span 0-1:  我 => 我
Span 10-11:  数目 => 数目
Span 7-8:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 8-9:  它们 => 它们
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  数目 => 数目
Oracle Span 7-8:  计算 => 计算-01

Extra span: 地 => 地
Dependencies:
1	我	_	PN	PN	_	8	nsubj	_	_
2	一	_	AD	AD	_	3	advmod	_	_
3	遍	_	VV	VV	_	8	dvpmod	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	遍	_	NN	NN	_	3	dobj	_	_
7	地	_	DEV	DEV	_	3	dvpm	_	_
8	计算	_	VV	VV	_	0	root	_	_
9	它们	_	PN	PN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	数目	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 计算-01, arg0, x2 / 我)
(x0 / 计算-01, arg1, x3 / 数目)
(x0 / 计算-01, manner, x6 / 又)
(x3 / 数目, poss, x4 / 它们)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),数目,数目,false), Span(8,9,List(1),它们,它们,false), Span(7,8,List(2),计算,计算-01,false), Span(6,7,List(3),地,地,false), Span(3,4,List(4),又,又,false), Span(0,1,List(5),我,我,false)),Map(2 -> 计算-01, 5 -> 我, 1 -> 它们, 4 -> 又, 0 -> 数目, 3 -> 地),Map(又 -> 又, 我 -> 我, 计 -> 计算-01, 它 -> 它们, 地 -> 地, 数 -> 数目))),[Ljava.lang.String;@1f12e153,Annotation([Ljava.lang.String;@389562d6,[Ljava.lang.String;@5a101b1c,[Ljava.lang.String;@2160e52a),Annotation([Ljava.lang.String;@29f0802c,[Ljava.lang.String;@3a60c416,[Ledu.cmu.lti.nlp.amr.Dependency;@60f2e0bd),Annotation([Ljava.lang.String;@469d003c,[Ljava.lang.String;@6b410923,[Ljava.lang.String;@57bd2029),Annotation([Ljava.lang.String;@203dd56b,[Ljava.lang.String;@e8fadb0,[Ledu.cmu.lti.nlp.amr.Entity;@6d64b553))
AMR:
(数 / 数目, poss, 它 / 它们)
(计 / 计算-01, ARG1, 地 / 地)
(计 / 计算-01, manner, 又 / 又)
(计 / 计算-01, prep-through, 我 / 我)
(计 / 计算-01, snt3, 数 / 数目)

Decoded in 13,658 microseconds
Sentence: 这 是 一 件 困难 的 事 。

Spans:
Span 6-7:  事 => 事
Span 4-5:  困难 => 困难-01
Span 1-2:  是 => 是-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  事 => 事
Oracle Span 4-5:  困难 => 困难-01
Oracle Span 0-1:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	件	_	M	M	_	7	clf	_	_
5	困难	_	VA	VA	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	事	_	NN	NN	_	2	attr	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 事, domain, x4 / 这)
(x0 / 事, mod, x3 / 困难-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),事,事,false), Span(4,5,List(1),困难,困难-01,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),这,这,false)),Map(2 -> 是-04, 1 -> 困难-01, 0 -> 事, 3 -> 这),Map(这 -> 这, 事 -> 事, 是 -> 是-04, 困 -> 困难-01))),[Ljava.lang.String;@53667cbe,Annotation([Ljava.lang.String;@1d3e6d34,[Ljava.lang.String;@6eafb10e,[Ljava.lang.String;@26a94fa5),Annotation([Ljava.lang.String;@464a4442,[Ljava.lang.String;@2873d672,[Ledu.cmu.lti.nlp.amr.Dependency;@3bc735b3),Annotation([Ljava.lang.String;@577f9109,[Ljava.lang.String;@4303b7f0,[Ljava.lang.String;@757529a4),Annotation([Ljava.lang.String;@779de014,[Ljava.lang.String;@5c41d037,[Ledu.cmu.lti.nlp.amr.Entity;@2234078))
AMR:
(事 / 事, domain, 这 / 这)
(事 / 事, mod, 困 / 困难-01)
(是 / 是-04, ARG1, 这 / 这)

Decoded in 7,454 microseconds
Sentence: 但 我 是 一 个 严肃 认真 的 人 ！ ”

Spans:
Span 5-6:  严肃 => 严肃
Span 8-9:  人 => 人
Span 1-2:  我 => 我
Span 2-3:  是 => 是-04
Span 6-7:  认真 => 认真-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  严肃 => 严肃-01
Oracle Span 8-9:  人 => 人
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  认真 => 认真-01

Incorrect span: 严肃 => 严肃
Extra span: 是 => 是-04
Missing span: 严肃 => 严肃-01
Dependencies:
1	但	_	AD	AD	_	3	advmod	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	9	clf	_	_
6	严肃	_	JJ	JJ	_	9	assmod	_	_
7	认真	_	JJ	JJ	_	6	dep	_	_
8	的	_	DEG	DEG	_	6	assm	_	_
9	人	_	NN	NN	_	3	attr	_	_
10	！	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 人, domain, x15 / 我)
(x11 / 人, mod, x12 / 认真-01)
(x11 / 人, mod, x13 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),人,人,false), Span(6,7,List(1),认真,认真-01,false), Span(5,6,List(2),严肃,严肃,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),我,我,false)),Map(2 -> 严肃, 1 -> 认真-01, 4 -> 我, 0 -> 人, 3 -> 是-04),Map(我 -> 我, 认 -> 认真-01, 严 -> 严肃, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@5ec77191,Annotation([Ljava.lang.String;@4642b71d,[Ljava.lang.String;@1450078a,[Ljava.lang.String;@c68a5f8),Annotation([Ljava.lang.String;@69c6161d,[Ljava.lang.String;@3aefae67,[Ledu.cmu.lti.nlp.amr.Dependency;@2e1792e7),Annotation([Ljava.lang.String;@6719a5b8,[Ljava.lang.String;@3eb631b8,[Ljava.lang.String;@796d3c9f),Annotation([Ljava.lang.String;@6bff19ff,[Ljava.lang.String;@41e1455d,[Ledu.cmu.lti.nlp.amr.Entity;@4e558728))
AMR:
(严 / 严肃, mod, 认 / 认真-01)
(严 / 严肃, prep-on-behalf, 是 / 是-04)
(人 / 人, mod, 认 / 认真-01)
(是 / 是-04, poss, 我 / 我)

Decoded in 11,428 microseconds
Sentence: 小 王子 仍然 还 不 满足 ，

Spans:
Span 4-5:  不 => 不
Span 2-3:  仍然 => 仍然
Span 0-1:  小 => 小
Span 5-6:  满足 => 满足-01
Span 1-2:  王子 => 王子
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  满足 => 满足-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 3-4:  还 => 还

Extra span: 不 => 不
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	仍然	_	AD	AD	_	6	advmod	_	_
4	还	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	满足	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 满足-01, arg0, x5 / 王子)
(x0 / 满足-01, manner, x3 / 还)
(x0 / 满足-01, manner, x4 / 仍然)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),满足,满足-01,false), Span(4,5,List(1),不,不,false), Span(3,4,List(2),还,还,false), Span(2,3,List(3),仍然,仍然,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小,false)),Map(2 -> 还, 5 -> 小, 1 -> 不, 4 -> 王子, 0 -> 满足-01, 3 -> 仍然),Map(王 -> 王子, 仍 -> 仍然, 小 -> 小, 满 -> 满足-01, 不 -> 不, 还 -> 还))),[Ljava.lang.String;@5eccd3b9,Annotation([Ljava.lang.String;@4d6f197e,[Ljava.lang.String;@6ef7623,[Ljava.lang.String;@64e1dd11),Annotation([Ljava.lang.String;@5c089b2f,[Ljava.lang.String;@6999cd39,[Ledu.cmu.lti.nlp.amr.Dependency;@14bae047),Annotation([Ljava.lang.String;@7ed9ae94,[Ljava.lang.String;@66908383,[Ljava.lang.String;@41477a6d),Annotation([Ljava.lang.String;@2bc12da,[Ljava.lang.String;@3122b117,[Ledu.cmu.lti.nlp.amr.Entity;@534ca02b))
AMR:
(满 / 满足-01, manner, 不 / 不)
(满 / 满足-01, manner, 仍 / 仍然)
(满 / 满足-01, manner, 还 / 还)
(满 / 满足-01, prep-on-behalf, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 11,906 microseconds
Sentence: 他 说 ： “ 对 我 来说 ， 如果 我 有 一 条 围巾 ， 我 可以 用 它 来 围 着 我 的 脖子 ， 并且 能 带走 它 。

Spans:
Span 0-1:  他 => 他
Span 16-17:  可以 => 可以-02
Span 20-21:  围 => 围-01
Span 13-14:  围巾 => 围巾
Span 29-30:  它 => 它
Span 18-19:  它 => 它
Span 4-5:  对 => 对-02
Span 28-29:  带走 => 带走-01
Span 22-23:  我 => 我
Span 15-16:  我 => 我
Span 9-10:  我 => 我
Span 5-6:  我 => 我
Span 10-11:  有 => 有-06
Span 19-20:  来 => 来-06
Span 6-7:  来说 => 来说-01
Span 17-18:  用 => 用
Span 27-28:  能 => 能
Span 24-25:  脖子 => 脖子
Span 1-2:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 16-17:  可以 => 可以-01
Oracle Span 20-21:  围 => 围-01
Oracle Span 13-14:  围巾 => 围巾
Oracle Span 18-19:  它 => 它
Oracle Span 28-29:  带走 => 带走-01
Oracle Span 5-6:  我 => 我
Oracle Span 10-11:  有 => 有-01
Oracle Span 6-7:  来说 => 来说-01
Oracle Span 17-18:  用 => 用-01
Oracle Span 27-28:  能 => 能-01
Oracle Span 24-25:  脖子 => 脖子
Oracle Span 1-2:  说 => 说-01

Extra span: 它 => 它
Incorrect span: 能 => 能
Extra span: 我 => 我
Extra span: 来 => 来-06
Incorrect span: 用 => 用
Incorrect span: 可以 => 可以-02
Extra span: 我 => 我
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Extra span: 对 => 对-02
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 有 => 有-01
Missing span: 可以 => 可以-01
Missing span: 用 => 用-01
Missing span: 能 => 能-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	2	punct	_	_
5	对	_	P	P	_	7	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	来说	_	VV	VV	_	2	ccomp	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	如果	_	CS	CS	_	11	advmod	_	_
10	我	_	PN	PN	_	11	top	_	_
11	有	_	VE	VE	_	21	pccomp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	条	_	M	M	_	14	clf	_	_
14	围巾	_	NN	NN	_	11	dobj	_	_
15	,	_	PU	PU	_	21	punct	_	_
16	我	_	PN	PN	_	21	nsubj	_	_
17	可以	_	VV	VV	_	21	mmod	_	_
18	用	_	P	P	_	21	prep	_	_
19	它	_	PN	PN	_	18	pobj	_	_
20	来	_	MSP	MSP	_	21	prtmod	_	_
21	围	_	VV	VV	_	7	ccomp	_	_
22	着	_	AS	AS	_	21	asp	_	_
23	我	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	脖子	_	NN	NN	_	21	dobj	_	_
26	,	_	PU	PU	_	7	punct	_	_
27	并且	_	CC	CC	_	7	cc	_	_
28	能	_	VV	VV	_	29	mmod	_	_
29	带走	_	VV	VV	_	7	dep	_	_
30	它	_	PN	PN	_	29	dobj	_	_
31	。	_	PU	PU	_	2	punct	_	_
32	他	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 来说-01)
(x17 / 可以-01, arg0, x18 / 用-01)
(x18 / 用-01, arg1, x20 / 它)
(x18 / 用-01, arg2, x21 / 围-01)
(x21 / 围-01, arg1, x22 / 脖子)
(x24 / 能-01, arg0, x25 / 带走-01)
(x3 / 来说-01, arg1, x4 / 我)
(x6 / 有-01, arg1, x8 / 围巾)

Input(Some(Graph(null,ArrayBuffer(Span(29,30,List(0),它,它,false), Span(28,29,List(1),带走,带走-01,false), Span(27,28,List(2),能,能,false), Span(24,25,List(3),脖子,脖子,false), Span(22,23,List(4),我,我,false), Span(20,21,List(5),围,围-01,false), Span(19,20,List(6),来,来-06,false), Span(18,19,List(7),它,它,false), Span(17,18,List(8),用,用,false), Span(16,17,List(9),可以,可以-02,false), Span(15,16,List(10),我,我,false), Span(13,14,List(11),围巾,围巾,false), Span(10,11,List(12),有,有-06,false), Span(9,10,List(13),我,我,false), Span(6,7,List(14),来说,来说-01,false), Span(5,6,List(15),我,我,false), Span(4,5,List(16),对,对-02,false), Span(1,2,List(17),说,说-02,false), Span(0,1,List(18),他,他,false)),Map(2 -> 能, 5 -> 围-01, 12 -> 有-06, 15 -> 我, 8 -> 用, 18 -> 他, 7 -> 它, 17 -> 说-02, 1 -> 带走-01, 4 -> 我, 11 -> 围巾, 14 -> 来说-01, 6 -> 来-06, 0 -> 它, 9 -> 可以-02, 16 -> 对-02, 3 -> 脖子, 10 -> 我, 13 -> 我),Map(脖 -> 脖子, 围2 -> 围巾, 我3 -> 我, 它2 -> 它, 用 -> 用, 我 -> 我, 来 -> 来-06, 能 -> 能, 我2 -> 我, 它 -> 它, 他 -> 他, 来2 -> 来说-01, 围 -> 围-01, 说 -> 说-02, 带 -> 带走-01, 我4 -> 我, 对 -> 对-02, 可 -> 可以-02, 有 -> 有-06))),[Ljava.lang.String;@29a23c3d,Annotation([Ljava.lang.String;@4b6ac111,[Ljava.lang.String;@6fe46b62,[Ljava.lang.String;@591fd34d),Annotation([Ljava.lang.String;@61e45f87,[Ljava.lang.String;@7c9b78e3,[Ledu.cmu.lti.nlp.amr.Dependency;@3068b369),Annotation([Ljava.lang.String;@17ca8b92,[Ljava.lang.String;@5491f68b,[Ljava.lang.String;@736ac09a),Annotation([Ljava.lang.String;@6ecd665,[Ljava.lang.String;@45394b31,[Ledu.cmu.lti.nlp.amr.Entity;@1ec7d8b3))
AMR:
(可 / 可以-02, degree, 围2 / 围巾)
(可 / 可以-02, location, 用 / 用)
(可 / 可以-02, manner, 我2 / 我)
(围 / 围-01, manner, 来 / 来-06)
(围 / 围-01, prep-along-with, 我 / 我)
(围 / 围-01, time, 脖 / 脖子)
(围2 / 围巾, mod, 有 / 有-06)
(它 / 它, location, 带 / 带走-01)
(对 / 对-02, ARG3, 我4 / 我)
(对 / 对-02, prep-following, 来2 / 来说-01)
(有 / 有-06, manner, 我3 / 我)
(来 / 来-06, manner, 用 / 用)
(来 / 来-06, quant, 它2 / 它)
(来2 / 来说-01, accompanier, 有 / 有-06)
(能 / 能, mod, 脖 / 脖子)
(能 / 能, prep-following, 带 / 带走-01)
(说 / 说-02, prep-following, 他 / 他)
(说 / 说-02, prep-following, 对 / 对-02)

Decoded in 110,799 microseconds
Sentence: 我 有 一 朵 花 的话 ， 我 就 可以 摘下 我 的 花 ， 并且 把 它 带走 。

Spans:
Span 9-10:  可以 => 可以-02
Span 17-18:  它 => 它
Span 8-9:  就 => 就-01
Span 18-19:  带走 => 带走-01
Span 11-12:  我 => 我
Span 7-8:  我 => 我
Span 0-1:  我 => 我
Span 10-11:  摘下 => 摘下-01
Span 1-2:  有 => 有-06
Span 13-14:  花 => 花-01
Span 4-5:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  可以 => 可以-01
Oracle Span 17-18:  它 => 它
Oracle Span 8-9:  就 => 就
Oracle Span 18-19:  带走 => 带走-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  摘下 => 摘下-01
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  花 => 花
Oracle Span 13-14:  花 => 花

Incorrect span: 花 => 花-01
Extra span: 我 => 我
Incorrect span: 可以 => 可以-02
Incorrect span: 就 => 就-01
Extra span: 我 => 我
Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 花 => 花
Missing span: 可以 => 可以-01
Missing span: 花 => 花
Missing span: 就 => 就
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	有	_	VE	VE	_	5	nsubj	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	2	dep	_	_
5	花	_	VV	VV	_	0	root	_	_
6	的话	_	SP	SP	_	5	dep	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	就	_	AD	AD	_	11	advmod	_	_
10	可以	_	VV	VV	_	11	mmod	_	_
11	摘下	_	VV	VV	_	5	conj	_	_
12	我	_	PN	PN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	花	_	NN	NN	_	11	dobj	_	_
15	,	_	PU	PU	_	11	punct	_	_
16	并且	_	CC	CC	_	11	cc	_	_
17	把	_	BA	BA	_	19	ba	_	_
18	它	_	PN	PN	_	19	nsubj	_	_
19	带走	_	VV	VV	_	11	dep	_	_
20	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 带走-01, arg1, x15 / 它)
(x2 / 有-01, arg0, x3 / 我)
(x2 / 有-01, arg1, x4 / 花)
(x7 / 可以-01, arg0, x9 / 摘下-01)
(x7 / 可以-01, manner, x8 / 就)
(x9 / 摘下-01, arg1, x11 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),带走,带走-01,false), Span(17,18,List(1),它,它,false), Span(13,14,List(2),花,花-01,false), Span(11,12,List(3),我,我,false), Span(10,11,List(4),摘下,摘下-01,false), Span(9,10,List(5),可以,可以-02,false), Span(8,9,List(6),就,就-01,false), Span(7,8,List(7),我,我,false), Span(4,5,List(8),花,花-01,false), Span(1,2,List(9),有,有-06,false), Span(0,1,List(10),我,我,false)),Map(2 -> 花-01, 5 -> 可以-02, 8 -> 花-01, 7 -> 我, 1 -> 它, 4 -> 摘下-01, 6 -> 就-01, 9 -> 有-06, 0 -> 带走-01, 10 -> 我, 3 -> 我),Map(就 -> 就-01, 我3 -> 我, 我 -> 我, 我2 -> 我, 花2 -> 花-01, 摘 -> 摘下-01, 它 -> 它, 花 -> 花-01, 带 -> 带走-01, 有 -> 有-06, 可 -> 可以-02))),[Ljava.lang.String;@3b0ca5e1,Annotation([Ljava.lang.String;@5bb3131b,[Ljava.lang.String;@54dcbb9f,[Ljava.lang.String;@74fef3f7),Annotation([Ljava.lang.String;@2a037324,[Ljava.lang.String;@69eb86b4,[Ledu.cmu.lti.nlp.amr.Dependency;@585ac855),Annotation([Ljava.lang.String;@5bb8f9e2,[Ljava.lang.String;@6a933be2,[Ljava.lang.String;@5f78de22),Annotation([Ljava.lang.String;@516ebdf8,[Ljava.lang.String;@4d8539de,[Ledu.cmu.lti.nlp.amr.Entity;@3eba57a7))
AMR:
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, op, 摘 / 摘下-01)
(带 / 带走-01, age, 可 / 可以-02)
(带 / 带走-01, value, 它 / 它)
(摘 / 摘下-01, mode, 花 / 花-01)
(摘 / 摘下-01, season, 我2 / 我)
(有 / 有-06, ARG3, 花2 / 花-01)
(有 / 有-06, ARG6, 我3 / 我)
(花 / 花-01, poss, 我 / 我)
(花2 / 花-01, ARG4, 我2 / 我)

Decoded in 38,023 microseconds
Sentence: 可 你 却 不 能 摘下 这些 星星 呀 ！ ”

Spans:
Span 3-4:  不 => 不
Span 1-2:  你 => 你
Span 0-1:  可 => 可-01
Span 5-6:  摘下 => 摘下-01
Span 7-8:  星星 => 星星
Span 4-5:  能 => 能
Span 6-7:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  摘下 => 摘下-01
Oracle Span 7-8:  星星 => 星星
Oracle Span 4-5:  能 => 能-01
Oracle Span 6-7:  这些 => 这些

Incorrect span: 能 => 能
Extra span: 不 => 不
Extra span: 可 => 可-01
Missing span: 能 => 能-01
Dependencies:
1	可	_	AD	AD	_	6	advmod	_	_
2	你	_	PN	PN	_	6	nsubj	_	_
3	却	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	能	_	VV	VV	_	6	mmod	_	_
6	摘下	_	VV	VV	_	0	root	_	_
7	这些	_	DT	DT	_	8	det	_	_
8	星星	_	NN	NN	_	6	dobj	_	_
9	呀	_	SP	SP	_	6	dep	_	_
10	！	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 能-01, arg0, x14 / 摘下-01)
(x14 / 摘下-01, arg0, x15 / 你)
(x14 / 摘下-01, arg1, x16 / 星星)
(x16 / 星星, mod, x17 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),星星,星星,false), Span(6,7,List(1),这些,这些,false), Span(5,6,List(2),摘下,摘下-01,false), Span(4,5,List(3),能,能,false), Span(3,4,List(4),不,不,false), Span(1,2,List(5),你,你,false), Span(0,1,List(6),可,可-01,false)),Map(2 -> 摘下-01, 5 -> 你, 1 -> 这些, 4 -> 不, 6 -> 可-01, 0 -> 星星, 3 -> 能),Map(星 -> 星星, 能 -> 能, 这 -> 这些, 你 -> 你, 摘 -> 摘下-01, 不 -> 不, 可 -> 可-01))),[Ljava.lang.String;@272a179c,Annotation([Ljava.lang.String;@30feffc,[Ljava.lang.String;@67207d8a,[Ljava.lang.String;@bcb09a6),Annotation([Ljava.lang.String;@7c2a69b4,[Ljava.lang.String;@a619c2,[Ledu.cmu.lti.nlp.amr.Dependency;@648ee871),Annotation([Ljava.lang.String;@375b5b7f,[Ljava.lang.String;@1813f3e9,[Ljava.lang.String;@28cb9120),Annotation([Ljava.lang.String;@3b152928,[Ljava.lang.String;@56781d96,[Ledu.cmu.lti.nlp.amr.Entity;@5173200b))
AMR:
(可 / 可-01, op, 不 / 不)
(可 / 可-01, op, 你 / 你)
(摘 / 摘下-01, degree, 这 / 这些)
(摘 / 摘下-01, manner, 能 / 能)
(星 / 星星, mod, 这 / 这些)
(能 / 能, manner, 不 / 不)

Decoded in 14,826 microseconds
Sentence: “ 我 不 能 摘 ，

Spans:
Span 2-3:  不 => 不
Span 1-2:  我 => 我
Span 4-5:  摘 => 摘-01
Span 3-4:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  摘 => 摘-01
Oracle Span 3-4:  能 => 能-01

Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	能	_	VV	VV	_	0	root	_	_
5	摘	_	VV	VV	_	4	conj	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 能-01, arg0, x9 / 摘-01)
(x9 / 摘-01, arg0, x10 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),摘,摘-01,false), Span(3,4,List(1),能,能,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),我,我,false)),Map(2 -> 不, 1 -> 能, 0 -> 摘-01, 3 -> 我),Map(我 -> 我, 能 -> 能, 摘 -> 摘-01, 不 -> 不))),[Ljava.lang.String;@25c5e994,Annotation([Ljava.lang.String;@378bd86d,[Ljava.lang.String;@2189e7a7,[Ljava.lang.String;@69b2f8e5),Annotation([Ljava.lang.String;@6331250e,[Ljava.lang.String;@a10c1b5,[Ledu.cmu.lti.nlp.amr.Dependency;@644abb8f),Annotation([Ljava.lang.String;@1a411233,[Ljava.lang.String;@70325d20,[Ljava.lang.String;@7c2327fa),Annotation([Ljava.lang.String;@4d847d32,[Ljava.lang.String;@5f462e3b,[Ledu.cmu.lti.nlp.amr.Entity;@3d7fa3ae))
AMR:
(不 / 不, poss, 我 / 我)
(能 / 能, mod, 不 / 不)
(能 / 能, purpose, 摘 / 摘-01)

Decoded in 6,480 microseconds
Sentence: 但 我 可以 把 它们 存 在 银行 里 。 ”

Spans:
Span 2-3:  可以 => 可以-02
Span 6-7:  在 => 在-01
Span 5-6:  存 => 存-01
Span 4-5:  它们 => 它们
Span 1-2:  我 => 我
Span 7-8:  银行 => 银行

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  可以 => 可以-01
Oracle Span 5-6:  存 => 存-01
Oracle Span 4-5:  它们 => 它们
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  银行 => 银行

Extra span: 在 => 在-01
Incorrect span: 可以 => 可以-02
Missing span: 可以 => 可以-01
Dependencies:
1	但	_	AD	AD	_	6	advmod	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	可以	_	VV	VV	_	6	mmod	_	_
4	把	_	BA	BA	_	6	ba	_	_
5	它们	_	PN	PN	_	6	nsubj	_	_
6	存	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	银行	_	NN	NN	_	9	lobj	_	_
9	里	_	LC	LC	_	7	plmod	_	_
10	。	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 可以-01, arg0, x13 / 存-01)
(x13 / 存-01, arg0, x14 / 我)
(x13 / 存-01, arg1, x15 / 它们)
(x13 / 存-01, arg2, x16 / 银行)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),银行,银行,false), Span(6,7,List(1),在,在-01,false), Span(5,6,List(2),存,存-01,false), Span(4,5,List(3),它们,它们,false), Span(2,3,List(4),可以,可以-02,false), Span(1,2,List(5),我,我,false)),Map(2 -> 存-01, 5 -> 我, 1 -> 在-01, 4 -> 可以-02, 0 -> 银行, 3 -> 它们),Map(在 -> 在-01, 我 -> 我, 它 -> 它们, 存 -> 存-01, 银 -> 银行, 可 -> 可以-02))),[Ljava.lang.String;@58065f0c,Annotation([Ljava.lang.String;@3605c4d3,[Ljava.lang.String;@585c13de,[Ljava.lang.String;@187eb9a8),Annotation([Ljava.lang.String;@726a6b94,[Ljava.lang.String;@6ad11a56,[Ledu.cmu.lti.nlp.amr.Dependency;@522b2631),Annotation([Ljava.lang.String;@3ff57625,[Ljava.lang.String;@1ee29c84,[Ljava.lang.String;@7c8326a4),Annotation([Ljava.lang.String;@77128dab,[Ljava.lang.String;@63429932,[Ledu.cmu.lti.nlp.amr.Entity;@69ce2f62))
AMR:
(可 / 可以-02, poss, 我 / 我)
(在 / 在-01, quant, 银 / 银行)
(存 / 存-01, ARG2, 在 / 在-01)
(存 / 存-01, prep-on-behalf, 可 / 可以-02)
(存 / 存-01, prep-on-behalf, 它 / 它们)

Decoded in 12,758 microseconds
Sentence: “ 这 是 什么 意思 呢 ？ ”

Spans:
Span 3-4:  什么 => 什么
Span 4-5:  意思 => 意思-01
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Extra span: 意思 => 意思-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	意思	_	NN	NN	_	3	attr	_	_
6	呢	_	SP	SP	_	3	dep	_	_
7	？	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),意思,意思-01,false), Span(3,4,List(1),什么,什么,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),这,这,false)),Map(2 -> 是-04, 1 -> 什么, 0 -> 意思-01, 3 -> 这),Map(这 -> 这, 意 -> 意思-01, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@c9d82f9,Annotation([Ljava.lang.String;@6f012914,[Ljava.lang.String;@18fdb6cf,[Ljava.lang.String;@d02f8d),Annotation([Ljava.lang.String;@60baef24,[Ljava.lang.String;@61533ae,[Ledu.cmu.lti.nlp.amr.Dependency;@732bb66d),Annotation([Ljava.lang.String;@720653c2,[Ljava.lang.String;@45f24169,[Ljava.lang.String;@6ad5923a),Annotation([Ljava.lang.String;@4463d9d3,[Ljava.lang.String;@43b0ade,[Ledu.cmu.lti.nlp.amr.Entity;@5395ea39))
AMR:
(什 / 什么, mod, 是 / 是-04)
(意 / 意思-01, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)

Decoded in 6,044 microseconds
Sentence: “ 这 就 是 说 ， 我 把 星星 的 数目 写 在 一 片 小 纸头 上 ，

Spans:
Span 11-12:  写 => 写-01
Span 12-13:  在 => 在-01
Span 15-16:  小 => 小
Span 2-3:  就 => 就-01
Span 6-7:  我 => 我
Span 10-11:  数目 => 数目
Span 8-9:  星星 => 星星
Span 3-4:  是 => 是-04
Span 16-17:  纸头 => 纸头
Span 4-5:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  写 => 写-01
Oracle Span 15-16:  小 => 小-01
Oracle Span 6-7:  我 => 我
Oracle Span 10-11:  数目 => 数目
Oracle Span 8-9:  星星 => 星星
Oracle Span 16-17:  纸头 => 纸头
Oracle Span 1-2:  这 => 这

Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 说 => 说-02
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	我	_	PN	PN	_	12	nsubj	_	_
8	把	_	BA	BA	_	12	ba	_	_
9	星星	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	数目	_	NN	NN	_	12	nsubj	_	_
12	写	_	VV	VV	_	5	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	片	_	M	M	_	17	clf	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	纸头	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	13	plmod	_	_
19	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x17 / 写-01, arg0, x18 / 我)
(x17 / 写-01, arg1, x19 / 数目)
(x17 / 写-01, arg2, x21 / 纸头)
(x19 / 数目, mod, x20 / 星星)
(x21 / 纸头, mod, x22 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),纸头,纸头,false), Span(15,16,List(1),小,小,false), Span(12,13,List(2),在,在-01,false), Span(11,12,List(3),写,写-01,false), Span(10,11,List(4),数目,数目,false), Span(8,9,List(5),星星,星星,false), Span(6,7,List(6),我,我,false), Span(4,5,List(7),说,说-02,false), Span(3,4,List(8),是,是-04,false), Span(2,3,List(9),就,就-01,false), Span(1,2,List(10),这,这,false)),Map(2 -> 在-01, 5 -> 星星, 8 -> 是-04, 7 -> 说-02, 1 -> 小, 4 -> 数目, 6 -> 我, 9 -> 就-01, 0 -> 纸头, 10 -> 这, 3 -> 写-01),Map(写 -> 写-01, 就 -> 就-01, 星 -> 星星, 在 -> 在-01, 我 -> 我, 这 -> 这, 小 -> 小, 纸 -> 纸头, 说 -> 说-02, 数 -> 数目, 是 -> 是-04))),[Ljava.lang.String;@1517f633,Annotation([Ljava.lang.String;@4fe01803,[Ljava.lang.String;@13d186db,[Ljava.lang.String;@6f6962ba),Annotation([Ljava.lang.String;@4565a70a,[Ljava.lang.String;@a0a9fa5,[Ledu.cmu.lti.nlp.amr.Dependency;@15723761),Annotation([Ljava.lang.String;@312afbc7,[Ljava.lang.String;@599f571f,[Ljava.lang.String;@7b60c3e),Annotation([Ljava.lang.String;@3fbfa96,[Ljava.lang.String;@6569dded,[Ledu.cmu.lti.nlp.amr.Entity;@466d49f0))
AMR:
(写 / 写-01, location, 数 / 数目)
(在 / 在-01, degree, 写 / 写-01)
(在 / 在-01, purpose, 纸 / 纸头)
(就 / 就-01, mod, 这 / 这)
(数 / 数目, mod, 星 / 星星)
(是 / 是-04, manner, 就 / 就-01)
(纸 / 纸头, mod, 小 / 小)
(说 / 说-02, degree, 是 / 是-04)
(说 / 说-02, purpose, 写 / 写-01)
(说 / 说-02, subset, 我 / 我)

Decoded in 39,194 microseconds
Sentence: 然后 把 这 片 纸头 锁 在 一 个 抽屉 里 。 ”

Spans:
Span 6-7:  在 => 在-01
Span 9-10:  抽屉 => 抽屉
Span 4-5:  纸头 => 纸头
Span 2-3:  这 => 这
Span 5-6:  锁 => 锁-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  抽屉 => 抽屉
Oracle Span 4-5:  纸头 => 纸头
Oracle Span 2-3:  这 => 这
Oracle Span 5-6:  锁 => 锁-02

Extra span: 在 => 在-01
Dependencies:
1	然后	_	AD	AD	_	6	advmod	_	_
2	把	_	BA	BA	_	6	ba	_	_
3	这	_	DT	DT	_	5	det	_	_
4	片	_	M	M	_	3	clf	_	_
5	纸头	_	NN	NN	_	6	nsubj	_	_
6	锁	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	抽屉	_	NN	NN	_	11	lobj	_	_
11	里	_	LC	LC	_	7	plmod	_	_
12	。	_	PU	PU	_	6	punct	_	_
13	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 锁-02, arg1, x11 / 纸头)
(x10 / 锁-02, arg2, x13 / 抽屉)
(x11 / 纸头, mod, x12 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),抽屉,抽屉,false), Span(6,7,List(1),在,在-01,false), Span(5,6,List(2),锁,锁-02,false), Span(4,5,List(3),纸头,纸头,false), Span(2,3,List(4),这,这,false)),Map(2 -> 锁-02, 1 -> 在-01, 4 -> 这, 0 -> 抽屉, 3 -> 纸头),Map(在 -> 在-01, 这 -> 这, 纸 -> 纸头, 抽 -> 抽屉, 锁 -> 锁-02))),[Ljava.lang.String;@710d7aff,Annotation([Ljava.lang.String;@2d7e1102,[Ljava.lang.String;@65327f5,[Ljava.lang.String;@2adddc06),Annotation([Ljava.lang.String;@301d8120,[Ljava.lang.String;@6d367020,[Ledu.cmu.lti.nlp.amr.Dependency;@72458efc),Annotation([Ljava.lang.String;@36bc415e,[Ljava.lang.String;@6a74d228,[Ljava.lang.String;@349d0836),Annotation([Ljava.lang.String;@6a714237,[Ljava.lang.String;@3e134896,[Ledu.cmu.lti.nlp.amr.Entity;@72ba28ee))
AMR:
(在 / 在-01, snt3, 抽 / 抽屉)
(纸 / 纸头, mod, 这 / 这)
(锁 / 锁-02, ARG5, 在 / 在-01)
(锁 / 锁-02, time, 纸 / 纸头)

Decoded in 10,095 microseconds
Sentence: “ 这 就 算 完事 了 吗 ？ ”

Spans:
Span 4-5:  完事 => 完事
Span 2-3:  就 => 就-01
Span 3-4:  算 => 算-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  完事 => 完事
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  算 => 算-01
Oracle Span 1-2:  这 => 这

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	算	_	VV	VV	_	0	root	_	_
5	完事	_	VV	VV	_	4	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	吗	_	SP	SP	_	4	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 算-01, arg0, x9 / 这)
(x8 / 算-01, arg1, x11 / 完事)
(x8 / 算-01, manner, x10 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),完事,完事,false), Span(3,4,List(1),算,算-01,false), Span(2,3,List(2),就,就-01,false), Span(1,2,List(3),这,这,false)),Map(2 -> 就-01, 1 -> 算-01, 0 -> 完事, 3 -> 这),Map(就 -> 就-01, 这 -> 这, 完 -> 完事, 算 -> 算-01))),[Ljava.lang.String;@2e3a5237,Annotation([Ljava.lang.String;@4ebadd3d,[Ljava.lang.String;@6ac97b84,[Ljava.lang.String;@4917d36b),Annotation([Ljava.lang.String;@35c09b94,[Ljava.lang.String;@2d0bfb24,[Ledu.cmu.lti.nlp.amr.Dependency;@c3fa05a),Annotation([Ljava.lang.String;@7b44b63d,[Ljava.lang.String;@4a699efa,[Ljava.lang.String;@38499e48),Annotation([Ljava.lang.String;@4905c46b,[Ljava.lang.String;@17ae7628,[Ledu.cmu.lti.nlp.amr.Entity;@1136b469))
AMR:
(就 / 就-01, mod, 这 / 这)
(算 / 算-01, location, 完 / 完事)
(算 / 算-01, manner, 就 / 就-01)

Decoded in 6,630 microseconds
Sentence: “ 这样 就 行 了 。 ”

Spans:
Span 2-3:  就 => 就-01
Span 3-4:  行 => 行-04
Span 1-2:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  就 => 就
Oracle Span 3-4:  行 => 行-04
Oracle Span 1-2:  这样 => 这样

Incorrect span: 就 => 就-01
Incorrect span: 这样 => 这样-01
Missing span: 这样 => 这样
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这样	_	AD	AD	_	4	advmod	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	行	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 行-04, arg0, x8 / 这样)
(x6 / 行-04, manner, x7 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),行,行-04,false), Span(2,3,List(1),就,就-01,false), Span(1,2,List(2),这样,这样-01,false)),Map(2 -> 这样-01, 1 -> 就-01, 0 -> 行-04),Map(就 -> 就-01, 这 -> 这样-01, 行 -> 行-04))),[Ljava.lang.String;@6579c3d9,Annotation([Ljava.lang.String;@2b87581,[Ljava.lang.String;@66434cc8,[Ljava.lang.String;@42f22995),Annotation([Ljava.lang.String;@693e4d19,[Ljava.lang.String;@286b39c2,[Ledu.cmu.lti.nlp.amr.Dependency;@5432050b),Annotation([Ljava.lang.String;@75f2099,[Ljava.lang.String;@1c12f3ee,[Ljava.lang.String;@6d467c87),Annotation([Ljava.lang.String;@29182679,[Ljava.lang.String;@57bd802b,[Ledu.cmu.lti.nlp.amr.Entity;@5cbb84b1))
AMR:
(就 / 就-01, degree, 这 / 这样-01)
(行 / 行-04, manner, 就 / 就-01)

Decoded in 4,512 microseconds
Sentence: 小 王子 想道 ： “ 真 好玩 。

Spans:
Span 6-7:  好玩 => 好玩-01
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 5-6:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  好玩 => 好玩-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  真 => 真

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	想道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	7	punct	_	_
6	真	_	AD	AD	_	7	advmod	_	_
7	好玩	_	VA	VA	_	3	ccomp	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	王子	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x2 / 王子, mod, x3 / 小-01)
(x4 / 好玩-01, degree, x5 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),好玩,好玩-01,false), Span(5,6,List(1),真,真,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小,false)),Map(2 -> 王子, 1 -> 真, 0 -> 好玩-01, 3 -> 小),Map(王 -> 王子, 小 -> 小, 好 -> 好玩-01, 真 -> 真))),[Ljava.lang.String;@2c779e5,Annotation([Ljava.lang.String;@6a84bc2a,[Ljava.lang.String;@5183d589,[Ljava.lang.String;@511d5d04),Annotation([Ljava.lang.String;@682c1e93,[Ljava.lang.String;@27068a50,[Ledu.cmu.lti.nlp.amr.Dependency;@68e62ca4),Annotation([Ljava.lang.String;@5328a9c1,[Ljava.lang.String;@5b78fdb1,[Ljava.lang.String;@48bfb884),Annotation([Ljava.lang.String;@11653e3b,[Ljava.lang.String;@715fb77,[Ledu.cmu.lti.nlp.amr.Entity;@1b9c1b51))
AMR:
(好 / 好玩-01, degree, 真 / 真)
(小 / 小, purpose, 好 / 好玩-01)
(王 / 王子, mod, 小 / 小)

Decoded in 10,323 microseconds
Sentence: 这 倒 蛮 有 诗意 ，

Spans:
Span 1-2:  倒 => 倒-02
Span 3-4:  有 => 有-06
Span 2-3:  蛮 => 蛮
Span 4-5:  诗意 => 诗意-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  有 => 有-02
Oracle Span 2-3:  蛮 => 蛮
Oracle Span 4-5:  诗意 => 诗意-01
Oracle Span 0-1:  这 => 这

Incorrect span: 有 => 有-06
Extra span: 倒 => 倒-02
Missing span: 有 => 有-02
Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	倒	_	AD	AD	_	4	advmod	_	_
3	蛮	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	诗意	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 有-02, arg0, x3 / 这)
(x0 / 有-02, arg1, x4 / 诗意-01)
(x0 / 有-02, degree, x2 / 蛮)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),诗意,诗意-01,false), Span(3,4,List(1),有,有-06,false), Span(2,3,List(2),蛮,蛮,false), Span(1,2,List(3),倒,倒-02,false), Span(0,1,List(4),这,这,false)),Map(2 -> 蛮, 1 -> 有-06, 4 -> 这, 0 -> 诗意-01, 3 -> 倒-02),Map(这 -> 这, 诗 -> 诗意-01, 倒 -> 倒-02, 蛮 -> 蛮, 有 -> 有-06))),[Ljava.lang.String;@2e52fb3e,Annotation([Ljava.lang.String;@16fe9c29,[Ljava.lang.String;@3e9803c2,[Ljava.lang.String;@4525d1d3),Annotation([Ljava.lang.String;@7c974942,[Ljava.lang.String;@1eea9d2d,[Ledu.cmu.lti.nlp.amr.Dependency;@60921b21),Annotation([Ljava.lang.String;@bd2f5a9,[Ljava.lang.String;@4d4960c8,[Ljava.lang.String;@7808fb9),Annotation([Ljava.lang.String;@773bd77b,[Ljava.lang.String;@6b580b88,[Ledu.cmu.lti.nlp.amr.Entity;@6d91790b))
AMR:
(倒 / 倒-02, ARG1, 这 / 这)
(有 / 有-06, degree, 蛮 / 蛮)
(有 / 有-06, op, 这 / 这)
(有 / 有-06, year, 诗 / 诗意-01)

Decoded in 9,111 microseconds
Sentence: 可是 ， 并 不 算 是 了不起 的 正经事 。 ”

Spans:
Span 3-4:  不 => 不
Span 6-7:  了不起 => 了不起-01
Span 2-3:  并 => 并
Span 5-6:  是 => 是-04
Span 8-9:  正经事 => 正经事
Span 4-5:  算 => 算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  了不起 => 了不起-01
Oracle Span 4-5:  算 => 算-01

Extra span: 正经事 => 正经事
Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 并 => 并
Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	并	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	算	_	VV	VV	_	0	root	_	_
6	是	_	VC	VC	_	5	ccomp	_	_
7	了不起	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	正经事	_	NN	NN	_	6	attr	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),正经事,正经事,false), Span(6,7,List(1),了不起,了不起-01,false), Span(5,6,List(2),是,是-04,false), Span(4,5,List(3),算,算-01,false), Span(3,4,List(4),不,不,false), Span(2,3,List(5),并,并,false)),Map(2 -> 是-04, 5 -> 并, 1 -> 了不起-01, 4 -> 不, 0 -> 正经事, 3 -> 算-01),Map(了 -> 了不起-01, 正 -> 正经事, 算 -> 算-01, 不 -> 不, 并 -> 并, 是 -> 是-04))),[Ljava.lang.String;@6e6fce47,Annotation([Ljava.lang.String;@47c64cfe,[Ljava.lang.String;@6ce90bc5,[Ljava.lang.String;@a567e72),Annotation([Ljava.lang.String;@1a5b8489,[Ljava.lang.String;@6f8f8a80,[Ledu.cmu.lti.nlp.amr.Dependency;@4b1c0397),Annotation([Ljava.lang.String;@72805168,[Ljava.lang.String;@34b9fc7d,[Ljava.lang.String;@27f1bbe0),Annotation([Ljava.lang.String;@cda0432,[Ljava.lang.String;@7c211fd0,[Ledu.cmu.lti.nlp.amr.Entity;@7004e3d))
AMR:
(不 / 不, mod, 并 / 并)
(是 / 是-04, manner, 算 / 算-01)
(是 / 是-04, mod, 了 / 了不起-01)
(正 / 正经事, mod, 了 / 了不起-01)
(算 / 算-01, manner, 不 / 不)

Decoded in 11,518 microseconds
Sentence: 关于 什么 是 正经事 ， 小 王子 的 看法 与 大人们 的 看法 非常 不同 。

Spans:
Span 14-15:  不同 => 不同-01
Span 1-2:  什么 => 什么
Span 10-11:  大人们 => 大人们
Span 5-6:  小 => 小
Span 2-3:  是 => 是-04
Span 3-4:  正经事 => 正经事
Span 6-7:  王子 => 王子
Span 12-13:  看法 => 看法
Span 8-9:  看法 => 看法
Span 13-14:  非常 => 非常

Langrangian relaxation converged after 13 iterations. Delta = 0.0
Oracle Span 10-11:  大人们 => 大人们
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 8-9:  看法 => 看法
Oracle Span 12-13:  看法 => 看法
Oracle Span 13-14:  非常 => 非常

Extra span: 不同 => 不同-01
Incorrect span: 小 => 小
Extra span: 正经事 => 正经事
Extra span: 是 => 是-04
Extra span: 什么 => 什么
Missing span: 小 => 小-01
Dependencies:
1	关于	_	P	P	_	3	prep	_	_
2	什么	_	PN	PN	_	1	pobj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	正经事	_	NN	NN	_	3	attr	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	看法	_	NN	NN	_	15	nsubj	_	_
10	与	_	P	P	_	15	prep	_	_
11	大人们	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	看法	_	NN	NN	_	10	pobj	_	_
14	非常	_	AD	AD	_	15	advmod	_	_
15	不同	_	VA	VA	_	3	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 看法, poss, x16 / 王子)
(x16 / 王子, mod, x17 / 小-01)
(x18 / 看法, poss, x19 / 大人们)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),不同,不同-01,false), Span(13,14,List(1),非常,非常,false), Span(12,13,List(2),看法,看法,false), Span(10,11,List(3),大人们,大人们,false), Span(8,9,List(4),看法,看法,false), Span(6,7,List(5),王子,王子,false), Span(5,6,List(6),小,小,false), Span(3,4,List(7),正经事,正经事,false), Span(2,3,List(8),是,是-04,false), Span(1,2,List(9),什么,什么,false)),Map(2 -> 看法, 5 -> 王子, 8 -> 是-04, 7 -> 正经事, 1 -> 非常, 4 -> 看法, 6 -> 小, 9 -> 什么, 0 -> 不同-01, 3 -> 大人们),Map(看2 -> 看法, 王 -> 王子, 大 -> 大人们, 正 -> 正经事, 小 -> 小, 非 -> 非常, 不 -> 不同-01, 看 -> 看法, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@2d84cb86,Annotation([Ljava.lang.String;@71a3a190,[Ljava.lang.String;@588ffeb,[Ljava.lang.String;@7c28c1),Annotation([Ljava.lang.String;@baf1bb3,[Ljava.lang.String;@67ec8477,[Ledu.cmu.lti.nlp.amr.Dependency;@25d958c6),Annotation([Ljava.lang.String;@4482469c,[Ljava.lang.String;@3703bf3c,[Ljava.lang.String;@34cf5a97),Annotation([Ljava.lang.String;@5b3f3ba0,[Ljava.lang.String;@ddf20fd,[Ledu.cmu.lti.nlp.amr.Entity;@278f8425))
AMR:
(不 / 不同-01, degree, 非 / 非常)
(不 / 不同-01, snt3, 看2 / 看法)
(什 / 什么, ARG3, 是 / 是-04)
(是 / 是-04, age, 看2 / 看法)
(正 / 正经事, ARG3, 是 / 是-04)
(王 / 王子, mod, 小 / 小)
(看 / 看法, ARG4, 不 / 不同-01)
(看 / 看法, poss, 大 / 大人们)
(看2 / 看法, poss, 王 / 王子)

Decoded in 99,126 microseconds
Sentence: 他 接着 又 说 ： “ 我 有 一 朵 花 ， 我 每天 都 给 她 浇水 。

Spans:
Span 0-1:  他 => 他
Span 2-3:  又 => 又
Span 16-17:  她 => 她
Span 12-13:  我 => 我
Span 6-7:  我 => 我
Span 1-2:  接着 => 接着-01
Span 7-8:  有 => 有-06
Span 17-18:  浇水 => 浇水-01
Span 15-16:  给 => 给-02
Span 10-11:  花 => 花-01
Span 3-4:  说 => 说-02
Span 14-15:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 6-7:  我 => 我
Oracle Span 7-8:  有 => 有-01
Oracle Span 17-18:  浇水 => 浇水-01
Oracle Span 10-11:  花 => 花
Oracle Span 3-4:  说 => 说-01
Oracle Span 14-15:  都 => 都

Extra span: 她 => 她
Extra span: 给 => 给-02
Extra span: 我 => 我
Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Incorrect span: 说 => 说-02
Extra span: 接着 => 接着-01
Missing span: 说 => 说-01
Missing span: 有 => 有-01
Missing span: 花 => 花
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	接着	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	我	_	PN	PN	_	8	top	_	_
8	有	_	VE	VE	_	4	ccomp	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	朵	_	M	M	_	11	clf	_	_
11	花	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	我	_	PN	PN	_	18	nsubj	_	_
14	每天	_	AD	AD	_	18	advmod	_	_
15	都	_	AD	AD	_	18	advmod	_	_
16	给	_	P	P	_	18	prep	_	_
17	她	_	PN	PN	_	16	pobj	_	_
18	浇水	_	VV	VV	_	8	conj	_	_
19	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x18 / 浇水-01, manner, x21 / 都)
(x2 / 说-01, arg0, x4 / 他)
(x2 / 说-01, manner, x3 / 又)
(x6 / 有-01, arg0, x7 / 我)
(x6 / 有-01, arg1, x8 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),浇水,浇水-01,false), Span(16,17,List(1),她,她,false), Span(15,16,List(2),给,给-02,false), Span(14,15,List(3),都,都,false), Span(12,13,List(4),我,我,false), Span(10,11,List(5),花,花-01,false), Span(7,8,List(6),有,有-06,false), Span(6,7,List(7),我,我,false), Span(3,4,List(8),说,说-02,false), Span(2,3,List(9),又,又,false), Span(1,2,List(10),接着,接着-01,false), Span(0,1,List(11),他,他,false)),Map(2 -> 给-02, 5 -> 花-01, 8 -> 说-02, 7 -> 我, 1 -> 她, 11 -> 他, 4 -> 我, 6 -> 有-06, 9 -> 又, 0 -> 浇水-01, 10 -> 接着-01, 3 -> 都),Map(又 -> 又, 接 -> 接着-01, 我 -> 我, 我2 -> 我, 他 -> 他, 给 -> 给-02, 花 -> 花-01, 浇 -> 浇水-01, 说 -> 说-02, 都 -> 都, 有 -> 有-06, 她 -> 她))),[Ljava.lang.String;@695a69a1,Annotation([Ljava.lang.String;@4b1abd11,[Ljava.lang.String;@3f36b447,[Ljava.lang.String;@6443b128),Annotation([Ljava.lang.String;@5eeedb60,[Ljava.lang.String;@40021799,[Ledu.cmu.lti.nlp.amr.Dependency;@4a1c0752),Annotation([Ljava.lang.String;@332f25c8,[Ljava.lang.String;@1b32cd16,[Ljava.lang.String;@4bdcaf36),Annotation([Ljava.lang.String;@61d01788,[Ljava.lang.String;@2b9b7f1f,[Ledu.cmu.lti.nlp.amr.Entity;@264c5d07))
AMR:
(我 / 我, location, 花 / 花-01)
(接 / 接着-01, prep-following, 他 / 他)
(有 / 有-06, manner, 我2 / 我)
(有 / 有-06, prep-following, 花 / 花-01)
(浇 / 浇水-01, manner, 给 / 给-02)
(给 / 给-02, ARG3, 她 / 她)
(给 / 给-02, manner, 都 / 都)
(给 / 给-02, time, 花 / 花-01)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, prep-following, 接 / 接着-01)
(说 / 说-02, topic, 有 / 有-06)

Decoded in 54,041 microseconds
Sentence: 我 还 有 三 座 火山 ， 我 每 星期 把 它们 全 都 打扫 一 遍 。 连 死 火山 也 打扫 。 谁 知道 它 会 不 会 再 复活 。

Spans:
Span 28-29:  不 => 不
Span 21-22:  也 => 也
Span 29-30:  会 => 会-03
Span 27-28:  会 => 会-03
Span 12-13:  全 => 全
Span 30-31:  再 => 再
Span 31-32:  复活 => 复活-01
Span 26-27:  它 => 它
Span 11-12:  它们 => 它们
Span 7-8:  我 => 我
Span 0-1:  我 => 我
Span 22-23:  打扫 => 打扫-01
Span 14-15:  打扫 => 打扫-01
Span 9-10:  星期 => (temporal-quantity :unit 星期)
Span 2-3:  有 => 有-06
Span 19-20:  死 => 死
Span 8-9:  每 => 每
Span 20-21:  火山 => 火山
Span 5-6:  火山 => 火山
Span 25-26:  知道 => 知道-01
Span 24-25:  谁 => 谁
Span 1-2:  还 => 还
Span 13-14:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 21-22:  也 => 也
Oracle Span 27-28:  会 => 会-02
Oracle Span 29-30:  会 => 会-02
Oracle Span 12-13:  全 => 全-01
Oracle Span 31-32:  复活 => 复活-01
Oracle Span 11-12:  它们 => 它们
Oracle Span 0-1:  我 => 我
Oracle Span 14-15:  打扫 => 打扫-01
Oracle Span 22-23:  打扫 => 打扫-01
Oracle Span 9-10:  星期 => (temporal-quantity :unit 星期)
Oracle Span 2-3:  有 => 有-01
Oracle Span 19-20:  死 => 死-01
Oracle Span 5-6:  火山 => 火山
Oracle Span 20-21:  火山 => 火山
Oracle Span 25-26:  知道 => 知道-01
Oracle Span 1-2:  还 => 还
Oracle Span 13-14:  都 => 都

Extra span: 再 => 再
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 会 => 会-03
Extra span: 它 => 它
Extra span: 谁 => 谁
Incorrect span: 死 => 死
Incorrect span: 全 => 全
Extra span: 每 => 每
Extra span: 我 => 我
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 全 => 全-01
Missing span: 会 => 会-02
Missing span: 会 => 会-02
Missing span: 死 => 死-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	三	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	clf	_	_
6	火山	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	15	nsubj	_	_
9	每	_	DT	DT	_	10	det	_	_
10	星期	_	NN	NN	_	15	nsubj	_	_
11	把	_	BA	BA	_	15	ba	_	_
12	它们	_	PN	PN	_	15	nsubj	_	_
13	全	_	DT	DT	_	15	dep	_	_
14	都	_	AD	AD	_	15	advmod	_	_
15	打扫	_	VV	VV	_	3	conj	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	遍	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	3	punct	_	_
19	连	_	AD	AD	_	20	advmod	_	_
20	死	_	VV	VV	_	3	conj	_	_
21	火山	_	NN	NN	_	23	conj	_	_
22	也	_	CC	CC	_	23	cc	_	_
23	打扫	_	NN	NN	_	20	dobj	_	_
24	。	_	PU	PU	_	3	punct	_	_
25	谁	_	PN	PN	_	26	nsubj	_	_
26	知道	_	VV	VV	_	3	conj	_	_
27	它	_	PN	PN	_	32	nsubj	_	_
28	会	_	VV	VV	_	32	mmod	_	_
29	不	_	AD	AD	_	32	neg	_	_
30	会	_	VV	VV	_	32	mmod	_	_
31	再	_	AD	AD	_	32	advmod	_	_
32	复活	_	VV	VV	_	26	ccomp	_	_
33	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x17 / 打扫-01, arg1, x19 / 火山)
(x17 / 打扫-01, cause, x37 / 知道-01)
(x17 / 打扫-01, manner, x18 / 也)
(x19 / 火山, mod, x20 / 死-01)
(x3 / 有-01, arg0, x5 / 我)
(x3 / 有-01, arg1, x6 / 火山)
(x3 / 有-01, manner, x4 / 还)
(x33 / temporal-quantity, unit, x35 / 星期)
(x40 / 会-02, arg0, x41 / 复活-01)
(x8 / 打扫-01, arg1, x11 / 它们)
(x8 / 打扫-01, frequency, x33 / temporal-quantity)
(x8 / 打扫-01, manner, x13 / 都)
(x8 / 打扫-01, manner, x14 / 全-01)

Input(Some(Graph(null,ArrayBuffer(Span(31,32,List(0),复活,复活-01,false), Span(30,31,List(1),再,再,false), Span(29,30,List(2),会,会-03,false), Span(28,29,List(3),不,不,false), Span(27,28,List(4),会,会-03,false), Span(26,27,List(5),它,它,false), Span(25,26,List(6),知道,知道-01,false), Span(24,25,List(7),谁,谁,false), Span(22,23,List(8),打扫,打扫-01,false), Span(21,22,List(9),也,也,false), Span(20,21,List(10),火山,火山,false), Span(19,20,List(11),死,死,false), Span(14,15,List(12),打扫,打扫-01,false), Span(13,14,List(13),都,都,false), Span(12,13,List(14),全,全,false), Span(11,12,List(15),它们,它们,false), Span(9,10,List(17, 16),星期,(temporal-quantity :unit 星期),false), Span(8,9,List(18),每,每,false), Span(7,8,List(19),我,我,false), Span(5,6,List(20),火山,火山,false), Span(2,3,List(21),有,有-06,false), Span(1,2,List(22),还,还,false), Span(0,1,List(23),我,我,false)),Map(2 -> 会-03, 5 -> 它, 12 -> 打扫-01, 15 -> 它们, 8 -> 打扫-01, 21 -> 有-06, 18 -> 每, 7 -> 谁, 17 -> 星期, 1 -> 再, 23 -> 我, 4 -> 会-03, 11 -> 死, 14 -> 全, 20 -> 火山, 6 -> 知道-01, 22 -> 还, 0 -> 复活-01, 9 -> 也, 16 -> temporal-quantity, 19 -> 我, 3 -> 不, 10 -> 火山, 13 -> 都),Map(星 -> 星期, 它2 -> 它们, t -> temporal-quantity, 我 -> 我, 也 -> 也, 打 -> 打扫-01, 会2 -> 会-03, 全 -> 全, 谁 -> 谁, 死 -> 死, 我2 -> 我, 打2 -> 打扫-01, 每 -> 每, 它 -> 它, 会 -> 会-03, 不 -> 不, 还 -> 还, 火2 -> 火山, 火 -> 火山, 都 -> 都, 知 -> 知道-01, 复 -> 复活-01, 有 -> 有-06, 再 -> 再))),[Ljava.lang.String;@847f3e7,Annotation([Ljava.lang.String;@69cac930,[Ljava.lang.String;@19593091,[Ljava.lang.String;@5d39f2d8),Annotation([Ljava.lang.String;@6ad6fa53,[Ljava.lang.String;@55ea2d70,[Ledu.cmu.lti.nlp.amr.Dependency;@5e742e4),Annotation([Ljava.lang.String;@175acfb2,[Ljava.lang.String;@4a03bb68,[Ljava.lang.String;@4e868ef5),Annotation([Ljava.lang.String;@71c905a3,[Ljava.lang.String;@30af7377,[Ledu.cmu.lti.nlp.amr.Entity;@67a056f1))
AMR:
(t / temporal-quantity, ARG3, 每 / 每)
(t / temporal-quantity, unit, 星 / 星期)
(不 / 不, ARG4, 它 / 它)
(会 / 会-03, manner, 不 / 不)
(会2 / 会-03, ARG0, 不 / 不)
(会2 / 会-03, prep-through, 复 / 复活-01)
(复 / 复活-01, manner, 再 / 再)
(我 / 我, ARG6, 每 / 每)
(我 / 我, condition, 有 / 有-06)
(打 / 打扫-01, ARG3, 火 / 火山)
(打 / 打扫-01, manner, 也 / 也)
(打 / 打扫-01, manner, 知 / 知道-01)
(打2 / 打扫-01, ARG3, 它2 / 它们)
(打2 / 打扫-01, frequency, t / temporal-quantity)
(打2 / 打扫-01, manner, 全 / 全)
(打2 / 打扫-01, manner, 打 / 打扫-01)
(打2 / 打扫-01, manner, 都 / 都)
(有 / 有-06, manner, 还 / 还)
(有 / 有-06, op, 我2 / 我)
(有 / 有-06, prep-following, 火2 / 火山)
(火 / 火山, mod, 死 / 死)
(知 / 知道-01, ARG0, 不 / 不)
(知 / 知道-01, ARG6, 谁 / 谁)

Decoded in 171,379 microseconds
Sentence: 我 拥有 火山 和 花 ， 这 对 我 的 火山 有 益处 ， 对 我 的 花 也 有 益处 。

Spans:
Span 18-19:  也 => 也
Span 14-15:  对 => 对-02
Span 7-8:  对 => 对-02
Span 15-16:  我 => 我
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 1-2:  拥有 => 拥有-01
Span 19-20:  有 => 有-06
Span 11-12:  有 => 有-06
Span 10-11:  火山 => 火山
Span 2-3:  火山 => 火山
Span 20-21:  益处 => 益处
Span 12-13:  益处 => 益处
Span 17-18:  花 => 花-01
Span 4-5:  花 => 花-01
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  拥有 => 拥有-01
Oracle Span 11-12:  有 => 有-02
Oracle Span 2-3:  火山 => 火山
Oracle Span 12-13:  益处 => 益处
Oracle Span 4-5:  花 => 花

Extra span: 益处 => 益处
Extra span: 有 => 有-06
Extra span: 也 => 也
Extra span: 花 => 花-01
Extra span: 我 => 我
Extra span: 对 => 对-02
Incorrect span: 有 => 有-06
Extra span: 火山 => 火山
Extra span: 我 => 我
Extra span: 对 => 对-02
Extra span: 这 => 这
Incorrect span: 花 => 花-01
Missing span: 有 => 有-02
Missing span: 花 => 花
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	拥有	_	VV	VV	_	0	root	_	_
3	火山	_	NN	NN	_	5	conj	_	_
4	和	_	CC	CC	_	5	cc	_	_
5	花	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	这	_	PN	PN	_	12	nsubj	_	_
8	对	_	P	P	_	12	prep	_	_
9	我	_	PN	PN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	火山	_	NN	NN	_	8	pobj	_	_
12	有	_	VE	VE	_	2	conj	_	_
13	益处	_	NN	NN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	对	_	P	P	_	20	prep	_	_
16	我	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	花	_	NN	NN	_	15	pobj	_	_
19	也	_	AD	AD	_	20	advmod	_	_
20	有	_	VE	VE	_	12	dep	_	_
21	益处	_	NN	NN	_	20	dobj	_	_
22	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 拥有-01, arg0, x2 / 我)
(x19 / 有-02, arg0, x0 / 拥有-01)
(x19 / 有-02, arg1, x20 / 益处)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),益处,益处,false), Span(19,20,List(1),有,有-06,false), Span(18,19,List(2),也,也,false), Span(17,18,List(3),花,花-01,false), Span(15,16,List(4),我,我,false), Span(14,15,List(5),对,对-02,false), Span(12,13,List(6),益处,益处,false), Span(11,12,List(7),有,有-06,false), Span(10,11,List(8),火山,火山,false), Span(8,9,List(9),我,我,false), Span(7,8,List(10),对,对-02,false), Span(6,7,List(11),这,这,false), Span(4,5,List(12),花,花-01,false), Span(2,3,List(13),火山,火山,false), Span(1,2,List(14),拥有,拥有-01,false), Span(0,1,List(15),我,我,false)),Map(2 -> 也, 5 -> 对-02, 12 -> 花-01, 15 -> 我, 8 -> 火山, 7 -> 有-06, 1 -> 有-06, 4 -> 我, 11 -> 这, 14 -> 拥有-01, 6 -> 益处, 0 -> 益处, 9 -> 我, 3 -> 花-01, 10 -> 对-02, 13 -> 火山),Map(对2 -> 对-02, 我3 -> 我, 有2 -> 有-06, 也 -> 也, 我 -> 我, 这 -> 这, 拥 -> 拥有-01, 我2 -> 我, 花2 -> 花-01, 益 -> 益处, 花 -> 花-01, 火2 -> 火山, 火 -> 火山, 对 -> 对-02, 益2 -> 益处, 有 -> 有-06))),[Ljava.lang.String;@1dab9dd6,Annotation([Ljava.lang.String;@247667dd,[Ljava.lang.String;@6f099cef,[Ljava.lang.String;@afb5821),Annotation([Ljava.lang.String;@4bff2185,[Ljava.lang.String;@5c20ffa8,[Ledu.cmu.lti.nlp.amr.Dependency;@7fedfe27),Annotation([Ljava.lang.String;@2f879bab,[Ljava.lang.String;@1d4664d7,[Ljava.lang.String;@46c00568),Annotation([Ljava.lang.String;@56ccd751,[Ljava.lang.String;@458544e0,[Ledu.cmu.lti.nlp.amr.Entity;@6bcbf05b))
AMR:
(对 / 对-02, ARG0, 花 / 花-01)
(对 / 对-02, ARG5, 我 / 我)
(对2 / 对-02, ARG0, 这 / 这)
(对2 / 对-02, ARG5, 我2 / 我)
(拥 / 拥有-01, value, 我3 / 我)
(有 / 有-06, ARG0, 花 / 花-01)
(有 / 有-06, degree, 益 / 益处)
(有 / 有-06, manner, 也 / 也)
(有2 / 有-06, ARG0, 对 / 对-02)
(有2 / 有-06, ARG1, 火 / 火山)
(有2 / 有-06, degree, 益2 / 益处)
(有2 / 有-06, time, 拥 / 拥有-01)
(火 / 火山, poss, 我2 / 我)
(花2 / 花-01, ARG3, 火2 / 火山)
(花2 / 花-01, time, 有2 / 有-06)

Decoded in 70,083 microseconds
Sentence: 但是 你 对 星星 并 没有 用处 … ”

Spans:
Span 1-2:  你 => 你
Span 2-3:  对 => 对-02
Span 4-5:  并 => 并
Span 3-4:  星星 => 星星
Span 6-7:  用处 => 用处

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  星星 => 星星
Oracle Span 6-7:  用处 => 用处

Extra span: 并 => 并
Extra span: 对 => 对-02
Dependencies:
1	但是	_	AD	AD	_	6	advmod	_	_
2	你	_	PN	PN	_	6	nsubj	_	_
3	对	_	P	P	_	6	prep	_	_
4	星星	_	NR	NR	_	3	pobj	_	_
5	并	_	AD	AD	_	6	advmod	_	_
6	没有	_	VE	VE	_	0	root	_	_
7	用处	_	NN	NN	_	6	dobj	_	_
8	…	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),用处,用处,false), Span(4,5,List(1),并,并,false), Span(3,4,List(2),星星,星星,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),你,你,false)),Map(2 -> 星星, 1 -> 并, 4 -> 你, 0 -> 用处, 3 -> 对-02),Map(星 -> 星星, 用 -> 用处, 你 -> 你, 对 -> 对-02, 并 -> 并))),[Ljava.lang.String;@2d66530f,Annotation([Ljava.lang.String;@1d207fad,[Ljava.lang.String;@72ed9aad,[Ljava.lang.String;@4690f583),Annotation([Ljava.lang.String;@59712875,[Ljava.lang.String;@47b2e9e1,[Ledu.cmu.lti.nlp.amr.Dependency;@59942b48),Annotation([Ljava.lang.String;@1869f114,[Ljava.lang.String;@488b50ec,[Ljava.lang.String;@18a645fd),Annotation([Ljava.lang.String;@6090f3ca,[Ljava.lang.String;@37a64f9d,[Ledu.cmu.lti.nlp.amr.Entity;@25b865b5))
AMR:
(对 / 对-02, prep-at, 星 / 星星)
(对 / 对-02, snt5, 你 / 你)
(星 / 星星, mod, 并 / 并)
(用 / 用处, manner, 并 / 并)

Decoded in 8,331 microseconds
Sentence: 实业家 张口结舌 无言以对 。

NER Entity: (person :name (name :op "张口结舌"))
NER Entity: (person :name (name :op "张口结舌"))
Spans:
Span 0-1:  实业家 => 实业家
Span 1-2:  张口结舌 => 张口结舌
Span 2-3:  无言以对 => 无言以对-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  实业家 => 实业家
Oracle Span 1-2:  张口结舌 => 张口结舌
Oracle Span 2-3:  无言以对 => 无言以对-01

Dependencies:
1	实业家	_	NN	NN	_	2	nsubj	_	_
2	张口结舌	_	VV	VV	_	0	root	_	_
3	无言以对	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / 无言以对-01, arg0, x4 / 实业家)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),无言以对,无言以对-01,false), Span(1,2,List(1),张口结舌,张口结舌,false), Span(0,1,List(2),实业家,实业家,false)),Map(2 -> 实业家, 1 -> 张口结舌, 0 -> 无言以对-01),Map(张 -> 张口结舌, 无 -> 无言以对-01, 实 -> 实业家))),[Ljava.lang.String;@f9b5552,Annotation([Ljava.lang.String;@6872f9c8,[Ljava.lang.String;@6d2d99fc,[Ljava.lang.String;@bdecc21),Annotation([Ljava.lang.String;@5e3a39cd,[Ljava.lang.String;@21f9277b,[Ledu.cmu.lti.nlp.amr.Dependency;@201aa8c1),Annotation([Ljava.lang.String;@5d58c727,[Ljava.lang.String;@52a36910,[Ljava.lang.String;@3a095ec0),Annotation([Ljava.lang.String;@4f20a5e0,[Ljava.lang.String;@54da32dc,[Ledu.cmu.lti.nlp.amr.Entity;@1d782abe))
AMR:
(无 / 无言以对-01, degree, 张 / 张口结舌)
(无 / 无言以对-01, op, 实 / 实业家)

Decoded in 5,260 microseconds
Sentence: 于是 小 王子 就 走 了 。

Spans:
Span 1-2:  小 => 小
Span 3-4:  就 => 就-01
Span 2-3:  王子 => 王子
Span 4-5:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  小 => 小-01
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  王子 => 王子
Oracle Span 4-5:  走 => 走-02

Incorrect span: 走 => 走-05
Incorrect span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 走 => 走-02
Missing span: 小 => 小-01
Missing span: 就 => 就
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 走-02, arg0, x4 / 王子)
(x2 / 走-02, manner, x3 / 就)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),走,走-05,false), Span(3,4,List(1),就,就-01,false), Span(2,3,List(2),王子,王子,false), Span(1,2,List(3),小,小,false)),Map(2 -> 王子, 1 -> 就-01, 0 -> 走-05, 3 -> 小),Map(就 -> 就-01, 王 -> 王子, 小 -> 小, 走 -> 走-05))),[Ljava.lang.String;@6df7988f,Annotation([Ljava.lang.String;@27b22f74,[Ljava.lang.String;@22fba58c,[Ljava.lang.String;@7e8a46b7),Annotation([Ljava.lang.String;@2fe88a09,[Ljava.lang.String;@1917d90f,[Ledu.cmu.lti.nlp.amr.Dependency;@66bfd864),Annotation([Ljava.lang.String;@4aac85fa,[Ljava.lang.String;@21fff664,[Ljava.lang.String;@6079cf5),Annotation([Ljava.lang.String;@1e6308a9,[Ljava.lang.String;@30cecdca,[Ledu.cmu.lti.nlp.amr.Entity;@6edc4161))
AMR:
(王 / 王子, mod, 小 / 小)
(走 / 走-05, manner, 就 / 就-01)
(走 / 走-05, value, 王 / 王子)

Decoded in 7,248 microseconds
Sentence: 在 旅途 中 ， 小 王子 只 是 自言自语 地 说 了 一 句 ： “ 这些 大人们 真是 奇怪 极 了 。 ”

Spans:
Span 13-14:  句 => 句
Span 6-7:  只 => 只
Span 0-1:  在 => 在-01
Span 9-10:  地 => 地
Span 17-18:  大人们 => 大人们
Span 19-20:  奇怪 => 奇怪-02
Span 4-5:  小 => 小
Span 1-2:  旅途 => 旅途
Span 7-8:  是 => 是-04
Span 20-21:  极 => 极
Span 5-6:  王子 => 王子
Span 18-19:  真是 => 真是
Span 8-9:  自言自语 => 自言自语
Span 10-11:  说 => 说-02
Span 16-17:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  只 => 只
Oracle Span 17-18:  大人们 => 大人们
Oracle Span 19-20:  奇怪 => 奇怪-01
Oracle Span 4-5:  小 => 小-01
Oracle Span 1-2:  旅途 => 旅途
Oracle Span 20-21:  极 => 极
Oracle Span 5-6:  王子 => 王子
Oracle Span 18-19:  真是 => 真是
Oracle Span 8-9:  自言自语 => 自言自语
Oracle Span 10-11:  说 => 说-01
Oracle Span 16-17:  这些 => 这些

Incorrect span: 奇怪 => 奇怪-02
Extra span: 句 => 句
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Extra span: 是 => 是-04
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 说 => 说-01
Missing span: 奇怪 => 奇怪-01
Missing span: 小 => 小-01
Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	旅途	_	NN	NN	_	3	lobj	_	_
3	中	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	自言自语	_	VA	VA	_	11	dvpmod	_	_
10	地	_	DEV	DEV	_	9	dvpm	_	_
11	说	_	VV	VV	_	8	ccomp	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	句	_	NN	NN	_	11	dobj	_	_
15	：	_	PU	PU	_	8	punct	_	_
16	“	_	PU	PU	_	20	punct	_	_
17	这些	_	DT	DT	_	18	det	_	_
18	大人们	_	NN	NN	_	20	nsubj	_	_
19	真是	_	AD	AD	_	20	advmod	_	_
20	奇怪	_	VA	VA	_	8	conj	_	_
21	极	_	AD	AD	_	20	advmod	_	_
22	了	_	SP	SP	_	20	dep	_	_
23	。	_	PU	PU	_	8	punct	_	_
24	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x4 / 王子)
(x0 / 说-01, arg1, x6 / 奇怪-01)
(x0 / 说-01, manner, x2 / 自言自语)
(x0 / 说-01, manner, x3 / 只)
(x0 / 说-01, time, x11 / 旅途)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 奇怪-01, arg0, x9 / 大人们)
(x6 / 奇怪-01, degree, x7 / 极)
(x6 / 奇怪-01, manner, x8 / 真是)
(x9 / 大人们, mod, x10 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),极,极,false), Span(19,20,List(1),奇怪,奇怪-02,false), Span(18,19,List(2),真是,真是,false), Span(17,18,List(3),大人们,大人们,false), Span(16,17,List(4),这些,这些,false), Span(13,14,List(5),句,句,false), Span(10,11,List(6),说,说-02,false), Span(9,10,List(7),地,地,false), Span(8,9,List(8),自言自语,自言自语,false), Span(7,8,List(9),是,是-04,false), Span(6,7,List(10),只,只,false), Span(5,6,List(11),王子,王子,false), Span(4,5,List(12),小,小,false), Span(1,2,List(13),旅途,旅途,false), Span(0,1,List(14),在,在-01,false)),Map(2 -> 真是, 5 -> 句, 12 -> 小, 8 -> 自言自语, 7 -> 地, 1 -> 奇怪-02, 4 -> 这些, 11 -> 王子, 14 -> 在-01, 6 -> 说-02, 0 -> 极, 9 -> 是-04, 3 -> 大人们, 10 -> 只, 13 -> 旅途),Map(在 -> 在-01, 自 -> 自言自语, 这 -> 这些, 王 -> 王子, 旅 -> 旅途, 大 -> 大人们, 句 -> 句, 小 -> 小, 地 -> 地, 奇 -> 奇怪-02, 说 -> 说-02, 只 -> 只, 极 -> 极, 是 -> 是-04, 真 -> 真是))),[Ljava.lang.String;@5486887b,Annotation([Ljava.lang.String;@5226e402,[Ljava.lang.String;@1440c311,[Ljava.lang.String;@189b5fb1),Annotation([Ljava.lang.String;@783ec989,[Ljava.lang.String;@1ddd3478,[Ledu.cmu.lti.nlp.amr.Dependency;@f973499),Annotation([Ljava.lang.String;@4d33940d,[Ljava.lang.String;@43cf6ea3,[Ljava.lang.String;@37c5fc56),Annotation([Ljava.lang.String;@1c025cb,[Ljava.lang.String;@50825a02,[Ledu.cmu.lti.nlp.amr.Entity;@68809cc7))
AMR:
(在 / 在-01, degree, 旅 / 旅途)
(地 / 地, mod, 是 / 是-04)
(大 / 大人们, mod, 句 / 句)
(大 / 大人们, mod, 这 / 这些)
(奇 / 奇怪-02, degree, 极 / 极)
(奇 / 奇怪-02, manner, 真 / 真是)
(奇 / 奇怪-02, time, 大 / 大人们)
(小 / 小, time, 旅 / 旅途)
(是 / 是-04, manner, 只 / 只)
(是 / 是-04, manner, 自 / 自言自语)
(是 / 是-04, time, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, age, 句 / 句)
(说 / 说-02, location, 地 / 地)

Decoded in 71,146 microseconds
Sentence: XIV 。

Spans:
Span 0-1:  XIV => XIV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIV => XIV

Dependencies:
1	XIV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XIV,XIV,false)),Map(0 -> XIV),Map(x -> XIV))),[Ljava.lang.String;@703feacd,Annotation([Ljava.lang.String;@7051777c,[Ljava.lang.String;@3241713e,[Ljava.lang.String;@5ecba515),Annotation([Ljava.lang.String;@512d4583,[Ljava.lang.String;@2abc224d,[Ledu.cmu.lti.nlp.amr.Dependency;@13cd7ea5),Annotation([Ljava.lang.String;@102d92c4,[Ljava.lang.String;@2b97cc1f,[Ljava.lang.String;@60723d6a),Annotation([Ljava.lang.String;@18324f97,[Ljava.lang.String;@64f555e7,[Ledu.cmu.lti.nlp.amr.Entity;@71178a52))
AMR:


Decoded in 1,514 microseconds
Sentence: 第五 颗 行星 非常 奇怪 ，

Spans:
Span 4-5:  奇怪 => 奇怪-02
Span 2-3:  行星 => 行星
Span 3-4:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  奇怪 => 奇怪-01
Oracle Span 2-3:  行星 => 行星
Oracle Span 3-4:  非常 => 非常-01

Incorrect span: 奇怪 => 奇怪-02
Incorrect span: 非常 => 非常
Missing span: 奇怪 => 奇怪-01
Missing span: 非常 => 非常-01
Dependencies:
1	第五	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	5	nsubj	_	_
4	非常	_	AD	AD	_	5	advmod	_	_
5	奇怪	_	VA	VA	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 奇怪-01, arg0, x3 / 行星)
(x0 / 奇怪-01, degree, x2 / 非常-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),奇怪,奇怪-02,false), Span(3,4,List(1),非常,非常,false), Span(2,3,List(2),行星,行星,false)),Map(2 -> 行星, 1 -> 非常, 0 -> 奇怪-02),Map(非 -> 非常, 奇 -> 奇怪-02, 行 -> 行星))),[Ljava.lang.String;@ff6077,Annotation([Ljava.lang.String;@abbc908,[Ljava.lang.String;@44afefd5,[Ljava.lang.String;@9a7a808),Annotation([Ljava.lang.String;@72209d93,[Ljava.lang.String;@2687f956,[Ledu.cmu.lti.nlp.amr.Dependency;@1ded7b14),Annotation([Ljava.lang.String;@29be7749,[Ljava.lang.String;@5f84abe8,[Ljava.lang.String;@4650a407),Annotation([Ljava.lang.String;@30135202,[Ljava.lang.String;@6a4d7f76,[Ledu.cmu.lti.nlp.amr.Entity;@10ec523c))
AMR:
(奇 / 奇怪-02, degree, 非 / 非常)
(奇 / 奇怪-02, op, 行 / 行星)

Decoded in 5,300 microseconds
Sentence: 是 这些 星星 中 最 小 的 一 颗 。

Spans:
Span 5-6:  小 => 小
Span 2-3:  星星 => 星星
Span 0-1:  是 => 是-04
Span 4-5:  最 => 最
Span 1-2:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  小 => 小-01
Oracle Span 2-3:  星星 => 星星
Oracle Span 4-5:  最 => 最
Oracle Span 1-2:  这些 => 这些

Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	是	_	VC	VC	_	0	root	_	_
2	这些	_	DT	DT	_	3	det	_	_
3	星星	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	6	loc	_	_
5	最	_	AD	AD	_	6	advmod	_	_
6	小	_	VA	VA	_	9	dep	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	颗	_	M	M	_	1	attr	_	_
10	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x6 / 小-01, compared-to, x9 / 星星)
(x6 / 小-01, degree, x8 / 最)
(x9 / 星星, mod, x10 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),小,小,false), Span(4,5,List(1),最,最,false), Span(2,3,List(2),星星,星星,false), Span(1,2,List(3),这些,这些,false), Span(0,1,List(4),是,是-04,false)),Map(2 -> 星星, 1 -> 最, 4 -> 是-04, 0 -> 小, 3 -> 这些),Map(星 -> 星星, 这 -> 这些, 小 -> 小, 是 -> 是-04, 最 -> 最))),[Ljava.lang.String;@53dfacba,Annotation([Ljava.lang.String;@79767781,[Ljava.lang.String;@78411116,[Ljava.lang.String;@aced190),Annotation([Ljava.lang.String;@245a060f,[Ljava.lang.String;@6edaa77a,[Ledu.cmu.lti.nlp.amr.Dependency;@1e63d216),Annotation([Ljava.lang.String;@62ddd21b,[Ljava.lang.String;@16c3ca31,[Ljava.lang.String;@2d195ee4),Annotation([Ljava.lang.String;@2d6aca33,[Ljava.lang.String;@21ab988f,[Ledu.cmu.lti.nlp.amr.Entity;@29314cc9))
AMR:
(小 / 小, compared-to, 星 / 星星)
(小 / 小, degree, 最 / 最)
(星 / 星星, mod, 这 / 这些)
(是 / 是-04, ARG4, 这 / 这些)

Decoded in 12,518 microseconds
Sentence: 行星 上 刚好 能 容 得 下 一 盏 路灯 和 一 个 点 路灯 的 人 。

Spans:
Span 6-7:  下 => 下-07
Span 16-17:  人 => 人
Span 2-3:  刚好 => 刚好
Span 4-5:  容 => 容-03
Span 5-6:  得 => 得-06
Span 13-14:  点 => 点
Span 3-4:  能 => 能
Span 0-1:  行星 => 行星
Span 14-15:  路灯 => 路灯
Span 9-10:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 16-17:  人 => 人
Oracle Span 2-3:  刚好 => 刚好
Oracle Span 4-5:  容 => 容-03
Oracle Span 13-14:  点 => 点-01
Oracle Span 3-4:  能 => 能-01
Oracle Span 0-1:  行星 => 行星
Oracle Span 9-10:  路灯 => 路灯

Extra span: 路灯 => 路灯
Incorrect span: 点 => 点
Extra span: 下 => 下-07
Extra span: 得 => 得-06
Incorrect span: 能 => 能
Missing span: 能 => 能-01
Missing span: 点 => 点-01
Dependencies:
1	行星	_	NN	NN	_	2	nsubj	_	_
2	上	_	VV	VV	_	0	root	_	_
3	刚好	_	AD	AD	_	13	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	容	_	VV	VV	_	9	rcmod	_	_
6	得	_	VV	VV	_	5	ccomp	_	_
7	下	_	DT	DT	_	6	dep	_	_
8	一	_	CD	CD	_	7	dep	_	_
9	盏	_	NN	NN	_	13	dep	_	_
10	路灯	_	CD	CD	_	13	dep	_	_
11	和	_	CC	CC	_	13	cc	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	15	clf	_	_
14	点	_	NN	NN	_	15	nn	_	_
15	路灯	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	人	_	NN	NN	_	2	dobj	_	_
18	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 能-01, arg0, x4 / 容-03)
(x0 / 能-01, manner, x6 / 刚好)
(x12 / 点-01, arg0, x10 / 人)
(x4 / 容-03, arg0, x5 / 行星)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),人,人,false), Span(14,15,List(1),路灯,路灯,false), Span(13,14,List(2),点,点,false), Span(9,10,List(3),路灯,路灯,false), Span(6,7,List(4),下,下-07,false), Span(5,6,List(5),得,得-06,false), Span(4,5,List(6),容,容-03,false), Span(3,4,List(7),能,能,false), Span(2,3,List(8),刚好,刚好,false), Span(0,1,List(9),行星,行星,false)),Map(2 -> 点, 5 -> 得-06, 8 -> 刚好, 7 -> 能, 1 -> 路灯, 4 -> 下-07, 6 -> 容-03, 9 -> 行星, 0 -> 人, 3 -> 路灯),Map(路 -> 路灯, 容 -> 容-03, 能 -> 能, 得 -> 得-06, 下 -> 下-07, 点 -> 点, 行 -> 行星, 路2 -> 路灯, 人 -> 人, 刚 -> 刚好))),[Ljava.lang.String;@4e38d975,Annotation([Ljava.lang.String;@35f8a9d3,[Ljava.lang.String;@48ea2003,[Ljava.lang.String;@6b1e7ad3),Annotation([Ljava.lang.String;@63e5e5b4,[Ljava.lang.String;@13a37e2a,[Ledu.cmu.lti.nlp.amr.Dependency;@a50ae65),Annotation([Ljava.lang.String;@1280851e,[Ljava.lang.String;@5e840abf,[Ljava.lang.String;@56de6d6b),Annotation([Ljava.lang.String;@5972d253,[Ljava.lang.String;@4fcc0416,[Ledu.cmu.lti.nlp.amr.Entity;@31e32ea2))
AMR:
(下 / 下-07, ARG0, 得 / 得-06)
(下 / 下-07, ARG4, 容 / 容-03)
(人 / 人, mod, 路 / 路灯)
(容 / 容-03, time, 行 / 行星)
(能 / 能, manner, 刚 / 刚好)
(能 / 能, mod, 容 / 容-03)
(路 / 路灯, mod, 刚 / 刚好)
(路 / 路灯, mod, 点 / 点)
(路2 / 路灯, domain, 路 / 路灯)

Decoded in 34,141 microseconds
Sentence: 小 王子 怎么 也 解释 不 通 ： 这个 坐落 在 天空 某 一 角落 ， 既 没有 房屋 又 没有 居民 的 行星 上 ， 要 一 盏 路灯 和 一 个 点 灯 的 人 做 什么 用 。

Spans:
Span 5-6:  不 => 不
Span 3-4:  也 => 也
Span 36-37:  人 => 人
Span 38-39:  什么 => 什么
Span 37-38:  做 => 做-04
Span 19-20:  又 => 又
Span 10-11:  在 => 在-01
Span 9-10:  坐落 => 坐落-01
Span 11-12:  天空 => 天空
Span 0-1:  小 => 小
Span 21-22:  居民 => 居民
Span 2-3:  怎么 => 怎么
Span 18-19:  房屋 => 房屋
Span 12-13:  某 => 某
Span 34-35:  灯 => 灯
Span 33-34:  点 => 点
Span 1-2:  王子 => 王子
Span 39-40:  用 => 用
Span 23-24:  行星 => 行星
Span 26-27:  要 => 要-02
Span 14-15:  角落 => 角落
Span 4-5:  解释 => 解释-01
Span 29-30:  路灯 => 路灯
Span 8-9:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 36-37:  人 => 人
Oracle Span 9-10:  坐落 => 坐落-01
Oracle Span 11-12:  天空 => 天空
Oracle Span 0-1:  小 => 小-01
Oracle Span 21-22:  居民 => 居民
Oracle Span 18-19:  房屋 => 房屋
Oracle Span 12-13:  某 => 某
Oracle Span 34-35:  灯 => 灯
Oracle Span 33-34:  点 => 点-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 23-24:  行星 => 行星
Oracle Span 26-27:  要 => 要-05
Oracle Span 14-15:  角落 => 角落
Oracle Span 4-5:  解释 => 解释-01
Oracle Span 29-30:  路灯 => 路灯
Oracle Span 8-9:  这个 => 这个

Extra span: 用 => 用
Extra span: 什么 => 什么
Extra span: 做 => 做-04
Incorrect span: 点 => 点
Incorrect span: 要 => 要-02
Extra span: 又 => 又
Extra span: 在 => 在-01
Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 怎么 => 怎么
Incorrect span: 小 => 小
Missing span: 要 => 要-05
Missing span: 点 => 点-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	解释	_	VV	VV	_	0	root	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	通	_	VV	VV	_	5	ccomp	_	_
8	：	_	PU	PU	_	5	punct	_	_
9	这个	_	NN	NN	_	10	nn	_	_
10	坐落	_	NN	NN	_	38	nsubj	_	_
11	在	_	P	P	_	38	prep	_	_
12	天空	_	VV	VV	_	24	rcmod	_	_
13	某	_	DT	DT	_	15	det	_	_
14	一	_	CD	CD	_	13	dep	_	_
15	角落	_	NN	NN	_	12	dobj	_	_
16	,	_	PU	PU	_	12	punct	_	_
17	既	_	CC	CC	_	12	cc	_	_
18	没有	_	VE	VE	_	12	conj	_	_
19	房屋	_	NN	NN	_	18	dobj	_	_
20	又	_	AD	AD	_	21	advmod	_	_
21	没有	_	VE	VE	_	18	dep	_	_
22	居民	_	NN	NN	_	21	dobj	_	_
23	的	_	DEC	DEC	_	12	cpm	_	_
24	行星	_	NN	NN	_	25	lobj	_	_
25	上	_	LC	LC	_	11	plmod	_	_
26	,	_	PU	PU	_	38	punct	_	_
27	要	_	VV	VV	_	38	conj	_	_
28	一	_	CD	CD	_	29	nummod	_	_
29	盏	_	NN	NN	_	30	nn	_	_
30	路灯	_	NN	NN	_	35	conj	_	_
31	和	_	CC	CC	_	35	cc	_	_
32	一	_	CD	CD	_	33	nummod	_	_
33	个	_	M	M	_	35	clf	_	_
34	点	_	NN	NN	_	35	nn	_	_
35	灯	_	NN	NN	_	37	assmod	_	_
36	的	_	DEG	DEG	_	35	assm	_	_
37	人	_	NN	NN	_	27	dobj	_	_
38	做	_	VV	VV	_	5	conj	_	_
39	什么	_	DT	DT	_	40	det	_	_
40	用	_	NN	NN	_	38	dobj	_	_
41	。	_	PU	PU	_	5	punct	_	_
42	王子	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x29 / 解释-01, arg0, x31 / 王子)
(x29 / 解释-01, arg1, x33 / 要-05)
(x31 / 王子, mod, x32 / 小-01)
(x33 / 要-05, location, x43 / 行星)
(x38 / 点-01, arg0, x37 / 人)
(x38 / 点-01, arg1, x39 / 灯)
(x43 / 行星, mod, x48 / 这个)
(x44 / 坐落-01, arg0, x43 / 行星)
(x44 / 坐落-01, arg1, x45 / 角落)
(x45 / 角落, mod, x46 / 某)
(x47 / 天空, part, x45 / 角落)

Input(Some(Graph(null,ArrayBuffer(Span(39,40,List(0),用,用,false), Span(38,39,List(1),什么,什么,false), Span(37,38,List(2),做,做-04,false), Span(36,37,List(3),人,人,false), Span(34,35,List(4),灯,灯,false), Span(33,34,List(5),点,点,false), Span(29,30,List(6),路灯,路灯,false), Span(26,27,List(7),要,要-02,false), Span(23,24,List(8),行星,行星,false), Span(21,22,List(9),居民,居民,false), Span(19,20,List(10),又,又,false), Span(18,19,List(11),房屋,房屋,false), Span(14,15,List(12),角落,角落,false), Span(12,13,List(13),某,某,false), Span(11,12,List(14),天空,天空,false), Span(10,11,List(15),在,在-01,false), Span(9,10,List(16),坐落,坐落-01,false), Span(8,9,List(17),这个,这个,false), Span(5,6,List(18),不,不,false), Span(4,5,List(19),解释,解释-01,false), Span(3,4,List(20),也,也,false), Span(2,3,List(21),怎么,怎么,false), Span(1,2,List(22),王子,王子,false), Span(0,1,List(23),小,小,false)),Map(2 -> 做-04, 5 -> 点, 12 -> 角落, 15 -> 在-01, 8 -> 行星, 21 -> 怎么, 18 -> 不, 7 -> 要-02, 17 -> 这个, 1 -> 什么, 23 -> 小, 4 -> 灯, 11 -> 房屋, 14 -> 天空, 20 -> 也, 6 -> 路灯, 22 -> 王子, 0 -> 用, 9 -> 居民, 16 -> 坐落-01, 19 -> 解释-01, 3 -> 人, 10 -> 又, 13 -> 某),Map(又 -> 又, 在 -> 在-01, 用 -> 用, 路 -> 路灯, 也 -> 也, 这 -> 这个, 要 -> 要-02, 角 -> 角落, 王 -> 王子, 某 -> 某, 灯 -> 灯, 小 -> 小, 怎 -> 怎么, 居 -> 居民, 不 -> 不, 天 -> 天空, 解 -> 解释-01, 点 -> 点, 做 -> 做-04, 什 -> 什么, 行 -> 行星, 房 -> 房屋, 坐 -> 坐落-01, 人 -> 人))),[Ljava.lang.String;@1473b8c0,Annotation([Ljava.lang.String;@5b5c0057,[Ljava.lang.String;@749f539e,[Ljava.lang.String;@5ca1f591),Annotation([Ljava.lang.String;@551de37d,[Ljava.lang.String;@6ef81f31,[Ledu.cmu.lti.nlp.amr.Dependency;@6075b2d3),Annotation([Ljava.lang.String;@33abde31,[Ljava.lang.String;@997d532,[Ljava.lang.String;@273842a6),Annotation([Ljava.lang.String;@6a969fb8,[Ljava.lang.String;@7a18e8d,[Ledu.cmu.lti.nlp.amr.Entity;@3028e50e))
AMR:
(做 / 做-04, manner, 人 / 人)
(做 / 做-04, poss, 灯 / 灯)
(做 / 做-04, purpose, 用 / 用)
(做 / 做-04, value, 什 / 什么)
(坐 / 坐落-01, manner, 不 / 不)
(坐 / 坐落-01, manner, 这 / 这个)
(坐 / 坐落-01, purpose, 在 / 在-01)
(天 / 天空, mod, 在 / 在-01)
(天 / 天空, part, 角 / 角落)
(居 / 居民, manner, 又 / 又)
(怎 / 怎么, mod, 王 / 王子)
(房 / 房屋, manner, 又 / 又)
(房 / 房屋, time, 角 / 角落)
(灯 / 灯, mod, 点 / 点)
(王 / 王子, mod, 小 / 小)
(行 / 行星, poss, 居 / 居民)
(要 / 要-02, time, 行 / 行星)
(要 / 要-02, unit, 路 / 路灯)
(角 / 角落, mod, 某 / 某)
(解 / 解释-01, ARG6, 不 / 不)
(解 / 解释-01, manner, 也 / 也)
(解 / 解释-01, manner, 怎 / 怎么)
(路 / 路灯, poss, 灯 / 灯)

Decoded in 186,993 microseconds
Sentence: 但 他 自己 猜想 ： “ 可能 这个 人 思想 不 正常 。

Spans:
Span 10-11:  不 => 不
Span 8-9:  人 => 人
Span 1-2:  他 => 他
Span 6-7:  可能 => 可能-02
Span 9-10:  思想 => 思想
Span 11-12:  正常 => 正常-01
Span 3-4:  猜想 => 猜想-01
Span 2-3:  自己 => 自己
Span 7-8:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 1-2:  他 => 他
Oracle Span 6-7:  可能 => 可能-01
Oracle Span 9-10:  思想 => 思想
Oracle Span 11-12:  正常 => 正常-01
Oracle Span 3-4:  猜想 => 猜想-01

Extra span: 不 => 不
Extra span: 这个 => 这个
Incorrect span: 可能 => 可能-02
Extra span: 自己 => 自己
Missing span: 可能 => 可能-01
Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	3	dep	_	_
3	自己	_	PN	PN	_	4	nsubj	_	_
4	猜想	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	12	punct	_	_
7	可能	_	NN	NN	_	10	nn	_	_
8	这个	_	NN	NN	_	10	nn	_	_
9	人	_	NN	NN	_	10	nn	_	_
10	思想	_	NN	NN	_	12	nsubj	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	正常	_	VA	VA	_	4	ccomp	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 猜想-01, arg0, x3 / 他)
(x2 / 猜想-01, arg1, x4 / 可能-01)
(x4 / 可能-01, arg0, x5 / 正常-01)
(x5 / 正常-01, arg0, x7 / 思想)
(x7 / 思想, poss, x8 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),正常,正常-01,false), Span(10,11,List(1),不,不,false), Span(9,10,List(2),思想,思想,false), Span(8,9,List(3),人,人,false), Span(7,8,List(4),这个,这个,false), Span(6,7,List(5),可能,可能-02,false), Span(3,4,List(6),猜想,猜想-01,false), Span(2,3,List(7),自己,自己,false), Span(1,2,List(8),他,他,false)),Map(2 -> 思想, 5 -> 可能-02, 8 -> 他, 7 -> 自己, 1 -> 不, 4 -> 这个, 6 -> 猜想-01, 0 -> 正常-01, 3 -> 人),Map(自 -> 自己, 猜 -> 猜想-01, 这 -> 这个, 正 -> 正常-01, 他 -> 他, 思 -> 思想, 不 -> 不, 人 -> 人, 可 -> 可能-02))),[Ljava.lang.String;@5560bcdf,Annotation([Ljava.lang.String;@b558294,[Ljava.lang.String;@bb095,[Ljava.lang.String;@777c350f),Annotation([Ljava.lang.String;@27aae97b,[Ljava.lang.String;@4c9e38,[Ledu.cmu.lti.nlp.amr.Dependency;@5d1e09bc),Annotation([Ljava.lang.String;@4bdc8b5d,[Ljava.lang.String;@3bcd426c,[Ljava.lang.String;@5f14a673),Annotation([Ljava.lang.String;@726a17c4,[Ljava.lang.String;@5dc3fcb7,[Ledu.cmu.lti.nlp.amr.Entity;@c4c0b41))
AMR:
(人 / 人, mod, 这 / 这个)
(可 / 可能-02, mod, 这 / 这个)
(可 / 可能-02, prep-on-behalf, 猜 / 猜想-01)
(思 / 思想, mod, 不 / 不)
(思 / 思想, poss, 人 / 人)
(正 / 正常-01, manner, 不 / 不)
(猜 / 猜想-01, prep-on-behalf, 他 / 他)
(猜 / 猜想-01, prep-on-behalf, 自 / 自己)

Decoded in 26,790 microseconds
Sentence: 但 他 比起 国王 ， 比 起 那个 爱 虚荣 的 人 ， 那个 实业家 和 酒鬼 ， 却 要 好 些 。

Spans:
Span 21-22:  些 => 些
Span 11-12:  人 => 人
Span 1-2:  他 => 他
Span 3-4:  国王 => 国王
Span 20-21:  好 => 好-04
Span 14-15:  实业家 => 实业家
Span 8-9:  爱 => (person :arg0-of 爱-01)
Span 9-10:  虚荣 => 虚荣-01
Span 19-20:  要 => 要-02
Span 13-14:  那个 => 那个
Span 7-8:  那个 => 那个
Span 16-17:  酒鬼 => 酒鬼

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 至少 他 的 工作 还 有点 意义 。

Spans:
Span 1-2:  他 => 他
Span 3-4:  工作 => 工作-01
Span 6-7:  意义 => 意义
Span 5-6:  有点 => 有点-01
Span 0-1:  至少 => 至少
Span 4-5:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  工作 => 工作
Oracle Span 6-7:  意义 => 意义
Oracle Span 0-1:  至少 => 至少
Oracle Span 4-5:  还 => 还

Extra span: 有点 => 有点-01
Incorrect span: 工作 => 工作-01
Missing span: 工作 => 工作
Dependencies:
1	至少	_	AD	AD	_	6	advmod	_	_
2	他	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	工作	_	NN	NN	_	6	prep	_	_
5	还	_	AD	AD	_	6	advmod	_	_
6	有点	_	VV	VV	_	0	root	_	_
7	意义	_	NN	NN	_	6	dobj	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 工作, poss, x3 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),意义,意义,false), Span(5,6,List(1),有点,有点-01,false), Span(4,5,List(2),还,还,false), Span(3,4,List(3),工作,工作-01,false), Span(1,2,List(4),他,他,false), Span(0,1,List(5),至少,至少,false)),Map(2 -> 还, 5 -> 至少, 1 -> 有点-01, 4 -> 他, 0 -> 意义, 3 -> 工作-01),Map(至 -> 至少, 工 -> 工作-01, 他 -> 他, 意 -> 意义, 还 -> 还, 有 -> 有点-01))),[Ljava.lang.String;@5467eea4,Annotation([Ljava.lang.String;@160396db,[Ljava.lang.String;@7a799159,[Ljava.lang.String;@40ab8a8),Annotation([Ljava.lang.String;@6ff37443,[Ljava.lang.String;@65cc8228,[Ledu.cmu.lti.nlp.amr.Dependency;@53093491),Annotation([Ljava.lang.String;@21719a0,[Ljava.lang.String;@76b224cd,[Ljava.lang.String;@77ee25f1),Annotation([Ljava.lang.String;@6dd93a21,[Ljava.lang.String;@57b9e423,[Ledu.cmu.lti.nlp.amr.Entity;@304a3655))
AMR:
(工 / 工作-01, poss, 他 / 他)
(意 / 意义, degree, 有 / 有点-01)
(有 / 有点-01, ARG4, 工 / 工作-01)
(有 / 有点-01, manner, 至 / 至少)
(有 / 有点-01, manner, 还 / 还)

Decoded in 11,227 microseconds
Sentence: 当 他 点着 了 他 的 路灯 时 ， 就 象 他 增添 了 一 颗 星星 ， 或是 一 朵 花 。

Spans:
Span 11-12:  他 => 他
Span 4-5:  他 => 他
Span 1-2:  他 => 他
Span 12-13:  增添 => 增添-01
Span 9-10:  就 => 就-01
Span 0-1:  当 => 当-04
Span 16-17:  星星 => 星星
Span 2-3:  点着 => 点着-01
Span 21-22:  花 => 花-01
Span 6-7:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 12-13:  增添 => 增添-01
Oracle Span 9-10:  就 => 就
Oracle Span 16-17:  星星 => 星星
Oracle Span 2-3:  点着 => 点着-01
Oracle Span 21-22:  花 => 花
Oracle Span 6-7:  路灯 => 路灯

Incorrect span: 花 => 花-01
Extra span: 他 => 他
Incorrect span: 就 => 就-01
Extra span: 他 => 他
Extra span: 当 => 当-04
Missing span: 就 => 就
Missing span: 花 => 花
Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	点着	_	VV	VV	_	8	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	路灯	_	NN	NN	_	3	dobj	_	_
8	时	_	LC	LC	_	1	plmod	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	象	_	P	P	_	13	prep	_	_
12	他	_	PN	PN	_	11	pobj	_	_
13	增添	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	颗	_	M	M	_	17	clf	_	_
17	星星	_	NN	NN	_	13	dobj	_	_
18	,	_	PU	PU	_	13	punct	_	_
19	或是	_	VV	VV	_	13	dep	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	朵	_	M	M	_	22	clf	_	_
22	花	_	NN	NN	_	19	dobj	_	_
23	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 点着-01, arg0, x2 / 他)
(x0 / 点着-01, arg1, x3 / 路灯)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),花,花-01,false), Span(16,17,List(1),星星,星星,false), Span(12,13,List(2),增添,增添-01,false), Span(11,12,List(3),他,他,false), Span(9,10,List(4),就,就-01,false), Span(6,7,List(5),路灯,路灯,false), Span(4,5,List(6),他,他,false), Span(2,3,List(7),点着,点着-01,false), Span(1,2,List(8),他,他,false), Span(0,1,List(9),当,当-04,false)),Map(2 -> 增添-01, 5 -> 路灯, 8 -> 他, 7 -> 点着-01, 1 -> 星星, 4 -> 就-01, 6 -> 他, 9 -> 当-04, 0 -> 花-01, 3 -> 他),Map(他2 -> 他, 就 -> 就-01, 增 -> 增添-01, 路 -> 路灯, 星 -> 星星, 他 -> 他, 花 -> 花-01, 点 -> 点着-01, 他3 -> 他, 当 -> 当-04))),[Ljava.lang.String;@368d5c00,Annotation([Ljava.lang.String;@12a160c2,[Ljava.lang.String;@aa10649,[Ljava.lang.String;@6b3871d6),Annotation([Ljava.lang.String;@37095ded,[Ljava.lang.String;@2eb79cbe,[Ledu.cmu.lti.nlp.amr.Dependency;@2ca6546f),Annotation([Ljava.lang.String;@43826ec,[Ljava.lang.String;@7923f5b3,[Ljava.lang.String;@6b63d445),Annotation([Ljava.lang.String;@7578e06a,[Ljava.lang.String;@30b2b76f,[Ledu.cmu.lti.nlp.amr.Entity;@56da52a7))
AMR:
(他 / 他, manner, 就 / 就-01)
(他 / 他, mod, 花 / 花-01)
(增 / 增添-01, location, 他 / 他)
(就 / 就-01, time, 星 / 星星)
(当 / 当-04, ARG4, 点 / 点着-01)
(当 / 当-04, ARG5, 他3 / 他)
(当 / 当-04, manner, 就 / 就-01)
(点 / 点着-01, op, 路 / 路灯)
(路 / 路灯, poss, 他2 / 他)

Decoded in 38,094 microseconds
Sentence: 当 他 熄灭 了 路灯 时 ， 就 象 让 星星 或 花朵 睡 着 了 似的 。

Spans:
Span 1-2:  他 => 他
Span 7-8:  就 => 就-01
Span 0-1:  当 => 当-04
Span 10-11:  星星 => 星星
Span 2-3:  熄灭 => 熄灭-01
Span 12-13:  花朵 => 花朵
Span 9-10:  让 => 让-01
Span 4-5:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 7-8:  就 => 就
Oracle Span 10-11:  星星 => 星星
Oracle Span 2-3:  熄灭 => 熄灭-01
Oracle Span 12-13:  花朵 => 花朵
Oracle Span 9-10:  让 => 让-02
Oracle Span 4-5:  路灯 => 路灯

Incorrect span: 让 => 让-01
Incorrect span: 就 => 就-01
Extra span: 当 => 当-04
Missing span: 就 => 就
Missing span: 让 => 让-02
Dependencies:
1	当	_	P	P	_	15	prep	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	熄灭	_	VV	VV	_	6	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	路灯	_	NN	NN	_	3	dobj	_	_
6	时	_	LC	LC	_	1	plmod	_	_
7	,	_	PU	PU	_	15	punct	_	_
8	就	_	AD	AD	_	15	advmod	_	_
9	象	_	P	P	_	15	prep	_	_
10	让	_	VV	VV	_	9	pccomp	_	_
11	星星	_	NN	NN	_	13	conj	_	_
12	或	_	CC	CC	_	13	cc	_	_
13	花朵	_	NN	NN	_	10	dobj	_	_
14	睡	_	VV	VV	_	10	dep	_	_
15	着	_	VV	VV	_	0	root	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	似的	_	NN	NN	_	15	dobj	_	_
18	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 熄灭-01, arg0, x2 / 他)
(x0 / 熄灭-01, arg1, x3 / 路灯)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),花朵,花朵,false), Span(10,11,List(1),星星,星星,false), Span(9,10,List(2),让,让-01,false), Span(7,8,List(3),就,就-01,false), Span(4,5,List(4),路灯,路灯,false), Span(2,3,List(5),熄灭,熄灭-01,false), Span(1,2,List(6),他,他,false), Span(0,1,List(7),当,当-04,false)),Map(2 -> 让-01, 5 -> 熄灭-01, 7 -> 当-04, 1 -> 星星, 4 -> 路灯, 6 -> 他, 0 -> 花朵, 3 -> 就-01),Map(就 -> 就-01, 路 -> 路灯, 星 -> 星星, 他 -> 他, 花 -> 花朵, 熄 -> 熄灭-01, 让 -> 让-01, 当 -> 当-04))),[Ljava.lang.String;@23ee75c5,Annotation([Ljava.lang.String;@11a7ba62,[Ljava.lang.String;@340b7ef6,[Ljava.lang.String;@30404dba),Annotation([Ljava.lang.String;@6050462a,[Ljava.lang.String;@4c0884e8,[Ledu.cmu.lti.nlp.amr.Dependency;@231baf51),Annotation([Ljava.lang.String;@11841b15,[Ljava.lang.String;@73877e19,[Ljava.lang.String;@7b208b45),Annotation([Ljava.lang.String;@5bfc257,[Ljava.lang.String;@34523d46,[Ledu.cmu.lti.nlp.amr.Entity;@7cedfa63))
AMR:
(当 / 当-04, ARG4, 熄 / 熄灭-01)
(当 / 当-04, ARG5, 他 / 他)
(当 / 当-04, manner, 就 / 就-01)
(星 / 星星, ARG6, 让 / 让-01)
(星 / 星星, mode, 就 / 就-01)
(熄 / 熄灭-01, mod, 路 / 路灯)
(让 / 让-01, snt3, 花 / 花朵)

Decoded in 22,486 microseconds
Sentence: 这 差事 真 美妙 ，

Spans:
Span 1-2:  差事 => 差事
Span 2-3:  真 => 真
Span 3-4:  美妙 => 美妙-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  差事 => 差事
Oracle Span 2-3:  真 => 真
Oracle Span 3-4:  美妙 => 美妙-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	4	nsubj	_	_
2	差事	_	NN	NN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	美妙	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 美妙-01, arg0, x3 / 差事)
(x0 / 美妙-01, degree, x2 / 真)
(x3 / 差事, mod, x4 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),美妙,美妙-01,false), Span(2,3,List(1),真,真,false), Span(1,2,List(2),差事,差事,false), Span(0,1,List(3),这,这,false)),Map(2 -> 差事, 1 -> 真, 0 -> 美妙-01, 3 -> 这),Map(美 -> 美妙-01, 这 -> 这, 差 -> 差事, 真 -> 真))),[Ljava.lang.String;@3e83c18,Annotation([Ljava.lang.String;@783efb48,[Ljava.lang.String;@5d235104,[Ljava.lang.String;@4e8e8621),Annotation([Ljava.lang.String;@c446b14,[Ljava.lang.String;@3af356f,[Ledu.cmu.lti.nlp.amr.Dependency;@4443ef6f),Annotation([Ljava.lang.String;@7e46d648,[Ljava.lang.String;@51751e5f,[Ljava.lang.String;@2b0b4d53),Annotation([Ljava.lang.String;@7068f7ca,[Ljava.lang.String;@38548b19,[Ledu.cmu.lti.nlp.amr.Entity;@41aaedaa))
AMR:
(差 / 差事, mod, 这 / 这)
(美 / 美妙-01, degree, 真 / 真)
(美 / 美妙-01, mode, 差 / 差事)

Decoded in 6,384 microseconds
Sentence: 就 是 真正 有用 的 了 。 ”

Spans:
Span 0-1:  就 => 就-01
Span 1-2:  是 => 是-04
Span 3-4:  有用 => 有用-01
Span 2-3:  真正 => 真正

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 3-4:  有用 => 有用-01
Oracle Span 2-3:  真正 => 真正-01

Incorrect span: 真正 => 真正
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 真正 => 真正-01
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	真正	_	AD	AD	_	4	advmod	_	_
4	有用	_	VV	VV	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	了	_	SP	SP	_	2	dep	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 有用-01, degree, x12 / 真正-01)
(x11 / 有用-01, manner, x13 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),有用,有用-01,false), Span(2,3,List(1),真正,真正,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),就,就-01,false)),Map(2 -> 是-04, 1 -> 真正, 0 -> 有用-01, 3 -> 就-01),Map(就 -> 就-01, 是 -> 是-04, 真 -> 真正, 有 -> 有用-01))),[Ljava.lang.String;@303a5119,Annotation([Ljava.lang.String;@75b3673,[Ljava.lang.String;@1bcb79c2,[Ljava.lang.String;@d1a10ac),Annotation([Ljava.lang.String;@6fca2a8f,[Ljava.lang.String;@31fc71ab,[Ledu.cmu.lti.nlp.amr.Dependency;@71391b3f),Annotation([Ljava.lang.String;@2cfbeac4,[Ljava.lang.String;@12db3386,[Ljava.lang.String;@4078695f),Annotation([Ljava.lang.String;@79a1728c,[Ljava.lang.String;@a7f0ab6,[Ledu.cmu.lti.nlp.amr.Entity;@41f35f7c))
AMR:
(是 / 是-04, manner, 就 / 就-01)
(有 / 有用-01, manner, 是 / 是-04)
(有 / 有用-01, manner, 真 / 真正)

Decoded in 5,992 microseconds
Sentence: 小 王子 一 到 了 这个 行星 上 ， 就 很 尊敬 地 向 点 路灯 的 人 打 招呼 ：

Spans:
Span 17-18:  人 => 人
Span 3-4:  到 => 到-01
Span 12-13:  地 => 地
Span 11-12:  尊敬 => 尊敬-01
Span 0-1:  小 => 小
Span 9-10:  就 => 就-01
Span 10-11:  很 => 很
Span 14-15:  点 => 点
Span 1-2:  王子 => 王子
Span 6-7:  行星 => 行星
Span 15-16:  路灯 => 路灯
Span 5-6:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  人 => 人
Oracle Span 3-4:  到 => 到-01
Oracle Span 11-12:  尊敬 => 尊敬-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  很 => 很
Oracle Span 14-15:  点 => 点-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 6-7:  行星 => 行星
Oracle Span 15-16:  路灯 => 路灯

Incorrect span: 点 => 点
Extra span: 地 => 地
Incorrect span: 就 => 就-01
Extra span: 这个 => 这个
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 点 => 点-01
Missing span: 就 => 就
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	一	_	AD	AD	_	4	advmod	_	_
4	到	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	行星	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	loc	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	就	_	AD	AD	_	16	advmod	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	尊敬	_	VV	VV	_	16	dep	_	_
13	地	_	DEV	DEV	_	12	dvpm	_	_
14	向	_	P	P	_	16	prep	_	_
15	点	_	NN	NN	_	14	pobj	_	_
16	路灯	_	VV	VV	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	人	_	NN	NN	_	19	nsubj	_	_
19	打	_	VV	VV	_	4	conj	_	_
20	招呼	_	NN	NN	_	19	dobj	_	_
21	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 点-01, arg0, x10 / 人)
(x11 / 点-01, arg1, x12 / 路灯)
(x13 / 尊敬-01, degree, x16 / 很)
(x2 / 到-01, arg0, x3 / 王子)
(x2 / 到-01, arg1, x5 / 行星)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),人,人,false), Span(15,16,List(1),路灯,路灯,false), Span(14,15,List(2),点,点,false), Span(12,13,List(3),地,地,false), Span(11,12,List(4),尊敬,尊敬-01,false), Span(10,11,List(5),很,很,false), Span(9,10,List(6),就,就-01,false), Span(6,7,List(7),行星,行星,false), Span(5,6,List(8),这个,这个,false), Span(3,4,List(9),到,到-01,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 点, 5 -> 很, 8 -> 这个, 7 -> 行星, 1 -> 路灯, 11 -> 小, 4 -> 尊敬-01, 6 -> 就-01, 9 -> 到-01, 0 -> 人, 10 -> 王子, 3 -> 地),Map(就 -> 就-01, 路 -> 路灯, 尊 -> 尊敬-01, 这 -> 这个, 王 -> 王子, 很 -> 很, 小 -> 小, 地 -> 地, 到 -> 到-01, 点 -> 点, 行 -> 行星, 人 -> 人))),[Ljava.lang.String;@42c2f48c,Annotation([Ljava.lang.String;@3005db4a,[Ljava.lang.String;@425d5d46,[Ljava.lang.String;@198ef2ce),Annotation([Ljava.lang.String;@4cbd03e7,[Ljava.lang.String;@52fc5eb1,[Ledu.cmu.lti.nlp.amr.Dependency;@7a639ec5),Annotation([Ljava.lang.String;@14151bc5,[Ljava.lang.String;@3013909b,[Ljava.lang.String;@2a49fe),Annotation([Ljava.lang.String;@66596a88,[Ljava.lang.String;@5aae8eb5,[Ledu.cmu.lti.nlp.amr.Entity;@76954a33))
AMR:
(人 / 人, mod, 路 / 路灯)
(到 / 到-01, mode, 王 / 王子)
(地 / 地, mod, 尊 / 尊敬-01)
(尊 / 尊敬-01, degree, 很 / 很)
(就 / 就-01, degree, 很 / 很)
(就 / 就-01, time, 行 / 行星)
(点 / 点, poss, 地 / 地)
(王 / 王子, mod, 小 / 小)
(行 / 行星, mod, 这 / 这个)
(路 / 路灯, poss, 点 / 点)
(这 / 这个, time, 到 / 到-01)

Decoded in 42,923 microseconds
Sentence: “ 早上 好 。

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-04),Map(早 -> 早上, 好 -> 好-04))),[Ljava.lang.String;@24a298a6,Annotation([Ljava.lang.String;@982bb90,[Ljava.lang.String;@27f74733,[Ljava.lang.String;@7bef452c),Annotation([Ljava.lang.String;@4bb8855f,[Ljava.lang.String;@57fae983,[Ledu.cmu.lti.nlp.amr.Dependency;@4a29f290),Annotation([Ljava.lang.String;@4bee18dc,[Ljava.lang.String;@44f3fe83,[Ljava.lang.String;@44c5a16f),Annotation([Ljava.lang.String;@417d6615,[Ljava.lang.String;@7a6ebe1e,[Ledu.cmu.lti.nlp.amr.Entity;@21325036))
AMR:
(好 / 好-04, time, 早 / 早上)

Decoded in 2,614 microseconds
Sentence: —— 你 刚才 为什么 把 路灯 灭 了 呢 ？

Spans:
Span 1-2:  你 => 你
Span 2-3:  刚才 => 刚才
Span 6-7:  灭 => 灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  刚才 => 刚才
Oracle Span 6-7:  灭 => 灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	——	_	PU	PU	_	7	dep	_	_
2	你	_	PN	PN	_	7	nsubj	_	_
3	刚才	_	AD	AD	_	7	advmod	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	路灯	_	NN	NN	_	7	nsubj	_	_
7	灭	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	呢	_	SP	SP	_	7	dep	_	_
10	？	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 灭-01, arg0, x2 / 你)
(x0 / 灭-01, arg1, x3 / 路灯)
(x0 / 灭-01, time, x4 / 刚才)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),灭,灭-01,false), Span(5,6,List(1),路灯,路灯,false), Span(2,3,List(2),刚才,刚才,false), Span(1,2,List(3),你,你,false)),Map(2 -> 刚才, 1 -> 路灯, 0 -> 灭-01, 3 -> 你),Map(路 -> 路灯, 灭 -> 灭-01, 你 -> 你, 刚 -> 刚才))),[Ljava.lang.String;@489543a6,Annotation([Ljava.lang.String;@6272c96f,[Ljava.lang.String;@6de30571,[Ljava.lang.String;@5ee34b1b),Annotation([Ljava.lang.String;@3c89bb12,[Ljava.lang.String;@48c4245d,[Ledu.cmu.lti.nlp.amr.Dependency;@3df978b9),Annotation([Ljava.lang.String;@7906578e,[Ljava.lang.String;@8a62297,[Ljava.lang.String;@61a91912),Annotation([Ljava.lang.String;@1763992e,[Ljava.lang.String;@5c92166b,[Ledu.cmu.lti.nlp.amr.Entity;@659925f4))
AMR:
(刚 / 刚才, conj-as-if, 你 / 你)
(灭 / 灭-01, ARG2, 路 / 路灯)
(灭 / 灭-01, time, 刚 / 刚才)

Decoded in 7,115 microseconds
Sentence: —— 这 是 命令 。 ” 点灯 的 回答 道 。

Spans:
Span 3-4:  命令 => 命令-01
Span 8-9:  回答 => 回答-01
Span 2-3:  是 => 是-04
Span 6-7:  点灯 => 点灯-01
Span 1-2:  这 => 这
Span 9-10:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  命令 => 命令
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 1-2:  这 => 这

Extra span: 道 => 道-01
Extra span: 点灯 => 点灯-01
Incorrect span: 命令 => 命令-01
Extra span: 是 => 是-04
Missing span: 命令 => 命令
Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	命令	_	NN	NN	_	7	nn	_	_
5	。	_	NN	NN	_	7	dep	_	_
6	”	_	PU	PU	_	7	punct	_	_
7	点灯	_	NN	NN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	回答	_	NN	NN	_	10	nn	_	_
10	道	_	NN	NN	_	3	attr	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 回答-01, arg1, x15 / 命令)
(x15 / 命令, domain, x16 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),道,道-01,false), Span(8,9,List(1),回答,回答-01,false), Span(6,7,List(2),点灯,点灯-01,false), Span(3,4,List(3),命令,命令-01,false), Span(2,3,List(4),是,是-04,false), Span(1,2,List(5),这,这,false)),Map(2 -> 点灯-01, 5 -> 这, 1 -> 回答-01, 4 -> 是-04, 0 -> 道-01, 3 -> 命令-01),Map(这 -> 这, 命 -> 命令-01, 道 -> 道-01, 点 -> 点灯-01, 是 -> 是-04, 回 -> 回答-01))),[Ljava.lang.String;@4cd1c1dc,Annotation([Ljava.lang.String;@47f08b81,[Ljava.lang.String;@b9dfc5a,[Ljava.lang.String;@2787de58),Annotation([Ljava.lang.String;@659a2455,[Ljava.lang.String;@267517e4,[Ledu.cmu.lti.nlp.amr.Dependency;@426e505c),Annotation([Ljava.lang.String;@5b022357,[Ljava.lang.String;@6f8e0cee,[Ljava.lang.String;@614aeccc),Annotation([Ljava.lang.String;@5116ac09,[Ljava.lang.String;@1bc425e7,[Ledu.cmu.lti.nlp.amr.Entity;@4b2a30d))
AMR:
(命 / 命令-01, conj-as-if, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)
(点 / 点灯-01, conj-as-if, 是 / 是-04)
(点 / 点灯-01, prep-through, 回 / 回答-01)
(道 / 道-01, ARG1, 回 / 回答-01)

Decoded in 14,214 microseconds
Sentence: “ 早上 好 。 ”

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-04),Map(早 -> 早上, 好 -> 好-04))),[Ljava.lang.String;@322803db,Annotation([Ljava.lang.String;@56ba8773,[Ljava.lang.String;@6ceb7b5e,[Ljava.lang.String;@7dd00705),Annotation([Ljava.lang.String;@f14e5bf,[Ljava.lang.String;@d176a31,[Ledu.cmu.lti.nlp.amr.Dependency;@3a91d146),Annotation([Ljava.lang.String;@4784013e,[Ljava.lang.String;@6f952d6c,[Ljava.lang.String;@5965844d),Annotation([Ljava.lang.String;@6d4a65c6,[Ljava.lang.String;@aa004a0,[Ledu.cmu.lti.nlp.amr.Entity;@4c98a6d5))
AMR:
(好 / 好-04, time, 早 / 早上)

Decoded in 2,933 microseconds
Sentence: “ 命令 是 什么 ？ ”

Spans:
Span 3-4:  什么 => 什么
Span 1-2:  命令 => 命令-01
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  命令 => 命令

Extra span: 什么 => 什么
Extra span: 是 => 是-04
Incorrect span: 命令 => 命令-01
Missing span: 命令 => 命令
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	命令	_	NN	NN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	PN	PN	_	3	attr	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),什么,什么,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),命令,命令-01,false)),Map(2 -> 命令-01, 1 -> 是-04, 0 -> 什么),Map(命 -> 命令-01, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@392a04e7,Annotation([Ljava.lang.String;@7f02251,[Ljava.lang.String;@dffa30b,[Ljava.lang.String;@4d8126f),Annotation([Ljava.lang.String;@6d3c232f,[Ljava.lang.String;@6b587673,[Ledu.cmu.lti.nlp.amr.Dependency;@1bcf67e8),Annotation([Ljava.lang.String;@5f404594,[Ljava.lang.String;@53692008,[Ljava.lang.String;@7b2a3ff8),Annotation([Ljava.lang.String;@1bbae752,[Ljava.lang.String;@460b6d54,[Ledu.cmu.lti.nlp.amr.Entity;@5cf87cfd))
AMR:
(什 / 什么, mod, 是 / 是-04)
(命 / 命令-01, example, 是 / 是-04)

Decoded in 3,794 microseconds
Sentence: “ 就 是 熄掉 我 的 路灯 。

Spans:
Span 1-2:  就 => 就-01
Span 4-5:  我 => 我
Span 2-3:  是 => 是-04
Span 3-4:  熄掉 => 熄掉-01
Span 6-7:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  我 => 我
Oracle Span 3-4:  熄掉 => 熄掉-01
Oracle Span 6-7:  路灯 => 路灯

Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	熄掉	_	NR	NR	_	7	nn	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	路灯	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 熄掉-01, arg1, x7 / 路灯)
(x7 / 路灯, poss, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),路灯,路灯,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),熄掉,熄掉-01,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),就,就-01,false)),Map(2 -> 熄掉-01, 1 -> 我, 4 -> 就-01, 0 -> 路灯, 3 -> 是-04),Map(就 -> 就-01, 路 -> 路灯, 我 -> 我, 熄 -> 熄掉-01, 是 -> 是-04))),[Ljava.lang.String;@76075d65,Annotation([Ljava.lang.String;@3a4ba480,[Ljava.lang.String;@27b71f50,[Ljava.lang.String;@383790cf),Annotation([Ljava.lang.String;@74971ed9,[Ljava.lang.String;@131fcb6f,[Ledu.cmu.lti.nlp.amr.Dependency;@ccd1bc3),Annotation([Ljava.lang.String;@878537d,[Ljava.lang.String;@4455f57d,[Ljava.lang.String;@29fc1a2b),Annotation([Ljava.lang.String;@4d0b0fd4,[Ljava.lang.String;@7a24eb3,[Ledu.cmu.lti.nlp.amr.Entity;@6c37bd27))
AMR:
(是 / 是-04, manner, 就 / 就-01)
(熄 / 熄掉-01, degree, 是 / 是-04)
(路 / 路灯, poss, 我 / 我)
(路 / 路灯, poss, 是 / 是-04)

Decoded in 8,106 microseconds
Sentence: —— 晚上 好 。 ”

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  晚上 => 晚上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  晚上 => 晚上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	晚上	_	NT	NT	_	3	tmod	_	_
3	好	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 晚上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),晚上,晚上,false)),Map(1 -> 晚上, 0 -> 好-04),Map(晚 -> 晚上, 好 -> 好-04))),[Ljava.lang.String;@25d3cfc8,Annotation([Ljava.lang.String;@30331109,[Ljava.lang.String;@2571066a,[Ljava.lang.String;@74fe5966),Annotation([Ljava.lang.String;@4fe875be,[Ljava.lang.String;@677b8e13,[Ledu.cmu.lti.nlp.amr.Dependency;@4a9486c0),Annotation([Ljava.lang.String;@4c27d39d,[Ljava.lang.String;@40ee0a22,[Ljava.lang.String;@7bde1f3a),Annotation([Ljava.lang.String;@15923407,[Ljava.lang.String;@67dba613,[Ledu.cmu.lti.nlp.amr.Entity;@57540fd0))
AMR:
(好 / 好-04, time, 晚 / 晚上)

Decoded in 2,789 microseconds
Sentence: 于是 他 又 点燃 了 路灯 。

Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  点燃 => 点燃-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  点燃 => 点燃-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	点燃	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x4 / 点燃-01, arg0, x5 / 他)
(x4 / 点燃-01, arg1, x7 / 路灯)
(x4 / 点燃-01, manner, x6 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),路灯,路灯,false), Span(3,4,List(1),点燃,点燃-01,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他,他,false)),Map(2 -> 又, 1 -> 点燃-01, 0 -> 路灯, 3 -> 他),Map(又 -> 又, 路 -> 路灯, 他 -> 他, 点 -> 点燃-01))),[Ljava.lang.String;@5cf8edcf,Annotation([Ljava.lang.String;@58cec85b,[Ljava.lang.String;@629f066f,[Ljava.lang.String;@1542af63),Annotation([Ljava.lang.String;@ecfbe91,[Ljava.lang.String;@20ed3303,[Ledu.cmu.lti.nlp.amr.Dependency;@3adbe50f),Annotation([Ljava.lang.String;@3a627c80,[Ljava.lang.String;@49aa766b,[Ljava.lang.String;@963176),Annotation([Ljava.lang.String;@65004ff6,[Ljava.lang.String;@4cafa9aa,[Ledu.cmu.lti.nlp.amr.Entity;@562c877a))
AMR:
(点 / 点燃-01, ARG6, 他 / 他)
(点 / 点燃-01, manner, 又 / 又)
(点 / 点燃-01, mod, 路 / 路灯)

Decoded in 7,646 microseconds
Sentence: “ 那么 为什么 你 又 把 它 点着 了 呢 ？ ”

Spans:
Span 3-4:  你 => 你
Span 4-5:  又 => 又
Span 6-7:  它 => 它
Span 7-8:  点着 => 点着-01
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 4-5:  又 => 又
Oracle Span 6-7:  它 => 它
Oracle Span 7-8:  点着 => 点着-01

Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	为什么	_	AD	AD	_	8	advmod	_	_
4	你	_	PN	PN	_	8	prep	_	_
5	又	_	AD	AD	_	8	advmod	_	_
6	把	_	BA	BA	_	8	ba	_	_
7	它	_	PN	PN	_	8	nsubj	_	_
8	点着	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	呢	_	SP	SP	_	8	dep	_	_
11	？	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 点着-01, arg0, x11 / 你)
(x10 / 点着-01, arg1, x12 / 它)
(x10 / 点着-01, manner, x13 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),点着,点着-01,false), Span(6,7,List(1),它,它,false), Span(4,5,List(2),又,又,false), Span(3,4,List(3),你,你,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 又, 1 -> 它, 4 -> 那么, 0 -> 点着-01, 3 -> 你),Map(又 -> 又, 你 -> 你, 它 -> 它, 点 -> 点着-01, 那 -> 那么))),[Ljava.lang.String;@67001148,Annotation([Ljava.lang.String;@989da1,[Ljava.lang.String;@31cb96e1,[Ljava.lang.String;@3eed0f5),Annotation([Ljava.lang.String;@64030b91,[Ljava.lang.String;@2032e725,[Ledu.cmu.lti.nlp.amr.Dependency;@4d23015c),Annotation([Ljava.lang.String;@383f1975,[Ljava.lang.String;@441cc260,[Ljava.lang.String;@73a00e09),Annotation([Ljava.lang.String;@26dcd8c0,[Ljava.lang.String;@66e889df,[Ledu.cmu.lti.nlp.amr.Entity;@444548a0))
AMR:
(点 / 点着-01, ARG3, 它 / 它)
(点 / 点着-01, degree, 那 / 那么)
(点 / 点着-01, manner, 又 / 又)
(点 / 点着-01, topic, 你 / 你)

Decoded in 11,322 microseconds
Sentence: “ 这 是 命令 。 ” 点灯 的 人 回答 道 。

Spans:
Span 8-9:  人 => 人
Span 3-4:  命令 => 命令-01
Span 9-10:  回答 => 回答-01
Span 2-3:  是 => 是-04
Span 6-7:  点灯 => 点灯-01
Span 1-2:  这 => 这
Span 10-11:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 3-4:  命令 => 命令
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 1-2:  这 => 这

Extra span: 道 => 道-01
Extra span: 点灯 => 点灯-01
Incorrect span: 命令 => 命令-01
Extra span: 是 => 是-04
Missing span: 命令 => 命令
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	命令	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_
7	点灯	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	人	_	NN	NN	_	10	nsubj	_	_
10	回答	_	VV	VV	_	0	root	_	_
11	道	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 人)
(x0 / 回答-01, arg1, x4 / 命令)
(x4 / 命令, domain, x5 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),道,道-01,false), Span(9,10,List(1),回答,回答-01,false), Span(8,9,List(2),人,人,false), Span(6,7,List(3),点灯,点灯-01,false), Span(3,4,List(4),命令,命令-01,false), Span(2,3,List(5),是,是-04,false), Span(1,2,List(6),这,这,false)),Map(2 -> 人, 5 -> 是-04, 1 -> 回答-01, 4 -> 命令-01, 6 -> 这, 0 -> 道-01, 3 -> 点灯-01),Map(这 -> 这, 命 -> 命令-01, 道 -> 道-01, 点 -> 点灯-01, 人 -> 人, 是 -> 是-04, 回 -> 回答-01))),[Ljava.lang.String;@3766c667,Annotation([Ljava.lang.String;@773c0293,[Ljava.lang.String;@55b8dbda,[Ljava.lang.String;@3b569985),Annotation([Ljava.lang.String;@3a022576,[Ljava.lang.String;@2dbd803f,[Ledu.cmu.lti.nlp.amr.Dependency;@3e48e859),Annotation([Ljava.lang.String;@31ddd4a4,[Ljava.lang.String;@1a5f7e7c,[Ljava.lang.String;@5b22b970),Annotation([Ljava.lang.String;@22d1886d,[Ljava.lang.String;@7df60067,[Ledu.cmu.lti.nlp.amr.Entity;@1cbb3d3b))
AMR:
(命 / 命令-01, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)
(点 / 点灯-01, degree, 命 / 命令-01)
(点 / 点灯-01, prep-through, 人 / 人)
(道 / 道-01, degree, 人 / 人)
(道 / 道-01, degree, 回 / 回答-01)

Decoded in 14,484 microseconds
Sentence: “ 我 不 明白 。 ” 小 王子 说 。

Spans:
Span 2-3:  不 => 不
Span 6-7:  小 => 小
Span 1-2:  我 => 我
Span 3-4:  明白 => 明白-01
Span 7-8:  王子 => 王子
Span 8-9:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	明白	_	VV	VV	_	8	vmod	_	_
5	。	_	VA	VA	_	4	ccomp	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, arg0, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),王子,王子,false), Span(6,7,List(2),小,小,false), Span(3,4,List(3),明白,明白-01,false), Span(2,3,List(4),不,不,false), Span(1,2,List(5),我,我,false)),Map(2 -> 小, 5 -> 我, 1 -> 王子, 4 -> 不, 0 -> 说-02, 3 -> 明白-01),Map(我 -> 我, 王 -> 王子, 小 -> 小, 不 -> 不, 说 -> 说-02, 明 -> 明白-01))),[Ljava.lang.String;@529cfee5,Annotation([Ljava.lang.String;@7ca0863b,[Ljava.lang.String;@319854f0,[Ljava.lang.String;@748fe51d),Annotation([Ljava.lang.String;@415156bf,[Ljava.lang.String;@393881f0,[Ledu.cmu.lti.nlp.amr.Dependency;@4af46df3),Annotation([Ljava.lang.String;@4158debd,[Ljava.lang.String;@af78c87,[Ljava.lang.String;@773dab28),Annotation([Ljava.lang.String;@1ecfcbc9,[Ljava.lang.String;@1965539b,[Ledu.cmu.lti.nlp.amr.Entity;@2fc07784))
AMR:
(不 / 不, poss, 我 / 我)
(明 / 明白-01, manner, 不 / 不)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 明 / 明白-01)

Decoded in 11,266 microseconds
Sentence: “ 没 什么 要 明白 的 。 点灯 的 回答 说 。

Spans:
Span 2-3:  什么 => 什么
Span 9-10:  回答 => 回答-01
Span 4-5:  明白 => 明白-01
Span 7-8:  点灯 => 点灯-01
Span 3-4:  要 => 要-02
Span 10-11:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 9-10:  回答 => 回答-01
Oracle Span 4-5:  明白 => 明白-01
Oracle Span 3-4:  要 => 要-03

Extra span: 说 => 说-02
Extra span: 点灯 => 点灯-01
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没	_	VE	VE	_	0	root	_	_
3	什么	_	PN	PN	_	4	nsubj	_	_
4	要	_	VV	VV	_	2	dobj	_	_
5	明白	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	点灯	_	NR	NR	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	回答	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	2	dep	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 要-03, arg0, x15 / 明白-01)
(x15 / 明白-01, arg1, x17 / 什么)
(x9 / 回答-01, arg2, x14 / 要-03)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),回答,回答-01,false), Span(7,8,List(2),点灯,点灯-01,false), Span(4,5,List(3),明白,明白-01,false), Span(3,4,List(4),要,要-02,false), Span(2,3,List(5),什么,什么,false)),Map(2 -> 点灯-01, 5 -> 什么, 1 -> 回答-01, 4 -> 要-02, 0 -> 说-02, 3 -> 明白-01),Map(要 -> 要-02, 点 -> 点灯-01, 说 -> 说-02, 什 -> 什么, 明 -> 明白-01, 回 -> 回答-01))),[Ljava.lang.String;@353efdbf,Annotation([Ljava.lang.String;@55cff952,[Ljava.lang.String;@660591fb,[Ljava.lang.String;@4a55a6e8),Annotation([Ljava.lang.String;@8c46918,[Ljava.lang.String;@226b143b,[Ledu.cmu.lti.nlp.amr.Dependency;@682bd3c4),Annotation([Ljava.lang.String;@f2e4acf,[Ljava.lang.String;@24097e9b,[Ljava.lang.String;@5eb97ced),Annotation([Ljava.lang.String;@68ba310d,[Ljava.lang.String;@153f66e7,[Ledu.cmu.lti.nlp.amr.Entity;@7aad3f7d))
AMR:
(点 / 点灯-01, purpose, 说 / 说-02)
(点 / 点灯-01, snt3, 明 / 明白-01)
(要 / 要-02, mod, 什 / 什么)
(要 / 要-02, purpose, 明 / 明白-01)
(说 / 说-02, example, 回 / 回答-01)

Decoded in 11,637 microseconds
Sentence: 命令 就 是 命令 。 ”

Spans:
Span 3-4:  命令 => 命令-01
Span 0-1:  命令 => 命令-01
Span 1-2:  就 => 就-01
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  命令 => 命令
Oracle Span 3-4:  命令 => 命令
Oracle Span 1-2:  就 => 就

Incorrect span: 命令 => 命令-01
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Incorrect span: 命令 => 命令-01
Missing span: 命令 => 命令
Missing span: 就 => 就
Missing span: 命令 => 命令
Dependencies:
1	命令	_	NN	NN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	命令	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 命令, domain, x7 / 命令)
(x6 / 命令, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),命令,命令-01,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),就,就-01,false), Span(0,1,List(3),命令,命令-01,false)),Map(2 -> 就-01, 1 -> 是-04, 0 -> 命令-01, 3 -> 命令-01),Map(就 -> 就-01, 命 -> 命令-01, 命2 -> 命令-01, 是 -> 是-04))),[Ljava.lang.String;@6f667ad1,Annotation([Ljava.lang.String;@566d0c69,[Ljava.lang.String;@388b401d,[Ljava.lang.String;@2bcec6a6),Annotation([Ljava.lang.String;@77a281fc,[Ljava.lang.String;@4912d525,[Ledu.cmu.lti.nlp.amr.Dependency;@2bfbffb2),Annotation([Ljava.lang.String;@765df79d,[Ljava.lang.String;@151335cb,[Ljava.lang.String;@4a7761b1),Annotation([Ljava.lang.String;@3e850122,[Ljava.lang.String;@27fde870,[Ledu.cmu.lti.nlp.amr.Entity;@2b4c3c29))
AMR:
(命 / 命令-01, manner, 是 / 是-04)
(命2 / 命令-01, manner, 就 / 就-01)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 5,663 microseconds
Sentence: “ 早上 好 。 ”

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-04),Map(早 -> 早上, 好 -> 好-04))),[Ljava.lang.String;@5ac7aa18,Annotation([Ljava.lang.String;@4cdd2c73,[Ljava.lang.String;@4abf3f0,[Ljava.lang.String;@4e4c3a38),Annotation([Ljava.lang.String;@293cde83,[Ljava.lang.String;@c27d163,[Ledu.cmu.lti.nlp.amr.Dependency;@57c88764),Annotation([Ljava.lang.String;@78faea5f,[Ljava.lang.String;@37fdfb05,[Ljava.lang.String;@5e39850),Annotation([Ljava.lang.String;@1603dc2f,[Ljava.lang.String;@398474a2,[Ledu.cmu.lti.nlp.amr.Entity;@61799544))
AMR:
(好 / 好-04, time, 早 / 早上)

Decoded in 2,752 microseconds
Sentence: 于是 他 又 熄灭 了 路灯 。

Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  熄灭 => 熄灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	熄灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 熄灭-01, arg0, x4 / 他)
(x2 / 熄灭-01, arg1, x5 / 路灯)
(x2 / 熄灭-01, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),路灯,路灯,false), Span(3,4,List(1),熄灭,熄灭-01,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他,他,false)),Map(2 -> 又, 1 -> 熄灭-01, 0 -> 路灯, 3 -> 他),Map(又 -> 又, 路 -> 路灯, 他 -> 他, 熄 -> 熄灭-01))),[Ljava.lang.String;@78c1a023,Annotation([Ljava.lang.String;@70abf9b0,[Ljava.lang.String;@6a10b263,[Ljava.lang.String;@476ec9d0),Annotation([Ljava.lang.String;@325bb9a6,[Ljava.lang.String;@1d12b024,[Ledu.cmu.lti.nlp.amr.Dependency;@72fe8a4f),Annotation([Ljava.lang.String;@43effd89,[Ljava.lang.String;@2c16fadb,[Ljava.lang.String;@248deced),Annotation([Ljava.lang.String;@2227a6c1,[Ljava.lang.String;@1e9804b9,[Ledu.cmu.lti.nlp.amr.Entity;@543e593))
AMR:
(熄 / 熄灭-01, ARG6, 他 / 他)
(熄 / 熄灭-01, manner, 又 / 又)
(熄 / 熄灭-01, mod, 路 / 路灯)

Decoded in 7,002 microseconds
Sentence: 然后 他 拿 一 块 有 红 方格子 的 手绢 擦 着 额头 。

Spans:
Span 1-2:  他 => 他
Span 9-10:  手绢 => 手绢
Span 2-3:  拿 => 拿-02
Span 10-11:  擦 => 擦-01
Span 5-6:  有 => 有-06
Span 6-7:  红 => 红-01
Span 12-13:  额头 => 额头

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 9-10:  手绢 => 手绢
Oracle Span 2-3:  拿 => 拿-02
Oracle Span 10-11:  擦 => 擦-01
Oracle Span 6-7:  红 => 红-01
Oracle Span 12-13:  额头 => 额头

Extra span: 有 => 有-06
Dependencies:
1	然后	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	prep	_	_
3	拿	_	VV	VV	_	10	rcmod	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	块	_	M	M	_	3	range	_	_
6	有	_	VE	VE	_	3	conj	_	_
7	红	_	JJ	JJ	_	8	amod	_	_
8	方格子	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	3	cpm	_	_
10	手绢	_	NN	NN	_	11	nsubj	_	_
11	擦	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	额头	_	NN	NN	_	11	dobj	_	_
14	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x10 / 擦-01, arg1, x12 / 额头)
(x2 / 拿-02, arg0, x3 / 他)
(x2 / 拿-02, arg1, x4 / 手绢)
(x2 / 拿-02, purpose, x10 / 擦-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),额头,额头,false), Span(10,11,List(1),擦,擦-01,false), Span(9,10,List(2),手绢,手绢,false), Span(6,7,List(3),红,红-01,false), Span(5,6,List(4),有,有-06,false), Span(2,3,List(5),拿,拿-02,false), Span(1,2,List(6),他,他,false)),Map(2 -> 手绢, 5 -> 拿-02, 1 -> 擦-01, 4 -> 有-06, 6 -> 他, 0 -> 额头, 3 -> 红-01),Map(红 -> 红-01, 他 -> 他, 拿 -> 拿-02, 擦 -> 擦-01, 手 -> 手绢, 额 -> 额头, 有 -> 有-06))),[Ljava.lang.String;@4e628b52,Annotation([Ljava.lang.String;@51ec2df1,[Ljava.lang.String;@f8f56b9,[Ljava.lang.String;@15fa55a6),Annotation([Ljava.lang.String;@4f186450,[Ljava.lang.String;@7fab4be7,[Ledu.cmu.lti.nlp.amr.Dependency;@a64e035),Annotation([Ljava.lang.String;@4d74c3ba,[Ljava.lang.String;@41c204a0,[Ljava.lang.String;@64138b0c),Annotation([Ljava.lang.String;@49dbaaf3,[Ljava.lang.String;@22d9c961,[Ledu.cmu.lti.nlp.amr.Entity;@736f3e9e))
AMR:
(拿 / 拿-02, ARG1, 他 / 他)
(拿 / 拿-02, purpose, 擦 / 擦-01)
(拿 / 拿-02, value, 手 / 手绢)
(擦 / 擦-01, mod, 额 / 额头)
(有 / 有-06, ARG0, 拿 / 拿-02)
(红 / 红-01, ARG1, 有 / 有-06)

Decoded in 20,261 microseconds
Sentence: “ 我 干 的 是 一 种 可怕 的 职业 。

Spans:
Span 7-8:  可怕 => 可怕-01
Span 2-3:  干 => (thing :arg1-of 干-01)
Span 1-2:  我 => 我
Span 4-5:  是 => 是-04
Span 6-7:  种 => 种
Span 9-10:  职业 => 职业

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 以前 还 说 得 过去 ，

Spans:
Span 0-1:  以前 => 以前
Span 3-4:  得 => 得-06
Span 2-3:  说 => 说-02
Span 4-5:  过去 => 过去-01
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  以前 => 以前
Oracle Span 2-3:  说 => 说-01
Oracle Span 1-2:  还 => 还

Extra span: 过去 => 过去-01
Extra span: 得 => 得-06
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	以前	_	NT	NT	_	5	dep	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	说	_	VV	VV	_	5	dep	_	_
4	得	_	DER	DER	_	5	dep	_	_
5	过去	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 说-01, manner, x11 / 还)
(x9 / 说-01, time, x10 / 以前)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),过去,过去-01,false), Span(3,4,List(1),得,得-06,false), Span(2,3,List(2),说,说-02,false), Span(1,2,List(3),还,还,false), Span(0,1,List(4),以前,以前,false)),Map(2 -> 说-02, 1 -> 得-06, 4 -> 以前, 0 -> 过去-01, 3 -> 还),Map(得 -> 得-06, 过 -> 过去-01, 以 -> 以前, 还 -> 还, 说 -> 说-02))),[Ljava.lang.String;@1f443fae,Annotation([Ljava.lang.String;@73ba6fe6,[Ljava.lang.String;@79ab34c1,[Ljava.lang.String;@1698d7c0),Annotation([Ljava.lang.String;@281f23f2,[Ljava.lang.String;@87abc48,[Ledu.cmu.lti.nlp.amr.Dependency;@28d79cba),Annotation([Ljava.lang.String;@782168b7,[Ljava.lang.String;@29f0c4f2,[Ljava.lang.String;@7435a578),Annotation([Ljava.lang.String;@6093d508,[Ljava.lang.String;@13047d7d,[Ledu.cmu.lti.nlp.amr.Entity;@3c7cfcbb))
AMR:
(得 / 得-06, ARG1, 过 / 过去-01)
(说 / 说-02, ARG1, 得 / 得-06)
(说 / 说-02, manner, 还 / 还)
(说 / 说-02, time, 以 / 以前)

Decoded in 8,198 microseconds
Sentence: 早上 熄灯 ， 晚上 点灯 ，

Spans:
Span 0-1:  早上 => 早上
Span 3-4:  晚上 => 晚上
Span 4-5:  点灯 => 点灯-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  早上 => 早上
Oracle Span 3-4:  晚上 => 晚上

Extra span: 点灯 => 点灯-01
Dependencies:
1	早上	_	NT	NT	_	5	dep	_	_
2	熄灯	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	晚上	_	NT	NT	_	5	tmod	_	_
5	点灯	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),点灯,点灯-01,false), Span(3,4,List(1),晚上,晚上,false), Span(0,1,List(2),早上,早上,false)),Map(2 -> 早上, 1 -> 晚上, 0 -> 点灯-01),Map(早 -> 早上, 晚 -> 晚上, 点 -> 点灯-01))),[Ljava.lang.String;@65bb9029,Annotation([Ljava.lang.String;@1bfe3203,[Ljava.lang.String;@2b214b94,[Ljava.lang.String;@70e3f36f),Annotation([Ljava.lang.String;@49601f82,[Ljava.lang.String;@23e44287,[Ledu.cmu.lti.nlp.amr.Dependency;@2b8d084),Annotation([Ljava.lang.String;@6daf2337,[Ljava.lang.String;@24fabd0f,[Ljava.lang.String;@250b236d),Annotation([Ljava.lang.String;@61f3fbb8,[Ljava.lang.String;@7551da2a,[Ledu.cmu.lti.nlp.amr.Entity;@432034a))
AMR:
(点 / 点灯-01, time, 早 / 早上)
(点 / 点灯-01, time, 晚 / 晚上)

Decoded in 6,468 microseconds
Sentence: 剩下 时间 ， 白天 我 就 休息 ， 夜晚 我 就 睡觉 … ”

Spans:
Span 6-7:  休息 => 休息-01
Span 0-1:  剩下 => 剩下-01
Span 8-9:  夜晚 => 夜晚
Span 10-11:  就 => 就-01
Span 5-6:  就 => 就-01
Span 9-10:  我 => 我
Span 4-5:  我 => 我
Span 1-2:  时间 => 时间
Span 3-4:  白天 => 白天
Span 11-12:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  休息 => 休息-01
Oracle Span 0-1:  剩下 => 剩下-01
Oracle Span 8-9:  夜晚 => 夜晚
Oracle Span 4-5:  我 => 我
Oracle Span 1-2:  时间 => 时间
Oracle Span 3-4:  白天 => 白天
Oracle Span 11-12:  睡觉 => 睡觉-01

Extra span: 就 => 就-01
Extra span: 我 => 我
Extra span: 就 => 就-01
Dependencies:
1	剩下	_	VV	VV	_	0	root	_	_
2	时间	_	NN	NN	_	1	dobj	_	_
3	,	_	PU	PU	_	1	punct	_	_
4	白天	_	VV	VV	_	1	conj	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	休息	_	VV	VV	_	4	ccomp	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	夜晚	_	AD	AD	_	12	advmod	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	就	_	AD	AD	_	12	advmod	_	_
12	睡觉	_	VV	VV	_	7	conj	_	_
13	…	_	NN	NN	_	12	dobj	_	_
14	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x46 / 剩下-01, arg0, x47 / 我)
(x46 / 剩下-01, arg1, x48 / 时间)
(x49 / 白天, part, x48 / 时间)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),睡觉,睡觉-01,false), Span(10,11,List(1),就,就-01,false), Span(9,10,List(2),我,我,false), Span(8,9,List(3),夜晚,夜晚,false), Span(6,7,List(4),休息,休息-01,false), Span(5,6,List(5),就,就-01,false), Span(4,5,List(6),我,我,false), Span(3,4,List(7),白天,白天,false), Span(1,2,List(8),时间,时间,false), Span(0,1,List(9),剩下,剩下-01,false)),Map(2 -> 我, 5 -> 就-01, 8 -> 时间, 7 -> 白天, 1 -> 就-01, 4 -> 休息-01, 6 -> 我, 9 -> 剩下-01, 0 -> 睡觉-01, 3 -> 夜晚),Map(夜 -> 夜晚, 就 -> 就-01, 白 -> 白天, 我 -> 我, 我2 -> 我, 剩 -> 剩下-01, 就2 -> 就-01, 休 -> 休息-01, 时 -> 时间, 睡 -> 睡觉-01))),[Ljava.lang.String;@78de58ea,Annotation([Ljava.lang.String;@60e5272,[Ljava.lang.String;@7d755813,[Ljava.lang.String;@69c93ca4),Annotation([Ljava.lang.String;@63da207f,[Ljava.lang.String;@173373b4,[Ledu.cmu.lti.nlp.amr.Dependency;@40d10481),Annotation([Ljava.lang.String;@60dd3c23,[Ljava.lang.String;@52b6319f,[Ljava.lang.String;@5e9456ae),Annotation([Ljava.lang.String;@16a9a4f1,[Ljava.lang.String;@1f1cae23,[Ledu.cmu.lti.nlp.amr.Entity;@7c455e96))
AMR:
(休 / 休息-01, manner, 就2 / 就-01)
(休 / 休息-01, prep-through, 夜 / 夜晚)
(剩 / 剩下-01, ord, 时 / 时间)
(剩 / 剩下-01, prep-through, 就2 / 就-01)
(就 / 就-01, beneficiary, 我 / 我)
(就 / 就-01, time, 夜 / 夜晚)
(就2 / 就-01, beneficiary, 我2 / 我)
(白 / 白天, part, 时 / 时间)
(睡 / 睡觉-01, manner, 就 / 就-01)

Decoded in 26,718 microseconds
Sentence: “ 那么 ， 后来 命令 改变 了 ， 是 吗 ？ ”

Spans:
Span 3-4:  后来 => 后来-01
Span 4-5:  命令 => 命令-01
Span 5-6:  改变 => 改变-01
Span 8-9:  是 => 是-04
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  命令 => 命令
Oracle Span 5-6:  改变 => 改变-01

Extra span: 是 => 是-04
Incorrect span: 命令 => 命令-01
Extra span: 后来 => 后来-01
Extra span: 那么 => 那么
Missing span: 命令 => 命令
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	那么	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	后来	_	AD	AD	_	5	advmod	_	_
5	命令	_	VV	VV	_	0	root	_	_
6	改变	_	VV	VV	_	5	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	是	_	VC	VC	_	5	dep	_	_
10	吗	_	SP	SP	_	5	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 改变-01, arg1, x9 / 命令)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),是,是-04,false), Span(5,6,List(1),改变,改变-01,false), Span(4,5,List(2),命令,命令-01,false), Span(3,4,List(3),后来,后来-01,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 命令-01, 1 -> 改变-01, 4 -> 那么, 0 -> 是-04, 3 -> 后来-01),Map(改 -> 改变-01, 命 -> 命令-01, 后 -> 后来-01, 那 -> 那么, 是 -> 是-04))),[Ljava.lang.String;@985696,Annotation([Ljava.lang.String;@5bcde458,[Ljava.lang.String;@215a34b4,[Ljava.lang.String;@77bd7fe7),Annotation([Ljava.lang.String;@35d3ab60,[Ljava.lang.String;@10876a6,[Ledu.cmu.lti.nlp.amr.Dependency;@71870da7),Annotation([Ljava.lang.String;@6dd91637,[Ljava.lang.String;@45792847,[Ljava.lang.String;@706cb08),Annotation([Ljava.lang.String;@4e25147a,[Ljava.lang.String;@6b68cb27,[Ledu.cmu.lti.nlp.amr.Entity;@675ffd1d))
AMR:
(后 / 后来-01, degree, 那 / 那么)
(命 / 命令-01, degree, 后 / 后来-01)
(改 / 改变-01, degree, 命 / 命令-01)
(改 / 改变-01, purpose, 是 / 是-04)

Decoded in 8,722 microseconds
Sentence: 点灯 的 人 说 ： “ 命令 没有 改 ，

Spans:
Span 2-3:  人 => 人
Span 6-7:  命令 => 命令-01
Span 8-9:  改 => 改-01
Span 0-1:  点灯 => 点灯-01
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 6-7:  命令 => 命令
Oracle Span 8-9:  改 => 改-01
Oracle Span 0-1:  点灯 => 点灯-01
Oracle Span 3-4:  说 => 说-01

Incorrect span: 命令 => 命令-01
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 命令 => 命令
Dependencies:
1	点灯	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	命令	_	NN	NN	_	8	nsubj	_	_
8	没有	_	VV	VV	_	4	ccomp	_	_
9	改	_	AD	AD	_	8	advmod	_	_
10	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 人)
(x0 / 说-01, arg1, x7 / 改-01)
(x3 / 点灯-01, arg0, x2 / 人)
(x7 / 改-01, arg1, x8 / 命令)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),改,改-01,false), Span(6,7,List(1),命令,命令-01,false), Span(3,4,List(2),说,说-02,false), Span(2,3,List(3),人,人,false), Span(0,1,List(4),点灯,点灯-01,false)),Map(2 -> 说-02, 1 -> 命令-01, 4 -> 点灯-01, 0 -> 改-01, 3 -> 人),Map(改 -> 改-01, 命 -> 命令-01, 点 -> 点灯-01, 说 -> 说-02, 人 -> 人))),[Ljava.lang.String;@56303475,Annotation([Ljava.lang.String;@30506c0d,[Ljava.lang.String;@1dcca8d3,[Ljava.lang.String;@5631962),Annotation([Ljava.lang.String;@52a70627,[Ljava.lang.String;@6124287a,[Ledu.cmu.lti.nlp.amr.Dependency;@19569ebd),Annotation([Ljava.lang.String;@4632cfc,[Ljava.lang.String;@6e1f8469,[Ljava.lang.String;@2e380628),Annotation([Ljava.lang.String;@3b6c624,[Ljava.lang.String;@1eaf1e62,[Ledu.cmu.lti.nlp.amr.Entity;@c81fd12))
AMR:
(命 / 命令-01, destination, 改 / 改-01)
(说 / 说-02, manner, 点 / 点灯-01)
(说 / 说-02, prep-against, 命 / 命令-01)
(说 / 说-02, subset, 人 / 人)

Decoded in 8,795 microseconds
Sentence: 惨 就 惨 在 这里 了 ！

Spans:
Span 3-4:  在 => 在-01
Span 1-2:  就 => 就-01
Span 2-3:  惨 => 惨-01
Span 0-1:  惨 => 惨-01
Span 4-5:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 0-1:  惨 => 惨-01
Oracle Span 4-5:  这里 => 这里

Extra span: 在 => 在-01
Extra span: 惨 => 惨-01
Extra span: 就 => 就-01
Dependencies:
1	惨	_	AD	AD	_	3	advmod	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	惨	_	VA	VA	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这里	_	PN	PN	_	4	pobj	_	_
6	了	_	SP	SP	_	3	dep	_	_
7	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 惨-01, cause, x2 / 这里)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),这里,这里,false), Span(3,4,List(1),在,在-01,false), Span(2,3,List(2),惨,惨-01,false), Span(1,2,List(3),就,就-01,false), Span(0,1,List(4),惨,惨-01,false)),Map(2 -> 惨-01, 1 -> 在-01, 4 -> 惨-01, 0 -> 这里, 3 -> 就-01),Map(惨2 -> 惨-01, 就 -> 就-01, 在 -> 在-01, 这 -> 这里, 惨 -> 惨-01))),[Ljava.lang.String;@62e6a3ec,Annotation([Ljava.lang.String;@5754de72,[Ljava.lang.String;@31ee96f4,[Ljava.lang.String;@320494b6),Annotation([Ljava.lang.String;@652ab8d9,[Ljava.lang.String;@14fc5d40,[Ledu.cmu.lti.nlp.amr.Dependency;@51e0301d),Annotation([Ljava.lang.String;@47d7bfb3,[Ljava.lang.String;@770b3be0,[Ljava.lang.String;@1eb6e1c),Annotation([Ljava.lang.String;@51dbd6e4,[Ljava.lang.String;@2b8bd14b,[Ledu.cmu.lti.nlp.amr.Entity;@5f13be1))
AMR:
(在 / 在-01, ARG5, 这 / 这里)
(在 / 在-01, manner, 惨 / 惨-01)
(惨 / 惨-01, manner, 就 / 就-01)
(惨2 / 惨-01, manner, 就 / 就-01)

Decoded in 7,697 microseconds
Sentence: 这 颗 行星 一 年 比 一 年 转 得 更 快 ， 而 命令 却 没有 改 。 ”

Spans:
Span 14-15:  命令 => 命令-01
Span 7-8:  年 => 年
Span 4-5:  年 => 年
Span 9-10:  得 => 得-06
Span 11-12:  快 => 快
Span 17-18:  改 => 改-01
Span 10-11:  更 => 更-01
Span 2-3:  行星 => 行星
Span 8-9:  转 => 转-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  命令 => 命令
Oracle Span 4-5:  年 => (temporal-quantity :unit 年)
Oracle Span 11-12:  快 => 快-01
Oracle Span 17-18:  改 => 改-01
Oracle Span 10-11:  更 => 更
Oracle Span 2-3:  行星 => 行星
Oracle Span 8-9:  转 => 转-04
Oracle Span 0-1:  这 => 这

Incorrect span: 命令 => 命令-01
Incorrect span: 快 => 快
Incorrect span: 更 => 更-01
Extra span: 得 => 得-06
Extra span: 年 => 年
Incorrect span: 年 => 年
Missing span: 年 => (temporal-quantity :unit 年)
Missing span: 快 => 快-01
Missing span: 更 => 更
Missing span: 命令 => 命令
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	颗	_	M	M	_	1	clf	_	_
3	行星	_	NN	NN	_	12	nsubj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	年	_	M	M	_	12	dep	_	_
6	比	_	P	P	_	12	prep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	年	_	M	M	_	6	pobj	_	_
9	转	_	VV	VV	_	12	dep	_	_
10	得	_	DER	DER	_	12	dep	_	_
11	更	_	AD	AD	_	12	advmod	_	_
12	快	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	而	_	AD	AD	_	17	advmod	_	_
15	命令	_	NN	NN	_	17	nsubj	_	_
16	却	_	AD	AD	_	17	advmod	_	_
17	没有	_	VV	VV	_	12	conj	_	_
18	改	_	AD	AD	_	17	advmod	_	_
19	。	_	PU	PU	_	12	punct	_	_
20	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x22 / 转-04, arg0, x24 / 行星)
(x22 / 转-04, frequency, x28 / temporal-quantity)
(x22 / 转-04, manner, x23 / 快-01)
(x23 / 快-01, degree, x26 / 更)
(x24 / 行星, mod, x25 / 这)
(x28 / temporal-quantity, unit, x34 / 年)
(x31 / 改-01, arg1, x32 / 命令)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),改,改-01,false), Span(14,15,List(1),命令,命令-01,false), Span(11,12,List(2),快,快,false), Span(10,11,List(3),更,更-01,false), Span(9,10,List(4),得,得-06,false), Span(8,9,List(5),转,转-04,false), Span(7,8,List(6),年,年,false), Span(4,5,List(7),年,年,false), Span(2,3,List(8),行星,行星,false), Span(0,1,List(9),这,这,false)),Map(2 -> 快, 5 -> 转-04, 8 -> 行星, 7 -> 年, 1 -> 命令-01, 4 -> 得-06, 6 -> 年, 9 -> 这, 0 -> 改-01, 3 -> 更-01),Map(改 -> 改-01, 快 -> 快, 这 -> 这, 得 -> 得-06, 命 -> 命令-01, 年 -> 年, 年2 -> 年, 行 -> 行星, 转 -> 转-04, 更 -> 更-01))),[Ljava.lang.String;@5f303ecd,Annotation([Ljava.lang.String;@50d3bf39,[Ljava.lang.String;@25a73de1,[Ljava.lang.String;@29852487),Annotation([Ljava.lang.String;@771db12c,[Ljava.lang.String;@3afae281,[Ledu.cmu.lti.nlp.amr.Dependency;@26ae880a),Annotation([Ljava.lang.String;@260f2144,[Ljava.lang.String;@3c017078,[Ljava.lang.String;@51827393),Annotation([Ljava.lang.String;@3be4f71,[Ljava.lang.String;@5c645b43,[Ledu.cmu.lti.nlp.amr.Entity;@6bd16207))
AMR:
(命 / 命令-01, degree, 快 / 快)
(命 / 命令-01, snt2, 改 / 改-01)
(得 / 得-06, direction, 更 / 更-01)
(快 / 快, degree, 更 / 更-01)
(行 / 行星, mod, 年2 / 年)
(行 / 行星, mod, 这 / 这)
(转 / 转-04, manner, 年 / 年)
(转 / 转-04, manner, 年2 / 年)
(转 / 转-04, manner, 得 / 得-06)

Decoded in 32,458 microseconds
Sentence: “ 结果 呢 ？ ” 小 王子 问 。

Spans:
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 1-2:  结果 => 结果-01
Span 7-8:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 1-2:  结果 => 结果-01
Oracle Span 7-8:  问 => 问-01

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	结果	_	NN	NN	_	3	nn	_	_
3	呢	_	NN	NN	_	4	nn	_	_
4	？	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	问	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 王子)
(x0 / 问-01, arg1, x4 / 结果-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),问,问-01,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(1,2,List(3),结果,结果-01,false)),Map(2 -> 小, 1 -> 王子, 0 -> 问-01, 3 -> 结果-01),Map(王 -> 王子, 结 -> 结果-01, 小 -> 小, 问 -> 问-01))),[Ljava.lang.String;@298d9a05,Annotation([Ljava.lang.String;@58399d82,[Ljava.lang.String;@26f96b85,[Ljava.lang.String;@46d8f407),Annotation([Ljava.lang.String;@3c0036b,[Ljava.lang.String;@17814b1c,[Ledu.cmu.lti.nlp.amr.Dependency;@7ac9af2a),Annotation([Ljava.lang.String;@7bb004b8,[Ljava.lang.String;@78e89bfe,[Ljava.lang.String;@652ce654),Annotation([Ljava.lang.String;@522ba524,[Ljava.lang.String;@29c5ee1d,[Ledu.cmu.lti.nlp.amr.Entity;@15cea7b0))
AMR:
(王 / 王子, mod, 小 / 小)
(问 / 问-01, ARG1, 王 / 王子)
(问 / 问-01, degree, 结 / 结果-01)

Decoded in 6,618 microseconds
Sentence: “ 结果 现在 每 分钟 转 一 圈 ， 我 连 一 秒钟 的 休息 时间 都 没有 了 。

Spans:
Span 14-15:  休息 => 休息-01
Span 4-5:  分钟 => 分钟
Span 7-8:  圈 => 圈
Span 9-10:  我 => 我
Span 15-16:  时间 => 时间
Span 3-4:  每 => 每
Span 2-3:  现在 => 现在
Span 1-2:  结果 => 结果-01
Span 5-6:  转 => 转-04
Span 16-17:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 14-15:  休息 => 休息-01
Oracle Span 4-5:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 9-10:  我 => 我
Oracle Span 15-16:  时间 => 时间
Oracle Span 5-6:  转 => 转-04

Extra span: 都 => 都
Extra span: 圈 => 圈
Incorrect span: 分钟 => 分钟
Extra span: 每 => 每
Extra span: 现在 => 现在
Extra span: 结果 => 结果-01
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	结果	_	AD	AD	_	6	advmod	_	_
3	现在	_	NT	NT	_	6	tmod	_	_
4	每	_	DT	DT	_	6	dep	_	_
5	分钟	_	M	M	_	4	clf	_	_
6	转	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	圈	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_
10	我	_	PN	PN	_	18	nsubj	_	_
11	连	_	AD	AD	_	13	advmod	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	秒钟	_	M	M	_	16	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	休息	_	NN	NN	_	16	nn	_	_
16	时间	_	NN	NN	_	18	nsubj	_	_
17	都	_	AD	AD	_	18	advmod	_	_
18	没有	_	VV	VV	_	6	conj	_	_
19	了	_	AS	AS	_	18	asp	_	_
20	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x17 / 转-04, frequency, x19 / temporal-quantity)
(x19 / temporal-quantity, unit, x31 / 分钟)
(x25 / 时间, mod, x26 / 休息-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),都,都,false), Span(15,16,List(1),时间,时间,false), Span(14,15,List(2),休息,休息-01,false), Span(9,10,List(3),我,我,false), Span(7,8,List(4),圈,圈,false), Span(5,6,List(5),转,转-04,false), Span(4,5,List(6),分钟,分钟,false), Span(3,4,List(7),每,每,false), Span(2,3,List(8),现在,现在,false), Span(1,2,List(9),结果,结果-01,false)),Map(2 -> 休息-01, 5 -> 转-04, 8 -> 现在, 7 -> 每, 1 -> 时间, 4 -> 圈, 6 -> 分钟, 9 -> 结果-01, 0 -> 都, 3 -> 我),Map(我 -> 我, 每 -> 每, 结 -> 结果-01, 分 -> 分钟, 休 -> 休息-01, 都 -> 都, 转 -> 转-04, 圈 -> 圈, 时 -> 时间, 现 -> 现在))),[Ljava.lang.String;@17d2ed1b,Annotation([Ljava.lang.String;@185f7840,[Ljava.lang.String;@1e6cc850,[Ljava.lang.String;@7e7f0f0a),Annotation([Ljava.lang.String;@7ec58feb,[Ljava.lang.String;@1dbb650b,[Ledu.cmu.lti.nlp.amr.Dependency;@656d10a4),Annotation([Ljava.lang.String;@63ec445c,[Ljava.lang.String;@3104351d,[Ljava.lang.String;@77d18d0b),Annotation([Ljava.lang.String;@7a344b65,[Ljava.lang.String;@7b7b3edb,[Ledu.cmu.lti.nlp.amr.Entity;@6b474074))
AMR:
(分 / 分钟, mod, 每 / 每)
(我 / 我, unit, 圈 / 圈)
(时 / 时间, mod, 休 / 休息-01)
(时 / 时间, mod, 都 / 都)
(时 / 时间, unit, 圈 / 圈)
(每 / 每, mod, 结 / 结果-01)
(现 / 现在, degree, 结 / 结果-01)
(转 / 转-04, manner, 分 / 分钟)
(转 / 转-04, unit, 圈 / 圈)

Decoded in 31,409 microseconds
Sentence: 每 分钟 我 就 要 点 一 次 灯 ， 熄 一 次 灯 ！ ”

Spans:
Span 1-2:  分钟 => 分钟
Span 3-4:  就 => 就-01
Span 2-3:  我 => 我
Span 0-1:  每 => 每
Span 13-14:  灯 => 灯
Span 8-9:  灯 => 灯
Span 5-6:  点 => 点
Span 10-11:  熄 => 熄-01
Span 4-5:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 8-9:  灯 => 灯
Oracle Span 5-6:  点 => 点-01
Oracle Span 10-11:  熄 => 熄-01
Oracle Span 4-5:  要 => 要-03

Extra span: 灯 => 灯
Incorrect span: 点 => 点
Incorrect span: 要 => 要-02
Incorrect span: 就 => 就-01
Incorrect span: 分钟 => 分钟
Extra span: 每 => 每
Missing span: 要 => 要-03
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Missing span: 点 => 点-01
Missing span: 就 => 就
Dependencies:
1	每	_	DT	DT	_	5	dep	_	_
2	分钟	_	M	M	_	1	clf	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	9	dep	_	_
6	点	_	NN	NN	_	5	dobj	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	次	_	M	M	_	5	range	_	_
9	灯	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	熄	_	VV	VV	_	9	ccomp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	次	_	M	M	_	14	clf	_	_
14	灯	_	NN	NN	_	11	dobj	_	_
15	！	_	PU	PU	_	9	punct	_	_
16	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x19 / 要-03, manner, x20 / 就)
(x22 / 点-01, arg0, x23 / 我)
(x22 / 点-01, arg1, x24 / 灯)
(x29 / temporal-quantity, unit, x33 / 分钟)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),灯,灯,false), Span(10,11,List(1),熄,熄-01,false), Span(8,9,List(2),灯,灯,false), Span(5,6,List(3),点,点,false), Span(4,5,List(4),要,要-02,false), Span(3,4,List(5),就,就-01,false), Span(2,3,List(6),我,我,false), Span(1,2,List(7),分钟,分钟,false), Span(0,1,List(8),每,每,false)),Map(2 -> 灯, 5 -> 就-01, 8 -> 每, 7 -> 分钟, 1 -> 熄-01, 4 -> 要-02, 6 -> 我, 0 -> 灯, 3 -> 点),Map(灯2 -> 灯, 就 -> 就-01, 我 -> 我, 要 -> 要-02, 每 -> 每, 灯 -> 灯, 分 -> 分钟, 点 -> 点, 熄 -> 熄-01))),[Ljava.lang.String;@108531c2,Annotation([Ljava.lang.String;@48b22fd4,[Ljava.lang.String;@6a9d5dff,[Ljava.lang.String;@3b08f438),Annotation([Ljava.lang.String;@2bac9ba,[Ljava.lang.String;@5b2f8ab6,[Ledu.cmu.lti.nlp.amr.Dependency;@5bdd5689),Annotation([Ljava.lang.String;@2788d0fe,[Ljava.lang.String;@73ab3aac,[Ljava.lang.String;@54f66455),Annotation([Ljava.lang.String;@65ae095c,[Ljava.lang.String;@4c03a37,[Ledu.cmu.lti.nlp.amr.Entity;@2e140e59))
AMR:
(分 / 分钟, manner, 就 / 就-01)
(分 / 分钟, mod, 每 / 每)
(分 / 分钟, weekday, 我 / 我)
(灯2 / 灯, manner, 熄 / 熄-01)
(熄 / 熄-01, value, 灯 / 灯)
(要 / 要-02, manner, 就 / 就-01)
(要 / 要-02, manner, 灯2 / 灯)
(要 / 要-02, manner, 点 / 点)

Decoded in 23,990 microseconds
Sentence: “ 真 有趣 ，

Spans:
Span 2-3:  有趣 => 有趣-01
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  有趣 => 有趣-01
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	真	_	NN	NN	_	0	root	_	_
3	有趣	_	NN	NN	_	2	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 有趣-01, degree, x6 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),有趣,有趣-01,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 有趣-01),Map(真 -> 真, 有 -> 有趣-01))),[Ljava.lang.String;@49a71302,Annotation([Ljava.lang.String;@5cd61783,[Ljava.lang.String;@59429fac,[Ljava.lang.String;@57aa341b),Annotation([Ljava.lang.String;@26e412ef,[Ljava.lang.String;@4ae263bf,[Ledu.cmu.lti.nlp.amr.Dependency;@7103ab0),Annotation([Ljava.lang.String;@19ccca5,[Ljava.lang.String;@769d513,[Ljava.lang.String;@5e4fa1da),Annotation([Ljava.lang.String;@588cd519,[Ljava.lang.String;@3f92c349,[Ledu.cmu.lti.nlp.amr.Entity;@769a58e5))
AMR:
(有 / 有趣-01, degree, 真 / 真)

Decoded in 2,576 microseconds
Sentence: 你 这里 每天 只 有 一 分钟 长 ？ ”

Spans:
Span 0-1:  你 => 你
Span 6-7:  分钟 => 分钟
Span 3-4:  只 => 只
Span 4-5:  有 => 有-06
Span 1-2:  这里 => 这里
Span 7-8:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 1-2:  这里 => 这里
Oracle Span 7-8:  长 => 长-02

Incorrect span: 长 => 长-04
Incorrect span: 分钟 => 分钟
Extra span: 有 => 有-06
Extra span: 只 => 只
Missing span: 长 => 长-02
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	这里	_	PN	PN	_	3	nsubj	_	_
3	每天	_	VV	VV	_	0	root	_	_
4	只	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	3	ccomp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	5	dep	_	_
8	长	_	VA	VA	_	3	dep	_	_
9	？	_	PU	PU	_	3	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	这里	_	PN	PN	_	5	xsubj	_	_
12	你	_	PN	PN	_	5	xsubj	_	_

Oracle:
(x14 / 长-02, arg1, x23 / temporal-quantity)
(x14 / 长-02, location, x26 / 这里)
(x23 / temporal-quantity, unit, x30 / 分钟)
(x26 / 这里, poss, x27 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),长,长-04,false), Span(6,7,List(1),分钟,分钟,false), Span(4,5,List(2),有,有-06,false), Span(3,4,List(3),只,只,false), Span(1,2,List(4),这里,这里,false), Span(0,1,List(5),你,你,false)),Map(2 -> 有-06, 5 -> 你, 1 -> 分钟, 4 -> 这里, 0 -> 长-04, 3 -> 只),Map(这 -> 这里, 你 -> 你, 只 -> 只, 分 -> 分钟, 长 -> 长-04, 有 -> 有-06))),[Ljava.lang.String;@55f8669d,Annotation([Ljava.lang.String;@6be25526,[Ljava.lang.String;@42435b98,[Ljava.lang.String;@66ba7e45),Annotation([Ljava.lang.String;@70e02081,[Ljava.lang.String;@9d200de,[Ledu.cmu.lti.nlp.amr.Dependency;@511505e7),Annotation([Ljava.lang.String;@646811d6,[Ljava.lang.String;@15fdd1f2,[Ljava.lang.String;@cb0f763),Annotation([Ljava.lang.String;@7573e12f,[Ljava.lang.String;@51b1a8f6,[Ledu.cmu.lti.nlp.amr.Entity;@2a389173))
AMR:
(分 / 分钟, accompanier, 长 / 长-04)
(有 / 有-06, accompanier, 长 / 长-04)
(有 / 有-06, location, 这 / 这里)
(有 / 有-06, manner, 只 / 只)
(这 / 这里, poss, 你 / 你)

Decoded in 11,468 microseconds
Sentence: “ 一点 趣味 也 没有 ， ” 点灯 的 说 ，

Spans:
Span 1-2:  一点 => 一点
Span 3-4:  也 => 也
Span 7-8:  点灯 => 点灯-01
Span 9-10:  说 => 说-02
Span 2-3:  趣味 => 趣味

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一点 => 一点
Oracle Span 3-4:  也 => 也
Oracle Span 7-8:  点灯 => (person :arg0-of 点灯-01)
Oracle Span 9-10:  说 => 说-01
Oracle Span 2-3:  趣味 => 趣味

Incorrect span: 说 => 说-02
Incorrect span: 点灯 => 点灯-01
Missing span: 说 => 说-01
Missing span: 点灯 => (person :arg0-of 点灯-01)
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	一点	_	CD	CD	_	3	nummod	_	_
3	趣味	_	NN	NN	_	5	nsubj	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	点灯	_	VA	VA	_	10	dvpmod	_	_
9	的	_	DEC	DEC	_	8	dep	_	_
10	说	_	VV	VV	_	5	conj	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x11 / 说-01, arg0, x13 / person)
(x14 / 点灯-01, arg0, x13 / person)
(x17 / 趣味, quant, x18 / 一点)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(7,8,List(1),点灯,点灯-01,false), Span(3,4,List(2),也,也,false), Span(2,3,List(3),趣味,趣味,false), Span(1,2,List(4),一点,一点,false)),Map(2 -> 也, 1 -> 点灯-01, 4 -> 一点, 0 -> 说-02, 3 -> 趣味),Map(也 -> 也, 趣 -> 趣味, 点 -> 点灯-01, 说 -> 说-02, 一 -> 一点))),[Ljava.lang.String;@213860b8,Annotation([Ljava.lang.String;@4ba89729,[Ljava.lang.String;@178270b2,[Ljava.lang.String;@795fd838),Annotation([Ljava.lang.String;@1b005a0b,[Ljava.lang.String;@141e879d,[Ledu.cmu.lti.nlp.amr.Dependency;@109d724c),Annotation([Ljava.lang.String;@1704f67f,[Ljava.lang.String;@e4d2696,[Ljava.lang.String;@6e0f7aad),Annotation([Ljava.lang.String;@15fb7a32,[Ljava.lang.String;@257cc1fc,[Ledu.cmu.lti.nlp.amr.Entity;@42e22a53))
AMR:
(点 / 点灯-01, degree, 趣 / 趣味)
(点 / 点灯-01, purpose, 说 / 说-02)
(趣 / 趣味, degree, 一 / 一点)
(趣 / 趣味, manner, 也 / 也)

Decoded in 9,080 microseconds
Sentence: “ 我们 俩 在 一块 说话 就 已经 有 一 个 月 的 时间 了 。 ”

Spans:
Span 4-5:  一块 => 一块
Span 3-4:  在 => 在-01
Span 6-7:  就 => 就-01
Span 7-8:  已经 => 已经
Span 1-2:  我们 => 我们
Span 13-14:  时间 => 时间
Span 11-12:  月 => (temporal-quantity :unit 月)
Span 8-9:  有 => 有-06
Span 5-6:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一块 => 一块
Oracle Span 1-2:  我们 => 我们
Oracle Span 11-12:  月 => (temporal-quantity :unit 月)
Oracle Span 5-6:  说话 => 说话-01

Extra span: 时间 => 时间
Extra span: 有 => 有-06
Extra span: 已经 => 已经
Extra span: 就 => 就-01
Extra span: 在 => 在-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我们	_	PN	PN	_	6	nsubj	_	_
3	俩	_	AD	AD	_	6	advmod	_	_
4	在	_	P	P	_	6	prep	_	_
5	一块	_	CD	CD	_	4	pobj	_	_
6	说话	_	VV	VV	_	0	root	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	已经	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	14	rcmod	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	12	clf	_	_
12	月	_	NN	NN	_	9	dobj	_	_
13	的	_	DEC	DEC	_	9	cpm	_	_
14	时间	_	NN	NN	_	6	dobj	_	_
15	了	_	AS	AS	_	6	dep	_	_
16	。	_	PU	PU	_	6	punct	_	_
17	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 说话-01, arg0, x13 / 我们)
(x12 / 说话-01, duration, x16 / temporal-quantity)
(x12 / 说话-01, manner, x15 / 一块)
(x16 / temporal-quantity, unit, x19 / 月)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),时间,时间,false), Span(11,12,List(2, 1),月,(temporal-quantity :unit 月),false), Span(8,9,List(3),有,有-06,false), Span(7,8,List(4),已经,已经,false), Span(6,7,List(5),就,就-01,false), Span(5,6,List(6),说话,说话-01,false), Span(4,5,List(7),一块,一块,false), Span(3,4,List(8),在,在-01,false), Span(1,2,List(9),我们,我们,false)),Map(2 -> 月, 5 -> 就-01, 8 -> 在-01, 7 -> 一块, 1 -> temporal-quantity, 4 -> 已经, 6 -> 说话-01, 9 -> 我们, 0 -> 时间, 3 -> 有-06),Map(就 -> 就-01, 已 -> 已经, 在 -> 在-01, t -> temporal-quantity, 我 -> 我们, 月 -> 月, 说 -> 说话-01, 时 -> 时间, 一 -> 一块, 有 -> 有-06))),[Ljava.lang.String;@57adfab0,Annotation([Ljava.lang.String;@1949309d,[Ljava.lang.String;@5af97169,[Ljava.lang.String;@99a78d7),Annotation([Ljava.lang.String;@31da6b2e,[Ljava.lang.String;@61c76850,[Ledu.cmu.lti.nlp.amr.Dependency;@70242f38),Annotation([Ljava.lang.String;@2a22ad2b,[Ljava.lang.String;@48c3205a,[Ljava.lang.String;@121c54fa),Annotation([Ljava.lang.String;@4390f46e,[Ljava.lang.String;@7c6442c2,[Ledu.cmu.lti.nlp.amr.Entity;@2d746ce4))
AMR:
(t / temporal-quantity, unit, 月 / 月)
(在 / 在-01, location, 一 / 一块)
(在 / 在-01, time, 我 / 我们)
(就 / 就-01, degree, 说 / 说话-01)
(就 / 就-01, time, 已 / 已经)
(时 / 时间, mod, 月 / 月)
(有 / 有-06, duration, t / temporal-quantity)
(有 / 有-06, time, 已 / 已经)
(说 / 说话-01, manner, 一 / 一块)

Decoded in 28,784 microseconds
Sentence: “ 一 个 月 ？ ”

Spans:
Span 3-4:  月 => (temporal-quantity :unit 月)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  月 => (temporal-quantity :unit 月)

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	个	_	M	M	_	4	clf	_	_
4	月	_	NN	NN	_	0	root	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / temporal-quantity, unit, x10 / 月)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(1, 0),月,(temporal-quantity :unit 月),false)),Map(1 -> 月, 0 -> temporal-quantity),Map(t -> temporal-quantity, 月 -> 月))),[Ljava.lang.String;@5dbf5634,Annotation([Ljava.lang.String;@1948ea69,[Ljava.lang.String;@47e4d9d0,[Ljava.lang.String;@49798e84),Annotation([Ljava.lang.String;@6ed06f69,[Ljava.lang.String;@3015db78,[Ledu.cmu.lti.nlp.amr.Dependency;@515ebef3),Annotation([Ljava.lang.String;@545607f2,[Ljava.lang.String;@39109136,[Ljava.lang.String;@27c04377),Annotation([Ljava.lang.String;@34dc85a,[Ljava.lang.String;@67403656,[Ledu.cmu.lti.nlp.amr.Entity;@5a6482a9))
AMR:
(t / temporal-quantity, unit, 月 / 月)

Decoded in 3,199 microseconds
Sentence: “ 对 。

Spans:
Span 1-2:  对 => 对-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  对 => 对-02

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	对	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),对,对-02,false)),Map(0 -> 对-02),Map(对 -> 对-02))),[Ljava.lang.String;@7f9ab969,Annotation([Ljava.lang.String;@12f8b1d8,[Ljava.lang.String;@746cd757,[Ljava.lang.String;@ae372b9),Annotation([Ljava.lang.String;@2098d37d,[Ljava.lang.String;@77b9d0c7,[Ledu.cmu.lti.nlp.amr.Dependency;@65fd6708),Annotation([Ljava.lang.String;@749ab7b4,[Ljava.lang.String;@127f9161,[Ljava.lang.String;@2bf94401),Annotation([Ljava.lang.String;@2532b351,[Ljava.lang.String;@4349754,[Ledu.cmu.lti.nlp.amr.Entity;@6a2eea2a))
AMR:


Decoded in 1,415 microseconds
Sentence: 三十 分钟 。

Spans:
Span 1-2:  分钟 => 分钟

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  分钟 => (temporal-quantity :unit 分钟)

Incorrect span: 分钟 => 分钟
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Dependencies:
1	三十	_	CD	CD	_	2	nummod	_	_
2	分钟	_	M	M	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / temporal-quantity, unit, x7 / 分钟)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),分钟,分钟,false)),Map(0 -> 分钟),Map(分 -> 分钟))),[Ljava.lang.String;@b967222,Annotation([Ljava.lang.String;@3b0ee03a,[Ljava.lang.String;@1ba05e38,[Ljava.lang.String;@6c298dc),Annotation([Ljava.lang.String;@3e7dfd44,[Ljava.lang.String;@723ed581,[Ledu.cmu.lti.nlp.amr.Dependency;@6b760460),Annotation([Ljava.lang.String;@796065aa,[Ljava.lang.String;@28a6301f,[Ljava.lang.String;@2c306a57),Annotation([Ljava.lang.String;@773e2eb5,[Ljava.lang.String;@d8948cd,[Ledu.cmu.lti.nlp.amr.Entity;@1436a7ab))
AMR:


Decoded in 2,796 microseconds
Sentence: 三十 天 ！

Spans:
Span 1-2:  天 => (temporal-quantity :unit 天)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  天 => (temporal-quantity :unit 天)

Dependencies:
1	三十	_	CD	CD	_	2	nummod	_	_
2	天	_	M	M	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / temporal-quantity, unit, x11 / 天)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(1, 0),天,(temporal-quantity :unit 天),false)),Map(1 -> 天, 0 -> temporal-quantity),Map(t -> temporal-quantity, 天 -> 天))),[Ljava.lang.String;@3b7b05a8,Annotation([Ljava.lang.String;@3d36dff4,[Ljava.lang.String;@7abe27bf,[Ljava.lang.String;@5b94ccbc),Annotation([Ljava.lang.String;@38a1c423,[Ljava.lang.String;@336365bc,[Ledu.cmu.lti.nlp.amr.Dependency;@38eb2fb0),Annotation([Ljava.lang.String;@4567e53d,[Ljava.lang.String;@7351a16e,[Ljava.lang.String;@5bb7643d),Annotation([Ljava.lang.String;@3ac04654,[Ljava.lang.String;@4074023c,[Ledu.cmu.lti.nlp.amr.Entity;@3ed0918d))
AMR:
(t / temporal-quantity, unit, 天 / 天)

Decoded in 2,966 microseconds
Sentence: —— 晚上 好 。 ”

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  晚上 => 晚上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  晚上 => 晚上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	——	_	PU	PU	_	3	dep	_	_
2	晚上	_	NT	NT	_	3	tmod	_	_
3	好	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 晚上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),晚上,晚上,false)),Map(1 -> 晚上, 0 -> 好-04),Map(晚 -> 晚上, 好 -> 好-04))),[Ljava.lang.String;@5e268ce6,Annotation([Ljava.lang.String;@66ec9390,[Ljava.lang.String;@6e91893,[Ljava.lang.String;@3c0fbd3a),Annotation([Ljava.lang.String;@562457e1,[Ljava.lang.String;@54562ea6,[Ledu.cmu.lti.nlp.amr.Dependency;@1a35993f),Annotation([Ljava.lang.String;@5b12012e,[Ljava.lang.String;@2f7dcef2,[Ljava.lang.String;@4a3be6a5),Annotation([Ljava.lang.String;@7cf162bc,[Ljava.lang.String;@3721177d,[Ledu.cmu.lti.nlp.amr.Entity;@766a4535))
AMR:
(好 / 好-04, time, 晚 / 晚上)

Decoded in 3,175 microseconds
Sentence: 于是 他 又 点着 了 他 的 路灯 。

Spans:
Span 5-6:  他 => 他
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  点着 => 点着-01
Span 7-8:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  点着 => 点着-01
Oracle Span 7-8:  路灯 => 路灯

Extra span: 他 => 他
Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	点着	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	路灯	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 点着-01, arg0, x4 / 他)
(x2 / 点着-01, arg1, x5 / 路灯)
(x2 / 点着-01, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),路灯,路灯,false), Span(5,6,List(1),他,他,false), Span(3,4,List(2),点着,点着-01,false), Span(2,3,List(3),又,又,false), Span(1,2,List(4),他,他,false)),Map(2 -> 点着-01, 1 -> 他, 4 -> 他, 0 -> 路灯, 3 -> 又),Map(他2 -> 他, 又 -> 又, 路 -> 路灯, 他 -> 他, 点 -> 点着-01))),[Ljava.lang.String;@63718b93,Annotation([Ljava.lang.String;@14e2e1c3,[Ljava.lang.String;@2b4786dd,[Ljava.lang.String;@f202d6d),Annotation([Ljava.lang.String;@60e21209,[Ljava.lang.String;@630d1b2f,[Ledu.cmu.lti.nlp.amr.Dependency;@746b18fd),Annotation([Ljava.lang.String;@7a2e0858,[Ljava.lang.String;@aac3f4e,[Ljava.lang.String;@1f38957),Annotation([Ljava.lang.String;@2df3c564,[Ljava.lang.String;@2715644a,[Ledu.cmu.lti.nlp.amr.Entity;@4c2869a9))
AMR:
(点 / 点着-01, ARG6, 他2 / 他)
(点 / 点着-01, manner, 又 / 又)
(点 / 点着-01, op, 路 / 路灯)
(路 / 路灯, poss, 他 / 他)

Decoded in 9,661 microseconds
Sentence: 小 王子 瞅 着 他 ， 他 喜欢 这 个 点灯人 如此 忠 守 命令 。

Spans:
Span 6-7:  他 => 他
Span 4-5:  他 => 他
Span 14-15:  命令 => 命令-01
Span 7-8:  喜欢 => 喜欢-01
Span 11-12:  如此 => 如此
Span 13-14:  守 => 守-01
Span 0-1:  小 => 小
Span 12-13:  忠 => 忠-01
Span 10-11:  点灯人 => 点灯人
Span 1-2:  王子 => 王子
Span 2-3:  瞅 => 瞅-01
Span 8-9:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  命令 => 命令
Oracle Span 7-8:  喜欢 => 喜欢-01
Oracle Span 11-12:  如此 => 如此
Oracle Span 13-14:  守 => 守-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  忠 => 忠-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  瞅 => 瞅-01

Incorrect span: 命令 => 命令-01
Extra span: 点灯人 => 点灯人
Extra span: 这 => 这
Extra span: 他 => 他
Extra span: 他 => 他
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 命令 => 命令
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	瞅	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	他	_	PN	PN	_	8	nsubj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	他	_	PN	PN	_	8	nsubj	_	_
8	喜欢	_	VV	VV	_	3	ccomp	_	_
9	这	_	DT	DT	_	11	det	_	_
10	个	_	M	M	_	9	clf	_	_
11	点灯人	_	NN	NN	_	13	nsubj	_	_
12	如此	_	AD	AD	_	13	advmod	_	_
13	忠	_	VV	VV	_	8	ccomp	_	_
14	守	_	VV	VV	_	13	rcomp	_	_
15	命令	_	NN	NN	_	13	dobj	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x18 / 守-01, arg1, x22 / 命令)
(x18 / 守-01, degree, x24 / 如此)
(x18 / 守-01, manner, x23 / 忠-01)
(x2 / 瞅-01, arg0, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x7 / 喜欢-01, arg1, x18 / 守-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),命令,命令-01,false), Span(13,14,List(1),守,守-01,false), Span(12,13,List(2),忠,忠-01,false), Span(11,12,List(3),如此,如此,false), Span(10,11,List(4),点灯人,点灯人,false), Span(8,9,List(5),这,这,false), Span(7,8,List(6),喜欢,喜欢-01,false), Span(6,7,List(7),他,他,false), Span(4,5,List(8),他,他,false), Span(2,3,List(9),瞅,瞅-01,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 忠-01, 5 -> 这, 8 -> 他, 7 -> 他, 1 -> 守-01, 11 -> 小, 4 -> 点灯人, 6 -> 喜欢-01, 9 -> 瞅-01, 0 -> 命令-01, 10 -> 王子, 3 -> 如此),Map(他2 -> 他, 这 -> 这, 王 -> 王子, 他 -> 他, 小 -> 小, 喜 -> 喜欢-01, 命 -> 命令-01, 点 -> 点灯人, 守 -> 守-01, 瞅 -> 瞅-01, 忠 -> 忠-01, 如 -> 如此))),[Ljava.lang.String;@518cf84a,Annotation([Ljava.lang.String;@62e7dffa,[Ljava.lang.String;@6edcd0d8,[Ljava.lang.String;@6136998b),Annotation([Ljava.lang.String;@57ce634f,[Ljava.lang.String;@b8a7e43,[Ledu.cmu.lti.nlp.amr.Dependency;@35835fa),Annotation([Ljava.lang.String;@56f71edb,[Ljava.lang.String;@7207cb51,[Ljava.lang.String;@2a27cb34),Annotation([Ljava.lang.String;@6892cc6f,[Ljava.lang.String;@6fd1660,[Ledu.cmu.lti.nlp.amr.Entity;@4a6c18ad))
AMR:
(喜 / 喜欢-01, ARG3, 守 / 守-01)
(喜 / 喜欢-01, ARG6, 点 / 点灯人)
(喜 / 喜欢-01, prep-for, 他 / 他)
(喜 / 喜欢-01, season, 他2 / 他)
(守 / 守-01, ARG4, 命 / 命令-01)
(守 / 守-01, degree, 如 / 如此)
(守 / 守-01, manner, 忠 / 忠-01)
(点 / 点灯人, mod, 这 / 这)
(王 / 王子, mod, 小 / 小)
(瞅 / 瞅-01, ARG3, 他2 / 他)
(瞅 / 瞅-01, direction, 王 / 王子)

Decoded in 42,657 microseconds
Sentence: 这时 ， 他 想起 了 他 自己 从前 挪动 椅子 寻找 日落 的 事 。 他 很 想 帮助 他 的 这 位 朋友 。

Spans:
Span 13-14:  事 => 事
Span 7-8:  从前 => 从前
Span 19-20:  他 => 他
Span 15-16:  他 => 他
Span 5-6:  他 => 他
Span 2-3:  他 => 他
Span 10-11:  寻找 => 寻找-01
Span 18-19:  帮助 => 帮助-01
Span 16-17:  很 => 很
Span 17-18:  想 => 想-05
Span 3-4:  想起 => 想起-01
Span 8-9:  挪动 => 挪动-01
Span 11-12:  日落 => 日落
Span 23-24:  朋友 => 朋友
Span 9-10:  椅子 => 椅子
Span 6-7:  自己 => 自己
Span 21-22:  这 => 这
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 13-14:  事 => 事
Oracle Span 7-8:  从前 => 从前
Oracle Span 2-3:  他 => 他
Oracle Span 5-6:  他 => 他
Oracle Span 10-11:  寻找 => 寻找-01
Oracle Span 18-19:  帮助 => 帮助-01
Oracle Span 16-17:  很 => 很
Oracle Span 17-18:  想 => 想-02
Oracle Span 3-4:  想起 => 想起-01
Oracle Span 8-9:  挪动 => 挪动-01
Oracle Span 11-12:  日落 => 日落
Oracle Span 23-24:  朋友 => 朋友
Oracle Span 9-10:  椅子 => 椅子
Oracle Span 21-22:  这 => 这

Extra span: 他 => 他
Incorrect span: 想 => 想-05
Extra span: 他 => 他
Extra span: 自己 => 自己
Extra span: 这时 => 这时
Missing span: 想 => 想-02
Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	想起	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	7	dep	_	_
7	自己	_	PN	PN	_	8	nsubj	_	_
8	从前	_	VV	VV	_	14	rcmod	_	_
9	挪动	_	NN	NN	_	10	nn	_	_
10	椅子	_	NN	NN	_	8	dobj	_	_
11	寻找	_	VV	VV	_	8	conj	_	_
12	日落	_	NN	NN	_	11	dobj	_	_
13	的	_	DEC	DEC	_	8	cpm	_	_
14	事	_	NN	NN	_	4	dobj	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	他	_	PN	PN	_	18	nsubj	_	_
17	很	_	AD	AD	_	18	advmod	_	_
18	想	_	VV	VV	_	4	conj	_	_
19	帮助	_	VV	VV	_	18	ccomp	_	_
20	他	_	PN	PN	_	24	assmod	_	_
21	的	_	DEG	DEG	_	20	assm	_	_
22	这	_	DT	DT	_	24	det	_	_
23	位	_	M	M	_	22	clf	_	_
24	朋友	_	NN	NN	_	19	dobj	_	_
25	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 想起-01, arg0, x14 / 他)
(x13 / 想起-01, arg1, x15 / 事)
(x17 / 挪动-01, arg1, x20 / 椅子)
(x17 / 挪动-01, purpose, x21 / 寻找-01)
(x17 / 挪动-01, time, x19 / 从前)
(x21 / 寻找-01, arg1, x23 / 日落)
(x24 / 想-02, arg1, x27 / 帮助-01)
(x24 / 想-02, degree, x26 / 很)
(x27 / 帮助-01, arg1, x29 / 朋友)
(x29 / 朋友, mod, x30 / 这)
(x29 / 朋友, poss, x31 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),朋友,朋友,false), Span(21,22,List(1),这,这,false), Span(19,20,List(2),他,他,false), Span(18,19,List(3),帮助,帮助-01,false), Span(17,18,List(4),想,想-05,false), Span(16,17,List(5),很,很,false), Span(15,16,List(6),他,他,false), Span(13,14,List(7),事,事,false), Span(11,12,List(8),日落,日落,false), Span(10,11,List(9),寻找,寻找-01,false), Span(9,10,List(10),椅子,椅子,false), Span(8,9,List(11),挪动,挪动-01,false), Span(7,8,List(12),从前,从前,false), Span(6,7,List(13),自己,自己,false), Span(5,6,List(14),他,他,false), Span(3,4,List(15),想起,想起-01,false), Span(2,3,List(16),他,他,false), Span(0,1,List(17),这时,这时,false)),Map(2 -> 他, 5 -> 很, 12 -> 从前, 15 -> 想起-01, 8 -> 日落, 7 -> 事, 17 -> 这时, 1 -> 这, 4 -> 想-05, 11 -> 挪动-01, 14 -> 他, 6 -> 他, 0 -> 朋友, 9 -> 寻找-01, 16 -> 他, 3 -> 帮助-01, 10 -> 椅子, 13 -> 自己),Map(帮 -> 帮助-01, 从 -> 从前, 想2 -> 想起-01, 他2 -> 他, 椅 -> 椅子, 自 -> 自己, 朋 -> 朋友, 这 -> 这, 寻 -> 寻找-01, 挪 -> 挪动-01, 很 -> 很, 他 -> 他, 他4 -> 他, 事 -> 事, 这2 -> 这时, 日 -> 日落, 他3 -> 他, 想 -> 想-05))),[Ljava.lang.String;@5e8604bf,Annotation([Ljava.lang.String;@20095ab4,[Ljava.lang.String;@4e2916c3,[Ljava.lang.String;@64aad6db),Annotation([Ljava.lang.String;@ae7950d,[Ljava.lang.String;@60d1b21f,[Ledu.cmu.lti.nlp.amr.Dependency;@66c83fc8),Annotation([Ljava.lang.String;@546621c4,[Ljava.lang.String;@621f89b8,[Ljava.lang.String;@f339eae),Annotation([Ljava.lang.String;@2822c6ff,[Ljava.lang.String;@4dafba3e,[Ledu.cmu.lti.nlp.amr.Entity;@53e3a87a))
AMR:
(从 / 从前, poss, 事 / 事)
(他3 / 他, timezone, 想2 / 想起-01)
(寻 / 寻找-01, quant, 日 / 日落)
(帮 / 帮助-01, subset, 朋 / 朋友)
(想 / 想-05, ARG6, 他2 / 他)
(想 / 想-05, degree, 很 / 很)
(想 / 想-05, prep-along-with, 帮 / 帮助-01)
(想2 / 想起-01, prep-from, 他4 / 他)
(想2 / 想起-01, prep-under, 事 / 事)
(想2 / 想起-01, time, 这2 / 这时)
(挪 / 挪动-01, ARG5, 椅 / 椅子)
(挪 / 挪动-01, purpose, 寻 / 寻找-01)
(挪 / 挪动-01, time, 从 / 从前)
(朋 / 朋友, mod, 这 / 这)
(朋 / 朋友, poss, 他 / 他)
(朋 / 朋友, poss, 他3 / 他)
(椅 / 椅子, quant, 自 / 自己)

Decoded in 94,545 microseconds
Sentence: “ 告诉 你 ， 我 知道 一 种 能 使 你 休息 的 办法 ， 你 要 什么 时候 休息 都 可以 。 ”

Spans:
Span 17-18:  什么 => 什么
Span 19-20:  休息 => 休息-01
Span 11-12:  休息 => 休息-01
Span 15-16:  你 => 你
Span 10-11:  你 => 你
Span 2-3:  你 => 你
Span 9-10:  使 => 使-01
Span 13-14:  办法 => 办法
Span 21-22:  可以 => 可以-02
Span 1-2:  告诉 => 告诉-01
Span 4-5:  我 => 我
Span 18-19:  时候 => 时候
Span 5-6:  知道 => 知道-01
Span 7-8:  种 => 种
Span 8-9:  能 => 能
Span 16-17:  要 => 要-02
Span 20-21:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  什么 => 什么
Oracle Span 11-12:  休息 => 休息-01
Oracle Span 19-20:  休息 => 休息-01
Oracle Span 2-3:  你 => 你
Oracle Span 9-10:  使 => 使-01
Oracle Span 13-14:  办法 => 办法
Oracle Span 21-22:  可以 => 可以-01
Oracle Span 1-2:  告诉 => 告诉-01
Oracle Span 4-5:  我 => 我
Oracle Span 18-19:  时候 => 时候
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 8-9:  能 => 能-01
Oracle Span 16-17:  要 => 要-05
Oracle Span 20-21:  都 => 都

Incorrect span: 可以 => 可以-02
Incorrect span: 要 => 要-02
Extra span: 你 => 你
Extra span: 你 => 你
Incorrect span: 能 => 能
Extra span: 种 => 种
Missing span: 能 => 能-01
Missing span: 可以 => 可以-01
Missing span: 要 => 要-05
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	告诉	_	VV	VV	_	6	conj	_	_
3	你	_	PN	PN	_	2	dobj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	知道	_	VV	VV	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	种	_	M	M	_	14	clf	_	_
9	能	_	VV	VV	_	10	mmod	_	_
10	使	_	VV	VV	_	14	rcmod	_	_
11	你	_	PN	PN	_	10	dobj	_	_
12	休息	_	VV	VV	_	10	dep	_	_
13	的	_	DEC	DEC	_	10	cpm	_	_
14	办法	_	NN	NN	_	6	dobj	_	_
15	,	_	PU	PU	_	6	punct	_	_
16	你	_	PN	PN	_	22	nsubj	_	_
17	要	_	VV	VV	_	22	mmod	_	_
18	什么	_	DT	DT	_	19	det	_	_
19	时候	_	NN	NN	_	22	dep	_	_
20	休息	_	AD	AD	_	22	advmod	_	_
21	都	_	AD	AD	_	22	advmod	_	_
22	可以	_	VV	VV	_	6	dep	_	_
23	。	_	PU	PU	_	6	punct	_	_
24	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x29 / 知道-01, arg0, x30 / 我)
(x29 / 知道-01, arg1, x31 / 能-01)
(x31 / 能-01, arg0, x32 / 使-01)
(x32 / 使-01, arg0, x37 / 办法)
(x32 / 使-01, arg1, x35 / 你)
(x32 / 使-01, arg2, x36 / 休息-01)
(x40 / 可以-01, arg0, x41 / 要-05)
(x40 / 可以-01, manner, x46 / 都)
(x41 / 要-05, arg1, x43 / 休息-01)
(x43 / 休息-01, time, x44 / 时候)
(x44 / 时候, mod, x45 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),可以,可以-02,false), Span(20,21,List(1),都,都,false), Span(19,20,List(2),休息,休息-01,false), Span(18,19,List(3),时候,时候,false), Span(17,18,List(4),什么,什么,false), Span(16,17,List(5),要,要-02,false), Span(15,16,List(6),你,你,false), Span(13,14,List(7),办法,办法,false), Span(11,12,List(8),休息,休息-01,false), Span(10,11,List(9),你,你,false), Span(9,10,List(10),使,使-01,false), Span(8,9,List(11),能,能,false), Span(7,8,List(12),种,种,false), Span(5,6,List(13),知道,知道-01,false), Span(4,5,List(14),我,我,false), Span(2,3,List(15),你,你,false), Span(1,2,List(16),告诉,告诉-01,false)),Map(2 -> 休息-01, 5 -> 要-02, 12 -> 种, 15 -> 你, 8 -> 休息-01, 7 -> 办法, 1 -> 都, 4 -> 什么, 11 -> 能, 14 -> 我, 6 -> 你, 0 -> 可以-02, 9 -> 你, 16 -> 告诉-01, 3 -> 时候, 10 -> 使-01, 13 -> 知道-01),Map(我 -> 我, 你3 -> 你, 要 -> 要-02, 能 -> 能, 你 -> 你, 休2 -> 休息-01, 告 -> 告诉-01, 办 -> 办法, 种 -> 种, 你2 -> 你, 知 -> 知道-01, 都 -> 都, 休 -> 休息-01, 什 -> 什么, 使 -> 使-01, 时 -> 时候, 可 -> 可以-02))),[Ljava.lang.String;@40368a46,Annotation([Ljava.lang.String;@7e9da981,[Ljava.lang.String;@4ed38226,[Ljava.lang.String;@3d43fe),Annotation([Ljava.lang.String;@74ad8d05,[Ljava.lang.String;@676ff3b0,[Ledu.cmu.lti.nlp.amr.Dependency;@35ff8fc9),Annotation([Ljava.lang.String;@5fb7183b,[Ljava.lang.String;@476a736d,[Ljava.lang.String;@5f80fa43),Annotation([Ljava.lang.String;@16c8b7bd,[Ljava.lang.String;@7159139f,[Ledu.cmu.lti.nlp.amr.Entity;@65bcf7c2))
AMR:
(休 / 休息-01, time, 时 / 时候)
(使 / 使-01, degree, 能 / 能)
(使 / 使-01, prep-for, 休2 / 休息-01)
(使 / 使-01, prep-for, 你2 / 你)
(办 / 办法, conj-as-if, 休2 / 休息-01)
(可 / 可以-02, degree, 休 / 休息-01)
(可 / 可以-02, manner, 都 / 都)
(告 / 告诉-01, prep-as, 知 / 知道-01)
(告 / 告诉-01, subset, 你3 / 你)
(时 / 时候, mod, 什 / 什么)
(知 / 知道-01, beneficiary, 我 / 我)
(知 / 知道-01, prep-through, 种 / 种)
(能 / 能, mod, 种 / 种)
(要 / 要-02, degree, 你 / 你)
(要 / 要-02, degree, 办 / 办法)
(要 / 要-02, time, 时 / 时候)

Decoded in 84,577 microseconds
Sentence: “ 我 老是 想 休息 。 ” 点灯人 说 。

Spans:
Span 4-5:  休息 => 休息-01
Span 3-4:  想 => 想-05
Span 1-2:  我 => 我
Span 7-8:  点灯人 => 点灯人
Span 2-3:  老是 => 老是
Span 8-9:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  休息 => 休息-01
Oracle Span 3-4:  想 => 想-01
Oracle Span 2-3:  老是 => 老是
Oracle Span 8-9:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 点灯人 => 点灯人
Incorrect span: 想 => 想-05
Extra span: 我 => 我
Missing span: 说 => 说-01
Missing span: 想 => 想-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	老是	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	9	dep	_	_
5	休息	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	点灯人	_	NR	NR	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg1, x3 / 想-01)
(x3 / 想-01, arg1, x6 / 休息-01)
(x3 / 想-01, time, x13 / 老是)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),点灯人,点灯人,false), Span(4,5,List(2),休息,休息-01,false), Span(3,4,List(3),想,想-05,false), Span(2,3,List(4),老是,老是,false), Span(1,2,List(5),我,我,false)),Map(2 -> 休息-01, 5 -> 我, 1 -> 点灯人, 4 -> 老是, 0 -> 说-02, 3 -> 想-05),Map(我 -> 我, 老 -> 老是, 点 -> 点灯人, 说 -> 说-02, 休 -> 休息-01, 想 -> 想-05))),[Ljava.lang.String;@3db64bd4,Annotation([Ljava.lang.String;@6e106680,[Ljava.lang.String;@576c5536,[Ljava.lang.String;@55ecbafe),Annotation([Ljava.lang.String;@5a8ba37c,[Ljava.lang.String;@37c2eacb,[Ledu.cmu.lti.nlp.amr.Dependency;@232cce0),Annotation([Ljava.lang.String;@32b9bd12,[Ljava.lang.String;@352e787a,[Ljava.lang.String;@159a48a6),Annotation([Ljava.lang.String;@15bc339,[Ljava.lang.String;@7e75bf2d,[Ledu.cmu.lti.nlp.amr.Entity;@385ef531))
AMR:
(想 / 想-05, manner, 老 / 老是)
(想 / 想-05, prep-through, 休 / 休息-01)
(想 / 想-05, purpose, 点 / 点灯人)
(老 / 老是, poss, 我 / 我)
(说 / 说-02, degree, 点 / 点灯人)

Decoded in 11,578 microseconds
Sentence: 因为 ， 一 个 人 可以 同时 是 忠实 的 ， 又 是 懒惰 的 。

Spans:
Span 4-5:  人 => 人
Span 11-12:  又 => 又
Span 5-6:  可以 => 可以-02
Span 6-7:  同时 => 同时
Span 8-9:  忠实 => 忠实-01
Span 13-14:  懒惰 => 懒惰-01
Span 12-13:  是 => 是-04
Span 7-8:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  人 => 人
Oracle Span 5-6:  可以 => 可以-02
Oracle Span 6-7:  同时 => 同时
Oracle Span 8-9:  忠实 => 忠实-01
Oracle Span 13-14:  懒惰 => 懒惰-01

Extra span: 是 => 是-04
Extra span: 又 => 又
Extra span: 是 => 是-04
Dependencies:
1	因为	_	P	P	_	8	prep	_	_
2	,	_	PU	PU	_	1	punct	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	人	_	NN	NN	_	6	nsubj	_	_
6	可以	_	VV	VV	_	1	dep	_	_
7	同时	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	忠实	_	VA	VA	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	又	_	AD	AD	_	13	advmod	_	_
13	是	_	VC	VC	_	8	dep	_	_
14	懒惰	_	VA	VA	_	13	attr	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	。	_	PU	PU	_	8	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),懒惰,懒惰-01,false), Span(12,13,List(1),是,是-04,false), Span(11,12,List(2),又,又,false), Span(8,9,List(3),忠实,忠实-01,false), Span(7,8,List(4),是,是-04,false), Span(6,7,List(5),同时,同时,false), Span(5,6,List(6),可以,可以-02,false), Span(4,5,List(7),人,人,false)),Map(2 -> 又, 5 -> 同时, 7 -> 人, 1 -> 是-04, 4 -> 是-04, 6 -> 可以-02, 0 -> 懒惰-01, 3 -> 忠实-01),Map(又 -> 又, 同 -> 同时, 懒 -> 懒惰-01, 人 -> 人, 是2 -> 是-04, 忠 -> 忠实-01, 是 -> 是-04, 可 -> 可以-02))),[Ljava.lang.String;@7fc645e4,Annotation([Ljava.lang.String;@205b132e,[Ljava.lang.String;@73044cdf,[Ljava.lang.String;@3cbcd8f3),Annotation([Ljava.lang.String;@719843e5,[Ljava.lang.String;@9a2ec9b,[Ledu.cmu.lti.nlp.amr.Dependency;@58112bc4),Annotation([Ljava.lang.String;@2301b75,[Ljava.lang.String;@3104f7bd,[Ljava.lang.String;@2f5c1332),Annotation([Ljava.lang.String;@7ec25216,[Ljava.lang.String;@7cab1508,[Ledu.cmu.lti.nlp.amr.Entity;@6a84bc3f))
AMR:
(可 / 可以-02, prep-from, 人 / 人)
(忠 / 忠实-01, ARG4, 是 / 是-04)
(懒 / 懒惰-01, ARG1, 是 / 是-04)
(是 / 是-04, manner, 又 / 又)
(是2 / 是-04, ARG1, 忠 / 忠实-01)
(是2 / 是-04, ARG4, 可 / 可以-02)
(是2 / 是-04, manner, 同 / 同时)

Decoded in 23,992 microseconds
Sentence: 小 王子 接着 说 ： “ 你 的 这 颗 行星 这样 小 ， 你 三 步 就 可以 绕 它 一 圈 。

Spans:
Span 14-15:  你 => 你
Span 6-7:  你 => 你
Span 18-19:  可以 => 可以-02
Span 22-23:  圈 => 圈
Span 20-21:  它 => 它
Span 12-13:  小 => 小
Span 0-1:  小 => 小
Span 17-18:  就 => 就-01
Span 2-3:  接着 => 接着-01
Span 16-17:  步 => 步
Span 1-2:  王子 => 王子
Span 19-20:  绕 => 绕-01
Span 10-11:  行星 => 行星
Span 3-4:  说 => 说-02
Span 8-9:  这 => 这
Span 11-12:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 18-19:  可以 => 可以-03
Oracle Span 22-23:  圈 => 圈
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  小 => 小-01
Oracle Span 16-17:  步 => (temporal-quantity :unit 步)
Oracle Span 1-2:  王子 => 王子
Oracle Span 19-20:  绕 => 绕-01
Oracle Span 10-11:  行星 => 行星
Oracle Span 3-4:  说 => 说-01
Oracle Span 8-9:  这 => 这
Oracle Span 11-12:  这样 => 这样

Extra span: 它 => 它
Incorrect span: 可以 => 可以-02
Extra span: 就 => 就-01
Incorrect span: 步 => 步
Extra span: 你 => 你
Incorrect span: 小 => 小
Incorrect span: 这样 => 这样-01
Incorrect span: 说 => 说-02
Extra span: 接着 => 接着-01
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Missing span: 这样 => 这样
Missing span: 可以 => 可以-03
Missing span: 步 => (temporal-quantity :unit 步)
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	接着	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	11	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	这	_	DT	DT	_	11	det	_	_
10	颗	_	M	M	_	9	clf	_	_
11	行星	_	NN	NN	_	13	nsubj	_	_
12	这样	_	AD	AD	_	13	advmod	_	_
13	小	_	VA	VA	_	4	ccomp	_	_
14	,	_	PU	PU	_	13	punct	_	_
15	你	_	PN	PN	_	20	nsubj	_	_
16	三	_	CD	CD	_	17	nummod	_	_
17	步	_	M	M	_	20	dep	_	_
18	就	_	AD	AD	_	20	advmod	_	_
19	可以	_	VV	VV	_	20	mmod	_	_
20	绕	_	VV	VV	_	13	conj	_	_
21	它	_	PN	PN	_	23	nn	_	_
22	一	_	CD	CD	_	23	nummod	_	_
23	圈	_	NN	NN	_	20	dobj	_	_
24	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 可以-03, arg1, x13 / 绕-01)
(x13 / 绕-01, manner, x18 / temporal-quantity)
(x13 / 绕-01, unit, x23 / 圈)
(x18 / temporal-quantity, unit, x24 / 步)
(x2 / 说-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 小-01, arg0, x8 / 行星)
(x6 / 小-01, degree, x7 / 这样)
(x8 / 行星, mod, x9 / 这)
(x8 / 行星, poss, x10 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),圈,圈,false), Span(20,21,List(1),它,它,false), Span(19,20,List(2),绕,绕-01,false), Span(18,19,List(3),可以,可以-02,false), Span(17,18,List(4),就,就-01,false), Span(16,17,List(5),步,步,false), Span(14,15,List(6),你,你,false), Span(12,13,List(7),小,小,false), Span(11,12,List(8),这样,这样-01,false), Span(10,11,List(9),行星,行星,false), Span(8,9,List(10),这,这,false), Span(6,7,List(11),你,你,false), Span(3,4,List(12),说,说-02,false), Span(2,3,List(13),接着,接着-01,false), Span(1,2,List(14),王子,王子,false), Span(0,1,List(15),小,小,false)),Map(2 -> 绕-01, 5 -> 步, 12 -> 说-02, 15 -> 小, 8 -> 这样-01, 7 -> 小, 1 -> 它, 4 -> 就-01, 11 -> 你, 14 -> 王子, 6 -> 你, 0 -> 圈, 9 -> 行星, 3 -> 可以-02, 10 -> 这, 13 -> 接着-01),Map(就 -> 就-01, 接 -> 接着-01, 这 -> 这样-01, 王 -> 王子, 你 -> 你, 它 -> 它, 小 -> 小, 说 -> 说-02, 这2 -> 这, 你2 -> 你, 行 -> 行星, 圈 -> 圈, 步 -> 步, 小2 -> 小, 可 -> 可以-02, 绕 -> 绕-01))),[Ljava.lang.String;@258ee7de,Annotation([Ljava.lang.String;@4930539b,[Ljava.lang.String;@6d171ce0,[Ljava.lang.String;@22bd2039),Annotation([Ljava.lang.String;@705f83a7,[Ljava.lang.String;@3bb8aabc,[Ledu.cmu.lti.nlp.amr.Dependency;@6e1d4137),Annotation([Ljava.lang.String;@256a1825,[Ljava.lang.String;@29a4f594,[Ljava.lang.String;@57b75756),Annotation([Ljava.lang.String;@5327a06e,[Ljava.lang.String;@2679311f,[Ledu.cmu.lti.nlp.amr.Entity;@287f7811))
AMR:
(可 / 可以-02, manner, 就 / 就-01)
(小 / 小, mod, 这 / 这样-01)
(接 / 接着-01, value, 王 / 王子)
(步 / 步, mod, 这 / 这样-01)
(步 / 步, poss, 你 / 你)
(步 / 步, purpose, 就 / 就-01)
(王 / 王子, mod, 小2 / 小)
(绕 / 绕-01, manner, 可 / 可以-02)
(绕 / 绕-01, unit, 圈 / 圈)
(绕 / 绕-01, unit, 它 / 它)
(行 / 行星, mod, 这 / 这样-01)
(行 / 行星, mod, 这2 / 这)
(说 / 说-02, degree, 这 / 这样-01)
(说 / 说-02, purpose, 你2 / 你)
(说 / 说-02, purpose, 接 / 接着-01)

Decoded in 75,294 microseconds
Sentence: 你 只要 慢慢 地 走 ， 就 可以 一直 在 太阳 的 照耀 下 ，

Spans:
Span 8-9:  一直 => 一直
Span 13-14:  下 => 下-07
Span 0-1:  你 => 你
Span 7-8:  可以 => 可以-02
Span 9-10:  在 => 在-01
Span 3-4:  地 => 地
Span 10-11:  太阳 => 太阳
Span 6-7:  就 => 就-01
Span 2-3:  慢慢 => 慢慢
Span 12-13:  照耀 => 照耀-01
Span 4-5:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  一直 => 一直
Oracle Span 0-1:  你 => 你
Oracle Span 7-8:  可以 => 可以-01
Oracle Span 10-11:  太阳 => 太阳
Oracle Span 2-3:  慢慢 => 慢慢
Oracle Span 12-13:  照耀 => 照耀-01
Oracle Span 4-5:  走 => 走-01

Extra span: 下 => 下-07
Extra span: 在 => 在-01
Incorrect span: 可以 => 可以-02
Extra span: 就 => 就-01
Incorrect span: 走 => 走-05
Extra span: 地 => 地
Missing span: 可以 => 可以-01
Missing span: 走 => 走-01
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	只要	_	CS	CS	_	5	advmod	_	_
3	慢慢	_	AD	AD	_	5	advmod	_	_
4	地	_	NN	NN	_	5	dobj	_	_
5	走	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	可以	_	VV	VV	_	5	conj	_	_
9	一直	_	AD	AD	_	10	advmod	_	_
10	在	_	P	P	_	8	prep	_	_
11	太阳	_	NN	NN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	照耀	_	NN	NN	_	14	lobj	_	_
14	下	_	LC	LC	_	10	plmod	_	_
15	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x15 / 可以-01, arg0, x16 / 照耀-01)
(x16 / 照耀-01, arg0, x17 / 太阳)
(x16 / 照耀-01, manner, x20 / 一直)
(x21 / 走-01, arg0, x22 / 你)
(x21 / 走-01, manner, x23 / 慢慢)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),下,下-07,false), Span(12,13,List(1),照耀,照耀-01,false), Span(10,11,List(2),太阳,太阳,false), Span(9,10,List(3),在,在-01,false), Span(8,9,List(4),一直,一直,false), Span(7,8,List(5),可以,可以-02,false), Span(6,7,List(6),就,就-01,false), Span(4,5,List(7),走,走-05,false), Span(3,4,List(8),地,地,false), Span(2,3,List(9),慢慢,慢慢,false), Span(0,1,List(10),你,你,false)),Map(2 -> 太阳, 5 -> 可以-02, 8 -> 地, 7 -> 走-05, 1 -> 照耀-01, 4 -> 一直, 6 -> 就-01, 9 -> 慢慢, 0 -> 下-07, 10 -> 你, 3 -> 在-01),Map(就 -> 就-01, 在 -> 在-01, 你 -> 你, 下 -> 下-07, 太 -> 太阳, 地 -> 地, 照 -> 照耀-01, 慢 -> 慢慢, 走 -> 走-05, 一 -> 一直, 可 -> 可以-02))),[Ljava.lang.String;@451f87af,Annotation([Ljava.lang.String;@2b556bb2,[Ljava.lang.String;@44cb460e,[Ljava.lang.String;@17271176),Annotation([Ljava.lang.String;@2e3cdec2,[Ljava.lang.String;@2e34384c,[Ledu.cmu.lti.nlp.amr.Dependency;@3051e0b2),Annotation([Ljava.lang.String;@1f52eb6f,[Ljava.lang.String;@57d0fc89,[Ljava.lang.String;@58294867),Annotation([Ljava.lang.String;@67c277a0,[Ljava.lang.String;@6fc3e1a4,[Ledu.cmu.lti.nlp.amr.Entity;@3fa76c61))
AMR:
(下 / 下-07, ARG4, 照 / 照耀-01)
(可 / 可以-02, manner, 就 / 就-01)
(在 / 在-01, ARG1, 一 / 一直)
(在 / 在-01, ARG5, 可 / 可以-02)
(地 / 地, manner, 慢 / 慢慢)
(地 / 地, quant, 你 / 你)
(就 / 就-01, ARG1, 走 / 走-05)
(照 / 照耀-01, manner, 一 / 一直)
(照 / 照耀-01, time, 太 / 太阳)
(走 / 走-05, manner, 慢 / 慢慢)

Decoded in 37,145 microseconds
Sentence: 你 想 休息 的 时候 ， 你 就 这样 走 … 那么 ， 你 要 白天 有 多 长 它 就 有 多 长 。 ”

Spans:
Span 2-3:  休息 => 休息-01
Span 13-14:  你 => 你
Span 6-7:  你 => 你
Span 0-1:  你 => 你
Span 22-23:  多 => 多
Span 17-18:  多 => 多
Span 19-20:  它 => 它
Span 20-21:  就 => 就-01
Span 7-8:  就 => 就-01
Span 1-2:  想 => 想-05
Span 4-5:  时候 => 时候
Span 21-22:  有 => 有-06
Span 16-17:  有 => 有-06
Span 15-16:  白天 => 白天
Span 14-15:  要 => 要-02
Span 9-10:  走 => 走-05
Span 8-9:  这样 => 这样-01
Span 11-12:  那么 => 那么
Span 23-24:  长 => 长-04
Span 18-19:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  休息 => 休息-01
Oracle Span 0-1:  你 => 你
Oracle Span 17-18:  多 => 多
Oracle Span 7-8:  就 => 就
Oracle Span 20-21:  就 => 就
Oracle Span 1-2:  想 => 想-02
Oracle Span 16-17:  有 => 有-01
Oracle Span 15-16:  白天 => 白天
Oracle Span 14-15:  要 => 要-04
Oracle Span 9-10:  走 => 走-01
Oracle Span 8-9:  这样 => 这样
Oracle Span 18-19:  长 => 长-02

Extra span: 长 => 长-04
Extra span: 多 => 多
Extra span: 有 => 有-06
Incorrect span: 就 => 就-01
Extra span: 它 => 它
Incorrect span: 长 => 长-04
Incorrect span: 有 => 有-06
Incorrect span: 要 => 要-02
Extra span: 你 => 你
Extra span: 那么 => 那么
Incorrect span: 走 => 走-05
Incorrect span: 这样 => 这样-01
Incorrect span: 就 => 就-01
Extra span: 你 => 你
Extra span: 时候 => 时候
Incorrect span: 想 => 想-05
Missing span: 走 => 走-01
Missing span: 想 => 想-02
Missing span: 就 => 就
Missing span: 这样 => 这样
Missing span: 要 => 要-04
Missing span: 长 => 长-02
Missing span: 有 => 有-01
Missing span: 就 => 就
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	休息	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	你	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	这样	_	AD	AD	_	10	advmod	_	_
10	走	_	VV	VV	_	2	ccomp	_	_
11	…	_	PU	PU	_	2	punct	_	_
12	那么	_	AD	AD	_	17	advmod	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	你	_	PN	PN	_	17	nsubj	_	_
15	要	_	VV	VV	_	17	mmod	_	_
16	白天	_	AD	AD	_	17	advmod	_	_
17	有	_	VE	VE	_	2	conj	_	_
18	多	_	AD	AD	_	19	advmod	_	_
19	长	_	VA	VA	_	22	conj	_	_
20	它	_	PN	PN	_	22	dep	_	_
21	就	_	AD	AD	_	22	advmod	_	_
22	有	_	VE	VE	_	17	dep	_	_
23	多	_	CD	CD	_	24	nummod	_	_
24	长	_	NN	NN	_	22	dobj	_	_
25	。	_	PU	PU	_	2	punct	_	_
26	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x35 / 走-01, arg0, x38 / 你)
(x35 / 走-01, manner, x36 / 这样)
(x35 / 走-01, manner, x37 / 就)
(x35 / 走-01, time, x39 / 想-02)
(x39 / 想-02, arg1, x41 / 休息-01)
(x43 / 要-04, arg1, x45 / 白天)
(x43 / 要-04, arg2, x46 / 长-02)
(x46 / 长-02, quant, x47 / 多)
(x48 / 有-01, manner, x49 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),长,长-04,false), Span(22,23,List(1),多,多,false), Span(21,22,List(2),有,有-06,false), Span(20,21,List(3),就,就-01,false), Span(19,20,List(4),它,它,false), Span(18,19,List(5),长,长-04,false), Span(17,18,List(6),多,多,false), Span(16,17,List(7),有,有-06,false), Span(15,16,List(8),白天,白天,false), Span(14,15,List(9),要,要-02,false), Span(13,14,List(10),你,你,false), Span(11,12,List(11),那么,那么,false), Span(9,10,List(12),走,走-05,false), Span(8,9,List(13),这样,这样-01,false), Span(7,8,List(14),就,就-01,false), Span(6,7,List(15),你,你,false), Span(4,5,List(16),时候,时候,false), Span(2,3,List(17),休息,休息-01,false), Span(1,2,List(18),想,想-05,false), Span(0,1,List(19),你,你,false)),Map(2 -> 有-06, 5 -> 长-04, 12 -> 走-05, 15 -> 你, 8 -> 白天, 18 -> 想-05, 7 -> 有-06, 17 -> 休息-01, 1 -> 多, 4 -> 它, 11 -> 那么, 14 -> 就-01, 6 -> 多, 0 -> 长-04, 9 -> 要-02, 16 -> 时候, 19 -> 你, 3 -> 就-01, 10 -> 你, 13 -> 这样-01),Map(就 -> 就-01, 有2 -> 有-06, 白 -> 白天, 你3 -> 你, 这 -> 这样-01, 要 -> 要-02, 你 -> 你, 它 -> 它, 就2 -> 就-01, 多 -> 多, 你2 -> 你, 走 -> 走-05, 长2 -> 长-04, 休 -> 休息-01, 那 -> 那么, 想 -> 想-05, 时 -> 时候, 长 -> 长-04, 多2 -> 多, 有 -> 有-06))),[Ljava.lang.String;@2d5f7182,Annotation([Ljava.lang.String;@59546cfe,[Ljava.lang.String;@29ea78b1,[Ljava.lang.String;@2d2acd89),Annotation([Ljava.lang.String;@7baf6acf,[Ljava.lang.String;@1e6dad8,[Ledu.cmu.lti.nlp.amr.Dependency;@7b3315a5),Annotation([Ljava.lang.String;@8ed9cf,[Ljava.lang.String;@f72203,[Ljava.lang.String;@377008df),Annotation([Ljava.lang.String;@540dbda9,[Ljava.lang.String;@22bb5646,[Ledu.cmu.lti.nlp.amr.Entity;@1be59f28))
AMR:
(休 / 休息-01, time, 时 / 时候)
(多 / 多, accompanier, 长 / 长-04)
(多 / 多, mod, 有 / 有-06)
(多2 / 多, accompanier, 长2 / 长-04)
(多2 / 多, mod, 有2 / 有-06)
(它 / 它, location, 长2 / 长-04)
(就2 / 就-01, quant, 你2 / 你)
(就2 / 就-01, time, 时 / 时候)
(想 / 想-05, manner, 休 / 休息-01)
(想 / 想-05, manner, 你3 / 你)
(有 / 有-06, manner, 就 / 就-01)
(有 / 有-06, manner, 长2 / 长-04)
(有2 / 有-06, manner, 白 / 白天)
(要 / 要-02, degree, 那 / 那么)
(要 / 要-02, manner, 你 / 你)
(要 / 要-02, prep-on, 有2 / 有-06)
(走 / 走-05, degree, 那 / 那么)
(走 / 走-05, manner, 这 / 这样-01)
(这 / 这样-01, manner, 就2 / 就-01)

Decoded in 111,966 microseconds
Sentence: “ 这 办法 帮 不 了 我 多 大 忙 ， 点灯人 说 。

Spans:
Span 4-5:  不 => 不
Span 2-3:  办法 => 办法
Span 7-8:  多 => 多
Span 8-9:  大 => 大
Span 9-10:  忙 => 忙-01
Span 6-7:  我 => 我
Span 11-12:  点灯人 => 点灯人
Span 12-13:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  办法 => 办法
Oracle Span 8-9:  大 => 大-01
Oracle Span 12-13:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 点灯人 => 点灯人
Extra span: 忙 => 忙-01
Incorrect span: 大 => 大
Extra span: 多 => 多
Extra span: 我 => 我
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 大 => 大-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	办法	_	NN	NN	_	4	nsubj	_	_
4	帮	_	VV	VV	_	0	root	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	了	_	VV	VV	_	4	ccomp	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	多	_	VA	VA	_	4	conj	_	_
9	大	_	VA	VA	_	8	comod	_	_
10	忙	_	VA	VA	_	8	comod	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	点灯人	_	NR	NR	_	13	nsubj	_	_
13	说	_	VV	VV	_	4	dep	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	这	_	PN	PN	_	6	xsubj	_	_
16	办法	_	NN	NN	_	6	xsubj	_	_

Oracle:
(x16 / 办法, mod, x17 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),说,说-02,false), Span(11,12,List(1),点灯人,点灯人,false), Span(9,10,List(2),忙,忙-01,false), Span(8,9,List(3),大,大,false), Span(7,8,List(4),多,多,false), Span(6,7,List(5),我,我,false), Span(4,5,List(6),不,不,false), Span(2,3,List(7),办法,办法,false), Span(1,2,List(8),这,这,false)),Map(2 -> 忙-01, 5 -> 我, 8 -> 这, 7 -> 办法, 1 -> 点灯人, 4 -> 多, 6 -> 不, 0 -> 说-02, 3 -> 大),Map(忙 -> 忙-01, 我 -> 我, 这 -> 这, 大 -> 大, 不 -> 不, 办 -> 办法, 多 -> 多, 点 -> 点灯人, 说 -> 说-02))),[Ljava.lang.String;@2ce45a7b,Annotation([Ljava.lang.String;@153d4abb,[Ljava.lang.String;@6d4c273c,[Ljava.lang.String;@5a67e962),Annotation([Ljava.lang.String;@545e57d7,[Ljava.lang.String;@2bc9a775,[Ledu.cmu.lti.nlp.amr.Dependency;@27b000f7),Annotation([Ljava.lang.String;@42f9c19a,[Ljava.lang.String;@64bfd6fd,[Ljava.lang.String;@2ab2710),Annotation([Ljava.lang.String;@253b380a,[Ljava.lang.String;@29c2c826,[Ledu.cmu.lti.nlp.amr.Entity;@3350ebdd))
AMR:
(办 / 办法, location, 不 / 不)
(办 / 办法, mod, 这 / 这)
(多 / 多, poss, 我 / 我)
(忙 / 忙-01, degree, 多 / 多)
(忙 / 忙-01, degree, 大 / 大)
(忙 / 忙-01, prep-through, 点 / 点灯人)
(忙 / 忙-01, time, 不 / 不)
(说 / 说-02, degree, 点 / 点灯人)

Decoded in 21,952 microseconds
Sentence: 生活 中 我 喜欢 的 就 是 睡觉 。 ”

Spans:
Span 3-4:  喜欢 => 喜欢-01
Span 5-6:  就 => 就-01
Span 2-3:  我 => 我
Span 6-7:  是 => 是-04
Span 0-1:  生活 => 生活-01
Span 7-8:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  喜欢 => 喜欢-01
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  生活 => 生活-01
Oracle Span 7-8:  睡觉 => 睡觉-01

Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	生活	_	NN	NN	_	2	lobj	_	_
2	中	_	LC	LC	_	4	loc	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	喜欢	_	VA	VA	_	7	nsubj	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	睡觉	_	NN	NN	_	7	attr	_	_
9	。	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x9 / 喜欢-01, arg0, x10 / 我)
(x9 / 喜欢-01, arg1, x11 / 睡觉-01)
(x9 / 喜欢-01, time, x12 / 生活-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),睡觉,睡觉-01,false), Span(6,7,List(1),是,是-04,false), Span(5,6,List(2),就,就-01,false), Span(3,4,List(3),喜欢,喜欢-01,false), Span(2,3,List(4),我,我,false), Span(0,1,List(5),生活,生活-01,false)),Map(2 -> 就-01, 5 -> 生活-01, 1 -> 是-04, 4 -> 我, 0 -> 睡觉-01, 3 -> 喜欢-01),Map(就 -> 就-01, 生 -> 生活-01, 我 -> 我, 喜 -> 喜欢-01, 睡 -> 睡觉-01, 是 -> 是-04))),[Ljava.lang.String;@6818d900,Annotation([Ljava.lang.String;@149f5761,[Ljava.lang.String;@2ba33e2c,[Ljava.lang.String;@1f193686),Annotation([Ljava.lang.String;@31e72cbc,[Ljava.lang.String;@5fad41be,[Ledu.cmu.lti.nlp.amr.Dependency;@6dcd5639),Annotation([Ljava.lang.String;@3b36e000,[Ljava.lang.String;@333cb916,[Ljava.lang.String;@629ae7e),Annotation([Ljava.lang.String;@1d25c1c,[Ljava.lang.String;@de88ac6,[Ledu.cmu.lti.nlp.amr.Entity;@5bca7664))
AMR:
(喜 / 喜欢-01, manner, 我 / 我)
(喜 / 喜欢-01, time, 就 / 就-01)
(喜 / 喜欢-01, time, 生 / 生活-01)
(是 / 是-04, manner, 就 / 就-01)
(睡 / 睡觉-01, manner, 是 / 是-04)

Decoded in 10,877 microseconds
Sentence: “ 真 不 走运 。 ” 小 王子 说 。

Spans:
Span 2-3:  不 => 不
Span 6-7:  小 => 小
Span 7-8:  王子 => 王子
Span 1-2:  真 => 真
Span 8-9:  说 => 说-02
Span 3-4:  走运 => 走运

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 1-2:  真 => 真
Oracle Span 8-9:  说 => 说-01
Oracle Span 3-4:  走运 => 走运-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 走运 => 走运
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 走运 => 走运-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	真	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	走运	_	VA	VA	_	9	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 走运-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 走运-01, degree, x6 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),王子,王子,false), Span(6,7,List(2),小,小,false), Span(3,4,List(3),走运,走运,false), Span(2,3,List(4),不,不,false), Span(1,2,List(5),真,真,false)),Map(2 -> 小, 5 -> 真, 1 -> 王子, 4 -> 不, 0 -> 说-02, 3 -> 走运),Map(王 -> 王子, 小 -> 小, 不 -> 不, 说 -> 说-02, 走 -> 走运, 真 -> 真))),[Ljava.lang.String;@105b693d,Annotation([Ljava.lang.String;@3fae596,[Ljava.lang.String;@4a0df195,[Ljava.lang.String;@42fcc7e6),Annotation([Ljava.lang.String;@9255c05,[Ljava.lang.String;@5da7cee2,[Ledu.cmu.lti.nlp.amr.Dependency;@78830d9a),Annotation([Ljava.lang.String;@5ce4369b,[Ljava.lang.String;@7f829c76,[Ljava.lang.String;@1cb19dba),Annotation([Ljava.lang.String;@7c3ebc6b,[Ljava.lang.String;@1931d99,[Ledu.cmu.lti.nlp.amr.Entity;@6a9950f1))
AMR:
(不 / 不, degree, 真 / 真)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, location, 不 / 不)
(走 / 走运, mod, 不 / 不)

Decoded in 11,094 microseconds
Sentence: “ 真 不 走运 。 ” 点灯人 说 。

Spans:
Span 2-3:  不 => 不
Span 6-7:  点灯人 => 点灯人
Span 1-2:  真 => 真
Span 7-8:  说 => 说-02
Span 3-4:  走运 => 走运

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  点灯人 => 点灯人
Oracle Span 1-2:  真 => 真
Oracle Span 7-8:  说 => 说-01
Oracle Span 3-4:  走运 => 走运-01

Incorrect span: 说 => 说-02
Incorrect span: 走运 => 走运
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 走运 => 走运-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	真	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	走运	_	VA	VA	_	8	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	点灯人	_	NR	NR	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 点灯人)
(x0 / 说-01, arg1, x3 / 走运-01)
(x3 / 走运-01, degree, x5 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),点灯人,点灯人,false), Span(3,4,List(2),走运,走运,false), Span(2,3,List(3),不,不,false), Span(1,2,List(4),真,真,false)),Map(2 -> 走运, 1 -> 点灯人, 4 -> 真, 0 -> 说-02, 3 -> 不),Map(不 -> 不, 点 -> 点灯人, 说 -> 说-02, 走 -> 走运, 真 -> 真))),[Ljava.lang.String;@7ad54c55,Annotation([Ljava.lang.String;@73017a80,[Ljava.lang.String;@6ae7deac,[Ljava.lang.String;@4a5905d9),Annotation([Ljava.lang.String;@1a3e5f23,[Ljava.lang.String;@6293e39e,[Ledu.cmu.lti.nlp.amr.Dependency;@365553de),Annotation([Ljava.lang.String;@34a0ef00,[Ljava.lang.String;@5c0f79f0,[Ljava.lang.String;@21fdfefc),Annotation([Ljava.lang.String;@3daa82be,[Ljava.lang.String;@ec1b2e4,[Ledu.cmu.lti.nlp.amr.Entity;@29a69a35))
AMR:
(不 / 不, degree, 真 / 真)
(说 / 说-02, degree, 点 / 点灯人)
(说 / 说-02, location, 不 / 不)
(走 / 走运, mod, 不 / 不)

Decoded in 11,451 microseconds
Sentence: “ 早上 好 。 ”

Spans:
Span 2-3:  好 => 好-04
Span 1-2:  早上 => 早上

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  好 => 好-01
Oracle Span 1-2:  早上 => 早上

Incorrect span: 好 => 好-04
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	早上	_	NT	NT	_	3	tmod	_	_
3	好	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 好-01, arg0, x6 / 早上)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),好,好-04,false), Span(1,2,List(1),早上,早上,false)),Map(1 -> 早上, 0 -> 好-04),Map(早 -> 早上, 好 -> 好-04))),[Ljava.lang.String;@67e28be3,Annotation([Ljava.lang.String;@e344ad3,[Ljava.lang.String;@de18f63,[Ljava.lang.String;@108bdbd8),Annotation([Ljava.lang.String;@6345e7b9,[Ljava.lang.String;@4f8b4bd0,[Ledu.cmu.lti.nlp.amr.Dependency;@4e904fd5),Annotation([Ljava.lang.String;@b18c4,[Ljava.lang.String;@4cbf4f53,[Ljava.lang.String;@597f48df),Annotation([Ljava.lang.String;@15dd5ac2,[Ljava.lang.String;@4d48bd85,[Ledu.cmu.lti.nlp.amr.Entity;@7bbbb6a8))
AMR:
(好 / 好-04, time, 早 / 早上)

Decoded in 2,896 microseconds
Sentence: 于是 他 又 熄灭 了 路灯 。

Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 3-4:  熄灭 => 熄灭-01
Span 5-6:  路灯 => 路灯

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 5-6:  路灯 => 路灯

Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	熄灭	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	路灯	_	NN	NN	_	4	dobj	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 熄灭-01, arg0, x4 / 他)
(x2 / 熄灭-01, arg1, x5 / 路灯)
(x2 / 熄灭-01, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),路灯,路灯,false), Span(3,4,List(1),熄灭,熄灭-01,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他,他,false)),Map(2 -> 又, 1 -> 熄灭-01, 0 -> 路灯, 3 -> 他),Map(又 -> 又, 路 -> 路灯, 他 -> 他, 熄 -> 熄灭-01))),[Ljava.lang.String;@58a120b0,Annotation([Ljava.lang.String;@27d57a2c,[Ljava.lang.String;@2ff95fc6,[Ljava.lang.String;@9d1a267),Annotation([Ljava.lang.String;@58a4a74d,[Ljava.lang.String;@54aca26f,[Ledu.cmu.lti.nlp.amr.Dependency;@314ed053),Annotation([Ljava.lang.String;@35088e87,[Ljava.lang.String;@486bc9a4,[Ljava.lang.String;@7965a51c),Annotation([Ljava.lang.String;@3eee3e2b,[Ljava.lang.String;@4f63e3c7,[Ledu.cmu.lti.nlp.amr.Entity;@59532566))
AMR:
(熄 / 熄灭-01, ARG6, 他 / 他)
(熄 / 熄灭-01, manner, 又 / 又)
(熄 / 熄灭-01, mod, 路 / 路灯)

Decoded in 7,002 microseconds
Sentence: 小 王子 在 他 继续 往 前 旅行 的 途中 ， 自言自语 地 说道 ： “ 这个 人 一定 会 被 其他 那些 人 ， 国王 呀 ， 爱 虚荣 的 呀 ， 酒鬼 呀 ， 实业家 呀 ， 所 瞧 不 起 。

Spans:
Span 18-19:  一定 => 一定
Span 41-42:  不 => 不
Span 23-24:  人 => 人
Span 17-18:  人 => 人
Span 3-4:  他 => 他
Span 19-20:  会 => 会-03
Span 21-22:  其他 => 其他
Span 6-7:  前 => 前
Span 25-26:  国王 => 国王
Span 2-3:  在 => 在-01
Span 12-13:  地 => 地
Span 36-37:  实业家 => 实业家
Span 0-1:  小 => 小
Span 7-8:  旅行 => 旅行-01
Span 28-29:  爱 => (person :arg0-of 爱-01)
Span 1-2:  王子 => 王子
Span 40-41:  瞧 => 瞧-01
Span 4-5:  继续 => 继续-01
Span 11-12:  自言自语 => 自言自语
Span 29-30:  虚荣 => 虚荣-01
Span 13-14:  说道 => 说道
Span 16-17:  这个 => 这个
Span 9-10:  途中 => 途中
Span 22-23:  那些 => 那些
Span 33-34:  酒鬼 => 酒鬼

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 可是 唯 有 他 不 使 我 感到 荒唐 可笑 。

Spans:
Span 4-5:  不 => 不
Span 3-4:  他 => 他
Span 5-6:  使 => 使-01
Span 9-10:  可笑 => 可笑-01
Span 1-2:  唯 => 唯
Span 7-8:  感到 => 感到-01
Span 6-7:  我 => 我
Span 2-3:  有 => 有-06
Span 8-9:  荒唐 => 荒唐-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 9-10:  可笑 => 可笑-01
Oracle Span 1-2:  唯 => 唯
Oracle Span 7-8:  感到 => 感到-01
Oracle Span 6-7:  我 => 我
Oracle Span 2-3:  有 => 有-02
Oracle Span 8-9:  荒唐 => 荒唐-01

Extra span: 使 => 使-01
Extra span: 不 => 不
Incorrect span: 有 => 有-06
Missing span: 有 => 有-02
Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	唯	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	使	_	VV	VV	_	3	dep	_	_
7	我	_	PN	PN	_	6	dobj	_	_
8	感到	_	VV	VV	_	6	dep	_	_
9	荒唐	_	NN	NN	_	10	nn	_	_
10	可笑	_	NN	NN	_	8	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 感到-01, arg0, x15 / 我)
(x14 / 感到-01, cause, x19 / 他)
(x20 / 有-02, arg1, x19 / 他)
(x20 / 有-02, manner, x21 / 唯)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),可笑,可笑-01,false), Span(8,9,List(1),荒唐,荒唐-01,false), Span(7,8,List(2),感到,感到-01,false), Span(6,7,List(3),我,我,false), Span(5,6,List(4),使,使-01,false), Span(4,5,List(5),不,不,false), Span(3,4,List(6),他,他,false), Span(2,3,List(7),有,有-06,false), Span(1,2,List(8),唯,唯,false)),Map(2 -> 感到-01, 5 -> 不, 8 -> 唯, 7 -> 有-06, 1 -> 荒唐-01, 4 -> 使-01, 6 -> 他, 0 -> 可笑-01, 3 -> 我),Map(唯 -> 唯, 我 -> 我, 感 -> 感到-01, 他 -> 他, 不 -> 不, 荒 -> 荒唐-01, 使 -> 使-01, 有 -> 有-06, 可 -> 可笑-01))),[Ljava.lang.String;@421a4ee1,Annotation([Ljava.lang.String;@1237e0be,[Ljava.lang.String;@528f8f8b,[Ljava.lang.String;@ea9e141),Annotation([Ljava.lang.String;@1e54cb33,[Ljava.lang.String;@33cbfa57,[Ledu.cmu.lti.nlp.amr.Dependency;@1d96d872),Annotation([Ljava.lang.String;@5c748168,[Ljava.lang.String;@6441c486,[Ljava.lang.String;@834831b),Annotation([Ljava.lang.String;@234a8f27,[Ljava.lang.String;@5b4d25e7,[Ledu.cmu.lti.nlp.amr.Entity;@31c2affc))
AMR:
(使 / 使-01, ARG4, 可 / 可笑-01)
(使 / 使-01, manner, 不 / 不)
(使 / 使-01, prep-on-behalf, 感 / 感到-01)
(使 / 使-01, value, 我 / 我)
(有 / 有-06, ARG4, 不 / 不)
(有 / 有-06, ARG5, 他 / 他)
(有 / 有-06, manner, 唯 / 唯)
(荒 / 荒唐-01, time, 我 / 我)

Decoded in 22,840 microseconds
Sentence: 这 可能 是 因为 他 所 关心 的 是 别的 事 ， 而 不 是 他 自己 。 ”

Spans:
Span 13-14:  不 => 不
Span 10-11:  事 => 事
Span 15-16:  他 => 他
Span 4-5:  他 => 他
Span 6-7:  关心 => (thing :arg1-of 关心-01)
Span 9-10:  别的 => 别的
Span 1-2:  可能 => 可能-02
Span 14-15:  是 => 是-04
Span 8-9:  是 => 是-04
Span 2-3:  是 => 是-04
Span 16-17:  自己 => 自己
Span 0-1:  这 => 这

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 惋惜 地 叹 了 口 气 ， 并且 又 对 自己 说道 ： “ 本来 这 是 我 唯一 可以 和 他 交成 朋友 的 人 。

Spans:
Span 26-27:  人 => 人
Span 22-23:  他 => 他
Span 0-1:  他 => 他
Span 9-10:  又 => 又
Span 20-21:  可以 => 可以-02
Span 19-20:  唯一 => 唯一
Span 2-3:  地 => 地
Span 10-11:  对 => 对-02
Span 1-2:  惋惜 => 惋惜-01
Span 18-19:  我 => 我
Span 17-18:  是 => 是-04
Span 24-25:  朋友 => 朋友
Span 15-16:  本来 => 本来
Span 6-7:  气 => 气-01
Span 11-12:  自己 => 自己
Span 12-13:  说道 => 说道
Span 16-17:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 26-27:  人 => 人
Oracle Span 0-1:  他 => 他
Oracle Span 20-21:  可以 => 可以-01
Oracle Span 19-20:  唯一 => 唯一
Oracle Span 1-2:  惋惜 => 惋惜-01
Oracle Span 24-25:  朋友 => 朋友
Oracle Span 15-16:  本来 => 本来
Oracle Span 12-13:  说道 => 说道-01
Oracle Span 16-17:  这 => 这

Extra span: 他 => 他
Incorrect span: 可以 => 可以-02
Extra span: 我 => 我
Extra span: 是 => 是-04
Incorrect span: 说道 => 说道
Extra span: 自己 => 自己
Extra span: 对 => 对-02
Extra span: 又 => 又
Extra span: 气 => 气-01
Extra span: 地 => 地
Missing span: 说道 => 说道-01
Missing span: 可以 => 可以-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	惋惜	_	VV	VV	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	叹	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	口	_	NN	NN	_	7	nn	_	_
7	气	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	并且	_	CC	CC	_	4	cc	_	_
10	又	_	AD	AD	_	13	advmod	_	_
11	对	_	P	P	_	13	prep	_	_
12	自己	_	PN	PN	_	11	pobj	_	_
13	说道	_	VV	VV	_	4	dep	_	_
14	：	_	PU	PU	_	4	punct	_	_
15	“	_	PU	PU	_	18	punct	_	_
16	本来	_	AD	AD	_	18	advmod	_	_
17	这	_	PN	PN	_	18	top	_	_
18	是	_	VC	VC	_	4	conj	_	_
19	我	_	PN	PN	_	27	nn	_	_
20	唯一	_	JJ	JJ	_	27	amod	_	_
21	可以	_	VV	VV	_	24	mmod	_	_
22	和	_	P	P	_	24	prep	_	_
23	他	_	PN	PN	_	22	pobj	_	_
24	交成	_	VV	VV	_	27	rcmod	_	_
25	朋友	_	NN	NN	_	24	dobj	_	_
26	的	_	DEC	DEC	_	24	cpm	_	_
27	人	_	NN	NN	_	18	attr	_	_
28	。	_	PU	PU	_	4	punct	_	_
29	交成	_	VV	VV	_	19	rcmod	_	_

Oracle:
(x47 / 说道-01, arg1, x57 / 人)
(x57 / 人, domain, x68 / 这)
(x57 / 人, manner, x67 / 本来)
(x57 / 人, mod, x66 / 唯一)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),人,人,false), Span(24,25,List(1),朋友,朋友,false), Span(22,23,List(2),他,他,false), Span(20,21,List(3),可以,可以-02,false), Span(19,20,List(4),唯一,唯一,false), Span(18,19,List(5),我,我,false), Span(17,18,List(6),是,是-04,false), Span(16,17,List(7),这,这,false), Span(15,16,List(8),本来,本来,false), Span(12,13,List(9),说道,说道,false), Span(11,12,List(10),自己,自己,false), Span(10,11,List(11),对,对-02,false), Span(9,10,List(12),又,又,false), Span(6,7,List(13),气,气-01,false), Span(2,3,List(14),地,地,false), Span(1,2,List(15),惋惜,惋惜-01,false), Span(0,1,List(16),他,他,false)),Map(2 -> 他, 5 -> 我, 12 -> 又, 15 -> 惋惜-01, 8 -> 本来, 7 -> 这, 1 -> 朋友, 4 -> 唯一, 11 -> 对-02, 14 -> 地, 6 -> 是-04, 0 -> 人, 9 -> 说道, 16 -> 他, 3 -> 可以-02, 10 -> 自己, 13 -> 气-01),Map(又 -> 又, 他2 -> 他, 唯 -> 唯一, 本 -> 本来, 自 -> 自己, 朋 -> 朋友, 我 -> 我, 这 -> 这, 气 -> 气-01, 惋 -> 惋惜-01, 他 -> 他, 地 -> 地, 说 -> 说道, 人 -> 人, 对 -> 对-02, 是 -> 是-04, 可 -> 可以-02))),[Ljava.lang.String;@6a0659ac,Annotation([Ljava.lang.String;@58d63b16,[Ljava.lang.String;@7c4fc2bf,[Ljava.lang.String;@7772054c),Annotation([Ljava.lang.String;@2f61f937,[Ljava.lang.String;@46866946,[Ledu.cmu.lti.nlp.amr.Dependency;@44de0113),Annotation([Ljava.lang.String;@236134a1,[Ljava.lang.String;@369c9bb,[Ljava.lang.String;@76d05cc9),Annotation([Ljava.lang.String;@42b21d99,[Ljava.lang.String;@68dcfd52,[Ledu.cmu.lti.nlp.amr.Entity;@25b5c5e3))
AMR:
(人 / 人, location, 朋 / 朋友)
(可 / 可以-02, degree, 唯 / 唯一)
(可 / 可以-02, manner, 是 / 是-04)
(可 / 可以-02, prep-along-with, 他 / 他)
(可 / 可以-02, topic, 朋 / 朋友)
(地 / 地, mod, 惋 / 惋惜-01)
(地 / 地, topic, 气 / 气-01)
(对 / 对-02, manner, 又 / 又)
(对 / 对-02, time, 气 / 气-01)
(惋 / 惋惜-01, prep-following, 他2 / 他)
(是 / 是-04, ARG3, 我 / 我)
(是 / 是-04, manner, 本 / 本来)
(是 / 是-04, mod, 这 / 这)
(自 / 自己, mod, 对 / 对-02)
(说 / 说道, manner, 本 / 本来)
(说 / 说道, mod, 自 / 自己)

Decoded in 89,317 microseconds
Sentence: 可是 他 的 星球 确实 太 小 了 ，

Spans:
Span 1-2:  他 => 他
Span 5-6:  太 => 太
Span 6-7:  小 => 小
Span 3-4:  星球 => 星球
Span 4-5:  确实 => 确实-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 5-6:  太 => 太
Oracle Span 6-7:  小 => 小-01
Oracle Span 3-4:  星球 => 星球
Oracle Span 4-5:  确实 => 确实

Incorrect span: 小 => 小
Incorrect span: 确实 => 确实-01
Missing span: 小 => 小-01
Missing span: 确实 => 确实
Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	星球	_	NN	NN	_	0	root	_	_
5	确实	_	AD	AD	_	7	advmod	_	_
6	太	_	AD	AD	_	7	advmod	_	_
7	小	_	VA	VA	_	4	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 小-01, arg0, x5 / 星球)
(x2 / 小-01, degree, x3 / 太)
(x2 / 小-01, degree, x7 / 确实)
(x5 / 星球, poss, x6 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),小,小,false), Span(5,6,List(1),太,太,false), Span(4,5,List(2),确实,确实-01,false), Span(3,4,List(3),星球,星球,false), Span(1,2,List(4),他,他,false)),Map(2 -> 确实-01, 1 -> 太, 4 -> 他, 0 -> 小, 3 -> 星球),Map(确 -> 确实-01, 星 -> 星球, 太 -> 太, 他 -> 他, 小 -> 小))),[Ljava.lang.String;@5177e388,Annotation([Ljava.lang.String;@37b72ea,[Ljava.lang.String;@cc239ba,[Ljava.lang.String;@7d37f1c),Annotation([Ljava.lang.String;@69d6a7cd,[Ljava.lang.String;@3162743f,[Ledu.cmu.lti.nlp.amr.Dependency;@2c708440),Annotation([Ljava.lang.String;@3047254d,[Ljava.lang.String;@6cf31447,[Ljava.lang.String;@4e92466a),Annotation([Ljava.lang.String;@66e8997c,[Ljava.lang.String;@6f0cb5a1,[Ledu.cmu.lti.nlp.amr.Entity;@1b29d52b))
AMR:
(小 / 小, degree, 太 / 太)
(小 / 小, location, 星 / 星球)
(小 / 小, manner, 确 / 确实-01)
(星 / 星球, poss, 他 / 他)

Decoded in 10,460 microseconds
Sentence: 住 不 下 两 个 人 … ”

Spans:
Span 2-3:  下 => 下-07
Span 1-2:  不 => 不
Span 5-6:  人 => 人
Span 0-1:  住 => 住-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 0-1:  住 => 住-01

Extra span: 下 => 下-07
Extra span: 不 => 不
Dependencies:
1	住	_	NR	NR	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	下	_	VV	VV	_	0	root	_	_
4	两	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	3	dobj	_	_
7	…	_	PU	PU	_	8	punct	_	_
8	”	_	NN	NN	_	6	prnmod	_	_

Oracle:
(x12 / 住-01, arg0, x14 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),人,人,false), Span(2,3,List(1),下,下-07,false), Span(1,2,List(2),不,不,false), Span(0,1,List(3),住,住-01,false)),Map(2 -> 不, 1 -> 下-07, 0 -> 人, 3 -> 住-01),Map(下 -> 下-07, 不 -> 不, 人 -> 人, 住 -> 住-01))),[Ljava.lang.String;@47547132,Annotation([Ljava.lang.String;@655523dd,[Ljava.lang.String;@6f7e336b,[Ljava.lang.String;@3a2b2322),Annotation([Ljava.lang.String;@5e1218b4,[Ljava.lang.String;@12958360,[Ledu.cmu.lti.nlp.amr.Dependency;@c6e0f32),Annotation([Ljava.lang.String;@6f3f0fae,[Ljava.lang.String;@21a66d45,[Ljava.lang.String;@1f966492),Annotation([Ljava.lang.String;@63fdffcd,[Ljava.lang.String;@7428de63,[Ledu.cmu.lti.nlp.amr.Entity;@66f659e6))
AMR:
(下 / 下-07, manner, 不 / 不)
(下 / 下-07, prep-on-behalf, 人 / 人)
(住 / 住-01, ARG1, 不 / 不)

Decoded in 5,794 microseconds
Sentence: 小 王子 没有 勇气 承认 的 是 ： 他 留恋 这 颗 令 人 赞美 的 星星 ， 特别 是 因为 在 那里 每 二十四 小时 就 有 一千四百四十 次 日落 ！

Spans:
Span 13-14:  人 => 人
Span 8-9:  他 => 他
Span 3-4:  勇气 => 勇气
Span 21-22:  在 => 在-01
Span 0-1:  小 => 小
Span 25-26:  小时 => 小时
Span 26-27:  就 => 就-01
Span 4-5:  承认 => 承认-02
Span 30-31:  日落 => 日落
Span 16-17:  星星 => 星星
Span 19-20:  是 => 是-04
Span 6-7:  是 => 是-04
Span 27-28:  有 => 有-06
Span 23-24:  每 => 每
Span 18-19:  特别 => 特别
Span 1-2:  王子 => 王子
Span 9-10:  留恋 => 留恋-01
Span 14-15:  赞美 => 赞美-01
Span 10-11:  这 => 这
Span 22-23:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  人 => 人
Oracle Span 3-4:  勇气 => 勇气
Oracle Span 0-1:  小 => 小-01
Oracle Span 25-26:  小时 => (temporal-quantity :unit 小时)
Oracle Span 4-5:  承认 => 承认-01
Oracle Span 30-31:  日落 => 日落-01
Oracle Span 16-17:  星星 => 星星
Oracle Span 27-28:  有 => 有-01
Oracle Span 18-19:  特别 => 特别-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 9-10:  留恋 => 留恋-01
Oracle Span 14-15:  赞美 => 赞美-01
Oracle Span 10-11:  这 => 这
Oracle Span 22-23:  那里 => 那里

Incorrect span: 日落 => 日落
Incorrect span: 有 => 有-06
Extra span: 就 => 就-01
Incorrect span: 小时 => 小时
Extra span: 每 => 每
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Incorrect span: 特别 => 特别
Extra span: 他 => 他
Extra span: 是 => 是-04
Incorrect span: 承认 => 承认-02
Incorrect span: 小 => 小
Missing span: 有 => 有-01
Missing span: 承认 => 承认-01
Missing span: 日落 => 日落-01
Missing span: 小时 => (temporal-quantity :unit 小时)
Missing span: 特别 => 特别-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	top	_	_
3	没有	_	VE	VE	_	7	top	_	_
4	勇气	_	NN	NN	_	5	nsubj	_	_
5	承认	_	VV	VV	_	3	dep	_	_
6	的	_	DEC	DEC	_	3	cpm	_	_
7	是	_	VC	VC	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	留恋	_	VV	VV	_	7	ccomp	_	_
11	这	_	DT	DT	_	17	det	_	_
12	颗	_	M	M	_	11	clf	_	_
13	令	_	VV	VV	_	17	rcmod	_	_
14	人	_	NN	NN	_	13	dobj	_	_
15	赞美	_	VA	VA	_	13	dep	_	_
16	的	_	DEC	DEC	_	13	cpm	_	_
17	星星	_	NN	NN	_	10	dobj	_	_
18	,	_	PU	PU	_	7	punct	_	_
19	特别	_	AD	AD	_	20	advmod	_	_
20	是	_	VC	VC	_	7	conj	_	_
21	因为	_	P	P	_	20	prep	_	_
22	在	_	P	P	_	28	prep	_	_
23	那里	_	PN	PN	_	22	pobj	_	_
24	每	_	DT	DT	_	26	det	_	_
25	二十四	_	CD	CD	_	24	dep	_	_
26	小时	_	NN	NN	_	28	dobj	_	_
27	就	_	AD	AD	_	28	advmod	_	_
28	有	_	VE	VE	_	21	pccomp	_	_
29	一千四百四十	_	CD	CD	_	30	nummod	_	_
30	次	_	M	M	_	31	clf	_	_
31	日落	_	NN	NN	_	28	dobj	_	_
32	！	_	PU	PU	_	7	punct	_	_

Oracle:
(x28 / 有-01, arg0, x31 / 王子)
(x28 / 有-01, arg1, x33 / 勇气)
(x31 / 王子, mod, x32 / 小-01)
(x34 / 承认-01, instrument, x33 / 勇气)
(x48 / temporal-quantity, unit, x59 / 小时)
(x52 / 留恋-01, arg1, x54 / 星星)
(x54 / 星星, mod, x55 / 这)
(x56 / 赞美-01, arg0, x57 / 人)
(x56 / 赞美-01, arg1, x54 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(30,31,List(0),日落,日落,false), Span(27,28,List(1),有,有-06,false), Span(26,27,List(2),就,就-01,false), Span(25,26,List(3),小时,小时,false), Span(23,24,List(4),每,每,false), Span(22,23,List(5),那里,那里,false), Span(21,22,List(6),在,在-01,false), Span(19,20,List(7),是,是-04,false), Span(18,19,List(8),特别,特别,false), Span(16,17,List(9),星星,星星,false), Span(14,15,List(10),赞美,赞美-01,false), Span(13,14,List(11),人,人,false), Span(10,11,List(12),这,这,false), Span(9,10,List(13),留恋,留恋-01,false), Span(8,9,List(14),他,他,false), Span(6,7,List(15),是,是-04,false), Span(4,5,List(16),承认,承认-02,false), Span(3,4,List(17),勇气,勇气,false), Span(1,2,List(18),王子,王子,false), Span(0,1,List(19),小,小,false)),Map(2 -> 就-01, 5 -> 那里, 12 -> 这, 15 -> 是-04, 8 -> 特别, 18 -> 王子, 7 -> 是-04, 17 -> 勇气, 1 -> 有-06, 4 -> 每, 11 -> 人, 14 -> 他, 6 -> 在-01, 0 -> 日落, 9 -> 星星, 16 -> 承认-02, 19 -> 小, 3 -> 小时, 10 -> 赞美-01, 13 -> 留恋-01),Map(就 -> 就-01, 在 -> 在-01, 星 -> 星星, 这 -> 这, 王 -> 王子, 每 -> 每, 他 -> 他, 承 -> 承认-02, 小 -> 小时, 日 -> 日落, 赞 -> 赞美-01, 那 -> 那里, 留 -> 留恋-01, 特 -> 特别, 人 -> 人, 小2 -> 小, 是2 -> 是-04, 是 -> 是-04, 勇 -> 勇气, 有 -> 有-06))),[Ljava.lang.String;@4a68135e,Annotation([Ljava.lang.String;@46678e49,[Ljava.lang.String;@748e9b20,[Ljava.lang.String;@2063c53e),Annotation([Ljava.lang.String;@2a9bc08f,[Ljava.lang.String;@50f40653,[Ledu.cmu.lti.nlp.amr.Dependency;@50a3d0f6),Annotation([Ljava.lang.String;@6e57b5e9,[Ljava.lang.String;@1abc9f14,[Ljava.lang.String;@6a0ac48e),Annotation([Ljava.lang.String;@24e08d59,[Ljava.lang.String;@77cb9cd1,[Ledu.cmu.lti.nlp.amr.Entity;@971e903))
AMR:
(勇 / 勇气, mod, 小2 / 小)
(在 / 在-01, manner, 是 / 是-04)
(小 / 小时, mod, 每 / 每)
(小 / 小时, purpose, 就 / 就-01)
(承 / 承认-02, degree, 勇 / 勇气)
(日 / 日落, mod, 有 / 有-06)
(是 / 是-04, manner, 特 / 特别)
(是2 / 是-04, manner, 承 / 承认-02)
(是2 / 是-04, purpose, 留 / 留恋-01)
(有 / 有-06, manner, 就 / 就-01)
(每 / 每, mod, 在 / 在-01)
(特 / 特别, mod, 星 / 星星)
(王 / 王子, mod, 小2 / 小)
(留 / 留恋-01, poss, 他 / 他)
(留 / 留恋-01, value, 这 / 这)
(赞 / 赞美-01, purpose, 留 / 留恋-01)
(赞 / 赞美-01, value, 人 / 人)
(赞 / 赞美-01, value, 星 / 星星)
(那 / 那里, mod, 在 / 在-01)

Decoded in 126,873 microseconds
Sentence: XV 。

Spans:
Span 0-1:  XV => XV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XV => XV

Dependencies:
1	XV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XV,XV,false)),Map(0 -> XV),Map(x -> XV))),[Ljava.lang.String;@35636217,Annotation([Ljava.lang.String;@1549bba7,[Ljava.lang.String;@3e4f80cb,[Ljava.lang.String;@38704ff0),Annotation([Ljava.lang.String;@16ade133,[Ljava.lang.String;@4e61e4c2,[Ledu.cmu.lti.nlp.amr.Dependency;@c6a6c1d),Annotation([Ljava.lang.String;@36dfbdaf,[Ljava.lang.String;@4f82663e,[Ljava.lang.String;@e04ccf8),Annotation([Ljava.lang.String;@51d143a1,[Ljava.lang.String;@1a28aef1,[Ledu.cmu.lti.nlp.amr.Entity;@4647881c))
AMR:


Decoded in 1,306 microseconds
Sentence: 第六 颗 行星 则 要 大 十 倍 。

Spans:
Span 5-6:  大 => 大
Span 2-3:  行星 => 行星
Span 4-5:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  大 => 大-01
Oracle Span 2-3:  行星 => 行星
Oracle Span 4-5:  要 => 要-03

Incorrect span: 大 => 大
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 大 => 大-01
Dependencies:
1	第六	_	OD	OD	_	2	ordmod	_	_
2	颗	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	5	nsubj	_	_
4	则	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	0	root	_	_
6	大	_	JJ	JJ	_	8	amod	_	_
7	十	_	CD	CD	_	8	nummod	_	_
8	倍	_	M	M	_	5	range	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x5 / 要-03, arg0, x7 / 大-01)
(x7 / 大-01, arg0, x8 / 行星)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),大,大,false), Span(4,5,List(1),要,要-02,false), Span(2,3,List(2),行星,行星,false)),Map(2 -> 行星, 1 -> 要-02, 0 -> 大),Map(要 -> 要-02, 大 -> 大, 行 -> 行星))),[Ljava.lang.String;@6e0cff20,Annotation([Ljava.lang.String;@359b650b,[Ljava.lang.String;@6a9b0a6f,[Ljava.lang.String;@10667848),Annotation([Ljava.lang.String;@191a709b,[Ljava.lang.String;@77c7ed8e,[Ledu.cmu.lti.nlp.amr.Dependency;@453d496b),Annotation([Ljava.lang.String;@66bacdbc,[Ljava.lang.String;@2c6ee758,[Ljava.lang.String;@640dc4c6),Annotation([Ljava.lang.String;@4b54af3d,[Ljava.lang.String;@7bb35cc6,[Ledu.cmu.lti.nlp.amr.Entity;@203c20cf))
AMR:
(大 / 大, location, 行 / 行星)
(要 / 要-02, ARG6, 大 / 大)

Decoded in 6,505 microseconds
Sentence: 上面 住 着 一 位 老 先生 ， 他 在 写作 大部头 的 书 。

Spans:
Span 0-1:  上面 => 上面
Span 13-14:  书 => 书
Span 8-9:  他 => 他
Span 1-2:  住 => 住-01
Span 6-7:  先生 => 先生
Span 10-11:  写作 => 写作-01
Span 9-10:  在 => 在-01
Span 11-12:  大部头 => 大部头
Span 5-6:  老 => 老

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  上面 => 上面
Oracle Span 13-14:  书 => 书
Oracle Span 8-9:  他 => 他
Oracle Span 1-2:  住 => 住-01
Oracle Span 6-7:  先生 => 先生
Oracle Span 10-11:  写作 => 写作-01
Oracle Span 11-12:  大部头 => 大部头
Oracle Span 5-6:  老 => 老-01

Extra span: 在 => 在-01
Incorrect span: 老 => 老
Missing span: 老 => 老-01
Dependencies:
1	上面	_	NN	NN	_	2	nsubj	_	_
2	住	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	位	_	M	M	_	7	clf	_	_
6	老	_	JJ	JJ	_	7	amod	_	_
7	先生	_	NN	NN	_	2	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	他	_	PN	PN	_	11	nsubj	_	_
10	在	_	AD	AD	_	11	advmod	_	_
11	写作	_	VV	VV	_	2	conj	_	_
12	大部头	_	NN	NN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	书	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 住-01, arg0, x3 / 先生)
(x2 / 住-01, arg1, x5 / 上面)
(x3 / 先生, mod, x4 / 老-01)
(x7 / 写作-01, arg0, x8 / 他)
(x7 / 写作-01, arg1, x9 / 书)
(x9 / 书, mod, x10 / 大部头)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),书,书,false), Span(11,12,List(1),大部头,大部头,false), Span(10,11,List(2),写作,写作-01,false), Span(9,10,List(3),在,在-01,false), Span(8,9,List(4),他,他,false), Span(6,7,List(5),先生,先生,false), Span(5,6,List(6),老,老,false), Span(1,2,List(7),住,住-01,false), Span(0,1,List(8),上面,上面,false)),Map(2 -> 写作-01, 5 -> 先生, 8 -> 上面, 7 -> 住-01, 1 -> 大部头, 4 -> 他, 6 -> 老, 0 -> 书, 3 -> 在-01),Map(先 -> 先生, 写 -> 写作-01, 在 -> 在-01, 大 -> 大部头, 他 -> 他, 老 -> 老, 上 -> 上面, 书 -> 书, 住 -> 住-01))),[Ljava.lang.String;@2a1debfa,Annotation([Ljava.lang.String;@44de94c3,[Ljava.lang.String;@256aa5f2,[Ljava.lang.String;@6411d3c8),Annotation([Ljava.lang.String;@2116b68b,[Ljava.lang.String;@11de56e6,[Ledu.cmu.lti.nlp.amr.Dependency;@616b241a),Annotation([Ljava.lang.String;@b8e246c,[Ljava.lang.String;@1f387978,[Ljava.lang.String;@7cb2651f),Annotation([Ljava.lang.String;@4441d567,[Ljava.lang.String;@3e1624c7,[Ledu.cmu.lti.nlp.amr.Entity;@62b969c4))
AMR:
(书 / 书, mod, 大 / 大部头)
(住 / 住-01, prep-from, 上 / 上面)
(住 / 住-01, subset, 先 / 先生)
(先 / 先生, ARG5, 写 / 写作-01)
(先 / 先生, mod, 老 / 老)
(写 / 写作-01, ARG0, 书 / 书)
(写 / 写作-01, ARG6, 他 / 他)
(写 / 写作-01, manner, 在 / 在-01)

Decoded in 26,896 microseconds
Sentence: “ 瞧 ！

Spans:
Span 1-2:  瞧 => 瞧-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  瞧 => 瞧-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	瞧	_	VV	VV	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),瞧,瞧-01,false)),Map(0 -> 瞧-01),Map(瞧 -> 瞧-01))),[Ljava.lang.String;@dcc6211,Annotation([Ljava.lang.String;@47ec7422,[Ljava.lang.String;@48535004,[Ljava.lang.String;@610df783),Annotation([Ljava.lang.String;@f3fcd59,[Ljava.lang.String;@2b56f5f8,[Ledu.cmu.lti.nlp.amr.Dependency;@79d743e6),Annotation([Ljava.lang.String;@776802b0,[Ljava.lang.String;@64c4c01,[Ljava.lang.String;@1aa99005),Annotation([Ljava.lang.String;@592238c5,[Ljava.lang.String;@6ee8dcd3,[Ledu.cmu.lti.nlp.amr.Entity;@a20b94b))
AMR:


Decoded in 1,472 microseconds
Sentence: 来 了 一 位 探险家 。 ” 老 先生 看到 小 王子 时 ， 叫 了 起来 。

Spans:
Span 8-9:  先生 => 先生
Span 14-15:  叫 => 叫-06
Span 10-11:  小 => 小
Span 4-5:  探险家 => 探险家
Span 0-1:  来 => 来-06
Span 11-12:  王子 => 王子
Span 9-10:  看到 => (thing :arg1-of 看到-01)
Span 7-8:  老 => 老

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 在 桌 旁 坐下 ， 有 点 气喘吁吁 。

Spans:
Span 2-3:  在 => 在-01
Span 5-6:  坐下 => 坐下-01
Span 0-1:  小 => 小
Span 4-5:  旁 => 旁
Span 7-8:  有 => 有-06
Span 3-4:  桌 => 桌
Span 9-10:  气喘吁吁 => 气喘吁吁-01
Span 8-9:  点 => 点
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  坐下 => 坐下-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 4-5:  旁 => 旁
Oracle Span 3-4:  桌 => 桌
Oracle Span 9-10:  气喘吁吁 => 气喘吁吁-01
Oracle Span 1-2:  王子 => 王子

Extra span: 点 => 点
Extra span: 有 => 有-06
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	在	_	P	P	_	6	prep	_	_
4	桌	_	NN	NN	_	5	lobj	_	_
5	旁	_	LC	LC	_	3	plmod	_	_
6	坐下	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	有	_	VE	VE	_	6	ccomp	_	_
9	点	_	M	M	_	10	dep	_	_
10	气喘吁吁	_	NN	NN	_	8	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 坐下-01, arg0, x11 / 王子)
(x10 / 坐下-01, location, x13 / 旁)
(x11 / 王子, mod, x12 / 小-01)
(x13 / 旁, location, x14 / 桌)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),气喘吁吁,气喘吁吁-01,false), Span(8,9,List(1),点,点,false), Span(7,8,List(2),有,有-06,false), Span(5,6,List(3),坐下,坐下-01,false), Span(4,5,List(4),旁,旁,false), Span(3,4,List(5),桌,桌,false), Span(2,3,List(6),在,在-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 有-06, 5 -> 桌, 8 -> 小, 7 -> 王子, 1 -> 点, 4 -> 旁, 6 -> 在-01, 0 -> 气喘吁吁-01, 3 -> 坐下-01),Map(在 -> 在-01, 王 -> 王子, 气 -> 气喘吁吁-01, 小 -> 小, 旁 -> 旁, 点 -> 点, 坐 -> 坐下-01, 桌 -> 桌, 有 -> 有-06))),[Ljava.lang.String;@14f3c6fc,Annotation([Ljava.lang.String;@3cd59ef5,[Ljava.lang.String;@33b082c5,[Ljava.lang.String;@16073fa8),Annotation([Ljava.lang.String;@1cc9cfb2,[Ljava.lang.String;@cfbc8e8,[Ledu.cmu.lti.nlp.amr.Dependency;@3bead518),Annotation([Ljava.lang.String;@14bf57b2,[Ljava.lang.String;@46d9aec8,[Ljava.lang.String;@14379273),Annotation([Ljava.lang.String;@7918c7f8,[Ljava.lang.String;@17740dae,[Ledu.cmu.lti.nlp.amr.Entity;@1c504e66))
AMR:
(坐 / 坐下-01, ARG4, 有 / 有-06)
(坐 / 坐下-01, location, 旁 / 旁)
(旁 / 旁, location, 桌 / 桌)
(有 / 有-06, ARG1, 点 / 点)
(桌 / 桌, manner, 在 / 在-01)
(气 / 气喘吁吁-01, quant, 点 / 点)
(王 / 王子, ARG1, 在 / 在-01)
(王 / 王子, mod, 小 / 小)

Decoded in 24,806 microseconds
Sentence: 他 跑 了 多少 路 啊 ！

Spans:
Span 0-1:  他 => 他
Span 5-6:  啊 => 啊
Span 3-4:  多少 => 多少
Span 1-2:  跑 => 跑-01
Span 4-5:  路 => 路

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  多少 => 多少
Oracle Span 1-2:  跑 => 跑-01
Oracle Span 4-5:  路 => 路

Extra span: 啊 => 啊
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	跑	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	多少	_	CD	CD	_	5	nummod	_	_
5	路	_	M	M	_	2	dep	_	_
6	啊	_	SP	SP	_	2	dep	_	_
7	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 跑-01, arg0, x2 / 他)
(x0 / 跑-01, arg1, x4 / 路)
(x4 / 路, mod, x5 / 多少)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),啊,啊,false), Span(4,5,List(1),路,路,false), Span(3,4,List(2),多少,多少,false), Span(1,2,List(3),跑,跑-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 多少, 1 -> 路, 4 -> 他, 0 -> 啊, 3 -> 跑-01),Map(啊 -> 啊, 路 -> 路, 跑 -> 跑-01, 他 -> 他, 多 -> 多少))),[Ljava.lang.String;@345cf395,Annotation([Ljava.lang.String;@bc4d5e1,[Ljava.lang.String;@3c6aa04a,[Ljava.lang.String;@2257fadf),Annotation([Ljava.lang.String;@7144655b,[Ljava.lang.String;@5c82cd4f,[Ledu.cmu.lti.nlp.amr.Dependency;@35835e65),Annotation([Ljava.lang.String;@289fdb08,[Ljava.lang.String;@7a231dfd,[Ljava.lang.String;@30814f43),Annotation([Ljava.lang.String;@1fde4f40,[Ljava.lang.String;@49cf9028,[Ledu.cmu.lti.nlp.amr.Entity;@2b61a019))
AMR:
(啊 / 啊, manner, 路 / 路)
(跑 / 跑-01, manner, 他 / 他)
(跑 / 跑-01, topic, 多 / 多少)
(路 / 路, mod, 多 / 多少)

Decoded in 9,507 microseconds
Sentence: “ 你 从 哪里 来 的 呀 ？ ” 老 先生 问 小 王子 。

Spans:
Span 1-2:  你 => 你
Span 10-11:  先生 => 先生
Span 12-13:  小 => 小
Span 4-5:  来 => 来-06
Span 13-14:  王子 => 王子
Span 9-10:  老 => 老
Span 11-12:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 10-11:  先生 => 先生
Oracle Span 12-13:  小 => 小-01
Oracle Span 4-5:  来 => 来-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 9-10:  老 => 老-01
Oracle Span 11-12:  问 => 问-01

Incorrect span: 小 => 小
Incorrect span: 老 => 老
Incorrect span: 来 => 来-06
Missing span: 小 => 小-01
Missing span: 来 => 来-01
Missing span: 老 => 老-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	dep	_	_
3	从	_	P	P	_	4	prep	_	_
4	哪里	_	VV	VV	_	11	vmod	_	_
5	来	_	VV	VV	_	4	ccomp	_	_
6	的	_	DEC	DEC	_	5	dep	_	_
7	呀	_	SP	SP	_	5	dep	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	老	_	JJ	JJ	_	11	amod	_	_
11	先生	_	NN	NN	_	12	nsubj	_	_
12	问	_	VV	VV	_	0	root	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	12	ccomp	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 先生)
(x0 / 问-01, arg1, x4 / 来-01)
(x0 / 问-01, arg2, x7 / 王子)
(x2 / 先生, mod, x3 / 老-01)
(x4 / 来-01, arg0, x5 / 你)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),王子,王子,false), Span(12,13,List(1),小,小,false), Span(11,12,List(2),问,问-01,false), Span(10,11,List(3),先生,先生,false), Span(9,10,List(4),老,老,false), Span(4,5,List(5),来,来-06,false), Span(1,2,List(6),你,你,false)),Map(2 -> 问-01, 5 -> 来-06, 1 -> 小, 4 -> 老, 6 -> 你, 0 -> 王子, 3 -> 先生),Map(先 -> 先生, 来 -> 来-06, 你 -> 你, 王 -> 王子, 小 -> 小, 老 -> 老, 问 -> 问-01))),[Ljava.lang.String;@11a00961,Annotation([Ljava.lang.String;@7ce9e05a,[Ljava.lang.String;@4992613f,[Ljava.lang.String;@6fd5717c),Annotation([Ljava.lang.String;@7e2f86e6,[Ljava.lang.String;@4d774249,[Ledu.cmu.lti.nlp.amr.Dependency;@17b64941),Annotation([Ljava.lang.String;@53ac845a,[Ljava.lang.String;@5136207f,[Ljava.lang.String;@26a4551a),Annotation([Ljava.lang.String;@3fdecce,[Ljava.lang.String;@344426bf,[Ledu.cmu.lti.nlp.amr.Entity;@5411dd90))
AMR:
(先 / 先生, mod, 老 / 老)
(小 / 小, degree, 问 / 问-01)
(来 / 来-06, domain, 你 / 你)
(王 / 王子, mod, 小 / 小)
(老 / 老, mod, 来 / 来-06)
(问 / 问-01, manner, 先 / 先生)

Decoded in 17,057 microseconds
Sentence: “ 这 一 大 本 是 什么 书 ？ 小 王子 问道 。

Spans:
Span 7-8:  书 => 书
Span 6-7:  什么 => 什么
Span 3-4:  大 => 大
Span 9-10:  小 => 小
Span 5-6:  是 => 是-04
Span 4-5:  本 => 本
Span 10-11:  王子 => 王子
Span 1-2:  这 => 这
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  书 => 书
Oracle Span 3-4:  大 => 大-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 1-2:  这 => 这
Oracle Span 11-12:  问道 => 问道-01

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Extra span: 本 => 本
Incorrect span: 大 => 大
Missing span: 大 => 大-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	DT	DT	_	6	top	_	_
3	一	_	CD	CD	_	5	nummod	_	_
4	大	_	JJ	JJ	_	5	amod	_	_
5	本	_	M	M	_	2	dep	_	_
6	是	_	VC	VC	_	0	root	_	_
7	什么	_	DT	DT	_	8	det	_	_
8	书	_	NN	NN	_	6	attr	_	_
9	？	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VV	VV	_	6	dep	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 书)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 书, mod, x11 / 这)
(x4 / 书, mod, x13 / 大-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(10,11,List(1),王子,王子,false), Span(9,10,List(2),小,小,false), Span(7,8,List(3),书,书,false), Span(6,7,List(4),什么,什么,false), Span(5,6,List(5),是,是-04,false), Span(4,5,List(6),本,本,false), Span(3,4,List(7),大,大,false), Span(1,2,List(8),这,这,false)),Map(2 -> 小, 5 -> 是-04, 8 -> 这, 7 -> 大, 1 -> 王子, 4 -> 什么, 6 -> 本, 0 -> 问道-01, 3 -> 书),Map(本 -> 本, 这 -> 这, 大 -> 大, 王 -> 王子, 小 -> 小, 什 -> 什么, 书 -> 书, 问 -> 问道-01, 是 -> 是-04))),[Ljava.lang.String;@50194e8d,Annotation([Ljava.lang.String;@3cee53dc,[Ljava.lang.String;@290aeb20,[Ljava.lang.String;@73ad4ecc),Annotation([Ljava.lang.String;@69da0b12,[Ljava.lang.String;@2764c546,[Ledu.cmu.lti.nlp.amr.Dependency;@59496961),Annotation([Ljava.lang.String;@408b87aa,[Ljava.lang.String;@79b08632,[Ljava.lang.String;@787f32b7),Annotation([Ljava.lang.String;@6aef4eb8,[Ljava.lang.String;@76c52298,[Ledu.cmu.lti.nlp.amr.Entity;@bb9ab64))
AMR:
(书 / 书, mod, 什 / 什么)
(书 / 书, mod, 小 / 小)
(书 / 书, mod, 是 / 是-04)
(大 / 大, mod, 这 / 这)
(是 / 是-04, manner, 本 / 本)
(本 / 本, mod, 大 / 大)
(王 / 王子, mod, 小 / 小)
(问 / 问道-01, ARG3, 王 / 王子)

Decoded in 24,834 microseconds
Sentence: 你 在 这里 干 什么 ？ ”

Spans:
Span 4-5:  什么 => 什么
Span 0-1:  你 => 你
Span 1-2:  在 => 在-01
Span 3-4:  干 => (thing :arg1-of 干-01)
Span 2-3:  这里 => 这里

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我 是 地理学家 。 ” 老 先生 答道 。

Spans:
Span 7-8:  先生 => 先生
Span 3-4:  地理学家 => 地理学家
Span 1-2:  我 => 我
Span 2-3:  是 => 是-04
Span 6-7:  老 => 老

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  先生 => 先生
Oracle Span 3-4:  地理学家 => 地理学家
Oracle Span 6-7:  老 => 老-01

Incorrect span: 老 => 老
Extra span: 是 => 是-04
Extra span: 我 => 我
Missing span: 老 => 老-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	地理学家	_	VV	VV	_	8	vmod	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	老	_	JJ	JJ	_	8	amod	_	_
8	先生	_	NN	NN	_	9	nsubj	_	_
9	答道	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x4 / 先生, mod, x5 / 老-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),先生,先生,false), Span(6,7,List(1),老,老,false), Span(3,4,List(2),地理学家,地理学家,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),我,我,false)),Map(2 -> 地理学家, 1 -> 老, 4 -> 我, 0 -> 先生, 3 -> 是-04),Map(先 -> 先生, 我 -> 我, 地 -> 地理学家, 老 -> 老, 是 -> 是-04))),[Ljava.lang.String;@1ad8df52,Annotation([Ljava.lang.String;@45d6ef73,[Ljava.lang.String;@3f29e26,[Ljava.lang.String;@1f6d27cc),Annotation([Ljava.lang.String;@4393593c,[Ljava.lang.String;@314c8b4a,[Ledu.cmu.lti.nlp.amr.Dependency;@26d820eb),Annotation([Ljava.lang.String;@507d20bb,[Ljava.lang.String;@9fec931,[Ljava.lang.String;@5cbd159f),Annotation([Ljava.lang.String;@3b05a99b,[Ljava.lang.String;@2c43eb8,[Ledu.cmu.lti.nlp.amr.Entity;@7d0cc890))
AMR:
(先 / 先生, mod, 老 / 老)
(是 / 是-04, beneficiary, 我 / 我)
(是 / 是-04, example, 地 / 地理学家)
(老 / 老, topic, 是 / 是-04)

Decoded in 8,705 microseconds
Sentence: “ 什么 是 地理学家 ？ ”

Spans:
Span 1-2:  什么 => 什么
Span 3-4:  地理学家 => 地理学家
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  地理学家 => 地理学家

Extra span: 是 => 是-04
Extra span: 什么 => 什么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	地理学家	_	NN	NN	_	3	attr	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),地理学家,地理学家,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 是-04, 0 -> 地理学家),Map(地 -> 地理学家, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@49293b43,Annotation([Ljava.lang.String;@5ff60a8c,[Ljava.lang.String;@7ce4de34,[Ljava.lang.String;@67b7c170),Annotation([Ljava.lang.String;@67440de6,[Ljava.lang.String;@889d9e8,[Ledu.cmu.lti.nlp.amr.Dependency;@5246a3b3),Annotation([Ljava.lang.String;@ba354ca,[Ljava.lang.String;@4c4f4365,[Ljava.lang.String;@acf859d),Annotation([Ljava.lang.String;@6df3e44c,[Ljava.lang.String;@7ce7e83c,[Ledu.cmu.lti.nlp.amr.Entity;@4a05d8ae))
AMR:
(是 / 是-04, example, 地 / 地理学家)
(是 / 是-04, mod, 什 / 什么)

Decoded in 4,466 microseconds
Sentence: “ 地理学家 ， 就 是 一 种 学者 ， 他 知道 哪里 有 海洋 ， 哪里 有 江河 、 城市 、 山脉 、 沙漠 。 ”

Spans:
Span 9-10:  他 => 他
Span 1-2:  地理学家 => 地理学家
Span 19-20:  城市 => 城市
Span 7-8:  学者 => 学者
Span 3-4:  就 => 就-01
Span 21-22:  山脉 => 山脉
Span 4-5:  是 => 是-04
Span 16-17:  有 => 有-06
Span 12-13:  有 => 有-06
Span 17-18:  江河 => 江河
Span 23-24:  沙漠 => 沙漠
Span 13-14:  海洋 => 海洋
Span 10-11:  知道 => 知道-01
Span 6-7:  种 => 种

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  地理学家 => 地理学家
Oracle Span 19-20:  城市 => 城市
Oracle Span 7-8:  学者 => 学者
Oracle Span 21-22:  山脉 => 山脉
Oracle Span 17-18:  江河 => 江河
Oracle Span 23-24:  沙漠 => 沙漠
Oracle Span 13-14:  海洋 => 海洋
Oracle Span 10-11:  知道 => 知道-01

Extra span: 有 => 有-06
Extra span: 有 => 有-06
Extra span: 他 => 他
Extra span: 种 => 种
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	地理学家	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	种	_	M	M	_	8	clf	_	_
8	学者	_	NN	NN	_	5	attr	_	_
9	,	_	PU	PU	_	5	punct	_	_
10	他	_	PN	PN	_	11	nsubj	_	_
11	知道	_	VV	VV	_	5	conj	_	_
12	哪里	_	AD	AD	_	13	advmod	_	_
13	有	_	VE	VE	_	11	ccomp	_	_
14	海洋	_	NN	NN	_	13	dobj	_	_
15	,	_	PU	PU	_	13	punct	_	_
16	哪里	_	AD	AD	_	17	advmod	_	_
17	有	_	VE	VE	_	13	dep	_	_
18	江河	_	NN	NN	_	24	conj	_	_
19	、	_	PU	PU	_	24	punct	_	_
20	城市	_	NN	NN	_	24	conj	_	_
21	、	_	PU	PU	_	24	punct	_	_
22	山脉	_	NN	NN	_	24	conj	_	_
23	、	_	PU	PU	_	24	punct	_	_
24	沙漠	_	NN	NN	_	17	dobj	_	_
25	。	_	PU	PU	_	5	punct	_	_
26	”	_	PU	PU	_	5	punct	_	_
27	他	_	PN	PN	_	13	xsubj	_	_

Oracle:
(x37 / 学者, domain, x39 / 地理学家)
(x40 / 知道-01, arg0, x39 / 地理学家)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),沙漠,沙漠,false), Span(21,22,List(1),山脉,山脉,false), Span(19,20,List(2),城市,城市,false), Span(17,18,List(3),江河,江河,false), Span(16,17,List(4),有,有-06,false), Span(13,14,List(5),海洋,海洋,false), Span(12,13,List(6),有,有-06,false), Span(10,11,List(7),知道,知道-01,false), Span(9,10,List(8),他,他,false), Span(7,8,List(9),学者,学者,false), Span(6,7,List(10),种,种,false), Span(4,5,List(11),是,是-04,false), Span(3,4,List(12),就,就-01,false), Span(1,2,List(13),地理学家,地理学家,false)),Map(2 -> 城市, 5 -> 海洋, 12 -> 就-01, 8 -> 他, 7 -> 知道-01, 1 -> 山脉, 4 -> 有-06, 11 -> 是-04, 6 -> 有-06, 0 -> 沙漠, 9 -> 学者, 3 -> 江河, 10 -> 种, 13 -> 地理学家),Map(就 -> 就-01, 有2 -> 有-06, 江 -> 江河, 海 -> 海洋, 他 -> 他, 地 -> 地理学家, 城 -> 城市, 种 -> 种, 山 -> 山脉, 沙 -> 沙漠, 知 -> 知道-01, 是 -> 是-04, 学 -> 学者, 有 -> 有-06))),[Ljava.lang.String;@3c904f1e,Annotation([Ljava.lang.String;@4eb30d44,[Ljava.lang.String;@d56aaa6,[Ljava.lang.String;@6972c30a),Annotation([Ljava.lang.String;@57a48985,[Ljava.lang.String;@1ab6718,[Ledu.cmu.lti.nlp.amr.Dependency;@3910fe11),Annotation([Ljava.lang.String;@460510aa,[Ljava.lang.String;@351e414e,[Ljava.lang.String;@6fd77352),Annotation([Ljava.lang.String;@5109e8cf,[Ljava.lang.String;@3f672204,[Ledu.cmu.lti.nlp.amr.Entity;@78b41097))
AMR:
(城 / 城市, location, 有 / 有-06)
(学 / 学者, mod, 种 / 种)
(学 / 学者, purpose, 有2 / 有-06)
(山 / 山脉, location, 有 / 有-06)
(山 / 山脉, location, 沙 / 沙漠)
(是 / 是-04, example, 地 / 地理学家)
(是 / 是-04, manner, 就 / 就-01)
(有2 / 有-06, purpose, 有 / 有-06)
(江 / 江河, mod, 有 / 有-06)
(海 / 海洋, mod, 有2 / 有-06)
(知 / 知道-01, direction, 他 / 他)
(知 / 知道-01, prep-through, 有2 / 有-06)
(种 / 种, mod, 是 / 是-04)

Decoded in 64,572 microseconds
Sentence: “ 这 倒 挺 有 意思 。 ” 小 王子 说 。

Spans:
Span 2-3:  倒 => 倒-02
Span 8-9:  小 => 小
Span 5-6:  意思 => 意思-01
Span 3-4:  挺 => 挺
Span 4-5:  有 => 有-06
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  倒 => 倒
Oracle Span 8-9:  小 => 小-01
Oracle Span 5-6:  意思 => 意思
Oracle Span 3-4:  挺 => 挺
Oracle Span 4-5:  有 => 有-05
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 意思 => 意思-01
Incorrect span: 有 => 有-06
Incorrect span: 倒 => 倒-02
Missing span: 说 => 说-01
Missing span: 有 => 有-05
Missing span: 倒 => 倒
Missing span: 意思 => 意思
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	倒	_	AD	AD	_	5	advmod	_	_
4	挺	_	VV	VV	_	5	mmod	_	_
5	有	_	VE	VE	_	11	dep	_	_
6	意思	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 有-05)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 有-05, arg0, x5 / 这)
(x4 / 有-05, arg1, x6 / 意思)
(x4 / 有-05, manner, x7 / 挺)
(x4 / 有-05, manner, x8 / 倒)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),王子,王子,false), Span(8,9,List(2),小,小,false), Span(5,6,List(3),意思,意思-01,false), Span(4,5,List(4),有,有-06,false), Span(3,4,List(5),挺,挺,false), Span(2,3,List(6),倒,倒-02,false), Span(1,2,List(7),这,这,false)),Map(2 -> 小, 5 -> 挺, 7 -> 这, 1 -> 王子, 4 -> 有-06, 6 -> 倒-02, 0 -> 说-02, 3 -> 意思-01),Map(挺 -> 挺, 这 -> 这, 王 -> 王子, 意 -> 意思-01, 小 -> 小, 说 -> 说-02, 倒 -> 倒-02, 有 -> 有-06))),[Ljava.lang.String;@2c2db130,Annotation([Ljava.lang.String;@327c7bea,[Ljava.lang.String;@348d18a3,[Ljava.lang.String;@6c65860d),Annotation([Ljava.lang.String;@2d000e80,[Ljava.lang.String;@7cf283e1,[Ledu.cmu.lti.nlp.amr.Dependency;@20e6c4dc),Annotation([Ljava.lang.String;@60737b23,[Ljava.lang.String;@4d2a1da3,[Ljava.lang.String;@252f626c),Annotation([Ljava.lang.String;@33f98231,[Ljava.lang.String;@48284d0e,[Ledu.cmu.lti.nlp.amr.Entity;@557286ad))
AMR:
(倒 / 倒-02, mod, 这 / 这)
(倒 / 倒-02, purpose, 有 / 有-06)
(意 / 意思-01, degree, 有 / 有-06)
(有 / 有-06, manner, 挺 / 挺)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 意 / 意思-01)

Decoded in 21,301 microseconds
Sentence: “ 这 才 是 一 种 真正 的 行当 。 ”

Spans:
Span 2-3:  才 => 才
Span 3-4:  是 => 是-04
Span 6-7:  真正 => 真正
Span 5-6:  种 => 种
Span 8-9:  行当 => 行当
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  才 => 才
Oracle Span 6-7:  真正 => 真正-01
Oracle Span 8-9:  行当 => 行当
Oracle Span 1-2:  这 => 这

Incorrect span: 真正 => 真正
Extra span: 种 => 种
Extra span: 是 => 是-04
Missing span: 真正 => 真正-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	才	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	9	clf	_	_
7	真正	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	行当	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x9 / 行当, domain, x12 / 这)
(x9 / 行当, manner, x13 / 才)
(x9 / 行当, mod, x10 / 真正-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),行当,行当,false), Span(6,7,List(1),真正,真正,false), Span(5,6,List(2),种,种,false), Span(3,4,List(3),是,是-04,false), Span(2,3,List(4),才,才,false), Span(1,2,List(5),这,这,false)),Map(2 -> 种, 5 -> 这, 1 -> 真正, 4 -> 才, 0 -> 行当, 3 -> 是-04),Map(才 -> 才, 这 -> 这, 种 -> 种, 行 -> 行当, 是 -> 是-04, 真 -> 真正))),[Ljava.lang.String;@b10a26d,Annotation([Ljava.lang.String;@74075134,[Ljava.lang.String;@7e4d2287,[Ljava.lang.String;@3f4b840d),Annotation([Ljava.lang.String;@31464a43,[Ljava.lang.String;@7f8633ae,[Ledu.cmu.lti.nlp.amr.Dependency;@68c87fc3),Annotation([Ljava.lang.String;@bc0f53b,[Ljava.lang.String;@8d7b252,[Ljava.lang.String;@4682eba5),Annotation([Ljava.lang.String;@6d9fb2d1,[Ljava.lang.String;@61fafb74,[Ledu.cmu.lti.nlp.amr.Entity;@540a903b))
AMR:
(是 / 是-04, manner, 才 / 才)
(是 / 是-04, mod, 这 / 这)
(真 / 真正, mod, 种 / 种)
(种 / 种, mod, 是 / 是-04)
(行 / 行当, manner, 真 / 真正)

Decoded in 12,565 microseconds
Sentence: 他 朝 四周围 看 了 看 这 位 地理学家 的 星球 。

Spans:
Span 0-1:  他 => 他
Span 2-3:  四周围 => 四周围
Span 8-9:  地理学家 => 地理学家
Span 10-11:  星球 => 星球
Span 5-6:  看 => 看-10
Span 3-4:  看 => 看-10
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  四周围 => 四周围
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 10-11:  星球 => 星球
Oracle Span 3-4:  看 => 看-02
Oracle Span 6-7:  这 => 这

Extra span: 看 => 看-10
Incorrect span: 看 => 看-10
Missing span: 看 => 看-02
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	朝	_	P	P	_	4	prep	_	_
3	四周围	_	CD	CD	_	2	pobj	_	_
4	看	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	看	_	VV	VV	_	4	dep	_	_
7	这	_	DT	DT	_	9	det	_	_
8	位	_	M	M	_	7	clf	_	_
9	地理学家	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	星球	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 看-02, arg0, x4 / 他)
(x2 / 看-02, arg1, x6 / 星球)
(x2 / 看-02, direction, x5 / 四周围)
(x6 / 星球, poss, x7 / 地理学家)
(x7 / 地理学家, mod, x8 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),星球,星球,false), Span(8,9,List(1),地理学家,地理学家,false), Span(6,7,List(2),这,这,false), Span(5,6,List(3),看,看-10,false), Span(3,4,List(4),看,看-10,false), Span(2,3,List(5),四周围,四周围,false), Span(0,1,List(6),他,他,false)),Map(2 -> 这, 5 -> 四周围, 1 -> 地理学家, 4 -> 看-10, 6 -> 他, 0 -> 星球, 3 -> 看-10),Map(四 -> 四周围, 星 -> 星球, 看2 -> 看-10, 这 -> 这, 他 -> 他, 地 -> 地理学家, 看 -> 看-10))),[Ljava.lang.String;@58496dc,Annotation([Ljava.lang.String;@151db587,[Ljava.lang.String;@238acd0b,[Ljava.lang.String;@23811a09),Annotation([Ljava.lang.String;@2125ad3,[Ljava.lang.String;@7a5b769b,[Ledu.cmu.lti.nlp.amr.Dependency;@f4c0e4e),Annotation([Ljava.lang.String;@24361cfc,[Ljava.lang.String;@34e20e6b,[Ljava.lang.String;@15ac59c2),Annotation([Ljava.lang.String;@7a7d1b47,[Ljava.lang.String;@6eb82908,[Ledu.cmu.lti.nlp.amr.Entity;@4a8df3e2))
AMR:
(地 / 地理学家, mod, 这 / 这)
(星 / 星球, poss, 地 / 地理学家)
(看 / 看-10, manner, 看2 / 看-10)
(看 / 看-10, prep-on-behalf, 星 / 星球)
(看2 / 看-10, direction, 四 / 四周围)
(看2 / 看-10, season, 他 / 他)

Decoded in 17,083 microseconds
Sentence: 他 还 从来 没有 见 过 一 颗 如此 壮观 的 行星 。

Spans:
Span 2-3:  从来 => 从来
Span 0-1:  他 => 他
Span 9-10:  壮观 => 壮观-01
Span 8-9:  如此 => 如此
Span 11-12:  行星 => 行星
Span 4-5:  见 => 见-01
Span 5-6:  过 => 过-01
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  壮观 => 壮观-01
Oracle Span 8-9:  如此 => 如此
Oracle Span 11-12:  行星 => 行星
Oracle Span 4-5:  见 => 见-01
Oracle Span 1-2:  还 => 还

Extra span: 过 => 过-01
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	没有	_	VV	VV	_	5	neg	_	_
5	见	_	VV	VV	_	0	root	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	颗	_	M	M	_	12	clf	_	_
9	如此	_	AD	AD	_	10	advmod	_	_
10	壮观	_	VA	VA	_	12	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	行星	_	NN	NN	_	5	dobj	_	_
13	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 壮观-01, degree, x11 / 如此)
(x2 / 见-01, arg0, x7 / 他)
(x2 / 见-01, arg1, x8 / 行星)
(x2 / 见-01, manner, x6 / 还)
(x2 / 见-01, time, x12 / 从来)
(x8 / 行星, mod, x10 / 壮观-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),行星,行星,false), Span(9,10,List(1),壮观,壮观-01,false), Span(8,9,List(2),如此,如此,false), Span(5,6,List(3),过,过-01,false), Span(4,5,List(4),见,见-01,false), Span(2,3,List(5),从来,从来,false), Span(1,2,List(6),还,还,false), Span(0,1,List(7),他,他,false)),Map(2 -> 如此, 5 -> 从来, 7 -> 他, 1 -> 壮观-01, 4 -> 见-01, 6 -> 还, 0 -> 行星, 3 -> 过-01),Map(从 -> 从来, 过 -> 过-01, 他 -> 他, 壮 -> 壮观-01, 还 -> 还, 行 -> 行星, 见 -> 见-01, 如 -> 如此))),[Ljava.lang.String;@3d98d138,Annotation([Ljava.lang.String;@2f2d52ef,[Ljava.lang.String;@f2ce6b,[Ljava.lang.String;@25c53f74),Annotation([Ljava.lang.String;@5e2f3be5,[Ljava.lang.String;@1bd0b0e5,[Ledu.cmu.lti.nlp.amr.Dependency;@dc7b462),Annotation([Ljava.lang.String;@1f51431,[Ljava.lang.String;@26a2f7f9,[Ljava.lang.String;@38eb2c50),Annotation([Ljava.lang.String;@8bffb8b,[Ljava.lang.String;@21422231,[Ledu.cmu.lti.nlp.amr.Entity;@10ee04df))
AMR:
(壮 / 壮观-01, degree, 如 / 如此)
(行 / 行星, mod, 壮 / 壮观-01)
(见 / 见-01, ARG1, 过 / 过-01)
(见 / 见-01, prep-from, 行 / 行星)
(见 / 见-01, time, 从 / 从来)
(过 / 过-01, ARG3, 他 / 他)
(过 / 过-01, ARG4, 还 / 还)

Decoded in 23,528 microseconds
Sentence: “ 您 的 星球 真 美 呀 。

Spans:
Span 1-2:  您 => 您
Span 3-4:  星球 => 星球
Span 4-5:  真 => 真
Span 5-6:  美 => 美-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  您 => 您
Oracle Span 3-4:  星球 => 星球
Oracle Span 4-5:  真 => 真
Oracle Span 5-6:  美 => 美-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	您	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	星球	_	NN	NN	_	5	nsubj	_	_
5	真	_	NN	NN	_	0	root	_	_
6	美	_	NR	NR	_	5	dobj	_	_
7	呀	_	SP	SP	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 星球, poss, x11 / 您)
(x8 / 美-01, arg0, x10 / 星球)
(x8 / 美-01, degree, x9 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),美,美-01,false), Span(4,5,List(1),真,真,false), Span(3,4,List(2),星球,星球,false), Span(1,2,List(3),您,您,false)),Map(2 -> 星球, 1 -> 真, 0 -> 美-01, 3 -> 您),Map(美 -> 美-01, 星 -> 星球, 您 -> 您, 真 -> 真))),[Ljava.lang.String;@7186333e,Annotation([Ljava.lang.String;@692fd26,[Ljava.lang.String;@36f1046f,[Ljava.lang.String;@56d93692),Annotation([Ljava.lang.String;@1686f0b4,[Ljava.lang.String;@76c548f,[Ledu.cmu.lti.nlp.amr.Dependency;@3900fa71),Annotation([Ljava.lang.String;@26722665,[Ljava.lang.String;@7d0614f,[Ljava.lang.String;@627d8516),Annotation([Ljava.lang.String;@5c10285a,[Ljava.lang.String;@6b667cb3,[Ledu.cmu.lti.nlp.amr.Entity;@6f38a289))
AMR:
(星 / 星球, poss, 您 / 您)
(美 / 美-01, degree, 真 / 真)
(美 / 美-01, time, 星 / 星球)

Decoded in 6,547 microseconds
Sentence: 上面 有 海洋 吗 ？ ”

Spans:
Span 0-1:  上面 => 上面
Span 1-2:  有 => 有-06
Span 2-3:  海洋 => 海洋

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  上面 => 上面
Oracle Span 1-2:  有 => 有-03
Oracle Span 2-3:  海洋 => 海洋

Incorrect span: 有 => 有-06
Missing span: 有 => 有-03
Dependencies:
1	上面	_	NN	NN	_	2	nsubj	_	_
2	有	_	VE	VE	_	0	root	_	_
3	海洋	_	NN	NN	_	2	dep	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x9 / 有-03, arg0, x10 / 上面)
(x9 / 有-03, arg1, x11 / 海洋)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),海洋,海洋,false), Span(1,2,List(1),有,有-06,false), Span(0,1,List(2),上面,上面,false)),Map(2 -> 上面, 1 -> 有-06, 0 -> 海洋),Map(海 -> 海洋, 上 -> 上面, 有 -> 有-06))),[Ljava.lang.String;@61e3cf4d,Annotation([Ljava.lang.String;@3cec79d3,[Ljava.lang.String;@64b70919,[Ljava.lang.String;@4e31c3ec),Annotation([Ljava.lang.String;@3157e4c0,[Ljava.lang.String;@6eaa21d8,[Ledu.cmu.lti.nlp.amr.Dependency;@328902d5),Annotation([Ljava.lang.String;@72e789cb,[Ljava.lang.String;@7c1812b3,[Ljava.lang.String;@43034809),Annotation([Ljava.lang.String;@39e67516,[Ljava.lang.String;@77010a30,[Ledu.cmu.lti.nlp.amr.Entity;@4bb003e9))
AMR:
(有 / 有-06, time, 上 / 上面)
(海 / 海洋, mod, 有 / 有-06)

Decoded in 4,170 microseconds
Sentence: “ 这 我 没 法 知道 。 ” 地理学家 说 。

Spans:
Span 8-9:  地理学家 => 地理学家
Span 2-3:  我 => 我
Span 4-5:  法 => 法
Span 5-6:  知道 => 知道-01
Span 9-10:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 法 => 法
Extra span: 我 => 我
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	dep	_	_
3	我	_	PN	PN	_	4	prep	_	_
4	没	_	VE	VE	_	10	dep	_	_
5	法	_	NR	NR	_	6	nsubj	_	_
6	知道	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_
9	地理学家	_	NR	NR	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x5 / 知道-01, arg1, x7 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),地理学家,地理学家,false), Span(5,6,List(2),知道,知道-01,false), Span(4,5,List(3),法,法,false), Span(2,3,List(4),我,我,false), Span(1,2,List(5),这,这,false)),Map(2 -> 知道-01, 5 -> 这, 1 -> 地理学家, 4 -> 我, 0 -> 说-02, 3 -> 法),Map(我 -> 我, 这 -> 这, 地 -> 地理学家, 法 -> 法, 说 -> 说-02, 知 -> 知道-01))),[Ljava.lang.String;@12aa4996,Annotation([Ljava.lang.String;@18eec010,[Ljava.lang.String;@67c119b7,[Ljava.lang.String;@2ca5f1ed),Annotation([Ljava.lang.String;@6c03fb16,[Ljava.lang.String;@28348c6,[Ledu.cmu.lti.nlp.amr.Dependency;@6de0f580),Annotation([Ljava.lang.String;@6e495b48,[Ljava.lang.String;@1d61c6dc,[Ljava.lang.String;@53c68ce),Annotation([Ljava.lang.String;@6f9ad11c,[Ljava.lang.String;@4b2d44bc,[Ledu.cmu.lti.nlp.amr.Entity;@58e92c23))
AMR:
(法 / 法, mod, 这 / 这)
(法 / 法, poss, 我 / 我)
(知 / 知道-01, degree, 法 / 法)
(说 / 说-02, degree, 法 / 法)
(说 / 说-02, direction, 地 / 地理学家)

Decoded in 12,998 microseconds
Sentence: “ 啊 ！ ”

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@3e7545e8,Annotation([Ljava.lang.String;@75e710b,[Ljava.lang.String;@26f7cdf8,[Ljava.lang.String;@376e7531),Annotation([Ljava.lang.String;@23202c31,[Ljava.lang.String;@5782d777,[Ledu.cmu.lti.nlp.amr.Dependency;@4f824872),Annotation([Ljava.lang.String;@b016b4e,[Ljava.lang.String;@29629fbb,[Ljava.lang.String;@681adc8f),Annotation([Ljava.lang.String;@3506d826,[Ljava.lang.String;@35dd9ed3,[Ledu.cmu.lti.nlp.amr.Entity;@8ff5094))
AMR:


Decoded in 1,488 microseconds
Sentence: 小 王子 大失所望 。

Spans:
Span 2-3:  大失所望 => 大失所望-01
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  大失所望 => 大失所望-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	大失所望	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 大失所望-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),大失所望,大失所望-01,false), Span(1,2,List(1),王子,王子,false), Span(0,1,List(2),小,小,false)),Map(2 -> 小, 1 -> 王子, 0 -> 大失所望-01),Map(王 -> 王子, 大 -> 大失所望-01, 小 -> 小))),[Ljava.lang.String;@363f0ba0,Annotation([Ljava.lang.String;@35fb22a9,[Ljava.lang.String;@6c8909c3,[Ljava.lang.String;@1e008f36),Annotation([Ljava.lang.String;@50acf55d,[Ljava.lang.String;@3cae7b8b,[Ledu.cmu.lti.nlp.amr.Dependency;@184dbacc),Annotation([Ljava.lang.String;@2aeefcc,[Ljava.lang.String;@359ff4d9,[Ljava.lang.String;@7a22a3c2),Annotation([Ljava.lang.String;@f4cfd90,[Ljava.lang.String;@7ae9a33a,[Ledu.cmu.lti.nlp.amr.Entity;@301aa982))
AMR:
(大 / 大失所望-01, direction, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 4,577 microseconds
Sentence: “ 那么 ， 山脉 呢 ？ ”

Spans:
Span 3-4:  山脉 => 山脉
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  山脉 => 山脉

Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	山脉	_	VV	VV	_	0	root	_	_
5	呢	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),山脉,山脉,false), Span(1,2,List(1),那么,那么,false)),Map(1 -> 那么, 0 -> 山脉),Map(山 -> 山脉, 那 -> 那么))),[Ljava.lang.String;@5fc930f0,Annotation([Ljava.lang.String;@3701e6e4,[Ljava.lang.String;@c6634d,[Ljava.lang.String;@65f58c6e),Annotation([Ljava.lang.String;@73ad7e90,[Ljava.lang.String;@4ba380c7,[Ledu.cmu.lti.nlp.amr.Dependency;@784c5ef5),Annotation([Ljava.lang.String;@31133b6e,[Ljava.lang.String;@29528a22,[Ljava.lang.String;@7ea08277),Annotation([Ljava.lang.String;@6401d0a0,[Ljava.lang.String;@4ce14f05,[Ledu.cmu.lti.nlp.amr.Entity;@71dfcf21))
AMR:
(山 / 山脉, degree, 那 / 那么)

Decoded in 2,945 microseconds
Sentence: “ 这 ， 我 没法 知道 。 ” 地理学家 说 。

Spans:
Span 8-9:  地理学家 => 地理学家
Span 3-4:  我 => 我
Span 4-5:  没法 => 没法-01
Span 5-6:  知道 => 知道-01
Span 9-10:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  地理学家 => 地理学家
Oracle Span 4-5:  没法 => 没法-01
Oracle Span 5-6:  知道 => 知道-01
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 我 => 我
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	dep	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	我	_	PN	PN	_	5	prep	_	_
5	没法	_	VV	VV	_	10	dep	_	_
6	知道	_	VV	VV	_	5	ccomp	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	地理学家	_	NR	NR	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 没法-01)
(x3 / 没法-01, arg1, x5 / 知道-01)
(x5 / 知道-01, arg1, x7 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),地理学家,地理学家,false), Span(5,6,List(2),知道,知道-01,false), Span(4,5,List(3),没法,没法-01,false), Span(3,4,List(4),我,我,false), Span(1,2,List(5),这,这,false)),Map(2 -> 知道-01, 5 -> 这, 1 -> 地理学家, 4 -> 我, 0 -> 说-02, 3 -> 没法-01),Map(没 -> 没法-01, 我 -> 我, 这 -> 这, 地 -> 地理学家, 说 -> 说-02, 知 -> 知道-01))),[Ljava.lang.String;@b965857,Annotation([Ljava.lang.String;@61f80d55,[Ljava.lang.String;@27a7ef08,[Ljava.lang.String;@280e8a1a),Annotation([Ljava.lang.String;@11e33bac,[Ljava.lang.String;@30501e60,[Ledu.cmu.lti.nlp.amr.Dependency;@289778cd),Annotation([Ljava.lang.String;@7495699f,[Ljava.lang.String;@7c2312fa,[Ljava.lang.String;@4cb0a000),Annotation([Ljava.lang.String;@5ff2e84b,[Ljava.lang.String;@74abbb,[Ledu.cmu.lti.nlp.amr.Entity;@64a4dd8d))
AMR:
(没 / 没法-01, beneficiary, 我 / 我)
(没 / 没法-01, domain, 这 / 这)
(知 / 知道-01, direction, 没 / 没法-01)
(说 / 说-02, direction, 地 / 地理学家)
(说 / 说-02, purpose, 没 / 没法-01)

Decoded in 13,184 microseconds
Sentence: “ 那么 ， 有 城市 、 河流 、 沙漠 吗 ？ ”

Spans:
Span 4-5:  城市 => 城市
Span 3-4:  有 => 有-06
Span 8-9:  沙漠 => 沙漠
Span 6-7:  河流 => 河流
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  城市 => 城市
Oracle Span 3-4:  有 => 有-03
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 6-7:  河流 => 河流

Incorrect span: 有 => 有-06
Extra span: 那么 => 那么
Missing span: 有 => 有-03
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	那么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	有	_	VE	VE	_	0	root	_	_
5	城市	_	NN	NN	_	9	conj	_	_
6	、	_	PU	PU	_	9	punct	_	_
7	河流	_	NN	NN	_	9	conj	_	_
8	、	_	PU	PU	_	9	punct	_	_
9	沙漠	_	NN	NN	_	4	dobj	_	_
10	吗	_	SP	SP	_	4	dep	_	_
11	？	_	PU	PU	_	4	punct	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),沙漠,沙漠,false), Span(6,7,List(1),河流,河流,false), Span(4,5,List(2),城市,城市,false), Span(3,4,List(3),有,有-06,false), Span(1,2,List(4),那么,那么,false)),Map(2 -> 城市, 1 -> 河流, 4 -> 那么, 0 -> 沙漠, 3 -> 有-06),Map(河 -> 河流, 城 -> 城市, 沙 -> 沙漠, 那 -> 那么, 有 -> 有-06))),[Ljava.lang.String;@2dddc1b9,Annotation([Ljava.lang.String;@65a5d4f9,[Ljava.lang.String;@40298285,[Ljava.lang.String;@22367b8),Annotation([Ljava.lang.String;@41b0ae4c,[Ljava.lang.String;@af9a89f,[Ledu.cmu.lti.nlp.amr.Dependency;@6482eef),Annotation([Ljava.lang.String;@1fcf9739,[Ljava.lang.String;@5b498842,[Ljava.lang.String;@1cb37ee4),Annotation([Ljava.lang.String;@5bcb04cb,[Ljava.lang.String;@385e36d4,[Ledu.cmu.lti.nlp.amr.Entity;@2fc2a205))
AMR:
(城 / 城市, location, 有 / 有-06)
(有 / 有-06, degree, 那 / 那么)
(有 / 有-06, location, 沙 / 沙漠)
(河 / 河流, snt3, 有 / 有-06)

Decoded in 9,370 microseconds
Sentence: “ 这 ， 我 也 没 法 知道 。 ” 地理学家 说 。

Spans:
Span 4-5:  也 => 也
Span 10-11:  地理学家 => 地理学家
Span 3-4:  我 => 我
Span 6-7:  法 => 法
Span 7-8:  知道 => 知道-01
Span 11-12:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 10-11:  地理学家 => 地理学家
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 法 => 法
Extra span: 我 => 我
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	nsubj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	也	_	AD	AD	_	6	advmod	_	_
6	没	_	VE	VE	_	12	dep	_	_
7	法	_	NR	NR	_	8	nsubj	_	_
8	知道	_	VV	VV	_	6	conj	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_
11	地理学家	_	AD	AD	_	12	advmod	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x10 / 知道-01, arg1, x12 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),地理学家,地理学家,false), Span(7,8,List(2),知道,知道-01,false), Span(6,7,List(3),法,法,false), Span(4,5,List(4),也,也,false), Span(3,4,List(5),我,我,false), Span(1,2,List(6),这,这,false)),Map(2 -> 知道-01, 5 -> 我, 1 -> 地理学家, 4 -> 也, 6 -> 这, 0 -> 说-02, 3 -> 法),Map(我 -> 我, 也 -> 也, 这 -> 这, 地 -> 地理学家, 法 -> 法, 说 -> 说-02, 知 -> 知道-01))),[Ljava.lang.String;@2881ad47,Annotation([Ljava.lang.String;@2bef09c0,[Ljava.lang.String;@62ce72ff,[Ljava.lang.String;@58a63629),Annotation([Ljava.lang.String;@7de843ef,[Ljava.lang.String;@2e1af49b,[Ledu.cmu.lti.nlp.amr.Dependency;@3fd2322d),Annotation([Ljava.lang.String;@56ac5c80,[Ljava.lang.String;@69e49a81,[Ljava.lang.String;@1023150a),Annotation([Ljava.lang.String;@3ece1e79,[Ljava.lang.String;@ab20d7c,[Ledu.cmu.lti.nlp.amr.Entity;@474fae39))
AMR:
(法 / 法, manner, 也 / 也)
(法 / 法, mod, 这 / 这)
(法 / 法, poss, 我 / 我)
(知 / 知道-01, degree, 法 / 法)
(说 / 说-02, degree, 法 / 法)
(说 / 说-02, direction, 地 / 地理学家)

Decoded in 17,074 microseconds
Sentence: “ 可 您 还 是 地理学家 呢 ！ ”

Spans:
Span 1-2:  可 => 可-01
Span 5-6:  地理学家 => 地理学家
Span 2-3:  您 => 您
Span 4-5:  是 => 是-04
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  地理学家 => 地理学家
Oracle Span 2-3:  您 => 您
Oracle Span 3-4:  还 => 还

Extra span: 是 => 是-04
Extra span: 可 => 可-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	可	_	VV	VV	_	5	dep	_	_
3	您	_	PN	PN	_	5	dobj	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	地理学家	_	NN	NN	_	5	attr	_	_
7	呢	_	SP	SP	_	5	dep	_	_
8	！	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 地理学家, domain, x11 / 您)
(x10 / 地理学家, manner, x12 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),地理学家,地理学家,false), Span(4,5,List(1),是,是-04,false), Span(3,4,List(2),还,还,false), Span(2,3,List(3),您,您,false), Span(1,2,List(4),可,可-01,false)),Map(2 -> 还, 1 -> 是-04, 4 -> 可-01, 0 -> 地理学家, 3 -> 您),Map(地 -> 地理学家, 还 -> 还, 是 -> 是-04, 可 -> 可-01, 您 -> 您))),[Ljava.lang.String;@4f4c789f,Annotation([Ljava.lang.String;@13f9ad9,[Ljava.lang.String;@1b7cae6f,[Ljava.lang.String;@21f8e55f),Annotation([Ljava.lang.String;@d5ce97f,[Ljava.lang.String;@7048535f,[Ledu.cmu.lti.nlp.amr.Dependency;@e3994ef),Annotation([Ljava.lang.String;@680d4a6a,[Ljava.lang.String;@2f04105,[Ljava.lang.String;@309028af),Annotation([Ljava.lang.String;@724c5cbe,[Ljava.lang.String;@70101687,[Ledu.cmu.lti.nlp.amr.Entity;@70e889e9))
AMR:
(可 / 可-01, prep-through, 您 / 您)
(是 / 是-04, degree, 可 / 可-01)
(是 / 是-04, example, 地 / 地理学家)
(是 / 是-04, manner, 还 / 还)

Decoded in 8,724 microseconds
Sentence: “ 一点 不错 ， ” 地理学家 说 ，

Spans:
Span 1-2:  一点 => 一点
Span 2-3:  不错 => 不错-01
Span 5-6:  地理学家 => 地理学家
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一点 => 一点
Oracle Span 5-6:  地理学家 => 地理学家
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 不错 => 不错-01
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	地理学家	_	AD	AD	_	7	advmod	_	_
7	说	_	VV	VV	_	3	dep	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),地理学家,地理学家,false), Span(2,3,List(2),不错,不错-01,false), Span(1,2,List(3),一点,一点,false)),Map(2 -> 不错-01, 1 -> 地理学家, 0 -> 说-02, 3 -> 一点),Map(地 -> 地理学家, 不 -> 不错-01, 说 -> 说-02, 一 -> 一点))),[Ljava.lang.String;@418c020b,Annotation([Ljava.lang.String;@51351f28,[Ljava.lang.String;@21618fa7,[Ljava.lang.String;@15f2eda3),Annotation([Ljava.lang.String;@34cf294c,[Ljava.lang.String;@4d7aaca2,[Ledu.cmu.lti.nlp.amr.Dependency;@604b1e1d),Annotation([Ljava.lang.String;@62566842,[Ljava.lang.String;@2f1ea80d,[Ljava.lang.String;@37191ef0),Annotation([Ljava.lang.String;@f1a45f8,[Ljava.lang.String;@5edf2821,[Ledu.cmu.lti.nlp.amr.Entity;@4dbad37))
AMR:
(不 / 不错-01, degree, 一 / 一点)
(说 / 说-02, direction, 地 / 地理学家)
(说 / 说-02, purpose, 不 / 不错-01)

Decoded in 6,066 microseconds
Sentence: “ 但是 我 不 是 探察家 。

Spans:
Span 3-4:  不 => 不
Span 2-3:  我 => 我
Span 5-6:  探察家 => 探察家
Span 4-5:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  我 => 我
Oracle Span 5-6:  探察家 => 探察家

Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	但是	_	AD	AD	_	5	advmod	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	是	_	VC	VC	_	0	root	_	_
6	探察家	_	NN	NN	_	5	attr	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 探察家, domain, x11 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),探察家,探察家,false), Span(4,5,List(1),是,是-04,false), Span(3,4,List(2),不,不,false), Span(2,3,List(3),我,我,false)),Map(2 -> 不, 1 -> 是-04, 0 -> 探察家, 3 -> 我),Map(探 -> 探察家, 我 -> 我, 不 -> 不, 是 -> 是-04))),[Ljava.lang.String;@7b4acdc2,Annotation([Ljava.lang.String;@26a262d6,[Ljava.lang.String;@11bd803,[Ljava.lang.String;@58f07f02),Annotation([Ljava.lang.String;@75798d03,[Ljava.lang.String;@40f8f5a8,[Ledu.cmu.lti.nlp.amr.Dependency;@1ffcf674),Annotation([Ljava.lang.String;@442f92e6,[Ljava.lang.String;@7d070ef5,[Ljava.lang.String;@7a55f148),Annotation([Ljava.lang.String;@2e2f720,[Ljava.lang.String;@3ae2ed38,[Ledu.cmu.lti.nlp.amr.Entity;@7f572c37))
AMR:
(不 / 不, poss, 我 / 我)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, prep-through, 探 / 探察家)

Decoded in 6,420 microseconds
Sentence: 我 手下 一 个 探察家 都 没有 。

Spans:
Span 0-1:  我 => 我
Span 1-2:  手下 => 手下
Span 4-5:  探察家 => 探察家
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  手下 => 手下
Oracle Span 4-5:  探察家 => 探察家
Oracle Span 5-6:  都 => 都

Dependencies:
1	我	_	PN	PN	_	2	nn	_	_
2	手下	_	NN	NN	_	5	nn	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	探察家	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	没有	_	VE	VE	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 手下, poss, x12 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),都,都,false), Span(4,5,List(1),探察家,探察家,false), Span(1,2,List(2),手下,手下,false), Span(0,1,List(3),我,我,false)),Map(2 -> 手下, 1 -> 探察家, 0 -> 都, 3 -> 我),Map(探 -> 探察家, 我 -> 我, 都 -> 都, 手 -> 手下))),[Ljava.lang.String;@2add4d24,Annotation([Ljava.lang.String;@3f93e4a8,[Ljava.lang.String;@12b5454f,[Ljava.lang.String;@5445f5ba),Annotation([Ljava.lang.String;@1431267b,[Ljava.lang.String;@342726f1,[Ledu.cmu.lti.nlp.amr.Dependency;@c808207),Annotation([Ljava.lang.String;@77134e08,[Ljava.lang.String;@6a0cbc6f,[Ljava.lang.String;@67110f71),Annotation([Ljava.lang.String;@6f89292e,[Ljava.lang.String;@20749d9,[Ledu.cmu.lti.nlp.amr.Entity;@de77232))
AMR:
(我 / 我, age, 探 / 探察家)
(手 / 手下, poss, 我 / 我)
(探 / 探察家, ARG6, 都 / 都)

Decoded in 7,407 microseconds
Sentence: 地理学家 是 不 去 计算 城市 、 河流 、 山脉 、 海洋 、 沙漠 的 。

Spans:
Span 2-3:  不 => 不
Span 3-4:  去 => 去-02
Span 0-1:  地理学家 => 地理学家
Span 5-6:  城市 => 城市
Span 9-10:  山脉 => 山脉
Span 1-2:  是 => 是-04
Span 13-14:  沙漠 => 沙漠
Span 7-8:  河流 => 河流
Span 11-12:  海洋 => 海洋
Span 4-5:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  去 => 去-01
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 5-6:  城市 => 城市
Oracle Span 9-10:  山脉 => 山脉
Oracle Span 13-14:  沙漠 => 沙漠
Oracle Span 7-8:  河流 => 河流
Oracle Span 11-12:  海洋 => 海洋
Oracle Span 4-5:  计算 => 计算-01

Incorrect span: 去 => 去-02
Extra span: 不 => 不
Extra span: 是 => 是-04
Missing span: 去 => 去-01
Dependencies:
1	地理学家	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	计算	_	VV	VV	_	2	attr	_	_
6	城市	_	NN	NN	_	14	conj	_	_
7	、	_	PU	PU	_	14	punct	_	_
8	河流	_	NN	NN	_	14	conj	_	_
9	、	_	PU	PU	_	14	punct	_	_
10	山脉	_	NN	NN	_	14	conj	_	_
11	、	_	PU	PU	_	14	punct	_	_
12	海洋	_	NN	NN	_	14	conj	_	_
13	、	_	PU	PU	_	14	punct	_	_
14	沙漠	_	NN	NN	_	5	dobj	_	_
15	的	_	DEC	DEC	_	5	cpm	_	_
16	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 去-01, arg0, x3 / 地理学家)
(x0 / 去-01, arg1, x4 / 计算-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),沙漠,沙漠,false), Span(11,12,List(1),海洋,海洋,false), Span(9,10,List(2),山脉,山脉,false), Span(7,8,List(3),河流,河流,false), Span(5,6,List(4),城市,城市,false), Span(4,5,List(5),计算,计算-01,false), Span(3,4,List(6),去,去-02,false), Span(2,3,List(7),不,不,false), Span(1,2,List(8),是,是-04,false), Span(0,1,List(9),地理学家,地理学家,false)),Map(2 -> 山脉, 5 -> 计算-01, 8 -> 是-04, 7 -> 不, 1 -> 海洋, 4 -> 城市, 6 -> 去-02, 9 -> 地理学家, 0 -> 沙漠, 3 -> 河流),Map(河 -> 河流, 去 -> 去-02, 计 -> 计算-01, 海 -> 海洋, 地 -> 地理学家, 不 -> 不, 城 -> 城市, 山 -> 山脉, 沙 -> 沙漠, 是 -> 是-04))),[Ljava.lang.String;@62628e78,Annotation([Ljava.lang.String;@44841b43,[Ljava.lang.String;@7c75db8b,[Ljava.lang.String;@4ab550d5),Annotation([Ljava.lang.String;@3cd206b5,[Ljava.lang.String;@58e85c6f,[Ledu.cmu.lti.nlp.amr.Dependency;@a137d7a),Annotation([Ljava.lang.String;@6ac0b715,[Ljava.lang.String;@468be356,[Ljava.lang.String;@5c9ac4cc),Annotation([Ljava.lang.String;@4df39a88,[Ljava.lang.String;@2264e43c,[Ledu.cmu.lti.nlp.amr.Entity;@3bec2275))
AMR:
(去 / 去-02, manner, 不 / 不)
(城 / 城市, topic, 计 / 计算-01)
(山 / 山脉, domain, 去 / 去-02)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, topic, 地 / 地理学家)
(河 / 河流, topic, 去 / 去-02)
(海 / 海洋, instrument, 沙 / 沙漠)
(海 / 海洋, topic, 山 / 山脉)
(计 / 计算-01, manner, 去 / 去-02)

Decoded in 28,386 microseconds
Sentence: 地理学家 很 重要 ， 不 能 到处 跑 。

Spans:
Span 4-5:  不 => 不
Span 6-7:  到处 => 到处
Span 0-1:  地理学家 => 地理学家
Span 1-2:  很 => 很
Span 5-6:  能 => 能
Span 7-8:  跑 => 跑-01
Span 2-3:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  到处 => 到处
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 1-2:  很 => 很
Oracle Span 5-6:  能 => 能-01
Oracle Span 7-8:  跑 => 跑-01
Oracle Span 2-3:  重要 => 重要-01

Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Dependencies:
1	地理学家	_	VV	VV	_	0	root	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	重要	_	VA	VA	_	1	ccomp	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	不	_	AD	AD	_	8	neg	_	_
6	能	_	VV	VV	_	8	mmod	_	_
7	到处	_	AD	AD	_	8	advmod	_	_
8	跑	_	VV	VV	_	1	dep	_	_
9	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x2 / 重要-01, arg0, x4 / 地理学家)
(x2 / 重要-01, degree, x3 / 很)
(x5 / 能-01, arg0, x7 / 跑-01)
(x7 / 跑-01, arg3, x10 / 到处)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),跑,跑-01,false), Span(6,7,List(1),到处,到处,false), Span(5,6,List(2),能,能,false), Span(4,5,List(3),不,不,false), Span(2,3,List(4),重要,重要-01,false), Span(1,2,List(5),很,很,false), Span(0,1,List(6),地理学家,地理学家,false)),Map(2 -> 能, 5 -> 很, 1 -> 到处, 4 -> 重要-01, 6 -> 地理学家, 0 -> 跑-01, 3 -> 不),Map(重 -> 重要-01, 能 -> 能, 跑 -> 跑-01, 很 -> 很, 地 -> 地理学家, 不 -> 不, 到 -> 到处))),[Ljava.lang.String;@31da3d60,Annotation([Ljava.lang.String;@60acd609,[Ljava.lang.String;@65ec8b24,[Ljava.lang.String;@3f49e266),Annotation([Ljava.lang.String;@5f18f9d2,[Ljava.lang.String;@598260a6,[Ledu.cmu.lti.nlp.amr.Dependency;@58b67519),Annotation([Ljava.lang.String;@281ce6bb,[Ljava.lang.String;@30d25c03,[Ljava.lang.String;@7a1f8def),Annotation([Ljava.lang.String;@116a2108,[Ljava.lang.String;@5e8c34a0,[Ledu.cmu.lti.nlp.amr.Entity;@7c1c5936))
AMR:
(不 / 不, age, 地 / 地理学家)
(能 / 能, manner, 不 / 不)
(跑 / 跑-01, location, 到 / 到处)
(跑 / 跑-01, manner, 不 / 不)
(重 / 重要-01, degree, 地 / 地理学家)
(重 / 重要-01, degree, 很 / 很)

Decoded in 14,725 microseconds
Sentence: 他 不 能 离开 他 的 办公室 。

Spans:
Span 1-2:  不 => 不
Span 4-5:  他 => 他
Span 0-1:  他 => 他
Span 6-7:  办公室 => 办公室
Span 3-4:  离开 => 离开-01
Span 2-3:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  办公室 => 办公室
Oracle Span 3-4:  离开 => 离开-01
Oracle Span 2-3:  能 => 能-01

Extra span: 他 => 他
Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	能	_	VV	VV	_	4	mmod	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	办公室	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 能-01, arg0, x3 / 离开-01)
(x3 / 离开-01, arg0, x4 / 他)
(x3 / 离开-01, arg1, x5 / 办公室)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),办公室,办公室,false), Span(4,5,List(1),他,他,false), Span(3,4,List(2),离开,离开-01,false), Span(2,3,List(3),能,能,false), Span(1,2,List(4),不,不,false), Span(0,1,List(5),他,他,false)),Map(2 -> 离开-01, 5 -> 他, 1 -> 他, 4 -> 不, 0 -> 办公室, 3 -> 能),Map(他2 -> 他, 能 -> 能, 他 -> 他, 不 -> 不, 离 -> 离开-01, 办 -> 办公室))),[Ljava.lang.String;@7aead3af,Annotation([Ljava.lang.String;@3ac8cf9b,[Ljava.lang.String;@55ec556,[Ljava.lang.String;@1b15f922),Annotation([Ljava.lang.String;@37ce3644,[Ljava.lang.String;@4b869331,[Ledu.cmu.lti.nlp.amr.Dependency;@38018b62),Annotation([Ljava.lang.String;@ce9b9a9,[Ljava.lang.String;@4ad3d266,[Ljava.lang.String;@3533df16),Annotation([Ljava.lang.String;@15d0849,[Ljava.lang.String;@4038cd3a,[Ledu.cmu.lti.nlp.amr.Entity;@14ac77b9))
AMR:
(办 / 办公室, poss, 他 / 他)
(离 / 离开-01, degree, 不 / 不)
(离 / 离开-01, season, 他2 / 他)
(离 / 离开-01, snt3, 办 / 办公室)
(能 / 能, manner, 不 / 不)

Decoded in 14,260 microseconds
Sentence: 但 他 可以 在 办公室 里 接见 探察家 。

Spans:
Span 1-2:  他 => 他
Span 4-5:  办公室 => 办公室
Span 2-3:  可以 => 可以-02
Span 3-4:  在 => 在-01
Span 7-8:  探察家 => 探察家
Span 6-7:  接见 => 接见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  办公室 => 办公室
Oracle Span 2-3:  可以 => 可以-02
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 6-7:  接见 => 接见-01

Extra span: 在 => 在-01
Dependencies:
1	但	_	AD	AD	_	7	advmod	_	_
2	他	_	PN	PN	_	7	nsubj	_	_
3	可以	_	VV	VV	_	7	mmod	_	_
4	在	_	P	P	_	7	prep	_	_
5	办公室	_	NN	NN	_	6	lobj	_	_
6	里	_	LC	LC	_	4	plmod	_	_
7	接见	_	VV	VV	_	0	root	_	_
8	探察家	_	NN	NN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 可以-02, arg1, x3 / 接见-01)
(x3 / 接见-01, arg0, x4 / 他)
(x3 / 接见-01, arg1, x5 / 探察家)
(x3 / 接见-01, location, x6 / 办公室)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),探察家,探察家,false), Span(6,7,List(1),接见,接见-01,false), Span(4,5,List(2),办公室,办公室,false), Span(3,4,List(3),在,在-01,false), Span(2,3,List(4),可以,可以-02,false), Span(1,2,List(5),他,他,false)),Map(2 -> 办公室, 5 -> 他, 1 -> 接见-01, 4 -> 可以-02, 0 -> 探察家, 3 -> 在-01),Map(在 -> 在-01, 探 -> 探察家, 接 -> 接见-01, 他 -> 他, 办 -> 办公室, 可 -> 可以-02))),[Ljava.lang.String;@3f4cd155,Annotation([Ljava.lang.String;@563a89b5,[Ljava.lang.String;@506dcf55,[Ljava.lang.String;@270b6b5e),Annotation([Ljava.lang.String;@7e94d093,[Ljava.lang.String;@7c6189d5,[Ledu.cmu.lti.nlp.amr.Dependency;@4248e66b),Annotation([Ljava.lang.String;@3e6534e7,[Ljava.lang.String;@66ad7bf0,[Ljava.lang.String;@167279d1),Annotation([Ljava.lang.String;@138caeca,[Ljava.lang.String;@4d96250,[Ledu.cmu.lti.nlp.amr.Entity;@9a6fbc0))
AMR:
(办 / 办公室, manner, 在 / 在-01)
(可 / 可以-02, ARG2, 在 / 在-01)
(在 / 在-01, ARG6, 他 / 他)
(接 / 接见-01, location, 办 / 办公室)
(接 / 接见-01, quant, 探 / 探察家)

Decoded in 12,426 microseconds
Sentence: 他 询问 探察家 ， 把 他们 的 回忆 记录 下来 。

Spans:
Span 9-10:  下来 => 下来-02
Span 0-1:  他 => 他
Span 5-6:  他们 => 他们
Span 7-8:  回忆 => 回忆
Span 2-3:  探察家 => 探察家
Span 8-9:  记录 => 记录-01
Span 1-2:  询问 => 询问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  回忆 => 回忆
Oracle Span 2-3:  探察家 => 探察家
Oracle Span 8-9:  记录 => 记录-01
Oracle Span 1-2:  询问 => 询问-01

Extra span: 下来 => 下来-02
Extra span: 他们 => 他们
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	询问	_	VV	VV	_	0	root	_	_
3	探察家	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	把	_	BA	BA	_	10	ba	_	_
6	他们	_	PN	PN	_	9	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	回忆	_	VV	VV	_	9	vmod	_	_
9	记录	_	NN	NN	_	10	nsubj	_	_
10	下来	_	VV	VV	_	2	conj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 询问-01, arg0, x12 / 他)
(x11 / 询问-01, arg1, x13 / 探察家)
(x14 / 记录-01, arg1, x16 / 回忆)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),下来,下来-02,false), Span(8,9,List(1),记录,记录-01,false), Span(7,8,List(2),回忆,回忆,false), Span(5,6,List(3),他们,他们,false), Span(2,3,List(4),探察家,探察家,false), Span(1,2,List(5),询问,询问-01,false), Span(0,1,List(6),他,他,false)),Map(2 -> 回忆, 5 -> 询问-01, 1 -> 记录-01, 4 -> 探察家, 6 -> 他, 0 -> 下来-02, 3 -> 他们),Map(他2 -> 他, 探 -> 探察家, 下 -> 下来-02, 他 -> 他们, 记 -> 记录-01, 询 -> 询问-01, 回 -> 回忆))),[Ljava.lang.String;@c1fa7d4,Annotation([Ljava.lang.String;@7a93b263,[Ljava.lang.String;@35178483,[Ljava.lang.String;@bd1111a),Annotation([Ljava.lang.String;@7a8136b3,[Ljava.lang.String;@1de6932a,[Ledu.cmu.lti.nlp.amr.Dependency;@14dc3f89),Annotation([Ljava.lang.String;@1706a5c9,[Ljava.lang.String;@64412d34,[Ljava.lang.String;@4d178d55),Annotation([Ljava.lang.String;@38c2c309,[Ljava.lang.String;@1a480135,[Ledu.cmu.lti.nlp.amr.Entity;@778db7c5))
AMR:
(回 / 回忆, ARG4, 下 / 下来-02)
(记 / 记录-01, ARG0, 他 / 他们)
(记 / 记录-01, ARG6, 回 / 回忆)
(询 / 询问-01, prep-for, 他2 / 他)
(询 / 询问-01, quant, 探 / 探察家)
(询 / 询问-01, unit, 下 / 下来-02)

Decoded in 15,581 microseconds
Sentence: 如果 他 认为 其中 有 个 探察家 的 回忆 是 有 意思 的 ， 那么 地理学家 就 对 这个 探察家 的 品德 做 一 番 调查 。 ”

Spans:
Span 1-2:  他 => 他
Span 22-23:  做 => 做-04
Span 21-22:  品德 => 品德
Span 8-9:  回忆 => 回忆
Span 15-16:  地理学家 => 地理学家
Span 17-18:  对 => 对-02
Span 16-17:  就 => 就-01
Span 11-12:  意思 => 意思-01
Span 19-20:  探察家 => 探察家
Span 6-7:  探察家 => 探察家
Span 9-10:  是 => 是-04
Span 10-11:  有 => 有-06
Span 4-5:  有 => 有-06
Span 24-25:  番 => 番
Span 2-3:  认为 => 认为-02
Span 25-26:  调查 => 调查-01
Span 18-19:  这个 => 这个
Span 14-15:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 22-23:  做 => 做-01
Oracle Span 21-22:  品德 => 品德
Oracle Span 8-9:  回忆 => 回忆-01
Oracle Span 15-16:  地理学家 => 地理学家
Oracle Span 6-7:  探察家 => 探察家
Oracle Span 19-20:  探察家 => 探察家
Oracle Span 24-25:  番 => 番
Oracle Span 2-3:  认为 => 认为-02
Oracle Span 25-26:  调查 => 调查-01

Incorrect span: 做 => 做-04
Extra span: 这个 => 这个
Extra span: 对 => 对-02
Extra span: 就 => 就-01
Extra span: 那么 => 那么
Extra span: 意思 => 意思-01
Extra span: 有 => 有-06
Extra span: 是 => 是-04
Incorrect span: 回忆 => 回忆
Extra span: 有 => 有-06
Missing span: 回忆 => 回忆-01
Missing span: 做 => 做-01
Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	认为	_	VV	VV	_	23	pccomp	_	_
4	其中	_	NN	NN	_	5	top	_	_
5	有	_	VE	VE	_	10	nsubj	_	_
6	个	_	M	M	_	7	dep	_	_
7	探察家	_	NN	NN	_	5	dobj	_	_
8	的	_	DEC	DEC	_	5	cpm	_	_
9	回忆	_	VV	VV	_	10	mmod	_	_
10	是	_	VC	VC	_	3	ccomp	_	_
11	有	_	VE	VE	_	10	attr	_	_
12	意思	_	NN	NN	_	11	dobj	_	_
13	的	_	DEC	DEC	_	11	cpm	_	_
14	,	_	PU	PU	_	23	punct	_	_
15	那么	_	AD	AD	_	23	advmod	_	_
16	地理学家	_	NR	NR	_	23	nsubj	_	_
17	就	_	P	P	_	23	prep	_	_
18	对	_	P	P	_	22	assmod	_	_
19	这个	_	NN	NN	_	20	nn	_	_
20	探察家	_	NN	NN	_	18	pobj	_	_
21	的	_	DEG	DEG	_	18	assm	_	_
22	品德	_	NN	NN	_	17	pobj	_	_
23	做	_	VV	VV	_	0	root	_	_
24	一	_	CD	CD	_	25	nummod	_	_
25	番	_	M	M	_	26	clf	_	_
26	调查	_	NN	NN	_	23	dobj	_	_
27	。	_	PU	PU	_	23	punct	_	_
28	”	_	PU	PU	_	23	punct	_	_

Oracle:
(x25 / 认为-02, arg0, x26 / 他)
(x25 / 认为-02, arg1, x27 / 回忆-01)
(x27 / 回忆-01, poss, x28 / 探察家)
(x35 / 做-01, arg0, x38 / 地理学家)
(x35 / 做-01, arg1, x39 / 调查-01)
(x39 / 调查-01, topic, x42 / 品德)
(x39 / 调查-01, unit, x46 / 番)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),调查,调查-01,false), Span(24,25,List(1),番,番,false), Span(22,23,List(2),做,做-04,false), Span(21,22,List(3),品德,品德,false), Span(19,20,List(4),探察家,探察家,false), Span(18,19,List(5),这个,这个,false), Span(17,18,List(6),对,对-02,false), Span(16,17,List(7),就,就-01,false), Span(15,16,List(8),地理学家,地理学家,false), Span(14,15,List(9),那么,那么,false), Span(11,12,List(10),意思,意思-01,false), Span(10,11,List(11),有,有-06,false), Span(9,10,List(12),是,是-04,false), Span(8,9,List(13),回忆,回忆,false), Span(6,7,List(14),探察家,探察家,false), Span(4,5,List(15),有,有-06,false), Span(2,3,List(16),认为,认为-02,false), Span(1,2,List(17),他,他,false)),Map(2 -> 做-04, 5 -> 这个, 12 -> 是-04, 15 -> 有-06, 8 -> 地理学家, 7 -> 就-01, 17 -> 他, 1 -> 番, 4 -> 探察家, 11 -> 有-06, 14 -> 探察家, 6 -> 对-02, 0 -> 调查-01, 9 -> 那么, 16 -> 认为-02, 3 -> 品德, 10 -> 意思-01, 13 -> 回忆),Map(番 -> 番, 就 -> 就-01, 有2 -> 有-06, 探 -> 探察家, 这 -> 这个, 他 -> 他, 认 -> 认为-02, 意 -> 意思-01, 地 -> 地理学家, 做 -> 做-04, 调 -> 调查-01, 那 -> 那么, 探2 -> 探察家, 品 -> 品德, 对 -> 对-02, 回 -> 回忆, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@681e144,Annotation([Ljava.lang.String;@2875b016,[Ljava.lang.String;@72ee5d84,[Ljava.lang.String;@68c7ef83),Annotation([Ljava.lang.String;@6145b81e,[Ljava.lang.String;@64355120,[Ledu.cmu.lti.nlp.amr.Dependency;@64b7225f),Annotation([Ljava.lang.String;@33db72bd,[Ljava.lang.String;@7f92b990,[Ljava.lang.String;@31e04b13),Annotation([Ljava.lang.String;@6c1832aa,[Ljava.lang.String;@4beeb0e,[Ledu.cmu.lti.nlp.amr.Entity;@6e8a9c30))
AMR:
(做 / 做-04, medium, 探 / 探察家)
(做 / 做-04, snt2, 调 / 调查-01)
(做 / 做-04, topic, 品 / 品德)
(回 / 回忆, poss, 探2 / 探察家)
(回 / 回忆, snt2, 是 / 是-04)
(地 / 地理学家, snt2, 就 / 就-01)
(对 / 对-02, snt2, 这 / 这个)
(对 / 对-02, time, 就 / 就-01)
(意 / 意思-01, degree, 那 / 那么)
(意 / 意思-01, time, 有 / 有-06)
(是 / 是-04, snt2, 有 / 有-06)
(有2 / 有-06, prep-on-behalf, 探2 / 探察家)
(认 / 认为-02, medium, 他 / 他)
(认 / 认为-02, snt5, 有2 / 有-06)
(调 / 调查-01, unit, 番 / 番)
(这 / 这个, decade, 探 / 探察家)
(那 / 那么, prep-on-behalf, 就 / 就-01)

Decoded in 88,836 microseconds
Sentence: “ 这 是 为什么 呢 ？ ”

Spans:
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	为什么	_	AD	AD	_	3	advmod	_	_
5	呢	_	SP	SP	_	3	dep	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),是,是-04,false), Span(1,2,List(1),这,这,false)),Map(1 -> 这, 0 -> 是-04),Map(这 -> 这, 是 -> 是-04))),[Ljava.lang.String;@5d01ea21,Annotation([Ljava.lang.String;@70211e49,[Ljava.lang.String;@3b46dd8,[Ljava.lang.String;@39651a82),Annotation([Ljava.lang.String;@6be7bf6d,[Ljava.lang.String;@134c370e,[Ledu.cmu.lti.nlp.amr.Dependency;@33364212),Annotation([Ljava.lang.String;@2216effc,[Ljava.lang.String;@745c2004,[Ljava.lang.String;@6da9dc6),Annotation([Ljava.lang.String;@7fd69dd,[Ljava.lang.String;@12010fd1,[Ledu.cmu.lti.nlp.amr.Entity;@7c84195))
AMR:
(是 / 是-04, mod, 这 / 这)

Decoded in 2,892 microseconds
Sentence: “ 因为 一 个 说 假话 的 探察家 会 给 地理 书 带来 灾难性 的 后果 。

Spans:
Span 11-12:  书 => 书
Span 8-9:  会 => 会-03
Span 15-16:  后果 => 后果
Span 10-11:  地理 => 地理
Span 12-13:  带来 => 带来-02
Span 7-8:  探察家 => 探察家
Span 13-14:  灾难性 => 灾难性
Span 9-10:  给 => 给-02
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  书 => 书
Oracle Span 8-9:  会 => 会-02
Oracle Span 15-16:  后果 => 后果
Oracle Span 10-11:  地理 => 地理
Oracle Span 12-13:  带来 => 带来-01
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 13-14:  灾难性 => 灾难性
Oracle Span 4-5:  说 => 说-01

Incorrect span: 带来 => 带来-02
Extra span: 给 => 给-02
Incorrect span: 会 => 会-03
Incorrect span: 说 => 说-02
Missing span: 会 => 会-02
Missing span: 带来 => 带来-01
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	13	punct	_	_
2	因为	_	P	P	_	5	prep	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	2	pobj	_	_
5	说	_	VV	VV	_	8	rcmod	_	_
6	假话	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	探察家	_	NN	NN	_	13	nsubj	_	_
9	会	_	VV	VV	_	13	mmod	_	_
10	给	_	P	P	_	13	prep	_	_
11	地理	_	NN	NN	_	12	nn	_	_
12	书	_	NN	NN	_	10	pobj	_	_
13	带来	_	VV	VV	_	0	root	_	_
14	灾难性	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	后果	_	NN	NN	_	13	dobj	_	_
17	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x41 / 会-02, arg0, x42 / 带来-01)
(x42 / 带来-01, arg0, x43 / 探察家)
(x42 / 带来-01, arg1, x48 / 后果)
(x42 / 带来-01, arg2, x50 / 书)
(x45 / 说-01, arg0, x43 / 探察家)
(x48 / 后果, mod, x49 / 灾难性)
(x50 / 书, topic, x51 / 地理)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),后果,后果,false), Span(13,14,List(1),灾难性,灾难性,false), Span(12,13,List(2),带来,带来-02,false), Span(11,12,List(3),书,书,false), Span(10,11,List(4),地理,地理,false), Span(9,10,List(5),给,给-02,false), Span(8,9,List(6),会,会-03,false), Span(7,8,List(7),探察家,探察家,false), Span(4,5,List(8),说,说-02,false)),Map(2 -> 带来-02, 5 -> 给-02, 8 -> 说-02, 7 -> 探察家, 1 -> 灾难性, 4 -> 地理, 6 -> 会-03, 0 -> 后果, 3 -> 书),Map(探 -> 探察家, 灾 -> 灾难性, 给 -> 给-02, 地 -> 地理, 会 -> 会-03, 说 -> 说-02, 带 -> 带来-02, 后 -> 后果, 书 -> 书))),[Ljava.lang.String;@552ed807,Annotation([Ljava.lang.String;@3971f0fe,[Ljava.lang.String;@23940f86,[Ljava.lang.String;@66153688),Annotation([Ljava.lang.String;@455824ad,[Ljava.lang.String;@7318daf8,[Ledu.cmu.lti.nlp.amr.Dependency;@70f31322),Annotation([Ljava.lang.String;@3f1ddac2,[Ljava.lang.String;@3be4fcc0,[Ljava.lang.String;@e1e2e5e),Annotation([Ljava.lang.String;@661c46bc,[Ljava.lang.String;@37864b77,[Ledu.cmu.lti.nlp.amr.Entity;@2b98b3bb))
AMR:
(书 / 书, topic, 地 / 地理)
(书 / 书, topic, 带 / 带来-02)
(会 / 会-03, degree, 探 / 探察家)
(后 / 后果, mod, 灾 / 灾难性)
(地 / 地理, mod, 给 / 给-02)
(带 / 带来-02, location, 灾 / 灾难性)
(给 / 给-02, degree, 会 / 会-03)
(说 / 说-02, purpose, 会 / 会-03)

Decoded in 24,296 microseconds
Sentence: 同样 ， 一 个 太 爱 喝酒 的 探察家 也 是 如此 。 ”

Spans:
Span 9-10:  也 => 也
Span 0-1:  同样 => 同样-01
Span 6-7:  喝酒 => 喝酒-01
Span 4-5:  太 => 太
Span 11-12:  如此 => 如此
Span 8-9:  探察家 => 探察家
Span 10-11:  是 => 是-04
Span 5-6:  爱 => (person :arg0-of 爱-01)

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 这 又 是 为什么 ？ ” 小 王子 说 。

Spans:
Span 2-3:  又 => 又
Span 7-8:  小 => 小
Span 3-4:  是 => 是-04
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	是	_	VC	VC	_	5	cop	_	_
5	为什么	_	AD	AD	_	9	vmod	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x9 / 这)
(x2 / 王子, mod, x3 / 小-01)
(x9 / 这, manner, x11 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(3,4,List(3),是,是-04,false), Span(2,3,List(4),又,又,false), Span(1,2,List(5),这,这,false)),Map(2 -> 小, 5 -> 这, 1 -> 王子, 4 -> 又, 0 -> 说-02, 3 -> 是-04),Map(又 -> 又, 这 -> 这, 王 -> 王子, 小 -> 小, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@50a691d3,Annotation([Ljava.lang.String;@557eb543,[Ljava.lang.String;@3b95d13c,[Ljava.lang.String;@3730ab42),Annotation([Ljava.lang.String;@537c8c7e,[Ljava.lang.String;@7308ffff,[Ledu.cmu.lti.nlp.amr.Dependency;@6601cc93),Annotation([Ljava.lang.String;@54d901aa,[Ljava.lang.String;@63716833,[Ljava.lang.String;@573284a5),Annotation([Ljava.lang.String;@3fbfbf84,[Ljava.lang.String;@23f72d88,[Ledu.cmu.lti.nlp.amr.Entity;@4bafe935))
AMR:
(是 / 是-04, manner, 又 / 又)
(是 / 是-04, mod, 这 / 这)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 是 / 是-04)

Decoded in 12,427 microseconds
Sentence: “ 因为 喝醉 了 酒 的 人 把 一 个 看成 两 个 ，

Spans:
Span 6-7:  人 => 人
Span 10-11:  看成 => 看成-01
Span 4-5:  酒 => 酒

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 10-11:  看成 => 看成-01
Oracle Span 4-5:  酒 => 酒

Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	因为	_	P	P	_	7	assmod	_	_
3	喝醉	_	VV	VV	_	2	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	酒	_	NN	NN	_	3	dobj	_	_
6	的	_	DEG	DEG	_	2	assm	_	_
7	人	_	NN	NN	_	11	nsubj	_	_
8	把	_	BA	BA	_	11	ba	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	11	nsubj	_	_
11	看成	_	VV	VV	_	0	root	_	_
12	两	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	11	conj	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x15 / 看成-01, arg0, x16 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),看成,看成-01,false), Span(6,7,List(1),人,人,false), Span(4,5,List(2),酒,酒,false)),Map(2 -> 酒, 1 -> 人, 0 -> 看成-01),Map(酒 -> 酒, 看 -> 看成-01, 人 -> 人))),[Ljava.lang.String;@87b5b49,Annotation([Ljava.lang.String;@4a7a965d,[Ljava.lang.String;@507b79f7,[Ljava.lang.String;@64a9d48c),Annotation([Ljava.lang.String;@365a6a43,[Ljava.lang.String;@288cdaab,[Ledu.cmu.lti.nlp.amr.Dependency;@23b3aa8c),Annotation([Ljava.lang.String;@99407c2,[Ljava.lang.String;@6c796cc1,[Ljava.lang.String;@226eba67),Annotation([Ljava.lang.String;@1cb7936c,[Ljava.lang.String;@35342d2f,[Ledu.cmu.lti.nlp.amr.Entity;@128c502c))
AMR:
(人 / 人, mod, 酒 / 酒)
(看 / 看成-01, topic, 人 / 人)

Decoded in 6,337 microseconds
Sentence: 那么 ， 地理学家 就 会 把 只 有 一 座 山 的 地方 写成 两 座 山 。 ”

Spans:
Span 4-5:  会 => 会-03
Span 13-14:  写成 => 写成-01
Span 6-7:  只 => 只
Span 12-13:  地方 => 地方
Span 2-3:  地理学家 => 地理学家
Span 3-4:  就 => 就-01
Span 16-17:  山 => 山
Span 10-11:  山 => 山
Span 7-8:  有 => 有-06
Span 0-1:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  会 => 会-02
Oracle Span 13-14:  写成 => 写成-01
Oracle Span 6-7:  只 => 只
Oracle Span 12-13:  地方 => 地方
Oracle Span 2-3:  地理学家 => 地理学家
Oracle Span 3-4:  就 => 就
Oracle Span 10-11:  山 => 山
Oracle Span 16-17:  山 => 山
Oracle Span 7-8:  有 => 有-03

Incorrect span: 有 => 有-06
Incorrect span: 会 => 会-03
Incorrect span: 就 => 就-01
Extra span: 那么 => 那么
Missing span: 会 => 会-02
Missing span: 有 => 有-03
Missing span: 就 => 就
Dependencies:
1	那么	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	地理学家	_	NN	NN	_	14	nsubj	_	_
4	就	_	AD	AD	_	14	advmod	_	_
5	会	_	VV	VV	_	14	mmod	_	_
6	把	_	BA	BA	_	14	ba	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	有	_	VE	VE	_	13	rcmod	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	座	_	M	M	_	11	clf	_	_
11	山	_	NN	NN	_	8	dobj	_	_
12	的	_	DEC	DEC	_	8	cpm	_	_
13	地方	_	NN	NN	_	14	nsubj	_	_
14	写成	_	VV	VV	_	0	root	_	_
15	两	_	CD	CD	_	16	nummod	_	_
16	座	_	M	M	_	17	clf	_	_
17	山	_	NN	NN	_	14	dobj	_	_
18	。	_	PU	PU	_	14	punct	_	_
19	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x30 / 会-02, arg0, x39 / 写成-01)
(x30 / 会-02, manner, x31 / 就)
(x39 / 写成-01, arg0, x40 / 地理学家)
(x39 / 写成-01, arg1, x41 / 地方)
(x39 / 写成-01, arg2, x46 / 山)
(x42 / 有-03, arg0, x41 / 地方)
(x42 / 有-03, arg1, x44 / 山)
(x42 / 有-03, manner, x43 / 只)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),山,山,false), Span(13,14,List(1),写成,写成-01,false), Span(12,13,List(2),地方,地方,false), Span(10,11,List(3),山,山,false), Span(7,8,List(4),有,有-06,false), Span(6,7,List(5),只,只,false), Span(4,5,List(6),会,会-03,false), Span(3,4,List(7),就,就-01,false), Span(2,3,List(8),地理学家,地理学家,false), Span(0,1,List(9),那么,那么,false)),Map(2 -> 地方, 5 -> 只, 8 -> 地理学家, 7 -> 就-01, 1 -> 写成-01, 4 -> 有-06, 6 -> 会-03, 9 -> 那么, 0 -> 山, 3 -> 山),Map(写 -> 写成-01, 就 -> 就-01, 地2 -> 地理学家, 山2 -> 山, 地 -> 地方, 会 -> 会-03, 只 -> 只, 山 -> 山, 那 -> 那么, 有 -> 有-06))),[Ljava.lang.String;@45667d98,Annotation([Ljava.lang.String;@65eabaab,[Ljava.lang.String;@7123be6c,[Ljava.lang.String;@1de9d54),Annotation([Ljava.lang.String;@77a2aa4a,[Ljava.lang.String;@47ad69f7,[Ledu.cmu.lti.nlp.amr.Dependency;@2b917fb0),Annotation([Ljava.lang.String;@5e5073ab,[Ljava.lang.String;@3c4262d1,[Ljava.lang.String;@100c567f),Annotation([Ljava.lang.String;@30c0d731,[Ljava.lang.String;@6d5037a9,[Ledu.cmu.lti.nlp.amr.Entity;@422b8438))
AMR:
(会 / 会-03, degree, 那 / 那么)
(会 / 会-03, manner, 就 / 就-01)
(会 / 会-03, season, 有 / 有-06)
(写 / 写成-01, op, 山 / 山)
(写 / 写成-01, prep-on-behalf, 山2 / 山)
(写 / 写成-01, subevent, 地 / 地方)
(地2 / 地理学家, season, 就 / 就-01)
(有 / 有-06, manner, 只 / 只)
(有 / 有-06, op, 山2 / 山)

Decoded in 32,641 microseconds
Sentence: “ 我 认识 一 个 人 ， 他 要是 搞 探察 的话 ， 就 很 可能 是 个 不 好 的 探察员 。 ” 小 王子 说 。

Spans:
Span 18-19:  不 => 不
Span 5-6:  人 => 人
Span 7-8:  他 => 他
Span 15-16:  可能 => 可能-02
Span 19-20:  好 => 好-04
Span 24-25:  小 => 小
Span 13-14:  就 => 就-01
Span 14-15:  很 => 很
Span 1-2:  我 => 我
Span 10-11:  探察 => 探察
Span 21-22:  探察员 => 探察员
Span 9-10:  搞 => 搞-04
Span 16-17:  是 => 是-04
Span 25-26:  王子 => 王子
Span 2-3:  认识 => 认识-01
Span 26-27:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 15-16:  可能 => 可能-01
Oracle Span 19-20:  好 => 好-01
Oracle Span 24-25:  小 => 小-01
Oracle Span 14-15:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 10-11:  探察 => 探察
Oracle Span 21-22:  探察员 => 探察员
Oracle Span 9-10:  搞 => 搞-01
Oracle Span 25-26:  王子 => 王子
Oracle Span 2-3:  认识 => 认识-01
Oracle Span 26-27:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 好 => 好-04
Extra span: 不 => 不
Extra span: 是 => 是-04
Incorrect span: 可能 => 可能-02
Extra span: 就 => 就-01
Incorrect span: 搞 => 搞-04
Extra span: 他 => 他
Missing span: 说 => 说-01
Missing span: 搞 => 搞-01
Missing span: 可能 => 可能-01
Missing span: 好 => 好-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	认识	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	人	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	要是	_	VV	VV	_	17	pccomp	_	_
10	搞	_	VV	VV	_	9	ccomp	_	_
11	探察	_	NN	NN	_	10	dobj	_	_
12	的话	_	SP	SP	_	9	dep	_	_
13	,	_	PU	PU	_	17	punct	_	_
14	就	_	AD	AD	_	17	advmod	_	_
15	很	_	AD	AD	_	17	advmod	_	_
16	可能	_	VV	VV	_	17	mmod	_	_
17	是	_	VC	VC	_	3	conj	_	_
18	个	_	M	M	_	22	dep	_	_
19	不	_	AD	AD	_	20	neg	_	_
20	好	_	VA	VA	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	探察员	_	NN	NN	_	17	attr	_	_
23	。	_	PU	PU	_	3	punct	_	_
24	”	_	PU	PU	_	3	punct	_	_
25	小	_	JJ	JJ	_	26	amod	_	_
26	王子	_	NN	NN	_	27	nsubj	_	_
27	说	_	VV	VV	_	3	conj	_	_
28	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x10 / 搞-01, arg1, x23 / 探察)
(x2 / 王子, mod, x3 / 小-01)
(x24 / 可能-01, arg0, x26 / 探察员)
(x24 / 可能-01, degree, x25 / 很)
(x26 / 探察员, mod, x27 / 好-01)
(x5 / 认识-01, arg0, x6 / 我)
(x5 / 认识-01, arg1, x7 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),说,说-02,false), Span(25,26,List(1),王子,王子,false), Span(24,25,List(2),小,小,false), Span(21,22,List(3),探察员,探察员,false), Span(19,20,List(4),好,好-04,false), Span(18,19,List(5),不,不,false), Span(16,17,List(6),是,是-04,false), Span(15,16,List(7),可能,可能-02,false), Span(14,15,List(8),很,很,false), Span(13,14,List(9),就,就-01,false), Span(10,11,List(10),探察,探察,false), Span(9,10,List(11),搞,搞-04,false), Span(7,8,List(12),他,他,false), Span(5,6,List(13),人,人,false), Span(2,3,List(14),认识,认识-01,false), Span(1,2,List(15),我,我,false)),Map(2 -> 小, 5 -> 不, 12 -> 他, 15 -> 我, 8 -> 很, 7 -> 可能-02, 1 -> 王子, 4 -> 好-04, 11 -> 搞-04, 14 -> 认识-01, 6 -> 是-04, 0 -> 说-02, 9 -> 就-01, 3 -> 探察员, 10 -> 探察, 13 -> 人),Map(就 -> 就-01, 探 -> 探察员, 我 -> 我, 王 -> 王子, 很 -> 很, 认 -> 认识-01, 他 -> 他, 小 -> 小, 不 -> 不, 说 -> 说-02, 好 -> 好-04, 搞 -> 搞-04, 探2 -> 探察, 人 -> 人, 是 -> 是-04, 可 -> 可能-02))),[Ljava.lang.String;@30669dac,Annotation([Ljava.lang.String;@629adce,[Ljava.lang.String;@6a282fdd,[Ljava.lang.String;@743c6ce4),Annotation([Ljava.lang.String;@70331432,[Ljava.lang.String;@3bbf9027,[Ledu.cmu.lti.nlp.amr.Dependency;@10c2064a),Annotation([Ljava.lang.String;@70e13fa,[Ljava.lang.String;@6ff415ad,[Ljava.lang.String;@280d9edc),Annotation([Ljava.lang.String;@28fd3dc1,[Ljava.lang.String;@5f9b6ae7,[Ledu.cmu.lti.nlp.amr.Entity;@108d55c4))
AMR:
(人 / 人, location, 认 / 认识-01)
(可 / 可能-02, degree, 很 / 很)
(可 / 可能-02, manner, 就 / 就-01)
(可 / 可能-02, purpose, 是 / 是-04)
(好 / 好-04, location, 不 / 不)
(探 / 探察员, degree, 好 / 好-04)
(搞 / 搞-04, location, 他 / 他)
(搞 / 搞-04, manner, 人 / 人)
(搞 / 搞-04, manner, 就 / 就-01)
(搞 / 搞-04, manner, 探2 / 探察)
(是 / 是-04, location, 不 / 不)
(认 / 认识-01, direction, 我 / 我)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 探 / 探察员)

Decoded in 75,294 microseconds
Sentence: “ 这 是 可能 的 。

Spans:
Span 3-4:  可能 => 可能-02
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  可能 => 可能-01
Oracle Span 1-2:  这 => 这

Incorrect span: 可能 => 可能-02
Extra span: 是 => 是-04
Missing span: 可能 => 可能-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	可能	_	VV	VV	_	3	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 可能-01, domain, x6 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),可能,可能-02,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 是-04, 0 -> 可能-02),Map(这 -> 这, 是 -> 是-04, 可 -> 可能-02))),[Ljava.lang.String;@5432c277,Annotation([Ljava.lang.String;@15e0fe05,[Ljava.lang.String;@1128620c,[Ljava.lang.String;@6bf13698),Annotation([Ljava.lang.String;@299270eb,[Ljava.lang.String;@3b90a30a,[Ledu.cmu.lti.nlp.amr.Dependency;@69fa8e76),Annotation([Ljava.lang.String;@bdd2027,[Ljava.lang.String;@31f20c9f,[Ljava.lang.String;@f446158),Annotation([Ljava.lang.String;@32f0c7f8,[Ljava.lang.String;@504e1599,[Ledu.cmu.lti.nlp.amr.Entity;@71f96dfb))
AMR:
(可 / 可能-02, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)

Decoded in 4,075 microseconds
Sentence: 因此 ， 如果 探察家 的 品德 不错 ， 就 对 他 的 发现 进行 调查 。 ”

Spans:
Span 6-7:  不错 => 不错-01
Span 10-11:  他 => 他
Span 12-13:  发现 => 发现-01
Span 5-6:  品德 => 品德
Span 9-10:  对 => 对-02
Span 8-9:  就 => 就-01
Span 3-4:  探察家 => 探察家
Span 14-15:  调查 => 调查-01
Span 13-14:  进行 => 进行-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  不错 => 不错-01
Oracle Span 12-13:  发现 => 发现-01
Oracle Span 5-6:  品德 => 品德
Oracle Span 3-4:  探察家 => 探察家
Oracle Span 14-15:  调查 => 调查-01
Oracle Span 13-14:  进行 => 进行-01

Extra span: 他 => 他
Extra span: 对 => 对-02
Extra span: 就 => 就-01
Dependencies:
1	因此	_	AD	AD	_	7	advmod	_	_
2	,	_	PU	PU	_	7	punct	_	_
3	如果	_	CS	CS	_	4	advmod	_	_
4	探察家	_	VV	VV	_	6	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	品德	_	NN	NN	_	7	nsubj	_	_
7	不错	_	VA	VA	_	0	root	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	对	_	P	P	_	14	prep	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	发现	_	NN	NN	_	10	pobj	_	_
14	进行	_	VV	VV	_	7	dep	_	_
15	调查	_	NN	NN	_	14	dobj	_	_
16	。	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x19 / 不错-01, arg0, x20 / 品德)
(x20 / 品德, poss, x21 / 探察家)
(x23 / 进行-01, arg1, x24 / 调查-01)
(x24 / 调查-01, arg1, x25 / 发现-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),调查,调查-01,false), Span(13,14,List(1),进行,进行-01,false), Span(12,13,List(2),发现,发现-01,false), Span(10,11,List(3),他,他,false), Span(9,10,List(4),对,对-02,false), Span(8,9,List(5),就,就-01,false), Span(6,7,List(6),不错,不错-01,false), Span(5,6,List(7),品德,品德,false), Span(3,4,List(8),探察家,探察家,false)),Map(2 -> 发现-01, 5 -> 就-01, 8 -> 探察家, 7 -> 品德, 1 -> 进行-01, 4 -> 对-02, 6 -> 不错-01, 0 -> 调查-01, 3 -> 他),Map(就 -> 就-01, 发 -> 发现-01, 探 -> 探察家, 他 -> 他, 不 -> 不错-01, 进 -> 进行-01, 调 -> 调查-01, 品 -> 品德, 对 -> 对-02))),[Ljava.lang.String;@5d1b9c3d,Annotation([Ljava.lang.String;@69e05f61,[Ljava.lang.String;@49a26d19,[Ljava.lang.String;@730e5763),Annotation([Ljava.lang.String;@7275c74b,[Ljava.lang.String;@19058533,[Ledu.cmu.lti.nlp.amr.Dependency;@4315e9af),Annotation([Ljava.lang.String;@42210be1,[Ljava.lang.String;@1eb2d371,[Ljava.lang.String;@2babf189),Annotation([Ljava.lang.String;@479f2dc2,[Ljava.lang.String;@dab48d3,[Ledu.cmu.lti.nlp.amr.Entity;@58a2b4c))
AMR:
(不 / 不错-01, location, 品 / 品德)
(不 / 不错-01, snt1, 就 / 就-01)
(品 / 品德, poss, 探 / 探察家)
(对 / 对-02, direction, 他 / 他)
(对 / 对-02, manner, 就 / 就-01)
(进 / 进行-01, prep-for, 调 / 调查-01)
(进 / 进行-01, prep-out, 发 / 发现-01)
(进 / 进行-01, purpose, 对 / 对-02)

Decoded in 23,397 microseconds
Sentence: “ 去 看一看 吗 ？ ”

Spans:
Span 1-2:  去 => 去-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  去 => 去-01

Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	去	_	VV	VV	_	0	root	_	_
3	看一看	_	CD	CD	_	2	dep	_	_
4	吗	_	SP	SP	_	2	dep	_	_
5	？	_	PU	PU	_	2	punct	_	_
6	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),去,去-02,false)),Map(0 -> 去-02),Map(去 -> 去-02))),[Ljava.lang.String;@7159a5cd,Annotation([Ljava.lang.String;@4f966719,[Ljava.lang.String;@18ac53e8,[Ljava.lang.String;@4ca8dbfa),Annotation([Ljava.lang.String;@7063686f,[Ljava.lang.String;@c3177d5,[Ledu.cmu.lti.nlp.amr.Dependency;@76f856a8),Annotation([Ljava.lang.String;@7c853486,[Ljava.lang.String;@174e1b69,[Ljava.lang.String;@1046498a),Annotation([Ljava.lang.String;@243f003c,[Ljava.lang.String;@71cb3139,[Ledu.cmu.lti.nlp.amr.Entity;@1639f93a))
AMR:


Decoded in 1,685 microseconds
Sentence: “ 不 。

Spans:
Span 1-2:  不 => 不

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  不 => 不

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	不	_	NN	NN	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),不,不,false)),Map(0 -> 不),Map(不 -> 不))),[Ljava.lang.String;@3491e86e,Annotation([Ljava.lang.String;@68f32020,[Ljava.lang.String;@409986fe,[Ljava.lang.String;@19b047fe),Annotation([Ljava.lang.String;@22590e3e,[Ljava.lang.String;@53dad875,[Ledu.cmu.lti.nlp.amr.Dependency;@5f780a86),Annotation([Ljava.lang.String;@446c3920,[Ljava.lang.String;@2eaef76d,[Ljava.lang.String;@2b329bbd),Annotation([Ljava.lang.String;@34819867,[Ljava.lang.String;@118102ee,[Ledu.cmu.lti.nlp.amr.Entity;@48cd9a2c))
AMR:


Decoded in 1,202 microseconds
Sentence: 那 太 复杂 了 。

Spans:
Span 2-3:  复杂 => 复杂-01
Span 1-2:  太 => 太
Span 0-1:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  复杂 => 复杂-01
Oracle Span 1-2:  太 => 太
Oracle Span 0-1:  那 => 那

Dependencies:
1	那	_	PN	PN	_	3	nsubj	_	_
2	太	_	AD	AD	_	3	advmod	_	_
3	复杂	_	VA	VA	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 复杂-01, arg0, x3 / 那)
(x0 / 复杂-01, degree, x2 / 太)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),复杂,复杂-01,false), Span(1,2,List(1),太,太,false), Span(0,1,List(2),那,那,false)),Map(2 -> 那, 1 -> 太, 0 -> 复杂-01),Map(太 -> 太, 那 -> 那, 复 -> 复杂-01))),[Ljava.lang.String;@771d1ffb,Annotation([Ljava.lang.String;@4f67e3df,[Ljava.lang.String;@56681eaf,[Ljava.lang.String;@72d0f2b4),Annotation([Ljava.lang.String;@6d2dc9d2,[Ljava.lang.String;@1da4b6b3,[Ledu.cmu.lti.nlp.amr.Dependency;@b2f4ece),Annotation([Ljava.lang.String;@7e1f584d,[Ljava.lang.String;@7dff6d05,[Ljava.lang.String;@45d64d27),Annotation([Ljava.lang.String;@34fe326d,[Ljava.lang.String;@30a7c98f,[Ledu.cmu.lti.nlp.amr.Entity;@36361ddb))
AMR:
(复 / 复杂-01, degree, 太 / 太)
(复 / 复杂-01, op, 那 / 那)

Decoded in 4,504 microseconds
Sentence: 但是 要求 探察家 提出 证据 来 。

Spans:
Span 2-3:  探察家 => 探察家
Span 3-4:  提出 => 提出-01
Span 5-6:  来 => 来-06
Span 1-2:  要求 => 要求-03
Span 4-5:  证据 => 证据

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  探察家 => 探察家
Oracle Span 3-4:  提出 => 提出-01
Oracle Span 1-2:  要求 => 要求-02
Oracle Span 4-5:  证据 => 证据

Extra span: 来 => 来-06
Incorrect span: 要求 => 要求-03
Missing span: 要求 => 要求-02
Dependencies:
1	但是	_	AD	AD	_	2	advmod	_	_
2	要求	_	VV	VV	_	0	root	_	_
3	探察家	_	AD	AD	_	4	advmod	_	_
4	提出	_	VV	VV	_	2	ccomp	_	_
5	证据	_	NN	NN	_	6	lobj	_	_
6	来	_	LC	LC	_	4	loc	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 要求-02, arg1, x3 / 探察家)
(x2 / 要求-02, arg2, x4 / 提出-01)
(x4 / 提出-01, arg1, x6 / 证据)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),来,来-06,false), Span(4,5,List(1),证据,证据,false), Span(3,4,List(2),提出,提出-01,false), Span(2,3,List(3),探察家,探察家,false), Span(1,2,List(4),要求,要求-03,false)),Map(2 -> 提出-01, 1 -> 证据, 4 -> 要求-03, 0 -> 来-06, 3 -> 探察家),Map(探 -> 探察家, 来 -> 来-06, 要 -> 要求-03, 证 -> 证据, 提 -> 提出-01))),[Ljava.lang.String;@41fed14f,Annotation([Ljava.lang.String;@4d6ee47,[Ljava.lang.String;@a33b4e3,[Ljava.lang.String;@c6da8bb),Annotation([Ljava.lang.String;@3bae64d0,[Ljava.lang.String;@8b91134,[Ledu.cmu.lti.nlp.amr.Dependency;@1fba386c),Annotation([Ljava.lang.String;@7e736350,[Ljava.lang.String;@36b310aa,[Ljava.lang.String;@76c387f9),Annotation([Ljava.lang.String;@3874b815,[Ljava.lang.String;@5d7835a8,[Ledu.cmu.lti.nlp.amr.Entity;@736048ed))
AMR:
(提 / 提出-01, snt3, 证 / 证据)
(来 / 来-06, ARG4, 证 / 证据)
(要 / 要求-03, ARG1, 探 / 探察家)
(要 / 要求-03, time, 提 / 提出-01)

Decoded in 9,017 microseconds
Sentence: 例如 ， 假使 他 发现 了 一 座 大 山 ， 就 要求 他 带来 一些 大 石头 。 ”

Spans:
Span 15-16:  一些 => 一些
Span 13-14:  他 => 他
Span 3-4:  他 => 他
Span 0-1:  例如 => 例如-01
Span 4-5:  发现 => 发现-01
Span 16-17:  大 => 大
Span 8-9:  大 => 大
Span 11-12:  就 => 就-01
Span 9-10:  山 => 山
Span 14-15:  带来 => 带来-02
Span 17-18:  石头 => 石头
Span 12-13:  要求 => 要求-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  一些 => 一些
Oracle Span 3-4:  他 => 他
Oracle Span 13-14:  他 => 他
Oracle Span 0-1:  例如 => 例如-01
Oracle Span 4-5:  发现 => 发现-01
Oracle Span 8-9:  大 => 大-01
Oracle Span 16-17:  大 => 大-01
Oracle Span 11-12:  就 => 就
Oracle Span 9-10:  山 => 山
Oracle Span 14-15:  带来 => 带来-02
Oracle Span 17-18:  石头 => 石头
Oracle Span 12-13:  要求 => 要求-02

Incorrect span: 大 => 大
Incorrect span: 要求 => 要求-03
Incorrect span: 就 => 就-01
Incorrect span: 大 => 大
Missing span: 大 => 大-01
Missing span: 要求 => 要求-02
Missing span: 大 => 大-01
Missing span: 就 => 就
Dependencies:
1	例如	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	假使	_	CS	CS	_	5	advmod	_	_
4	他	_	PN	PN	_	5	nsubj	_	_
5	发现	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	10	clf	_	_
9	大	_	JJ	JJ	_	10	amod	_	_
10	山	_	NN	NN	_	5	dobj	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	就	_	AD	AD	_	13	advmod	_	_
13	要求	_	VV	VV	_	0	root	_	_
14	他	_	PN	PN	_	13	dobj	_	_
15	带来	_	VV	VV	_	13	dep	_	_
16	一些	_	CD	CD	_	18	nummod	_	_
17	大	_	JJ	JJ	_	18	amod	_	_
18	石头	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	13	punct	_	_
20	”	_	PU	PU	_	13	punct	_	_

Oracle:
(x21 / 发现-01, arg0, x22 / 他)
(x21 / 发现-01, arg1, x23 / 山)
(x23 / 山, mod, x24 / 大-01)
(x26 / 要求-02, arg1, x28 / 他)
(x26 / 要求-02, arg2, x29 / 带来-02)
(x26 / 要求-02, manner, x27 / 就)
(x29 / 带来-02, arg1, x30 / 石头)
(x30 / 石头, mod, x31 / 大-01)
(x30 / 石头, mod, x32 / 一些)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),石头,石头,false), Span(16,17,List(1),大,大,false), Span(15,16,List(2),一些,一些,false), Span(14,15,List(3),带来,带来-02,false), Span(13,14,List(4),他,他,false), Span(12,13,List(5),要求,要求-03,false), Span(11,12,List(6),就,就-01,false), Span(9,10,List(7),山,山,false), Span(8,9,List(8),大,大,false), Span(4,5,List(9),发现,发现-01,false), Span(3,4,List(10),他,他,false), Span(0,1,List(11),例如,例如-01,false)),Map(2 -> 一些, 5 -> 要求-03, 8 -> 大, 7 -> 山, 1 -> 大, 11 -> 例如-01, 4 -> 他, 6 -> 就-01, 9 -> 发现-01, 0 -> 石头, 10 -> 他, 3 -> 带来-02),Map(他2 -> 他, 发 -> 发现-01, 就 -> 就-01, 石 -> 石头, 大2 -> 大, 要 -> 要求-03, 大 -> 大, 他 -> 他, 带 -> 带来-02, 山 -> 山, 例 -> 例如-01, 一 -> 一些))),[Ljava.lang.String;@1976f537,Annotation([Ljava.lang.String;@45f421c,[Ljava.lang.String;@1816e24a,[Ljava.lang.String;@6940f685),Annotation([Ljava.lang.String;@47b179d7,[Ljava.lang.String;@39008c9f,[Ledu.cmu.lti.nlp.amr.Dependency;@162b3d47),Annotation([Ljava.lang.String;@783115d9,[Ljava.lang.String;@3402b4c9,[Ljava.lang.String;@95bb2a2),Annotation([Ljava.lang.String;@46d567cb,[Ljava.lang.String;@363a3d15,[Ledu.cmu.lti.nlp.amr.Entity;@173f73e7))
AMR:
(一 / 一些, prep-out, 带 / 带来-02)
(发 / 发现-01, snt1, 大2 / 大)
(发 / 发现-01, snt2, 他2 / 他)
(发 / 发现-01, snt2, 例 / 例如-01)
(山 / 山, mod, 大2 / 大)
(带 / 带来-02, manner, 要 / 要求-03)
(石 / 石头, mod, 一 / 一些)
(石 / 石头, mod, 大 / 大)
(要 / 要求-03, direction, 他 / 他)
(要 / 要求-03, manner, 就 / 就-01)
(要 / 要求-03, manner, 山 / 山)

Decoded in 40,832 microseconds
Sentence: 地理学家 忽然 忙乱 起来 。

Spans:
Span 0-1:  地理学家 => 地理学家
Span 2-3:  忙乱 => 忙乱-01
Span 1-2:  忽然 => 忽然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  地理学家 => 地理学家
Oracle Span 2-3:  忙乱 => 忙乱-01
Oracle Span 1-2:  忽然 => 忽然

Dependencies:
1	地理学家	_	NN	NN	_	2	nn	_	_
2	忽然	_	NN	NN	_	3	nsubj	_	_
3	忙乱	_	VV	VV	_	0	root	_	_
4	起来	_	VV	VV	_	3	comod	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 忙乱-01, arg0, x3 / 地理学家)
(x0 / 忙乱-01, manner, x2 / 忽然)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),忙乱,忙乱-01,false), Span(1,2,List(1),忽然,忽然,false), Span(0,1,List(2),地理学家,地理学家,false)),Map(2 -> 地理学家, 1 -> 忽然, 0 -> 忙乱-01),Map(忽 -> 忽然, 忙 -> 忙乱-01, 地 -> 地理学家))),[Ljava.lang.String;@43a51d00,Annotation([Ljava.lang.String;@2e23c180,[Ljava.lang.String;@499683c4,[Ljava.lang.String;@25da615a),Annotation([Ljava.lang.String;@4efc25fc,[Ljava.lang.String;@7ee3d262,[Ledu.cmu.lti.nlp.amr.Dependency;@396e6d9),Annotation([Ljava.lang.String;@75308740,[Ljava.lang.String;@5acc9fdf,[Ljava.lang.String;@3a5c2626),Annotation([Ljava.lang.String;@e48bf9a,[Ljava.lang.String;@7fb33394,[Ledu.cmu.lti.nlp.amr.Entity;@41bf79da))
AMR:
(忙 / 忙乱-01, ARG2, 地 / 地理学家)
(忙 / 忙乱-01, manner, 忽 / 忽然)

Decoded in 5,327 microseconds
Sentence: “ 正好 ， 你 是 从 老 远 来 的 么 ！

Spans:
Span 3-4:  你 => 你
Span 4-5:  是 => 是-04
Span 8-9:  来 => 来-06
Span 1-2:  正好 => 正好
Span 6-7:  老 => 老
Span 7-8:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  来 => 来-01
Oracle Span 1-2:  正好 => 正好

Incorrect span: 来 => 来-06
Extra span: 远 => 远
Extra span: 老 => 老
Extra span: 是 => 是-04
Missing span: 来 => 来-01
Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	正好	_	AD	AD	_	5	advmod	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	你	_	PN	PN	_	5	top	_	_
5	是	_	VC	VC	_	11	dep	_	_
6	从	_	P	P	_	9	prep	_	_
7	老	_	NR	NR	_	6	pobj	_	_
8	远	_	AD	AD	_	9	advmod	_	_
9	来	_	VV	VV	_	5	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	么	_	VV	VV	_	0	root	_	_
12	！	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 来-01, arg0, x12 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),来,来-06,false), Span(7,8,List(1),远,远,false), Span(6,7,List(2),老,老,false), Span(4,5,List(3),是,是-04,false), Span(3,4,List(4),你,你,false), Span(1,2,List(5),正好,正好,false)),Map(2 -> 老, 5 -> 正好, 1 -> 远, 4 -> 你, 0 -> 来-06, 3 -> 是-04),Map(来 -> 来-06, 你 -> 你, 远 -> 远, 正 -> 正好, 老 -> 老, 是 -> 是-04))),[Ljava.lang.String;@1a891add,Annotation([Ljava.lang.String;@5176d279,[Ljava.lang.String;@373f7450,[Ljava.lang.String;@d74bac4),Annotation([Ljava.lang.String;@5ff90645,[Ljava.lang.String;@387bf2d9,[Ledu.cmu.lti.nlp.amr.Dependency;@74aa9c72),Annotation([Ljava.lang.String;@5c20aab9,[Ljava.lang.String;@4b7c4456,[Ljava.lang.String;@2c768ada),Annotation([Ljava.lang.String;@c1fca2a,[Ljava.lang.String;@5533dc72,[Ledu.cmu.lti.nlp.amr.Entity;@7c447c76))
AMR:
(是 / 是-04, degree, 你 / 你)
(是 / 是-04, manner, 正 / 正好)
(来 / 来-06, manner, 远 / 远)
(老 / 老, mod, 是 / 是-04)
(远 / 远, mod, 老 / 老)

Decoded in 11,537 microseconds
Sentence: 你 是 个 探察家 ！

Spans:
Span 0-1:  你 => 你
Span 3-4:  探察家 => 探察家
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  探察家 => 探察家

Extra span: 是 => 是-04
Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	个	_	M	M	_	4	dep	_	_
4	探察家	_	NN	NN	_	2	attr	_	_
5	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / 探察家, domain, x6 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),探察家,探察家,false), Span(1,2,List(1),是,是-04,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 是-04, 0 -> 探察家),Map(探 -> 探察家, 你 -> 你, 是 -> 是-04))),[Ljava.lang.String;@64fc097e,Annotation([Ljava.lang.String;@1640c151,[Ljava.lang.String;@5d5b5fa7,[Ljava.lang.String;@2a32fb6),Annotation([Ljava.lang.String;@6107165,[Ljava.lang.String;@164a62bf,[Ledu.cmu.lti.nlp.amr.Dependency;@11ebb1b6),Annotation([Ljava.lang.String;@aaee2a2,[Ljava.lang.String;@f3021cb,[Ljava.lang.String;@4aaae508),Annotation([Ljava.lang.String;@6009bea,[Ljava.lang.String;@7bc6d27a,[Ledu.cmu.lti.nlp.amr.Entity;@75769ab0))
AMR:
(是 / 是-04, accompanier, 探 / 探察家)
(是 / 是-04, manner, 你 / 你)

Decoded in 3,821 microseconds
Sentence: 你 来 给 我 介绍 一下 你 的 星球 吧 ！ ”

Spans:
Span 4-5:  介绍 => 介绍-03
Span 6-7:  你 => 你
Span 0-1:  你 => 你
Span 3-4:  我 => 我
Span 8-9:  星球 => 星球
Span 1-2:  来 => 来-06
Span 2-3:  给 => 给-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  介绍 => 介绍-03
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  星球 => 星球

Extra span: 你 => 你
Extra span: 给 => 给-02
Extra span: 来 => 来-06
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	来	_	MSP	MSP	_	5	prtmod	_	_
3	给	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	介绍	_	VV	VV	_	0	root	_	_
6	一下	_	AD	AD	_	5	advmod	_	_
7	你	_	PN	PN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	星球	_	NN	NN	_	5	dobj	_	_
10	吧	_	SP	SP	_	5	dep	_	_
11	！	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 介绍-03, arg0, x14 / 你)
(x13 / 介绍-03, arg1, x15 / 星球)
(x13 / 介绍-03, arg2, x17 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),星球,星球,false), Span(6,7,List(1),你,你,false), Span(4,5,List(2),介绍,介绍-03,false), Span(3,4,List(3),我,我,false), Span(2,3,List(4),给,给-02,false), Span(1,2,List(5),来,来-06,false), Span(0,1,List(6),你,你,false)),Map(2 -> 介绍-03, 5 -> 来-06, 1 -> 你, 4 -> 给-02, 6 -> 你, 0 -> 星球, 3 -> 我),Map(介 -> 介绍-03, 星 -> 星球, 来 -> 来-06, 我 -> 我, 你 -> 你, 给 -> 给-02, 你2 -> 你))),[Ljava.lang.String;@6869a3b3,Annotation([Ljava.lang.String;@6ab4ba9f,[Ljava.lang.String;@27ace0b1,[Ljava.lang.String;@664e5dee),Annotation([Ljava.lang.String;@431f1eaf,[Ljava.lang.String;@cb03411,[Ledu.cmu.lti.nlp.amr.Dependency;@4c59e45e),Annotation([Ljava.lang.String;@58ec7116,[Ljava.lang.String;@63bde6c2,[Ljava.lang.String;@6ea04618),Annotation([Ljava.lang.String;@6dd82486,[Ljava.lang.String;@56078cea,[Ledu.cmu.lti.nlp.amr.Entity;@5a00eb1e))
AMR:
(介 / 介绍-03, prep-on, 你 / 你)
(介 / 介绍-03, quant, 我 / 我)
(介 / 介绍-03, time, 给 / 给-02)
(介 / 介绍-03, year, 星 / 星球)
(来 / 来-06, manner, 你2 / 你)
(给 / 给-02, manner, 来 / 来-06)

Decoded in 14,201 microseconds
Sentence: 于是 ， 已经 打开 登记簿 的 地理学家 ， 削 起 他 的 铅笔 来 。

Spans:
Span 10-11:  他 => 他
Span 8-9:  削 => 削-01
Span 6-7:  地理学家 => 地理学家
Span 2-3:  已经 => 已经
Span 3-4:  打开 => 打开-01
Span 13-14:  来 => 来-06
Span 12-13:  铅笔 => 铅笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  他 => 他
Oracle Span 8-9:  削 => 削-01
Oracle Span 6-7:  地理学家 => 地理学家
Oracle Span 2-3:  已经 => 已经
Oracle Span 3-4:  打开 => 打开-01
Oracle Span 12-13:  铅笔 => 铅笔

Extra span: 来 => 来-06
Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	已经	_	AD	AD	_	4	advmod	_	_
4	打开	_	VV	VV	_	0	root	_	_
5	登记簿	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地理学家	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	削	_	CD	CD	_	10	nummod	_	_
10	起	_	M	M	_	13	clf	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	铅笔	_	NN	NN	_	14	nsubj	_	_
14	来	_	VV	VV	_	4	dep	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 削-01, arg0, x3 / 地理学家)
(x2 / 削-01, arg1, x7 / 铅笔)
(x4 / 打开-01, arg0, x3 / 地理学家)
(x4 / 打开-01, manner, x6 / 已经)
(x7 / 铅笔, poss, x8 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),来,来-06,false), Span(12,13,List(1),铅笔,铅笔,false), Span(10,11,List(2),他,他,false), Span(8,9,List(3),削,削-01,false), Span(6,7,List(4),地理学家,地理学家,false), Span(3,4,List(5),打开,打开-01,false), Span(2,3,List(6),已经,已经,false)),Map(2 -> 他, 5 -> 打开-01, 1 -> 铅笔, 4 -> 地理学家, 6 -> 已经, 0 -> 来-06, 3 -> 削-01),Map(已 -> 已经, 来 -> 来-06, 打 -> 打开-01, 他 -> 他, 地 -> 地理学家, 削 -> 削-01, 铅 -> 铅笔))),[Ljava.lang.String;@36fcf6c0,Annotation([Ljava.lang.String;@1aac188d,[Ljava.lang.String;@7026b7ee,[Ljava.lang.String;@2d23faef),Annotation([Ljava.lang.String;@7cb8437d,[Ljava.lang.String;@62a4417,[Ledu.cmu.lti.nlp.amr.Dependency;@43f61afb),Annotation([Ljava.lang.String;@713064e8,[Ljava.lang.String;@4fad6218,[Ljava.lang.String;@1bf39d06),Annotation([Ljava.lang.String;@68217d41,[Ljava.lang.String;@1ac45389,[Ledu.cmu.lti.nlp.amr.Entity;@3e5d4f6b))
AMR:
(他 / 他, ARG3, 来 / 来-06)
(削 / 削-01, ARG0, 铅 / 铅笔)
(削 / 削-01, ARG4, 地 / 地理学家)
(打 / 打开-01, ARG0, 地 / 地理学家)
(打 / 打开-01, manner, 已 / 已经)
(铅 / 铅笔, poss, 他 / 他)

Decoded in 21,434 microseconds
Sentence: 他 首先 是 用 铅笔 记 下 探察家 的 叙述 ，

Spans:
Span 6-7:  下 => 下-07
Span 0-1:  他 => 他
Span 9-10:  叙述 => 叙述-01
Span 7-8:  探察家 => 探察家
Span 2-3:  是 => 是-04
Span 3-4:  用 => 用
Span 5-6:  记 => 记-02
Span 4-5:  铅笔 => 铅笔
Span 1-2:  首先 => 首先

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  叙述 => 叙述-01
Oracle Span 7-8:  探察家 => 探察家
Oracle Span 5-6:  记 => 记-01
Oracle Span 4-5:  铅笔 => 铅笔

Extra span: 下 => 下-07
Incorrect span: 记 => 记-02
Extra span: 用 => 用
Extra span: 是 => 是-04
Extra span: 首先 => 首先
Missing span: 记 => 记-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	首先	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	用	_	P	P	_	6	prep	_	_
5	铅笔	_	NN	NN	_	4	pobj	_	_
6	记	_	VV	VV	_	10	rcmod	_	_
7	下	_	DT	DT	_	8	det	_	_
8	探察家	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	6	cpm	_	_
10	叙述	_	NN	NN	_	3	attr	_	_
11	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 叙述-01, poss, x12 / 探察家)
(x9 / 记-01, arg0, x10 / 他)
(x9 / 记-01, arg1, x11 / 叙述-01)
(x9 / 记-01, instrument, x13 / 铅笔)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),叙述,叙述-01,false), Span(7,8,List(1),探察家,探察家,false), Span(6,7,List(2),下,下-07,false), Span(5,6,List(3),记,记-02,false), Span(4,5,List(4),铅笔,铅笔,false), Span(3,4,List(5),用,用,false), Span(2,3,List(6),是,是-04,false), Span(1,2,List(7),首先,首先,false), Span(0,1,List(8),他,他,false)),Map(2 -> 下-07, 5 -> 用, 8 -> 他, 7 -> 首先, 1 -> 探察家, 4 -> 铅笔, 6 -> 是-04, 0 -> 叙述-01, 3 -> 记-02),Map(用 -> 用, 探 -> 探察家, 下 -> 下-07, 他 -> 他, 叙 -> 叙述-01, 记 -> 记-02, 首 -> 首先, 是 -> 是-04, 铅 -> 铅笔))),[Ljava.lang.String;@39c1fe0b,Annotation([Ljava.lang.String;@5ae95707,[Ljava.lang.String;@62891fc8,[Ljava.lang.String;@367b22e5),Annotation([Ljava.lang.String;@fca387,[Ljava.lang.String;@10bd9df0,[Ledu.cmu.lti.nlp.amr.Dependency;@3ae0b770),Annotation([Ljava.lang.String;@55e3d6c3,[Ljava.lang.String;@30e6a763,[Ljava.lang.String;@4c48fe92),Annotation([Ljava.lang.String;@732c9b5c,[Ljava.lang.String;@38320e34,[Ledu.cmu.lti.nlp.amr.Entity;@3d6a6bee))
AMR:
(叙 / 叙述-01, poss, 探 / 探察家)
(探 / 探察家, mod, 下 / 下-07)
(是 / 是-04, ARG1, 用 / 用)
(是 / 是-04, ARG4, 他 / 他)
(是 / 是-04, manner, 首 / 首先)
(用 / 用, quant, 铅 / 铅笔)
(记 / 记-02, instrument, 铅 / 铅笔)
(记 / 记-02, prep-for, 叙 / 叙述-01)

Decoded in 32,976 microseconds
Sentence: 等到 探察家 提出 了 证据 以后 再 用 墨水笔 记 下来 。

Spans:
Span 10-11:  下来 => 下来-02
Span 6-7:  再 => 再
Span 8-9:  墨水笔 => 墨水笔
Span 1-2:  探察家 => 探察家
Span 2-3:  提出 => 提出-01
Span 7-8:  用 => 用
Span 0-1:  等到 => 等到-01
Span 9-10:  记 => 记-02
Span 4-5:  证据 => 证据

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  墨水笔 => 墨水笔
Oracle Span 1-2:  探察家 => 探察家
Oracle Span 2-3:  提出 => 提出-01
Oracle Span 0-1:  等到 => 等到-01
Oracle Span 9-10:  记 => 记-01
Oracle Span 4-5:  证据 => 证据

Extra span: 下来 => 下来-02
Incorrect span: 记 => 记-02
Extra span: 用 => 用
Extra span: 再 => 再
Missing span: 记 => 记-01
Dependencies:
1	等到	_	NN	NN	_	2	nn	_	_
2	探察家	_	NN	NN	_	3	nsubj	_	_
3	提出	_	VV	VV	_	6	lccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	证据	_	NN	NN	_	3	dobj	_	_
6	以后	_	LC	LC	_	10	loc	_	_
7	再	_	AD	AD	_	10	advmod	_	_
8	用	_	P	P	_	10	prep	_	_
9	墨水笔	_	NN	NN	_	8	pobj	_	_
10	记	_	VV	VV	_	0	root	_	_
11	下来	_	VV	VV	_	10	comod	_	_
12	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x15 / 记-01, instrument, x16 / 墨水笔)
(x7 / 等到-01, arg1, x8 / 提出-01)
(x8 / 提出-01, arg0, x9 / 探察家)
(x8 / 提出-01, arg1, x10 / 证据)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),下来,下来-02,false), Span(9,10,List(1),记,记-02,false), Span(8,9,List(2),墨水笔,墨水笔,false), Span(7,8,List(3),用,用,false), Span(6,7,List(4),再,再,false), Span(4,5,List(5),证据,证据,false), Span(2,3,List(6),提出,提出-01,false), Span(1,2,List(7),探察家,探察家,false), Span(0,1,List(8),等到,等到-01,false)),Map(2 -> 墨水笔, 5 -> 证据, 8 -> 等到-01, 7 -> 探察家, 1 -> 记-02, 4 -> 再, 6 -> 提出-01, 0 -> 下来-02, 3 -> 用),Map(探 -> 探察家, 用 -> 用, 下 -> 下来-02, 等 -> 等到-01, 记 -> 记-02, 证 -> 证据, 墨 -> 墨水笔, 提 -> 提出-01, 再 -> 再))),[Ljava.lang.String;@36ddaebf,Annotation([Ljava.lang.String;@213c3543,[Ljava.lang.String;@9d7ccfe,[Ljava.lang.String;@670ce331),Annotation([Ljava.lang.String;@3cff0139,[Ljava.lang.String;@7c29adc8,[Ledu.cmu.lti.nlp.amr.Dependency;@4b2e3e8f),Annotation([Ljava.lang.String;@4bbb49b0,[Ljava.lang.String;@f096f37,[Ljava.lang.String;@3effd4f3),Annotation([Ljava.lang.String;@41f4fe5,[Ljava.lang.String;@15f8701f,[Ledu.cmu.lti.nlp.amr.Entity;@514cd540))
AMR:
(再 / 再, location, 证 / 证据)
(提 / 提出-01, mod, 证 / 证据)
(提 / 提出-01, prep-from, 探 / 探察家)
(用 / 用, manner, 再 / 再)
(用 / 用, quant, 墨 / 墨水笔)
(等 / 等到-01, ARG5, 提 / 提出-01)
(记 / 记-02, direction, 下 / 下来-02)
(记 / 记-02, instrument, 墨 / 墨水笔)

Decoded in 28,370 microseconds
Sentence: “ 怎么样 ？ ” 地理学家 询问 道 。

Spans:
Span 4-5:  地理学家 => 地理学家
Span 1-2:  怎么样 => 怎么样-01
Span 5-6:  询问 => 询问-01
Span 6-7:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  地理学家 => 地理学家
Oracle Span 1-2:  怎么样 => 怎么样-01
Oracle Span 5-6:  询问 => 询问-01

Extra span: 道 => 道-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	怎么样	_	JJ	JJ	_	3	amod	_	_
3	？	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	地理学家	_	NN	NN	_	6	nsubj	_	_
6	询问	_	VV	VV	_	0	root	_	_
7	道	_	NN	NN	_	6	dobj	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 询问-01, arg0, x2 / 地理学家)
(x0 / 询问-01, arg1, x3 / 怎么样-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),道,道-01,false), Span(5,6,List(1),询问,询问-01,false), Span(4,5,List(2),地理学家,地理学家,false), Span(1,2,List(3),怎么样,怎么样-01,false)),Map(2 -> 地理学家, 1 -> 询问-01, 0 -> 道-01, 3 -> 怎么样-01),Map(怎 -> 怎么样-01, 地 -> 地理学家, 道 -> 道-01, 询 -> 询问-01))),[Ljava.lang.String;@11d4dbd6,Annotation([Ljava.lang.String;@6f4ade6e,[Ljava.lang.String;@39e43310,[Ljava.lang.String;@eb507b9),Annotation([Ljava.lang.String;@390877d2,[Ljava.lang.String;@86733,[Ledu.cmu.lti.nlp.amr.Dependency;@186cb891),Annotation([Ljava.lang.String;@3ec2ecea,[Ljava.lang.String;@440eaa07,[Ljava.lang.String;@7fc7c4a),Annotation([Ljava.lang.String;@7aa9e414,[Ljava.lang.String;@53a5e217,[Ledu.cmu.lti.nlp.amr.Entity;@624a24f6))
AMR:
(询 / 询问-01, direction, 地 / 地理学家)
(询 / 询问-01, time, 怎 / 怎么样-01)
(道 / 道-01, degree, 询 / 询问-01)

Decoded in 6,552 microseconds
Sentence: “ 啊 ！ 我 那里 ， ” 小 王子 说道 ， “ 没有 多 大 意思 ，

Spans:
Span 1-2:  啊 => 啊
Span 13-14:  多 => 多
Span 14-15:  大 => 大
Span 7-8:  小 => 小
Span 15-16:  意思 => 意思-01
Span 3-4:  我 => 我
Span 8-9:  王子 => 王子
Span 9-10:  说道 => 说道
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  啊 => 啊
Oracle Span 7-8:  小 => 小-01
Oracle Span 15-16:  意思 => 意思
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说道 => 说道-01
Oracle Span 4-5:  那里 => 那里

Incorrect span: 意思 => 意思-01
Extra span: 大 => 大
Extra span: 多 => 多
Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Missing span: 说道 => 说道-01
Missing span: 意思 => 意思
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	VV	VV	_	3	mmod	_	_
3	！	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	5	nn	_	_
5	那里	_	PN	PN	_	3	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说道	_	VV	VV	_	3	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	13	punct	_	_
13	没有	_	VE	VE	_	10	ccomp	_	_
14	多	_	CD	CD	_	16	nummod	_	_
15	大	_	JJ	JJ	_	16	amod	_	_
16	意思	_	NN	NN	_	13	dobj	_	_
17	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x17 / 那里, poss, x18 / 我)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),意思,意思-01,false), Span(14,15,List(1),大,大,false), Span(13,14,List(2),多,多,false), Span(9,10,List(3),说道,说道,false), Span(8,9,List(4),王子,王子,false), Span(7,8,List(5),小,小,false), Span(4,5,List(6),那里,那里,false), Span(3,4,List(7),我,我,false), Span(1,2,List(8),啊,啊,false)),Map(2 -> 多, 5 -> 小, 8 -> 啊, 7 -> 我, 1 -> 大, 4 -> 王子, 6 -> 那里, 0 -> 意思-01, 3 -> 说道),Map(啊 -> 啊, 我 -> 我, 王 -> 王子, 大 -> 大, 意 -> 意思-01, 小 -> 小, 说 -> 说道, 多 -> 多, 那 -> 那里))),[Ljava.lang.String;@6b00ad9,Annotation([Ljava.lang.String;@338cc75f,[Ljava.lang.String;@4f453e63,[Ljava.lang.String;@7c9bdee9),Annotation([Ljava.lang.String;@7afbf561,[Ljava.lang.String;@2f98635e,[Ledu.cmu.lti.nlp.amr.Dependency;@49c8f6e8),Annotation([Ljava.lang.String;@6b0615ae,[Ljava.lang.String;@4e73b552,[Ljava.lang.String;@221dad51),Annotation([Ljava.lang.String;@2cec704c,[Ljava.lang.String;@771cbb1a,[Ledu.cmu.lti.nlp.amr.Entity;@2416498e))
AMR:
(多 / 多, location, 说 / 说道)
(大 / 大, degree, 多 / 多)
(小 / 小, location, 那 / 那里)
(意 / 意思-01, degree, 大 / 大)
(王 / 王子, mod, 小 / 小)
(说 / 说道, beneficiary, 王 / 王子)
(那 / 那里, location, 啊 / 啊)
(那 / 那里, poss, 我 / 我)

Decoded in 27,564 microseconds
Sentence: 那儿 很 小 。

Spans:
Span 2-3:  小 => 小
Span 1-2:  很 => 很
Span 0-1:  那儿 => 那儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  小 => 小-01
Oracle Span 1-2:  很 => 很
Oracle Span 0-1:  那儿 => 那儿

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	那儿	_	NN	NN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	小	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 小-01, degree, x2 / 很)
(x0 / 小-01, location, x4 / 那儿)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),小,小,false), Span(1,2,List(1),很,很,false), Span(0,1,List(2),那儿,那儿,false)),Map(2 -> 那儿, 1 -> 很, 0 -> 小),Map(很 -> 很, 小 -> 小, 那 -> 那儿))),[Ljava.lang.String;@6b2e0f78,Annotation([Ljava.lang.String;@240f6c41,[Ljava.lang.String;@3659d7b1,[Ljava.lang.String;@2015b2cd),Annotation([Ljava.lang.String;@3bdb2c78,[Ljava.lang.String;@64693226,[Ledu.cmu.lti.nlp.amr.Dependency;@1c758545),Annotation([Ljava.lang.String;@117bcfdc,[Ljava.lang.String;@73a19967,[Ljava.lang.String;@5e746d37),Annotation([Ljava.lang.String;@6e1b9411,[Ljava.lang.String;@21d1b321,[Ledu.cmu.lti.nlp.amr.Entity;@5ec46cdd))
AMR:
(小 / 小, degree, 很 / 很)
(小 / 小, location, 那 / 那儿)

Decoded in 4,769 microseconds
Sentence: 我 有 三 座 火山 ，

Spans:
Span 0-1:  我 => 我
Span 1-2:  有 => 有-06
Span 4-5:  火山 => 火山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  火山 => 火山

Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	有	_	VE	VE	_	0	root	_	_
3	三	_	CD	CD	_	4	nummod	_	_
4	座	_	M	M	_	2	dep	_	_
5	火山	_	NN	NN	_	2	conj	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 我)
(x0 / 有-01, arg1, x3 / 火山)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),火山,火山,false), Span(1,2,List(1),有,有-06,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 有-06, 0 -> 火山),Map(我 -> 我, 火 -> 火山, 有 -> 有-06))),[Ljava.lang.String;@2324bfe7,Annotation([Ljava.lang.String;@112d1c8e,[Ljava.lang.String;@3d49fd31,[Ljava.lang.String;@4016ccc1),Annotation([Ljava.lang.String;@46cb98a3,[Ljava.lang.String;@3ffb3598,[Ledu.cmu.lti.nlp.amr.Dependency;@4da9f723),Annotation([Ljava.lang.String;@3b2f4a93,[Ljava.lang.String;@213bd3d5,[Ljava.lang.String;@470a659f),Annotation([Ljava.lang.String;@451882b2,[Ljava.lang.String;@4a23350,[Ledu.cmu.lti.nlp.amr.Entity;@7b78ed6a))
AMR:
(有 / 有-06, ARG0, 我 / 我)
(有 / 有-06, ARG3, 火 / 火山)

Decoded in 4,906 microseconds
Sentence: 两 座 是 活 的 ， 一 座 是 熄灭 了 的 。

Spans:
Span 8-9:  是 => 是-04
Span 2-3:  是 => 是-04
Span 3-4:  活 => 活-04
Span 9-10:  熄灭 => 熄灭-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  活 => 活-04
Oracle Span 9-10:  熄灭 => 熄灭-01

Extra span: 是 => 是-04
Extra span: 是 => 是-04
Dependencies:
1	两	_	CD	CD	_	2	nummod	_	_
2	座	_	M	M	_	3	dep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	活	_	JJ	JJ	_	3	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	9	dep	_	_
9	是	_	VC	VC	_	3	conj	_	_
10	熄灭	_	VV	VV	_	9	attr	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	的	_	DEC	DEC	_	10	cpm	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),熄灭,熄灭-01,false), Span(8,9,List(1),是,是-04,false), Span(3,4,List(2),活,活-04,false), Span(2,3,List(3),是,是-04,false)),Map(2 -> 活-04, 1 -> 是-04, 0 -> 熄灭-01, 3 -> 是-04),Map(活 -> 活-04, 熄 -> 熄灭-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@6fca5907,Annotation([Ljava.lang.String;@6ec65b5e,[Ljava.lang.String;@7bebcd65,[Ljava.lang.String;@47447ccf),Annotation([Ljava.lang.String;@7afb1741,[Ljava.lang.String;@263bbfeb,[Ledu.cmu.lti.nlp.amr.Dependency;@31edeac),Annotation([Ljava.lang.String;@67d86804,[Ljava.lang.String;@45bb2aa1,[Ljava.lang.String;@3e84111a),Annotation([Ljava.lang.String;@4b1a43d8,[Ljava.lang.String;@6fa69af7,[Ledu.cmu.lti.nlp.amr.Entity;@73545b80))
AMR:
(是 / 是-04, ARG1, 熄 / 熄灭-01)
(是 / 是-04, ARG3, 活 / 活-04)
(活 / 活-04, ARG1, 是2 / 是-04)

Decoded in 8,287 microseconds
Sentence: 但是 也 很 难 说 。 ”

Spans:
Span 1-2:  也 => 也
Span 2-3:  很 => 很
Span 4-5:  说 => 说-02
Span 3-4:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  也 => 也
Oracle Span 2-3:  很 => 很

Extra span: 说 => 说-02
Extra span: 难 => 难-01
Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	也	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	难	_	VA	VA	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),说,说-02,false), Span(3,4,List(1),难,难-01,false), Span(2,3,List(2),很,很,false), Span(1,2,List(3),也,也,false)),Map(2 -> 很, 1 -> 难-01, 0 -> 说-02, 3 -> 也),Map(也 -> 也, 难 -> 难-01, 很 -> 很, 说 -> 说-02))),[Ljava.lang.String;@6d469831,Annotation([Ljava.lang.String;@74db12c2,[Ljava.lang.String;@2ff15f8c,[Ljava.lang.String;@7ea899a9),Annotation([Ljava.lang.String;@2776015d,[Ljava.lang.String;@b174a73,[Ledu.cmu.lti.nlp.amr.Dependency;@2e3f79a2),Annotation([Ljava.lang.String;@1460c81d,[Ljava.lang.String;@38b5f25,[Ljava.lang.String;@327ed9f5),Annotation([Ljava.lang.String;@67594471,[Ljava.lang.String;@756b58a7,[Ledu.cmu.lti.nlp.amr.Entity;@2cc04358))
AMR:
(说 / 说-02, manner, 难 / 难-01)
(难 / 难-01, degree, 很 / 很)
(难 / 难-01, manner, 也 / 也)

Decoded in 5,408 microseconds
Sentence: “ 很 难 说 。 ” 地理学家 说道 。

Spans:
Span 6-7:  地理学家 => 地理学家
Span 1-2:  很 => 很
Span 3-4:  说 => 说-02
Span 7-8:  说道 => 说道
Span 2-3:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  地理学家 => 地理学家
Oracle Span 1-2:  很 => 很
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 说 => 说-02
Extra span: 难 => 难-01
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	很	_	AD	AD	_	4	advmod	_	_
3	难	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	7	conj	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	地理学家	_	VV	VV	_	0	root	_	_
8	说道	_	NN	NN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 地理学家)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说道,说道,false), Span(6,7,List(1),地理学家,地理学家,false), Span(3,4,List(2),说,说-02,false), Span(2,3,List(3),难,难-01,false), Span(1,2,List(4),很,很,false)),Map(2 -> 说-02, 1 -> 地理学家, 4 -> 很, 0 -> 说道, 3 -> 难-01),Map(难 -> 难-01, 说2 -> 说-02, 很 -> 很, 地 -> 地理学家, 说 -> 说道))),[Ljava.lang.String;@68b58644,Annotation([Ljava.lang.String;@45e22def,[Ljava.lang.String;@6ae3fb94,[Ljava.lang.String;@4417af13),Annotation([Ljava.lang.String;@d48673,[Ljava.lang.String;@548d5ed3,[Ledu.cmu.lti.nlp.amr.Dependency;@21c7208d),Annotation([Ljava.lang.String;@58516c91,[Ljava.lang.String;@7c129ef6,[Ljava.lang.String;@42d73c61),Annotation([Ljava.lang.String;@5a8cbffe,[Ljava.lang.String;@96a75da,[Ledu.cmu.lti.nlp.amr.Entity;@61e7bf2f))
AMR:
(说 / 说道, domain, 地 / 地理学家)
(说2 / 说-02, degree, 难 / 难-01)
(说2 / 说-02, purpose, 说 / 说道)
(难 / 难-01, degree, 很 / 很)

Decoded in 8,054 microseconds
Sentence: “ 我 还 有 一 朵 花 。 ”

Spans:
Span 1-2:  我 => 我
Span 3-4:  有 => 有-06
Span 6-7:  花 => 花-01
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  有 => 有-01
Oracle Span 6-7:  花 => 花
Oracle Span 2-3:  还 => 还

Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	7	clf	_	_
7	花	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 有-01, arg0, x10 / 我)
(x8 / 有-01, arg1, x11 / 花)
(x8 / 有-01, manner, x9 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),花,花-01,false), Span(3,4,List(1),有,有-06,false), Span(2,3,List(2),还,还,false), Span(1,2,List(3),我,我,false)),Map(2 -> 还, 1 -> 有-06, 0 -> 花-01, 3 -> 我),Map(我 -> 我, 花 -> 花-01, 还 -> 还, 有 -> 有-06))),[Ljava.lang.String;@1a28b346,Annotation([Ljava.lang.String;@25e49cb2,[Ljava.lang.String;@7f7af971,[Ljava.lang.String;@23382f76),Annotation([Ljava.lang.String;@7c551ad4,[Ljava.lang.String;@7d5508e0,[Ledu.cmu.lti.nlp.amr.Dependency;@554cd74a),Annotation([Ljava.lang.String;@37ed010a,[Ljava.lang.String;@633a2e99,[Ljava.lang.String;@367d2816),Annotation([Ljava.lang.String;@5b84f14,[Ljava.lang.String;@5a82ebf8,[Ledu.cmu.lti.nlp.amr.Entity;@68fe48d7))
AMR:
(有 / 有-06, manner, 还 / 还)
(有 / 有-06, poss, 我 / 我)
(有 / 有-06, purpose, 花 / 花-01)

Decoded in 6,860 microseconds
Sentence: “ 我们 是 不 记载 花卉 的 。 ” 地理学家 说 。

Spans:
Span 3-4:  不 => 不
Span 9-10:  地理学家 => 地理学家
Span 1-2:  我们 => 我们
Span 2-3:  是 => 是-04
Span 5-6:  花卉 => 花卉
Span 4-5:  记载 => 记载-01
Span 10-11:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  地理学家 => 地理学家
Oracle Span 1-2:  我们 => 我们
Oracle Span 5-6:  花卉 => 花卉
Oracle Span 4-5:  记载 => 记载-01
Oracle Span 10-11:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 不 => 不
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	11	dep	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	记载	_	VV	VV	_	3	ccomp	_	_
6	花卉	_	NN	NN	_	5	dobj	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	。	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	地理学家	_	NR	NR	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 记载-01)
(x3 / 记载-01, arg0, x5 / 我们)
(x3 / 记载-01, arg1, x6 / 花卉)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),地理学家,地理学家,false), Span(5,6,List(2),花卉,花卉,false), Span(4,5,List(3),记载,记载-01,false), Span(3,4,List(4),不,不,false), Span(2,3,List(5),是,是-04,false), Span(1,2,List(6),我们,我们,false)),Map(2 -> 花卉, 5 -> 是-04, 1 -> 地理学家, 4 -> 不, 6 -> 我们, 0 -> 说-02, 3 -> 记载-01),Map(我 -> 我们, 记 -> 记载-01, 地 -> 地理学家, 不 -> 不, 花 -> 花卉, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@379ce046,Annotation([Ljava.lang.String;@701bc94e,[Ljava.lang.String;@3d8b319e,[Ljava.lang.String;@27a97e08),Annotation([Ljava.lang.String;@77e7246b,[Ljava.lang.String;@5918c260,[Ledu.cmu.lti.nlp.amr.Dependency;@3d7b1f1c),Annotation([Ljava.lang.String;@51ce6f85,[Ljava.lang.String;@1f44ddab,[Ljava.lang.String;@5017e1),Annotation([Ljava.lang.String;@65b66b08,[Ljava.lang.String;@4726927c,[Ledu.cmu.lti.nlp.amr.Entity;@7eb6b6b6))
AMR:
(是 / 是-04, direction, 我 / 我们)
(是 / 是-04, location, 不 / 不)
(记 / 记载-01, manner, 不 / 不)
(记 / 记载-01, prep-through, 花 / 花卉)
(说 / 说-02, degree, 记 / 记载-01)
(说 / 说-02, direction, 地 / 地理学家)

Decoded in 15,506 microseconds
Sentence: “ 这 是 为什么 ？

Spans:
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	为什么	_	AD	AD	_	3	advmod	_	_
5	？	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),是,是-04,false), Span(1,2,List(1),这,这,false)),Map(1 -> 这, 0 -> 是-04),Map(这 -> 这, 是 -> 是-04))),[Ljava.lang.String;@7ed9499e,Annotation([Ljava.lang.String;@28e19366,[Ljava.lang.String;@5b275174,[Ljava.lang.String;@10ef5fa0),Annotation([Ljava.lang.String;@244e619a,[Ljava.lang.String;@10acd6,[Ledu.cmu.lti.nlp.amr.Dependency;@61dde151),Annotation([Ljava.lang.String;@b25b095,[Ljava.lang.String;@5cb042da,[Ljava.lang.String;@59c33386),Annotation([Ljava.lang.String;@571a9686,[Ljava.lang.String;@719d35e8,[Ledu.cmu.lti.nlp.amr.Entity;@2f651f93))
AMR:
(是 / 是-04, mod, 这 / 这)

Decoded in 2,484 microseconds
Sentence: 花 是 我 的 星球 上 最 美丽 的 东西 。 ”

Spans:
Span 9-10:  东西 => 东西
Span 2-3:  我 => 我
Span 4-5:  星球 => 星球
Span 1-2:  是 => 是-04
Span 6-7:  最 => 最
Span 7-8:  美丽 => 美丽-01
Span 0-1:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 9-10:  东西 => 东西
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  星球 => 星球
Oracle Span 6-7:  最 => 最
Oracle Span 7-8:  美丽 => 美丽-01
Oracle Span 0-1:  花 => 花

Extra span: 是 => 是-04
Incorrect span: 花 => 花-01
Missing span: 花 => 花
Dependencies:
1	花	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	8	loc	_	_
7	最	_	AD	AD	_	8	advmod	_	_
8	美丽	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	东西	_	NN	NN	_	2	attr	_	_
11	。	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 美丽-01, degree, x11 / 最)
(x12 / 星球, poss, x13 / 我)
(x9 / 东西, domain, x14 / 花)
(x9 / 东西, location, x12 / 星球)
(x9 / 东西, mod, x10 / 美丽-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),东西,东西,false), Span(7,8,List(1),美丽,美丽-01,false), Span(6,7,List(2),最,最,false), Span(4,5,List(3),星球,星球,false), Span(2,3,List(4),我,我,false), Span(1,2,List(5),是,是-04,false), Span(0,1,List(6),花,花-01,false)),Map(2 -> 最, 5 -> 是-04, 1 -> 美丽-01, 4 -> 我, 6 -> 花-01, 0 -> 东西, 3 -> 星球),Map(美 -> 美丽-01, 星 -> 星球, 我 -> 我, 东 -> 东西, 花 -> 花-01, 是 -> 是-04, 最 -> 最))),[Ljava.lang.String;@6ffa56fa,Annotation([Ljava.lang.String;@6c575325,[Ljava.lang.String;@747d1932,[Ljava.lang.String;@736309a9),Annotation([Ljava.lang.String;@4e93dcb9,[Ljava.lang.String;@188b6035,[Ledu.cmu.lti.nlp.amr.Dependency;@4a34e9f),Annotation([Ljava.lang.String;@6f6621e3,[Ljava.lang.String;@3fc05ea2,[Ljava.lang.String;@7c891ba7),Annotation([Ljava.lang.String;@6240651f,[Ljava.lang.String;@3cf7298d,[Ledu.cmu.lti.nlp.amr.Entity;@1ff55ff))
AMR:
(东 / 东西, location, 星 / 星球)
(东 / 东西, mod, 美 / 美丽-01)
(星 / 星球, mod, 是 / 是-04)
(是 / 是-04, manner, 花 / 花-01)
(是 / 是-04, prep-in, 我 / 我)
(美 / 美丽-01, degree, 最 / 最)

Decoded in 17,230 microseconds
Sentence: “ 因为 花卉 是 短暂 的 。 ”

Spans:
Span 3-4:  是 => 是-04
Span 4-5:  短暂 => 短暂
Span 2-3:  花卉 => 花卉

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  短暂 => 短暂-01
Oracle Span 2-3:  花卉 => 花卉

Incorrect span: 短暂 => 短暂
Extra span: 是 => 是-04
Missing span: 短暂 => 短暂-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	因为	_	P	P	_	4	prep	_	_
3	花卉	_	NN	NN	_	2	pobj	_	_
4	是	_	VC	VC	_	0	root	_	_
5	短暂	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 短暂-01, arg0, x8 / 花卉)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),短暂,短暂,false), Span(3,4,List(1),是,是-04,false), Span(2,3,List(2),花卉,花卉,false)),Map(2 -> 花卉, 1 -> 是-04, 0 -> 短暂),Map(短 -> 短暂, 花 -> 花卉, 是 -> 是-04))),[Ljava.lang.String;@351f2244,Annotation([Ljava.lang.String;@5496c165,[Ljava.lang.String;@51a8313b,[Ljava.lang.String;@2a03d65c),Annotation([Ljava.lang.String;@6642dc5a,[Ljava.lang.String;@43da41e,[Ledu.cmu.lti.nlp.amr.Dependency;@148c7c4b),Annotation([Ljava.lang.String;@2009f9b0,[Ljava.lang.String;@50d951e7,[Ljava.lang.String;@39ad12b6),Annotation([Ljava.lang.String;@4eb45fec,[Ljava.lang.String;@211febf3,[Ledu.cmu.lti.nlp.amr.Entity;@3bd3d05e))
AMR:
(是 / 是-04, degree, 花 / 花卉)
(短 / 短暂, mod, 是 / 是-04)

Decoded in 4,722 microseconds
Sentence: “ 什么 叫 短暂 ？ ”

Spans:
Span 1-2:  什么 => 什么
Span 2-3:  叫 => 叫-06
Span 3-4:  短暂 => 短暂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  短暂 => 短暂-01

Incorrect span: 短暂 => 短暂
Extra span: 叫 => 叫-06
Extra span: 什么 => 什么
Missing span: 短暂 => 短暂-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	短暂	_	VA	VA	_	3	ccomp	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),短暂,短暂,false), Span(2,3,List(1),叫,叫-06,false), Span(1,2,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 叫-06, 0 -> 短暂),Map(短 -> 短暂, 叫 -> 叫-06, 什 -> 什么))),[Ljava.lang.String;@6aba5d30,Annotation([Ljava.lang.String;@61d34b4,[Ljava.lang.String;@588307f7,[Ljava.lang.String;@7df76d99),Annotation([Ljava.lang.String;@459cfcca,[Ljava.lang.String;@2acbc859,[Ledu.cmu.lti.nlp.amr.Dependency;@6ab7ce48),Annotation([Ljava.lang.String;@2c6aed22,[Ljava.lang.String;@e322ec9,[Ljava.lang.String;@7acfb656),Annotation([Ljava.lang.String;@2e5ee2c9,[Ljava.lang.String;@55a609dd,[Ledu.cmu.lti.nlp.amr.Entity;@4afd21c6))
AMR:
(叫 / 叫-06, mod, 什 / 什么)
(短 / 短暂, mod, 叫 / 叫-06)

Decoded in 3,844 microseconds
Sentence: “ 地理学 书籍 是 所有 书 中 最 严肃 的 书 。 ” 地理学家 说道 ，

Spans:
Span 8-9:  严肃 => 严肃
Span 10-11:  书 => 书
Span 5-6:  书 => 书
Span 2-3:  书籍 => 书籍
Span 1-2:  地理学 => 地理学
Span 13-14:  地理学家 => 地理学家
Span 4-5:  所有 => 所有
Span 3-4:  是 => 是-04
Span 7-8:  最 => 最
Span 14-15:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  严肃 => 严肃
Oracle Span 5-6:  书 => 书
Oracle Span 10-11:  书 => 书
Oracle Span 2-3:  书籍 => 书籍
Oracle Span 1-2:  地理学 => 地理学
Oracle Span 13-14:  地理学家 => 地理学家
Oracle Span 4-5:  所有 => 所有
Oracle Span 7-8:  最 => 最
Oracle Span 14-15:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 是 => 是-04
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	地理学	_	AD	AD	_	4	advmod	_	_
3	书籍	_	NN	NN	_	4	prep	_	_
4	是	_	VC	VC	_	0	root	_	_
5	所有	_	DT	DT	_	6	det	_	_
6	书	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	11	dep	_	_
8	最	_	AD	AD	_	9	advmod	_	_
9	严肃	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	书	_	NN	NN	_	4	attr	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_
14	地理学家	_	AD	AD	_	15	advmod	_	_
15	说道	_	VV	VV	_	4	dep	_	_
16	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 地理学家)
(x0 / 说道-01, arg1, x3 / 书)
(x3 / 书, domain, x9 / 书籍)
(x3 / 书, mod, x4 / 严肃)
(x4 / 严肃, degree, x5 / 最)
(x5 / 最, prep-among, x6 / 书)
(x6 / 书, mod, x7 / 所有)
(x9 / 书籍, topic, x10 / 地理学)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),说道,说道,false), Span(13,14,List(1),地理学家,地理学家,false), Span(10,11,List(2),书,书,false), Span(8,9,List(3),严肃,严肃,false), Span(7,8,List(4),最,最,false), Span(5,6,List(5),书,书,false), Span(4,5,List(6),所有,所有,false), Span(3,4,List(7),是,是-04,false), Span(2,3,List(8),书籍,书籍,false), Span(1,2,List(9),地理学,地理学,false)),Map(2 -> 书, 5 -> 书, 8 -> 书籍, 7 -> 是-04, 1 -> 地理学家, 4 -> 最, 6 -> 所有, 9 -> 地理学, 0 -> 说道, 3 -> 严肃),Map(书2 -> 书, 地2 -> 地理学, 所 -> 所有, 严 -> 严肃, 地 -> 地理学家, 说 -> 说道, 书3 -> 书籍, 书 -> 书, 是 -> 是-04, 最 -> 最))),[Ljava.lang.String;@4d0753c9,Annotation([Ljava.lang.String;@1416a80a,[Ljava.lang.String;@719bb3b4,[Ljava.lang.String;@52cb4f50),Annotation([Ljava.lang.String;@25a5c7db,[Ljava.lang.String;@4d27d9d,[Ledu.cmu.lti.nlp.amr.Dependency;@28f878a0),Annotation([Ljava.lang.String;@20411320,[Ljava.lang.String;@2b5183ec,[Ljava.lang.String;@3c782d8e),Annotation([Ljava.lang.String;@572e6fd9,[Ljava.lang.String;@7f5eae0f,[Ledu.cmu.lti.nlp.amr.Entity;@58b71ceb))
AMR:
(严 / 严肃, degree, 最 / 最)
(书 / 书, mod, 严 / 严肃)
(书2 / 书, mod, 所 / 所有)
(书2 / 书, mod, 是 / 是-04)
(书3 / 书籍, topic, 地2 / 地理学)
(是 / 是-04, degree, 书3 / 书籍)
(最 / 最, prep-among, 书2 / 书)
(说 / 说道, domain, 地 / 地理学家)
(说 / 说道, part, 书 / 书)

Decoded in 27,834 microseconds
Sentence: “ 这 类 书 是 从不 会 过时 的 。

Spans:
Span 3-4:  书 => 书
Span 6-7:  会 => 会-03
Span 4-5:  是 => 是-04
Span 2-3:  类 => 类
Span 7-8:  过时 => 过时-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  书 => 书
Oracle Span 6-7:  会 => 会-02
Oracle Span 2-3:  类 => 类
Oracle Span 7-8:  过时 => 过时-01
Oracle Span 1-2:  这 => 这

Incorrect span: 会 => 会-03
Extra span: 是 => 是-04
Missing span: 会 => 会-02
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	DT	DT	_	4	det	_	_
3	类	_	M	M	_	2	clf	_	_
4	书	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	从不	_	AD	AD	_	8	advmod	_	_
7	会	_	VV	VV	_	8	dep	_	_
8	过时	_	VV	VV	_	5	attr	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 过时-01, arg0, x11 / 书)
(x11 / 书, mod, x12 / 这)
(x11 / 书, unit, x13 / 类)
(x8 / 会-02, arg0, x10 / 过时-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),过时,过时-01,false), Span(6,7,List(1),会,会-03,false), Span(4,5,List(2),是,是-04,false), Span(3,4,List(3),书,书,false), Span(2,3,List(4),类,类,false), Span(1,2,List(5),这,这,false)),Map(2 -> 是-04, 5 -> 这, 1 -> 会-03, 4 -> 类, 0 -> 过时-01, 3 -> 书),Map(类 -> 类, 这 -> 这, 过 -> 过时-01, 会 -> 会-03, 书 -> 书, 是 -> 是-04))),[Ljava.lang.String;@255e5e2e,Annotation([Ljava.lang.String;@12abdfb,[Ljava.lang.String;@b0e5507,[Ljava.lang.String;@6bbe50c9),Annotation([Ljava.lang.String;@3c46dcbe,[Ljava.lang.String;@68577ba8,[Ledu.cmu.lti.nlp.amr.Dependency;@1108adc8),Annotation([Ljava.lang.String;@8a98f38,[Ljava.lang.String;@20011bf,[Ljava.lang.String;@51d9b06c),Annotation([Ljava.lang.String;@5eb2172,[Ljava.lang.String;@41ffaeb8,[Ledu.cmu.lti.nlp.amr.Entity;@43f0c2d1))
AMR:
(书 / 书, mod, 这 / 这)
(书 / 书, unit, 类 / 类)
(会 / 会-03, degree, 是 / 是-04)
(是 / 是-04, degree, 书 / 书)
(过 / 过时-01, degree, 会 / 会-03)

Decoded in 11,201 microseconds
Sentence: 很少 会 发生 一 座 山 变换 了 位置 ，

Spans:
Span 1-2:  会 => 会-03
Span 8-9:  位置 => 位置
Span 2-3:  发生 => 发生-01
Span 6-7:  变换 => 变换-01
Span 5-6:  山 => 山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-02
Oracle Span 8-9:  位置 => 位置
Oracle Span 2-3:  发生 => 发生-01
Oracle Span 6-7:  变换 => 变换-01
Oracle Span 5-6:  山 => 山

Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Dependencies:
1	很少	_	AD	AD	_	3	advmod	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	发生	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	座	_	M	M	_	6	clf	_	_
6	山	_	NN	NN	_	3	dobj	_	_
7	变换	_	VV	VV	_	3	conj	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	位置	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x1 / 会-02, arg0, x2 / 发生-01)
(x2 / 发生-01, arg0, x3 / 变换-01)
(x3 / 变换-01, arg0, x4 / 山)
(x3 / 变换-01, arg1, x6 / 位置)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),位置,位置,false), Span(6,7,List(1),变换,变换-01,false), Span(5,6,List(2),山,山,false), Span(2,3,List(3),发生,发生-01,false), Span(1,2,List(4),会,会-03,false)),Map(2 -> 山, 1 -> 变换-01, 4 -> 会-03, 0 -> 位置, 3 -> 发生-01),Map(发 -> 发生-01, 会 -> 会-03, 变 -> 变换-01, 山 -> 山, 位 -> 位置))),[Ljava.lang.String;@5fb65013,Annotation([Ljava.lang.String;@38a1a26,[Ljava.lang.String;@3fbcfe81,[Ljava.lang.String;@7a1f45ed),Annotation([Ljava.lang.String;@1744a475,[Ljava.lang.String;@444cc791,[Ledu.cmu.lti.nlp.amr.Dependency;@1c5c616f),Annotation([Ljava.lang.String;@1c6c6f24,[Ljava.lang.String;@2eb917d0,[Ljava.lang.String;@c6b2dd9),Annotation([Ljava.lang.String;@73437222,[Ljava.lang.String;@ca93621,[Ledu.cmu.lti.nlp.amr.Entity;@6a48a7f3))
AMR:
(会 / 会-03, op, 发 / 发生-01)
(发 / 发生-01, ARG2, 变 / 变换-01)
(变 / 变换-01, manner, 山 / 山)
(变 / 变换-01, mod, 位 / 位置)

Decoded in 10,298 microseconds
Sentence: 很少 会 出现 一 个 海洋 干涸 的 现象 。

Spans:
Span 1-2:  会 => 会-03
Span 2-3:  出现 => 出现-01
Span 6-7:  干涸 => 干涸-01
Span 5-6:  海洋 => 海洋
Span 8-9:  现象 => 现象

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-01
Oracle Span 2-3:  出现 => 出现-01
Oracle Span 6-7:  干涸 => 干涸-01
Oracle Span 5-6:  海洋 => 海洋
Oracle Span 8-9:  现象 => 现象

Incorrect span: 会 => 会-03
Missing span: 会 => 会-01
Dependencies:
1	很少	_	NN	NN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	出现	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	7	clf	_	_
6	海洋	_	NN	NN	_	7	nn	_	_
7	干涸	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	现象	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 出现-01)
(x2 / 出现-01, arg1, x3 / 现象)
(x3 / 现象, mod, x4 / 干涸-01)
(x4 / 干涸-01, arg0, x5 / 海洋)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),现象,现象,false), Span(6,7,List(1),干涸,干涸-01,false), Span(5,6,List(2),海洋,海洋,false), Span(2,3,List(3),出现,出现-01,false), Span(1,2,List(4),会,会-03,false)),Map(2 -> 海洋, 1 -> 干涸-01, 4 -> 会-03, 0 -> 现象, 3 -> 出现-01),Map(干 -> 干涸-01, 海 -> 海洋, 会 -> 会-03, 出 -> 出现-01, 现 -> 现象))),[Ljava.lang.String;@3f985a86,Annotation([Ljava.lang.String;@57a2ed35,[Ljava.lang.String;@12ffd1de,[Ljava.lang.String;@3d278b4d),Annotation([Ljava.lang.String;@4096aa05,[Ljava.lang.String;@9d3c67,[Ledu.cmu.lti.nlp.amr.Dependency;@6c806c8b),Annotation([Ljava.lang.String;@6dfcffb5,[Ljava.lang.String;@184fb68d,[Ljava.lang.String;@71d8cfe7),Annotation([Ljava.lang.String;@1e530163,[Ljava.lang.String;@14d8444b,[Ledu.cmu.lti.nlp.amr.Entity;@71466383))
AMR:
(会 / 会-03, op, 出 / 出现-01)
(出 / 出现-01, snt1, 现 / 现象)
(干 / 干涸-01, location, 海 / 海洋)
(现 / 现象, mod, 干 / 干涸-01)

Decoded in 13,601 microseconds
Sentence: 我们 要 写 永恒 的 东西 。 ”

Spans:
Span 5-6:  东西 => 东西
Span 2-3:  写 => 写-01
Span 0-1:  我们 => 我们
Span 3-4:  永恒 => 永恒-01
Span 1-2:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  东西 => 东西
Oracle Span 2-3:  写 => 写-01
Oracle Span 0-1:  我们 => 我们
Oracle Span 3-4:  永恒 => 永恒-01
Oracle Span 1-2:  要 => 要-05

Incorrect span: 要 => 要-02
Missing span: 要 => 要-05
Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	写	_	VV	VV	_	0	root	_	_
4	永恒	_	VA	VA	_	6	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	东西	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 东西, mod, x12 / 永恒-01)
(x8 / 要-05, arg0, x9 / 写-01)
(x9 / 写-01, arg0, x10 / 我们)
(x9 / 写-01, arg1, x11 / 东西)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),东西,东西,false), Span(3,4,List(1),永恒,永恒-01,false), Span(2,3,List(2),写,写-01,false), Span(1,2,List(3),要,要-02,false), Span(0,1,List(4),我们,我们,false)),Map(2 -> 写-01, 1 -> 永恒-01, 4 -> 我们, 0 -> 东西, 3 -> 要-02),Map(写 -> 写-01, 永 -> 永恒-01, 我 -> 我们, 要 -> 要-02, 东 -> 东西))),[Ljava.lang.String;@46d63dbb,Annotation([Ljava.lang.String;@4088741b,[Ljava.lang.String;@16a49a5d,[Ljava.lang.String;@54bca971),Annotation([Ljava.lang.String;@23706db8,[Ljava.lang.String;@205bed61,[Ledu.cmu.lti.nlp.amr.Dependency;@129fed45),Annotation([Ljava.lang.String;@23592946,[Ljava.lang.String;@3e48d38,[Ljava.lang.String;@7c2b58c0),Annotation([Ljava.lang.String;@11b377c5,[Ljava.lang.String;@7bca6fac,[Ledu.cmu.lti.nlp.amr.Entity;@5c60b0a0))
AMR:
(东 / 东西, mod, 永 / 永恒-01)
(写 / 写-01, ARG3, 永 / 永恒-01)
(要 / 要-02, ARG3, 写 / 写-01)
(要 / 要-02, ARG4, 我 / 我们)

Decoded in 8,502 microseconds
Sentence: “ 但是 熄灭 的 火山 也 可能 会 再 复苏 的 。 ” 小 王子 打断 了 地理学家 。

Spans:
Span 5-6:  也 => 也
Span 7-8:  会 => 会-03
Span 8-9:  再 => 再
Span 6-7:  可能 => 可能-02
Span 17-18:  地理学家 => 地理学家
Span 9-10:  复苏 => 复苏-01
Span 13-14:  小 => 小
Span 15-16:  打断 => 打断-01
Span 4-5:  火山 => 火山
Span 2-3:  熄灭 => 熄灭-01
Span 14-15:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 7-8:  会 => 会-02
Oracle Span 8-9:  再 => 再-01
Oracle Span 6-7:  可能 => 可能-02
Oracle Span 17-18:  地理学家 => 地理学家
Oracle Span 9-10:  复苏 => 复苏-01
Oracle Span 13-14:  小 => 小-01
Oracle Span 15-16:  打断 => 打断-01
Oracle Span 4-5:  火山 => 火山
Oracle Span 2-3:  熄灭 => 熄灭-01
Oracle Span 14-15:  王子 => 王子

Incorrect span: 小 => 小
Incorrect span: 再 => 再
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 再 => 再-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	3	advmod	_	_
3	熄灭	_	VV	VV	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	火山	_	NN	NN	_	7	nsubj	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	可能	_	VV	VV	_	15	vmod	_	_
8	会	_	VV	VV	_	10	mmod	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	复苏	_	VV	VV	_	7	dobj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	。	_	PU	PU	_	7	punct	_	_
13	”	_	PU	PU	_	7	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	16	nsubj	_	_
16	打断	_	VV	VV	_	0	root	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	地理学家	_	NN	NN	_	16	dobj	_	_
19	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 打断-01, arg0, x2 / 王子)
(x0 / 打断-01, arg1, x4 / 地理学家)
(x15 / 可能-02, arg0, x16 / 会-02)
(x15 / 可能-02, manner, x21 / 也)
(x16 / 会-02, arg0, x17 / 复苏-01)
(x17 / 复苏-01, arg0, x19 / 火山)
(x17 / 复苏-01, manner, x18 / 再-01)
(x19 / 火山, mod, x20 / 熄灭-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),地理学家,地理学家,false), Span(15,16,List(1),打断,打断-01,false), Span(14,15,List(2),王子,王子,false), Span(13,14,List(3),小,小,false), Span(9,10,List(4),复苏,复苏-01,false), Span(8,9,List(5),再,再,false), Span(7,8,List(6),会,会-03,false), Span(6,7,List(7),可能,可能-02,false), Span(5,6,List(8),也,也,false), Span(4,5,List(9),火山,火山,false), Span(2,3,List(10),熄灭,熄灭-01,false)),Map(2 -> 王子, 5 -> 再, 8 -> 也, 7 -> 可能-02, 1 -> 打断-01, 4 -> 复苏-01, 6 -> 会-03, 9 -> 火山, 0 -> 地理学家, 10 -> 熄灭-01, 3 -> 小),Map(也 -> 也, 打 -> 打断-01, 王 -> 王子, 小 -> 小, 地 -> 地理学家, 会 -> 会-03, 火 -> 火山, 熄 -> 熄灭-01, 可 -> 可能-02, 再 -> 再, 复 -> 复苏-01))),[Ljava.lang.String;@7a2b1eb4,Annotation([Ljava.lang.String;@702c436b,[Ljava.lang.String;@5833f5cd,[Ljava.lang.String;@10fbbdb),Annotation([Ljava.lang.String;@23f3dbf0,[Ljava.lang.String;@31d6f3fe,[Ledu.cmu.lti.nlp.amr.Dependency;@760cf594),Annotation([Ljava.lang.String;@aa149ed,[Ljava.lang.String;@37303f12,[Ljava.lang.String;@31ff6309),Annotation([Ljava.lang.String;@204e90f7,[Ljava.lang.String;@20a05b32,[Ledu.cmu.lti.nlp.amr.Entity;@165e389b))
AMR:
(可 / 可能-02, location, 火 / 火山)
(可 / 可能-02, manner, 也 / 也)
(可 / 可能-02, purpose, 会 / 会-03)
(复 / 复苏-01, manner, 会 / 会-03)
(复 / 复苏-01, manner, 再 / 再)
(复 / 复苏-01, purpose, 打 / 打断-01)
(打 / 打断-01, beneficiary, 王 / 王子)
(打 / 打断-01, prep-through, 地 / 地理学家)
(熄 / 熄灭-01, subset, 火 / 火山)
(王 / 王子, mod, 小 / 小)

Decoded in 37,531 microseconds
Sentence: “ 什么 叫 短暂 ？ ”

Spans:
Span 1-2:  什么 => 什么
Span 2-3:  叫 => 叫-06
Span 3-4:  短暂 => 短暂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  短暂 => 短暂-01

Incorrect span: 短暂 => 短暂
Extra span: 叫 => 叫-06
Extra span: 什么 => 什么
Missing span: 短暂 => 短暂-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	短暂	_	VA	VA	_	3	ccomp	_	_
5	？	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),短暂,短暂,false), Span(2,3,List(1),叫,叫-06,false), Span(1,2,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 叫-06, 0 -> 短暂),Map(短 -> 短暂, 叫 -> 叫-06, 什 -> 什么))),[Ljava.lang.String;@5c73f672,Annotation([Ljava.lang.String;@8ee0c23,[Ljava.lang.String;@2ab5afc7,[Ljava.lang.String;@4dc8c0ea),Annotation([Ljava.lang.String;@e4b6f47,[Ljava.lang.String;@763cf5b9,[Ledu.cmu.lti.nlp.amr.Dependency;@71f0b72e),Annotation([Ljava.lang.String;@7a34f66a,[Ljava.lang.String;@2f508f3c,[Ljava.lang.String;@3ed03652),Annotation([Ljava.lang.String;@4aedaf61,[Ljava.lang.String;@173797f0,[Ledu.cmu.lti.nlp.amr.Entity;@3c35c345))
AMR:
(叫 / 叫-06, mod, 什 / 什么)
(短 / 短暂, mod, 叫 / 叫-06)

Decoded in 4,207 microseconds
Sentence: “ 火山 是 熄灭 了 的 也 好 ， 苏醒 的 也 好 ， 这 对 我们 这些 人 来讲 都 是 一 回 事 。 ” 地理学家 说 ，

Spans:
Span 11-12:  也 => 也
Span 6-7:  也 => 也
Span 24-25:  事 => 事
Span 18-19:  人 => 人
Span 23-24:  回 => 回
Span 27-28:  地理学家 => 地理学家
Span 12-13:  好 => 好-04
Span 7-8:  好 => 好-04
Span 15-16:  对 => 对-02
Span 16-17:  我们 => 我们
Span 21-22:  是 => 是-04
Span 2-3:  是 => 是-04
Span 19-20:  来讲 => 来讲-01
Span 1-2:  火山 => 火山
Span 3-4:  熄灭 => 熄灭-01
Span 9-10:  苏醒 => 苏醒-01
Span 28-29:  说 => 说-02
Span 14-15:  这 => 这
Span 17-18:  这些 => 这些
Span 20-21:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  人 => 人
Oracle Span 27-28:  地理学家 => 地理学家
Oracle Span 19-20:  来讲 => 来讲-01
Oracle Span 1-2:  火山 => 火山
Oracle Span 3-4:  熄灭 => 熄灭-01
Oracle Span 9-10:  苏醒 => 苏醒-01
Oracle Span 28-29:  说 => 说-01
Oracle Span 17-18:  这些 => 这些

Incorrect span: 说 => 说-02
Extra span: 事 => 事
Extra span: 回 => 回
Extra span: 是 => 是-04
Extra span: 都 => 都
Extra span: 我们 => 我们
Extra span: 对 => 对-02
Extra span: 这 => 这
Extra span: 好 => 好-04
Extra span: 也 => 也
Extra span: 好 => 好-04
Extra span: 也 => 也
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	火山	_	NN	NN	_	3	nsubj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	熄灭	_	VV	VV	_	3	attr	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	也	_	AD	AD	_	8	advmod	_	_
8	好	_	VA	VA	_	3	conj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	苏醒	_	VA	VA	_	13	nsubj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	也	_	AD	AD	_	13	advmod	_	_
13	好	_	VA	VA	_	3	conj	_	_
14	,	_	PU	PU	_	3	punct	_	_
15	这	_	PN	PN	_	22	nsubj	_	_
16	对	_	P	P	_	22	prep	_	_
17	我们	_	PN	PN	_	20	nn	_	_
18	这些	_	DT	DT	_	19	det	_	_
19	人	_	NN	NN	_	20	nn	_	_
20	来讲	_	NN	NN	_	16	pobj	_	_
21	都	_	AD	AD	_	22	advmod	_	_
22	是	_	VC	VC	_	3	conj	_	_
23	一	_	CD	CD	_	24	nummod	_	_
24	回	_	M	M	_	25	clf	_	_
25	事	_	NN	NN	_	22	attr	_	_
26	。	_	PU	PU	_	22	punct	_	_
27	”	_	PU	PU	_	3	punct	_	_
28	地理学家	_	AD	AD	_	29	advmod	_	_
29	说	_	VV	VV	_	3	dep	_	_
30	,	_	PU	PU	_	29	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 地理学家)
(x0 / 说-01, arg1, x3 / 来讲-01)
(x20 / 熄灭-01, arg1, x21 / 火山)
(x24 / 人, mod, x25 / 这些)
(x3 / 来讲-01, arg1, x24 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),说,说-02,false), Span(27,28,List(1),地理学家,地理学家,false), Span(24,25,List(2),事,事,false), Span(23,24,List(3),回,回,false), Span(21,22,List(4),是,是-04,false), Span(20,21,List(5),都,都,false), Span(19,20,List(6),来讲,来讲-01,false), Span(18,19,List(7),人,人,false), Span(17,18,List(8),这些,这些,false), Span(16,17,List(9),我们,我们,false), Span(15,16,List(10),对,对-02,false), Span(14,15,List(11),这,这,false), Span(12,13,List(12),好,好-04,false), Span(11,12,List(13),也,也,false), Span(9,10,List(14),苏醒,苏醒-01,false), Span(7,8,List(15),好,好-04,false), Span(6,7,List(16),也,也,false), Span(3,4,List(17),熄灭,熄灭-01,false), Span(2,3,List(18),是,是-04,false), Span(1,2,List(19),火山,火山,false)),Map(2 -> 事, 5 -> 都, 12 -> 好-04, 15 -> 好-04, 8 -> 这些, 18 -> 是-04, 7 -> 人, 17 -> 熄灭-01, 1 -> 地理学家, 4 -> 是-04, 11 -> 这, 14 -> 苏醒-01, 6 -> 来讲-01, 0 -> 说-02, 9 -> 我们, 16 -> 也, 19 -> 火山, 3 -> 回, 10 -> 对-02, 13 -> 也),Map(也 -> 也, 来 -> 来讲-01, 我 -> 我们, 这 -> 这些, 苏 -> 苏醒-01, 地 -> 地理学家, 好2 -> 好-04, 事 -> 事, 说 -> 说-02, 也2 -> 也, 这2 -> 这, 好 -> 好-04, 火 -> 火山, 都 -> 都, 熄 -> 熄灭-01, 人 -> 人, 对 -> 对-02, 是2 -> 是-04, 回 -> 回, 是 -> 是-04))),[Ljava.lang.String;@3681037,Annotation([Ljava.lang.String;@2459319c,[Ljava.lang.String;@ffaaaf0,[Ljava.lang.String;@1dc76fa1),Annotation([Ljava.lang.String;@5eed2d86,[Ljava.lang.String;@33d53216,[Ledu.cmu.lti.nlp.amr.Dependency;@69a2b3b6),Annotation([Ljava.lang.String;@4f3e7344,[Ljava.lang.String;@7808f638,[Ljava.lang.String;@62d73ead),Annotation([Ljava.lang.String;@1e141e42,[Ljava.lang.String;@228cea97,[Ledu.cmu.lti.nlp.amr.Entity;@1d0a61c8))
AMR:
(事 / 事, mod, 回 / 回)
(人 / 人, location, 来 / 来讲-01)
(人 / 人, mod, 这 / 这些)
(回 / 回, mod, 是 / 是-04)
(好 / 好-04, manner, 也 / 也)
(好 / 好-04, time, 苏 / 苏醒-01)
(好2 / 好-04, manner, 也2 / 也)
(对 / 对-02, degree, 好 / 好-04)
(对 / 对-02, duration, 我 / 我们)
(对 / 对-02, mod, 这2 / 这)
(对 / 对-02, purpose, 来 / 来讲-01)
(是 / 是-04, degree, 来 / 来讲-01)
(是 / 是-04, manner, 都 / 都)
(是2 / 是-04, location, 火 / 火山)
(熄 / 熄灭-01, manner, 是2 / 是-04)
(熄 / 熄灭-01, purpose, 好2 / 好-04)
(苏 / 苏醒-01, degree, 好2 / 好-04)
(说 / 说-02, direction, 地 / 地理学家)
(说 / 说-02, purpose, 事 / 事)

Decoded in 132,911 microseconds
Sentence: “ 对 我们 来说 ， 重要 的 是 山 。

Spans:
Span 1-2:  对 => 对-02
Span 8-9:  山 => 山
Span 2-3:  我们 => 我们
Span 7-8:  是 => 是-04
Span 3-4:  来说 => 来说-01
Span 5-6:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  山 => 山
Oracle Span 2-3:  我们 => 我们
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 5-6:  重要 => 重要-01

Extra span: 是 => 是-04
Extra span: 对 => 对-02
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	对	_	P	P	_	4	prep	_	_
3	我们	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	8	conj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	重要	_	VA	VA	_	8	top	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	是	_	VC	VC	_	0	root	_	_
9	山	_	NN	NN	_	8	attr	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x8 / 来说-01, arg0, x9 / 山)
(x8 / 来说-01, arg1, x10 / 我们)
(x8 / 来说-01, arg2, x11 / 重要-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),山,山,false), Span(7,8,List(1),是,是-04,false), Span(5,6,List(2),重要,重要-01,false), Span(3,4,List(3),来说,来说-01,false), Span(2,3,List(4),我们,我们,false), Span(1,2,List(5),对,对-02,false)),Map(2 -> 重要-01, 5 -> 对-02, 1 -> 是-04, 4 -> 我们, 0 -> 山, 3 -> 来说-01),Map(我 -> 我们, 来 -> 来说-01, 重 -> 重要-01, 山 -> 山, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@46731692,Annotation([Ljava.lang.String;@782bf610,[Ljava.lang.String;@3db663d0,[Ljava.lang.String;@73fc518f),Annotation([Ljava.lang.String;@2de50ee4,[Ljava.lang.String;@ad9e63e,[Ledu.cmu.lti.nlp.amr.Dependency;@47fbc56),Annotation([Ljava.lang.String;@151ef57f,[Ljava.lang.String;@10895b16,[Ljava.lang.String;@5524b72f),Annotation([Ljava.lang.String;@2cc03cd1,[Ljava.lang.String;@4e17913b,[Ledu.cmu.lti.nlp.amr.Entity;@149c3204))
AMR:
(对 / 对-02, duration, 我 / 我们)
(对 / 对-02, purpose, 重 / 重要-01)
(是 / 是-04, location, 山 / 山)
(来 / 来说-01, example, 重 / 重要-01)
(重 / 重要-01, purpose, 是 / 是-04)

Decoded in 11,023 microseconds
Sentence: 山 是 不 会 变换 位置 的 。 ”

Spans:
Span 2-3:  不 => 不
Span 3-4:  会 => 会-03
Span 5-6:  位置 => 位置
Span 4-5:  变换 => 变换-01
Span 0-1:  山 => 山
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-02
Oracle Span 5-6:  位置 => 位置
Oracle Span 4-5:  变换 => 变换-01
Oracle Span 0-1:  山 => 山

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 是 => 是-04
Missing span: 会 => 会-02
Dependencies:
1	山	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	变换	_	VV	VV	_	2	attr	_	_
6	位置	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 变换-01, arg0, x11 / 山)
(x10 / 变换-01, arg1, x12 / 位置)
(x8 / 会-02, arg0, x10 / 变换-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),位置,位置,false), Span(4,5,List(1),变换,变换-01,false), Span(3,4,List(2),会,会-03,false), Span(2,3,List(3),不,不,false), Span(1,2,List(4),是,是-04,false), Span(0,1,List(5),山,山,false)),Map(2 -> 会-03, 5 -> 山, 1 -> 变换-01, 4 -> 是-04, 0 -> 位置, 3 -> 不),Map(不 -> 不, 会 -> 会-03, 变 -> 变换-01, 山 -> 山, 位 -> 位置, 是 -> 是-04))),[Ljava.lang.String;@64f16277,Annotation([Ljava.lang.String;@497aec8c,[Ljava.lang.String;@3b9632d1,[Ljava.lang.String;@4e6f2bb5),Annotation([Ljava.lang.String;@21e20ad5,[Ljava.lang.String;@3f628ce9,[Ledu.cmu.lti.nlp.amr.Dependency;@35e8316e),Annotation([Ljava.lang.String;@26d96e5,[Ljava.lang.String;@336880df,[Ljava.lang.String;@1846579f),Annotation([Ljava.lang.String;@6cd166b8,[Ljava.lang.String;@2650f79,[Ledu.cmu.lti.nlp.amr.Entity;@75fc1992))
AMR:
(会 / 会-03, manner, 不 / 不)
(位 / 位置, mod, 变 / 变换-01)
(变 / 变换-01, time, 会 / 会-03)
(是 / 是-04, manner, 山 / 山)
(是 / 是-04, prep-in, 不 / 不)

Decoded in 12,263 microseconds
Sentence: “ 但是 ， ‘ 短暂 ’ 是 什么 意思 ？ ” 小 王子 再三 地 问道 。 他 一旦 提出 一 个 问题 是 从 不 放过 的 。

Spans:
Span 25-26:  不 => 不
Span 7-8:  什么 => 什么
Span 17-18:  他 => 他
Span 13-14:  再三 => 再三
Span 14-15:  地 => 地
Span 11-12:  小 => 小
Span 8-9:  意思 => 意思-01
Span 19-20:  提出 => 提出-01
Span 26-27:  放过 => 放过-01
Span 23-24:  是 => 是-04
Span 6-7:  是 => 是-04
Span 12-13:  王子 => 王子
Span 4-5:  短暂 => 短暂
Span 15-16:  问道 => 问道-01
Span 22-23:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  他 => 他
Oracle Span 13-14:  再三 => 再三
Oracle Span 11-12:  小 => 小-01
Oracle Span 19-20:  提出 => 提出-01
Oracle Span 26-27:  放过 => 放过-01
Oracle Span 12-13:  王子 => 王子
Oracle Span 4-5:  短暂 => 短暂
Oracle Span 15-16:  问道 => 问道-01
Oracle Span 22-23:  问题 => 问题

Extra span: 不 => 不
Extra span: 是 => 是-04
Extra span: 地 => 地
Incorrect span: 小 => 小
Extra span: 意思 => 意思-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	7	advmod	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	‘	_	PU	PU	_	5	punct	_	_
5	短暂	_	VA	VA	_	7	top	_	_
6	’	_	PU	PU	_	5	punct	_	_
7	是	_	VC	VC	_	16	dep	_	_
8	什么	_	PN	PN	_	9	nsubj	_	_
9	意思	_	NN	NN	_	7	dep	_	_
10	？	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	15	nn	_	_
14	再三	_	CD	CD	_	15	nummod	_	_
15	地	_	NN	NN	_	16	nsubj	_	_
16	问道	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_
18	他	_	PN	PN	_	20	nsubj	_	_
19	一旦	_	CS	CS	_	20	advmod	_	_
20	提出	_	VV	VV	_	16	conj	_	_
21	一	_	CD	CD	_	22	nummod	_	_
22	个	_	M	M	_	23	clf	_	_
23	问题	_	NN	NN	_	24	top	_	_
24	是	_	VC	VC	_	20	ccomp	_	_
25	从	_	AD	AD	_	27	advmod	_	_
26	不	_	AD	AD	_	27	neg	_	_
27	放过	_	VV	VV	_	24	attr	_	_
28	的	_	DEC	DEC	_	27	cpm	_	_
29	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x14 / 提出-01, arg0, x15 / 他)
(x14 / 提出-01, arg1, x16 / 问题)
(x5 / 问道-01, arg0, x7 / 王子)
(x5 / 问道-01, manner, x6 / 再三)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),放过,放过-01,false), Span(25,26,List(1),不,不,false), Span(23,24,List(2),是,是-04,false), Span(22,23,List(3),问题,问题,false), Span(19,20,List(4),提出,提出-01,false), Span(17,18,List(5),他,他,false), Span(15,16,List(6),问道,问道-01,false), Span(14,15,List(7),地,地,false), Span(13,14,List(8),再三,再三,false), Span(12,13,List(9),王子,王子,false), Span(11,12,List(10),小,小,false), Span(8,9,List(11),意思,意思-01,false), Span(7,8,List(12),什么,什么,false), Span(6,7,List(13),是,是-04,false), Span(4,5,List(14),短暂,短暂,false)),Map(2 -> 是-04, 5 -> 他, 12 -> 什么, 8 -> 再三, 7 -> 地, 1 -> 不, 4 -> 提出-01, 11 -> 意思-01, 14 -> 短暂, 6 -> 问道-01, 0 -> 放过-01, 9 -> 王子, 3 -> 问题, 10 -> 小, 13 -> 是-04),Map(问2 -> 问道-01, 短 -> 短暂, 放 -> 放过-01, 王 -> 王子, 他 -> 他, 意 -> 意思-01, 小 -> 小, 地 -> 地, 不 -> 不, 问 -> 问题, 提 -> 提出-01, 什 -> 什么, 是2 -> 是-04, 是 -> 是-04, 再 -> 再三))),[Ljava.lang.String;@5fac521d,Annotation([Ljava.lang.String;@38af1bf6,[Ljava.lang.String;@129bd55d,[Ljava.lang.String;@7be7e15),Annotation([Ljava.lang.String;@3abfe845,[Ljava.lang.String;@7a0f244f,[Ledu.cmu.lti.nlp.amr.Dependency;@3672276e),Annotation([Ljava.lang.String;@4248b963,[Ljava.lang.String;@7f08caf,[Ljava.lang.String;@4defd42),Annotation([Ljava.lang.String;@2330e3e0,[Ljava.lang.String;@24b4d544,[Ledu.cmu.lti.nlp.amr.Entity;@27a2a089))
AMR:
(什 / 什么, mod, 是2 / 是-04)
(再 / 再三, beneficiary, 王 / 王子)
(地 / 地, mod, 再 / 再三)
(小 / 小, location, 意 / 意思-01)
(意 / 意思-01, degree, 是2 / 是-04)
(提 / 提出-01, manner, 问2 / 问道-01)
(提 / 提出-01, prep-through, 他 / 他)
(提 / 提出-01, prep-through, 是 / 是-04)
(放 / 放过-01, manner, 不 / 不)
(是 / 是-04, degree, 问 / 问题)
(是 / 是-04, location, 不 / 不)
(王 / 王子, mod, 小 / 小)
(短 / 短暂, purpose, 是2 / 是-04)
(问2 / 问道-01, manner, 地 / 地)

Decoded in 68,982 microseconds
Sentence: “ 意思 就 是 ： 有 很 快 就 会 消失 的 危险 。 ”

Spans:
Span 9-10:  会 => 会-03
Span 12-13:  危险 => 危险-01
Span 8-9:  就 => 就-01
Span 2-3:  就 => 就-01
Span 6-7:  很 => 很
Span 7-8:  快 => 快
Span 1-2:  意思 => 意思-01
Span 3-4:  是 => 是-04
Span 5-6:  有 => 有-06
Span 10-11:  消失 => 消失-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  会 => 会-02
Oracle Span 12-13:  危险 => 危险-01
Oracle Span 2-3:  就 => 就
Oracle Span 6-7:  很 => 很
Oracle Span 7-8:  快 => 快-01
Oracle Span 5-6:  有 => 有-05
Oracle Span 10-11:  消失 => 消失-01

Incorrect span: 会 => 会-03
Extra span: 就 => 就-01
Incorrect span: 快 => 快
Incorrect span: 有 => 有-06
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 意思 => 意思-01
Missing span: 有 => 有-05
Missing span: 会 => 会-02
Missing span: 快 => 快-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	意思	_	NN	NN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	有	_	VE	VE	_	4	conj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	快	_	VA	VA	_	13	rcmod	_	_
9	就	_	AD	AD	_	11	advmod	_	_
10	会	_	VV	VV	_	11	dep	_	_
11	消失	_	VV	VV	_	8	dep	_	_
12	的	_	DEC	DEC	_	8	cpm	_	_
13	危险	_	NN	NN	_	6	dobj	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 有-05, arg1, x13 / 危险-01)
(x13 / 危险-01, arg0, x14 / 消失-01)
(x15 / 会-02, arg0, x14 / 消失-01)
(x15 / 会-02, manner, x16 / 就)
(x15 / 会-02, manner, x17 / 快-01)
(x17 / 快-01, degree, x18 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),危险,危险-01,false), Span(10,11,List(1),消失,消失-01,false), Span(9,10,List(2),会,会-03,false), Span(8,9,List(3),就,就-01,false), Span(7,8,List(4),快,快,false), Span(6,7,List(5),很,很,false), Span(5,6,List(6),有,有-06,false), Span(3,4,List(7),是,是-04,false), Span(2,3,List(8),就,就-01,false), Span(1,2,List(9),意思,意思-01,false)),Map(2 -> 会-03, 5 -> 很, 8 -> 就-01, 7 -> 是-04, 1 -> 消失-01, 4 -> 快, 6 -> 有-06, 9 -> 意思-01, 0 -> 危险-01, 3 -> 就-01),Map(就 -> 就-01, 快 -> 快, 危 -> 危险-01, 很 -> 很, 意 -> 意思-01, 就2 -> 就-01, 会 -> 会-03, 消 -> 消失-01, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@54657dd2,Annotation([Ljava.lang.String;@706eab5d,[Ljava.lang.String;@72725ee1,[Ljava.lang.String;@40e60ece),Annotation([Ljava.lang.String;@3f9270ed,[Ljava.lang.String;@3a230001,[Ledu.cmu.lti.nlp.amr.Dependency;@5ac6c4f2),Annotation([Ljava.lang.String;@2aa6311a,[Ljava.lang.String;@61f39bb,[Ljava.lang.String;@249e0271),Annotation([Ljava.lang.String;@4893b344,[Ljava.lang.String;@53a665ad,[Ledu.cmu.lti.nlp.amr.Entity;@2c0b4c83))
AMR:
(会 / 会-03, example, 消 / 消失-01)
(会 / 会-03, manner, 就 / 就-01)
(就 / 就-01, degree, 快 / 快)
(就2 / 就-01, degree, 意 / 意思-01)
(快 / 快, mod, 有 / 有-06)
(是 / 是-04, manner, 就2 / 就-01)
(有 / 有-06, degree, 很 / 很)
(有 / 有-06, degree, 是 / 是-04)
(消 / 消失-01, purpose, 危 / 危险-01)

Decoded in 31,129 microseconds
Sentence: “ 我 的 花 是 很 快 就 会 消失 的 吗 ？ ”

Spans:
Span 8-9:  会 => 会-03
Span 7-8:  就 => 就-01
Span 5-6:  很 => 很
Span 6-7:  快 => 快
Span 1-2:  我 => 我
Span 4-5:  是 => 是-04
Span 9-10:  消失 => 消失-01
Span 3-4:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 7-8:  就 => 就
Oracle Span 5-6:  很 => 很
Oracle Span 6-7:  快 => 快-01
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  消失 => 消失-01
Oracle Span 3-4:  花 => 花

Incorrect span: 会 => 会-03
Incorrect span: 就 => 就-01
Incorrect span: 快 => 快
Extra span: 是 => 是-04
Incorrect span: 花 => 花-01
Missing span: 会 => 会-02
Missing span: 就 => 就
Missing span: 快 => 快-01
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	花	_	NN	NN	_	5	top	_	_
5	是	_	VC	VC	_	0	root	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	快	_	VA	VA	_	5	attr	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	dep	_	_
10	消失	_	VV	VV	_	7	dep	_	_
11	的	_	DEC	DEC	_	7	cpm	_	_
12	吗	_	SP	SP	_	5	dep	_	_
13	？	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 会-02, arg0, x12 / 消失-01)
(x11 / 会-02, manner, x13 / 就)
(x12 / 消失-01, arg0, x14 / 花)
(x12 / 消失-01, manner, x16 / 快-01)
(x14 / 花, poss, x15 / 我)
(x16 / 快-01, degree, x17 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),消失,消失-01,false), Span(8,9,List(1),会,会-03,false), Span(7,8,List(2),就,就-01,false), Span(6,7,List(3),快,快,false), Span(5,6,List(4),很,很,false), Span(4,5,List(5),是,是-04,false), Span(3,4,List(6),花,花-01,false), Span(1,2,List(7),我,我,false)),Map(2 -> 就-01, 5 -> 是-04, 7 -> 我, 1 -> 会-03, 4 -> 很, 6 -> 花-01, 0 -> 消失-01, 3 -> 快),Map(就 -> 就-01, 快 -> 快, 我 -> 我, 很 -> 很, 花 -> 花-01, 会 -> 会-03, 消 -> 消失-01, 是 -> 是-04))),[Ljava.lang.String;@78525ef9,Annotation([Ljava.lang.String;@2d0ecb24,[Ljava.lang.String;@4d654825,[Ljava.lang.String;@3bfc6a5e),Annotation([Ljava.lang.String;@51b35e4e,[Ljava.lang.String;@abff8b7,[Ledu.cmu.lti.nlp.amr.Dependency;@6d7cada5),Annotation([Ljava.lang.String;@350a94ce,[Ljava.lang.String;@7e00ed0f,[Ljava.lang.String;@b0fc838),Annotation([Ljava.lang.String;@3964d79,[Ljava.lang.String;@62db0521,[Ledu.cmu.lti.nlp.amr.Entity;@1b4ae4e0))
AMR:
(会 / 会-03, example, 消 / 消失-01)
(会 / 会-03, manner, 就 / 就-01)
(就 / 就-01, degree, 快 / 快)
(快 / 快, mod, 是 / 是-04)
(我 / 我, location, 花 / 花-01)
(是 / 是-04, degree, 很 / 很)
(是 / 是-04, degree, 花 / 花-01)

Decoded in 21,892 microseconds
Sentence: “ 那 当然 。 ”

Spans:
Span 2-3:  当然 => 当然
Span 1-2:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  当然 => 当然
Oracle Span 1-2:  那 => 那

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那	_	PN	PN	_	3	advmod	_	_
3	当然	_	AD	AD	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 当然, arg0, x6 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),当然,当然,false), Span(1,2,List(1),那,那,false)),Map(1 -> 那, 0 -> 当然),Map(那 -> 那, 当 -> 当然))),[Ljava.lang.String;@6ef1a1b9,Annotation([Ljava.lang.String;@5fbdc49b,[Ljava.lang.String;@65753040,[Ljava.lang.String;@2954b5ea),Annotation([Ljava.lang.String;@4acb2510,[Ljava.lang.String;@7be3a9ce,[Ledu.cmu.lti.nlp.amr.Dependency;@37d871c2),Annotation([Ljava.lang.String;@3baf6936,[Ljava.lang.String;@285f38f6,[Ljava.lang.String;@4e1459ea),Annotation([Ljava.lang.String;@3ab6678b,[Ljava.lang.String;@7a904f32,[Ledu.cmu.lti.nlp.amr.Entity;@2b59501e))
AMR:
(当 / 当然, mod, 那 / 那)

Decoded in 4,393 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 我 的 花 是 短暂 的 ， 而且 她 只 有 四 根 刺 来 防御 外侮 ！

Spans:
Span 20-21:  刺 => 刺-01
Span 16-17:  只 => 只
Span 3-4:  地 => 地
Span 23-24:  外侮 => 外侮
Span 15-16:  她 => 她
Span 0-1:  小 => 小
Span 7-8:  我 => 我
Span 10-11:  是 => 是-04
Span 17-18:  有 => 有-06
Span 21-22:  来 => 来-06
Span 19-20:  根 => 根
Span 1-2:  王子 => 王子
Span 11-12:  短暂 => 短暂
Span 2-3:  自言自语 => 自言自语
Span 9-10:  花 => 花-01
Span 4-5:  说 => 说-02
Span 22-23:  防御 => 防御-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 20-21:  刺 => 刺
Oracle Span 16-17:  只 => 只
Oracle Span 23-24:  外侮 => 外侮
Oracle Span 0-1:  小 => 小-01
Oracle Span 17-18:  有 => 有-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 11-12:  短暂 => 短暂-01
Oracle Span 2-3:  自言自语 => 自言自语
Oracle Span 9-10:  花 => 花
Oracle Span 4-5:  说 => 说-01
Oracle Span 22-23:  防御 => 防御-01

Extra span: 来 => 来-06
Incorrect span: 刺 => 刺-01
Extra span: 根 => 根
Incorrect span: 有 => 有-06
Extra span: 她 => 她
Incorrect span: 短暂 => 短暂
Extra span: 是 => 是-04
Incorrect span: 花 => 花-01
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 短暂 => 短暂-01
Missing span: 花 => 花
Missing span: 有 => 有-01
Missing span: 刺 => 刺
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	自言自语	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	花	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	5	ccomp	_	_
12	短暂	_	VA	VA	_	11	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	,	_	PU	PU	_	11	punct	_	_
15	而且	_	CC	CC	_	11	cc	_	_
16	她	_	PN	PN	_	18	nsubj	_	_
17	只	_	AD	AD	_	18	advmod	_	_
18	有	_	VE	VE	_	11	conj	_	_
19	四	_	CD	CD	_	20	nummod	_	_
20	根	_	M	M	_	21	clf	_	_
21	刺	_	NN	NN	_	18	dobj	_	_
22	来	_	MSP	MSP	_	23	prtmod	_	_
23	防御	_	VV	VV	_	5	dep	_	_
24	外侮	_	NN	NN	_	23	dobj	_	_
25	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 王子)
(x0 / 说-01, manner, x2 / 自言自语)
(x19 / 短暂-01, arg0, x20 / 花)
(x22 / 有-01, arg1, x25 / 刺)
(x22 / 有-01, manner, x24 / 只)
(x22 / 有-01, purpose, x27 / 防御-01)
(x27 / 防御-01, arg1, x29 / 外侮)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),外侮,外侮,false), Span(22,23,List(1),防御,防御-01,false), Span(21,22,List(2),来,来-06,false), Span(20,21,List(3),刺,刺-01,false), Span(19,20,List(4),根,根,false), Span(17,18,List(5),有,有-06,false), Span(16,17,List(6),只,只,false), Span(15,16,List(7),她,她,false), Span(11,12,List(8),短暂,短暂,false), Span(10,11,List(9),是,是-04,false), Span(9,10,List(10),花,花-01,false), Span(7,8,List(11),我,我,false), Span(4,5,List(12),说,说-02,false), Span(3,4,List(13),地,地,false), Span(2,3,List(14),自言自语,自言自语,false), Span(1,2,List(15),王子,王子,false), Span(0,1,List(16),小,小,false)),Map(2 -> 来-06, 5 -> 有-06, 12 -> 说-02, 15 -> 王子, 8 -> 短暂, 7 -> 她, 1 -> 防御-01, 4 -> 根, 11 -> 我, 14 -> 自言自语, 6 -> 只, 0 -> 外侮, 9 -> 是-04, 16 -> 小, 3 -> 刺-01, 10 -> 花-01, 13 -> 地),Map(自 -> 自言自语, 短 -> 短暂, 来 -> 来-06, 刺 -> 刺-01, 我 -> 我, 王 -> 王子, 根 -> 根, 小 -> 小, 地 -> 地, 花 -> 花-01, 只 -> 只, 说 -> 说-02, 防 -> 防御-01, 是 -> 是-04, 外 -> 外侮, 她 -> 她, 有 -> 有-06))),[Ljava.lang.String;@476e8796,Annotation([Ljava.lang.String;@4eed2acf,[Ljava.lang.String;@36fc05ff,[Ljava.lang.String;@57c47a9e),Annotation([Ljava.lang.String;@642505c7,[Ljava.lang.String;@4339e0de,[Ledu.cmu.lti.nlp.amr.Dependency;@153cd6bb),Annotation([Ljava.lang.String;@61d84e08,[Ljava.lang.String;@2d9f64c9,[Ljava.lang.String;@21ac5eb4),Annotation([Ljava.lang.String;@52d6cd34,[Ljava.lang.String;@715d6168,[Ledu.cmu.lti.nlp.amr.Entity;@27b2faa6))
AMR:
(刺 / 刺-01, manner, 根 / 根)
(地 / 地, manner, 自 / 自言自语)
(地 / 地, mod, 小 / 小)
(外 / 外侮, purpose, 防 / 防御-01)
(是 / 是-04, manner, 花 / 花-01)
(有 / 有-06, degree, 花 / 花-01)
(有 / 有-06, manner, 只 / 只)
(有 / 有-06, purpose, 刺 / 刺-01)
(有 / 有-06, value, 她 / 她)
(来 / 来-06, manner, 刺 / 刺-01)
(来 / 来-06, purpose, 防 / 防御-01)
(王 / 王子, mod, 小 / 小)
(短 / 短暂, mod, 是 / 是-04)
(花 / 花-01, poss, 我 / 我)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, purpose, 花 / 花-01)

Decoded in 84,846 microseconds
Sentence: 可 我 还 把 她 独自 留 在 家 里 ！ ”

Spans:
Span 0-1:  可 => 可-01
Span 7-8:  在 => 在-01
Span 4-5:  她 => 她
Span 8-9:  家 => 家
Span 1-2:  我 => 我
Span 5-6:  独自 => 独自
Span 6-7:  留 => 留-05
Span 2-3:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 8-9:  家 => 家
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  独自 => 独自
Oracle Span 6-7:  留 => 留-05
Oracle Span 2-3:  还 => 还

Extra span: 在 => 在-01
Extra span: 可 => 可-01
Dependencies:
1	可	_	AD	AD	_	7	advmod	_	_
2	我	_	PN	PN	_	7	nsubj	_	_
3	还	_	AD	AD	_	7	advmod	_	_
4	把	_	BA	BA	_	7	ba	_	_
5	她	_	PN	PN	_	7	nsubj	_	_
6	独自	_	AD	AD	_	7	advmod	_	_
7	留	_	VV	VV	_	0	root	_	_
8	在	_	P	P	_	7	prep	_	_
9	家	_	NN	NN	_	10	lobj	_	_
10	里	_	LC	LC	_	8	plmod	_	_
11	！	_	PU	PU	_	7	punct	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x19 / 留-05, arg0, x20 / 我)
(x19 / 留-05, arg1, x21 / 她)
(x19 / 留-05, arg2, x23 / 家)
(x19 / 留-05, manner, x24 / 还)
(x19 / 留-05, manner, x25 / 独自)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),家,家,false), Span(7,8,List(1),在,在-01,false), Span(6,7,List(2),留,留-05,false), Span(5,6,List(3),独自,独自,false), Span(4,5,List(4),她,她,false), Span(2,3,List(5),还,还,false), Span(1,2,List(6),我,我,false), Span(0,1,List(7),可,可-01,false)),Map(2 -> 留-05, 5 -> 还, 7 -> 可-01, 1 -> 在-01, 4 -> 她, 6 -> 我, 0 -> 家, 3 -> 独自),Map(在 -> 在-01, 我 -> 我, 家 -> 家, 独 -> 独自, 还 -> 还, 留 -> 留-05, 可 -> 可-01, 她 -> 她))),[Ljava.lang.String;@6428591a,Annotation([Ljava.lang.String;@7397c6,[Ljava.lang.String;@1abfe081,[Ljava.lang.String;@2a685eba),Annotation([Ljava.lang.String;@c2e3264,[Ljava.lang.String;@107f4980,[Ledu.cmu.lti.nlp.amr.Dependency;@75a118e6),Annotation([Ljava.lang.String;@1d540566,[Ljava.lang.String;@6014a9ba,[Ljava.lang.String;@acdcf71),Annotation([Ljava.lang.String;@77d680e6,[Ljava.lang.String;@4a14c44f,[Ledu.cmu.lti.nlp.amr.Entity;@f08fdce))
AMR:
(可 / 可-01, manner, 还 / 还)
(可 / 可-01, subset, 我 / 我)
(家 / 家, manner, 在 / 在-01)
(留 / 留-05, manner, 在 / 在-01)
(留 / 留-05, manner, 独 / 独自)
(留 / 留-05, manner, 还 / 还)
(留 / 留-05, prep-on-behalf, 她 / 她)

Decoded in 17,814 microseconds
Sentence: 这 是 他 第一 次 产生 了 后悔 ，

Spans:
Span 5-6:  产生 => 产生-02
Span 2-3:  他 => 他
Span 7-8:  后悔 => 后悔-01
Span 1-2:  是 => 是-04
Span 0-1:  这 => 这

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  产生 => 产生-01
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  后悔 => 后悔-01
Oracle Span 0-1:  这 => 这

Incorrect span: 产生 => 产生-02
Extra span: 是 => 是-04
Missing span: 产生 => 产生-01
Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	第一	_	OD	OD	_	5	ordmod	_	_
5	次	_	M	M	_	6	dep	_	_
6	产生	_	VV	VV	_	2	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	后悔	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 产生-01, arg0, x3 / 他)
(x0 / 产生-01, arg1, x4 / 后悔-01)
(x0 / 产生-01, domain, x5 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),后悔,后悔-01,false), Span(5,6,List(1),产生,产生-02,false), Span(2,3,List(2),他,他,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),这,这,false)),Map(2 -> 他, 1 -> 产生-02, 4 -> 这, 0 -> 后悔-01, 3 -> 是-04),Map(产 -> 产生-02, 这 -> 这, 他 -> 他, 后 -> 后悔-01, 是 -> 是-04))),[Ljava.lang.String;@6bda1d19,Annotation([Ljava.lang.String;@28c86134,[Ljava.lang.String;@4492eede,[Ljava.lang.String;@cbc8d0f),Annotation([Ljava.lang.String;@37b57b54,[Ljava.lang.String;@5c1f6d57,[Ledu.cmu.lti.nlp.amr.Dependency;@f288c14),Annotation([Ljava.lang.String;@6794ac0b,[Ljava.lang.String;@7be71476,[Ljava.lang.String;@5cb5bb88),Annotation([Ljava.lang.String;@17b6d426,[Ljava.lang.String;@5580d62f,[Ledu.cmu.lti.nlp.amr.Entity;@16872c4d))
AMR:
(产 / 产生-02, domain, 这 / 这)
(产 / 产生-02, extent, 后 / 后悔-01)
(他 / 他, ARG3, 是 / 是-04)
(这 / 这, ARG3, 是 / 是-04)

Decoded in 31,770 microseconds
Sentence: 但 他 又 重新 振作 起来 ：

Spans:
Span 1-2:  他 => 他
Span 2-3:  又 => 又
Span 4-5:  振作 => 振作-01
Span 3-4:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 4-5:  振作 => 振作-01
Oracle Span 3-4:  重新 => 重新-01

Dependencies:
1	但	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	又	_	AD	AD	_	5	advmod	_	_
4	重新	_	AD	AD	_	5	advmod	_	_
5	振作	_	VV	VV	_	0	root	_	_
6	起来	_	VV	VV	_	5	comod	_	_
7	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 振作-01, arg0, x5 / 他)
(x2 / 振作-01, manner, x3 / 重新-01)
(x2 / 振作-01, manner, x4 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),振作,振作-01,false), Span(3,4,List(1),重新,重新-01,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他,他,false)),Map(2 -> 又, 1 -> 重新-01, 0 -> 振作-01, 3 -> 他),Map(又 -> 又, 重 -> 重新-01, 他 -> 他, 振 -> 振作-01))),[Ljava.lang.String;@671facee,Annotation([Ljava.lang.String;@46a953cf,[Ljava.lang.String;@154bd49b,[Ljava.lang.String;@3a01773b),Annotation([Ljava.lang.String;@20e3c449,[Ljava.lang.String;@2c58dcb1,[Ledu.cmu.lti.nlp.amr.Dependency;@67fc2aad),Annotation([Ljava.lang.String;@56f521c6,[Ljava.lang.String;@680a66dd,[Ljava.lang.String;@2dd8239),Annotation([Ljava.lang.String;@472698d,[Ljava.lang.String;@7b7683d4,[Ledu.cmu.lti.nlp.amr.Entity;@40712ee9))
AMR:
(振 / 振作-01, manner, 又 / 又)
(振 / 振作-01, manner, 重 / 重新-01)
(振 / 振作-01, prep-on-behalf, 他 / 他)

Decoded in 6,393 microseconds
Sentence: “ 您 是否 能 建议 我 去 看 些 什么 ？ ” 小 王子 问道 。

Spans:
Span 8-9:  些 => 些
Span 9-10:  什么 => 什么
Span 6-7:  去 => 去-02
Span 12-13:  小 => 小
Span 4-5:  建议 => 建议-01
Span 1-2:  您 => 您
Span 5-6:  我 => 我
Span 2-3:  是否 => 是否-01
Span 13-14:  王子 => 王子
Span 7-8:  看 => 看-10
Span 3-4:  能 => 能
Span 14-15:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  什么 => 什么
Oracle Span 6-7:  去 => 去-01
Oracle Span 12-13:  小 => 小-01
Oracle Span 4-5:  建议 => 建议-01
Oracle Span 1-2:  您 => 您
Oracle Span 2-3:  是否 => 是否-01
Oracle Span 13-14:  王子 => 王子
Oracle Span 7-8:  看 => 看-02
Oracle Span 3-4:  能 => 能-01
Oracle Span 14-15:  问道 => 问道-01

Incorrect span: 小 => 小
Extra span: 些 => 些
Incorrect span: 看 => 看-10
Incorrect span: 去 => 去-02
Extra span: 我 => 我
Incorrect span: 能 => 能
Missing span: 能 => 能-01
Missing span: 去 => 去-01
Missing span: 看 => 看-02
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	您	_	PN	PN	_	5	nsubj	_	_
3	是否	_	AD	AD	_	5	advmod	_	_
4	能	_	VV	VV	_	5	mmod	_	_
5	建议	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	去	_	MSP	MSP	_	8	prtmod	_	_
8	看	_	VV	VV	_	5	dep	_	_
9	些	_	CD	CD	_	8	range	_	_
10	什么	_	PN	PN	_	8	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	15	nsubj	_	_
15	问道	_	VV	VV	_	5	dep	_	_
16	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x28 / 是否-01)
(x2 / 王子, mod, x3 / 小-01)
(x28 / 是否-01, arg0, x29 / 您)
(x28 / 是否-01, arg1, x30 / 能-01)
(x30 / 能-01, arg0, x31 / 建议-01)
(x31 / 建议-01, arg1, x33 / 去-01)
(x33 / 去-01, arg1, x35 / 看-02)
(x35 / 看-02, arg1, x37 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),问道,问道-01,false), Span(13,14,List(1),王子,王子,false), Span(12,13,List(2),小,小,false), Span(9,10,List(3),什么,什么,false), Span(8,9,List(4),些,些,false), Span(7,8,List(5),看,看-10,false), Span(6,7,List(6),去,去-02,false), Span(5,6,List(7),我,我,false), Span(4,5,List(8),建议,建议-01,false), Span(3,4,List(9),能,能,false), Span(2,3,List(10),是否,是否-01,false), Span(1,2,List(11),您,您,false)),Map(2 -> 小, 5 -> 看-10, 8 -> 建议-01, 7 -> 我, 1 -> 王子, 11 -> 您, 4 -> 些, 6 -> 去-02, 9 -> 能, 0 -> 问道-01, 10 -> 是否-01, 3 -> 什么),Map(些 -> 些, 我 -> 我, 能 -> 能, 王 -> 王子, 去 -> 去-02, 小 -> 小, 看 -> 看-10, 建 -> 建议-01, 什 -> 什么, 问 -> 问道-01, 是 -> 是否-01, 您 -> 您))),[Ljava.lang.String;@2e53b094,Annotation([Ljava.lang.String;@39fa8ad2,[Ljava.lang.String;@76ddd61a,[Ljava.lang.String;@3f92a84e),Annotation([Ljava.lang.String;@cf67838,[Ljava.lang.String;@6137cf6e,[Ledu.cmu.lti.nlp.amr.Dependency;@7942a854),Annotation([Ljava.lang.String;@53b8afea,[Ljava.lang.String;@6c302a1d,[Ljava.lang.String;@33a3c44a),Annotation([Ljava.lang.String;@5fcfca62,[Ljava.lang.String;@499ef98e,[Ledu.cmu.lti.nlp.amr.Entity;@24934262))
AMR:
(些 / 些, mod, 什 / 什么)
(些 / 些, mod, 看 / 看-10)
(建 / 建议-01, location, 能 / 能)
(建 / 建议-01, purpose, 去 / 去-02)
(建 / 建议-01, subset, 我 / 我)
(是 / 是否-01, beneficiary, 您 / 您)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, manner, 去 / 去-02)
(能 / 能, mod, 是 / 是否-01)
(问 / 问道-01, ARG3, 王 / 王子)
(问 / 问道-01, manner, 看 / 看-10)

Decoded in 41,018 microseconds
Sentence: “ 地球 这 颗 行星 ， ” 地理学家 回答 他 说 ，

Spans:
Span 9-10:  他 => 他
Span 8-9:  回答 => 回答-01
Span 1-2:  地球 => 地球
Span 7-8:  地理学家 => 地理学家
Span 4-5:  行星 => 行星
Span 10-11:  说 => 说-02
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 1-2:  地球 => 地球
Oracle Span 7-8:  地理学家 => 地理学家
Oracle Span 4-5:  行星 => 行星
Oracle Span 2-3:  这 => 这

Extra span: 说 => 说-02
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	地球	_	NN	NN	_	5	nsubj	_	_
3	这	_	DT	DT	_	5	det	_	_
4	颗	_	M	M	_	3	clf	_	_
5	行星	_	NN	NN	_	9	dep	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_
8	地理学家	_	AD	AD	_	9	advmod	_	_
9	回答	_	VV	VV	_	0	root	_	_
10	他	_	PN	PN	_	11	dep	_	_
11	说	_	VV	VV	_	9	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 地理学家)
(x0 / 回答-01, arg2, x9 / 行星)
(x0 / 回答-01, arg3, x3 / 他)
(x9 / 行星, mod, x10 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),他,他,false), Span(8,9,List(2),回答,回答-01,false), Span(7,8,List(3),地理学家,地理学家,false), Span(4,5,List(4),行星,行星,false), Span(2,3,List(5),这,这,false), Span(1,2,List(6),地球,地球,false)),Map(2 -> 回答-01, 5 -> 这, 1 -> 他, 4 -> 行星, 6 -> 地球, 0 -> 说-02, 3 -> 地理学家),Map(地2 -> 地球, 这 -> 这, 他 -> 他, 地 -> 地理学家, 说 -> 说-02, 行 -> 行星, 回 -> 回答-01))),[Ljava.lang.String;@93f432e,Annotation([Ljava.lang.String;@288214b1,[Ljava.lang.String;@16eedaa6,[Ljava.lang.String;@28501a4b),Annotation([Ljava.lang.String;@5b051a5c,[Ljava.lang.String;@639aba11,[Ledu.cmu.lti.nlp.amr.Dependency;@341672e),Annotation([Ljava.lang.String;@2bebb74f,[Ljava.lang.String;@58cf8f94,[Ljava.lang.String;@6e33fcae),Annotation([Ljava.lang.String;@66c38e51,[Ljava.lang.String;@10641c09,[Ledu.cmu.lti.nlp.amr.Entity;@34f392be))
AMR:
(回 / 回答-01, example, 地 / 地理学家)
(回 / 回答-01, time, 行 / 行星)
(行 / 行星, domain, 地2 / 地球)
(行 / 行星, mod, 这 / 这)
(说 / 说-02, direction, 他 / 他)
(说 / 说-02, example, 回 / 回答-01)

Decoded in 17,407 microseconds
Sentence: “ 它 的 名望 很 高 … ”

Spans:
Span 3-4:  名望 => 名望
Span 1-2:  它 => 它
Span 4-5:  很 => 很
Span 5-6:  高 => 高-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  名望 => 名望
Oracle Span 1-2:  它 => 它
Oracle Span 4-5:  很 => 很
Oracle Span 5-6:  高 => 高-01

Incorrect span: 高 => 高-02
Missing span: 高 => 高-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	名望	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	高	_	VA	VA	_	0	root	_	_
7	…	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 高-01, arg0, x9 / 名望)
(x7 / 高-01, degree, x8 / 很)
(x9 / 名望, poss, x10 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),高,高-02,false), Span(4,5,List(1),很,很,false), Span(3,4,List(2),名望,名望,false), Span(1,2,List(3),它,它,false)),Map(2 -> 名望, 1 -> 很, 0 -> 高-02, 3 -> 它),Map(名 -> 名望, 高 -> 高-02, 很 -> 很, 它 -> 它))),[Ljava.lang.String;@4554de02,Annotation([Ljava.lang.String;@3f9f71ff,[Ljava.lang.String;@fabb651,[Ljava.lang.String;@27e5b378),Annotation([Ljava.lang.String;@4422dd48,[Ljava.lang.String;@764cba,[Ledu.cmu.lti.nlp.amr.Dependency;@523d6bdb),Annotation([Ljava.lang.String;@58496c97,[Ljava.lang.String;@ad3324b,[Ljava.lang.String;@3872bc37),Annotation([Ljava.lang.String;@1a87b51,[Ljava.lang.String;@12968227,[Ledu.cmu.lti.nlp.amr.Entity;@144ab54))
AMR:
(名 / 名望, poss, 它 / 它)
(高 / 高-02, degree, 名 / 名望)
(高 / 高-02, degree, 很 / 很)

Decoded in 7,631 microseconds
Sentence: 于是 小 王子 就 走 了 ， 他 一边 走 一边 想 着 他 的 花 。

Spans:
Span 10-11:  一边 => 一边
Span 8-9:  一边 => 一边
Span 13-14:  他 => 他
Span 7-8:  他 => 他
Span 1-2:  小 => 小
Span 3-4:  就 => 就-01
Span 11-12:  想 => 想-05
Span 2-3:  王子 => 王子
Span 15-16:  花 => 花-01
Span 9-10:  走 => 走-05
Span 4-5:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 1-2:  小 => 小-01
Oracle Span 11-12:  想 => 想-01
Oracle Span 2-3:  王子 => 王子
Oracle Span 15-16:  花 => 花
Oracle Span 4-5:  走 => 走-02

Incorrect span: 花 => 花-01
Extra span: 他 => 他
Incorrect span: 想 => 想-05
Extra span: 一边 => 一边
Extra span: 走 => 走-05
Extra span: 一边 => 一边
Incorrect span: 走 => 走-05
Extra span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 走 => 走-02
Missing span: 小 => 小-01
Missing span: 想 => 想-01
Missing span: 花 => 花
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	他	_	PN	PN	_	10	nsubj	_	_
9	一边	_	CD	CD	_	10	dep	_	_
10	走	_	VV	VV	_	5	conj	_	_
11	一边	_	CD	CD	_	10	range	_	_
12	想	_	VV	VV	_	10	conj	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	他	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	花	_	NN	NN	_	12	dobj	_	_
17	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x21 / 走-02, arg0, x22 / 王子)
(x22 / 王子, mod, x23 / 小-01)
(x24 / 想-01, arg1, x26 / 花)
(x26 / 花, poss, x27 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),花,花-01,false), Span(13,14,List(1),他,他,false), Span(11,12,List(2),想,想-05,false), Span(10,11,List(3),一边,一边,false), Span(9,10,List(4),走,走-05,false), Span(8,9,List(5),一边,一边,false), Span(7,8,List(6),他,他,false), Span(4,5,List(7),走,走-05,false), Span(3,4,List(8),就,就-01,false), Span(2,3,List(9),王子,王子,false), Span(1,2,List(10),小,小,false)),Map(2 -> 想-05, 5 -> 一边, 8 -> 就-01, 7 -> 走-05, 1 -> 他, 4 -> 走-05, 6 -> 他, 9 -> 王子, 0 -> 花-01, 10 -> 小, 3 -> 一边),Map(就 -> 就-01, 他2 -> 他, 走2 -> 走-05, 王 -> 王子, 一2 -> 一边, 他 -> 他, 小 -> 小, 花 -> 花-01, 走 -> 走-05, 想 -> 想-05, 一 -> 一边))),[Ljava.lang.String;@2cfa2c4f,Annotation([Ljava.lang.String;@6ecab872,[Ljava.lang.String;@48eb9836,[Ljava.lang.String;@6c518474),Annotation([Ljava.lang.String;@11b455e5,[Ljava.lang.String;@2a066689,[Ledu.cmu.lti.nlp.amr.Dependency;@3e3861d7),Annotation([Ljava.lang.String;@5e2a3040,[Ljava.lang.String;@6d025d1d,[Ljava.lang.String;@74294c1a),Annotation([Ljava.lang.String;@9e2ad91,[Ljava.lang.String;@64524dd,[Ledu.cmu.lti.nlp.amr.Entity;@79d06bbd))
AMR:
(一 / 一边, ARG3, 走 / 走-05)
(一2 / 一边, ARG3, 他2 / 他)
(想 / 想-05, ARG1, 一 / 一边)
(想 / 想-05, op, 花 / 花-01)
(王 / 王子, mod, 小 / 小)
(花 / 花-01, poss, 他 / 他)
(走 / 走-05, ARG1, 一2 / 一边)
(走2 / 走-05, ARG4, 一2 / 一边)
(走2 / 走-05, manner, 就 / 就-01)
(走2 / 走-05, value, 王 / 王子)

Decoded in 39,319 microseconds
Sentence: XVI 。

Spans:
Span 0-1:  XVI => XVI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVI => XVI

Dependencies:
1	XVI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XVI,XVI,false)),Map(0 -> XVI),Map(x -> XVI))),[Ljava.lang.String;@47a7a101,Annotation([Ljava.lang.String;@5bb51241,[Ljava.lang.String;@7479b626,[Ljava.lang.String;@e8ea697),Annotation([Ljava.lang.String;@74dbb1ee,[Ljava.lang.String;@70f822e,[Ledu.cmu.lti.nlp.amr.Dependency;@3efedc6f),Annotation([Ljava.lang.String;@45bf6f39,[Ljava.lang.String;@6c42f2a1,[Ljava.lang.String;@17a703f5),Annotation([Ljava.lang.String;@5ff2b8ca,[Ljava.lang.String;@618ad2aa,[Ledu.cmu.lti.nlp.amr.Entity;@1aa6e3c0))
AMR:


Decoded in 1,241 microseconds
Sentence: 第七 个 行星 ， 于是 就 是 地球 了 。

Spans:
Span 7-8:  地球 => 地球
Span 5-6:  就 => 就-01
Span 6-7:  是 => 是-04
Span 2-3:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  地球 => 地球
Oracle Span 5-6:  就 => 就
Oracle Span 2-3:  行星 => 行星

Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	第七	_	OD	OD	_	2	ordmod	_	_
2	个	_	M	M	_	3	clf	_	_
3	行星	_	NN	NN	_	7	nsubj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	于是	_	AD	AD	_	7	advmod	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	地球	_	NN	NN	_	7	attr	_	_
9	了	_	SP	SP	_	7	dep	_	_
10	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 地球, domain, x2 / 行星)
(x0 / 地球, manner, x4 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),地球,地球,false), Span(6,7,List(1),是,是-04,false), Span(5,6,List(2),就,就-01,false), Span(2,3,List(3),行星,行星,false)),Map(2 -> 就-01, 1 -> 是-04, 0 -> 地球, 3 -> 行星),Map(就 -> 就-01, 地 -> 地球, 行 -> 行星, 是 -> 是-04))),[Ljava.lang.String;@3531f3ca,Annotation([Ljava.lang.String;@7fcf294e,[Ljava.lang.String;@4867ab9f,[Ljava.lang.String;@65f2f9b0),Annotation([Ljava.lang.String;@5fe7f967,[Ljava.lang.String;@59e43e8c,[Ledu.cmu.lti.nlp.amr.Dependency;@2caa5d7c),Annotation([Ljava.lang.String;@5e671e20,[Ljava.lang.String;@3eabe84a,[Ljava.lang.String;@46c3a14d),Annotation([Ljava.lang.String;@38fc5554,[Ljava.lang.String;@5e8cda75,[Ledu.cmu.lti.nlp.amr.Entity;@3f049056))
AMR:
(地 / 地球, domain, 行 / 行星)
(地 / 地球, manner, 就 / 就-01)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 7,840 microseconds
Sentence: 地球 可 不 是 一 颗 普通 的 行星 ！

Spans:
Span 2-3:  不 => 不
Span 1-2:  可 => 可-01
Span 0-1:  地球 => 地球
Span 3-4:  是 => 是-04
Span 6-7:  普通 => 普通
Span 8-9:  行星 => 行星

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  地球 => 地球
Oracle Span 6-7:  普通 => 普通-01
Oracle Span 8-9:  行星 => 行星

Incorrect span: 普通 => 普通
Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 可 => 可-01
Missing span: 普通 => 普通-01
Dependencies:
1	地球	_	NN	NN	_	4	nsubj	_	_
2	可	_	VV	VV	_	4	mmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	9	clf	_	_
7	普通	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	行星	_	NN	NN	_	4	attr	_	_
10	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 行星, domain, x4 / 地球)
(x0 / 行星, mod, x2 / 普通-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),行星,行星,false), Span(6,7,List(1),普通,普通,false), Span(3,4,List(2),是,是-04,false), Span(2,3,List(3),不,不,false), Span(1,2,List(4),可,可-01,false), Span(0,1,List(5),地球,地球,false)),Map(2 -> 是-04, 5 -> 地球, 1 -> 普通, 4 -> 可-01, 0 -> 行星, 3 -> 不),Map(地 -> 地球, 不 -> 不, 普 -> 普通, 行 -> 行星, 是 -> 是-04, 可 -> 可-01))),[Ljava.lang.String;@64968732,Annotation([Ljava.lang.String;@3e1a3801,[Ljava.lang.String;@6fd12c5,[Ljava.lang.String;@1de0a46c),Annotation([Ljava.lang.String;@4d1f1ff5,[Ljava.lang.String;@222afc67,[Ledu.cmu.lti.nlp.amr.Dependency;@4c2fb9dd),Annotation([Ljava.lang.String;@54f4a7f0,[Ljava.lang.String;@61a1ea2c,[Ljava.lang.String;@149debbb),Annotation([Ljava.lang.String;@25cd49a4,[Ljava.lang.String;@5477a1ca,[Ledu.cmu.lti.nlp.amr.Entity;@3ae9d1e2))
AMR:
(不 / 不, domain, 可 / 可-01)
(可 / 可-01, domain, 地 / 地球)
(是 / 是-04, domain, 不 / 不)
(普 / 普通, domain, 是 / 是-04)
(行 / 行星, domain, 普 / 普通)

Decoded in 10,705 microseconds
Sentence: 它 上面 有 一百一十一 个 国王 （ 当然 ， 没有 漏掉 黑人 国王 ） ， 七千 个 地理学家 ， 九十万 个 实业家 ， 七百五十万 个 酒鬼 ， 三亿一千一百万 个 爱 虚荣 的 人 ， 也 就 是 说 ， 大约 有 二十亿 的 大人 。

Spans:
Span 1-2:  上面 => 上面
Span 34-35:  也 => 也
Span 32-33:  人 => 人
Span 12-13:  国王 => 国王
Span 5-6:  国王 => 国王
Span 17-18:  地理学家 => 地理学家
Span 43-44:  大人 => 大人
Span 39-40:  大约 => 大约
Span 0-1:  它 => 它
Span 21-22:  实业家 => 实业家
Span 35-36:  就 => 就-01
Span 7-8:  当然 => 当然
Span 36-37:  是 => 是-04
Span 40-41:  有 => 有-06
Span 2-3:  有 => 有-06
Span 10-11:  漏掉 => 漏掉-01
Span 29-30:  爱 => (person :arg0-of 爱-01)
Span 30-31:  虚荣 => 虚荣-01
Span 37-38:  说 => 说-02
Span 25-26:  酒鬼 => 酒鬼
Span 11-12:  黑人 => 黑人

************* WARNING: Cannot find label = :arg0 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 为了 使 你们 对 地球 的 大小 有 一 个 概念 ， 我 想 要 告诉 你们 ： 在 发明 电 之前 ， 在 六 个 大洲 上 ， 为了 点 路灯 ， 需要 维持 一 支 为数 四十六万二千五百一十一 人 的 真正 大军 。

Spans:
Span 29-30:  为了 => 为了-01
Span 0-1:  为了 => 为了-01
Span 21-22:  之前 => 之前
Span 39-40:  人 => 人
Span 16-17:  你们 => 你们
Span 2-3:  你们 => 你们
Span 1-2:  使 => 使-01
Span 19-20:  发明 => 发明-01
Span 15-16:  告诉 => 告诉-01
Span 23-24:  在 => 在-01
Span 18-19:  在 => 在-01
Span 4-5:  地球 => 地球
Span 42-43:  大军 => 大军
Span 6-7:  大小 => 大小
Span 26-27:  大洲 => 大洲
Span 3-4:  对 => 对-02
Span 13-14:  想 => 想-05
Span 12-13:  我 => 我
Span 7-8:  有 => 有-06
Span 10-11:  概念 => 概念
Span 30-31:  点 => 点
Span 20-21:  电 => 电
Span 41-42:  真正 => 真正
Span 34-35:  维持 => 维持-01
Span 14-15:  要 => 要-02
Span 31-32:  路灯 => 路灯
Span 33-34:  需要 => 需要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 21-22:  之前 => 之前
Oracle Span 39-40:  人 => 人
Oracle Span 2-3:  你们 => 你们
Oracle Span 1-2:  使 => 使-01
Oracle Span 19-20:  发明 => 发明-01
Oracle Span 15-16:  告诉 => 告诉-01
Oracle Span 4-5:  地球 => 地球
Oracle Span 42-43:  大军 => 大军
Oracle Span 6-7:  大小 => 大小
Oracle Span 26-27:  大洲 => 大洲
Oracle Span 12-13:  我 => 我
Oracle Span 7-8:  有 => 有-01
Oracle Span 10-11:  概念 => 概念
Oracle Span 30-31:  点 => 点-01
Oracle Span 20-21:  电 => 电
Oracle Span 41-42:  真正 => 真正-01
Oracle Span 34-35:  维持 => 维持-01
Oracle Span 31-32:  路灯 => 路灯
Oracle Span 33-34:  需要 => 需要-03

Incorrect span: 真正 => 真正
Incorrect span: 需要 => 需要-04
Incorrect span: 点 => 点
Extra span: 为了 => 为了-01
Extra span: 在 => 在-01
Extra span: 在 => 在-01
Extra span: 你们 => 你们
Extra span: 要 => 要-02
Extra span: 想 => 想-05
Incorrect span: 有 => 有-06
Extra span: 对 => 对-02
Extra span: 为了 => 为了-01
Missing span: 需要 => 需要-03
Missing span: 点 => 点-01
Missing span: 真正 => 真正-01
Missing span: 有 => 有-01
Dependencies:
1	为了	_	P	P	_	14	prep	_	_
2	使	_	VV	VV	_	1	pccomp	_	_
3	你们	_	PN	PN	_	2	dobj	_	_
4	对	_	P	P	_	8	prep	_	_
5	地球	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	大小	_	NN	NN	_	4	pobj	_	_
8	有	_	VE	VE	_	2	dep	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	11	clf	_	_
11	概念	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	我	_	PN	PN	_	14	nsubj	_	_
14	想	_	VV	VV	_	0	root	_	_
15	要	_	VV	VV	_	16	mmod	_	_
16	告诉	_	VV	VV	_	14	ccomp	_	_
17	你们	_	PN	PN	_	16	dobj	_	_
18	：	_	PU	PU	_	16	punct	_	_
19	在	_	P	P	_	34	prep	_	_
20	发明	_	VV	VV	_	22	lccomp	_	_
21	电	_	NN	NN	_	20	dobj	_	_
22	之前	_	LC	LC	_	19	plmod	_	_
23	,	_	PU	PU	_	34	punct	_	_
24	在	_	P	P	_	34	prep	_	_
25	六	_	CD	CD	_	26	nummod	_	_
26	个	_	M	M	_	27	clf	_	_
27	大洲	_	NN	NN	_	28	lobj	_	_
28	上	_	LC	LC	_	24	plmod	_	_
29	,	_	PU	PU	_	34	punct	_	_
30	为了	_	P	P	_	34	prep	_	_
31	点	_	NN	NN	_	32	nsubj	_	_
32	路灯	_	VV	VV	_	30	pccomp	_	_
33	,	_	PU	PU	_	34	punct	_	_
34	需要	_	VV	VV	_	16	dep	_	_
35	维持	_	VV	VV	_	34	ccomp	_	_
36	一	_	CD	CD	_	37	nummod	_	_
37	支	_	M	M	_	38	clf	_	_
38	为数	_	NN	NN	_	40	nn	_	_
39	四十六万二千五百一十一	_	CD	CD	_	40	nummod	_	_
40	人	_	NN	NN	_	43	assmod	_	_
41	的	_	DEG	DEG	_	40	assm	_	_
42	真正	_	JJ	JJ	_	43	amod	_	_
43	大军	_	NN	NN	_	35	dobj	_	_
44	。	_	PU	PU	_	14	punct	_	_
45	我	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x14 / 点-01, arg1, x15 / 路灯)
(x19 / 之前, arg0, x32 / 发明-01)
(x23 / 使-01, arg2, x25 / 有-01)
(x25 / 有-01, arg1, x27 / 概念)
(x27 / 概念, topic, x29 / 大小)
(x29 / 大小, mod, x30 / 地球)
(x3 / 告诉-01, arg1, x5 / 需要-03)
(x3 / 告诉-01, arg2, x22 / 你们)
(x32 / 发明-01, arg1, x33 / 电)
(x5 / 需要-03, arg0, x6 / 维持-01)
(x5 / 需要-03, location, x16 / 大洲)
(x5 / 需要-03, purpose, x14 / 点-01)
(x5 / 需要-03, time, x19 / 之前)
(x6 / 维持-01, arg1, x7 / 大军)
(x6 / 维持-01, arg2, x10 / 人)
(x7 / 大军, mod, x9 / 真正-01)

Input(Some(Graph(null,ArrayBuffer(Span(42,43,List(0),大军,大军,false), Span(41,42,List(1),真正,真正,false), Span(39,40,List(2),人,人,false), Span(34,35,List(3),维持,维持-01,false), Span(33,34,List(4),需要,需要-04,false), Span(31,32,List(5),路灯,路灯,false), Span(30,31,List(6),点,点,false), Span(29,30,List(7),为了,为了-01,false), Span(26,27,List(8),大洲,大洲,false), Span(23,24,List(9),在,在-01,false), Span(21,22,List(10),之前,之前,false), Span(20,21,List(11),电,电,false), Span(19,20,List(12),发明,发明-01,false), Span(18,19,List(13),在,在-01,false), Span(16,17,List(14),你们,你们,false), Span(15,16,List(15),告诉,告诉-01,false), Span(14,15,List(16),要,要-02,false), Span(13,14,List(17),想,想-05,false), Span(12,13,List(18),我,我,false), Span(10,11,List(19),概念,概念,false), Span(7,8,List(20),有,有-06,false), Span(6,7,List(21),大小,大小,false), Span(4,5,List(22),地球,地球,false), Span(3,4,List(23),对,对-02,false), Span(2,3,List(24),你们,你们,false), Span(1,2,List(25),使,使-01,false), Span(0,1,List(26),为了,为了-01,false)),Map(2 -> 人, 5 -> 路灯, 12 -> 发明-01, 8 -> 大洲, 15 -> 告诉-01, 21 -> 大小, 18 -> 我, 24 -> 你们, 7 -> 为了-01, 1 -> 真正, 17 -> 想-05, 23 -> 对-02, 26 -> 为了-01, 4 -> 需要-04, 11 -> 电, 14 -> 你们, 20 -> 有-06, 6 -> 点, 9 -> 在-01, 0 -> 大军, 22 -> 地球, 16 -> 要-02, 19 -> 概念, 10 -> 之前, 3 -> 维持-01, 25 -> 使-01, 13 -> 在-01),Map(在2 -> 在-01, 发 -> 发明-01, 需 -> 需要-04, 大2 -> 大洲, 在 -> 在-01, 路 -> 路灯, 我 -> 我, 要 -> 要-02, 概 -> 概念, 为2 -> 为了-01, 大 -> 大军, 你 -> 你们, 维 -> 维持-01, 地 -> 地球, 为 -> 为了-01, 告 -> 告诉-01, 点 -> 点, 你2 -> 你们, 大3 -> 大小, 使 -> 使-01, 电 -> 电, 人 -> 人, 对 -> 对-02, 想 -> 想-05, 真 -> 真正, 之 -> 之前, 有 -> 有-06))),[Ljava.lang.String;@e9dc4d0,Annotation([Ljava.lang.String;@670d4d38,[Ljava.lang.String;@131ff6fa,[Ljava.lang.String;@43b40233),Annotation([Ljava.lang.String;@23eff5d1,[Ljava.lang.String;@2e060819,[Ledu.cmu.lti.nlp.amr.Dependency;@42c28305),Annotation([Ljava.lang.String;@2184b4f4,[Ljava.lang.String;@7d199c68,[Ljava.lang.String;@63411512),Annotation([Ljava.lang.String;@35cd68d4,[Ljava.lang.String;@316a598d,[Ledu.cmu.lti.nlp.amr.Entity;@216914))
AMR:
(为 / 为了-01, degree, 点 / 点)
(为 / 为了-01, location, 大2 / 大洲)
(之 / 之前, time, 电 / 电)
(人 / 人, location, 维 / 维持-01)
(使 / 使-01, topic, 为2 / 为了-01)
(发 / 发明-01, degree, 电 / 电)
(发 / 发明-01, time, 在2 / 在-01)
(告 / 告诉-01, snt1, 在2 / 在-01)
(告 / 告诉-01, topic, 要 / 要-02)
(在 / 在-01, time, 之 / 之前)
(在2 / 在-01, location, 你 / 你们)
(地 / 地球, location, 对 / 对-02)
(大 / 大军, mod, 真 / 真正)
(大2 / 大洲, location, 在 / 在-01)
(大3 / 大小, mod, 地 / 地球)
(对 / 对-02, location, 为2 / 为了-01)
(对 / 对-02, location, 你2 / 你们)
(想 / 想-05, time, 我 / 我)
(想 / 想-05, time, 概 / 概念)
(有 / 有-06, topic, 大3 / 大小)
(概 / 概念, topic, 有 / 有-06)
(真 / 真正, location, 人 / 人)
(维 / 维持-01, location, 为 / 为了-01)
(维 / 维持-01, time, 需 / 需要-04)
(要 / 要-02, time, 想 / 想-05)
(路 / 路灯, location, 为 / 为了-01)

Decoded in 239,382 microseconds
Sentence: 从 稍 远 的 地方 看 过去 ， 它 给 人 以 一 种 壮丽 辉煌 的 印象 。

Spans:
Span 10-11:  人 => 人
Span 17-18:  印象 => 印象
Span 4-5:  地方 => 地方
Span 14-15:  壮丽 => 壮丽-01
Span 8-9:  它 => 它
Span 5-6:  看 => 看-10
Span 13-14:  种 => 种
Span 1-2:  稍 => 稍
Span 9-10:  给 => 给-02
Span 15-16:  辉煌 => 辉煌-01
Span 6-7:  过去 => 过去-01
Span 2-3:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 17-18:  印象 => 印象
Oracle Span 4-5:  地方 => 地方
Oracle Span 14-15:  壮丽 => 壮丽-01
Oracle Span 8-9:  它 => 它
Oracle Span 5-6:  看 => 看-02
Oracle Span 1-2:  稍 => 稍
Oracle Span 9-10:  给 => 给-01
Oracle Span 15-16:  辉煌 => 辉煌-01
Oracle Span 6-7:  过去 => 过去
Oracle Span 2-3:  远 => 远-01

Extra span: 种 => 种
Incorrect span: 给 => 给-02
Incorrect span: 过去 => 过去-01
Incorrect span: 看 => 看-10
Incorrect span: 远 => 远
Missing span: 给 => 给-01
Missing span: 看 => 看-02
Missing span: 过去 => 过去
Missing span: 远 => 远-01
Dependencies:
1	从	_	P	P	_	6	prep	_	_
2	稍	_	AD	AD	_	3	advmod	_	_
3	远	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	地方	_	NN	NN	_	1	pobj	_	_
6	看	_	VV	VV	_	0	root	_	_
7	过去	_	NT	NT	_	6	dobj	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	它	_	PN	PN	_	15	nsubj	_	_
10	给	_	P	P	_	15	prep	_	_
11	人	_	NN	NN	_	10	pobj	_	_
12	以	_	P	P	_	15	prep	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	种	_	M	M	_	12	pobj	_	_
15	壮丽	_	VV	VV	_	6	dep	_	_
16	辉煌	_	VA	VA	_	18	rcmod	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	印象	_	NN	NN	_	15	dobj	_	_
19	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x21 / 给-01, arg0, x23 / 它)
(x21 / 给-01, arg1, x24 / 印象)
(x21 / 给-01, arg2, x28 / 人)
(x21 / 给-01, manner, x29 / 看-02)
(x24 / 印象, mod, x26 / 壮丽-01)
(x24 / 印象, mod, x27 / 辉煌-01)
(x29 / 看-02, direction, x33 / 过去)
(x29 / 看-02, location, x30 / 地方)
(x30 / 地方, mod, x31 / 远-01)
(x31 / 远-01, degree, x32 / 稍)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),印象,印象,false), Span(15,16,List(1),辉煌,辉煌-01,false), Span(14,15,List(2),壮丽,壮丽-01,false), Span(13,14,List(3),种,种,false), Span(10,11,List(4),人,人,false), Span(9,10,List(5),给,给-02,false), Span(8,9,List(6),它,它,false), Span(6,7,List(7),过去,过去-01,false), Span(5,6,List(8),看,看-10,false), Span(4,5,List(9),地方,地方,false), Span(2,3,List(10),远,远,false), Span(1,2,List(11),稍,稍,false)),Map(2 -> 壮丽-01, 5 -> 给-02, 8 -> 看-10, 7 -> 过去-01, 1 -> 辉煌-01, 11 -> 稍, 4 -> 人, 6 -> 它, 9 -> 地方, 0 -> 印象, 10 -> 远, 3 -> 种),Map(稍 -> 稍, 辉 -> 辉煌-01, 过 -> 过去-01, 远 -> 远, 它 -> 它, 给 -> 给-02, 壮 -> 壮丽-01, 地 -> 地方, 印 -> 印象, 种 -> 种, 看 -> 看-10, 人 -> 人))),[Ljava.lang.String;@6ba30587,Annotation([Ljava.lang.String;@35764bef,[Ljava.lang.String;@5633dafd,[Ljava.lang.String;@5d5160e6),Annotation([Ljava.lang.String;@2eadc9f6,[Ljava.lang.String;@2903c6ff,[Ledu.cmu.lti.nlp.amr.Dependency;@61af1510),Annotation([Ljava.lang.String;@37af1f93,[Ljava.lang.String;@778d82e9,[Ljava.lang.String;@408e96d9),Annotation([Ljava.lang.String;@59901c4d,[Ljava.lang.String;@168cd36b,[Ledu.cmu.lti.nlp.amr.Entity;@d8d9199))
AMR:
(印 / 印象, mod, 壮 / 壮丽-01)
(印 / 印象, mod, 辉 / 辉煌-01)
(地 / 地方, mod, 远 / 远)
(壮 / 壮丽-01, ARG1, 种 / 种)
(看 / 看-10, direction, 过 / 过去-01)
(看 / 看-10, location, 地 / 地方)
(给 / 给-02, ARG4, 它 / 它)
(给 / 给-02, instrument, 人 / 人)
(给 / 给-02, manner, 看 / 看-10)
(给 / 给-02, time, 印 / 印象)
(远 / 远, degree, 稍 / 稍)

Decoded in 45,270 microseconds
Sentence: 这 支 军队 的 行动 就 象 歌剧院 的 芭蕾舞 动作 一样 ， 那么 有条不紊 。

Spans:
Span 11-12:  一样 => 一样
Span 2-3:  军队 => 军队
Span 10-11:  动作 => 动作
Span 5-6:  就 => 就-01
Span 14-15:  有条不紊 => 有条不紊-01
Span 7-8:  歌剧院 => 歌剧院
Span 9-10:  芭蕾舞 => 芭蕾舞
Span 4-5:  行动 => 行动-01
Span 0-1:  这 => 这
Span 13-14:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一样 => 一样-01
Oracle Span 2-3:  军队 => 军队
Oracle Span 10-11:  动作 => 动作
Oracle Span 5-6:  就 => 就
Oracle Span 14-15:  有条不紊 => 有条不紊-01
Oracle Span 7-8:  歌剧院 => 歌剧院
Oracle Span 9-10:  芭蕾舞 => 芭蕾舞
Oracle Span 4-5:  行动 => 行动-01
Oracle Span 0-1:  这 => 这
Oracle Span 13-14:  那么 => 那么

Incorrect span: 一样 => 一样
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 一样 => 一样-01
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	支	_	M	M	_	1	clf	_	_
3	军队	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	行动	_	NN	NN	_	12	nsubj	_	_
6	就	_	AD	AD	_	12	advmod	_	_
7	象	_	P	P	_	12	prep	_	_
8	歌剧院	_	NN	NN	_	11	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	芭蕾舞	_	JJ	JJ	_	11	amod	_	_
11	动作	_	NN	NN	_	7	pobj	_	_
12	一样	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	那么	_	AD	AD	_	15	advmod	_	_
15	有条不紊	_	VV	VV	_	12	dep	_	_
16	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x10 / 有条不紊-01, degree, x11 / 那么)
(x2 / 行动-01, arg0, x3 / 军队)
(x2 / 行动-01, manner, x10 / 有条不紊-01)
(x3 / 军队, mod, x4 / 这)
(x6 / 动作, mod, x7 / 芭蕾舞)
(x7 / 芭蕾舞, location, x8 / 歌剧院)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),有条不紊,有条不紊-01,false), Span(13,14,List(1),那么,那么,false), Span(11,12,List(2),一样,一样,false), Span(10,11,List(3),动作,动作,false), Span(9,10,List(4),芭蕾舞,芭蕾舞,false), Span(7,8,List(5),歌剧院,歌剧院,false), Span(5,6,List(6),就,就-01,false), Span(4,5,List(7),行动,行动-01,false), Span(2,3,List(8),军队,军队,false), Span(0,1,List(9),这,这,false)),Map(2 -> 一样, 5 -> 歌剧院, 8 -> 军队, 7 -> 行动-01, 1 -> 那么, 4 -> 芭蕾舞, 6 -> 就-01, 9 -> 这, 0 -> 有条不紊-01, 3 -> 动作),Map(就 -> 就-01, 歌 -> 歌剧院, 这 -> 这, 军 -> 军队, 动 -> 动作, 行 -> 行动-01, 那 -> 那么, 芭 -> 芭蕾舞, 一 -> 一样, 有 -> 有条不紊-01))),[Ljava.lang.String;@3901f6af,Annotation([Ljava.lang.String;@602ae7b6,[Ljava.lang.String;@10cd6753,[Ljava.lang.String;@71ad3d8a),Annotation([Ljava.lang.String;@47af099e,[Ljava.lang.String;@700f518a,[Ledu.cmu.lti.nlp.amr.Dependency;@b835727),Annotation([Ljava.lang.String;@13da7ab0,[Ljava.lang.String;@2c8662ac,[Ljava.lang.String;@260ff5b7),Annotation([Ljava.lang.String;@3724b43e,[Ljava.lang.String;@77eb5790,[Ledu.cmu.lti.nlp.amr.Entity;@68e7c8c3))
AMR:
(一 / 一样, mod, 动 / 动作)
(军 / 军队, mod, 这 / 这)
(动 / 动作, mod, 芭 / 芭蕾舞)
(就 / 就-01, ARG0, 行 / 行动-01)
(就 / 就-01, degree, 一 / 一样)
(有 / 有条不紊-01, degree, 那 / 那么)
(芭 / 芭蕾舞, location, 歌 / 歌剧院)
(行 / 行动-01, manner, 有 / 有条不紊-01)
(行 / 行动-01, time, 军 / 军队)

Decoded in 33,421 microseconds
Sentence: 首先 出现 的 是 新西兰 和 澳大利亚 的 点灯人 。

NER Entity: (country :name (name :op "新西兰"))
NER Entity: (country :name (name :op "澳大利亚"))
NER Entity: (country :name (name :op "澳大利亚"))
NER Entity: (country :name (name :op "新西兰"))
Spans:
Span 1-2:  出现 => 出现-01
Span 4-5:  新西兰 => 新西兰
Span 3-4:  是 => 是-04
Span 6-7:  澳大利亚 => 澳大利亚
Span 8-9:  点灯人 => 点灯人
Span 0-1:  首先 => 首先

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  出现 => 出现-01
Oracle Span 4-5:  新西兰 => 新西兰
Oracle Span 6-7:  澳大利亚 => 澳大利亚
Oracle Span 0-1:  首先 => 首先

Extra span: 点灯人 => 点灯人
Extra span: 是 => 是-04
Dependencies:
1	首先	_	AD	AD	_	2	advmod	_	_
2	出现	_	VV	VV	_	4	top	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	是	_	VC	VC	_	0	root	_	_
5	新西兰	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	澳大利亚	_	NR	NR	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	点灯人	_	NN	NN	_	4	attr	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 出现-01, manner, x8 / 首先)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),点灯人,点灯人,false), Span(6,7,List(1),澳大利亚,澳大利亚,false), Span(4,5,List(2),新西兰,新西兰,false), Span(3,4,List(3),是,是-04,false), Span(1,2,List(4),出现,出现-01,false), Span(0,1,List(5),首先,首先,false)),Map(2 -> 新西兰, 5 -> 首先, 1 -> 澳大利亚, 4 -> 出现-01, 0 -> 点灯人, 3 -> 是-04),Map(澳 -> 澳大利亚, 新 -> 新西兰, 出 -> 出现-01, 首 -> 首先, 点 -> 点灯人, 是 -> 是-04))),[Ljava.lang.String;@319c3a25,Annotation([Ljava.lang.String;@238bfd6c,[Ljava.lang.String;@ef1695a,[Ljava.lang.String;@58860997),Annotation([Ljava.lang.String;@81b5db0,[Ljava.lang.String;@7487b142,[Ledu.cmu.lti.nlp.amr.Dependency;@7139bd31),Annotation([Ljava.lang.String;@199bc830,[Ljava.lang.String;@4b3fe06e,[Ljava.lang.String;@27b45ea),Annotation([Ljava.lang.String;@3e17a0a1,[Ljava.lang.String;@790a251b,[Ledu.cmu.lti.nlp.amr.Entity;@4d8286c4))
AMR:
(出 / 出现-01, ARG4, 是 / 是-04)
(出 / 出现-01, manner, 首 / 首先)
(是 / 是-04, ARG0, 澳 / 澳大利亚)
(是 / 是-04, ARG4, 新 / 新西兰)
(点 / 点灯人, mod, 澳 / 澳大利亚)

Decoded in 12,782 microseconds
Sentence: 点着 了 灯 ， 随后 他们 就 去 睡觉 了 。

Spans:
Span 5-6:  他们 => 他们
Span 7-8:  去 => 去-02
Span 6-7:  就 => 就-01
Span 2-3:  灯 => 灯
Span 0-1:  点着 => 点着-01
Span 8-9:  睡觉 => 睡觉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他们 => 他们
Oracle Span 7-8:  去 => 去-01
Oracle Span 6-7:  就 => 就
Oracle Span 2-3:  灯 => 灯
Oracle Span 0-1:  点着 => 点着-01
Oracle Span 8-9:  睡觉 => 睡觉-01

Incorrect span: 去 => 去-02
Incorrect span: 就 => 就-01
Missing span: 去 => 去-01
Missing span: 就 => 就
Dependencies:
1	点着	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	灯	_	NN	NN	_	1	dobj	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	随后	_	AD	AD	_	9	advmod	_	_
6	他们	_	PN	PN	_	9	nsubj	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	去	_	MSP	MSP	_	9	prtmod	_	_
9	睡觉	_	VV	VV	_	1	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x5 / 点着-01, arg0, x6 / 他们)
(x5 / 点着-01, arg1, x7 / 灯)
(x8 / 去-01, arg1, x11 / 睡觉-01)
(x8 / 去-01, manner, x9 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),睡觉,睡觉-01,false), Span(7,8,List(1),去,去-02,false), Span(6,7,List(2),就,就-01,false), Span(5,6,List(3),他们,他们,false), Span(2,3,List(4),灯,灯,false), Span(0,1,List(5),点着,点着-01,false)),Map(2 -> 就-01, 5 -> 点着-01, 1 -> 去-02, 4 -> 灯, 0 -> 睡觉-01, 3 -> 他们),Map(就 -> 就-01, 灯 -> 灯, 去 -> 去-02, 他 -> 他们, 点 -> 点着-01, 睡 -> 睡觉-01))),[Ljava.lang.String;@150ede8b,Annotation([Ljava.lang.String;@161f6623,[Ljava.lang.String;@3e15bb06,[Ljava.lang.String;@6778aea6),Annotation([Ljava.lang.String;@4e1ce44,[Ljava.lang.String;@69228e85,[Ledu.cmu.lti.nlp.amr.Dependency;@7a7cc52c),Annotation([Ljava.lang.String;@5853495b,[Ljava.lang.String;@524a2ffb,[Ljava.lang.String;@2f61d591),Annotation([Ljava.lang.String;@332820f4,[Ljava.lang.String;@7173ae5b,[Ledu.cmu.lti.nlp.amr.Entity;@72456279))
AMR:
(去 / 去-02, manner, 就 / 就-01)
(去 / 去-02, prep-through, 睡 / 睡觉-01)
(去 / 去-02, time, 点 / 点着-01)
(点 / 点着-01, ARG3, 他 / 他们)
(点 / 点着-01, mod, 灯 / 灯)

Decoded in 13,655 microseconds
Sentence: 于是 就 轮到 中国 和 西伯利亚 的 点灯人 走上 舞台 。 随后 ， 他们 也 藏到 幕布 后面 去 了 。

NER Entity: (country :name (name :op "中国"))
NER Entity: (country :name (name :op "西伯利亚"))
NER Entity: (country :name (name :op "西伯利亚"))
NER Entity: (country :name (name :op "中国"))
Spans:
Span 3-4:  中国 => 中国
Span 14-15:  也 => 也
Span 13-14:  他们 => 他们
Span 18-19:  去 => 去-02
Span 17-18:  后面 => 后面
Span 1-2:  就 => 就-01
Span 16-17:  幕布 => 幕布
Span 7-8:  点灯人 => 点灯人
Span 9-10:  舞台 => 舞台
Span 5-6:  西伯利亚 => 西伯利亚
Span 8-9:  走上 => 走上-01
Span 2-3:  轮到 => 轮到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  中国 => 中国
Oracle Span 14-15:  也 => 也
Oracle Span 13-14:  他们 => 他们
Oracle Span 17-18:  后面 => 后面
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  幕布 => 幕布
Oracle Span 9-10:  舞台 => 舞台
Oracle Span 5-6:  西伯利亚 => 西伯利亚
Oracle Span 8-9:  走上 => 走上-01
Oracle Span 2-3:  轮到 => 轮到-01

Extra span: 去 => 去-02
Extra span: 点灯人 => 点灯人
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	于是	_	AD	AD	_	9	advmod	_	_
2	就	_	P	P	_	9	prep	_	_
3	轮到	_	NR	NR	_	6	nn	_	_
4	中国	_	NR	NR	_	6	conj	_	_
5	和	_	CC	CC	_	6	cc	_	_
6	西伯利亚	_	NR	NR	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	点灯人	_	NN	NN	_	2	pobj	_	_
9	走上	_	VV	VV	_	0	root	_	_
10	舞台	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	随后	_	AD	AD	_	16	advmod	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	他们	_	PN	PN	_	16	nsubj	_	_
15	也	_	AD	AD	_	16	advmod	_	_
16	藏到	_	VV	VV	_	9	dep	_	_
17	幕布	_	NN	NN	_	18	nn	_	_
18	后面	_	NN	NN	_	16	dobj	_	_
19	去	_	VV	VV	_	16	conj	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x21 / 后面, arg0, x23 / 幕布)
(x3 / 轮到-01, manner, x4 / 就)
(x45 / 走上-01, arg1, x46 / 舞台)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),去,去-02,false), Span(17,18,List(1),后面,后面,false), Span(16,17,List(2),幕布,幕布,false), Span(14,15,List(3),也,也,false), Span(13,14,List(4),他们,他们,false), Span(9,10,List(5),舞台,舞台,false), Span(8,9,List(6),走上,走上-01,false), Span(7,8,List(7),点灯人,点灯人,false), Span(5,6,List(8),西伯利亚,西伯利亚,false), Span(3,4,List(9),中国,中国,false), Span(2,3,List(10),轮到,轮到-01,false), Span(1,2,List(11),就,就-01,false)),Map(2 -> 幕布, 5 -> 舞台, 8 -> 西伯利亚, 7 -> 点灯人, 1 -> 后面, 11 -> 就-01, 4 -> 他们, 6 -> 走上-01, 9 -> 中国, 0 -> 去-02, 10 -> 轮到-01, 3 -> 也),Map(西 -> 西伯利亚, 就 -> 就-01, 轮 -> 轮到-01, 也 -> 也, 去 -> 去-02, 他 -> 他们, 点 -> 点灯人, 后 -> 后面, 走 -> 走上-01, 舞 -> 舞台, 中 -> 中国, 幕 -> 幕布))),[Ljava.lang.String;@53a9fcfd,Annotation([Ljava.lang.String;@21f459fc,[Ljava.lang.String;@4d192aef,[Ljava.lang.String;@1416cf9f),Annotation([Ljava.lang.String;@84487f4,[Ljava.lang.String;@bfc14b9,[Ledu.cmu.lti.nlp.amr.Dependency;@fb6097b),Annotation([Ljava.lang.String;@2dfe5525,[Ljava.lang.String;@1290c49,[Ljava.lang.String;@6a9b9909),Annotation([Ljava.lang.String;@55d9b8f0,[Ljava.lang.String;@a518813,[Ledu.cmu.lti.nlp.amr.Entity;@43d38654))
AMR:
(也 / 也, ARG4, 去 / 去-02)
(去 / 去-02, ARG5, 他 / 他们)
(去 / 去-02, manner, 后 / 后面)
(后 / 后面, location, 幕 / 幕布)
(就 / 就-01, domain, 点 / 点灯人)
(点 / 点灯人, age, 中 / 中国)
(点 / 点灯人, mod, 西 / 西伯利亚)
(走 / 走上-01, degree, 去 / 去-02)
(走 / 走上-01, instrument, 点 / 点灯人)
(走 / 走上-01, quant, 舞 / 舞台)
(轮 / 轮到-01, manner, 就 / 就-01)

Decoded in 48,476 microseconds
Sentence: 于是 就 又 轮到 俄罗斯 和 印度 的 点灯人 了 。 然后 就 是 非洲 和 欧洲 的 。 接着 是 南美 的 ， 再 就 是 北美 的 。

NER Entity: (country :name (name :op "俄罗斯"))
NER Entity: (country :name (name :op "印度"))
NER Entity: (country :name (name :op "非洲"))
NER Entity: (country :name (name :op "欧洲"))
NER Entity: (country :name (name :op "南美"))
NER Entity: (country :name (name :op "北美"))
NER Entity: (country :name (name :op "北美"))
NER Entity: (country :name (name :op "南美"))
NER Entity: (country :name (name :op "欧洲"))
NER Entity: (country :name (name :op "非洲"))
NER Entity: (country :name (name :op "印度"))
NER Entity: (country :name (name :op "俄罗斯"))
Spans:
Span 4-5:  俄罗斯 => 俄罗斯
Span 24-25:  再 => 再
Span 27-28:  北美 => (person :location 北美)
Span 21-22:  南美 => (person :location 南美)
Span 6-7:  印度 => 印度
Span 2-3:  又 => 又
Span 25-26:  就 => 就-01
Span 12-13:  就 => 就-01
Span 1-2:  就 => 就-01
Span 19-20:  接着 => 接着-01
Span 26-27:  是 => 是-04
Span 20-21:  是 => 是-04
Span 13-14:  是 => 是-04
Span 16-17:  欧洲 => 欧洲
Span 8-9:  点灯人 => 点灯人
Span 3-4:  轮到 => 轮到-01
Span 14-15:  非洲 => 非洲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  俄罗斯 => 俄罗斯
Oracle Span 27-28:  北美 => (person :location 北美)
Oracle Span 21-22:  南美 => (person :location 南美)
Oracle Span 6-7:  印度 => 印度
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  就 => 就
Oracle Span 16-17:  欧洲 => 欧洲
Oracle Span 3-4:  轮到 => 轮到-01
Oracle Span 14-15:  非洲 => 非洲

Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 再 => 再
Extra span: 是 => 是-04
Extra span: 接着 => 接着-01
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 点灯人 => 点灯人
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	于是	_	AD	AD	_	14	advmod	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	轮到	_	VV	VV	_	9	nsubj	_	_
5	俄罗斯	_	NR	NR	_	7	conj	_	_
6	和	_	CC	CC	_	7	cc	_	_
7	印度	_	NR	NR	_	4	dobj	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	点灯人	_	VV	VV	_	14	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	。	_	PU	PU	_	9	punct	_	_
12	然后	_	AD	AD	_	14	advmod	_	_
13	就	_	AD	AD	_	14	advmod	_	_
14	是	_	VC	VC	_	0	root	_	_
15	非洲	_	NR	NR	_	17	conj	_	_
16	和	_	CC	CC	_	17	cc	_	_
17	欧洲	_	NR	NR	_	14	attr	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	。	_	PU	PU	_	14	punct	_	_
20	接着	_	NN	NN	_	21	top	_	_
21	是	_	VC	VC	_	14	dep	_	_
22	南美	_	NR	NR	_	21	attr	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	,	_	PU	PU	_	14	punct	_	_
25	再	_	AD	AD	_	27	advmod	_	_
26	就	_	AD	AD	_	27	advmod	_	_
27	是	_	VC	VC	_	14	conj	_	_
28	北美	_	NR	NR	_	27	attr	_	_
29	的	_	DEG	DEG	_	28	assm	_	_
30	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x31 / 轮到-01, manner, x38 / 又)
(x31 / 轮到-01, manner, x39 / 就)
(x44 / person, location, x45 / 南美)
(x46 / person, location, x47 / 北美)

Input(Some(Graph(null,ArrayBuffer(Span(27,28,List(1, 0),北美,(person :location 北美),false), Span(26,27,List(2),是,是-04,false), Span(25,26,List(3),就,就-01,false), Span(24,25,List(4),再,再,false), Span(21,22,List(6, 5),南美,(person :location 南美),false), Span(20,21,List(7),是,是-04,false), Span(19,20,List(8),接着,接着-01,false), Span(16,17,List(9),欧洲,欧洲,false), Span(14,15,List(10),非洲,非洲,false), Span(13,14,List(11),是,是-04,false), Span(12,13,List(12),就,就-01,false), Span(8,9,List(13),点灯人,点灯人,false), Span(6,7,List(14),印度,印度,false), Span(4,5,List(15),俄罗斯,俄罗斯,false), Span(3,4,List(16),轮到,轮到-01,false), Span(2,3,List(17),又,又,false), Span(1,2,List(18),就,就-01,false)),Map(2 -> 是-04, 5 -> person, 12 -> 就-01, 15 -> 俄罗斯, 8 -> 接着-01, 18 -> 就-01, 7 -> 是-04, 17 -> 又, 1 -> 北美, 4 -> 再, 11 -> 是-04, 14 -> 印度, 6 -> 南美, 0 -> person, 9 -> 欧洲, 16 -> 轮到-01, 3 -> 就-01, 10 -> 非洲, 13 -> 点灯人),Map(又 -> 又, 轮 -> 轮到-01, 就 -> 就-01, 接 -> 接着-01, 就3 -> 就-01, p2 -> person, 北 -> 北美, 欧 -> 欧洲, p -> person, 印 -> 印度, 是3 -> 是-04, 非 -> 非洲, 就2 -> 就-01, 点 -> 点灯人, 俄 -> 俄罗斯, 是 -> 是-04, 是2 -> 是-04, 再 -> 再, 南 -> 南美))),[Ljava.lang.String;@75361cf6,Annotation([Ljava.lang.String;@6d303498,[Ljava.lang.String;@6ba7383d,[Ljava.lang.String;@3419e23b),Annotation([Ljava.lang.String;@710d89e2,[Ljava.lang.String;@1d75e7af,[Ledu.cmu.lti.nlp.amr.Dependency;@4fc142ec),Annotation([Ljava.lang.String;@34b27915,[Ljava.lang.String;@29eda4f8,[Ljava.lang.String;@1b9776f5),Annotation([Ljava.lang.String;@5e048149,[Ljava.lang.String;@79d9214d,[Ledu.cmu.lti.nlp.amr.Entity;@3d5790ea))
AMR:
(p / person, location, 北 / 北美)
(p2 / person, location, 南 / 南美)
(就2 / 就-01, ARG4, 点 / 点灯人)
(接 / 接着-01, ARG1, 是2 / 是-04)
(是 / 是-04, ARG1, p / person)
(是 / 是-04, ARG3, 是2 / 是-04)
(是 / 是-04, manner, 再 / 再)
(是 / 是-04, manner, 就 / 就-01)
(是2 / 是-04, ARG1, p2 / person)
(是2 / 是-04, ARG4, 欧 / 欧洲)
(是3 / 是-04, ARG0, 欧 / 欧洲)
(是3 / 是-04, ARG1, 非 / 非洲)
(是3 / 是-04, manner, 就2 / 就-01)
(点 / 点灯人, ARG4, 印 / 印度)
(轮 / 轮到-01, ARG3, 点 / 点灯人)
(轮 / 轮到-01, ARG4, 俄 / 俄罗斯)
(轮 / 轮到-01, manner, 又 / 又)
(轮 / 轮到-01, manner, 就3 / 就-01)

Decoded in 117,464 microseconds
Sentence: 他们 从来 也 不 会 搞 错 他们 上场 的 次序 。

Spans:
Span 8-9:  上场 => 上场-01
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 1-2:  从来 => 从来
Span 7-8:  他们 => 他们
Span 0-1:  他们 => 他们
Span 4-5:  会 => 会-03
Span 5-6:  搞 => 搞-04
Span 10-11:  次序 => 次序
Span 6-7:  错 => 错-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  上场 => 上场-01
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他们 => 他们
Oracle Span 4-5:  会 => 会-02
Oracle Span 10-11:  次序 => 次序

Extra span: 他们 => 他们
Extra span: 错 => 错-01
Extra span: 搞 => 搞-04
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Missing span: 会 => 会-02
Dependencies:
1	他们	_	PN	PN	_	6	nsubj	_	_
2	从来	_	AD	AD	_	6	advmod	_	_
3	也	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	会	_	VV	VV	_	6	mmod	_	_
6	搞	_	VV	VV	_	0	root	_	_
7	错	_	VA	VA	_	6	rcomp	_	_
8	他们	_	PN	PN	_	9	nsubj	_	_
9	上场	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	次序	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 会-02, manner, x5 / 也)
(x0 / 会-02, time, x9 / 从来)
(x6 / 次序, mod, x7 / 上场-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),次序,次序,false), Span(8,9,List(1),上场,上场-01,false), Span(7,8,List(2),他们,他们,false), Span(6,7,List(3),错,错-01,false), Span(5,6,List(4),搞,搞-04,false), Span(4,5,List(5),会,会-03,false), Span(3,4,List(6),不,不,false), Span(2,3,List(7),也,也,false), Span(1,2,List(8),从来,从来,false), Span(0,1,List(9),他们,他们,false)),Map(2 -> 他们, 5 -> 会-03, 8 -> 从来, 7 -> 也, 1 -> 上场-01, 4 -> 搞-04, 6 -> 不, 9 -> 他们, 0 -> 次序, 3 -> 错-01),Map(他2 -> 他们, 从 -> 从来, 也 -> 也, 他 -> 他们, 次 -> 次序, 不 -> 不, 会 -> 会-03, 搞 -> 搞-04, 上 -> 上场-01, 错 -> 错-01))),[Ljava.lang.String;@1dd7796b,Annotation([Ljava.lang.String;@67a3bd51,[Ljava.lang.String;@57402ba1,[Ljava.lang.String;@56913163),Annotation([Ljava.lang.String;@702b06fb,[Ljava.lang.String;@a18649a,[Ledu.cmu.lti.nlp.amr.Dependency;@5c534b5b),Annotation([Ljava.lang.String;@396639b,[Ljava.lang.String;@2b22a1cc,[Ljava.lang.String;@62573c86),Annotation([Ljava.lang.String;@2418ba04,[Ljava.lang.String;@14229fa7,[Ledu.cmu.lti.nlp.amr.Entity;@2ab0702e))
AMR:
(会 / 会-03, ARG4, 错 / 错-01)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 也 / 也)
(会 / 会-03, time, 从 / 从来)
(搞 / 搞-04, purpose, 上 / 上场-01)
(搞 / 搞-04, weekday, 他2 / 他们)
(次 / 次序, mod, 上 / 上场-01)
(错 / 错-01, ARG3, 搞 / 搞-04)
(错 / 错-01, ARG4, 他 / 他们)

Decoded in 31,214 microseconds
Sentence: 真 了不起 。

Spans:
Span 1-2:  了不起 => 了不起-01
Span 0-1:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  了不起 => 了不起-01
Oracle Span 0-1:  真 => 真

Dependencies:
1	真	_	AD	AD	_	2	advmod	_	_
2	了不起	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 了不起-01, degree, x2 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),了不起,了不起-01,false), Span(0,1,List(1),真,真,false)),Map(1 -> 真, 0 -> 了不起-01),Map(了 -> 了不起-01, 真 -> 真))),[Ljava.lang.String;@7158daf2,Annotation([Ljava.lang.String;@10f19647,[Ljava.lang.String;@102efc59,[Ljava.lang.String;@3936df72),Annotation([Ljava.lang.String;@e8e0dec,[Ljava.lang.String;@12d1f1d4,[Ledu.cmu.lti.nlp.amr.Dependency;@75fa1be3),Annotation([Ljava.lang.String;@7a389761,[Ljava.lang.String;@42714a7,[Ljava.lang.String;@19650aa6),Annotation([Ljava.lang.String;@3ce53f6a,[Ljava.lang.String;@2d82408,[Ledu.cmu.lti.nlp.amr.Entity;@3ee69ad8))
AMR:
(了 / 了不起-01, degree, 真 / 真)

Decoded in 3,340 microseconds
Sentence: 北极 仅 有 一 盏 路灯 ， 南极 也 只 有 一 盏 ； 唯独 北极 的 点灯人 和 他 南极 的 同行 ， 过 着 闲逸 、 懒散 的 生活 ： 他们 每 年 只 工作 两 次 。

NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
NER Entity: (country :name (name :op "北极"))
Spans:
Span 13-14:  ; => and
Span 8-9:  也 => 也
Span 1-2:  仅 => 仅
Span 19-20:  他 => 他
Span 32-33:  他们 => 他们
Span 15-16:  北极 => 北极
Span 0-1:  北极 => 北极
Span 20-21:  南极 => 南极
Span 7-8:  南极 => 南极
Span 35-36:  只 => 只
Span 9-10:  只 => 只
Span 22-23:  同行 => 同行-01
Span 14-15:  唯独 => 唯独
Span 36-37:  工作 => 工作-01
Span 34-35:  年 => 年
Span 28-29:  懒散 => 懒散
Span 10-11:  有 => 有-06
Span 2-3:  有 => 有-06
Span 33-34:  每 => 每
Span 17-18:  点灯人 => 点灯人
Span 30-31:  生活 => 生活-01
Span 5-6:  路灯 => 路灯
Span 24-25:  过 => 过-01
Span 26-27:  闲逸 => 闲逸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  ; => and
Oracle Span 8-9:  也 => 也
Oracle Span 1-2:  仅 => 仅
Oracle Span 0-1:  北极 => 北极
Oracle Span 7-8:  南极 => 南极
Oracle Span 9-10:  只 => 只
Oracle Span 22-23:  同行 => 同行-01
Oracle Span 14-15:  唯独 => 唯独
Oracle Span 36-37:  工作 => 工作-01
Oracle Span 34-35:  年 => (temporal-quantity :unit 年)
Oracle Span 28-29:  懒散 => 懒散
Oracle Span 2-3:  有 => 有-03
Oracle Span 10-11:  有 => 有-03
Oracle Span 30-31:  生活 => 生活
Oracle Span 5-6:  路灯 => 路灯
Oracle Span 24-25:  过 => 过-01
Oracle Span 26-27:  闲逸 => 闲逸

Extra span: 只 => 只
Incorrect span: 年 => 年
Extra span: 每 => 每
Extra span: 他们 => 他们
Incorrect span: 生活 => 生活-01
Extra span: 南极 => 南极
Extra span: 他 => 他
Extra span: 点灯人 => 点灯人
Extra span: 北极 => 北极
Incorrect span: 有 => 有-06
Incorrect span: 有 => 有-06
Missing span: 生活 => 生活
Missing span: 年 => (temporal-quantity :unit 年)
Missing span: 有 => 有-03
Missing span: 有 => 有-03
Dependencies:
1	北极	_	NN	NN	_	3	nsubj	_	_
2	仅	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	一	_	CD	CD	_	6	nummod	_	_
5	盏	_	NN	NN	_	6	nn	_	_
6	路灯	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	南极	_	NR	NR	_	11	nsubj	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	只	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	3	conj	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	盏	_	NN	NN	_	11	dobj	_	_
14	；	_	PU	PU	_	3	punct	_	_
15	唯独	_	VV	VV	_	3	conj	_	_
16	北极	_	NN	NN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	点灯人	_	NN	NN	_	23	conj	_	_
19	和	_	CC	CC	_	23	cc	_	_
20	他	_	PN	PN	_	23	nn	_	_
21	南极	_	NR	NR	_	23	assmod	_	_
22	的	_	DEG	DEG	_	21	assm	_	_
23	同行	_	NN	NN	_	15	dobj	_	_
24	,	_	PU	PU	_	15	punct	_	_
25	过	_	VV	VV	_	15	conj	_	_
26	着	_	AS	AS	_	25	asp	_	_
27	闲逸	_	NN	NN	_	29	conj	_	_
28	、	_	PU	PU	_	29	punct	_	_
29	懒散	_	NN	NN	_	31	assmod	_	_
30	的	_	DEG	DEG	_	29	assm	_	_
31	生活	_	NN	NN	_	25	dobj	_	_
32	：	_	PU	PU	_	3	punct	_	_
33	他们	_	PN	PN	_	37	nsubj	_	_
34	每	_	DT	DT	_	37	dep	_	_
35	年	_	M	M	_	34	clf	_	_
36	只	_	AD	AD	_	37	advmod	_	_
37	工作	_	VV	VV	_	3	conj	_	_
38	两	_	CD	CD	_	39	nummod	_	_
39	次	_	M	M	_	37	range	_	_
40	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / and, op, x38 / 过-01)
(x3 / 有-03, arg0, x4 / 北极)
(x3 / 有-03, arg1, x5 / 路灯)
(x3 / 有-03, manner, x7 / 仅)
(x38 / 过-01, arg1, x48 / 生活)
(x48 / 生活, mod, x49 / 闲逸)
(x48 / 生活, mod, x50 / 懒散)
(x57 / temporal-quantity, unit, x59 / 年)
(x8 / 有-03, arg0, x9 / 南极)
(x8 / 有-03, manner, x10 / 只)
(x8 / 有-03, manner, x11 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(36,37,List(0),工作,工作-01,false), Span(35,36,List(1),只,只,false), Span(34,35,List(2),年,年,false), Span(33,34,List(3),每,每,false), Span(32,33,List(4),他们,他们,false), Span(30,31,List(5),生活,生活-01,false), Span(28,29,List(6),懒散,懒散,false), Span(26,27,List(7),闲逸,闲逸,false), Span(24,25,List(8),过,过-01,false), Span(22,23,List(9),同行,同行-01,false), Span(20,21,List(10),南极,南极,false), Span(19,20,List(11),他,他,false), Span(17,18,List(12),点灯人,点灯人,false), Span(15,16,List(13),北极,北极,false), Span(14,15,List(14),唯独,唯独,false), Span(13,14,List(15),;,and,false), Span(10,11,List(16),有,有-06,false), Span(9,10,List(17),只,只,false), Span(8,9,List(18),也,也,false), Span(7,8,List(19),南极,南极,false), Span(5,6,List(20),路灯,路灯,false), Span(2,3,List(21),有,有-06,false), Span(1,2,List(22),仅,仅,false), Span(0,1,List(23),北极,北极,false)),Map(2 -> 年, 5 -> 生活-01, 12 -> 点灯人, 15 -> and, 8 -> 过-01, 21 -> 有-06, 18 -> 也, 7 -> 闲逸, 17 -> 只, 1 -> 只, 23 -> 北极, 4 -> 他们, 11 -> 他, 14 -> 唯独, 20 -> 路灯, 6 -> 懒散, 22 -> 仅, 0 -> 工作-01, 9 -> 同行-01, 16 -> 有-06, 19 -> 南极, 3 -> 每, 10 -> 南极, 13 -> 北极),Map(仅 -> 仅, 唯 -> 唯独, 他2 -> 他, 有2 -> 有-06, 生 -> 生活-01, 路 -> 路灯, 也 -> 也, 闲 -> 闲逸, 过 -> 过-01, 北 -> 北极, 工 -> 工作-01, 懒 -> 懒散, 每 -> 每, 同 -> 同行-01, 他 -> 他们, 南2 -> 南极, a -> and, 年 -> 年, 只 -> 只, 只2 -> 只, 点 -> 点灯人, 北2 -> 北极, 有 -> 有-06, 南 -> 南极))),[Ljava.lang.String;@f679798,Annotation([Ljava.lang.String;@1a6cf771,[Ljava.lang.String;@59d77850,[Ljava.lang.String;@53ed09e8),Annotation([Ljava.lang.String;@60859f5a,[Ljava.lang.String;@1daf3b44,[Ledu.cmu.lti.nlp.amr.Dependency;@7fd8c559),Annotation([Ljava.lang.String;@44c13103,[Ljava.lang.String;@8f2098e,[Ljava.lang.String;@6c6366cf),Annotation([Ljava.lang.String;@55a88417,[Ljava.lang.String;@18acfe88,[Ledu.cmu.lti.nlp.amr.Entity;@8a2a6a))
AMR:
(a / and, op, 北 / 北极)
(a / and, op, 有 / 有-06)
(北 / 北极, mod, 唯 / 唯独)
(南 / 南极, mod, 点 / 点灯人)
(南 / 南极, prep-for, 他2 / 他)
(同 / 同行-01, degree, 南 / 南极)
(工 / 工作-01, manner, 只 / 只)
(年 / 年, destination, 工 / 工作-01)
(年 / 年, mod, 每 / 每)
(懒 / 懒散, mod, 闲 / 闲逸)
(有 / 有-06, degree, 南2 / 南极)
(有 / 有-06, manner, 也 / 也)
(有 / 有-06, manner, 只2 / 只)
(有2 / 有-06, degree, 北2 / 北极)
(有2 / 有-06, mod, 仅 / 仅)
(有2 / 有-06, scale, 路 / 路灯)
(每 / 每, mod, 他 / 他们)
(点 / 点灯人, mod, 北 / 北极)
(生 / 生活-01, degree, 懒 / 懒散)
(生 / 生活-01, destination, 他 / 他们)
(路 / 路灯, instrument, 南2 / 南极)
(过 / 过-01, degree, 同 / 同行-01)
(过 / 过-01, degree, 闲 / 闲逸)

Decoded in 186,085 microseconds
Sentence: XVII 。

Spans:
Span 0-1:  XVII => XVII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVII => XVII

Dependencies:
1	XVII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XVII,XVII,false)),Map(0 -> XVII),Map(x -> XVII))),[Ljava.lang.String;@772861aa,Annotation([Ljava.lang.String;@6631cb64,[Ljava.lang.String;@19962194,[Ljava.lang.String;@481e91b6),Annotation([Ljava.lang.String;@7c8f9c2e,[Ljava.lang.String;@140d1230,[Ledu.cmu.lti.nlp.amr.Dependency;@3cbf1ba4),Annotation([Ljava.lang.String;@10bea4,[Ljava.lang.String;@7e2c64,[Ljava.lang.String;@7c1e32c9),Annotation([Ljava.lang.String;@383864d5,[Ljava.lang.String;@3dd818e8,[Ledu.cmu.lti.nlp.amr.Entity;@4cb40e3b))
AMR:


Decoded in 1,536 microseconds
Sentence: 当 人们 想要 说 得 俏皮 些 的 时候 ， 说话 就 可能 会 不 大 实在 。

Spans:
Span 14-15:  不 => 不
Span 6-7:  些 => 些
Span 1-2:  人们 => 人们
Span 13-14:  会 => 会-03
Span 5-6:  俏皮 => 俏皮
Span 12-13:  可能 => 可能-02
Span 15-16:  大 => 大
Span 16-17:  实在 => 实在-01
Span 11-12:  就 => 就-01
Span 0-1:  当 => 当-04
Span 4-5:  得 => 得-06
Span 2-3:  想要 => 想要-02
Span 8-9:  时候 => 时候
Span 3-4:  说 => 说-02
Span 10-11:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人们 => 人们
Oracle Span 13-14:  会 => 会-02
Oracle Span 5-6:  俏皮 => 俏皮
Oracle Span 12-13:  可能 => 可能-01
Oracle Span 15-16:  大 => 大-04
Oracle Span 16-17:  实在 => 实在-01
Oracle Span 11-12:  就 => 就
Oracle Span 2-3:  想要 => 想要-02
Oracle Span 3-4:  说 => 说-01
Oracle Span 10-11:  说话 => 说话-01

Incorrect span: 大 => 大
Extra span: 不 => 不
Incorrect span: 会 => 会-03
Incorrect span: 可能 => 可能-02
Incorrect span: 就 => 就-01
Extra span: 时候 => 时候
Extra span: 些 => 些
Extra span: 得 => 得-06
Incorrect span: 说 => 说-02
Extra span: 当 => 当-04
Missing span: 可能 => 可能-01
Missing span: 说 => 说-01
Missing span: 就 => 就
Missing span: 会 => 会-02
Missing span: 大 => 大-04
Dependencies:
1	当	_	P	P	_	11	prep	_	_
2	人们	_	NN	NN	_	3	nn	_	_
3	想要	_	NN	NN	_	4	nsubj	_	_
4	说	_	VV	VV	_	9	rcmod	_	_
5	得	_	VV	VV	_	4	ccomp	_	_
6	俏皮	_	CD	CD	_	7	nummod	_	_
7	些	_	M	M	_	5	range	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	时候	_	NN	NN	_	1	pobj	_	_
10	,	_	PU	PU	_	11	punct	_	_
11	说话	_	VV	VV	_	0	root	_	_
12	就	_	AD	AD	_	11	dep	_	_
13	可能	_	VV	VV	_	11	dep	_	_
14	会	_	VV	VV	_	16	mmod	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	大	_	VA	VA	_	11	dep	_	_
17	实在	_	AD	AD	_	16	advmod	_	_
18	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x2 / 会-02)
(x0 / 可能-01, manner, x5 / 就)
(x0 / 可能-01, time, x8 / 想要-02)
(x13 / 实在-01, arg0, x17 / 说话-01)
(x13 / 实在-01, degree, x15 / 大-04)
(x19 / 说-01, manner, x20 / 俏皮)
(x2 / 会-02, arg0, x13 / 实在-01)
(x8 / 想要-02, arg0, x18 / 人们)
(x8 / 想要-02, arg1, x19 / 说-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),实在,实在-01,false), Span(15,16,List(1),大,大,false), Span(14,15,List(2),不,不,false), Span(13,14,List(3),会,会-03,false), Span(12,13,List(4),可能,可能-02,false), Span(11,12,List(5),就,就-01,false), Span(10,11,List(6),说话,说话-01,false), Span(8,9,List(7),时候,时候,false), Span(6,7,List(8),些,些,false), Span(5,6,List(9),俏皮,俏皮,false), Span(4,5,List(10),得,得-06,false), Span(3,4,List(11),说,说-02,false), Span(2,3,List(12),想要,想要-02,false), Span(1,2,List(13),人们,人们,false), Span(0,1,List(14),当,当-04,false)),Map(2 -> 不, 5 -> 就-01, 12 -> 想要-02, 8 -> 些, 7 -> 时候, 1 -> 大, 4 -> 可能-02, 11 -> 说-02, 14 -> 当-04, 6 -> 说话-01, 0 -> 实在-01, 9 -> 俏皮, 3 -> 会-03, 10 -> 得-06, 13 -> 人们),Map(就 -> 就-01, 些 -> 些, 俏 -> 俏皮, 得 -> 得-06, 说2 -> 说-02, 大 -> 大, 实 -> 实在-01, 不 -> 不, 会 -> 会-03, 说 -> 说话-01, 人 -> 人们, 时 -> 时候, 想 -> 想要-02, 当 -> 当-04, 可 -> 可能-02))),[Ljava.lang.String;@41b1f51e,Annotation([Ljava.lang.String;@3a543f31,[Ljava.lang.String;@47b67fcb,[Ljava.lang.String;@2b9f74d0),Annotation([Ljava.lang.String;@65c86db8,[Ljava.lang.String;@7efe7b87,[Ledu.cmu.lti.nlp.amr.Dependency;@ac20bb4),Annotation([Ljava.lang.String;@5a2bd7c8,[Ljava.lang.String;@7ca8d498,[Ljava.lang.String;@7187bac9),Annotation([Ljava.lang.String;@6b8280e6,[Ljava.lang.String;@6f139fc9,[Ledu.cmu.lti.nlp.amr.Entity;@55259aa7))
AMR:
(些 / 些, ARG3, 俏 / 俏皮)
(人 / 人们, manner, 当 / 当-04)
(会 / 会-03, ARG0, 实 / 实在-01)
(俏 / 俏皮, ARG3, 得 / 得-06)
(可 / 可能-02, manner, 就 / 就-01)
(大 / 大, ARG6, 不 / 不)
(实 / 实在-01, ARG6, 说 / 说话-01)
(实 / 实在-01, degree, 大 / 大)
(就 / 就-01, ARG4, 说 / 说话-01)
(想 / 想要-02, ARG2, 得 / 得-06)
(想 / 想要-02, location, 人 / 人们)
(说 / 说话-01, ARG6, 时 / 时候)
(说2 / 说-02, prep-along-with, 得 / 得-06)
(说2 / 说-02, value, 时 / 时候)

Decoded in 67,510 microseconds
Sentence: 在 给 你们 讲 点灯人 的 时候 ， 我 就 不 那么 忠实 ，

Spans:
Span 10-11:  不 => 不
Span 2-3:  你们 => 你们
Span 0-1:  在 => 在-01
Span 9-10:  就 => 就-01
Span 12-13:  忠实 => 忠实-01
Span 8-9:  我 => 我
Span 6-7:  时候 => 时候
Span 4-5:  点灯人 => 点灯人
Span 1-2:  给 => 给-02
Span 3-4:  讲 => 讲-02
Span 11-12:  那么 => 那么

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 9-10:  就 => 就
Oracle Span 12-13:  忠实 => 忠实-01
Oracle Span 8-9:  我 => 我
Oracle Span 3-4:  讲 => 讲-01
Oracle Span 11-12:  那么 => 那么

Extra span: 不 => 不
Incorrect span: 就 => 就-01
Extra span: 时候 => 时候
Extra span: 点灯人 => 点灯人
Incorrect span: 讲 => 讲-02
Extra span: 给 => 给-02
Extra span: 在 => 在-01
Missing span: 讲 => 讲-01
Missing span: 就 => 就
Dependencies:
1	在	_	P	P	_	13	prep	_	_
2	给	_	P	P	_	4	prep	_	_
3	你们	_	PN	PN	_	2	pobj	_	_
4	讲	_	VV	VV	_	7	rcmod	_	_
5	点灯人	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	时候	_	NN	NN	_	1	pobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	我	_	PN	PN	_	13	dep	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	那么	_	AD	AD	_	13	advmod	_	_
13	忠实	_	VA	VA	_	0	root	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 忠实-01, arg0, x5 / 我)
(x0 / 忠实-01, degree, x2 / 那么)
(x0 / 忠实-01, manner, x4 / 就)
(x0 / 忠实-01, time, x10 / 讲-01)
(x10 / 讲-01, arg2, x13 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),忠实,忠实-01,false), Span(11,12,List(1),那么,那么,false), Span(10,11,List(2),不,不,false), Span(9,10,List(3),就,就-01,false), Span(8,9,List(4),我,我,false), Span(6,7,List(5),时候,时候,false), Span(4,5,List(6),点灯人,点灯人,false), Span(3,4,List(7),讲,讲-02,false), Span(2,3,List(8),你们,你们,false), Span(1,2,List(9),给,给-02,false), Span(0,1,List(10),在,在-01,false)),Map(2 -> 不, 5 -> 时候, 8 -> 你们, 7 -> 讲-02, 1 -> 那么, 4 -> 我, 6 -> 点灯人, 9 -> 给-02, 0 -> 忠实-01, 10 -> 在-01, 3 -> 就-01),Map(就 -> 就-01, 在 -> 在-01, 我 -> 我, 你 -> 你们, 给 -> 给-02, 不 -> 不, 点 -> 点灯人, 讲 -> 讲-02, 那 -> 那么, 时 -> 时候, 忠 -> 忠实-01))),[Ljava.lang.String;@19382338,Annotation([Ljava.lang.String;@66420549,[Ljava.lang.String;@15dc339f,[Ljava.lang.String;@6cd56321),Annotation([Ljava.lang.String;@34acbc60,[Ljava.lang.String;@42b28ff1,[Ledu.cmu.lti.nlp.amr.Dependency;@36061cf3),Annotation([Ljava.lang.String;@718dbd79,[Ljava.lang.String;@20134094,[Ljava.lang.String;@76889e60),Annotation([Ljava.lang.String;@706fe5c6,[Ljava.lang.String;@6c15e8c7,[Ledu.cmu.lti.nlp.amr.Entity;@56380231))
AMR:
(在 / 在-01, ARG0, 讲 / 讲-02)
(忠 / 忠实-01, ARG0, 我 / 我)
(忠 / 忠实-01, degree, 那 / 那么)
(忠 / 忠实-01, manner, 不 / 不)
(忠 / 忠实-01, manner, 就 / 就-01)
(忠 / 忠实-01, time, 讲 / 讲-02)
(时 / 时候, mod, 点 / 点灯人)
(给 / 给-02, ARG3, 点 / 点灯人)
(给 / 给-02, ARG5, 你 / 你们)
(给 / 给-02, degree, 讲 / 讲-02)

Decoded in 46,028 microseconds
Sentence: 很 可能 给 不 了解 我们 这个 星球 的 人们 造成 一 个 错误 的 概念 。

Spans:
Span 3-4:  不 => 不
Span 4-5:  了解 => 了解-02
Span 9-10:  人们 => 人们
Span 1-2:  可能 => 可能-02
Span 0-1:  很 => 很
Span 5-6:  我们 => 我们
Span 7-8:  星球 => 星球
Span 15-16:  概念 => 概念
Span 2-3:  给 => 给-02
Span 6-7:  这个 => 这个
Span 10-11:  造成 => 造成-01
Span 13-14:  错误 => 错误-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  了解 => 了解-02
Oracle Span 9-10:  人们 => 人们
Oracle Span 1-2:  可能 => 可能-01
Oracle Span 0-1:  很 => 很
Oracle Span 5-6:  我们 => 我们
Oracle Span 7-8:  星球 => 星球
Oracle Span 15-16:  概念 => 概念
Oracle Span 2-3:  给 => 给-02
Oracle Span 6-7:  这个 => 这个
Oracle Span 10-11:  造成 => 造成-01
Oracle Span 13-14:  错误 => 错误-01

Extra span: 不 => 不
Incorrect span: 可能 => 可能-02
Missing span: 可能 => 可能-01
Dependencies:
1	很	_	AD	AD	_	11	advmod	_	_
2	可能	_	VV	VV	_	11	mmod	_	_
3	给	_	P	P	_	11	prep	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	了解	_	VV	VV	_	10	rcmod	_	_
6	我们	_	PN	PN	_	8	nn	_	_
7	这个	_	NN	NN	_	8	nn	_	_
8	星球	_	NN	NN	_	5	dobj	_	_
9	的	_	DEC	DEC	_	5	cpm	_	_
10	人们	_	NN	NN	_	3	pobj	_	_
11	造成	_	VV	VV	_	0	root	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	16	clf	_	_
14	错误	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	概念	_	NN	NN	_	11	dobj	_	_
17	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x3 / 给-02)
(x0 / 可能-01, degree, x2 / 很)
(x11 / 造成-01, arg1, x12 / 概念)
(x12 / 概念, mod, x13 / 错误-01)
(x3 / 给-02, arg1, x4 / 人们)
(x3 / 给-02, arg2, x11 / 造成-01)
(x5 / 了解-02, arg0, x4 / 人们)
(x5 / 了解-02, arg1, x6 / 星球)
(x6 / 星球, mod, x7 / 这个)
(x6 / 星球, poss, x8 / 我们)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),概念,概念,false), Span(13,14,List(1),错误,错误-01,false), Span(10,11,List(2),造成,造成-01,false), Span(9,10,List(3),人们,人们,false), Span(7,8,List(4),星球,星球,false), Span(6,7,List(5),这个,这个,false), Span(5,6,List(6),我们,我们,false), Span(4,5,List(7),了解,了解-02,false), Span(3,4,List(8),不,不,false), Span(2,3,List(9),给,给-02,false), Span(1,2,List(10),可能,可能-02,false), Span(0,1,List(11),很,很,false)),Map(2 -> 造成-01, 5 -> 这个, 8 -> 不, 7 -> 了解-02, 1 -> 错误-01, 11 -> 很, 4 -> 星球, 6 -> 我们, 9 -> 给-02, 0 -> 概念, 10 -> 可能-02, 3 -> 人们),Map(了 -> 了解-02, 星 -> 星球, 我 -> 我们, 这 -> 这个, 概 -> 概念, 很 -> 很, 给 -> 给-02, 不 -> 不, 造 -> 造成-01, 人 -> 人们, 错 -> 错误-01, 可 -> 可能-02))),[Ljava.lang.String;@64f1fd08,Annotation([Ljava.lang.String;@6b3f6585,[Ljava.lang.String;@282ffbf5,[Ljava.lang.String;@3e104d4b),Annotation([Ljava.lang.String;@55e2fe3c,[Ljava.lang.String;@45e1aa48,[Ledu.cmu.lti.nlp.amr.Dependency;@12c60152),Annotation([Ljava.lang.String;@2e807c54,[Ljava.lang.String;@6cd164a6,[Ljava.lang.String;@242a209e),Annotation([Ljava.lang.String;@64469d8,[Ljava.lang.String;@2b8bd798,[Ledu.cmu.lti.nlp.amr.Entity;@4c18621b))
AMR:
(了 / 了解-02, manner, 不 / 不)
(了 / 了解-02, snt3, 星 / 星球)
(了 / 了解-02, value, 人 / 人们)
(可 / 可能-02, ARG6, 给 / 给-02)
(可 / 可能-02, manner, 很 / 很)
(星 / 星球, mod, 这 / 这个)
(星 / 星球, poss, 我 / 我们)
(概 / 概念, mod, 错 / 错误-01)
(给 / 给-02, degree, 造 / 造成-01)
(给 / 给-02, domain, 人 / 人们)
(造 / 造成-01, subset, 概 / 概念)

Decoded in 44,956 microseconds
Sentence: 在 地球 上 ， 人们 所 占 的 位置 非常 小 。

Spans:
Span 4-5:  人们 => 人们
Span 8-9:  位置 => 位置
Span 6-7:  占 => 占-02
Span 0-1:  在 => 在-01
Span 1-2:  地球 => 地球
Span 10-11:  小 => 小
Span 9-10:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人们 => 人们
Oracle Span 8-9:  位置 => 位置
Oracle Span 6-7:  占 => 占-02
Oracle Span 1-2:  地球 => 地球
Oracle Span 10-11:  小 => 小-01
Oracle Span 9-10:  非常 => 非常

Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Dependencies:
1	在	_	P	P	_	11	prep	_	_
2	地球	_	NN	NN	_	3	lobj	_	_
3	上	_	LC	LC	_	1	plmod	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	人们	_	NN	NN	_	7	nsubj	_	_
6	所	_	MSP	MSP	_	7	prtmod	_	_
7	占	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	位置	_	NN	NN	_	11	nsubj	_	_
10	非常	_	AD	AD	_	11	advmod	_	_
11	小	_	VA	VA	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 占-02, arg0, x2 / 人们)
(x0 / 占-02, arg1, x3 / 位置)
(x0 / 占-02, location, x7 / 地球)
(x3 / 位置, mod, x5 / 小-01)
(x5 / 小-01, degree, x6 / 非常)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),小,小,false), Span(9,10,List(1),非常,非常,false), Span(8,9,List(2),位置,位置,false), Span(6,7,List(3),占,占-02,false), Span(4,5,List(4),人们,人们,false), Span(1,2,List(5),地球,地球,false), Span(0,1,List(6),在,在-01,false)),Map(2 -> 位置, 5 -> 地球, 1 -> 非常, 4 -> 人们, 6 -> 在-01, 0 -> 小, 3 -> 占-02),Map(在 -> 在-01, 地 -> 地球, 小 -> 小, 非 -> 非常, 位 -> 位置, 占 -> 占-02, 人 -> 人们))),[Ljava.lang.String;@39c385d6,Annotation([Ljava.lang.String;@1cec219f,[Ljava.lang.String;@692e028d,[Ljava.lang.String;@6629ad09),Annotation([Ljava.lang.String;@43e1692f,[Ljava.lang.String;@3e7c4815,[Ledu.cmu.lti.nlp.amr.Dependency;@27df0f3d),Annotation([Ljava.lang.String;@c35af2a,[Ljava.lang.String;@44550792,[Ljava.lang.String;@1835d3ed),Annotation([Ljava.lang.String;@474c9131,[Ljava.lang.String;@66213a0d,[Ledu.cmu.lti.nlp.amr.Entity;@aa4d8cc))
AMR:
(位 / 位置, mod, 小 / 小)
(位 / 位置, prep-on-behalf, 在 / 在-01)
(占 / 占-02, op, 人 / 人们)
(占 / 占-02, op, 位 / 位置)
(地 / 地球, manner, 在 / 在-01)
(小 / 小, degree, 非 / 非常)

Decoded in 17,434 microseconds
Sentence: 如果 住 在 地球 上 的 二十亿 居民 全 站 着 ， 并且 象 开 大会 一样 靠 得 紧 些 ， 那么 就 可以 从容 地 站 在 一 个 二十 海里 见方 的 广场 上 。

Spans:
Span 16-17:  一样 => 一样
Span 20-21:  些 => 些
Span 25-26:  从容 => 从容-01
Span 1-2:  住 => 住-01
Span 8-9:  全 => 全
Span 24-25:  可以 => 可以-02
Span 28-29:  在 => 在-01
Span 2-3:  在 => 在-01
Span 26-27:  地 => 地
Span 3-4:  地球 => 地球
Span 23-24:  就 => 就-01
Span 7-8:  居民 => 居民
Span 35-36:  广场 => 广场
Span 14-15:  开 => 开-03
Span 18-19:  得 => 得-06
Span 32-33:  海里 => (distance-quantity :unit 海里)
Span 27-28:  站 => 站-01
Span 9-10:  站 => 站-01
Span 19-20:  紧 => 紧-01
Span 22-23:  那么 => 那么
Span 17-18:  靠 => 靠-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 25-26:  从容 => 从容-01
Oracle Span 1-2:  住 => 住-01
Oracle Span 8-9:  全 => 全
Oracle Span 24-25:  可以 => 可以-01
Oracle Span 3-4:  地球 => 地球
Oracle Span 7-8:  居民 => 居民
Oracle Span 35-36:  广场 => 广场
Oracle Span 14-15:  开 => 开-02
Oracle Span 32-33:  海里 => (distance-quantity :unit 海里)
Oracle Span 9-10:  站 => 站-01
Oracle Span 27-28:  站 => 站-01
Oracle Span 19-20:  紧 => 紧-01
Oracle Span 17-18:  靠 => 靠-03

Extra span: 在 => 在-01
Extra span: 地 => 地
Incorrect span: 可以 => 可以-02
Extra span: 就 => 就-01
Extra span: 那么 => 那么
Extra span: 些 => 些
Extra span: 得 => 得-06
Extra span: 一样 => 一样
Incorrect span: 开 => 开-03
Extra span: 在 => 在-01
Missing span: 开 => 开-02
Missing span: 可以 => 可以-01
Dependencies:
1	如果	_	CS	CS	_	2	advmod	_	_
2	住	_	VV	VV	_	8	rcmod	_	_
3	在	_	P	P	_	2	prep	_	_
4	地球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	3	plmod	_	_
6	的	_	DEC	DEC	_	2	cpm	_	_
7	二十亿	_	CD	CD	_	8	nummod	_	_
8	居民	_	NN	NN	_	10	nsubj	_	_
9	全	_	AD	AD	_	10	advmod	_	_
10	站	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	并且	_	CC	CC	_	10	cc	_	_
14	象	_	P	P	_	17	prep	_	_
15	开	_	VV	VV	_	16	vmod	_	_
16	大会	_	NN	NN	_	14	pobj	_	_
17	一样	_	VA	VA	_	10	dep	_	_
18	靠	_	P	P	_	28	prep	_	_
19	得	_	VV	VV	_	18	pccomp	_	_
20	紧	_	JJ	JJ	_	21	amod	_	_
21	些	_	CD	CD	_	19	range	_	_
22	,	_	PU	PU	_	28	punct	_	_
23	那么	_	AD	AD	_	28	advmod	_	_
24	就	_	AD	AD	_	28	advmod	_	_
25	可以	_	VV	VV	_	28	mmod	_	_
26	从容	_	VA	VA	_	28	dvpmod	_	_
27	地	_	DEV	DEV	_	26	dvpm	_	_
28	站	_	VV	VV	_	10	conj	_	_
29	在	_	P	P	_	28	prep	_	_
30	一	_	CD	CD	_	31	nummod	_	_
31	个	_	M	M	_	34	clf	_	_
32	二十	_	CD	CD	_	33	nummod	_	_
33	海里	_	NN	NN	_	34	nn	_	_
34	见方	_	NN	NN	_	36	assmod	_	_
35	的	_	DEG	DEG	_	34	assm	_	_
36	广场	_	NN	NN	_	37	lobj	_	_
37	上	_	LC	LC	_	29	plmod	_	_
38	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x62 / 站-01, arg0, x63 / 居民)
(x62 / 站-01, manner, x67 / 全)
(x65 / 住-01, arg0, x63 / 居民)
(x65 / 住-01, arg1, x66 / 地球)
(x74 / 靠-03, degree, x75 / 紧-01)
(x76 / 可以-01, arg0, x77 / 站-01)
(x77 / 站-01, arg1, x80 / 广场)
(x77 / 站-01, manner, x78 / 从容-01)
(x83 / distance-quantity, unit, x85 / 海里)

Input(Some(Graph(null,ArrayBuffer(Span(35,36,List(0),广场,广场,false), Span(32,33,List(2, 1),海里,(distance-quantity :unit 海里),false), Span(28,29,List(3),在,在-01,false), Span(27,28,List(4),站,站-01,false), Span(26,27,List(5),地,地,false), Span(25,26,List(6),从容,从容-01,false), Span(24,25,List(7),可以,可以-02,false), Span(23,24,List(8),就,就-01,false), Span(22,23,List(9),那么,那么,false), Span(20,21,List(10),些,些,false), Span(19,20,List(11),紧,紧-01,false), Span(18,19,List(12),得,得-06,false), Span(17,18,List(13),靠,靠-03,false), Span(16,17,List(14),一样,一样,false), Span(14,15,List(15),开,开-03,false), Span(9,10,List(16),站,站-01,false), Span(8,9,List(17),全,全,false), Span(7,8,List(18),居民,居民,false), Span(3,4,List(19),地球,地球,false), Span(2,3,List(20),在,在-01,false), Span(1,2,List(21),住,住-01,false)),Map(2 -> 海里, 5 -> 地, 12 -> 得-06, 15 -> 开-03, 8 -> 就-01, 21 -> 住-01, 18 -> 居民, 7 -> 可以-02, 17 -> 全, 1 -> distance-quantity, 4 -> 站-01, 11 -> 紧-01, 14 -> 一样, 20 -> 在-01, 6 -> 从容-01, 0 -> 广场, 9 -> 那么, 16 -> 站-01, 19 -> 地球, 3 -> 在-01, 10 -> 些, 13 -> 靠-03),Map(在2 -> 在-01, 靠 -> 靠-03, 站 -> 站-01, 从 -> 从容-01, 就 -> 就-01, 地2 -> 地球, 在 -> 在-01, 些 -> 些, 得 -> 得-06, 全 -> 全, d -> distance-quantity, 海 -> 海里, 居 -> 居民, 地 -> 地, 紧 -> 紧-01, 开 -> 开-03, 那 -> 那么, 广 -> 广场, 一 -> 一样, 站2 -> 站-01, 可 -> 可以-02, 住 -> 住-01))),[Ljava.lang.String;@3cb8c8ce,Annotation([Ljava.lang.String;@1fde0371,[Ljava.lang.String;@70c0a3d5,[Ljava.lang.String;@5c8e67b9),Annotation([Ljava.lang.String;@260a3a5e,[Ljava.lang.String;@49206065,[Ledu.cmu.lti.nlp.amr.Dependency;@3c0bbc9f),Annotation([Ljava.lang.String;@1317b708,[Ljava.lang.String;@6438a7fe,[Ljava.lang.String;@2e51d054),Annotation([Ljava.lang.String;@4f5f6e45,[Ljava.lang.String;@615e3f51,[Ledu.cmu.lti.nlp.amr.Entity;@407873d3))
AMR:
(d / distance-quantity, location, 广 / 广场)
(d / distance-quantity, unit, 海 / 海里)
(一 / 一样, timezone, 开 / 开-03)
(从 / 从容-01, ARG1, 地 / 地)
(住 / 住-01, value, 居 / 居民)
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, manner, 那 / 那么)
(可 / 可以-02, prep-out, 站 / 站-01)
(在2 / 在-01, ARG5, 住 / 住-01)
(地2 / 地球, manner, 在2 / 在-01)
(广 / 广场, manner, 在 / 在-01)
(得 / 得-06, ARG0, 紧 / 紧-01)
(得 / 得-06, ARG1, 靠 / 靠-03)
(站 / 站-01, ARG5, 在 / 在-01)
(站 / 站-01, manner, 从 / 从容-01)
(站2 / 站-01, manner, 一 / 一样)
(站2 / 站-01, manner, 全 / 全)
(站2 / 站-01, mode, 居 / 居民)
(紧 / 紧-01, ARG1, 些 / 些)
(靠 / 靠-03, ARG4, 一 / 一样)
(靠 / 靠-03, manner, 就 / 就-01)

Decoded in 168,674 microseconds
Sentence: 也 就是 说 可以 把 整个 人类 集中 在 太平洋 中 一 个 最 小 的 岛屿 上 。

NER Entity: (country :name (name :op "也"))
NER Entity: (country :name (name :op "也"))
Spans:
Span 0-1:  也 => 也
Span 6-7:  人类 => 人类
Span 3-4:  可以 => 可以-02
Span 8-9:  在 => 在-01
Span 9-10:  太平洋 => 太平洋
Span 14-15:  小 => 小
Span 16-17:  岛屿 => 岛屿
Span 5-6:  整个 => 整个
Span 13-14:  最 => 最
Span 2-3:  说 => 说-02
Span 7-8:  集中 => 集中-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人类 => 人类
Oracle Span 3-4:  可以 => 可以-01
Oracle Span 9-10:  太平洋 => 太平洋
Oracle Span 14-15:  小 => 小-01
Oracle Span 16-17:  岛屿 => 岛屿
Oracle Span 5-6:  整个 => 整个
Oracle Span 13-14:  最 => 最
Oracle Span 7-8:  集中 => 集中-02

Incorrect span: 小 => 小
Extra span: 在 => 在-01
Incorrect span: 可以 => 可以-02
Extra span: 说 => 说-02
Extra span: 也 => 也
Missing span: 可以 => 可以-01
Missing span: 小 => 小-01
Dependencies:
1	也	_	AD	AD	_	3	advmod	_	_
2	就是	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	可以	_	VV	VV	_	3	ccomp	_	_
5	把	_	BA	BA	_	8	ba	_	_
6	整个	_	JJ	JJ	_	7	amod	_	_
7	人类	_	NN	NN	_	8	nsubj	_	_
8	集中	_	VV	VV	_	3	dep	_	_
9	在	_	P	P	_	8	prep	_	_
10	太平洋	_	NR	NR	_	11	nn	_	_
11	中	_	NR	NR	_	17	nn	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	17	clf	_	_
14	最	_	AD	AD	_	15	advmod	_	_
15	小	_	VA	VA	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	岛屿	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	9	plmod	_	_
19	。	_	PU	PU	_	3	punct	_	_
20	小	_	VA	VA	_	11	rcmod	_	_

Oracle:
(x2 / 可以-01, arg0, x3 / 集中-02)
(x3 / 集中-02, arg0, x4 / 人类)
(x3 / 集中-02, arg1, x6 / 岛屿)
(x4 / 人类, mod, x5 / 整个)
(x6 / 岛屿, location, x11 / 太平洋)
(x6 / 岛屿, mod, x9 / 小-01)
(x9 / 小-01, degree, x10 / 最)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),岛屿,岛屿,false), Span(14,15,List(1),小,小,false), Span(13,14,List(2),最,最,false), Span(9,10,List(3),太平洋,太平洋,false), Span(8,9,List(4),在,在-01,false), Span(7,8,List(5),集中,集中-02,false), Span(6,7,List(6),人类,人类,false), Span(5,6,List(7),整个,整个,false), Span(3,4,List(8),可以,可以-02,false), Span(2,3,List(9),说,说-02,false), Span(0,1,List(10),也,也,false)),Map(2 -> 最, 5 -> 集中-02, 8 -> 可以-02, 7 -> 整个, 1 -> 小, 4 -> 在-01, 6 -> 人类, 9 -> 说-02, 0 -> 岛屿, 10 -> 也, 3 -> 太平洋),Map(在 -> 在-01, 也 -> 也, 整 -> 整个, 集 -> 集中-02, 太 -> 太平洋, 小 -> 小, 说 -> 说-02, 岛 -> 岛屿, 人 -> 人类, 可 -> 可以-02, 最 -> 最))),[Ljava.lang.String;@608bc8f8,Annotation([Ljava.lang.String;@5412bfea,[Ljava.lang.String;@44a6a68e,[Ljava.lang.String;@4743a322),Annotation([Ljava.lang.String;@79316f3a,[Ljava.lang.String;@381d7219,[Ledu.cmu.lti.nlp.amr.Dependency;@49fe3142),Annotation([Ljava.lang.String;@13fed1ec,[Ljava.lang.String;@61c42416,[Ljava.lang.String;@329a1f8d),Annotation([Ljava.lang.String;@a565cbd,[Ljava.lang.String;@6fc29daa,[Ledu.cmu.lti.nlp.amr.Entity;@2f66f0d0))
AMR:
(人 / 人类, mod, 整 / 整个)
(在 / 在-01, location, 太 / 太平洋)
(小 / 小, degree, 最 / 最)
(岛 / 岛屿, location, 太 / 太平洋)
(岛 / 岛屿, mod, 小 / 小)
(整 / 整个, purpose, 可 / 可以-02)
(说 / 说-02, ARG5, 可 / 可以-02)
(说 / 说-02, manner, 也 / 也)
(集 / 集中-02, ARG5, 在 / 在-01)
(集 / 集中-02, time, 人 / 人类)

Decoded in 35,085 microseconds
Sentence: 当然 ， 大人们 是 不 会 相信 你们 的 。

Spans:
Span 4-5:  不 => 不
Span 5-6:  会 => 会-03
Span 7-8:  你们 => 你们
Span 2-3:  大人们 => 大人们
Span 0-1:  当然 => 当然
Span 3-4:  是 => 是-04
Span 6-7:  相信 => 相信-01

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 7-8:  你们 => 你们
Oracle Span 2-3:  大人们 => 大人们
Oracle Span 0-1:  当然 => 当然
Oracle Span 6-7:  相信 => 相信-01

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 是 => 是-04
Missing span: 会 => 会-02
Dependencies:
1	当然	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	大人们	_	NN	NN	_	4	top	_	_
4	是	_	VC	VC	_	0	root	_	_
5	不	_	AD	AD	_	7	neg	_	_
6	会	_	VV	VV	_	7	mmod	_	_
7	相信	_	VV	VV	_	4	attr	_	_
8	你们	_	PN	PN	_	7	dobj	_	_
9	的	_	DEC	DEC	_	7	cpm	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x3 / 相信-01)
(x0 / 会-02, manner, x6 / 当然)
(x3 / 相信-01, arg0, x4 / 大人们)
(x3 / 相信-01, arg1, x5 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),你们,你们,false), Span(6,7,List(1),相信,相信-01,false), Span(5,6,List(2),会,会-03,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),是,是-04,false), Span(2,3,List(5),大人们,大人们,false), Span(0,1,List(6),当然,当然,false)),Map(2 -> 会-03, 5 -> 大人们, 1 -> 相信-01, 4 -> 是-04, 6 -> 当然, 0 -> 你们, 3 -> 不),Map(相 -> 相信-01, 大 -> 大人们, 你 -> 你们, 不 -> 不, 会 -> 会-03, 是 -> 是-04, 当 -> 当然))),[Ljava.lang.String;@4d62f4c6,Annotation([Ljava.lang.String;@7569ea63,[Ljava.lang.String;@ebd06a9,[Ljava.lang.String;@16c587de),Annotation([Ljava.lang.String;@4cdb8504,[Ljava.lang.String;@76db540e,[Ledu.cmu.lti.nlp.amr.Dependency;@10358c32),Annotation([Ljava.lang.String;@2af4129d,[Ljava.lang.String;@3a175162,[Ljava.lang.String;@1640190a),Annotation([Ljava.lang.String;@2a2843ec,[Ljava.lang.String;@2042ccce,[Ledu.cmu.lti.nlp.amr.Entity;@20de05e5))
AMR:
(不 / 不, ARG3, 是 / 是-04)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 当 / 当然)
(大 / 大人们, ARG3, 是 / 是-04)
(相 / 相信-01, ARG4, 大 / 大人们)
(相 / 相信-01, purpose, 你 / 你们)

Decoded in 49,820 microseconds
Sentence: 他们 自以为 要 占 很 大 地方 ，

Spans:
Span 0-1:  他们 => 他们
Span 3-4:  占 => 占-02
Span 6-7:  地方 => 地方
Span 5-6:  大 => 大
Span 4-5:  很 => 很
Span 2-3:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 3-4:  占 => 占-02
Oracle Span 6-7:  地方 => 地方
Oracle Span 5-6:  大 => 大-01
Oracle Span 4-5:  很 => 很
Oracle Span 2-3:  要 => 要-03

Incorrect span: 大 => 大
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 大 => 大-01
Dependencies:
1	他们	_	PN	PN	_	2	nsubj	_	_
2	自以为	_	VV	VV	_	0	root	_	_
3	要	_	VV	VV	_	2	ccomp	_	_
4	占	_	VV	VV	_	2	dep	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	大	_	JJ	JJ	_	7	amod	_	_
7	地方	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 要-03, arg0, x6 / 占-02)
(x6 / 占-02, arg1, x7 / 地方)
(x7 / 地方, mod, x8 / 大-01)
(x8 / 大-01, degree, x9 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),地方,地方,false), Span(5,6,List(1),大,大,false), Span(4,5,List(2),很,很,false), Span(3,4,List(3),占,占-02,false), Span(2,3,List(4),要,要-02,false), Span(0,1,List(5),他们,他们,false)),Map(2 -> 很, 5 -> 他们, 1 -> 大, 4 -> 要-02, 0 -> 地方, 3 -> 占-02),Map(要 -> 要-02, 很 -> 很, 大 -> 大, 他 -> 他们, 地 -> 地方, 占 -> 占-02))),[Ljava.lang.String;@36c0d0bd,Annotation([Ljava.lang.String;@5e1fc2aa,[Ljava.lang.String;@688d411b,[Ljava.lang.String;@382c90c2),Annotation([Ljava.lang.String;@859ea42,[Ljava.lang.String;@28737371,[Ledu.cmu.lti.nlp.amr.Dependency;@2af46afd),Annotation([Ljava.lang.String;@760245e1,[Ljava.lang.String;@31ceba99,[Ljava.lang.String;@295bf2a),Annotation([Ljava.lang.String;@bbf9e07,[Ljava.lang.String;@6ff6efdc,[Ledu.cmu.lti.nlp.amr.Entity;@2b289ac9))
AMR:
(他 / 他们, ARG5, 要 / 要-02)
(占 / 占-02, snt3, 地 / 地方)
(地 / 地方, mod, 大 / 大)
(大 / 大, degree, 很 / 很)
(要 / 要-02, ARG3, 占 / 占-02)

Decoded in 11,444 microseconds
Sentence: 他们 把 自己 看 得 象 猴面包树 那样 大 得 了不起 。

Spans:
Span 10-11:  了不起 => 了不起-01
Span 0-1:  他们 => 他们
Span 8-9:  大 => 大
Span 9-10:  得 => 得-06
Span 4-5:  得 => 得-06
Span 6-7:  猴面包树 => 猴面包树
Span 3-4:  看 => 看-10
Span 2-3:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 10-11:  了不起 => 了不起-01
Oracle Span 0-1:  他们 => 他们
Oracle Span 8-9:  大 => 大-01
Oracle Span 6-7:  猴面包树 => 猴面包树
Oracle Span 3-4:  看 => 看-02

Extra span: 得 => 得-06
Incorrect span: 大 => 大
Extra span: 得 => 得-06
Incorrect span: 看 => 看-10
Extra span: 自己 => 自己
Missing span: 看 => 看-02
Missing span: 大 => 大-01
Dependencies:
1	他们	_	PN	PN	_	11	nsubj	_	_
2	把	_	BA	BA	_	11	ba	_	_
3	自己	_	PN	PN	_	11	nsubj	_	_
4	看	_	VV	VV	_	11	dep	_	_
5	得	_	DER	DER	_	11	dep	_	_
6	象	_	P	P	_	8	dep	_	_
7	猴面包树	_	NN	NN	_	6	pobj	_	_
8	那样	_	AD	AD	_	11	advmod	_	_
9	大	_	VA	VA	_	11	dep	_	_
10	得	_	DER	DER	_	11	dep	_	_
11	了不起	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 看-02, arg0, x2 / 他们)
(x0 / 看-02, arg2, x16 / 了不起-01)
(x16 / 了不起-01, cause, x18 / 大-01)
(x18 / 大-01, compared-to, x21 / 猴面包树)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),了不起,了不起-01,false), Span(9,10,List(1),得,得-06,false), Span(8,9,List(2),大,大,false), Span(6,7,List(3),猴面包树,猴面包树,false), Span(4,5,List(4),得,得-06,false), Span(3,4,List(5),看,看-10,false), Span(2,3,List(6),自己,自己,false), Span(0,1,List(7),他们,他们,false)),Map(2 -> 大, 5 -> 看-10, 7 -> 他们, 1 -> 得-06, 4 -> 得-06, 6 -> 自己, 0 -> 了不起-01, 3 -> 猴面包树),Map(了 -> 了不起-01, 自 -> 自己, 得 -> 得-06, 大 -> 大, 得2 -> 得-06, 猴 -> 猴面包树, 他 -> 他们, 看 -> 看-10))),[Ljava.lang.String;@4eb1c69,Annotation([Ljava.lang.String;@73d3e555,[Ljava.lang.String;@2b037cfc,[Ljava.lang.String;@44924587),Annotation([Ljava.lang.String;@18460128,[Ljava.lang.String;@74d3b638,[Ledu.cmu.lti.nlp.amr.Dependency;@4487c0c2),Annotation([Ljava.lang.String;@126f1ba8,[Ljava.lang.String;@3a08078c,[Ljava.lang.String;@53830483),Annotation([Ljava.lang.String;@29f85fe1,[Ljava.lang.String;@43a0a32d,[Ledu.cmu.lti.nlp.amr.Entity;@396ef8b2))
AMR:
(了 / 了不起-01, ARG1, 得 / 得-06)
(大 / 大, compared-to, 猴 / 猴面包树)
(得 / 得-06, ARG1, 大 / 大)
(得2 / 得-06, ARG4, 大 / 大)
(看 / 看-10, ARG1, 得2 / 得-06)
(看 / 看-10, ARG2, 他 / 他们)
(看 / 看-10, ARG6, 自 / 自己)

Decoded in 21,544 microseconds
Sentence: 你们 可以 建议 他们 计算 一下 。

Spans:
Span 3-4:  他们 => 他们
Span 0-1:  你们 => 你们
Span 1-2:  可以 => 可以-02
Span 2-3:  建议 => 建议-01
Span 4-5:  计算 => 计算-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 2-3:  建议 => 建议-01
Oracle Span 4-5:  计算 => 计算-01

Dependencies:
1	你们	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	mmod	_	_
3	建议	_	VV	VV	_	0	root	_	_
4	他们	_	PN	PN	_	3	dobj	_	_
5	计算	_	VV	VV	_	3	dep	_	_
6	一下	_	AD	AD	_	5	advmod	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 建议-01)
(x2 / 建议-01, arg0, x3 / 你们)
(x2 / 建议-01, arg1, x4 / 计算-01)
(x2 / 建议-01, arg2, x5 / 他们)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),计算,计算-01,false), Span(3,4,List(1),他们,他们,false), Span(2,3,List(2),建议,建议-01,false), Span(1,2,List(3),可以,可以-02,false), Span(0,1,List(4),你们,你们,false)),Map(2 -> 建议-01, 1 -> 他们, 4 -> 你们, 0 -> 计算-01, 3 -> 可以-02),Map(你 -> 你们, 计 -> 计算-01, 他 -> 他们, 建 -> 建议-01, 可 -> 可以-02))),[Ljava.lang.String;@72825400,Annotation([Ljava.lang.String;@19ee1ae6,[Ljava.lang.String;@5f117b3d,[Ljava.lang.String;@1174a305),Annotation([Ljava.lang.String;@71b6d77f,[Ljava.lang.String;@1866da85,[Ledu.cmu.lti.nlp.amr.Dependency;@4cfa8227),Annotation([Ljava.lang.String;@78226c36,[Ljava.lang.String;@3f685162,[Ljava.lang.String;@11f406f8),Annotation([Ljava.lang.String;@987455b,[Ljava.lang.String;@622fdb81,[Ledu.cmu.lti.nlp.amr.Entity;@1f3165e7))
AMR:
(可 / 可以-02, op, 建 / 建议-01)
(建 / 建议-01, prep-on, 你 / 你们)
(建 / 建议-01, prep-on-behalf, 计 / 计算-01)
(建 / 建议-01, purpose, 他 / 他们)

Decoded in 9,643 microseconds
Sentence: 这样 会 使 他们 很 高兴 ， 因为 他们 非常 喜欢 数目字 。

Spans:
Span 8-9:  他们 => 他们
Span 3-4:  他们 => 他们
Span 1-2:  会 => 会-03
Span 2-3:  使 => 使-01
Span 10-11:  喜欢 => 喜欢-01
Span 4-5:  很 => 很
Span 11-12:  数目字 => 数目字
Span 0-1:  这样 => 这样-01
Span 9-10:  非常 => 非常
Span 5-6:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 1-2:  会 => 会-02
Oracle Span 10-11:  喜欢 => 喜欢-01
Oracle Span 4-5:  很 => 很
Oracle Span 11-12:  数目字 => 数目字
Oracle Span 0-1:  这样 => 这样
Oracle Span 9-10:  非常 => 非常-01
Oracle Span 5-6:  高兴 => 高兴-01

Incorrect span: 非常 => 非常
Extra span: 他们 => 他们
Incorrect span: 高兴 => 高兴
Extra span: 使 => 使-01
Incorrect span: 会 => 会-03
Incorrect span: 这样 => 这样-01
Missing span: 非常 => 非常-01
Missing span: 会 => 会-02
Missing span: 高兴 => 高兴-01
Missing span: 这样 => 这样
Dependencies:
1	这样	_	AD	AD	_	3	advmod	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	使	_	VV	VV	_	0	root	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	高兴	_	VA	VA	_	3	ccomp	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	因为	_	P	P	_	6	prep	_	_
9	他们	_	PN	PN	_	11	nsubj	_	_
10	非常	_	AD	AD	_	11	advmod	_	_
11	喜欢	_	VV	VV	_	8	pccomp	_	_
12	数目字	_	VV	VV	_	11	ccomp	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 喜欢-01, arg0, x15 / 他们)
(x13 / 喜欢-01, arg1, x16 / 数目字)
(x13 / 喜欢-01, degree, x14 / 非常-01)
(x18 / 会-02, arg0, x19 / 高兴-01)
(x19 / 高兴-01, cause, x22 / 这样)
(x19 / 高兴-01, degree, x20 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),数目字,数目字,false), Span(10,11,List(1),喜欢,喜欢-01,false), Span(9,10,List(2),非常,非常,false), Span(8,9,List(3),他们,他们,false), Span(5,6,List(4),高兴,高兴,false), Span(4,5,List(5),很,很,false), Span(3,4,List(6),他们,他们,false), Span(2,3,List(7),使,使-01,false), Span(1,2,List(8),会,会-03,false), Span(0,1,List(9),这样,这样-01,false)),Map(2 -> 非常, 5 -> 很, 8 -> 会-03, 7 -> 使-01, 1 -> 喜欢-01, 4 -> 高兴, 6 -> 他们, 9 -> 这样-01, 0 -> 数目字, 3 -> 他们),Map(高 -> 高兴, 他2 -> 他们, 这 -> 这样-01, 很 -> 很, 他 -> 他们, 喜 -> 喜欢-01, 会 -> 会-03, 非 -> 非常, 数 -> 数目字, 使 -> 使-01))),[Ljava.lang.String;@2ec3633f,Annotation([Ljava.lang.String;@1d5d5621,[Ljava.lang.String;@13275d8,[Ljava.lang.String;@15b82644),Annotation([Ljava.lang.String;@20576557,[Ljava.lang.String;@574cd322,[Ledu.cmu.lti.nlp.amr.Dependency;@45c2e0a6),Annotation([Ljava.lang.String;@119c745c,[Ljava.lang.String;@a7ad6e5,[Ljava.lang.String;@3b1ed14b),Annotation([Ljava.lang.String;@690bc15e,[Ljava.lang.String;@1bc776b7,[Ledu.cmu.lti.nlp.amr.Entity;@475646d4))
AMR:
(会 / 会-03, ARG0, 高 / 高兴)
(会 / 会-03, manner, 这 / 这样-01)
(使 / 使-01, ARG4, 他2 / 他们)
(使 / 使-01, location, 高 / 高兴)
(喜 / 喜欢-01, ARG6, 他 / 他们)
(喜 / 喜欢-01, degree, 他2 / 他们)
(喜 / 喜欢-01, degree, 非 / 非常)
(喜 / 喜欢-01, location, 数 / 数目字)
(高 / 高兴, degree, 很 / 很)

Decoded in 30,748 microseconds
Sentence: 可是 你们 无须 浪费 时间 去 做 这 种 乏味 的 连篇累牍 的 演算 。

Spans:
Span 9-10:  乏味 => 乏味-01
Span 1-2:  你们 => 你们
Span 6-7:  做 => 做-04
Span 5-6:  去 => 去-02
Span 2-3:  无须 => 无须-01
Span 4-5:  时间 => 时间
Span 3-4:  浪费 => 浪费-01
Span 13-14:  演算 => 演算
Span 8-9:  种 => 种
Span 7-8:  这 => 这
Span 11-12:  连篇累牍 => 连篇累牍-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  乏味 => 乏味-01
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  做 => 做-01
Oracle Span 2-3:  无须 => 无须-01
Oracle Span 4-5:  时间 => 时间
Oracle Span 3-4:  浪费 => 浪费-01
Oracle Span 13-14:  演算 => 演算
Oracle Span 7-8:  这 => 这
Oracle Span 11-12:  连篇累牍 => 连篇累牍-01

Extra span: 种 => 种
Incorrect span: 做 => 做-04
Extra span: 去 => 去-02
Missing span: 做 => 做-01
Dependencies:
1	可是	_	AD	AD	_	4	advmod	_	_
2	你们	_	PN	PN	_	4	nsubj	_	_
3	无须	_	AD	AD	_	4	advmod	_	_
4	浪费	_	VV	VV	_	0	root	_	_
5	时间	_	NN	NN	_	7	nsubj	_	_
6	去	_	VV	VV	_	7	mmod	_	_
7	做	_	VV	VV	_	14	rcmod	_	_
8	这	_	DT	DT	_	10	det	_	_
9	种	_	M	M	_	8	clf	_	_
10	乏味	_	NN	NN	_	7	dobj	_	_
11	的	_	DEC	DEC	_	7	cpm	_	_
12	连篇累牍	_	VA	VA	_	14	rcmod	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	演算	_	NN	NN	_	4	dobj	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 无须-01, arg0, x3 / 浪费-01)
(x3 / 浪费-01, arg0, x4 / 你们)
(x3 / 浪费-01, arg1, x5 / 时间)
(x3 / 浪费-01, purpose, x6 / 做-01)
(x6 / 做-01, arg1, x8 / 演算)
(x8 / 演算, mod, x10 / 乏味-01)
(x8 / 演算, mod, x11 / 连篇累牍-01)
(x8 / 演算, mod, x9 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),演算,演算,false), Span(11,12,List(1),连篇累牍,连篇累牍-01,false), Span(9,10,List(2),乏味,乏味-01,false), Span(8,9,List(3),种,种,false), Span(7,8,List(4),这,这,false), Span(6,7,List(5),做,做-04,false), Span(5,6,List(6),去,去-02,false), Span(4,5,List(7),时间,时间,false), Span(3,4,List(8),浪费,浪费-01,false), Span(2,3,List(9),无须,无须-01,false), Span(1,2,List(10),你们,你们,false)),Map(2 -> 乏味-01, 5 -> 做-04, 8 -> 浪费-01, 7 -> 时间, 1 -> 连篇累牍-01, 4 -> 这, 6 -> 去-02, 9 -> 无须-01, 0 -> 演算, 10 -> 你们, 3 -> 种),Map(这 -> 这, 你 -> 你们, 无 -> 无须-01, 去 -> 去-02, 演 -> 演算, 连 -> 连篇累牍-01, 种 -> 种, 乏 -> 乏味-01, 做 -> 做-04, 时 -> 时间, 浪 -> 浪费-01))),[Ljava.lang.String;@a0f53fc,Annotation([Ljava.lang.String;@3db972d2,[Ljava.lang.String;@1debc91c,[Ljava.lang.String;@687e4c93),Annotation([Ljava.lang.String;@181e72d3,[Ljava.lang.String;@6ec7bce0,[Ledu.cmu.lti.nlp.amr.Dependency;@2d272b0d),Annotation([Ljava.lang.String;@3727f0ee,[Ljava.lang.String;@5c448433,[Ljava.lang.String;@fb713e7),Annotation([Ljava.lang.String;@1b5c3e5f,[Ljava.lang.String;@13741d5a,[Ledu.cmu.lti.nlp.amr.Entity;@6b69761b))
AMR:
(乏 / 乏味-01, ARG4, 种 / 种)
(做 / 做-04, value, 演 / 演算)
(去 / 去-02, op, 做 / 做-04)
(无 / 无须-01, ARG5, 浪 / 浪费-01)
(浪 / 浪费-01, manner, 时 / 时间)
(浪 / 浪费-01, mode, 你 / 你们)
(浪 / 浪费-01, purpose, 做 / 做-04)
(演 / 演算, mod, 乏 / 乏味-01)
(演 / 演算, mod, 连 / 连篇累牍-01)
(种 / 种, mod, 这 / 这)

Decoded in 36,046 microseconds
Sentence: 这 没有 必要 。

Spans:
Span 2-3:  必要 => 必要-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  必要 => 必要-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	必要	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 必要-01, arg0, x9 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),必要,必要-01,false), Span(0,1,List(1),这,这,false)),Map(1 -> 这, 0 -> 必要-01),Map(这 -> 这, 必 -> 必要-01))),[Ljava.lang.String;@5c7668ba,Annotation([Ljava.lang.String;@26221bad,[Ljava.lang.String;@158f4cfe,[Ljava.lang.String;@35f639fa),Annotation([Ljava.lang.String;@5aaaa446,[Ljava.lang.String;@6c6333cd,[Ledu.cmu.lti.nlp.amr.Dependency;@3e47a03),Annotation([Ljava.lang.String;@7d9ba6c,[Ljava.lang.String;@8deb645,[Ljava.lang.String;@7dd611c8),Annotation([Ljava.lang.String;@5d425813,[Ljava.lang.String;@1702830d,[Ledu.cmu.lti.nlp.amr.Entity;@6a937336))
AMR:
(必 / 必要-01, manner, 这 / 这)

Decoded in 2,982 microseconds
Sentence: 你们 可以 完全 相信 我 。

Spans:
Span 0-1:  你们 => 你们
Span 1-2:  可以 => 可以-02
Span 2-3:  完全 => 完全-01
Span 4-5:  我 => 我
Span 3-4:  相信 => 相信-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  可以 => 可以-02
Oracle Span 2-3:  完全 => 完全-01
Oracle Span 4-5:  我 => 我
Oracle Span 3-4:  相信 => 相信-01

Dependencies:
1	你们	_	PN	PN	_	4	nsubj	_	_
2	可以	_	VV	VV	_	4	mmod	_	_
3	完全	_	AD	AD	_	4	advmod	_	_
4	相信	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 可以-02, arg0, x2 / 相信-01)
(x2 / 相信-01, arg0, x4 / 你们)
(x2 / 相信-01, arg1, x5 / 我)
(x2 / 相信-01, degree, x3 / 完全-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),我,我,false), Span(3,4,List(1),相信,相信-01,false), Span(2,3,List(2),完全,完全-01,false), Span(1,2,List(3),可以,可以-02,false), Span(0,1,List(4),你们,你们,false)),Map(2 -> 完全-01, 1 -> 相信-01, 4 -> 你们, 0 -> 我, 3 -> 可以-02),Map(相 -> 相信-01, 我 -> 我, 你 -> 你们, 完 -> 完全-01, 可 -> 可以-02))),[Ljava.lang.String;@278667fd,Annotation([Ljava.lang.String;@684b31de,[Ljava.lang.String;@6b52dd31,[Ljava.lang.String;@1a2909ae),Annotation([Ljava.lang.String;@e042c99,[Ljava.lang.String;@3f702946,[Ledu.cmu.lti.nlp.amr.Dependency;@42b6d0cc),Annotation([Ljava.lang.String;@1000d54d,[Ljava.lang.String;@3f4f5330,[Ljava.lang.String;@14b7786),Annotation([Ljava.lang.String;@750ff7d3,[Ljava.lang.String;@63b3ee82,[Ledu.cmu.lti.nlp.amr.Entity;@2620e717))
AMR:
(可 / 可以-02, snt5, 相 / 相信-01)
(相 / 相信-01, degree, 完 / 完全-01)
(相 / 相信-01, op, 你 / 你们)
(相 / 相信-01, value, 我 / 我)

Decoded in 8,921 microseconds
Sentence: 小 王子 到 了 地球 上 感到 非常 奇怪 ， 他 一 个 人 也 没有 看到 ，

Spans:
Span 14-15:  也 => 也
Span 13-14:  人 => 人
Span 10-11:  他 => 他
Span 2-3:  到 => 到-01
Span 4-5:  地球 => 地球
Span 8-9:  奇怪 => 奇怪-02
Span 0-1:  小 => 小
Span 6-7:  感到 => 感到-01
Span 1-2:  王子 => 王子
Span 16-17:  看到 => (thing :arg1-of 看到-01)
Span 7-8:  非常 => 非常

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 正 担心 自己 跑错 了 星球 。 这时 ， 在 沙地 上 有 一 个 月光色 的 圆环 在 蠕动 。

Spans:
Span 0-1:  他 => 他
Span 18-19:  圆环 => 圆环
Span 19-20:  在 => 在-01
Span 10-11:  在 => 在-01
Span 2-3:  担心 => 担心-01
Span 6-7:  星球 => 星球
Span 16-17:  月光色 => 月光色
Span 13-14:  有 => 有-06
Span 1-2:  正 => 正
Span 11-12:  沙地 => 沙地
Span 3-4:  自己 => 自己
Span 20-21:  蠕动 => 蠕动-01
Span 8-9:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 18-19:  圆环 => 圆环
Oracle Span 2-3:  担心 => 担心-01
Oracle Span 6-7:  星球 => 星球
Oracle Span 16-17:  月光色 => 月光色
Oracle Span 13-14:  有 => 有-03
Oracle Span 1-2:  正 => 正
Oracle Span 11-12:  沙地 => 沙地
Oracle Span 20-21:  蠕动 => 蠕动-01
Oracle Span 8-9:  这时 => 这时

Extra span: 在 => 在-01
Incorrect span: 有 => 有-06
Extra span: 在 => 在-01
Extra span: 自己 => 自己
Missing span: 有 => 有-03
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	正	_	AD	AD	_	3	advmod	_	_
3	担心	_	VV	VV	_	0	root	_	_
4	自己	_	PN	PN	_	5	nsubj	_	_
5	跑错	_	VV	VV	_	3	ccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	星球	_	NN	NN	_	5	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	这时	_	AD	AD	_	21	advmod	_	_
10	,	_	PU	PU	_	21	punct	_	_
11	在	_	P	P	_	14	prep	_	_
12	沙地	_	NN	NN	_	13	lobj	_	_
13	上	_	LC	LC	_	11	plmod	_	_
14	有	_	VE	VE	_	19	rcmod	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	个	_	M	M	_	17	clf	_	_
17	月光色	_	NN	NN	_	14	dobj	_	_
18	的	_	DEC	DEC	_	14	cpm	_	_
19	圆环	_	NN	NN	_	21	nsubj	_	_
20	在	_	AD	AD	_	21	advmod	_	_
21	蠕动	_	VV	VV	_	3	conj	_	_
22	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-03, arg0, x14 / 沙地)
(x13 / 有-03, arg1, x15 / 圆环)
(x13 / 有-03, time, x19 / 这时)
(x15 / 圆环, mod, x17 / 月光色)
(x18 / 蠕动-01, arg0, x15 / 圆环)
(x2 / 担心-01, arg0, x3 / 他)
(x2 / 担心-01, manner, x8 / 正)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),蠕动,蠕动-01,false), Span(19,20,List(1),在,在-01,false), Span(18,19,List(2),圆环,圆环,false), Span(16,17,List(3),月光色,月光色,false), Span(13,14,List(4),有,有-06,false), Span(11,12,List(5),沙地,沙地,false), Span(10,11,List(6),在,在-01,false), Span(8,9,List(7),这时,这时,false), Span(6,7,List(8),星球,星球,false), Span(3,4,List(9),自己,自己,false), Span(2,3,List(10),担心,担心-01,false), Span(1,2,List(11),正,正,false), Span(0,1,List(12),他,他,false)),Map(2 -> 圆环, 5 -> 沙地, 12 -> 他, 8 -> 星球, 7 -> 这时, 1 -> 在-01, 4 -> 有-06, 11 -> 正, 6 -> 在-01, 0 -> 蠕动-01, 9 -> 自己, 3 -> 月光色, 10 -> 担心-01),Map(在2 -> 在-01, 担 -> 担心-01, 在 -> 在-01, 星 -> 星球, 自 -> 自己, 蠕 -> 蠕动-01, 这 -> 这时, 月 -> 月光色, 正 -> 正, 他 -> 他, 圆 -> 圆环, 沙 -> 沙地, 有 -> 有-06))),[Ljava.lang.String;@7636823f,Annotation([Ljava.lang.String;@a0db585,[Ljava.lang.String;@2b34e38c,[Ljava.lang.String;@3d37203b),Annotation([Ljava.lang.String;@7fd26ad8,[Ljava.lang.String;@1894593a,[Ledu.cmu.lti.nlp.amr.Dependency;@14b0e127),Annotation([Ljava.lang.String;@10823d72,[Ljava.lang.String;@7cea0110,[Ljava.lang.String;@468dda3e),Annotation([Ljava.lang.String;@5527b211,[Ljava.lang.String;@54cf7c6a,[Ledu.cmu.lti.nlp.amr.Entity;@78010562))
AMR:
(圆 / 圆环, mod, 月 / 月光色)
(担 / 担心-01, ARG6, 他 / 他)
(担 / 担心-01, manner, 在2 / 在-01)
(担 / 担心-01, manner, 正 / 正)
(星 / 星球, poss, 自 / 自己)
(有 / 有-06, ARG0, 在2 / 在-01)
(有 / 有-06, ARG3, 圆 / 圆环)
(有 / 有-06, time, 这 / 这时)
(沙 / 沙地, manner, 在2 / 在-01)
(自 / 自己, ARG0, 担 / 担心-01)
(蠕 / 蠕动-01, manner, 在 / 在-01)
(蠕 / 蠕动-01, mode, 圆 / 圆环)

Decoded in 57,353 microseconds
Sentence: 小 王子 毫 无 把握 地 随便 说 了 声 ： “ 晚安 。 ”

Spans:
Span 5-6:  地 => 地
Span 0-1:  小 => 小
Span 3-4:  无 => 无-02
Span 12-13:  晚安 => 晚安-01
Span 2-3:  毫 => 毫
Span 1-2:  王子 => 王子
Span 7-8:  说 => 说-02
Span 6-7:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 12-13:  晚安 => 晚安-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  说 => 说-01
Oracle Span 6-7:  随便 => 随便-01

Incorrect span: 说 => 说-02
Incorrect span: 随便 => 随便
Extra span: 地 => 地
Extra span: 无 => 无-02
Extra span: 毫 => 毫
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 随便 => 随便-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	7	nsubj	_	_
3	毫	_	AD	AD	_	4	advmod	_	_
4	无	_	VE	VE	_	7	dvpmod	_	_
5	把握	_	NN	NN	_	4	dobj	_	_
6	地	_	DEV	DEV	_	4	dvpm	_	_
7	随便	_	VV	VV	_	0	root	_	_
8	说	_	VV	VV	_	7	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	声	_	NN	NN	_	8	dobj	_	_
11	：	_	PU	PU	_	7	punct	_	_
12	“	_	PU	PU	_	7	punct	_	_
13	晚安	_	VV	VV	_	7	conj	_	_
14	。	_	PU	PU	_	7	punct	_	_
15	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg1, x6 / 晚安-01)
(x0 / 说-01, manner, x2 / 随便-01)
(x2 / 随便-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),晚安,晚安-01,false), Span(7,8,List(1),说,说-02,false), Span(6,7,List(2),随便,随便,false), Span(5,6,List(3),地,地,false), Span(3,4,List(4),无,无-02,false), Span(2,3,List(5),毫,毫,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小,false)),Map(2 -> 随便, 5 -> 毫, 7 -> 小, 1 -> 说-02, 4 -> 无-02, 6 -> 王子, 0 -> 晚安-01, 3 -> 地),Map(毫 -> 毫, 王 -> 王子, 无 -> 无-02, 晚 -> 晚安-01, 小 -> 小, 地 -> 地, 说 -> 说-02, 随 -> 随便))),[Ljava.lang.String;@50756c76,Annotation([Ljava.lang.String;@38aafb53,[Ljava.lang.String;@1729ec00,[Ljava.lang.String;@67f3d192),Annotation([Ljava.lang.String;@1c9e07c6,[Ljava.lang.String;@73010765,[Ledu.cmu.lti.nlp.amr.Dependency;@2b10ace9),Annotation([Ljava.lang.String;@52169758,[Ljava.lang.String;@3eda0aeb,[Ljava.lang.String;@459b187a),Annotation([Ljava.lang.String;@6b4283c4,[Ljava.lang.String;@d0865a3,[Ledu.cmu.lti.nlp.amr.Entity;@636bbbbb))
AMR:
(地 / 地, mod, 无 / 无-02)
(地 / 地, unit, 随 / 随便)
(无 / 无-02, degree, 毫 / 毫)
(毫 / 毫, mod, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, manner, 随 / 随便)
(说 / 说-02, purpose, 晚 / 晚安-01)

Decoded in 21,976 microseconds
Sentence: “ 晚安 。 ” 蛇 说道 。

Spans:
Span 1-2:  晚安 => 晚安-01
Span 4-5:  蛇 => 蛇
Span 5-6:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  晚安 => 晚安-01
Oracle Span 4-5:  蛇 => 蛇
Oracle Span 5-6:  说道 => 说道-01

Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	晚安	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	蛇	_	NN	NN	_	6	nsubj	_	_
6	说道	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 晚安-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说道,说道,false), Span(4,5,List(1),蛇,蛇,false), Span(1,2,List(2),晚安,晚安-01,false)),Map(2 -> 晚安-01, 1 -> 蛇, 0 -> 说道),Map(晚 -> 晚安-01, 说 -> 说道, 蛇 -> 蛇))),[Ljava.lang.String;@7eae3764,Annotation([Ljava.lang.String;@10dc7d6,[Ljava.lang.String;@4f668f29,[Ljava.lang.String;@716e431d),Annotation([Ljava.lang.String;@7e744f43,[Ljava.lang.String;@11a8042c,[Ledu.cmu.lti.nlp.amr.Dependency;@6a4ccef7),Annotation([Ljava.lang.String;@69391e08,[Ljava.lang.String;@35eb4a3b,[Ljava.lang.String;@64b3b1ce),Annotation([Ljava.lang.String;@6884f0d9,[Ljava.lang.String;@49ec6a9f,[Ledu.cmu.lti.nlp.amr.Entity;@26b95b0b))
AMR:
(说 / 说道, topic, 晚 / 晚安-01)
(说 / 说道, topic, 蛇 / 蛇)

Decoded in 4,882 microseconds
Sentence: “ 我 落 在 什么 行星 上 ？ ” 小 王子 问道 。

Spans:
Span 4-5:  什么 => 什么
Span 3-4:  在 => 在-01
Span 9-10:  小 => 小
Span 1-2:  我 => 我
Span 10-11:  王子 => 王子
Span 2-3:  落 => 落-02
Span 5-6:  行星 => 行星
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 10-11:  王子 => 王子
Oracle Span 2-3:  落 => 落-02
Oracle Span 5-6:  行星 => 行星
Oracle Span 11-12:  问道 => 问道-01

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	落	_	AD	AD	_	4	advmod	_	_
4	在	_	VV	VV	_	11	vmod	_	_
5	什么	_	DT	DT	_	6	det	_	_
6	行星	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	4	loc	_	_
8	？	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 落-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 落-02, arg0, x5 / 我)
(x4 / 落-02, arg1, x6 / 行星)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(10,11,List(1),王子,王子,false), Span(9,10,List(2),小,小,false), Span(5,6,List(3),行星,行星,false), Span(4,5,List(4),什么,什么,false), Span(3,4,List(5),在,在-01,false), Span(2,3,List(6),落,落-02,false), Span(1,2,List(7),我,我,false)),Map(2 -> 小, 5 -> 在-01, 7 -> 我, 1 -> 王子, 4 -> 什么, 6 -> 落-02, 0 -> 问道-01, 3 -> 行星),Map(落 -> 落-02, 在 -> 在-01, 我 -> 我, 王 -> 王子, 小 -> 小, 什 -> 什么, 行 -> 行星, 问 -> 问道-01))),[Ljava.lang.String;@5f7da3d3,Annotation([Ljava.lang.String;@103082dd,[Ljava.lang.String;@3a22bad6,[Ljava.lang.String;@56afdf9a),Annotation([Ljava.lang.String;@64fe9da7,[Ljava.lang.String;@70cccd8f,[Ledu.cmu.lti.nlp.amr.Dependency;@5f172d4a),Annotation([Ljava.lang.String;@77ec6a3d,[Ljava.lang.String;@67efd2c2,[Ljava.lang.String;@71d9cb05),Annotation([Ljava.lang.String;@17c2d509,[Ljava.lang.String;@36bf84e,[Ledu.cmu.lti.nlp.amr.Entity;@1a0b5323))
AMR:
(在 / 在-01, manner, 落 / 落-02)
(王 / 王子, mod, 小 / 小)
(落 / 落-02, beneficiary, 我 / 我)
(行 / 行星, mod, 什 / 什么)
(行 / 行星, mod, 在 / 在-01)
(问 / 问道-01, ARG3, 王 / 王子)
(问 / 问道-01, manner, 在 / 在-01)

Decoded in 20,901 microseconds
Sentence: “ 在 地球 上 ， 在 非洲 。 ” 蛇 回答 道 。

NER Entity: (country :name (name :op """))
NER Entity: (country :name (name :op """))
Spans:
Span 10-11:  回答 => 回答-01
Span 5-6:  在 => 在-01
Span 1-2:  在 => 在-01
Span 2-3:  地球 => 地球
Span 9-10:  蛇 => 蛇
Span 11-12:  道 => 道-01
Span 6-7:  非洲 => 非洲

 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.lang.StackOverflowError
	at scala.collection.IndexedSeqOptimized$$anonfun$1.apply(IndexedSeqOptimized.scala:44)
	at scala.collection.IndexedSeqOptimized$$anonfun$1.apply(IndexedSeqOptimized.scala:44)
	at scala.collection.IndexedSeqOptimized$class.segmentLength(IndexedSeqOptimized.scala:189)
	at scala.collection.mutable.ArrayOps$ofRef.segmentLength(ArrayOps.scala:108)
	at scala.collection.GenSeqLike$class.prefixLength(GenSeqLike.scala:92)
	at scala.collection.mutable.ArrayOps$ofRef.prefixLength(ArrayOps.scala:108)
	at scala.collection.IndexedSeqOptimized$class.find(IndexedSeqOptimized.scala:44)
	at scala.collection.mutable.ArrayOps$ofRef.find(ArrayOps.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:442)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Features.rootDependencyPath(Features.scala:447)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ！

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@245ec1a6,Annotation([Ljava.lang.String;@782be4eb,[Ljava.lang.String;@38792286,[Ljava.lang.String;@34d4860f),Annotation([Ljava.lang.String;@665522c2,[Ljava.lang.String;@41fe8e5f,[Ledu.cmu.lti.nlp.amr.Dependency;@3062f9f4),Annotation([Ljava.lang.String;@2016f509,[Ljava.lang.String;@6f1a80fb,[Ljava.lang.String;@5a237731),Annotation([Ljava.lang.String;@7d2998d8,[Ljava.lang.String;@6a0094c9,[Ledu.cmu.lti.nlp.amr.Entity;@51a6cc2a))
AMR:


Decoded in 1,536 microseconds
Sentence: … 怎么 ， 难道 说 地球 上 没有 人 吗 ？ ”

Spans:
Span 8-9:  人 => 人
Span 5-6:  地球 => 地球
Span 1-2:  怎么 => 怎么
Span 4-5:  说 => 说-02
Span 3-4:  难道 => 难道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  人 => 人
Oracle Span 5-6:  地球 => 地球
Oracle Span 1-2:  怎么 => 怎么
Oracle Span 3-4:  难道 => 难道

Extra span: 说 => 说-02
Dependencies:
1	…	_	PU	PU	_	5	dep	_	_
2	怎么	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	难道	_	VV	VV	_	5	nsubj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	地球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	5	loc	_	_
8	没有	_	VE	VE	_	5	conj	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	吗	_	SP	SP	_	5	dep	_	_
11	？	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),人,人,false), Span(5,6,List(1),地球,地球,false), Span(4,5,List(2),说,说-02,false), Span(3,4,List(3),难道,难道,false), Span(1,2,List(4),怎么,怎么,false)),Map(2 -> 说-02, 1 -> 地球, 4 -> 怎么, 0 -> 人, 3 -> 难道),Map(难 -> 难道, 怎 -> 怎么, 地 -> 地球, 说 -> 说-02, 人 -> 人))),[Ljava.lang.String;@10fda3d0,Annotation([Ljava.lang.String;@2123064f,[Ljava.lang.String;@4f6b687e,[Ljava.lang.String;@28cb3a25),Annotation([Ljava.lang.String;@5555ffcf,[Ljava.lang.String;@6cfd9a54,[Ledu.cmu.lti.nlp.amr.Dependency;@78c1372d),Annotation([Ljava.lang.String;@9aa2002,[Ljava.lang.String;@73fb1d7f,[Ljava.lang.String;@73d4066e),Annotation([Ljava.lang.String;@25d2f66,[Ljava.lang.String;@5a2fa51f,[Ledu.cmu.lti.nlp.amr.Entity;@71945bc0))
AMR:
(说 / 说-02, ARG0, 地 / 地球)
(说 / 说-02, manner, 难 / 难道)
(说 / 说-02, quant, 怎 / 怎么)
(说 / 说-02, year, 人 / 人)

Decoded in 10,813 microseconds
Sentence: “ 这里 是 沙漠 ，

Spans:
Span 2-3:  是 => 是-04
Span 3-4:  沙漠 => 沙漠
Span 1-2:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  沙漠 => 沙漠
Oracle Span 1-2:  这里 => 这里

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这里	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	沙漠	_	NN	NN	_	3	conj	_	_
5	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 沙漠, domain, x6 / 这里)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),沙漠,沙漠,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),这里,这里,false)),Map(2 -> 这里, 1 -> 是-04, 0 -> 沙漠),Map(这 -> 这里, 沙 -> 沙漠, 是 -> 是-04))),[Ljava.lang.String;@22a0d4ea,Annotation([Ljava.lang.String;@49ede9c7,[Ljava.lang.String;@6ecdbab8,[Ljava.lang.String;@3dd4a6fa),Annotation([Ljava.lang.String;@19f7222e,[Ljava.lang.String;@3f725306,[Ledu.cmu.lti.nlp.amr.Dependency;@3c69362a),Annotation([Ljava.lang.String;@2412a42b,[Ljava.lang.String;@45404d5,[Ljava.lang.String;@29138d3a),Annotation([Ljava.lang.String;@5cbe2654,[Ljava.lang.String;@6dbcf214,[Ledu.cmu.lti.nlp.amr.Entity;@496a31da))
AMR:
(是 / 是-04, location, 沙 / 沙漠)
(是 / 是-04, location, 这 / 这里)

Decoded in 5,075 microseconds
Sentence: 沙漠 中 没有 人 。

Spans:
Span 3-4:  人 => 人
Span 0-1:  沙漠 => 沙漠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  人 => 人
Oracle Span 0-1:  沙漠 => 沙漠

Dependencies:
1	沙漠	_	NN	NN	_	2	lobj	_	_
2	中	_	LC	LC	_	3	loc	_	_
3	没有	_	VE	VE	_	0	root	_	_
4	人	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),人,人,false), Span(0,1,List(1),沙漠,沙漠,false)),Map(1 -> 沙漠, 0 -> 人),Map(沙 -> 沙漠, 人 -> 人))),[Ljava.lang.String;@7c251f90,Annotation([Ljava.lang.String;@51841ac6,[Ljava.lang.String;@5ba26eb0,[Ljava.lang.String;@435e60ff),Annotation([Ljava.lang.String;@17d32e9b,[Ljava.lang.String;@66f0548d,[Ledu.cmu.lti.nlp.amr.Dependency;@2e6f610d),Annotation([Ljava.lang.String;@1e86a5a7,[Ljava.lang.String;@10afe71a,[Ljava.lang.String;@741f8dbe),Annotation([Ljava.lang.String;@212dfd39,[Ljava.lang.String;@a2ddf26,[Ledu.cmu.lti.nlp.amr.Entity;@65d57e4e))
AMR:
(沙 / 沙漠, accompanier, 人 / 人)

Decoded in 3,128 microseconds
Sentence: 地球 是 很 大 的 。 ” 蛇 说 。

Spans:
Span 0-1:  地球 => 地球
Span 3-4:  大 => 大
Span 2-3:  很 => 很
Span 1-2:  是 => 是-04
Span 7-8:  蛇 => 蛇
Span 8-9:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  地球 => 地球
Oracle Span 3-4:  大 => 大-01
Oracle Span 2-3:  很 => 很
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 8-9:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 大 => 大
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 大 => 大-01
Dependencies:
1	地球	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	9	conj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	大	_	VA	VA	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	8	punct	_	_
8	蛇	_	NT	NT	_	9	nn	_	_
9	说	_	NN	NN	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 大-01)
(x3 / 大-01, arg0, x5 / 地球)
(x3 / 大-01, degree, x4 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),蛇,蛇,false), Span(3,4,List(2),大,大,false), Span(2,3,List(3),很,很,false), Span(1,2,List(4),是,是-04,false), Span(0,1,List(5),地球,地球,false)),Map(2 -> 大, 5 -> 地球, 1 -> 蛇, 4 -> 是-04, 0 -> 说-02, 3 -> 很),Map(很 -> 很, 大 -> 大, 地 -> 地球, 说 -> 说-02, 蛇 -> 蛇, 是 -> 是-04))),[Ljava.lang.String;@6daf7d37,Annotation([Ljava.lang.String;@23a5818e,[Ljava.lang.String;@4715ae33,[Ljava.lang.String;@9fc9f91),Annotation([Ljava.lang.String;@1fac1d5c,[Ljava.lang.String;@108a46d6,[Ledu.cmu.lti.nlp.amr.Dependency;@7a8406c2),Annotation([Ljava.lang.String;@17690e14,[Ljava.lang.String;@6850b758,[Ljava.lang.String;@2a2ef072),Annotation([Ljava.lang.String;@704641e3,[Ljava.lang.String;@2f00f851,[Ledu.cmu.lti.nlp.amr.Entity;@4207609e))
AMR:
(大 / 大, domain, 是 / 是-04)
(是 / 是-04, degree, 很 / 很)
(是 / 是-04, domain, 地 / 地球)
(说 / 说-02, domain, 大 / 大)
(说 / 说-02, domain, 蛇 / 蛇)

Decoded in 11,371 microseconds
Sentence: 小 王子 坐 在 一 块 石头 上 ， 抬眼 望 着 天空 ，

Spans:
Span 3-4:  在 => 在-01
Span 2-3:  坐 => 坐-03
Span 12-13:  天空 => 天空
Span 0-1:  小 => 小
Span 9-10:  抬眼 => 抬眼
Span 10-11:  望 => 望-01
Span 1-2:  王子 => 王子
Span 6-7:  石头 => 石头

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 12-13:  天空 => 天空
Oracle Span 0-1:  小 => 小-01
Oracle Span 9-10:  抬眼 => 抬眼
Oracle Span 10-11:  望 => 望-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 6-7:  石头 => 石头

Extra span: 在 => 在-01
Incorrect span: 坐 => 坐-03
Incorrect span: 小 => 小
Missing span: 坐 => 坐-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	块	_	M	M	_	7	clf	_	_
7	石头	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	4	plmod	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	抬眼	_	AD	AD	_	11	advmod	_	_
11	望	_	VV	VV	_	3	conj	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	天空	_	NN	NN	_	11	dobj	_	_
14	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 望-01, arg1, x14 / 天空)
(x11 / 望-01, manner, x12 / 抬眼)
(x4 / 坐-01, arg0, x5 / 王子)
(x4 / 坐-01, arg1, x7 / 石头)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),天空,天空,false), Span(10,11,List(1),望,望-01,false), Span(9,10,List(2),抬眼,抬眼,false), Span(6,7,List(3),石头,石头,false), Span(3,4,List(4),在,在-01,false), Span(2,3,List(5),坐,坐-03,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小,false)),Map(2 -> 抬眼, 5 -> 坐-03, 7 -> 小, 1 -> 望-01, 4 -> 在-01, 6 -> 王子, 0 -> 天空, 3 -> 石头),Map(石 -> 石头, 在 -> 在-01, 王 -> 王子, 抬 -> 抬眼, 小 -> 小, 天 -> 天空, 坐 -> 坐-03, 望 -> 望-01))),[Ljava.lang.String;@1f77b5cc,Annotation([Ljava.lang.String;@5d7ca698,[Ljava.lang.String;@75961f16,[Ljava.lang.String;@c6c82aa),Annotation([Ljava.lang.String;@2e179f3e,[Ljava.lang.String;@16e7b402,[Ledu.cmu.lti.nlp.amr.Dependency;@534c6767),Annotation([Ljava.lang.String;@3bddc676,[Ljava.lang.String;@29a1505c,[Ljava.lang.String;@24db6ce),Annotation([Ljava.lang.String;@320a8ebf,[Ljava.lang.String;@67b100fe,[Ledu.cmu.lti.nlp.amr.Entity;@44b18fe4))
AMR:
(在 / 在-01, ARG4, 王 / 王子)
(在 / 在-01, ARG5, 坐 / 坐-03)
(在 / 在-01, time, 望 / 望-01)
(望 / 望-01, manner, 抬 / 抬眼)
(望 / 望-01, mod, 天 / 天空)
(王 / 王子, mod, 小 / 小)
(石 / 石头, manner, 在 / 在-01)

Decoded in 21,406 microseconds
Sentence: 说道 ： “ 我 捉摸 这些 星星 闪闪发亮 是否 为了 让 每 个 人 将来 有 一 天 都 能 重新 找到 自己 的 星球 。

Spans:
Span 9-10:  为了 => 为了-01
Span 13-14:  人 => 人
Span 17-18:  天 => (temporal-quantity :unit 天)
Span 14-15:  将来 => 将来
Span 3-4:  我 => 我
Span 21-22:  找到 => 找到-01
Span 4-5:  捉摸 => 捉摸-01
Span 6-7:  星星 => 星星
Span 24-25:  星球 => 星球
Span 8-9:  是否 => 是否-01
Span 15-16:  有 => 有-06
Span 11-12:  每 => 每
Span 19-20:  能 => 能
Span 22-23:  自己 => 自己
Span 10-11:  让 => 让-01
Span 0-1:  说道 => 说道
Span 5-6:  这些 => 这些
Span 18-19:  都 => 都
Span 20-21:  重新 => 重新-01
Span 7-8:  闪闪发亮 => 闪闪发亮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 9-10:  为了 => 为了-01
Oracle Span 13-14:  人 => 人
Oracle Span 14-15:  将来 => 将来
Oracle Span 3-4:  我 => 我
Oracle Span 21-22:  找到 => 找到-01
Oracle Span 4-5:  捉摸 => 捉摸-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 24-25:  星球 => 星球
Oracle Span 8-9:  是否 => 是否-01
Oracle Span 11-12:  每 => 每
Oracle Span 19-20:  能 => 能-01
Oracle Span 22-23:  自己 => 自己
Oracle Span 10-11:  让 => 让-02
Oracle Span 0-1:  说道 => 说道-01
Oracle Span 5-6:  这些 => 这些
Oracle Span 18-19:  都 => 都
Oracle Span 20-21:  重新 => 重新-01
Oracle Span 7-8:  闪闪发亮 => 闪闪发亮

Incorrect span: 能 => 能
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 有 => 有-06
Incorrect span: 让 => 让-01
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 让 => 让-02
Missing span: 能 => 能-01
Dependencies:
1	说道	_	VV	VV	_	0	root	_	_
2	：	_	PU	PU	_	1	punct	_	_
3	“	_	PU	PU	_	5	punct	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	捉摸	_	VV	VV	_	1	ccomp	_	_
6	这些	_	DT	DT	_	7	det	_	_
7	星星	_	NN	NN	_	8	nn	_	_
8	闪闪发亮	_	NN	NN	_	22	nsubj	_	_
9	是否	_	AD	AD	_	22	advmod	_	_
10	为了	_	P	P	_	22	prep	_	_
11	让	_	VV	VV	_	10	pccomp	_	_
12	每	_	DT	DT	_	14	det	_	_
13	个	_	M	M	_	12	clf	_	_
14	人	_	NN	NN	_	11	dobj	_	_
15	将来	_	NT	NT	_	16	tmod	_	_
16	有	_	VE	VE	_	11	dep	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	天	_	M	M	_	16	dep	_	_
19	都	_	AD	AD	_	22	advmod	_	_
20	能	_	VV	VV	_	22	mmod	_	_
21	重新	_	AD	AD	_	22	advmod	_	_
22	找到	_	VV	VV	_	5	ccomp	_	_
23	自己	_	PN	PN	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	星球	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	1	punct	_	_
27	将来	_	NT	NT	_	16	top	_	_

Oracle:
(x0 / 说道-01, arg1, x2 / 捉摸-01)
(x10 / 人, mod, x11 / 每)
(x12 / 能-01, arg0, x13 / 找到-01)
(x12 / 能-01, manner, x18 / 都)
(x13 / 找到-01, arg1, x16 / 星球)
(x13 / 找到-01, manner, x14 / 重新-01)
(x16 / 星球, poss, x17 / 自己)
(x2 / 捉摸-01, arg0, x3 / 我)
(x2 / 捉摸-01, arg1, x4 / 星星)
(x2 / 捉摸-01, arg2, x6 / 闪闪发亮)
(x4 / 星星, mod, x5 / 这些)
(x6 / 闪闪发亮, cause, x8 / 为了-01)
(x8 / 为了-01, arg1, x9 / 让-02)
(x8 / 为了-01, manner, x21 / 是否-01)
(x9 / 让-02, arg1, x10 / 人)
(x9 / 让-02, arg2, x12 / 能-01)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),星球,星球,false), Span(22,23,List(1),自己,自己,false), Span(21,22,List(2),找到,找到-01,false), Span(20,21,List(3),重新,重新-01,false), Span(19,20,List(4),能,能,false), Span(18,19,List(5),都,都,false), Span(17,18,List(7, 6),天,(temporal-quantity :unit 天),false), Span(15,16,List(8),有,有-06,false), Span(14,15,List(9),将来,将来,false), Span(13,14,List(10),人,人,false), Span(11,12,List(11),每,每,false), Span(10,11,List(12),让,让-01,false), Span(9,10,List(13),为了,为了-01,false), Span(8,9,List(14),是否,是否-01,false), Span(7,8,List(15),闪闪发亮,闪闪发亮,false), Span(6,7,List(16),星星,星星,false), Span(5,6,List(17),这些,这些,false), Span(4,5,List(18),捉摸,捉摸-01,false), Span(3,4,List(19),我,我,false), Span(0,1,List(20),说道,说道,false)),Map(2 -> 找到-01, 5 -> 都, 12 -> 让-01, 15 -> 闪闪发亮, 8 -> 有-06, 18 -> 捉摸-01, 7 -> 天, 17 -> 这些, 1 -> 自己, 4 -> 能, 11 -> 每, 14 -> 是否-01, 20 -> 说道, 6 -> temporal-quantity, 0 -> 星球, 9 -> 将来, 16 -> 星星, 19 -> 我, 3 -> 重新-01, 10 -> 人, 13 -> 为了-01),Map(闪 -> 闪闪发亮, 星 -> 星球, 自 -> 自己, t -> temporal-quantity, 我 -> 我, 重 -> 重新-01, 这 -> 这些, 能 -> 能, 每 -> 每, 将 -> 将来, 为 -> 为了-01, 天 -> 天, 说 -> 说道, 都 -> 都, 让 -> 让-01, 星2 -> 星星, 找 -> 找到-01, 人 -> 人, 是 -> 是否-01, 捉 -> 捉摸-01, 有 -> 有-06))),[Ljava.lang.String;@2ba5aa7a,Annotation([Ljava.lang.String;@4d3ca6c7,[Ljava.lang.String;@22e5f96e,[Ljava.lang.String;@6a638c79),Annotation([Ljava.lang.String;@6c931d35,[Ljava.lang.String;@44b194fe,[Ledu.cmu.lti.nlp.amr.Dependency;@49122b8f),Annotation([Ljava.lang.String;@3fe46690,[Ljava.lang.String;@4beabeec,[Ljava.lang.String;@3b4d50b),Annotation([Ljava.lang.String;@5b22d8a1,[Ljava.lang.String;@476ee5b3,[Ledu.cmu.lti.nlp.amr.Entity;@59ed3e6c))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(为 / 为了-01, manner, 是 / 是否-01)
(为 / 为了-01, ord, 让 / 让-01)
(人 / 人, mod, 每 / 每)
(天 / 天, mod, 有 / 有-06)
(将 / 将来, beneficiary, 人 / 人)
(找 / 找到-01, manner, 重 / 重新-01)
(找 / 找到-01, ord, 自 / 自己)
(捉 / 捉摸-01, beneficiary, 我 / 我)
(捉 / 捉摸-01, beneficiary, 说 / 说道)
(捉 / 捉摸-01, source, 是 / 是否-01)
(星 / 星球, poss, 自 / 自己)
(星2 / 星星, mod, 这 / 这些)
(星2 / 星星, mod, 闪 / 闪闪发亮)
(是 / 是否-01, beneficiary, 闪 / 闪闪发亮)
(有 / 有-06, beneficiary, 将 / 将来)
(每 / 每, mod, 让 / 让-01)
(能 / 能, beneficiary, 有 / 有-06)
(能 / 能, manner, 都 / 都)
(能 / 能, manner, 重 / 重新-01)

Decoded in 125,806 microseconds
Sentence: 看 ， 我 那 颗 行星 。

Spans:
Span 2-3:  我 => 我
Span 0-1:  看 => 看-10
Span 5-6:  行星 => 行星
Span 3-4:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  看 => 看-02
Oracle Span 5-6:  行星 => 行星
Oracle Span 3-4:  那 => 那

Incorrect span: 看 => 看-10
Missing span: 看 => 看-02
Dependencies:
1	看	_	VV	VV	_	0	root	_	_
2	,	_	PU	PU	_	1	punct	_	_
3	我	_	PN	PN	_	6	nn	_	_
4	那	_	DT	DT	_	6	det	_	_
5	颗	_	M	M	_	4	clf	_	_
6	行星	_	NN	NN	_	1	dep	_	_
7	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 看-02, arg1, x2 / 行星)
(x2 / 行星, mod, x3 / 那)
(x2 / 行星, poss, x4 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),行星,行星,false), Span(3,4,List(1),那,那,false), Span(2,3,List(2),我,我,false), Span(0,1,List(3),看,看-10,false)),Map(2 -> 我, 1 -> 那, 0 -> 行星, 3 -> 看-10),Map(我 -> 我, 看 -> 看-10, 那 -> 那, 行 -> 行星))),[Ljava.lang.String;@7cd4a4d7,Annotation([Ljava.lang.String;@317e9c3c,[Ljava.lang.String;@18da4dd,[Ljava.lang.String;@31a3f4de),Annotation([Ljava.lang.String;@68880c21,[Ljava.lang.String;@2dd2e270,[Ledu.cmu.lti.nlp.amr.Dependency;@4195105b),Annotation([Ljava.lang.String;@6f3e19b3,[Ljava.lang.String;@47ffe971,[Ljava.lang.String;@7d04529c),Annotation([Ljava.lang.String;@14fa92af,[Ljava.lang.String;@b16e202,[Ledu.cmu.lti.nlp.amr.Entity;@339a3670))
AMR:
(看 / 看-10, time, 行 / 行星)
(行 / 行星, mod, 那 / 那)
(行 / 行星, poss, 我 / 我)

Decoded in 7,441 microseconds
Sentence: 它 恰好 在 我们 头顶 上 …

Spans:
Span 2-3:  在 => 在-01
Span 4-5:  头顶 => 头顶
Span 0-1:  它 => 它
Span 1-2:  恰好 => 恰好
Span 3-4:  我们 => 我们

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  头顶 => 头顶
Oracle Span 0-1:  它 => 它
Oracle Span 1-2:  恰好 => 恰好
Oracle Span 3-4:  我们 => 我们

Extra span: 在 => 在-01
Dependencies:
1	它	_	PN	PN	_	7	nsubj	_	_
2	恰好	_	AD	AD	_	7	advmod	_	_
3	在	_	P	P	_	7	prep	_	_
4	我们	_	PN	PN	_	5	nn	_	_
5	头顶	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	3	plmod	_	_
7	…	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 它, location, x3 / 头顶)
(x3 / 头顶, manner, x5 / 恰好)
(x3 / 头顶, poss, x4 / 我们)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),头顶,头顶,false), Span(3,4,List(1),我们,我们,false), Span(2,3,List(2),在,在-01,false), Span(1,2,List(3),恰好,恰好,false), Span(0,1,List(4),它,它,false)),Map(2 -> 在-01, 1 -> 我们, 4 -> 它, 0 -> 头顶, 3 -> 恰好),Map(头 -> 头顶, 在 -> 在-01, 我 -> 我们, 它 -> 它, 恰 -> 恰好))),[Ljava.lang.String;@6cd5122d,Annotation([Ljava.lang.String;@2c7a8af2,[Ljava.lang.String;@10c07b8d,[Ljava.lang.String;@720bf653),Annotation([Ljava.lang.String;@360bc645,[Ljava.lang.String;@4edef76c,[Ledu.cmu.lti.nlp.amr.Dependency;@5d51e129),Annotation([Ljava.lang.String;@70c53dbe,[Ljava.lang.String;@1894e40d,[Ljava.lang.String;@21c815e4),Annotation([Ljava.lang.String;@7342e05d,[Ljava.lang.String;@2a331b46,[Ledu.cmu.lti.nlp.amr.Entity;@15383681))
AMR:
(在 / 在-01, location, 头 / 头顶)
(在 / 在-01, manner, 恰 / 恰好)
(头 / 头顶, poss, 我 / 我们)
(它 / 它, location, 头 / 头顶)

Decoded in 8,436 microseconds
Sentence: 可是 ， 它 离 我们 好 远 哟 ！ ”

Spans:
Span 5-6:  好 => 好-04
Span 2-3:  它 => 它
Span 4-5:  我们 => 我们
Span 3-4:  离 => 离-02
Span 6-7:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  好 => 好-04
Oracle Span 2-3:  它 => 它
Oracle Span 4-5:  我们 => 我们
Oracle Span 3-4:  离 => 离-02
Oracle Span 6-7:  远 => 远-01

Incorrect span: 远 => 远
Missing span: 远 => 远-01
Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	它	_	PN	PN	_	8	nsubj	_	_
4	离	_	P	P	_	8	prep	_	_
5	我们	_	PN	PN	_	4	pobj	_	_
6	好	_	VA	VA	_	8	dep	_	_
7	远	_	AD	AD	_	8	dep	_	_
8	哟	_	VV	VV	_	0	root	_	_
9	！	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x11 / 离-02, arg0, x12 / 它)
(x11 / 离-02, arg1, x13 / 我们)
(x11 / 离-02, arg2, x14 / 远-01)
(x14 / 远-01, degree, x15 / 好-04)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),远,远,false), Span(5,6,List(1),好,好-04,false), Span(4,5,List(2),我们,我们,false), Span(3,4,List(3),离,离-02,false), Span(2,3,List(4),它,它,false)),Map(2 -> 我们, 1 -> 好-04, 4 -> 它, 0 -> 远, 3 -> 离-02),Map(我 -> 我们, 远 -> 远, 它 -> 它, 离 -> 离-02, 好 -> 好-04))),[Ljava.lang.String;@743e66f7,Annotation([Ljava.lang.String;@109a2025,[Ljava.lang.String;@2241f05b,[Ljava.lang.String;@761956ac),Annotation([Ljava.lang.String;@71978f46,[Ljava.lang.String;@304d0259,[Ledu.cmu.lti.nlp.amr.Dependency;@1d23ff23),Annotation([Ljava.lang.String;@2133661d,[Ljava.lang.String;@6c9320c2,[Ljava.lang.String;@3414a8c3),Annotation([Ljava.lang.String;@36cc9385,[Ljava.lang.String;@cf518cf,[Ledu.cmu.lti.nlp.amr.Entity;@7915bca3))
AMR:
(好 / 好-04, manner, 离 / 离-02)
(离 / 离-02, ARG6, 我 / 我们)
(离 / 离-02, quant, 它 / 它)
(远 / 远, mod, 好 / 好-04)

Decoded in 11,380 microseconds
Sentence: “ 它 很 美 。 ” 蛇 说 ，

Spans:
Span 1-2:  它 => 它
Span 2-3:  很 => 很
Span 3-4:  美 => 美-01
Span 6-7:  蛇 => 蛇
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  它 => 它
Oracle Span 2-3:  很 => 很
Oracle Span 3-4:  美 => 美-01
Oracle Span 6-7:  蛇 => 蛇
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	它	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	美	_	VV	VV	_	0	root	_	_
5	。	_	NN	NN	_	4	dobj	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	蛇	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	4	conj	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 美-01)
(x3 / 美-01, arg0, x5 / 它)
(x3 / 美-01, degree, x4 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),蛇,蛇,false), Span(3,4,List(2),美,美-01,false), Span(2,3,List(3),很,很,false), Span(1,2,List(4),它,它,false)),Map(2 -> 美-01, 1 -> 蛇, 4 -> 它, 0 -> 说-02, 3 -> 很),Map(美 -> 美-01, 很 -> 很, 它 -> 它, 说 -> 说-02, 蛇 -> 蛇))),[Ljava.lang.String;@68d651f2,Annotation([Ljava.lang.String;@3ad4a7d6,[Ljava.lang.String;@1e43e323,[Ljava.lang.String;@4a67b4ec),Annotation([Ljava.lang.String;@10643593,[Ljava.lang.String;@f91da5e,[Ledu.cmu.lti.nlp.amr.Dependency;@eca6a74),Annotation([Ljava.lang.String;@79fd6f95,[Ljava.lang.String;@48840594,[Ljava.lang.String;@49c675f0),Annotation([Ljava.lang.String;@14823f76,[Ljava.lang.String;@6917bb4,[Ledu.cmu.lti.nlp.amr.Entity;@6ed16657))
AMR:
(美 / 美-01, degree, 很 / 很)
(美 / 美-01, poss, 它 / 它)
(说 / 说-02, purpose, 美 / 美-01)
(说 / 说-02, topic, 蛇 / 蛇)

Decoded in 9,291 microseconds
Sentence: “ 你 到 这里 来 干 什么 呢 ？ ”

Spans:
Span 6-7:  什么 => 什么
Span 1-2:  你 => 你
Span 2-3:  到 => 到-01
Span 5-6:  干 => (thing :arg1-of 干-01)
Span 4-5:  来 => 来-06
Span 3-4:  这里 => 这里

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我 和 一 朵 花 闹 了 别扭 。 ” 小 王子 说 。

Spans:
Span 8-9:  别扭 => 别扭-01
Span 11-12:  小 => 小
Span 1-2:  我 => 我
Span 12-13:  王子 => 王子
Span 5-6:  花 => 花-01
Span 13-14:  说 => 说-02
Span 6-7:  闹 => 闹-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  别扭 => 别扭-01
Oracle Span 11-12:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 12-13:  王子 => 王子
Oracle Span 5-6:  花 => 花
Oracle Span 13-14:  说 => 说-01
Oracle Span 6-7:  闹 => 闹-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 花 => 花-01
Missing span: 说 => 说-01
Missing span: 花 => 花
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	7	dep	_	_
3	和	_	P	P	_	7	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	朵	_	M	M	_	6	clf	_	_
6	花	_	NN	NN	_	3	pobj	_	_
7	闹	_	VV	VV	_	14	dep	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	别扭	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	7	punct	_	_
11	”	_	PU	PU	_	7	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	说	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 闹-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 闹-01, arg0, x6 / 我)
(x5 / 闹-01, arg1, x7 / 别扭-01)
(x6 / 我, accompanier, x12 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),说,说-02,false), Span(12,13,List(1),王子,王子,false), Span(11,12,List(2),小,小,false), Span(8,9,List(3),别扭,别扭-01,false), Span(6,7,List(4),闹,闹-01,false), Span(5,6,List(5),花,花-01,false), Span(1,2,List(6),我,我,false)),Map(2 -> 小, 5 -> 花-01, 1 -> 王子, 4 -> 闹-01, 6 -> 我, 0 -> 说-02, 3 -> 别扭-01),Map(闹 -> 闹-01, 我 -> 我, 别 -> 别扭-01, 王 -> 王子, 小 -> 小, 花 -> 花-01, 说 -> 说-02))),[Ljava.lang.String;@113e13f9,Annotation([Ljava.lang.String;@1c7f96b1,[Ljava.lang.String;@7979b8b7,[Ljava.lang.String;@7a04fea7),Annotation([Ljava.lang.String;@1bc49bc5,[Ljava.lang.String;@7b6e5c12,[Ledu.cmu.lti.nlp.amr.Dependency;@4f66ffc8),Annotation([Ljava.lang.String;@124ac145,[Ljava.lang.String;@2def7a7a,[Ljava.lang.String;@24e83d19),Annotation([Ljava.lang.String;@5c080ef3,[Ljava.lang.String;@188cbcde,[Ledu.cmu.lti.nlp.amr.Entity;@4ee6291f))
AMR:
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 别 / 别扭-01)
(说 / 说-02, degree, 小 / 小)
(闹 / 闹-01, degree, 花 / 花-01)
(闹 / 闹-01, domain, 我 / 我)
(闹 / 闹-01, purpose, 别 / 别扭-01)

Decoded in 16,722 microseconds
Sentence: “ 啊 ！ ” 蛇 说道 。

Spans:
Span 1-2:  啊 => 啊
Span 4-5:  蛇 => 蛇
Span 5-6:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  啊 => 啊
Oracle Span 4-5:  蛇 => 蛇
Oracle Span 5-6:  说道 => 说道-01

Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	JJ	JJ	_	3	amod	_	_
3	！	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	蛇	_	NN	NN	_	6	nsubj	_	_
6	说道	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 啊)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说道,说道,false), Span(4,5,List(1),蛇,蛇,false), Span(1,2,List(2),啊,啊,false)),Map(2 -> 啊, 1 -> 蛇, 0 -> 说道),Map(啊 -> 啊, 说 -> 说道, 蛇 -> 蛇))),[Ljava.lang.String;@2b03d52f,Annotation([Ljava.lang.String;@37e0292a,[Ljava.lang.String;@4af70944,[Ljava.lang.String;@35267fd4),Annotation([Ljava.lang.String;@397ef2,[Ljava.lang.String;@36a6bea6,[Ledu.cmu.lti.nlp.amr.Dependency;@44e93c1f),Annotation([Ljava.lang.String;@42373389,[Ljava.lang.String;@9b21bd3,[Ljava.lang.String;@a62c7cd),Annotation([Ljava.lang.String;@7661b5a,[Ljava.lang.String;@7c36db44,[Ledu.cmu.lti.nlp.amr.Entity;@65c33b92))
AMR:
(说 / 说道, domain, 啊 / 啊)
(说 / 说道, topic, 蛇 / 蛇)

Decoded in 4,413 microseconds
Sentence: 于是 他们 都 沉默 下来 。

Spans:
Span 4-5:  下来 => 下来-02
Span 1-2:  他们 => 他们
Span 3-4:  沉默 => 沉默-01
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  沉默 => 沉默-01
Oracle Span 2-3:  都 => 都

Extra span: 下来 => 下来-02
Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	沉默	_	VV	VV	_	0	root	_	_
5	下来	_	VV	VV	_	4	comod	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x4 / 他们)
(x2 / 沉默-01, manner, x3 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),下来,下来-02,false), Span(3,4,List(1),沉默,沉默-01,false), Span(2,3,List(2),都,都,false), Span(1,2,List(3),他们,他们,false)),Map(2 -> 都, 1 -> 沉默-01, 0 -> 下来-02, 3 -> 他们),Map(沉 -> 沉默-01, 下 -> 下来-02, 他 -> 他们, 都 -> 都))),[Ljava.lang.String;@7903d448,Annotation([Ljava.lang.String;@4e08acf9,[Ljava.lang.String;@42ea287,[Ljava.lang.String;@78cd163b),Annotation([Ljava.lang.String;@1f0b3cfe,[Ljava.lang.String;@14ef2482,[Ledu.cmu.lti.nlp.amr.Dependency;@65a48602),Annotation([Ljava.lang.String;@75483843,[Ljava.lang.String;@336206d8,[Ljava.lang.String;@5ec4ff02),Annotation([Ljava.lang.String;@1f11f64e,[Ljava.lang.String;@2b2f5fcf,[Ledu.cmu.lti.nlp.amr.Entity;@858d8b4))
AMR:
(下 / 下来-02, ARG0, 他 / 他们)
(沉 / 沉默-01, direction, 下 / 下来-02)
(沉 / 沉默-01, manner, 都 / 都)

Decoded in 6,728 microseconds
Sentence: “ 人 在 什么 地方 ？ ” 小 王子 终于 又 开 了 腔 。

Spans:
Span 1-2:  人 => 人
Span 3-4:  什么 => 什么
Span 10-11:  又 => 又
Span 2-3:  在 => 在-01
Span 4-5:  地方 => 地方
Span 7-8:  小 => 小
Span 11-12:  开 => 开-03
Span 8-9:  王子 => 王子
Span 9-10:  终于 => 终于

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  人 => 人
Oracle Span 10-11:  又 => 又
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  终于 => 终于

Extra span: 开 => 开-03
Incorrect span: 小 => 小
Extra span: 地方 => 地方
Extra span: 什么 => 什么
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	在	_	VV	VV	_	9	rcmod	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	地方	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	12	nsubj	_	_
10	终于	_	AD	AD	_	12	advmod	_	_
11	又	_	AD	AD	_	12	advmod	_	_
12	开	_	VV	VV	_	0	root	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	腔	_	M	M	_	12	dobj	_	_
15	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),开,开-03,false), Span(10,11,List(1),又,又,false), Span(9,10,List(2),终于,终于,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小,false), Span(4,5,List(5),地方,地方,false), Span(3,4,List(6),什么,什么,false), Span(2,3,List(7),在,在-01,false), Span(1,2,List(8),人,人,false)),Map(2 -> 终于, 5 -> 地方, 8 -> 人, 7 -> 在-01, 1 -> 又, 4 -> 小, 6 -> 什么, 0 -> 开-03, 3 -> 王子),Map(又 -> 又, 在 -> 在-01, 终 -> 终于, 王 -> 王子, 地 -> 地方, 小 -> 小, 开 -> 开-03, 什 -> 什么, 人 -> 人))),[Ljava.lang.String;@711d1a52,Annotation([Ljava.lang.String;@612e21b9,[Ljava.lang.String;@302edb74,[Ljava.lang.String;@7efd28bd),Annotation([Ljava.lang.String;@672b72ba,[Ljava.lang.String;@7718a40f,[Ledu.cmu.lti.nlp.amr.Dependency;@312b34e3),Annotation([Ljava.lang.String;@26844abb,[Ljava.lang.String;@1a865273,[Ljava.lang.String;@288ca5f0),Annotation([Ljava.lang.String;@4068102e,[Ljava.lang.String;@44bd4b0a,[Ledu.cmu.lti.nlp.amr.Entity;@6c008c24))
AMR:
(在 / 在-01, degree, 人 / 人)
(地 / 地方, mod, 什 / 什么)
(地 / 地方, mod, 在 / 在-01)
(开 / 开-03, degree, 王 / 王子)
(开 / 开-03, location, 地 / 地方)
(开 / 开-03, manner, 又 / 又)
(开 / 开-03, manner, 终 / 终于)
(王 / 王子, mod, 小 / 小)

Decoded in 24,854 microseconds
Sentence: “ 在 沙漠 上 ， 真 有点 孤独 … ”

Spans:
Span 1-2:  在 => 在-01
Span 7-8:  孤独 => 孤独-01
Span 6-7:  有点 => 有点-01
Span 2-3:  沙漠 => 沙漠
Span 5-6:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 7-8:  孤独 => 孤独-01
Oracle Span 6-7:  有点 => 有点
Oracle Span 2-3:  沙漠 => 沙漠
Oracle Span 5-6:  真 => 真

Incorrect span: 有点 => 有点-01
Extra span: 在 => 在-01
Missing span: 有点 => 有点
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	在	_	P	P	_	7	prep	_	_
3	沙漠	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	2	plmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	真	_	AD	AD	_	7	advmod	_	_
7	有点	_	VV	VV	_	0	root	_	_
8	孤独	_	NN	NN	_	9	nn	_	_
9	…	_	NN	NN	_	7	dobj	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 孤独-01, degree, x10 / 真)
(x8 / 孤独-01, degree, x9 / 有点)
(x8 / 孤独-01, location, x11 / 沙漠)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),孤独,孤独-01,false), Span(6,7,List(1),有点,有点-01,false), Span(5,6,List(2),真,真,false), Span(2,3,List(3),沙漠,沙漠,false), Span(1,2,List(4),在,在-01,false)),Map(2 -> 真, 1 -> 有点-01, 4 -> 在-01, 0 -> 孤独-01, 3 -> 沙漠),Map(在 -> 在-01, 沙 -> 沙漠, 孤 -> 孤独-01, 真 -> 真, 有 -> 有点-01))),[Ljava.lang.String;@216e0771,Annotation([Ljava.lang.String;@21079a12,[Ljava.lang.String;@fcc6023,[Ljava.lang.String;@67c5ac52),Annotation([Ljava.lang.String;@36417a54,[Ljava.lang.String;@2b8bb184,[Ledu.cmu.lti.nlp.amr.Dependency;@472a11ae),Annotation([Ljava.lang.String;@dc79225,[Ljava.lang.String;@30e9ca13,[Ljava.lang.String;@46185a1b),Annotation([Ljava.lang.String;@51288417,[Ljava.lang.String;@60cf62ad,[Ledu.cmu.lti.nlp.amr.Entity;@1e0895f5))
AMR:
(在 / 在-01, location, 沙 / 沙漠)
(孤 / 孤独-01, degree, 有 / 有点-01)
(有 / 有点-01, degree, 在 / 在-01)
(有 / 有点-01, degree, 真 / 真)

Decoded in 9,212 microseconds
Sentence: “ 到 了 有 人 的 地方 ， 也 一样 孤独 。 ” 蛇 说 。

Spans:
Span 9-10:  一样 => 一样
Span 8-9:  也 => 也
Span 4-5:  人 => 人
Span 1-2:  到 => 到-01
Span 6-7:  地方 => 地方
Span 10-11:  孤独 => 孤独-01
Span 3-4:  有 => 有-06
Span 13-14:  蛇 => 蛇
Span 14-15:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-01
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  到 => 到-01
Oracle Span 6-7:  地方 => 地方
Oracle Span 10-11:  孤独 => 孤独-01
Oracle Span 3-4:  有 => 有-01
Oracle Span 13-14:  蛇 => 蛇
Oracle Span 14-15:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 一样 => 一样
Extra span: 也 => 也
Incorrect span: 有 => 有-06
Missing span: 说 => 说-01
Missing span: 有 => 有-01
Missing span: 一样 => 一样-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	到	_	VV	VV	_	4	conj	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	有	_	VE	VE	_	0	root	_	_
5	人	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地方	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	一样	_	VA	VA	_	4	conj	_	_
11	孤独	_	VA	VA	_	10	comod	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_
14	蛇	_	NR	NR	_	15	nsubj	_	_
15	说	_	VV	VV	_	4	dep	_	_
16	。	_	PU	PU	_	4	punct	_	_
17	到	_	VV	VV	_	4	top	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x4 / 到-01, arg1, x5 / 地方)
(x7 / 有-01, arg0, x5 / 地方)
(x7 / 有-01, arg1, x8 / 人)
(x9 / 孤独-01, degree, x10 / 一样-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),说,说-02,false), Span(13,14,List(1),蛇,蛇,false), Span(10,11,List(2),孤独,孤独-01,false), Span(9,10,List(3),一样,一样,false), Span(8,9,List(4),也,也,false), Span(6,7,List(5),地方,地方,false), Span(4,5,List(6),人,人,false), Span(3,4,List(7),有,有-06,false), Span(1,2,List(8),到,到-01,false)),Map(2 -> 孤独-01, 5 -> 地方, 8 -> 到-01, 7 -> 有-06, 1 -> 蛇, 4 -> 也, 6 -> 人, 0 -> 说-02, 3 -> 一样),Map(也 -> 也, 地 -> 地方, 到 -> 到-01, 说 -> 说-02, 孤 -> 孤独-01, 蛇 -> 蛇, 人 -> 人, 一 -> 一样, 有 -> 有-06))),[Ljava.lang.String;@1ac4ccad,Annotation([Ljava.lang.String;@fd9ebde,[Ljava.lang.String;@14982a82,[Ljava.lang.String;@4ee5b2d9),Annotation([Ljava.lang.String;@72f8ae0c,[Ljava.lang.String;@323f3c96,[Ledu.cmu.lti.nlp.amr.Dependency;@6726cc69),Annotation([Ljava.lang.String;@4b6d92e,[Ljava.lang.String;@33899f7a,[Ljava.lang.String;@7899de11),Annotation([Ljava.lang.String;@290d10ef,[Ljava.lang.String;@1bc0d349,[Ledu.cmu.lti.nlp.amr.Entity;@644ded04))
AMR:
(一 / 一样, location, 地 / 地方)
(一 / 一样, manner, 也 / 也)
(人 / 人, mod, 有 / 有-06)
(地 / 地方, mod, 有 / 有-06)
(孤 / 孤独-01, degree, 一 / 一样)
(有 / 有-06, time, 到 / 到-01)
(说 / 说-02, degree, 一 / 一样)
(说 / 说-02, topic, 蛇 / 蛇)

Decoded in 23,778 microseconds
Sentence: 小 王子 长 时间 地 看 着 蛇 。

Spans:
Span 4-5:  地 => 地
Span 0-1:  小 => 小
Span 3-4:  时间 => 时间
Span 1-2:  王子 => 王子
Span 5-6:  看 => 看-10
Span 7-8:  蛇 => 蛇
Span 2-3:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  时间 => 时间
Oracle Span 1-2:  王子 => 王子
Oracle Span 5-6:  看 => 看-02
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 2-3:  长 => 长

Incorrect span: 看 => 看-10
Extra span: 地 => 地
Incorrect span: 长 => 长-04
Incorrect span: 小 => 小
Missing span: 看 => 看-02
Missing span: 长 => 长
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	长	_	JJ	JJ	_	4	amod	_	_
4	时间	_	NN	NN	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	看	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	蛇	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 看-02, arg0, x3 / 王子)
(x0 / 看-02, arg1, x5 / 蛇)
(x0 / 看-02, duration, x6 / 时间)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 时间, mod, x7 / 长)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),蛇,蛇,false), Span(5,6,List(1),看,看-10,false), Span(4,5,List(2),地,地,false), Span(3,4,List(3),时间,时间,false), Span(2,3,List(4),长,长-04,false), Span(1,2,List(5),王子,王子,false), Span(0,1,List(6),小,小,false)),Map(2 -> 地, 5 -> 王子, 1 -> 看-10, 4 -> 长-04, 6 -> 小, 0 -> 蛇, 3 -> 时间),Map(王 -> 王子, 小 -> 小, 地 -> 地, 看 -> 看-10, 蛇 -> 蛇, 时 -> 时间, 长 -> 长-04))),[Ljava.lang.String;@5292ceca,Annotation([Ljava.lang.String;@13d9261f,[Ljava.lang.String;@e9ef5b6,[Ljava.lang.String;@5300cac),Annotation([Ljava.lang.String;@4110765e,[Ljava.lang.String;@1ba359bd,[Ledu.cmu.lti.nlp.amr.Dependency;@62e93c3a),Annotation([Ljava.lang.String;@673919a7,[Ljava.lang.String;@25d93198,[Ljava.lang.String;@2436ea2f),Annotation([Ljava.lang.String;@f951a7f,[Ljava.lang.String;@20cece0b,[Ledu.cmu.lti.nlp.amr.Entity;@4c777e7b))
AMR:
(时 / 时间, mod, 长 / 长-04)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, ARG1, 地 / 地)
(看 / 看-10, duration, 时 / 时间)
(看 / 看-10, mod, 蛇 / 蛇)
(长 / 长-04, ARG4, 王 / 王子)

Decoded in 17,722 microseconds
Sentence: “ 你 是 个 奇怪 的 动物 ， 小 王子 终于 说道 。

Spans:
Span 1-2:  你 => 你
Span 6-7:  动物 => 动物
Span 4-5:  奇怪 => 奇怪-02
Span 8-9:  小 => 小
Span 2-3:  是 => 是-04
Span 9-10:  王子 => 王子
Span 10-11:  终于 => 终于
Span 11-12:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  动物 => 动物
Oracle Span 4-5:  奇怪 => 奇怪-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  终于 => 终于
Oracle Span 11-12:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Incorrect span: 奇怪 => 奇怪-02
Extra span: 是 => 是-04
Missing span: 说道 => 说道-01
Missing span: 奇怪 => 奇怪-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	个	_	M	M	_	7	dep	_	_
5	奇怪	_	VA	VA	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	动物	_	NN	NN	_	3	attr	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	终于	_	AD	AD	_	12	advmod	_	_
12	说道	_	VV	VV	_	3	conj	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x3 / 王子)
(x0 / 说道-01, arg1, x5 / 动物)
(x0 / 说道-01, manner, x2 / 终于)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 动物, domain, x8 / 你)
(x5 / 动物, mod, x6 / 奇怪-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说道,说道,false), Span(10,11,List(1),终于,终于,false), Span(9,10,List(2),王子,王子,false), Span(8,9,List(3),小,小,false), Span(6,7,List(4),动物,动物,false), Span(4,5,List(5),奇怪,奇怪-02,false), Span(2,3,List(6),是,是-04,false), Span(1,2,List(7),你,你,false)),Map(2 -> 王子, 5 -> 奇怪-02, 7 -> 你, 1 -> 终于, 4 -> 动物, 6 -> 是-04, 0 -> 说道, 3 -> 小),Map(终 -> 终于, 你 -> 你, 王 -> 王子, 动 -> 动物, 小 -> 小, 奇 -> 奇怪-02, 说 -> 说道, 是 -> 是-04))),[Ljava.lang.String;@5f038248,Annotation([Ljava.lang.String;@78e22d35,[Ljava.lang.String;@2e8a1ab4,[Ljava.lang.String;@59f93db8),Annotation([Ljava.lang.String;@1aabf50d,[Ljava.lang.String;@73c9e8e8,[Ledu.cmu.lti.nlp.amr.Dependency;@de8039f),Annotation([Ljava.lang.String;@1deceb67,[Ljava.lang.String;@582a764a,[Ljava.lang.String;@64984b0f),Annotation([Ljava.lang.String;@292158f8,[Ljava.lang.String;@53ec2968,[Ledu.cmu.lti.nlp.amr.Entity;@58ff8d79))
AMR:
(奇 / 奇怪-02, degree, 动 / 动物)
(奇 / 奇怪-02, degree, 是 / 是-04)
(小 / 小, location, 动 / 动物)
(是 / 是-04, degree, 你 / 你)
(王 / 王子, mod, 小 / 小)
(说 / 说道, domain, 动 / 动物)
(说 / 说道, manner, 终 / 终于)

Decoded in 19,336 microseconds
Sentence: 细 得 象 个 手指头 … 。 ”

Spans:
Span 1-2:  得 => 得-06
Span 4-5:  手指头 => 手指头
Span 0-1:  细 => 细-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  手指头 => 手指头
Oracle Span 0-1:  细 => 细-01

Extra span: 得 => 得-06
Dependencies:
1	细	_	NR	NR	_	2	nsubj	_	_
2	得	_	VV	VV	_	0	root	_	_
3	象	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	手指头	_	NN	NN	_	6	nn	_	_
6	…	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),手指头,手指头,false), Span(1,2,List(1),得,得-06,false), Span(0,1,List(2),细,细-01,false)),Map(2 -> 细-01, 1 -> 得-06, 0 -> 手指头),Map(得 -> 得-06, 细 -> 细-01, 手 -> 手指头))),[Ljava.lang.String;@7e19755a,Annotation([Ljava.lang.String;@5d5c04f9,[Ljava.lang.String;@6f49d153,[Ljava.lang.String;@4b790d86),Annotation([Ljava.lang.String;@7e7f0216,[Ljava.lang.String;@4339baec,[Ledu.cmu.lti.nlp.amr.Dependency;@62db3891),Annotation([Ljava.lang.String;@61cd1c71,[Ljava.lang.String;@6724cdec,[Ljava.lang.String;@6944e53e),Annotation([Ljava.lang.String;@52e04737,[Ljava.lang.String;@5bc7e78e,[Ledu.cmu.lti.nlp.amr.Entity;@1a4d1ab7))
AMR:
(得 / 得-06, degree, 细 / 细-01)
(得 / 得-06, prep-on-behalf, 手 / 手指头)

Decoded in 4,015 microseconds
Sentence: “ 但 我 比 一 个 国王 的 手指 更 有 威力 。 ” 蛇 说道 。

Spans:
Span 6-7:  国王 => 国王
Span 11-12:  威力 => 威力
Span 2-3:  我 => 我
Span 8-9:  手指 => 手指
Span 9-10:  更 => 更-01
Span 10-11:  有 => 有-06
Span 14-15:  蛇 => 蛇
Span 15-16:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  国王 => 国王
Oracle Span 11-12:  威力 => 威力
Oracle Span 8-9:  手指 => 手指
Oracle Span 9-10:  更 => 更
Oracle Span 10-11:  有 => 有-03
Oracle Span 14-15:  蛇 => 蛇
Oracle Span 15-16:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 有 => 有-06
Incorrect span: 更 => 更-01
Extra span: 我 => 我
Missing span: 说道 => 说道-01
Missing span: 有 => 有-03
Missing span: 更 => 更
Dependencies:
1	“	_	PU	PU	_	15	punct	_	_
2	但	_	AD	AD	_	11	advmod	_	_
3	我	_	PN	PN	_	11	nsubj	_	_
4	比	_	P	P	_	9	assmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	国王	_	NN	NN	_	4	pobj	_	_
8	的	_	DEG	DEG	_	4	assm	_	_
9	手指	_	NN	NN	_	11	nsubj	_	_
10	更	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	15	conj	_	_
12	威力	_	NN	NN	_	11	dobj	_	_
13	。	_	PU	PU	_	11	punct	_	_
14	”	_	PU	PU	_	11	punct	_	_
15	蛇	_	VV	VV	_	0	root	_	_
16	说道	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x15 / 有-03, arg1, x16 / 威力)
(x15 / 有-03, compared-to, x19 / 手指)
(x15 / 有-03, degree, x17 / 更)
(x20 / 国王, part, x19 / 手指)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说道,说道,false), Span(14,15,List(1),蛇,蛇,false), Span(11,12,List(2),威力,威力,false), Span(10,11,List(3),有,有-06,false), Span(9,10,List(4),更,更-01,false), Span(8,9,List(5),手指,手指,false), Span(6,7,List(6),国王,国王,false), Span(2,3,List(7),我,我,false)),Map(2 -> 威力, 5 -> 手指, 7 -> 我, 1 -> 蛇, 4 -> 更-01, 6 -> 国王, 0 -> 说道, 3 -> 有-06),Map(我 -> 我, 威 -> 威力, 国 -> 国王, 说 -> 说道, 蛇 -> 蛇, 手 -> 手指, 更 -> 更-01, 有 -> 有-06))),[Ljava.lang.String;@546e61d5,Annotation([Ljava.lang.String;@4674d90,[Ljava.lang.String;@60783105,[Ljava.lang.String;@1292071f),Annotation([Ljava.lang.String;@35d5ac51,[Ljava.lang.String;@b606cb6,[Ledu.cmu.lti.nlp.amr.Dependency;@2a3194c6),Annotation([Ljava.lang.String;@2819c460,[Ljava.lang.String;@30364216,[Ljava.lang.String;@38bb9d7a),Annotation([Ljava.lang.String;@1e8ab90f,[Ljava.lang.String;@78d6447a,[Ledu.cmu.lti.nlp.amr.Entity;@7a729f84))
AMR:
(国 / 国王, part, 手 / 手指)
(国 / 国王, poss, 我 / 我)
(威 / 威力, mod, 有 / 有-06)
(更 / 更-01, degree, 手 / 手指)
(有 / 有-06, degree, 更 / 更-01)
(说 / 说道, mod, 有 / 有-06)
(说 / 说道, topic, 蛇 / 蛇)

Decoded in 19,775 microseconds
Sentence: 小 王子 微笑 着 说 ：

Spans:
Span 0-1:  小 => 小
Span 2-3:  微笑 => 微笑
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 2-3:  微笑 => 微笑-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 微笑 => 微笑
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 微笑 => 微笑-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	微笑	_	NN	NN	_	5	nsubj	_	_
4	着	_	VV	VV	_	5	dep	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, manner, x4 / 微笑-01)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),说,说-02,false), Span(2,3,List(1),微笑,微笑,false), Span(1,2,List(2),王子,王子,false), Span(0,1,List(3),小,小,false)),Map(2 -> 王子, 1 -> 微笑, 0 -> 说-02, 3 -> 小),Map(王 -> 王子, 小 -> 小, 微 -> 微笑, 说 -> 说-02))),[Ljava.lang.String;@1e469dfd,Annotation([Ljava.lang.String;@554f0dfb,[Ljava.lang.String;@1f7076bc,[Ljava.lang.String;@71904469),Annotation([Ljava.lang.String;@5b9396d3,[Ljava.lang.String;@761e788f,[Ledu.cmu.lti.nlp.amr.Dependency;@6a472566),Annotation([Ljava.lang.String;@1907874b,[Ljava.lang.String;@5e65afb6,[Ljava.lang.String;@5b3a7ef5),Annotation([Ljava.lang.String;@8851ce1,[Ljava.lang.String;@2d9dff65,[Ledu.cmu.lti.nlp.amr.Entity;@5ef6fd7f))
AMR:
(微 / 微笑, mod, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, poss, 微 / 微笑)

Decoded in 8,307 microseconds
Sentence: “ 你 并不 那么 有 威力 … …

Spans:
Span 1-2:  你 => 你
Span 5-6:  威力 => 威力
Span 4-5:  有 => 有-06
Span 3-4:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  威力 => 威力
Oracle Span 4-5:  有 => 有-03
Oracle Span 3-4:  那么 => 那么

Incorrect span: 有 => 有-06
Missing span: 有 => 有-03
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	并不	_	AD	AD	_	5	advmod	_	_
4	那么	_	AD	AD	_	5	advmod	_	_
5	有	_	VV	VV	_	0	root	_	_
6	威力	_	NN	NN	_	5	dobj	_	_
7	…	_	PU	PU	_	5	punct	_	_
8	…	_	PU	PU	_	5	punct	_	_

Oracle:
(x9 / 有-03, arg0, x11 / 你)
(x9 / 有-03, arg1, x12 / 威力)
(x9 / 有-03, degree, x14 / 那么)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),威力,威力,false), Span(4,5,List(1),有,有-06,false), Span(3,4,List(2),那么,那么,false), Span(1,2,List(3),你,你,false)),Map(2 -> 那么, 1 -> 有-06, 0 -> 威力, 3 -> 你),Map(你 -> 你, 威 -> 威力, 那 -> 那么, 有 -> 有-06))),[Ljava.lang.String;@5633ed82,Annotation([Ljava.lang.String;@767191b1,[Ljava.lang.String;@34d52ecd,[Ljava.lang.String;@5d21202d),Annotation([Ljava.lang.String;@14b789f6,[Ljava.lang.String;@6eb17ec8,[Ledu.cmu.lti.nlp.amr.Dependency;@730f9695),Annotation([Ljava.lang.String;@277bf091,[Ljava.lang.String;@fab35b1,[Ljava.lang.String;@6a094db2),Annotation([Ljava.lang.String;@65bdd558,[Ljava.lang.String;@1dba4e06,[Ledu.cmu.lti.nlp.amr.Entity;@4beaf6bd))
AMR:
(威 / 威力, mod, 有 / 有-06)
(有 / 有-06, degree, 那 / 那么)
(有 / 有-06, domain, 你 / 你)

Decoded in 7,214 microseconds
Sentence: 你 连 脚 都 没有 … …

Spans:
Span 0-1:  你 => 你
Span 2-3:  脚 => 脚
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  脚 => 脚

Extra span: 都 => 都
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	连	_	AD	AD	_	3	advmod	_	_
3	脚	_	NN	NN	_	5	dep	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	0	root	_	_
6	…	_	PU	PU	_	5	punct	_	_
7	…	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),都,都,false), Span(2,3,List(1),脚,脚,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 脚, 0 -> 都),Map(你 -> 你, 脚 -> 脚, 都 -> 都))),[Ljava.lang.String;@6b2e46af,Annotation([Ljava.lang.String;@60325987,[Ljava.lang.String;@2f37f1f9,[Ljava.lang.String;@3374b5bc),Annotation([Ljava.lang.String;@2af69643,[Ljava.lang.String;@587a1cfb,[Ledu.cmu.lti.nlp.amr.Dependency;@48528634),Annotation([Ljava.lang.String;@5e1d03d7,[Ljava.lang.String;@4047d2d9,[Ljava.lang.String;@48d293ee),Annotation([Ljava.lang.String;@146dcfe6,[Ljava.lang.String;@22587507,[Ledu.cmu.lti.nlp.amr.Entity;@5c77ba8f))
AMR:
(你 / 你, location, 脚 / 脚)
(都 / 都, manner, 脚 / 脚)

Decoded in 3,993 microseconds
Sentence: 你 甚至 都 不 能 旅行 … ”

Spans:
Span 3-4:  不 => 不
Span 0-1:  你 => 你
Span 5-6:  旅行 => 旅行-01
Span 1-2:  甚至 => 甚至
Span 4-5:  能 => 能
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 5-6:  旅行 => 旅行-01
Oracle Span 1-2:  甚至 => 甚至
Oracle Span 4-5:  能 => 能-01
Oracle Span 2-3:  都 => 都

Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	甚至	_	AD	AD	_	5	advmod	_	_
3	都	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	能	_	VV	VV	_	0	root	_	_
6	旅行	_	NN	NN	_	7	nn	_	_
7	…	_	NN	NN	_	5	dobj	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 旅行-01, arg0, x12 / 你)
(x9 / 能-01, arg0, x11 / 旅行-01)
(x9 / 能-01, manner, x13 / 甚至)
(x9 / 能-01, manner, x14 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),旅行,旅行-01,false), Span(4,5,List(1),能,能,false), Span(3,4,List(2),不,不,false), Span(2,3,List(3),都,都,false), Span(1,2,List(4),甚至,甚至,false), Span(0,1,List(5),你,你,false)),Map(2 -> 不, 5 -> 你, 1 -> 能, 4 -> 甚至, 0 -> 旅行-01, 3 -> 都),Map(能 -> 能, 你 -> 你, 旅 -> 旅行-01, 不 -> 不, 都 -> 都, 甚 -> 甚至))),[Ljava.lang.String;@660f0c,Annotation([Ljava.lang.String;@7a0ef219,[Ljava.lang.String;@1b1f5012,[Ljava.lang.String;@7add323c),Annotation([Ljava.lang.String;@4a734c04,[Ljava.lang.String;@4760f169,[Ledu.cmu.lti.nlp.amr.Dependency;@261ea657),Annotation([Ljava.lang.String;@35c12c7a,[Ljava.lang.String;@658255aa,[Ljava.lang.String;@25290bca),Annotation([Ljava.lang.String;@76563d26,[Ljava.lang.String;@4ac86d6a,[Ledu.cmu.lti.nlp.amr.Entity;@3d904e9c))
AMR:
(不 / 不, manner, 甚 / 甚至)
(不 / 不, manner, 都 / 都)
(甚 / 甚至, poss, 你 / 你)
(能 / 能, accompanier, 旅 / 旅行-01)
(能 / 能, mod, 不 / 不)

Decoded in 10,746 microseconds
Sentence: “ 我 可以 把 你 带到 很 远 的 地方 去 ， 比 一 只 船 能 去 的 地方 还 要 远 。 ” 蛇 说道 。

Spans:
Span 4-5:  你 => 你
Span 17-18:  去 => 去-02
Span 10-11:  去 => 去-02
Span 14-15:  只 => 只
Span 2-3:  可以 => 可以-02
Span 19-20:  地方 => 地方
Span 9-10:  地方 => 地方
Span 5-6:  带到 => 带到-01
Span 6-7:  很 => 很
Span 1-2:  我 => 我
Span 16-17:  能 => 能
Span 15-16:  船 => 船
Span 25-26:  蛇 => 蛇
Span 21-22:  要 => 要-02
Span 26-27:  说道 => 说道
Span 20-21:  还 => 还
Span 22-23:  远 => 远
Span 7-8:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 10-11:  去 => 去-01
Oracle Span 2-3:  可以 => 可以-03
Oracle Span 9-10:  地方 => 地方
Oracle Span 19-20:  地方 => 地方
Oracle Span 5-6:  带到 => 带到-01
Oracle Span 6-7:  很 => 很
Oracle Span 16-17:  能 => 能-01
Oracle Span 15-16:  船 => 船
Oracle Span 25-26:  蛇 => 蛇
Oracle Span 26-27:  说道 => 说道-01
Oracle Span 7-8:  远 => 远-01

Incorrect span: 说道 => 说道
Extra span: 远 => 远
Extra span: 要 => 要-02
Extra span: 还 => 还
Extra span: 去 => 去-02
Incorrect span: 能 => 能
Extra span: 只 => 只
Incorrect span: 去 => 去-02
Incorrect span: 远 => 远
Incorrect span: 可以 => 可以-02
Extra span: 我 => 我
Missing span: 说道 => 说道-01
Missing span: 可以 => 可以-03
Missing span: 去 => 去-01
Missing span: 能 => 能-01
Missing span: 远 => 远-01
Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	我	_	PN	PN	_	11	nsubj	_	_
3	可以	_	VV	VV	_	11	mmod	_	_
4	把	_	BA	BA	_	11	ba	_	_
5	你	_	PN	PN	_	11	nsubj	_	_
6	带到	_	NN	NN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	远	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	地方	_	NN	NN	_	11	nsubj	_	_
11	去	_	VV	VV	_	0	root	_	_
12	,	_	PU	PU	_	11	punct	_	_
13	比	_	P	P	_	18	prep	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	只	_	M	M	_	16	clf	_	_
16	船	_	NN	NN	_	13	pobj	_	_
17	能	_	VV	VV	_	18	dep	_	_
18	去	_	VV	VV	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	地方	_	NN	NN	_	23	nsubj	_	_
21	还	_	AD	AD	_	23	advmod	_	_
22	要	_	AD	AD	_	23	advmod	_	_
23	远	_	VA	VA	_	11	conj	_	_
24	。	_	PU	PU	_	11	punct	_	_
25	”	_	PU	PU	_	11	punct	_	_
26	蛇	_	NN	NN	_	27	nsubj	_	_
27	说道	_	VV	VV	_	11	conj	_	_
28	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 蛇)
(x0 / 说道-01, arg1, x3 / 可以-03)
(x24 / 去-01, arg0, x26 / 船)
(x24 / 去-01, arg1, x23 / 地方)
(x25 / 能-01, arg0, x24 / 去-01)
(x3 / 可以-03, arg1, x5 / 带到-01)
(x5 / 带到-01, arg1, x7 / 你)
(x5 / 带到-01, arg2, x8 / 地方)
(x8 / 地方, compared-to, x23 / 地方)
(x8 / 地方, mod, x9 / 远-01)
(x9 / 远-01, degree, x10 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),说道,说道,false), Span(25,26,List(1),蛇,蛇,false), Span(22,23,List(2),远,远,false), Span(21,22,List(3),要,要-02,false), Span(20,21,List(4),还,还,false), Span(19,20,List(5),地方,地方,false), Span(17,18,List(6),去,去-02,false), Span(16,17,List(7),能,能,false), Span(15,16,List(8),船,船,false), Span(14,15,List(9),只,只,false), Span(10,11,List(10),去,去-02,false), Span(9,10,List(11),地方,地方,false), Span(7,8,List(12),远,远,false), Span(6,7,List(13),很,很,false), Span(5,6,List(14),带到,带到-01,false), Span(4,5,List(15),你,你,false), Span(2,3,List(16),可以,可以-02,false), Span(1,2,List(17),我,我,false)),Map(2 -> 远, 5 -> 地方, 12 -> 远, 15 -> 你, 8 -> 船, 7 -> 能, 17 -> 我, 1 -> 蛇, 4 -> 还, 11 -> 地方, 14 -> 带到-01, 6 -> 去-02, 0 -> 说道, 9 -> 只, 16 -> 可以-02, 3 -> 要-02, 10 -> 去-02, 13 -> 很),Map(地2 -> 地方, 我 -> 我, 要 -> 要-02, 能 -> 能, 你 -> 你, 很 -> 很, 远 -> 远, 去 -> 去-02, 远2 -> 远, 地 -> 地方, 说 -> 说道, 还 -> 还, 只 -> 只, 带 -> 带到-01, 船 -> 船, 蛇 -> 蛇, 去2 -> 去-02, 可 -> 可以-02))),[Ljava.lang.String;@508a65bf,Annotation([Ljava.lang.String;@17f2dd85,[Ljava.lang.String;@1e58512c,[Ljava.lang.String;@210308d5),Annotation([Ljava.lang.String;@22a736d7,[Ljava.lang.String;@23b8d9f3,[Ledu.cmu.lti.nlp.amr.Dependency;@7f353d99),Annotation([Ljava.lang.String;@4649d70a,[Ljava.lang.String;@5d43409a,[Ljava.lang.String;@38d17d80),Annotation([Ljava.lang.String;@6ede46f6,[Ljava.lang.String;@66273da0,[Ledu.cmu.lti.nlp.amr.Entity;@2127e66e))
AMR:
(可 / 可以-02, beneficiary, 我 / 我)
(地 / 地方, mod, 去 / 去-02)
(地2 / 地方, mod, 去2 / 去-02)
(地2 / 地方, mod, 远2 / 远)
(带 / 带到-01, location, 你 / 你)
(带 / 带到-01, location, 远2 / 远)
(带 / 带到-01, time, 可 / 可以-02)
(能 / 能, mod, 船 / 船)
(能 / 能, purpose, 去 / 去-02)
(船 / 船, manner, 只 / 只)
(船 / 船, mod, 去2 / 去-02)
(蛇 / 蛇, location, 远 / 远)
(要 / 要-02, location, 地 / 地方)
(要 / 要-02, location, 远 / 远)
(要 / 要-02, manner, 还 / 还)
(说 / 说道, topic, 蛇 / 蛇)
(远2 / 远, degree, 很 / 很)

Decoded in 99,223 microseconds
Sentence: 蛇 就 盘结 在 小 王子 的 脚腕子 上 ， 象 一 只 金 镯子 。

Spans:
Span 12-13:  只 => 只
Span 3-4:  在 => 在-01
Span 4-5:  小 => 小
Span 1-2:  就 => 就-01
Span 5-6:  王子 => 王子
Span 2-3:  盘结 => 盘结
Span 7-8:  脚腕子 => 脚腕子
Span 0-1:  蛇 => 蛇
Span 13-14:  金 => 金
Span 14-15:  镯子 => 镯子

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 2-3:  盘结 => 盘结
Oracle Span 7-8:  脚腕子 => 脚腕子
Oracle Span 0-1:  蛇 => 蛇
Oracle Span 13-14:  金 => 金
Oracle Span 14-15:  镯子 => 镯子

Extra span: 只 => 只
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 就 => 就-01
Missing span: 小 => 小-01
Dependencies:
1	蛇	_	NN	NN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	盘结	_	VV	VV	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	脚腕子	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	4	plmod	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	象	_	P	P	_	15	prep	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	金	_	NN	NN	_	11	pobj	_	_
15	镯子	_	VV	VV	_	3	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 镯子, mod, x16 / 金)
(x18 / 盘结, arg1, x20 / 脚腕子)
(x21 / 王子, mod, x22 / 小-01)
(x21 / 王子, part, x20 / 脚腕子)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),镯子,镯子,false), Span(13,14,List(1),金,金,false), Span(12,13,List(2),只,只,false), Span(7,8,List(3),脚腕子,脚腕子,false), Span(5,6,List(4),王子,王子,false), Span(4,5,List(5),小,小,false), Span(3,4,List(6),在,在-01,false), Span(2,3,List(7),盘结,盘结,false), Span(1,2,List(8),就,就-01,false), Span(0,1,List(9),蛇,蛇,false)),Map(2 -> 只, 5 -> 小, 8 -> 就-01, 7 -> 盘结, 1 -> 金, 4 -> 王子, 6 -> 在-01, 9 -> 蛇, 0 -> 镯子, 3 -> 脚腕子),Map(就 -> 就-01, 在 -> 在-01, 镯 -> 镯子, 王 -> 王子, 小 -> 小, 脚 -> 脚腕子, 只 -> 只, 蛇 -> 蛇, 盘 -> 盘结, 金 -> 金))),[Ljava.lang.String;@1229a2b7,Annotation([Ljava.lang.String;@e5cbff2,[Ljava.lang.String;@51c959a4,[Ljava.lang.String;@4fc3c165),Annotation([Ljava.lang.String;@10a0fe30,[Ljava.lang.String;@7b6860f9,[Ledu.cmu.lti.nlp.amr.Dependency;@60f70249),Annotation([Ljava.lang.String;@31ee2fdb,[Ljava.lang.String;@262816a8,[Ljava.lang.String;@1effd53c),Annotation([Ljava.lang.String;@46c269e0,[Ljava.lang.String;@6920614,[Ledu.cmu.lti.nlp.amr.Entity;@6069dd38))
AMR:
(在 / 在-01, ARG1, 小 / 小)
(在 / 在-01, ARG4, 蛇 / 蛇)
(在 / 在-01, ARG5, 盘 / 盘结)
(在 / 在-01, age, 镯 / 镯子)
(在 / 在-01, manner, 就 / 就-01)
(王 / 王子, mod, 小 / 小)
(王 / 王子, part, 脚 / 脚腕子)
(金 / 金, ARG4, 只 / 只)
(镯 / 镯子, mod, 金 / 金)

Decoded in 39,808 microseconds
Sentence: “ 被 我 碰触 的 人 ， 我 就 把 他 送回 老家 去 。 ”

Spans:
Span 5-6:  人 => 人
Span 10-11:  他 => 他
Span 13-14:  去 => 去-02
Span 8-9:  就 => 就-01
Span 7-8:  我 => 我
Span 2-3:  我 => 我
Span 3-4:  碰触 => 碰触-01
Span 12-13:  老家 => 老家
Span 11-12:  送回 => 送回-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  碰触 => 碰触-01
Oracle Span 12-13:  老家 => 老家
Oracle Span 11-12:  送回 => 送回-01

Extra span: 去 => 去-02
Extra span: 他 => 他
Extra span: 就 => 就-01
Extra span: 我 => 我
Dependencies:
1	“	_	PU	PU	_	14	punct	_	_
2	被	_	LB	LB	_	14	pass	_	_
3	我	_	PN	PN	_	14	nsubj	_	_
4	碰触	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	人	_	NN	NN	_	14	nsubj	_	_
7	,	_	PU	PU	_	14	punct	_	_
8	我	_	PN	PN	_	14	nsubj	_	_
9	就	_	AD	AD	_	14	advmod	_	_
10	把	_	BA	BA	_	14	ba	_	_
11	他	_	PN	PN	_	14	nsubj	_	_
12	送回	_	AD	AD	_	14	advmod	_	_
13	老家	_	AD	AD	_	14	advmod	_	_
14	去	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_
16	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x14 / 碰触-01, arg0, x15 / 我)
(x14 / 碰触-01, arg1, x16 / 人)
(x17 / 送回-01, arg2, x20 / 老家)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),去,去-02,false), Span(12,13,List(1),老家,老家,false), Span(11,12,List(2),送回,送回-01,false), Span(10,11,List(3),他,他,false), Span(8,9,List(4),就,就-01,false), Span(7,8,List(5),我,我,false), Span(5,6,List(6),人,人,false), Span(3,4,List(7),碰触,碰触-01,false), Span(2,3,List(8),我,我,false)),Map(2 -> 送回-01, 5 -> 我, 8 -> 我, 7 -> 碰触-01, 1 -> 老家, 4 -> 就-01, 6 -> 人, 0 -> 去-02, 3 -> 他),Map(就 -> 就-01, 我 -> 我, 我2 -> 我, 去 -> 去-02, 他 -> 他, 老 -> 老家, 人 -> 人, 碰 -> 碰触-01, 送 -> 送回-01))),[Ljava.lang.String;@5fa23c,Annotation([Ljava.lang.String;@558756be,[Ljava.lang.String;@433348bc,[Ljava.lang.String;@6d1dcdff),Annotation([Ljava.lang.String;@102ecc22,[Ljava.lang.String;@7ff35a3f,[Ledu.cmu.lti.nlp.amr.Dependency;@26dc9bd5),Annotation([Ljava.lang.String;@252dc8c4,[Ljava.lang.String;@43045f9f,[Ljava.lang.String;@2643d762),Annotation([Ljava.lang.String;@6403e24c,[Ljava.lang.String;@2f236de0,[Ledu.cmu.lti.nlp.amr.Entity;@4eba373c))
AMR:
(去 / 去-02, degree, 老 / 老家)
(就 / 就-01, beneficiary, 我 / 我)
(碰 / 碰触-01, example, 我2 / 我)
(碰 / 碰触-01, prep-through, 人 / 人)
(碰 / 碰触-01, purpose, 就 / 就-01)
(送 / 送回-01, beneficiary, 他 / 他)
(送 / 送回-01, manner, 就 / 就-01)
(送 / 送回-01, purpose, 去 / 去-02)

Decoded in 32,762 microseconds
Sentence: 蛇 还 说 ， “ 可是 你 是 纯洁 的 ， 而且 是 从 另 一 个 星球 上 来 的 … ”

Spans:
Span 6-7:  你 => 你
Span 14-15:  另 => 另
Span 17-18:  星球 => 星球
Span 12-13:  是 => 是-04
Span 7-8:  是 => 是-04
Span 19-20:  来 => 来-06
Span 8-9:  纯洁 => 纯洁-01
Span 0-1:  蛇 => 蛇
Span 2-3:  说 => 说-02
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 17-18:  星球 => 星球
Oracle Span 19-20:  来 => 来-01
Oracle Span 8-9:  纯洁 => 纯洁-01
Oracle Span 0-1:  蛇 => 蛇
Oracle Span 2-3:  说 => 说-01
Oracle Span 1-2:  还 => 还

Incorrect span: 来 => 来-06
Extra span: 另 => 另
Extra span: 是 => 是-04
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 来 => 来-01
Dependencies:
1	蛇	_	NR	NR	_	3	nsubj	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	8	punct	_	_
6	可是	_	AD	AD	_	8	advmod	_	_
7	你	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	3	ccomp	_	_
9	纯洁	_	JJ	JJ	_	8	dep	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	而且	_	CC	CC	_	8	cc	_	_
13	是	_	VC	VC	_	8	conj	_	_
14	从	_	P	P	_	20	prep	_	_
15	另	_	DT	DT	_	18	det	_	_
16	一	_	CD	CD	_	17	nummod	_	_
17	个	_	M	M	_	15	dep	_	_
18	星球	_	NN	NN	_	19	lobj	_	_
19	上	_	LC	LC	_	14	plmod	_	_
20	来	_	VV	VV	_	22	rcmod	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	…	_	NN	NN	_	13	attr	_	_
23	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 蛇)
(x0 / 说-01, manner, x2 / 还)
(x5 / 纯洁-01, arg0, x6 / 你)
(x9 / 来-01, arg2, x11 / 星球)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),来,来-06,false), Span(17,18,List(1),星球,星球,false), Span(14,15,List(2),另,另,false), Span(12,13,List(3),是,是-04,false), Span(8,9,List(4),纯洁,纯洁-01,false), Span(7,8,List(5),是,是-04,false), Span(6,7,List(6),你,你,false), Span(2,3,List(7),说,说-02,false), Span(1,2,List(8),还,还,false), Span(0,1,List(9),蛇,蛇,false)),Map(2 -> 另, 5 -> 是-04, 8 -> 还, 7 -> 说-02, 1 -> 星球, 4 -> 纯洁-01, 6 -> 你, 9 -> 蛇, 0 -> 来-06, 3 -> 是-04),Map(另 -> 另, 星 -> 星球, 来 -> 来-06, 你 -> 你, 纯 -> 纯洁-01, 还 -> 还, 说 -> 说-02, 蛇 -> 蛇, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@767a014e,Annotation([Ljava.lang.String;@d109c4f,[Ljava.lang.String;@3968bc60,[Ljava.lang.String;@26f46fa6),Annotation([Ljava.lang.String;@227a47,[Ljava.lang.String;@9596ce8,[Ledu.cmu.lti.nlp.amr.Dependency;@75ae4a1f),Annotation([Ljava.lang.String;@70228253,[Ljava.lang.String;@63c12e52,[Ljava.lang.String;@21bd20ee),Annotation([Ljava.lang.String;@26c47874,[Ljava.lang.String;@421056e5,[Ledu.cmu.lti.nlp.amr.Entity;@2849434b))
AMR:
(另 / 另, prep-on-behalf, 是 / 是-04)
(星 / 星球, mod, 另 / 另)
(是2 / 是-04, prep-within, 是 / 是-04)
(是2 / 是-04, weekday, 你 / 你)
(来 / 来-06, location, 星 / 星球)
(纯 / 纯洁-01, weekday, 是2 / 是-04)
(说 / 说-02, manner, 还 / 还)
(说 / 说-02, prep-within, 是2 / 是-04)
(说 / 说-02, source, 蛇 / 蛇)

Decoded in 33,261 microseconds
Sentence: 小 王子 什么 也 没有 回答 。

Spans:
Span 3-4:  也 => 也
Span 2-3:  什么 => 什么
Span 5-6:  回答 => 回答-01
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回答 => 回答-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Extra span: 也 => 也
Extra span: 什么 => 什么
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	6	nsubj	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	没有	_	VV	VV	_	6	dep	_	_
6	回答	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),回答,回答-01,false), Span(3,4,List(1),也,也,false), Span(2,3,List(2),什么,什么,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小,false)),Map(2 -> 什么, 1 -> 也, 4 -> 小, 0 -> 回答-01, 3 -> 王子),Map(也 -> 也, 王 -> 王子, 小 -> 小, 什 -> 什么, 回 -> 回答-01))),[Ljava.lang.String;@60bbacfc,Annotation([Ljava.lang.String;@65b97f47,[Ljava.lang.String;@255eaa6b,[Ljava.lang.String;@476fe690),Annotation([Ljava.lang.String;@7a0e7ecd,[Ljava.lang.String;@54e3658c,[Ledu.cmu.lti.nlp.amr.Dependency;@43e9089),Annotation([Ljava.lang.String;@3c5dbdf8,[Ljava.lang.String;@352c44a8,[Ljava.lang.String;@7aac8884),Annotation([Ljava.lang.String;@a66e580,[Ljava.lang.String;@5b852b49,[Ledu.cmu.lti.nlp.amr.Entity;@cdb2d95))
AMR:
(回 / 回答-01, manner, 也 / 也)
(回 / 回答-01, season, 什 / 什么)
(王 / 王子, ARG4, 什 / 什么)
(王 / 王子, mod, 小 / 小)

Decoded in 8,656 microseconds
Sentence: “ 在 这 个 花岗石 的 地球 上 ， 你 这么 弱小 ， 我 很 可怜 你 。

Spans:
Span 16-17:  你 => 你
Span 9-10:  你 => 你
Span 15-16:  可怜 => 可怜-01
Span 1-2:  在 => 在-01
Span 6-7:  地球 => 地球
Span 11-12:  弱小 => 弱小-01
Span 14-15:  很 => 很
Span 13-14:  我 => 我
Span 4-5:  花岗石 => 花岗石
Span 2-3:  这 => 这
Span 10-11:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  你 => 你
Oracle Span 15-16:  可怜 => 可怜-01
Oracle Span 6-7:  地球 => 地球
Oracle Span 11-12:  弱小 => 弱小-01
Oracle Span 14-15:  很 => 很
Oracle Span 13-14:  我 => 我
Oracle Span 4-5:  花岗石 => 花岗石
Oracle Span 2-3:  这 => 这
Oracle Span 10-11:  这么 => 这么

Extra span: 你 => 你
Extra span: 在 => 在-01
Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	在	_	P	P	_	12	prep	_	_
3	这	_	DT	DT	_	5	det	_	_
4	个	_	M	M	_	3	clf	_	_
5	花岗石	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	地球	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	2	plmod	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	你	_	PN	PN	_	12	nsubj	_	_
11	这么	_	AD	AD	_	12	advmod	_	_
12	弱小	_	VV	VV	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	我	_	PN	PN	_	16	nsubj	_	_
15	很	_	AD	AD	_	16	advmod	_	_
16	可怜	_	VV	VV	_	12	conj	_	_
17	你	_	PN	PN	_	16	dobj	_	_
18	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x15 / 弱小-01, arg0, x17 / 你)
(x15 / 弱小-01, degree, x16 / 这么)
(x15 / 弱小-01, location, x18 / 地球)
(x18 / 地球, mod, x19 / 花岗石)
(x18 / 地球, mod, x20 / 这)
(x21 / 可怜-01, arg0, x23 / 我)
(x21 / 可怜-01, degree, x22 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),你,你,false), Span(15,16,List(1),可怜,可怜-01,false), Span(14,15,List(2),很,很,false), Span(13,14,List(3),我,我,false), Span(11,12,List(4),弱小,弱小-01,false), Span(10,11,List(5),这么,这么,false), Span(9,10,List(6),你,你,false), Span(6,7,List(7),地球,地球,false), Span(4,5,List(8),花岗石,花岗石,false), Span(2,3,List(9),这,这,false), Span(1,2,List(10),在,在-01,false)),Map(2 -> 很, 5 -> 这么, 8 -> 花岗石, 7 -> 地球, 1 -> 可怜-01, 4 -> 弱小-01, 6 -> 你, 9 -> 这, 0 -> 你, 10 -> 在-01, 3 -> 我),Map(在 -> 在-01, 我 -> 我, 这 -> 这么, 很 -> 很, 你 -> 你, 弱 -> 弱小-01, 地 -> 地球, 花 -> 花岗石, 这2 -> 这, 你2 -> 你, 可 -> 可怜-01))),[Ljava.lang.String;@122d6c22,Annotation([Ljava.lang.String;@2f5ac102,[Ljava.lang.String;@5df778c3,[Ljava.lang.String;@895416d),Annotation([Ljava.lang.String;@71a06021,[Ljava.lang.String;@80bfdc6,[Ledu.cmu.lti.nlp.amr.Dependency;@6edcad64),Annotation([Ljava.lang.String;@4c6007fb,[Ljava.lang.String;@3e33d73e,[Ljava.lang.String;@6981f8f3),Annotation([Ljava.lang.String;@623dcf2a,[Ljava.lang.String;@2eae4349,[Ledu.cmu.lti.nlp.amr.Entity;@e84fb85))
AMR:
(可 / 可怜-01, degree, 很 / 很)
(可 / 可怜-01, poss, 我 / 我)
(可 / 可怜-01, prep-for, 你 / 你)
(可 / 可怜-01, time, 弱 / 弱小-01)
(在 / 在-01, mod, 这2 / 这)
(地 / 地球, mod, 花 / 花岗石)
(弱 / 弱小-01, degree, 这 / 这么)
(弱 / 弱小-01, location, 你2 / 你)
(弱 / 弱小-01, location, 地 / 地球)
(花 / 花岗石, location, 在 / 在-01)

Decoded in 39,099 microseconds
Sentence: 如果 你 非常 怀念 你 的 星球 ， 那时 我 可以 帮助 你 。

Spans:
Span 12-13:  你 => 你
Span 4-5:  你 => 你
Span 1-2:  你 => 你
Span 10-11:  可以 => 可以-02
Span 11-12:  帮助 => 帮助-01
Span 3-4:  怀念 => 怀念-01
Span 9-10:  我 => 我
Span 6-7:  星球 => 星球
Span 8-9:  那时 => 那时
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 10-11:  可以 => 可以-03
Oracle Span 11-12:  帮助 => 帮助-01
Oracle Span 3-4:  怀念 => 怀念-01
Oracle Span 9-10:  我 => 我
Oracle Span 6-7:  星球 => 星球
Oracle Span 8-9:  那时 => 那时
Oracle Span 2-3:  非常 => 非常

Extra span: 你 => 你
Incorrect span: 可以 => 可以-02
Extra span: 你 => 你
Missing span: 可以 => 可以-03
Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	怀念	_	VV	VV	_	12	pccomp	_	_
5	你	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	星球	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	那时	_	NT	NT	_	12	tmod	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	可以	_	VV	VV	_	12	mmod	_	_
12	帮助	_	VV	VV	_	0	root	_	_
13	你	_	PN	PN	_	12	ccomp	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x2 / 怀念-01, arg0, x3 / 你)
(x2 / 怀念-01, arg1, x4 / 星球)
(x2 / 怀念-01, degree, x6 / 非常)
(x7 / 可以-03, arg0, x8 / 帮助-01)
(x7 / 可以-03, time, x11 / 那时)
(x8 / 帮助-01, arg0, x9 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),你,你,false), Span(11,12,List(1),帮助,帮助-01,false), Span(10,11,List(2),可以,可以-02,false), Span(9,10,List(3),我,我,false), Span(8,9,List(4),那时,那时,false), Span(6,7,List(5),星球,星球,false), Span(4,5,List(6),你,你,false), Span(3,4,List(7),怀念,怀念-01,false), Span(2,3,List(8),非常,非常,false), Span(1,2,List(9),你,你,false)),Map(2 -> 可以-02, 5 -> 星球, 8 -> 非常, 7 -> 怀念-01, 1 -> 帮助-01, 4 -> 那时, 6 -> 你, 9 -> 你, 0 -> 你, 3 -> 我),Map(帮 -> 帮助-01, 星 -> 星球, 怀 -> 怀念-01, 我 -> 我, 你3 -> 你, 你 -> 你, 非 -> 非常, 你2 -> 你, 那 -> 那时, 可 -> 可以-02))),[Ljava.lang.String;@68a4dcc6,Annotation([Ljava.lang.String;@646c0a67,[Ljava.lang.String;@3804a9a8,[Ljava.lang.String;@117525fe),Annotation([Ljava.lang.String;@5f7989fa,[Ljava.lang.String;@5bc28f40,[Ledu.cmu.lti.nlp.amr.Dependency;@46963479),Annotation([Ljava.lang.String;@7e74a380,[Ljava.lang.String;@6dd1c3ed,[Ljava.lang.String;@22a6e998),Annotation([Ljava.lang.String;@55e42449,[Ljava.lang.String;@e57e5d6,[Ledu.cmu.lti.nlp.amr.Entity;@6dfa915a))
AMR:
(可 / 可以-02, op, 帮 / 帮助-01)
(可 / 可以-02, time, 那 / 那时)
(帮 / 帮助-01, ARG3, 你 / 你)
(帮 / 帮助-01, snt1, 我 / 我)
(怀 / 怀念-01, degree, 非 / 非常)
(怀 / 怀念-01, mode, 你3 / 你)
(怀 / 怀念-01, snt3, 星 / 星球)
(星 / 星球, condition, 帮 / 帮助-01)
(星 / 星球, poss, 你2 / 你)

Decoded in 30,944 microseconds
Sentence: 我 可以 … ”

Spans:
Span 1-2:  可以 => 可以-02
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  可以 => 可以-03
Oracle Span 0-1:  我 => 我

Incorrect span: 可以 => 可以-02
Missing span: 可以 => 可以-03
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	可以	_	VV	VV	_	0	root	_	_
3	…	_	NN	NN	_	2	dobj	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x5 / 可以-03, arg0, x6 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),可以,可以-02,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 可以-02),Map(我 -> 我, 可 -> 可以-02))),[Ljava.lang.String;@78054f54,Annotation([Ljava.lang.String;@cb7fa71,[Ljava.lang.String;@3dffc764,[Ljava.lang.String;@4b6e1c0),Annotation([Ljava.lang.String;@561b61ed,[Ljava.lang.String;@654c7d2d,[Ledu.cmu.lti.nlp.amr.Dependency;@26cb5207),Annotation([Ljava.lang.String;@15400fff,[Ljava.lang.String;@18d910b3,[Ljava.lang.String;@1e7ab390),Annotation([Ljava.lang.String;@625d9132,[Ljava.lang.String;@77774571,[Ledu.cmu.lti.nlp.amr.Entity;@277b8fa4))
AMR:
(可 / 可以-02, manner, 我 / 我)

Decoded in 2,717 microseconds
Sentence: “ 啊 ！

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@6cd64ee8,Annotation([Ljava.lang.String;@620c8641,[Ljava.lang.String;@2f1d0bbc,[Ljava.lang.String;@5460b754),Annotation([Ljava.lang.String;@a9f023e,[Ljava.lang.String;@c27a3a2,[Ledu.cmu.lti.nlp.amr.Dependency;@4b200971),Annotation([Ljava.lang.String;@1a2bcd56,[Ljava.lang.String;@68d7a2df,[Ljava.lang.String;@59dc36d4),Annotation([Ljava.lang.String;@12fcc71f,[Ljava.lang.String;@5679e96b,[Ledu.cmu.lti.nlp.amr.Entity;@3ed7821))
AMR:


Decoded in 1,146 microseconds
Sentence: 我 很 明白 你 的 意思 。 ” 小 王子 说 ，

Spans:
Span 3-4:  你 => 你
Span 8-9:  小 => 小
Span 1-2:  很 => 很
Span 5-6:  意思 => 意思-01
Span 0-1:  我 => 我
Span 2-3:  明白 => 明白-01
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  小 => 小-01
Oracle Span 1-2:  很 => 很
Oracle Span 5-6:  意思 => 意思-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	10	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	意思	_	PU	PU	_	7	punct	_	_
7	。	_	NN	NN	_	10	nn	_	_
8	”	_	PU	PU	_	7	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	3	dobj	_	_
11	说	_	VV	VV	_	3	dep	_	_
12	,	_	VA	VA	_	11	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, arg0, x6 / 我)
(x4 / 明白-01, arg1, x7 / 意思-01)
(x4 / 明白-01, degree, x5 / 很)
(x7 / 意思-01, poss, x8 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),王子,王子,false), Span(8,9,List(2),小,小,false), Span(5,6,List(3),意思,意思-01,false), Span(3,4,List(4),你,你,false), Span(2,3,List(5),明白,明白-01,false), Span(1,2,List(6),很,很,false), Span(0,1,List(7),我,我,false)),Map(2 -> 小, 5 -> 明白-01, 7 -> 我, 1 -> 王子, 4 -> 你, 6 -> 很, 0 -> 说-02, 3 -> 意思-01),Map(我 -> 我, 很 -> 很, 你 -> 你, 王 -> 王子, 意 -> 意思-01, 小 -> 小, 说 -> 说-02, 明 -> 明白-01))),[Ljava.lang.String;@3bbf841e,Annotation([Ljava.lang.String;@4f0f7849,[Ljava.lang.String;@56a4f272,[Ljava.lang.String;@3ee0b4f7),Annotation([Ljava.lang.String;@79b84841,[Ljava.lang.String;@4d41ba0f,[Ledu.cmu.lti.nlp.amr.Dependency;@3c87e6b7),Annotation([Ljava.lang.String;@77bbadc,[Ljava.lang.String;@3c3a0032,[Ljava.lang.String;@7ceb4478),Annotation([Ljava.lang.String;@7fdab70c,[Ljava.lang.String;@25ad4f71,[Ledu.cmu.lti.nlp.amr.Entity;@49faf066))
AMR:
(意 / 意思-01, poss, 你 / 你)
(明 / 明白-01, degree, 很 / 很)
(明 / 明白-01, mode, 意 / 意思-01)
(明 / 明白-01, polite, 我 / 我)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, polite, 意 / 意思-01)

Decoded in 18,407 microseconds
Sentence: “ 但是 你 为什么 说话 总是 象 让 人 猜 谜语 似的 ？ ”

Spans:
Span 8-9:  人 => 人
Span 2-3:  你 => 你
Span 5-6:  总是 => 总是
Span 9-10:  猜 => 猜-01
Span 7-8:  让 => 让-01
Span 4-5:  说话 => 说话-01
Span 10-11:  谜语 => 谜语

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  人 => 人
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  总是 => 总是
Oracle Span 9-10:  猜 => 猜-01
Oracle Span 7-8:  让 => 让-02
Oracle Span 4-5:  说话 => 说话-01
Oracle Span 10-11:  谜语 => 谜语

Incorrect span: 让 => 让-01
Missing span: 让 => 让-02
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	但是	_	AD	AD	_	7	advmod	_	_
3	你	_	PN	PN	_	7	nsubj	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	说话	_	VV	VV	_	7	mmod	_	_
6	总是	_	AD	AD	_	7	advmod	_	_
7	象	_	VA	VA	_	8	conj	_	_
8	让	_	VV	VV	_	0	root	_	_
9	人	_	NN	NN	_	8	dobj	_	_
10	猜	_	VV	VV	_	8	dep	_	_
11	谜语	_	NN	NN	_	12	nn	_	_
12	似的	_	NN	NN	_	10	dobj	_	_
13	？	_	PU	PU	_	8	punct	_	_
14	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x18 / 说话-01, arg0, x19 / 你)
(x21 / 让-02, arg1, x22 / 人)
(x21 / 让-02, arg2, x23 / 猜-01)
(x23 / 猜-01, arg1, x25 / 谜语)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),谜语,谜语,false), Span(9,10,List(1),猜,猜-01,false), Span(8,9,List(2),人,人,false), Span(7,8,List(3),让,让-01,false), Span(5,6,List(4),总是,总是,false), Span(4,5,List(5),说话,说话-01,false), Span(2,3,List(6),你,你,false)),Map(2 -> 人, 5 -> 说话-01, 1 -> 猜-01, 4 -> 总是, 6 -> 你, 0 -> 谜语, 3 -> 让-01),Map(猜 -> 猜-01, 你 -> 你, 总 -> 总是, 谜 -> 谜语, 说 -> 说话-01, 让 -> 让-01, 人 -> 人))),[Ljava.lang.String;@6f94a5a5,Annotation([Ljava.lang.String;@455c1d8c,[Ljava.lang.String;@a451491,[Ljava.lang.String;@1422ac7f),Annotation([Ljava.lang.String;@5e519ad3,[Ljava.lang.String;@7bc44ce8,[Ledu.cmu.lti.nlp.amr.Dependency;@59072e9d),Annotation([Ljava.lang.String;@58472096,[Ljava.lang.String;@a92be4f,[Ljava.lang.String;@53e800f9),Annotation([Ljava.lang.String;@337bbfdf,[Ljava.lang.String;@52d97ab6,[Ledu.cmu.lti.nlp.amr.Entity;@4da6d664))
AMR:
(人 / 人, location, 猜 / 猜-01)
(总 / 总是, location, 说 / 说话-01)
(猜 / 猜-01, prep-through, 谜 / 谜语)
(让 / 让-01, degree, 说 / 说话-01)
(让 / 让-01, prep-through, 猜 / 猜-01)
(说 / 说话-01, conj-as-if, 你 / 你)

Decoded in 15,730 microseconds
Sentence: “ 这些 谜语 我 都 能 解开 的 。 ” 蛇 说 。

Spans:
Span 3-4:  我 => 我
Span 5-6:  能 => 能
Span 10-11:  蛇 => 蛇
Span 6-7:  解开 => 解开-01
Span 11-12:  说 => 说-02
Span 2-3:  谜语 => 谜语
Span 1-2:  这些 => 这些
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  能 => 能-01
Oracle Span 10-11:  蛇 => 蛇
Oracle Span 6-7:  解开 => 解开-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 2-3:  谜语 => 谜语
Oracle Span 1-2:  这些 => 这些
Oracle Span 4-5:  都 => 都

Incorrect span: 说 => 说-02
Incorrect span: 能 => 能
Missing span: 说 => 说-01
Missing span: 能 => 能-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这些	_	PN	PN	_	3	nsubj	_	_
3	谜语	_	VV	VV	_	12	dep	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	能	_	VV	VV	_	3	ccomp	_	_
7	解开	_	VA	VA	_	6	dobj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	3	punct	_	_
11	蛇	_	NR	NR	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 蛇)
(x0 / 说-01, arg1, x3 / 能-01)
(x3 / 能-01, arg0, x4 / 解开-01)
(x3 / 能-01, manner, x5 / 都)
(x4 / 解开-01, arg0, x6 / 我)
(x4 / 解开-01, arg1, x7 / 谜语)
(x7 / 谜语, mod, x8 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),蛇,蛇,false), Span(6,7,List(2),解开,解开-01,false), Span(5,6,List(3),能,能,false), Span(4,5,List(4),都,都,false), Span(3,4,List(5),我,我,false), Span(2,3,List(6),谜语,谜语,false), Span(1,2,List(7),这些,这些,false)),Map(2 -> 解开-01, 5 -> 我, 7 -> 这些, 1 -> 蛇, 4 -> 都, 6 -> 谜语, 0 -> 说-02, 3 -> 能),Map(我 -> 我, 这 -> 这些, 能 -> 能, 谜 -> 谜语, 解 -> 解开-01, 说 -> 说-02, 蛇 -> 蛇, 都 -> 都))),[Ljava.lang.String;@5e5af8e1,Annotation([Ljava.lang.String;@30b131b2,[Ljava.lang.String;@2924f1d8,[Ljava.lang.String;@524a076e),Annotation([Ljava.lang.String;@5b5e7036,[Ljava.lang.String;@62dbe64e,[Ledu.cmu.lti.nlp.amr.Dependency;@6cff61fc),Annotation([Ljava.lang.String;@6e0c6a7a,[Ljava.lang.String;@467b684d,[Ljava.lang.String;@7baf1f5a),Annotation([Ljava.lang.String;@6cc86152,[Ljava.lang.String;@611a990b,[Ledu.cmu.lti.nlp.amr.Entity;@7cbeac65))
AMR:
(能 / 能, manner, 都 / 都)
(能 / 能, poss, 我 / 我)
(解 / 解开-01, degree, 能 / 能)
(解 / 解开-01, time, 谜 / 谜语)
(说 / 说-02, degree, 解 / 解开-01)
(说 / 说-02, topic, 蛇 / 蛇)
(谜 / 谜语, mod, 这 / 这些)

Decoded in 22,190 microseconds
Sentence: 于是 他们 又 都 沉默 起来 。

Spans:
Span 1-2:  他们 => 他们
Span 2-3:  又 => 又
Span 4-5:  沉默 => 沉默-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 2-3:  又 => 又
Oracle Span 4-5:  沉默 => 沉默-01
Oracle Span 3-4:  都 => 都

Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	他们	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	都	_	AD	AD	_	6	advmod	_	_
5	沉默	_	VA	VA	_	6	dep	_	_
6	起来	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x5 / 他们)
(x2 / 沉默-01, manner, x3 / 都)
(x2 / 沉默-01, manner, x4 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),沉默,沉默-01,false), Span(3,4,List(1),都,都,false), Span(2,3,List(2),又,又,false), Span(1,2,List(3),他们,他们,false)),Map(2 -> 又, 1 -> 都, 0 -> 沉默-01, 3 -> 他们),Map(又 -> 又, 沉 -> 沉默-01, 他 -> 他们, 都 -> 都))),[Ljava.lang.String;@7fe82967,Annotation([Ljava.lang.String;@50850539,[Ljava.lang.String;@65e21ce3,[Ljava.lang.String;@6c3659be),Annotation([Ljava.lang.String;@522bf64e,[Ljava.lang.String;@2aff9dff,[Ledu.cmu.lti.nlp.amr.Dependency;@5f0f9947),Annotation([Ljava.lang.String;@1aad0b1,[Ljava.lang.String;@c3edf4c,[Ljava.lang.String;@5af8bb51),Annotation([Ljava.lang.String;@799ed4e8,[Ljava.lang.String;@2e66bc32,[Ledu.cmu.lti.nlp.amr.Entity;@54d8c20d))
AMR:
(沉 / 沉默-01, direction, 他 / 他们)
(沉 / 沉默-01, manner, 又 / 又)
(沉 / 沉默-01, manner, 都 / 都)

Decoded in 7,300 microseconds
Sentence: XVIII 。

Spans:
Span 0-1:  XVIII => XVIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XVIII => XVIII

Dependencies:
1	XVIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XVIII,XVIII,false)),Map(0 -> XVIII),Map(x -> XVIII))),[Ljava.lang.String;@4b65d9f4,Annotation([Ljava.lang.String;@44536de4,[Ljava.lang.String;@5fcfde70,[Ljava.lang.String;@4d95a72e),Annotation([Ljava.lang.String;@28da7d11,[Ljava.lang.String;@77b919a3,[Ledu.cmu.lti.nlp.amr.Dependency;@5624657a),Annotation([Ljava.lang.String;@36681447,[Ljava.lang.String;@4d21c56e,[Ljava.lang.String;@726aa968),Annotation([Ljava.lang.String;@7100dea,[Ljava.lang.String;@712cfb63,[Ledu.cmu.lti.nlp.amr.Entity;@32e54a9d))
AMR:


Decoded in 1,273 microseconds
Sentence: 小 王子 穿过 沙漠 。 他 只 见 过 一 朵 花 ，

Spans:
Span 5-6:  他 => 他
Span 6-7:  只 => 只
Span 0-1:  小 => 小
Span 3-4:  沙漠 => 沙漠
Span 1-2:  王子 => 王子
Span 2-3:  穿过 => 穿过-01
Span 11-12:  花 => 花-01
Span 7-8:  见 => 见-01
Span 8-9:  过 => 过-01

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 6-7:  只 => 只
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  沙漠 => 沙漠
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  穿过 => 穿过-01
Oracle Span 11-12:  花 => 花
Oracle Span 7-8:  见 => 见-01

Incorrect span: 花 => 花-01
Extra span: 过 => 过-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 花 => 花
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	穿过	_	VV	VV	_	0	root	_	_
4	沙漠	_	NN	NN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	见	_	VV	VV	_	3	conj	_	_
9	过	_	AS	AS	_	8	asp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	朵	_	M	M	_	12	clf	_	_
12	花	_	NN	NN	_	8	dobj	_	_
13	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 穿过-01, arg0, x3 / 王子)
(x2 / 穿过-01, arg1, x5 / 沙漠)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 见-01, arg0, x8 / 他)
(x6 / 见-01, arg1, x9 / 花)
(x6 / 见-01, manner, x7 / 只)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),花,花-01,false), Span(8,9,List(1),过,过-01,false), Span(7,8,List(2),见,见-01,false), Span(6,7,List(3),只,只,false), Span(5,6,List(4),他,他,false), Span(3,4,List(5),沙漠,沙漠,false), Span(2,3,List(6),穿过,穿过-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 见-01, 5 -> 沙漠, 8 -> 小, 7 -> 王子, 1 -> 过-01, 4 -> 他, 6 -> 穿过-01, 0 -> 花-01, 3 -> 只),Map(穿 -> 穿过-01, 过 -> 过-01, 王 -> 王子, 他 -> 他, 小 -> 小, 花 -> 花-01, 只 -> 只, 沙 -> 沙漠, 见 -> 见-01))),[Ljava.lang.String;@15639440,Annotation([Ljava.lang.String;@121bb45b,[Ljava.lang.String;@4faa298,[Ljava.lang.String;@1cd3b138),Annotation([Ljava.lang.String;@151bf776,[Ljava.lang.String;@5a6d30e2,[Ledu.cmu.lti.nlp.amr.Dependency;@b52b755),Annotation([Ljava.lang.String;@a098d76,[Ljava.lang.String;@40e37b06,[Ljava.lang.String;@733aa9d8),Annotation([Ljava.lang.String;@6dcc40f5,[Ljava.lang.String;@2b680207,[Ledu.cmu.lti.nlp.amr.Entity;@70887727))
AMR:
(王 / 王子, mod, 小 / 小)
(穿 / 穿过-01, ARG3, 过 / 过-01)
(穿 / 穿过-01, direction, 王 / 王子)
(穿 / 穿过-01, quant, 沙 / 沙漠)
(花 / 花-01, ARG0, 过 / 过-01)
(见 / 见-01, manner, 只 / 只)
(过 / 过-01, ARG1, 见 / 见-01)
(过 / 过-01, ARG5, 他 / 他)

Decoded in 37,370 microseconds
Sentence: 一 个 有 着 三 枚 花瓣 的 花朵 ， 一 朵 很 不 起眼 的 小花 …

Spans:
Span 13-14:  不 => 不
Span 12-13:  很 => 很
Span 2-3:  有 => 有-06
Span 8-9:  花朵 => 花朵
Span 6-7:  花瓣 => 花瓣
Span 14-15:  起眼 => 起眼-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  很 => 很
Oracle Span 2-3:  有 => 有-01
Oracle Span 8-9:  花朵 => 花朵
Oracle Span 6-7:  花瓣 => 花瓣
Oracle Span 14-15:  起眼 => 起眼-01

Extra span: 不 => 不
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	一	_	CD	CD	_	2	nummod	_	_
2	个	_	M	M	_	3	dep	_	_
3	有	_	VE	VE	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	三	_	CD	CD	_	6	nummod	_	_
6	枚	_	M	M	_	7	clf	_	_
7	花瓣	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	花朵	_	NN	NN	_	3	dobj	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	一	_	CD	CD	_	12	nsubj	_	_
12	朵	_	VV	VV	_	3	conj	_	_
13	很	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	起眼	_	VV	VV	_	12	dobj	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	小花	_	PU	PU	_	3	punct	_	_
18	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 起眼-01, degree, x17 / 很)
(x2 / 有-01, arg0, x3 / 花朵)
(x2 / 有-01, arg1, x4 / 花瓣)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),起眼,起眼-01,false), Span(13,14,List(1),不,不,false), Span(12,13,List(2),很,很,false), Span(8,9,List(3),花朵,花朵,false), Span(6,7,List(4),花瓣,花瓣,false), Span(2,3,List(5),有,有-06,false)),Map(2 -> 很, 5 -> 有-06, 1 -> 不, 4 -> 花瓣, 0 -> 起眼-01, 3 -> 花朵),Map(起 -> 起眼-01, 很 -> 很, 花2 -> 花瓣, 花 -> 花朵, 不 -> 不, 有 -> 有-06))),[Ljava.lang.String;@56da7487,Annotation([Ljava.lang.String;@599e4d41,[Ljava.lang.String;@328d044f,[Ljava.lang.String;@10f7c76),Annotation([Ljava.lang.String;@4745e9c,[Ljava.lang.String;@2f2bff16,[Ledu.cmu.lti.nlp.amr.Dependency;@75de29c0),Annotation([Ljava.lang.String;@fc807c1,[Ljava.lang.String;@296e281a,[Ljava.lang.String;@59cda16e),Annotation([Ljava.lang.String;@5dd903be,[Ljava.lang.String;@12e0f1cb,[Ledu.cmu.lti.nlp.amr.Entity;@4a163575))
AMR:
(不 / 不, domain, 花 / 花朵)
(花 / 花朵, manner, 花2 / 花瓣)
(花2 / 花瓣, topic, 有 / 有-06)
(起 / 起眼-01, degree, 很 / 很)
(起 / 起眼-01, manner, 不 / 不)

Decoded in 15,781 microseconds
Sentence: “ 你 好 。 ” 小 王子 说 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),好,好-04,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 说-02, 3 -> 好-04),Map(你 -> 你, 王 -> 王子, 小 -> 小, 好 -> 好-04, 说 -> 说-02))),[Ljava.lang.String;@7e642b88,Annotation([Ljava.lang.String;@6b350309,[Ljava.lang.String;@7ecec90d,[Ljava.lang.String;@588f63c),Annotation([Ljava.lang.String;@5a6fa56e,[Ljava.lang.String;@1981d861,[Ledu.cmu.lti.nlp.amr.Dependency;@118ffcfd),Annotation([Ljava.lang.String;@53f4c1e6,[Ljava.lang.String;@74174a23,[Ljava.lang.String;@6342d610),Annotation([Ljava.lang.String;@dc4a691,[Ljava.lang.String;@784abd3e,[Ledu.cmu.lti.nlp.amr.Entity;@36c2b646))
AMR:
(好 / 好-04, location, 你 / 你)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 好 / 好-04)
(说 / 说-02, degree, 小 / 小)

Decoded in 8,289 microseconds
Sentence: “ 你 好 。 ” 花 说 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  花 => 花-01
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  花 => 花
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 花 => 花-01
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说 => 说-01
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	花	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),花,花-01,false), Span(2,3,List(2),好,好-04,false), Span(1,2,List(3),你,你,false)),Map(2 -> 好-04, 1 -> 花-01, 0 -> 说-02, 3 -> 你),Map(你 -> 你, 花 -> 花-01, 好 -> 好-04, 说 -> 说-02))),[Ljava.lang.String;@434514d8,Annotation([Ljava.lang.String;@6b1dc20f,[Ljava.lang.String;@4613311f,[Ljava.lang.String;@6540cf1d),Annotation([Ljava.lang.String;@ec8f4b9,[Ljava.lang.String;@bc042d5,[Ledu.cmu.lti.nlp.amr.Dependency;@5484117b),Annotation([Ljava.lang.String;@37df14d1,[Ljava.lang.String;@7efb53af,[Ljava.lang.String;@7724704f),Annotation([Ljava.lang.String;@3dfa819,[Ljava.lang.String;@4ce94d2f,[Ledu.cmu.lti.nlp.amr.Entity;@68ab0936))
AMR:
(好 / 好-04, location, 你 / 你)
(好 / 好-04, purpose, 花 / 花-01)
(说 / 说-02, degree, 花 / 花-01)

Decoded in 5,886 microseconds
Sentence: “ 人 在 什么 地方 ？ ” 小 王子 有 礼貌 地 问道 。

Spans:
Span 1-2:  人 => 人
Span 3-4:  什么 => 什么
Span 2-3:  在 => 在-01
Span 11-12:  地 => 地
Span 4-5:  地方 => 地方
Span 7-8:  小 => 小
Span 9-10:  有 => 有-06
Span 8-9:  王子 => 王子
Span 10-11:  礼貌 => 礼貌-01
Span 12-13:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人 => 人
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  有 => 有-05
Oracle Span 8-9:  王子 => 王子
Oracle Span 10-11:  礼貌 => 礼貌-01
Oracle Span 12-13:  问道 => 问道-01

Extra span: 地 => 地
Incorrect span: 有 => 有-06
Incorrect span: 小 => 小
Extra span: 地方 => 地方
Extra span: 什么 => 什么
Extra span: 在 => 在-01
Missing span: 有 => 有-05
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人	_	NN	NN	_	3	nsubj	_	_
3	在	_	VV	VV	_	9	rcmod	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	地方	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	13	nsubj	_	_
10	有	_	VE	VE	_	13	dvpmod	_	_
11	礼貌	_	NN	NN	_	10	dobj	_	_
12	地	_	DEV	DEV	_	10	dvpm	_	_
13	问道	_	VV	VV	_	0	root	_	_
14	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 问道-01, arg1, x7 / 人)
(x0 / 问道-01, manner, x10 / 有-05)
(x10 / 有-05, arg0, x11 / 王子)
(x10 / 有-05, arg1, x13 / 礼貌-01)
(x11 / 王子, mod, x12 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),问道,问道-01,false), Span(11,12,List(1),地,地,false), Span(10,11,List(2),礼貌,礼貌-01,false), Span(9,10,List(3),有,有-06,false), Span(8,9,List(4),王子,王子,false), Span(7,8,List(5),小,小,false), Span(4,5,List(6),地方,地方,false), Span(3,4,List(7),什么,什么,false), Span(2,3,List(8),在,在-01,false), Span(1,2,List(9),人,人,false)),Map(2 -> 礼貌-01, 5 -> 小, 8 -> 在-01, 7 -> 什么, 1 -> 地, 4 -> 王子, 6 -> 地方, 9 -> 人, 0 -> 问道-01, 3 -> 有-06),Map(礼 -> 礼貌-01, 在 -> 在-01, 地2 -> 地方, 王 -> 王子, 小 -> 小, 地 -> 地, 什 -> 什么, 问 -> 问道-01, 人 -> 人, 有 -> 有-06))),[Ljava.lang.String;@3cd9aa64,Annotation([Ljava.lang.String;@42b84286,[Ljava.lang.String;@443effcb,[Ljava.lang.String;@74ecacc3),Annotation([Ljava.lang.String;@517a2b0,[Ljava.lang.String;@53b7ce6,[Ledu.cmu.lti.nlp.amr.Dependency;@36480b2d),Annotation([Ljava.lang.String;@27d33393,[Ljava.lang.String;@1f6917fb,[Ljava.lang.String;@41eb94bc),Annotation([Ljava.lang.String;@378cfecf,[Ljava.lang.String;@97d0c06,[Ledu.cmu.lti.nlp.amr.Entity;@5e7c141d))
AMR:
(在 / 在-01, degree, 人 / 人)
(地 / 地, mod, 礼 / 礼貌-01)
(地2 / 地方, mod, 什 / 什么)
(地2 / 地方, mod, 在 / 在-01)
(有 / 有-06, beneficiary, 王 / 王子)
(有 / 有-06, location, 地2 / 地方)
(王 / 王子, mod, 小 / 小)
(礼 / 礼貌-01, manner, 有 / 有-06)
(问 / 问道-01, manner, 地 / 地)

Decoded in 30,049 microseconds
Sentence: 有 一 天 ， 花 曾 看见 一 支 骆驼 商队 走 过 ：

Spans:
Span 10-11:  商队 => 商队
Span 2-3:  天 => (temporal-quantity :unit 天)
Span 5-6:  曾 => 曾
Span 0-1:  有 => 有-06
Span 6-7:  看见 => 看见-01
Span 4-5:  花 => 花-01
Span 11-12:  走 => 走-05
Span 12-13:  过 => 过-01
Span 9-10:  骆驼 => 骆驼

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  商队 => 商队
Oracle Span 5-6:  曾 => 曾
Oracle Span 6-7:  看见 => 看见-01
Oracle Span 4-5:  花 => 花-01
Oracle Span 9-10:  骆驼 => 骆驼

Extra span: 过 => 过-01
Extra span: 走 => 走-05
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 有 => 有-06
Dependencies:
1	有	_	VE	VE	_	0	root	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	花	_	NN	NN	_	7	nsubj	_	_
6	曾	_	AD	AD	_	7	advmod	_	_
7	看见	_	VV	VV	_	1	dep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	支	_	M	M	_	10	clf	_	_
10	骆驼	_	NN	NN	_	7	dobj	_	_
11	商队	_	AD	AD	_	12	advmod	_	_
12	走	_	VV	VV	_	1	dep	_	_
13	过	_	AS	AS	_	12	asp	_	_
14	：	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 看见-01, arg0, x2 / 花-01)
(x0 / 看见-01, time, x3 / 曾)
(x5 / 商队, mod, x6 / 骆驼)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),过,过-01,false), Span(11,12,List(1),走,走-05,false), Span(10,11,List(2),商队,商队,false), Span(9,10,List(3),骆驼,骆驼,false), Span(6,7,List(4),看见,看见-01,false), Span(5,6,List(5),曾,曾,false), Span(4,5,List(6),花,花-01,false), Span(2,3,List(8, 7),天,(temporal-quantity :unit 天),false), Span(0,1,List(9),有,有-06,false)),Map(2 -> 商队, 5 -> 曾, 8 -> 天, 7 -> temporal-quantity, 1 -> 走-05, 4 -> 看见-01, 6 -> 花-01, 9 -> 有-06, 0 -> 过-01, 3 -> 骆驼),Map(t -> temporal-quantity, 过 -> 过-01, 骆 -> 骆驼, 商 -> 商队, 曾 -> 曾, 天 -> 天, 花 -> 花-01, 看 -> 看见-01, 走 -> 走-05, 有 -> 有-06))),[Ljava.lang.String;@43af351a,Annotation([Ljava.lang.String;@1305c126,[Ljava.lang.String;@72f9f27c,[Ljava.lang.String;@4c1bdcc2),Annotation([Ljava.lang.String;@762637be,[Ljava.lang.String;@4b97c4ad,[Ledu.cmu.lti.nlp.amr.Dependency;@7640a5b1),Annotation([Ljava.lang.String;@642f9a77,[Ljava.lang.String;@23f3da8b,[Ljava.lang.String;@5634d0f4),Annotation([Ljava.lang.String;@252a8aae,[Ljava.lang.String;@3d4e405e,[Ledu.cmu.lti.nlp.amr.Entity;@54e2fe))
AMR:
(t / temporal-quantity, time, 有 / 有-06)
(t / temporal-quantity, unit, 天 / 天)
(商 / 商队, mod, 骆 / 骆驼)
(商 / 商队, poss, 看 / 看见-01)
(看 / 看见-01, time, 曾 / 曾)
(看 / 看见-01, time, 花 / 花-01)
(花 / 花-01, time, 有 / 有-06)
(走 / 走-05, time, 商 / 商队)
(过 / 过-01, time, 走 / 走-05)

Decoded in 28,588 microseconds
Sentence: “ 人 吗 ？

Spans:
Span 1-2:  人 => 人

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  人 => 人

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	人	_	NN	NN	_	0	root	_	_
3	吗	_	SP	SP	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),人,人,false)),Map(0 -> 人),Map(人 -> 人))),[Ljava.lang.String;@70972170,Annotation([Ljava.lang.String;@119aa36,[Ljava.lang.String;@4e1a46fb,[Ljava.lang.String;@69fe0ed4),Annotation([Ljava.lang.String;@20ab3e3a,[Ljava.lang.String;@6caf7803,[Ledu.cmu.lti.nlp.amr.Dependency;@709ed6f3),Annotation([Ljava.lang.String;@698fee9a,[Ljava.lang.String;@102c577f,[Ljava.lang.String;@7d44a19),Annotation([Ljava.lang.String;@1fb2d5e,[Ljava.lang.String;@1716e8c5,[Ledu.cmu.lti.nlp.amr.Entity;@6573d2f7))
AMR:


Decoded in 1,773 microseconds
Sentence: 我 想 大约 有 六七 个 人 ，

Spans:
Span 6-7:  人 => 人
Span 2-3:  大约 => 大约
Span 1-2:  想 => 想-05
Span 0-1:  我 => 我
Span 3-4:  有 => 有-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 2-3:  大约 => 大约
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  有 => 有-02

Incorrect span: 有 => 有-06
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 有 => 有-02
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	大约	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	2	ccomp	_	_
5	六七	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	人	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 我)
(x0 / 想-01, arg1, x3 / 有-02)
(x3 / 有-02, arg1, x5 / 人)
(x3 / 有-02, manner, x4 / 大约)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),人,人,false), Span(3,4,List(1),有,有-06,false), Span(2,3,List(2),大约,大约,false), Span(1,2,List(3),想,想-05,false), Span(0,1,List(4),我,我,false)),Map(2 -> 大约, 1 -> 有-06, 4 -> 我, 0 -> 人, 3 -> 想-05),Map(我 -> 我, 大 -> 大约, 想 -> 想-05, 人 -> 人, 有 -> 有-06))),[Ljava.lang.String;@4052c8c2,Annotation([Ljava.lang.String;@181b8c4b,[Ljava.lang.String;@38eb0f4d,[Ljava.lang.String;@437486cd),Annotation([Ljava.lang.String;@15b642b9,[Ljava.lang.String;@518bfd90,[Ledu.cmu.lti.nlp.amr.Dependency;@317a118b),Annotation([Ljava.lang.String;@56dfab87,[Ljava.lang.String;@715b886f,[Ljava.lang.String;@7fb29ca9),Annotation([Ljava.lang.String;@1e253c9d,[Ljava.lang.String;@350d3f4d,[Ledu.cmu.lti.nlp.amr.Entity;@18b8d173))
AMR:
(想 / 想-05, ARG4, 有 / 有-06)
(想 / 想-05, value, 我 / 我)
(有 / 有-06, manner, 大 / 大约)
(有 / 有-06, prep-following, 人 / 人)

Decoded in 11,702 microseconds
Sentence: 几 年 前 ， 我 瞅见 过 他们 。

Spans:
Span 7-8:  他们 => 他们
Span 0-1:  几 => 几
Span 2-3:  前 => 前
Span 1-2:  年 => 年
Span 4-5:  我 => 我
Span 5-6:  瞅见 => 瞅见-01
Span 6-7:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他们 => 他们
Oracle Span 0-1:  几 => 几
Oracle Span 2-3:  前 => 前
Oracle Span 1-2:  年 => (temporal-quantity :unit 年)
Oracle Span 4-5:  我 => 我
Oracle Span 5-6:  瞅见 => 瞅见-01

Extra span: 过 => 过-01
Incorrect span: 年 => 年
Missing span: 年 => (temporal-quantity :unit 年)
Dependencies:
1	几	_	CD	CD	_	2	nummod	_	_
2	年	_	M	M	_	3	lobj	_	_
3	前	_	LC	LC	_	6	loc	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	瞅见	_	VV	VV	_	0	root	_	_
7	过	_	AS	AS	_	6	asp	_	_
8	他们	_	PN	PN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 瞅见-01, arg0, x2 / 我)
(x0 / 瞅见-01, arg1, x3 / 他们)
(x0 / 瞅见-01, time, x4 / 前)
(x4 / 前, quant, x7 / 几)
(x7 / 几, op, x8 / temporal-quantity)
(x8 / temporal-quantity, unit, x11 / 年)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),他们,他们,false), Span(6,7,List(1),过,过-01,false), Span(5,6,List(2),瞅见,瞅见-01,false), Span(4,5,List(3),我,我,false), Span(2,3,List(4),前,前,false), Span(1,2,List(5),年,年,false), Span(0,1,List(6),几,几,false)),Map(2 -> 瞅见-01, 5 -> 年, 1 -> 过-01, 4 -> 前, 6 -> 几, 0 -> 他们, 3 -> 我),Map(几 -> 几, 我 -> 我, 过 -> 过-01, 他 -> 他们, 年 -> 年, 前 -> 前, 瞅 -> 瞅见-01))),[Ljava.lang.String;@73844119,Annotation([Ljava.lang.String;@44f24a20,[Ljava.lang.String;@1859e2a4,[Ljava.lang.String;@46349b95),Annotation([Ljava.lang.String;@176996c3,[Ljava.lang.String;@411c6d44,[Ledu.cmu.lti.nlp.amr.Dependency;@1687eb01),Annotation([Ljava.lang.String;@748d2277,[Ljava.lang.String;@2f897dab,[Ljava.lang.String;@d5d5353),Annotation([Ljava.lang.String;@242b6e1a,[Ljava.lang.String;@39a87e72,[Ledu.cmu.lti.nlp.amr.Entity;@5d2828c9))
AMR:
(几 / 几, op, 年 / 年)
(前 / 前, quant, 几 / 几)
(瞅 / 瞅见-01, ARG1, 过 / 过-01)
(瞅 / 瞅见-01, time, 前 / 前)
(过 / 过-01, ARG1, 他 / 他们)
(过 / 过-01, ARG4, 我 / 我)

Decoded in 14,815 microseconds
Sentence: 可是 ， 从来 不 知道 到 什么 地方 去 找 他们 。

Spans:
Span 3-4:  不 => 不
Span 6-7:  什么 => 什么
Span 2-3:  从来 => 从来
Span 10-11:  他们 => 他们
Span 5-6:  到 => 到-01
Span 8-9:  去 => 去-02
Span 7-8:  地方 => 地方
Span 9-10:  找 => 找-01
Span 4-5:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  什么 => 什么
Oracle Span 2-3:  从来 => 从来
Oracle Span 10-11:  他们 => 他们
Oracle Span 5-6:  到 => 到-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 9-10:  找 => 找-01
Oracle Span 4-5:  知道 => 知道-01

Extra span: 去 => 去-02
Extra span: 不 => 不
Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	到	_	VV	VV	_	5	ccomp	_	_
7	什么	_	DT	DT	_	8	det	_	_
8	地方	_	NN	NN	_	6	dobj	_	_
9	去	_	MSP	MSP	_	10	prtmod	_	_
10	找	_	VV	VV	_	5	dep	_	_
11	他们	_	PN	PN	_	10	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 知道-01, arg1, x13 / 到-01)
(x11 / 知道-01, time, x25 / 从来)
(x13 / 到-01, arg1, x14 / 地方)
(x13 / 到-01, purpose, x23 / 找-01)
(x14 / 地方, mod, x19 / 什么)
(x23 / 找-01, arg1, x24 / 他们)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),他们,他们,false), Span(9,10,List(1),找,找-01,false), Span(8,9,List(2),去,去-02,false), Span(7,8,List(3),地方,地方,false), Span(6,7,List(4),什么,什么,false), Span(5,6,List(5),到,到-01,false), Span(4,5,List(6),知道,知道-01,false), Span(3,4,List(7),不,不,false), Span(2,3,List(8),从来,从来,false)),Map(2 -> 去-02, 5 -> 到-01, 8 -> 从来, 7 -> 不, 1 -> 找-01, 4 -> 什么, 6 -> 知道-01, 0 -> 他们, 3 -> 地方),Map(从 -> 从来, 去 -> 去-02, 他 -> 他们, 地 -> 地方, 不 -> 不, 到 -> 到-01, 知 -> 知道-01, 什 -> 什么, 找 -> 找-01))),[Ljava.lang.String;@3a082ff4,Annotation([Ljava.lang.String;@45acdd11,[Ljava.lang.String;@3f0d6038,[Ljava.lang.String;@237f7970),Annotation([Ljava.lang.String;@58f39564,[Ljava.lang.String;@7b948f3e,[Ledu.cmu.lti.nlp.amr.Dependency;@2f4c2cd4),Annotation([Ljava.lang.String;@77a074b4,[Ljava.lang.String;@333c8791,[Ljava.lang.String;@6c0e13b7),Annotation([Ljava.lang.String;@22eaa86e,[Ljava.lang.String;@561b7d53,[Ledu.cmu.lti.nlp.amr.Entity;@1cc680e))
AMR:
(到 / 到-01, purpose, 找 / 找-01)
(到 / 到-01, time, 地 / 地方)
(去 / 去-02, prep-through, 找 / 找-01)
(地 / 地方, mod, 什 / 什么)
(找 / 找-01, purpose, 他 / 他们)
(知 / 知道-01, manner, 不 / 不)
(知 / 知道-01, prep-along-with, 到 / 到-01)
(知 / 知道-01, time, 从 / 从来)

Decoded in 25,386 microseconds
Sentence: 风 吹 着 他们 到处 跑 。

Spans:
Span 3-4:  他们 => 他们
Span 4-5:  到处 => 到处
Span 1-2:  吹 => 吹-01
Span 5-6:  跑 => 跑-01
Span 0-1:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他们 => 他们
Oracle Span 4-5:  到处 => 到处
Oracle Span 1-2:  吹 => 吹-01
Oracle Span 0-1:  风 => 风

Extra span: 跑 => 跑-01
Dependencies:
1	风	_	NN	NN	_	2	nsubj	_	_
2	吹	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	到处	_	AD	AD	_	6	advmod	_	_
6	跑	_	VV	VV	_	2	ccomp	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 吹-01, arg0, x2 / 风)
(x0 / 吹-01, arg1, x3 / 他们)
(x0 / 吹-01, direction, x6 / 到处)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),跑,跑-01,false), Span(4,5,List(1),到处,到处,false), Span(3,4,List(2),他们,他们,false), Span(1,2,List(3),吹,吹-01,false), Span(0,1,List(4),风,风,false)),Map(2 -> 他们, 1 -> 到处, 4 -> 风, 0 -> 跑-01, 3 -> 吹-01),Map(跑 -> 跑-01, 吹 -> 吹-01, 他 -> 他们, 风 -> 风, 到 -> 到处))),[Ljava.lang.String;@1dc3502b,Annotation([Ljava.lang.String;@6a1d3225,[Ljava.lang.String;@67e13bd0,[Ljava.lang.String;@50fb33a),Annotation([Ljava.lang.String;@2cae9b8,[Ljava.lang.String;@1457fde,[Ledu.cmu.lti.nlp.amr.Dependency;@6f94fb9d),Annotation([Ljava.lang.String;@17fa1336,[Ljava.lang.String;@4228bf58,[Ljava.lang.String;@68b9834c),Annotation([Ljava.lang.String;@20b9d5d5,[Ljava.lang.String;@671d1157,[Ledu.cmu.lti.nlp.amr.Entity;@60c8a093))
AMR:
(吹 / 吹-01, ARG3, 他 / 他们)
(吹 / 吹-01, direction, 到 / 到处)
(吹 / 吹-01, prep-from, 风 / 风)
(跑 / 跑-01, location, 到 / 到处)

Decoded in 10,004 microseconds
Sentence: 他们 没有 根 ， 这 对 他们 来说 是 很 不 方便 的 。 ”

Spans:
Span 10-11:  不 => 不
Span 6-7:  他们 => 他们
Span 0-1:  他们 => 他们
Span 5-6:  对 => 对-02
Span 9-10:  很 => 很
Span 11-12:  方便 => 方便-03
Span 8-9:  是 => 是-04
Span 7-8:  来说 => 来说-01
Span 2-3:  根 => 根
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 9-10:  很 => 很
Oracle Span 11-12:  方便 => 方便-03
Oracle Span 7-8:  来说 => 来说-01
Oracle Span 2-3:  根 => 根

Extra span: 不 => 不
Extra span: 是 => 是-04
Extra span: 他们 => 他们
Extra span: 对 => 对-02
Extra span: 这 => 这
Dependencies:
1	他们	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	根	_	M	M	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	这	_	PN	PN	_	9	nsubj	_	_
6	对	_	P	P	_	9	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	来说	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	2	conj	_	_
10	很	_	AD	AD	_	12	advmod	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	方便	_	VA	VA	_	9	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	。	_	PU	PU	_	2	punct	_	_
15	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x24 / 来说-01, arg2, x30 / 方便-03)
(x30 / 方便-03, degree, x32 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),方便,方便-03,false), Span(10,11,List(1),不,不,false), Span(9,10,List(2),很,很,false), Span(8,9,List(3),是,是-04,false), Span(7,8,List(4),来说,来说-01,false), Span(6,7,List(5),他们,他们,false), Span(5,6,List(6),对,对-02,false), Span(4,5,List(7),这,这,false), Span(2,3,List(8),根,根,false), Span(0,1,List(9),他们,他们,false)),Map(2 -> 很, 5 -> 他们, 8 -> 根, 7 -> 这, 1 -> 不, 4 -> 来说-01, 6 -> 对-02, 9 -> 他们, 0 -> 方便-03, 3 -> 是-04),Map(他2 -> 他们, 来 -> 来说-01, 这 -> 这, 方 -> 方便-03, 根 -> 根, 很 -> 很, 他 -> 他们, 不 -> 不, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@44cffc25,Annotation([Ljava.lang.String;@2a369e14,[Ljava.lang.String;@25aeb5ac,[Ljava.lang.String;@c755b2),Annotation([Ljava.lang.String;@3bd2af5b,[Ljava.lang.String;@250a500b,[Ledu.cmu.lti.nlp.amr.Dependency;@75d982d3),Annotation([Ljava.lang.String;@4f89331f,[Ljava.lang.String;@618ff5c2,[Ljava.lang.String;@16727bf0),Annotation([Ljava.lang.String;@2f84acf7,[Ljava.lang.String;@291373d3,[Ledu.cmu.lti.nlp.amr.Entity;@372ca2d6))
AMR:
(对 / 对-02, manner, 根 / 根)
(对 / 对-02, mod, 这 / 这)
(对 / 对-02, year, 他 / 他们)
(对 / 对-02, year, 是 / 是-04)
(方 / 方便-03, manner, 不 / 不)
(是 / 是-04, year, 不 / 不)
(是 / 是-04, year, 很 / 很)
(来 / 来说-01, mode, 是 / 是-04)
(根 / 根, source, 他2 / 他们)

Decoded in 31,869 microseconds
Sentence: “ 再见 了 。 ” 小 王子 说 。

Spans:
Span 1-2:  再见 => 再见
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	7	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(1,2,List(3),再见,再见,false)),Map(2 -> 小, 1 -> 王子, 0 -> 说-02, 3 -> 再见),Map(王 -> 王子, 小 -> 小, 说 -> 说-02, 再 -> 再见))),[Ljava.lang.String;@3204e238,Annotation([Ljava.lang.String;@38ed139b,[Ljava.lang.String;@a5272be,[Ljava.lang.String;@58ba5b30),Annotation([Ljava.lang.String;@4dba773d,[Ljava.lang.String;@1d9bd4da,[Ledu.cmu.lti.nlp.amr.Dependency;@4c58255),Annotation([Ljava.lang.String;@eac3a26,[Ljava.lang.String;@10b1a751,[Ljava.lang.String;@53cf9c99),Annotation([Ljava.lang.String;@7b306b9f,[Ljava.lang.String;@142213d5,[Ledu.cmu.lti.nlp.amr.Entity;@934b52f))
AMR:
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 再 / 再见)
(说 / 说-02, degree, 小 / 小)

Decoded in 6,791 microseconds
Sentence: “ 再见 。 ” 花 说 。

Spans:
Span 1-2:  再见 => 再见
Span 4-5:  花 => 花-01
Span 5-6:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 4-5:  花 => 花
Oracle Span 5-6:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 花 => 花-01
Missing span: 说 => 说-01
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	花	_	NN	NN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 花)
(x0 / 说-01, arg1, x3 / 再见)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说,说-02,false), Span(4,5,List(1),花,花-01,false), Span(1,2,List(2),再见,再见,false)),Map(2 -> 再见, 1 -> 花-01, 0 -> 说-02),Map(花 -> 花-01, 说 -> 说-02, 再 -> 再见))),[Ljava.lang.String;@2630dbc4,Annotation([Ljava.lang.String;@5ea4300e,[Ljava.lang.String;@5a1c3cb4,[Ljava.lang.String;@76ad6715),Annotation([Ljava.lang.String;@56637cff,[Ljava.lang.String;@2938127d,[Ledu.cmu.lti.nlp.amr.Dependency;@127a7272),Annotation([Ljava.lang.String;@ff23ae7,[Ljava.lang.String;@423b2b62,[Ljava.lang.String;@2b7962a2),Annotation([Ljava.lang.String;@6ad16c5d,[Ljava.lang.String;@74ea46e2,[Ledu.cmu.lti.nlp.amr.Entity;@6f911326))
AMR:
(说 / 说-02, degree, 花 / 花-01)
(说 / 说-02, topic, 再 / 再见)

Decoded in 4,343 microseconds
Sentence: XIX 。

Spans:
Span 0-1:  XIX => XIX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XIX => XIX

Dependencies:
1	XIX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XIX,XIX,false)),Map(0 -> XIX),Map(x -> XIX))),[Ljava.lang.String;@f1d0004,Annotation([Ljava.lang.String;@6e4f263e,[Ljava.lang.String;@48b4a043,[Ljava.lang.String;@2f5b8250),Annotation([Ljava.lang.String;@4821aa9f,[Ljava.lang.String;@5f481b73,[Ledu.cmu.lti.nlp.amr.Dependency;@32130e61),Annotation([Ljava.lang.String;@41294371,[Ljava.lang.String;@4996c99,[Ljava.lang.String;@1b956cfa),Annotation([Ljava.lang.String;@315f09ef,[Ljava.lang.String;@3a66e67e,[Ledu.cmu.lti.nlp.amr.Entity;@75d4a80f))
AMR:


Decoded in 1,345 microseconds
Sentence: 之后 ， 小 王子 爬上 一 座 高山 。

Spans:
Span 0-1:  之后 => 之后-01
Span 2-3:  小 => 小
Span 4-5:  爬上 => 爬上-01
Span 3-4:  王子 => 王子
Span 7-8:  高山 => 高山

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 4-5:  爬上 => 爬上-01
Oracle Span 3-4:  王子 => 王子
Oracle Span 7-8:  高山 => 高山

Incorrect span: 小 => 小
Extra span: 之后 => 之后-01
Missing span: 小 => 小-01
Dependencies:
1	之后	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	5	nsubj	_	_
5	爬上	_	VV	VV	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	座	_	M	M	_	8	clf	_	_
8	高山	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 爬上-01, arg0, x3 / 王子)
(x2 / 爬上-01, arg1, x5 / 高山)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),高山,高山,false), Span(4,5,List(1),爬上,爬上-01,false), Span(3,4,List(2),王子,王子,false), Span(2,3,List(3),小,小,false), Span(0,1,List(4),之后,之后-01,false)),Map(2 -> 王子, 1 -> 爬上-01, 4 -> 之后-01, 0 -> 高山, 3 -> 小),Map(高 -> 高山, 王 -> 王子, 小 -> 小, 爬 -> 爬上-01, 之 -> 之后-01))),[Ljava.lang.String;@4596f8f3,Annotation([Ljava.lang.String;@ccf91df,[Ljava.lang.String;@117d32e,[Ljava.lang.String;@51d387d3),Annotation([Ljava.lang.String;@2370ac7a,[Ljava.lang.String;@534180a2,[Ledu.cmu.lti.nlp.amr.Dependency;@6cf0a747),Annotation([Ljava.lang.String;@21505815,[Ljava.lang.String;@7e53339,[Ljava.lang.String;@58fef7f7),Annotation([Ljava.lang.String;@31ddb930,[Ljava.lang.String;@12eedfee,[Ledu.cmu.lti.nlp.amr.Entity;@3c3c4a71))
AMR:
(爬 / 爬上-01, direction, 王 / 王子)
(爬 / 爬上-01, manner, 之 / 之后-01)
(王 / 王子, mod, 小 / 小)
(高 / 高山, mod, 爬 / 爬上-01)

Decoded in 9,948 microseconds
Sentence: 过去 他 所 见 过 的 山 就 是 那 三 座 只 有 他 膝盖 那么 高 的 火山 ，

Spans:
Span 14-15:  他 => 他
Span 1-2:  他 => 他
Span 12-13:  只 => 只
Span 7-8:  就 => 就-01
Span 6-7:  山 => 山
Span 8-9:  是 => 是-04
Span 13-14:  有 => 有-06
Span 19-20:  火山 => 火山
Span 15-16:  膝盖 => 膝盖
Span 3-4:  见 => 见-01
Span 4-5:  过 => 过-01
Span 0-1:  过去 => 过去-01
Span 9-10:  那 => 那
Span 16-17:  那么 => 那么
Span 17-18:  高 => 高-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 6-7:  山 => 山
Oracle Span 19-20:  火山 => 火山
Oracle Span 15-16:  膝盖 => 膝盖
Oracle Span 3-4:  见 => 见-01
Oracle Span 0-1:  过去 => 过去
Oracle Span 9-10:  那 => 那
Oracle Span 16-17:  那么 => 那么
Oracle Span 17-18:  高 => 高-02

Extra span: 他 => 他
Extra span: 有 => 有-06
Extra span: 只 => 只
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 过 => 过-01
Incorrect span: 过去 => 过去-01
Missing span: 过去 => 过去
Dependencies:
1	过去	_	NT	NT	_	4	dep	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	见	_	VV	VV	_	7	rcmod	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	山	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	那	_	DT	DT	_	20	det	_	_
11	三	_	CD	CD	_	12	nummod	_	_
12	座	_	M	M	_	10	dep	_	_
13	只	_	AD	AD	_	14	advmod	_	_
14	有	_	VE	VE	_	20	rcmod	_	_
15	他	_	PN	PN	_	16	nsubj	_	_
16	膝盖	_	VV	VV	_	14	dep	_	_
17	那么	_	AD	AD	_	18	advmod	_	_
18	高	_	VA	VA	_	16	ccomp	_	_
19	的	_	DEC	DEC	_	14	cpm	_	_
20	火山	_	NN	NN	_	9	attr	_	_
21	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 火山, domain, x9 / 山)
(x0 / 火山, mod, x8 / 那)
(x14 / 见-01, arg1, x9 / 山)
(x14 / 见-01, time, x16 / 过去)
(x2 / 高-02, arg0, x0 / 火山)
(x2 / 高-02, arg1, x3 / 膝盖)
(x2 / 高-02, mod, x4 / 那么)
(x5 / 他, part, x3 / 膝盖)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),火山,火山,false), Span(17,18,List(1),高,高-02,false), Span(16,17,List(2),那么,那么,false), Span(15,16,List(3),膝盖,膝盖,false), Span(14,15,List(4),他,他,false), Span(13,14,List(5),有,有-06,false), Span(12,13,List(6),只,只,false), Span(9,10,List(7),那,那,false), Span(8,9,List(8),是,是-04,false), Span(7,8,List(9),就,就-01,false), Span(6,7,List(10),山,山,false), Span(4,5,List(11),过,过-01,false), Span(3,4,List(12),见,见-01,false), Span(1,2,List(13),他,他,false), Span(0,1,List(14),过去,过去-01,false)),Map(2 -> 那么, 5 -> 有-06, 12 -> 见-01, 8 -> 是-04, 7 -> 那, 1 -> 高-02, 4 -> 他, 11 -> 过-01, 14 -> 过去-01, 6 -> 只, 0 -> 火山, 9 -> 就-01, 3 -> 膝盖, 10 -> 山, 13 -> 他),Map(高 -> 高-02, 就 -> 就-01, 他2 -> 他, 过2 -> 过去-01, 过 -> 过-01, 他 -> 他, 只 -> 只, 那2 -> 那, 山 -> 山, 火 -> 火山, 那 -> 那么, 膝 -> 膝盖, 是 -> 是-04, 见 -> 见-01, 有 -> 有-06))),[Ljava.lang.String;@1352434e,Annotation([Ljava.lang.String;@4f9a6c2d,[Ljava.lang.String;@2b6fcb9f,[Ljava.lang.String;@75de6341),Annotation([Ljava.lang.String;@74170687,[Ljava.lang.String;@68f0f72c,[Ledu.cmu.lti.nlp.amr.Dependency;@3d96fa9e),Annotation([Ljava.lang.String;@3b545206,[Ljava.lang.String;@77bb48d5,[Ljava.lang.String;@181d8899),Annotation([Ljava.lang.String;@12d5c30e,[Ljava.lang.String;@b887730,[Ledu.cmu.lti.nlp.amr.Entity;@26586b74))
AMR:
(是 / 是-04, ARG1, 那2 / 那)
(是 / 是-04, ARG4, 山 / 山)
(是 / 是-04, manner, 就 / 就-01)
(有 / 有-06, ARG5, 他 / 他)
(有 / 有-06, manner, 只 / 只)
(火 / 火山, domain, 山 / 山)
(见 / 见-01, ARG1, 过 / 过-01)
(见 / 见-01, time, 过2 / 过去-01)
(过 / 过-01, ARG4, 山 / 山)
(过2 / 过去-01, ARG3, 他2 / 他)
(高 / 高-02, ARG3, 火 / 火山)
(高 / 高-02, ARG4, 有 / 有-06)
(高 / 高-02, degree, 膝 / 膝盖)
(高 / 高-02, mod, 那 / 那么)

Decoded in 70,606 microseconds
Sentence: 并且 他 把 那 座 熄灭 了 的 火山 就 当作 凳子 。

Spans:
Span 1-2:  他 => 他
Span 11-12:  凳子 => 凳子
Span 9-10:  就 => 就-01
Span 10-11:  当作 => 当作-01
Span 8-9:  火山 => 火山
Span 5-6:  熄灭 => 熄灭-01
Span 3-4:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 11-12:  凳子 => 凳子
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  当作 => 当作-01
Oracle Span 8-9:  火山 => 火山
Oracle Span 5-6:  熄灭 => 熄灭-01
Oracle Span 3-4:  那 => 那

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	并且	_	CC	CC	_	9	cc	_	_
2	他	_	PN	PN	_	6	nsubj	_	_
3	把	_	BA	BA	_	6	ba	_	_
4	那	_	DT	DT	_	6	nsubj	_	_
5	座	_	M	M	_	4	clf	_	_
6	熄灭	_	VV	VV	_	9	rcmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	火山	_	NN	NN	_	0	root	_	_
10	就	_	P	P	_	9	conj	_	_
11	当作	_	VV	VV	_	12	vmod	_	_
12	凳子	_	NN	NN	_	9	conj	_	_
13	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 火山, mod, x12 / 那)
(x14 / 熄灭-01, arg1, x11 / 火山)
(x9 / 当作-01, arg0, x10 / 他)
(x9 / 当作-01, arg1, x11 / 火山)
(x9 / 当作-01, arg2, x15 / 凳子)
(x9 / 当作-01, manner, x16 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),凳子,凳子,false), Span(10,11,List(1),当作,当作-01,false), Span(9,10,List(2),就,就-01,false), Span(8,9,List(3),火山,火山,false), Span(5,6,List(4),熄灭,熄灭-01,false), Span(3,4,List(5),那,那,false), Span(1,2,List(6),他,他,false)),Map(2 -> 就-01, 5 -> 那, 1 -> 当作-01, 4 -> 熄灭-01, 6 -> 他, 0 -> 凳子, 3 -> 火山),Map(就 -> 就-01, 他 -> 他, 火 -> 火山, 那 -> 那, 熄 -> 熄灭-01, 凳 -> 凳子, 当 -> 当作-01))),[Ljava.lang.String;@52f57666,Annotation([Ljava.lang.String;@6e041285,[Ljava.lang.String;@267dc982,[Ljava.lang.String;@439b15f2),Annotation([Ljava.lang.String;@3aa41da1,[Ljava.lang.String;@74fab04a,[Ledu.cmu.lti.nlp.amr.Dependency;@3c83468e),Annotation([Ljava.lang.String;@272ce069,[Ljava.lang.String;@3d7fb838,[Ljava.lang.String;@1c26273d),Annotation([Ljava.lang.String;@3a37a501,[Ljava.lang.String;@7a583586,[Ledu.cmu.lti.nlp.amr.Entity;@3a26ec8d))
AMR:
(当 / 当作-01, ARG1, 凳 / 凳子)
(当 / 当作-01, ARG4, 火 / 火山)
(当 / 当作-01, location, 他 / 他)
(当 / 当作-01, manner, 就 / 就-01)
(火 / 火山, mod, 那 / 那)
(熄 / 熄灭-01, value, 火 / 火山)

Decoded in 17,914 microseconds
Sentence: 小 王子 自言自语 地 说道 ： “ 从 这么 高 的 山 上 ， 我 一眼 可以 看到 整 个 星球 ， 以及 所有 的 人 。 ”

Spans:
Span 15-16:  一眼 => 一眼
Span 25-26:  人 => 人
Span 16-17:  可以 => 可以-02
Span 3-4:  地 => 地
Span 0-1:  小 => 小
Span 11-12:  山 => 山
Span 14-15:  我 => 我
Span 23-24:  所有 => 所有
Span 20-21:  星球 => 星球
Span 1-2:  王子 => 王子
Span 17-18:  看到 => (thing :arg1-of 看到-01)
Span 2-3:  自言自语 => 自言自语
Span 4-5:  说道 => 说道
Span 8-9:  这么 => 这么
Span 9-10:  高 => 高-02

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 可是 ， 他 所 看到 的 只 是 一些 非常 锋利 的 悬崖 峭壁 。

Spans:
Span 8-9:  一些 => 一些
Span 2-3:  他 => 他
Span 6-7:  只 => 只
Span 13-14:  峭壁 => 峭壁
Span 12-13:  悬崖 => 悬崖
Span 7-8:  是 => 是-04
Span 4-5:  看到 => (thing :arg1-of 看到-01)
Span 10-11:  锋利 => 锋利-01
Span 9-10:  非常 => 非常

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 你 好 。 ” 小 王子 试探 地 问道 。

Spans:
Span 1-2:  你 => 你
Span 8-9:  地 => 地
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  试探 => 试探-01
Span 9-10:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  试探 => 试探-01
Oracle Span 9-10:  问道 => 问道-01

Extra span: 地 => 地
Incorrect span: 小 => 小
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	10	nsubj	_	_
8	试探	_	VA	VA	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	问道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 问道-01, manner, x2 / 试探-01)
(x2 / 试探-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),问道,问道-01,false), Span(8,9,List(1),地,地,false), Span(7,8,List(2),试探,试探-01,false), Span(6,7,List(3),王子,王子,false), Span(5,6,List(4),小,小,false), Span(2,3,List(5),好,好-04,false), Span(1,2,List(6),你,你,false)),Map(2 -> 试探-01, 5 -> 好-04, 1 -> 地, 4 -> 小, 6 -> 你, 0 -> 问道-01, 3 -> 王子),Map(试 -> 试探-01, 你 -> 你, 王 -> 王子, 小 -> 小, 地 -> 地, 好 -> 好-04, 问 -> 问道-01))),[Ljava.lang.String;@2bc378f7,Annotation([Ljava.lang.String;@268cbb86,[Ljava.lang.String;@10f7918f,[Ljava.lang.String;@64d4f7c7),Annotation([Ljava.lang.String;@54e02f6a,[Ljava.lang.String;@17f3eefb,[Ledu.cmu.lti.nlp.amr.Dependency;@3ba46e63),Annotation([Ljava.lang.String;@788ddc1f,[Ljava.lang.String;@2dc3271b,[Ljava.lang.String;@254f906e),Annotation([Ljava.lang.String;@3d0035d2,[Ljava.lang.String;@2bfb6b49,[Ledu.cmu.lti.nlp.amr.Entity;@1f346ad2))
AMR:
(好 / 好-04, location, 你 / 你)
(试 / 试探-01, beneficiary, 王 / 王子)
(试 / 试探-01, degree, 好 / 好-04)
(试 / 试探-01, degree, 小 / 小)
(试 / 试探-01, location, 地 / 地)
(问 / 问道-01, manner, 试 / 试探-01)

Decoded in 14,715 microseconds
Sentence: “ 你 好 … 你 好 … 你 好 … ” 回音 在 回答 道 。

Spans:
Span 7-8:  你 => 你
Span 4-5:  你 => 你
Span 1-2:  你 => 你
Span 13-14:  回答 => 回答-01
Span 11-12:  回音 => 回音
Span 12-13:  在 => 在-01
Span 8-9:  好 => 好-04
Span 5-6:  好 => 好-04
Span 2-3:  好 => 好-04
Span 14-15:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  回答 => 回答-01
Oracle Span 11-12:  回音 => 回音

Extra span: 道 => 道-01
Extra span: 在 => 在-01
Extra span: 好 => 好-04
Extra span: 你 => 你
Extra span: 好 => 好-04
Extra span: 你 => 你
Extra span: 好 => 好-04
Extra span: 你 => 你
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VV	VV	_	0	root	_	_
4	…	_	PU	PU	_	3	punct	_	_
5	你	_	PN	PN	_	6	nsubj	_	_
6	好	_	VA	VA	_	3	conj	_	_
7	…	_	PU	PU	_	3	punct	_	_
8	你	_	PN	PN	_	9	nsubj	_	_
9	好	_	VV	VV	_	3	conj	_	_
10	…	_	PU	PU	_	15	punct	_	_
11	”	_	PU	PU	_	12	punct	_	_
12	回音	_	NT	NT	_	15	nn	_	_
13	在	_	AD	AD	_	14	advmod	_	_
14	回答	_	VV	VV	_	15	rcmod	_	_
15	道	_	NN	NN	_	9	dep	_	_
16	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),道,道-01,false), Span(13,14,List(1),回答,回答-01,false), Span(12,13,List(2),在,在-01,false), Span(11,12,List(3),回音,回音,false), Span(8,9,List(4),好,好-04,false), Span(7,8,List(5),你,你,false), Span(5,6,List(6),好,好-04,false), Span(4,5,List(7),你,你,false), Span(2,3,List(8),好,好-04,false), Span(1,2,List(9),你,你,false)),Map(2 -> 在-01, 5 -> 你, 8 -> 好-04, 7 -> 你, 1 -> 回答-01, 4 -> 好-04, 6 -> 好-04, 9 -> 你, 0 -> 道-01, 3 -> 回音),Map(回2 -> 回音, 在 -> 在-01, 你3 -> 你, 你 -> 你, 好3 -> 好-04, 好2 -> 好-04, 道 -> 道-01, 你2 -> 你, 好 -> 好-04, 回 -> 回答-01))),[Ljava.lang.String;@46a145ba,Annotation([Ljava.lang.String;@7ab34619,[Ljava.lang.String;@ae2db25,[Ljava.lang.String;@363c4251),Annotation([Ljava.lang.String;@7afc4db9,[Ljava.lang.String;@1a1f5f71,[Ledu.cmu.lti.nlp.amr.Dependency;@63884e4),Annotation([Ljava.lang.String;@524270b8,[Ljava.lang.String;@4acb7ecc,[Ljava.lang.String;@2a4f5433),Annotation([Ljava.lang.String;@6812fa3a,[Ljava.lang.String;@29149030,[Ledu.cmu.lti.nlp.amr.Entity;@38b8b6c0))
AMR:
(回 / 回答-01, manner, 在 / 在-01)
(在 / 在-01, degree, 回2 / 回音)
(在 / 在-01, degree, 好 / 好-04)
(好 / 好-04, degree, 好2 / 好-04)
(好 / 好-04, location, 你 / 你)
(好2 / 好-04, degree, 好3 / 好-04)
(好2 / 好-04, location, 你2 / 你)
(好3 / 好-04, location, 你3 / 你)
(道 / 道-01, degree, 在 / 在-01)

Decoded in 28,952 microseconds
Sentence: “ 你们 是 什么 人 ？ ” 小 王子 问 。

Spans:
Span 4-5:  人 => 人
Span 3-4:  什么 => 什么
Span 1-2:  你们 => 你们
Span 7-8:  小 => 小
Span 2-3:  是 => 是-04
Span 8-9:  王子 => 王子
Span 9-10:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  问 => 问-01

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	9	conj	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	人	_	NN	NN	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	VA	VA	_	9	dep	_	_
9	王子	_	VV	VV	_	0	root	_	_
10	问	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 王子)
(x0 / 问-01, arg1, x4 / 人)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 人, domain, x6 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),问,问-01,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(4,5,List(3),人,人,false), Span(3,4,List(4),什么,什么,false), Span(2,3,List(5),是,是-04,false), Span(1,2,List(6),你们,你们,false)),Map(2 -> 小, 5 -> 是-04, 1 -> 王子, 4 -> 什么, 6 -> 你们, 0 -> 问-01, 3 -> 人),Map(你 -> 你们, 王 -> 王子, 小 -> 小, 什 -> 什么, 问 -> 问-01, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@68868328,Annotation([Ljava.lang.String;@173a6728,[Ljava.lang.String;@1a22e0ef,[Ljava.lang.String;@67514bdd),Annotation([Ljava.lang.String;@3b920bdc,[Ljava.lang.String;@7f5538a1,[Ledu.cmu.lti.nlp.amr.Dependency;@72fd8a3c),Annotation([Ljava.lang.String;@1f9f381d,[Ljava.lang.String;@34780cd9,[Ljava.lang.String;@623ebac7),Annotation([Ljava.lang.String;@7c8c70d6,[Ljava.lang.String;@1ab5f08a,[Ledu.cmu.lti.nlp.amr.Entity;@6edf29c1))
AMR:
(人 / 人, mod, 是 / 是-04)
(什 / 什么, mod, 是 / 是-04)
(是 / 是-04, degree, 你 / 你们)
(王 / 王子, mod, 小 / 小)
(问 / 问-01, ARG1, 王 / 王子)
(问 / 问-01, degree, 是 / 是-04)

Decoded in 17,699 microseconds
Sentence: “ 你们 是 什么 人 … 你们 是 什么 人 … 你们 是 什么 人 … ” 回音 又 回答 道 。

Spans:
Span 14-15:  人 => 人
Span 9-10:  人 => 人
Span 4-5:  人 => 人
Span 13-14:  什么 => 什么
Span 8-9:  什么 => 什么
Span 3-4:  什么 => 什么
Span 11-12:  你们 => 你们
Span 6-7:  你们 => 你们
Span 1-2:  你们 => 你们
Span 18-19:  又 => 又
Span 19-20:  回答 => 回答-01
Span 17-18:  回音 => 回音
Span 12-13:  是 => 是-04
Span 7-8:  是 => 是-04
Span 2-3:  是 => 是-04
Span 20-21:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 9-10:  人 => 人
Oracle Span 14-15:  人 => 人
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  你们 => 你们
Oracle Span 11-12:  你们 => 你们
Oracle Span 18-19:  又 => 又
Oracle Span 19-20:  回答 => 回答-01
Oracle Span 17-18:  回音 => 回音

Extra span: 道 => 道-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	人	_	NN	NN	_	3	attr	_	_
6	…	_	PU	PU	_	3	punct	_	_
7	你们	_	PN	PN	_	8	top	_	_
8	是	_	VC	VC	_	3	conj	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	人	_	NN	NN	_	8	attr	_	_
11	…	_	PU	PU	_	3	punct	_	_
12	你们	_	PN	PN	_	13	top	_	_
13	是	_	VC	VC	_	3	conj	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	人	_	NN	NN	_	21	dep	_	_
16	…	_	PU	PU	_	21	punct	_	_
17	”	_	PU	PU	_	18	punct	_	_
18	回音	_	NT	NT	_	21	nn	_	_
19	又	_	AD	AD	_	20	advmod	_	_
20	回答	_	VV	VV	_	21	rcmod	_	_
21	道	_	NN	NN	_	13	attr	_	_
22	。	_	PU	PU	_	3	punct	_	_
23	回答	_	VV	VV	_	18	rcmod	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x12 / 人, domain, x15 / 你们)
(x5 / 人, domain, x7 / 你们)
(x8 / 人, domain, x11 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),道,道-01,false), Span(19,20,List(1),回答,回答-01,false), Span(18,19,List(2),又,又,false), Span(17,18,List(3),回音,回音,false), Span(14,15,List(4),人,人,false), Span(13,14,List(5),什么,什么,false), Span(12,13,List(6),是,是-04,false), Span(11,12,List(7),你们,你们,false), Span(9,10,List(8),人,人,false), Span(8,9,List(9),什么,什么,false), Span(7,8,List(10),是,是-04,false), Span(6,7,List(11),你们,你们,false), Span(4,5,List(12),人,人,false), Span(3,4,List(13),什么,什么,false), Span(2,3,List(14),是,是-04,false), Span(1,2,List(15),你们,你们,false)),Map(2 -> 又, 5 -> 什么, 12 -> 人, 15 -> 你们, 8 -> 人, 7 -> 你们, 1 -> 回答-01, 4 -> 人, 11 -> 你们, 14 -> 是-04, 6 -> 是-04, 0 -> 道-01, 9 -> 什么, 3 -> 回音, 10 -> 是-04, 13 -> 什么),Map(又 -> 又, 回2 -> 回音, 什2 -> 什么, 你3 -> 你们, 人2 -> 人, 你 -> 你们, 是3 -> 是-04, 道 -> 道-01, 你2 -> 你们, 什 -> 什么, 人 -> 人, 回 -> 回答-01, 是 -> 是-04, 是2 -> 是-04, 什3 -> 什么, 人3 -> 人))),[Ljava.lang.String;@79a04e5f,Annotation([Ljava.lang.String;@66b59b7d,[Ljava.lang.String;@53311681,[Ljava.lang.String;@4437ac07),Annotation([Ljava.lang.String;@3f1ed068,[Ljava.lang.String;@753aca85,[Ledu.cmu.lti.nlp.amr.Dependency;@2e645fbd),Annotation([Ljava.lang.String;@574a89e2,[Ljava.lang.String;@1e1e9ef3,[Ljava.lang.String;@3dd31157),Annotation([Ljava.lang.String;@31c628e7,[Ljava.lang.String;@3240b2a4,[Ledu.cmu.lti.nlp.amr.Entity;@58434b19))
AMR:
(人 / 人, mod, 是 / 是-04)
(人2 / 人, mod, 是2 / 是-04)
(人3 / 人, mod, 是3 / 是-04)
(什 / 什么, mod, 是 / 是-04)
(什2 / 什么, mod, 是2 / 是-04)
(什3 / 什么, mod, 是3 / 是-04)
(回 / 回答-01, manner, 又 / 又)
(是 / 是-04, degree, 你 / 你们)
(是 / 是-04, degree, 是2 / 是-04)
(是2 / 是-04, degree, 你2 / 你们)
(是2 / 是-04, degree, 是3 / 是-04)
(是3 / 是-04, degree, 你3 / 你们)
(道 / 道-01, degree, 回 / 回答-01)
(道 / 道-01, degree, 回2 / 回音)
(道 / 道-01, degree, 是 / 是-04)

Decoded in 71,600 microseconds
Sentence: “ 请 你们 做 我 的 朋友 吧 ，

Spans:
Span 2-3:  你们 => 你们
Span 3-4:  做 => 做-04
Span 4-5:  我 => 我
Span 6-7:  朋友 => 朋友
Span 1-2:  请 => 请-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 3-4:  做 => 做-02
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 1-2:  请 => 请-01

Incorrect span: 做 => 做-04
Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Missing span: 做 => 做-02
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	请	_	VV	VV	_	0	root	_	_
3	你们	_	PN	PN	_	2	dobj	_	_
4	做	_	VV	VV	_	2	dep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	朋友	_	NN	NN	_	4	dobj	_	_
8	吧	_	SP	SP	_	4	dep	_	_
9	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 请-01, arg1, x11 / 你们)
(x10 / 请-01, arg2, x12 / 做-02)
(x12 / 做-02, arg1, x14 / 朋友)
(x14 / 朋友, poss, x15 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),朋友,朋友,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),做,做-04,false), Span(2,3,List(3),你们,你们,false), Span(1,2,List(4),请,请-02,false)),Map(2 -> 做-04, 1 -> 我, 4 -> 请-02, 0 -> 朋友, 3 -> 你们),Map(我 -> 我, 朋 -> 朋友, 你 -> 你们, 请 -> 请-02, 做 -> 做-04))),[Ljava.lang.String;@7d3fb0ef,Annotation([Ljava.lang.String;@7dbe2ebf,[Ljava.lang.String;@4adc663e,[Ljava.lang.String;@885e7ff),Annotation([Ljava.lang.String;@8bd86c8,[Ljava.lang.String;@4fa9ab6,[Ledu.cmu.lti.nlp.amr.Dependency;@2d3ef181),Annotation([Ljava.lang.String;@a2341c6,[Ljava.lang.String;@6e4c0d8c,[Ljava.lang.String;@3e3315d9),Annotation([Ljava.lang.String;@64db4967,[Ljava.lang.String;@74e6094b,[Ledu.cmu.lti.nlp.amr.Entity;@7a485a36))
AMR:
(做 / 做-04, manner, 你 / 你们)
(做 / 做-04, manner, 请 / 请-02)
(做 / 做-04, purpose, 朋 / 朋友)
(做 / 做-04, subset, 我 / 我)

Decoded in 8,656 microseconds
Sentence: 我 很 孤独 。 ” 他 说 。

Spans:
Span 5-6:  他 => 他
Span 2-3:  孤独 => 孤独-01
Span 1-2:  很 => 很
Span 0-1:  我 => 我
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 2-3:  孤独 => 孤独-01
Oracle Span 1-2:  很 => 很
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 我 => 我
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	孤独	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	AD	AD	_	7	advmod	_	_
6	他	_	PN	PN	_	7	nsubj	_	_
7	说	_	VV	VV	_	3	conj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 孤独-01)
(x3 / 孤独-01, degree, x4 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),他,他,false), Span(2,3,List(2),孤独,孤独-01,false), Span(1,2,List(3),很,很,false), Span(0,1,List(4),我,我,false)),Map(2 -> 孤独-01, 1 -> 他, 4 -> 我, 0 -> 说-02, 3 -> 很),Map(我 -> 我, 很 -> 很, 他 -> 他, 说 -> 说-02, 孤 -> 孤独-01))),[Ljava.lang.String;@5cf3157b,Annotation([Ljava.lang.String;@625dfff3,[Ljava.lang.String;@26350ea2,[Ljava.lang.String;@1e9469b8),Annotation([Ljava.lang.String;@5a08efdc,[Ljava.lang.String;@57272109,[Ledu.cmu.lti.nlp.amr.Dependency;@59696551),Annotation([Ljava.lang.String;@648d0e6d,[Ljava.lang.String;@79e66b2f,[Ljava.lang.String;@17273273),Annotation([Ljava.lang.String;@5f69e2b,[Ljava.lang.String;@984169e,[Ledu.cmu.lti.nlp.amr.Entity;@43f1bb92))
AMR:
(孤 / 孤独-01, degree, 很 / 很)
(孤 / 孤独-01, polite, 我 / 我)
(说 / 说-02, ARG4, 他 / 他)
(说 / 说-02, polite, 孤 / 孤独-01)

Decoded in 8,105 microseconds
Sentence: “ 我 很 孤独 … 我 很 孤独 … 我 很 孤独 … ” 回音 又 回答 着 。

Spans:
Span 15-16:  又 => 又
Span 16-17:  回答 => 回答-01
Span 14-15:  回音 => 回音
Span 11-12:  孤独 => 孤独-01
Span 7-8:  孤独 => 孤独-01
Span 3-4:  孤独 => 孤独-01
Span 10-11:  很 => 很
Span 6-7:  很 => 很
Span 2-3:  很 => 很
Span 9-10:  我 => 我
Span 5-6:  我 => 我
Span 1-2:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  又 => 又
Oracle Span 16-17:  回答 => 回答-01
Oracle Span 14-15:  回音 => 回音
Oracle Span 3-4:  孤独 => 孤独-01
Oracle Span 7-8:  孤独 => 孤独-01
Oracle Span 11-12:  孤独 => 孤独-01
Oracle Span 2-3:  很 => 很
Oracle Span 6-7:  很 => 很
Oracle Span 10-11:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  我 => 我
Oracle Span 9-10:  我 => 我

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	孤独	_	VV	VV	_	15	vmod	_	_
5	…	_	PU	PU	_	8	punct	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	孤独	_	NN	NN	_	4	dep	_	_
9	…	_	PU	PU	_	12	punct	_	_
10	我	_	PN	PN	_	12	nn	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	孤独	_	NN	NN	_	8	prnmod	_	_
13	…	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	4	punct	_	_
15	回音	_	NN	NN	_	17	nsubj	_	_
16	又	_	AD	AD	_	17	advmod	_	_
17	回答	_	VV	VV	_	0	root	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 回音)
(x0 / 回答-01, manner, x3 / 又)
(x11 / 孤独-01, arg0, x13 / 我)
(x11 / 孤独-01, degree, x12 / 很)
(x5 / 孤独-01, arg0, x7 / 我)
(x5 / 孤独-01, degree, x6 / 很)
(x8 / 孤独-01, arg0, x10 / 我)
(x8 / 孤独-01, degree, x9 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),回答,回答-01,false), Span(15,16,List(1),又,又,false), Span(14,15,List(2),回音,回音,false), Span(11,12,List(3),孤独,孤独-01,false), Span(10,11,List(4),很,很,false), Span(9,10,List(5),我,我,false), Span(7,8,List(6),孤独,孤独-01,false), Span(6,7,List(7),很,很,false), Span(5,6,List(8),我,我,false), Span(3,4,List(9),孤独,孤独-01,false), Span(2,3,List(10),很,很,false), Span(1,2,List(11),我,我,false)),Map(2 -> 回音, 5 -> 我, 8 -> 我, 7 -> 很, 1 -> 又, 11 -> 我, 4 -> 很, 6 -> 孤独-01, 9 -> 孤独-01, 0 -> 回答-01, 10 -> 很, 3 -> 孤独-01),Map(回2 -> 回音, 又 -> 又, 我3 -> 我, 孤3 -> 孤独-01, 我 -> 我, 我2 -> 我, 很 -> 很, 很3 -> 很, 孤2 -> 孤独-01, 孤 -> 孤独-01, 很2 -> 很, 回 -> 回答-01))),[Ljava.lang.String;@6d6bbd35,Annotation([Ljava.lang.String;@5c5d6175,[Ljava.lang.String;@7544ac86,[Ljava.lang.String;@3b27b497),Annotation([Ljava.lang.String;@b1534d3,[Ljava.lang.String;@3c74aa0d,[Ledu.cmu.lti.nlp.amr.Dependency;@6c841199),Annotation([Ljava.lang.String;@6a818392,[Ljava.lang.String;@489091bd,[Ljava.lang.String;@512d6e60),Annotation([Ljava.lang.String;@1de9b505,[Ljava.lang.String;@7b122839,[Ledu.cmu.lti.nlp.amr.Entity;@3743539f))
AMR:
(回 / 回答-01, degree, 回2 / 回音)
(回 / 回答-01, manner, 又 / 又)
(孤 / 孤独-01, degree, 回2 / 回音)
(孤 / 孤独-01, degree, 很 / 很)
(孤 / 孤独-01, degree, 我 / 我)
(孤2 / 孤独-01, degree, 很 / 很)
(孤2 / 孤独-01, degree, 很2 / 很)
(孤2 / 孤独-01, degree, 我2 / 我)
(孤3 / 孤独-01, degree, 很2 / 很)
(孤3 / 孤独-01, degree, 很3 / 很)
(孤3 / 孤独-01, degree, 我3 / 我)

Decoded in 40,438 microseconds
Sentence: 小 王子 想道 ： “ 这 颗 行星 真 奇怪 ！

Spans:
Span 9-10:  奇怪 => 奇怪-02
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 8-9:  真 => 真
Span 7-8:  行星 => 行星
Span 5-6:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  奇怪 => 奇怪-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 8-9:  真 => 真
Oracle Span 7-8:  行星 => 行星
Oracle Span 5-6:  这 => 这

Incorrect span: 奇怪 => 奇怪-02
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 奇怪 => 奇怪-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	想道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	10	punct	_	_
6	这	_	DT	DT	_	8	det	_	_
7	颗	_	M	M	_	6	clf	_	_
8	行星	_	NN	NN	_	10	nsubj	_	_
9	真	_	AD	AD	_	10	advmod	_	_
10	奇怪	_	VA	VA	_	3	ccomp	_	_
11	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 王子, mod, x15 / 小-01)
(x16 / 奇怪-01, arg0, x18 / 行星)
(x16 / 奇怪-01, degree, x17 / 真)
(x18 / 行星, mod, x19 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),奇怪,奇怪-02,false), Span(8,9,List(1),真,真,false), Span(7,8,List(2),行星,行星,false), Span(5,6,List(3),这,这,false), Span(1,2,List(4),王子,王子,false), Span(0,1,List(5),小,小,false)),Map(2 -> 行星, 5 -> 小, 1 -> 真, 4 -> 王子, 0 -> 奇怪-02, 3 -> 这),Map(这 -> 这, 王 -> 王子, 小 -> 小, 奇 -> 奇怪-02, 行 -> 行星, 真 -> 真))),[Ljava.lang.String;@d277579,Annotation([Ljava.lang.String;@5db6b845,[Ljava.lang.String;@378f002a,[Ljava.lang.String;@1afd72ef),Annotation([Ljava.lang.String;@2cc75074,[Ljava.lang.String;@445bb139,[Ledu.cmu.lti.nlp.amr.Dependency;@b9a77c8),Annotation([Ljava.lang.String;@7a81065e,[Ljava.lang.String;@6cd3ad8a,[Ljava.lang.String;@75181b50),Annotation([Ljava.lang.String;@2d64160c,[Ljava.lang.String;@5f254608,[Ledu.cmu.lti.nlp.amr.Entity;@2eeb0f9b))
AMR:
(奇 / 奇怪-02, degree, 真 / 真)
(奇 / 奇怪-02, time, 行 / 行星)
(王 / 王子, mod, 小 / 小)
(行 / 行星, mod, 小 / 小)
(行 / 行星, mod, 这 / 这)

Decoded in 11,699 microseconds
Sentence: 它 上面 全 是 干巴巴 的 ， 而且 又 尖利 又 咸涩 ，

Spans:
Span 1-2:  上面 => 上面
Span 2-3:  全 => 全
Span 10-11:  又 => 又
Span 8-9:  又 => 又
Span 11-12:  咸涩 => 咸涩
Span 0-1:  它 => 它
Span 9-10:  尖利 => 尖利-01
Span 4-5:  干巴巴 => 干巴巴
Span 3-4:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  上面 => 上面
Oracle Span 11-12:  咸涩 => 咸涩
Oracle Span 0-1:  它 => 它
Oracle Span 9-10:  尖利 => 尖利-01
Oracle Span 4-5:  干巴巴 => 干巴巴

Extra span: 又 => 又
Extra span: 又 => 又
Extra span: 是 => 是-04
Extra span: 全 => 全
Dependencies:
1	它	_	PN	PN	_	4	nsubj	_	_
2	上面	_	NN	NN	_	4	nsubj	_	_
3	全	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	干巴巴	_	VA	VA	_	4	attr	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	而且	_	CC	CC	_	4	cc	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	尖利	_	AD	AD	_	12	advmod	_	_
11	又	_	AD	AD	_	12	advmod	_	_
12	咸涩	_	VV	VV	_	4	dep	_	_
13	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x26 / 上面, poss, x27 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),咸涩,咸涩,false), Span(10,11,List(1),又,又,false), Span(9,10,List(2),尖利,尖利-01,false), Span(8,9,List(3),又,又,false), Span(4,5,List(4),干巴巴,干巴巴,false), Span(3,4,List(5),是,是-04,false), Span(2,3,List(6),全,全,false), Span(1,2,List(7),上面,上面,false), Span(0,1,List(8),它,它,false)),Map(2 -> 尖利-01, 5 -> 是-04, 8 -> 它, 7 -> 上面, 1 -> 又, 4 -> 干巴巴, 6 -> 全, 0 -> 咸涩, 3 -> 又),Map(又 -> 又, 干 -> 干巴巴, 尖 -> 尖利-01, 全 -> 全, 它 -> 它, 上 -> 上面, 咸 -> 咸涩, 是 -> 是-04, 又2 -> 又))),[Ljava.lang.String;@1b1c538d,Annotation([Ljava.lang.String;@1645f294,[Ljava.lang.String;@6325f352,[Ljava.lang.String;@15c4af7a),Annotation([Ljava.lang.String;@6cbd0674,[Ljava.lang.String;@55d58825,[Ledu.cmu.lti.nlp.amr.Dependency;@19a64eae),Annotation([Ljava.lang.String;@29a98d9f,[Ljava.lang.String;@2da3b078,[Ljava.lang.String;@544e8149),Annotation([Ljava.lang.String;@7fb66650,[Ljava.lang.String;@1a96d94c,[Ledu.cmu.lti.nlp.amr.Entity;@2a869a16))
AMR:
(上 / 上面, poss, 它 / 它)
(又 / 又, ARG0, 又2 / 又)
(咸 / 咸涩, manner, 又 / 又)
(尖 / 尖利-01, ARG3, 是 / 是-04)
(是 / 是-04, ARG1, 干 / 干巴巴)
(是 / 是-04, ARG3, 又2 / 又)
(是 / 是-04, ARG4, 上 / 上面)
(是 / 是-04, manner, 全 / 全)

Decoded in 23,025 microseconds
Sentence: 人们 一点 想象力 都 没有 。

Spans:
Span 1-2:  一点 => 一点
Span 0-1:  人们 => 人们
Span 2-3:  想象力 => 想象力
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点
Oracle Span 2-3:  想象力 => 想象力

Extra span: 都 => 都
Extra span: 人们 => 人们
Dependencies:
1	人们	_	NN	NN	_	3	nsubj	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	想象力	_	VV	VV	_	0	root	_	_
4	都	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	人们	_	NN	NN	_	5	xsubj	_	_

Oracle:
(x10 / 想象力, quant, x11 / 一点)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),都,都,false), Span(2,3,List(1),想象力,想象力,false), Span(1,2,List(2),一点,一点,false), Span(0,1,List(3),人们,人们,false)),Map(2 -> 一点, 1 -> 想象力, 0 -> 都, 3 -> 人们),Map(都 -> 都, 人 -> 人们, 想 -> 想象力, 一 -> 一点))),[Ljava.lang.String;@ae202c6,Annotation([Ljava.lang.String;@46aa712c,[Ljava.lang.String;@6ada9c0c,[Ljava.lang.String;@7412ed6b),Annotation([Ljava.lang.String;@6e7c351d,[Ljava.lang.String;@7b4a0aef,[Ledu.cmu.lti.nlp.amr.Dependency;@45cec376),Annotation([Ljava.lang.String;@26d41711,[Ljava.lang.String;@298f0a0b,[Ljava.lang.String;@2b960a7),Annotation([Ljava.lang.String;@31dfc6f5,[Ljava.lang.String;@37b52340,[Ledu.cmu.lti.nlp.amr.Entity;@663bb8ef))
AMR:
(想 / 想象力, manner, 都 / 都)
(想 / 想象力, quant, 一 / 一点)
(想 / 想象力, quant, 人 / 人们)

Decoded in 7,045 microseconds
Sentence: 他们 只 是 重复 别人 对 他们 说 的 话 …

Spans:
Span 6-7:  他们 => 他们
Span 0-1:  他们 => 他们
Span 4-5:  别人 => 别人
Span 1-2:  只 => 只
Span 5-6:  对 => 对-02
Span 2-3:  是 => 是-04
Span 9-10:  话 => 话-01
Span 7-8:  说 => 说-02
Span 3-4:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 4-5:  别人 => 别人
Oracle Span 9-10:  话 => 话
Oracle Span 7-8:  说 => 说-01
Oracle Span 3-4:  重复 => 重复-01

Incorrect span: 话 => 话-01
Incorrect span: 说 => 说-02
Extra span: 他们 => 他们
Extra span: 对 => 对-02
Extra span: 是 => 是-04
Extra span: 只 => 只
Missing span: 话 => 话
Missing span: 说 => 说-01
Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	只	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	重复	_	JJ	JJ	_	5	amod	_	_
5	别人	_	NN	NN	_	8	nsubj	_	_
6	对	_	P	P	_	8	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	说	_	VV	VV	_	11	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	话	_	NN	NN	_	11	nn	_	_
11	…	_	NN	NN	_	3	attr	_	_

Oracle:
(x0 / 重复-01, arg0, x2 / 他们)
(x0 / 重复-01, arg1, x4 / 话)
(x5 / 说-01, arg0, x6 / 别人)
(x5 / 说-01, arg1, x4 / 话)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),话,话-01,false), Span(7,8,List(1),说,说-02,false), Span(6,7,List(2),他们,他们,false), Span(5,6,List(3),对,对-02,false), Span(4,5,List(4),别人,别人,false), Span(3,4,List(5),重复,重复-01,false), Span(2,3,List(6),是,是-04,false), Span(1,2,List(7),只,只,false), Span(0,1,List(8),他们,他们,false)),Map(2 -> 他们, 5 -> 重复-01, 8 -> 他们, 7 -> 只, 1 -> 说-02, 4 -> 别人, 6 -> 是-04, 0 -> 话-01, 3 -> 对-02),Map(他2 -> 他们, 重 -> 重复-01, 别 -> 别人, 话 -> 话-01, 他 -> 他们, 只 -> 只, 说 -> 说-02, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@2f4e40d7,Annotation([Ljava.lang.String;@60e9c3a5,[Ljava.lang.String;@7e5843db,[Ljava.lang.String;@459f703f),Annotation([Ljava.lang.String;@188ac8a3,[Ljava.lang.String;@3650d4fc,[Ledu.cmu.lti.nlp.amr.Dependency;@aaa0f76),Annotation([Ljava.lang.String;@340a8894,[Ljava.lang.String;@7a8b9166,[Ljava.lang.String;@4acc5dff),Annotation([Ljava.lang.String;@10c72a6f,[Ljava.lang.String;@70e94ecb,[Ledu.cmu.lti.nlp.amr.Entity;@56cfe111))
AMR:
(是 / 是-04, manner, 只 / 只)
(是 / 是-04, prep-following, 他2 / 他们)
(说 / 说-02, prep-following, 他 / 他们)
(说 / 说-02, prep-following, 对 / 对-02)
(说 / 说-02, year, 话 / 话-01)
(重 / 重复-01, manner, 是 / 是-04)
(重 / 重复-01, year, 别 / 别人)
(重 / 重复-01, year, 对 / 对-02)

Decoded in 29,488 microseconds
Sentence: 在 我 的 家乡 ， 我 有 一 朵 花 。 她 总是 自己 先 说话 … ”

Spans:
Span 14-15:  先 => 先
Span 0-1:  在 => 在-01
Span 11-12:  她 => 她
Span 3-4:  家乡 => 家乡
Span 12-13:  总是 => 总是
Span 5-6:  我 => 我
Span 1-2:  我 => 我
Span 6-7:  有 => 有-06
Span 13-14:  自己 => 自己
Span 9-10:  花 => 花-01
Span 15-16:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  先 => 先
Oracle Span 3-4:  家乡 => 家乡
Oracle Span 12-13:  总是 => 总是
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  有 => 有-01
Oracle Span 9-10:  花 => 花
Oracle Span 15-16:  说话 => 说话-01

Extra span: 自己 => 自己
Extra span: 她 => 她
Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Extra span: 在 => 在-01
Missing span: 有 => 有-01
Missing span: 花 => 花
Dependencies:
1	在	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	家乡	_	NN	NN	_	1	pobj	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	我	_	PN	PN	_	7	top	_	_
7	有	_	VE	VE	_	0	root	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	朵	_	M	M	_	10	clf	_	_
10	花	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	7	punct	_	_
12	她	_	PN	PN	_	13	nn	_	_
13	总是	_	NN	NN	_	16	nsubj	_	_
14	自己	_	PN	PN	_	16	nsubj	_	_
15	先	_	AD	AD	_	16	advmod	_	_
16	说话	_	VV	VV	_	7	conj	_	_
17	…	_	PU	PU	_	7	punct	_	_
18	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x17 / 有-01, arg0, x18 / 我)
(x17 / 有-01, arg1, x19 / 花)
(x17 / 有-01, location, x21 / 家乡)
(x23 / 说话-01, manner, x25 / 先)
(x23 / 说话-01, manner, x26 / 总是)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说话,说话-01,false), Span(14,15,List(1),先,先,false), Span(13,14,List(2),自己,自己,false), Span(12,13,List(3),总是,总是,false), Span(11,12,List(4),她,她,false), Span(9,10,List(5),花,花-01,false), Span(6,7,List(6),有,有-06,false), Span(5,6,List(7),我,我,false), Span(3,4,List(8),家乡,家乡,false), Span(1,2,List(9),我,我,false), Span(0,1,List(10),在,在-01,false)),Map(2 -> 自己, 5 -> 花-01, 8 -> 家乡, 7 -> 我, 1 -> 先, 4 -> 她, 6 -> 有-06, 9 -> 我, 0 -> 说话-01, 10 -> 在-01, 3 -> 总是),Map(先 -> 先, 在 -> 在-01, 自 -> 自己, 我 -> 我, 我2 -> 我, 家 -> 家乡, 总 -> 总是, 花 -> 花-01, 说 -> 说话-01, 有 -> 有-06, 她 -> 她))),[Ljava.lang.String;@7e446d92,Annotation([Ljava.lang.String;@57f9b467,[Ljava.lang.String;@6d5c2745,[Ljava.lang.String;@44b29496),Annotation([Ljava.lang.String;@1947596f,[Ljava.lang.String;@3078cac,[Ledu.cmu.lti.nlp.amr.Dependency;@f6de586),Annotation([Ljava.lang.String;@5f2bd6d9,[Ljava.lang.String;@7c847072,[Ljava.lang.String;@43d9f1a2),Annotation([Ljava.lang.String;@23f86d8a,[Ljava.lang.String;@2264ea32,[Ledu.cmu.lti.nlp.amr.Entity;@7d3c09ec))
AMR:
(先 / 先, mod, 自 / 自己)
(先 / 先, mod, 花 / 花-01)
(在 / 在-01, degree, 家 / 家乡)
(在 / 在-01, snt5, 我2 / 我)
(她 / 她, prep-along-with, 花 / 花-01)
(有 / 有-06, ARG6, 我 / 我)
(有 / 有-06, degree, 花 / 花-01)
(有 / 有-06, location, 家 / 家乡)
(自 / 自己, mod, 总 / 总是)
(说 / 说话-01, manner, 先 / 先)

Decoded in 42,743 microseconds
Sentence: XX 。

Spans:
Span 0-1:  XX => XX

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XX => XX

Dependencies:
1	XX	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XX,XX,false)),Map(0 -> XX),Map(x -> XX))),[Ljava.lang.String;@71e4b308,Annotation([Ljava.lang.String;@11900483,[Ljava.lang.String;@14a049f9,[Ljava.lang.String;@94e51e8),Annotation([Ljava.lang.String;@5de6cf3a,[Ljava.lang.String;@4cc36c19,[Ledu.cmu.lti.nlp.amr.Dependency;@5a3a1bf9),Annotation([Ljava.lang.String;@2100d047,[Ljava.lang.String;@4af45442,[Ljava.lang.String;@1d805aa1),Annotation([Ljava.lang.String;@176f7f3b,[Ljava.lang.String;@30ca0779,[Ledu.cmu.lti.nlp.amr.Entity;@58740366))
AMR:


Decoded in 1,181 microseconds
Sentence: 在 沙漠 、 岩石 、 雪地 上 行走 了 很 长 的 时间 以后 ， 小 王子 终于 发现 了 一 条 大 路 。

Spans:
Span 18-19:  发现 => 发现-01
Span 0-1:  在 => 在-01
Span 22-23:  大 => 大
Span 15-16:  小 => 小
Span 3-4:  岩石 => 岩石
Span 9-10:  很 => 很
Span 12-13:  时间 => 时间
Span 1-2:  沙漠 => 沙漠
Span 16-17:  王子 => 王子
Span 17-18:  终于 => 终于
Span 7-8:  行走 => 行走-01
Span 23-24:  路 => 路
Span 10-11:  长 => 长-04
Span 5-6:  雪地 => 雪地

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  发现 => 发现-01
Oracle Span 22-23:  大 => 大-01
Oracle Span 15-16:  小 => 小-01
Oracle Span 3-4:  岩石 => 岩石
Oracle Span 9-10:  很 => 很
Oracle Span 12-13:  时间 => 时间
Oracle Span 1-2:  沙漠 => 沙漠
Oracle Span 16-17:  王子 => 王子
Oracle Span 17-18:  终于 => 终于
Oracle Span 7-8:  行走 => 行走-01
Oracle Span 23-24:  路 => 路
Oracle Span 10-11:  长 => 长-04
Oracle Span 5-6:  雪地 => 雪地

Incorrect span: 大 => 大
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 大 => 大-01
Missing span: 小 => 小-01
Dependencies:
1	在	_	P	P	_	8	prep	_	_
2	沙漠	_	NN	NN	_	6	conj	_	_
3	、	_	PU	PU	_	6	punct	_	_
4	岩石	_	NN	NN	_	6	conj	_	_
5	、	_	PU	PU	_	6	punct	_	_
6	雪地	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	1	plmod	_	_
8	行走	_	VV	VV	_	14	lccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	很	_	AD	AD	_	11	advmod	_	_
11	长	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	时间	_	NN	NN	_	8	dobj	_	_
14	以后	_	LC	LC	_	19	loc	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	王子	_	NN	NN	_	19	nsubj	_	_
18	终于	_	AD	AD	_	19	advmod	_	_
19	发现	_	VV	VV	_	0	root	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	一	_	CD	CD	_	22	nummod	_	_
22	条	_	M	M	_	24	clf	_	_
23	大	_	JJ	JJ	_	24	amod	_	_
24	路	_	NN	NN	_	19	dobj	_	_
25	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x10 / 发现-01, arg0, x11 / 王子)
(x10 / 发现-01, arg1, x14 / 路)
(x10 / 发现-01, manner, x13 / 终于)
(x11 / 王子, mod, x12 / 小-01)
(x14 / 路, mod, x15 / 大-01)
(x2 / 行走-01, duration, x7 / 时间)
(x7 / 时间, mod, x8 / 长-04)
(x8 / 长-04, degree, x9 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),路,路,false), Span(22,23,List(1),大,大,false), Span(18,19,List(2),发现,发现-01,false), Span(17,18,List(3),终于,终于,false), Span(16,17,List(4),王子,王子,false), Span(15,16,List(5),小,小,false), Span(12,13,List(6),时间,时间,false), Span(10,11,List(7),长,长-04,false), Span(9,10,List(8),很,很,false), Span(7,8,List(9),行走,行走-01,false), Span(5,6,List(10),雪地,雪地,false), Span(3,4,List(11),岩石,岩石,false), Span(1,2,List(12),沙漠,沙漠,false), Span(0,1,List(13),在,在-01,false)),Map(2 -> 发现-01, 5 -> 小, 12 -> 沙漠, 8 -> 很, 7 -> 长-04, 1 -> 大, 4 -> 王子, 11 -> 岩石, 6 -> 时间, 0 -> 路, 9 -> 行走-01, 3 -> 终于, 10 -> 雪地, 13 -> 在-01),Map(发 -> 发现-01, 在 -> 在-01, 路 -> 路, 终 -> 终于, 王 -> 王子, 大 -> 大, 很 -> 很, 雪 -> 雪地, 小 -> 小, 沙 -> 沙漠, 行 -> 行走-01, 时 -> 时间, 长 -> 长-04, 岩 -> 岩石))),[Ljava.lang.String;@47be0f9b,Annotation([Ljava.lang.String;@2bc426f0,[Ljava.lang.String;@4bd51d3e,[Ljava.lang.String;@33425811),Annotation([Ljava.lang.String;@4b74b35,[Ljava.lang.String;@e4e1ef5,[Ledu.cmu.lti.nlp.amr.Dependency;@6d11ceef),Annotation([Ljava.lang.String;@4cb2918c,[Ljava.lang.String;@72e295cc,[Ljava.lang.String;@c2584d3),Annotation([Ljava.lang.String;@6fa0450e,[Ljava.lang.String;@37468787,[Ledu.cmu.lti.nlp.amr.Entity;@51ec2856))
AMR:
(发 / 发现-01, manner, 终 / 终于)
(发 / 发现-01, prep-along-with, 王 / 王子)
(大 / 大, time, 发 / 发现-01)
(小 / 小, mod, 长 / 长-04)
(岩 / 岩石, mod, 在 / 在-01)
(时 / 时间, mod, 长 / 长-04)
(沙 / 沙漠, mod, 在 / 在-01)
(王 / 王子, mod, 小 / 小)
(行 / 行走-01, time, 雪 / 雪地)
(路 / 路, mod, 大 / 大)
(长 / 长-04, degree, 很 / 很)
(长 / 长-04, time, 行 / 行走-01)
(雪 / 雪地, time, 岩 / 岩石)

Decoded in 87,380 microseconds
Sentence: 所有 的 大 路 都 是 通往 人 住 的 地方 的 。

Spans:
Span 7-8:  人 => 人
Span 8-9:  住 => 住-01
Span 10-11:  地方 => 地方
Span 2-3:  大 => 大
Span 0-1:  所有 => 所有
Span 5-6:  是 => 是-04
Span 3-4:  路 => 路
Span 6-7:  通往 => 通往-01
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  人 => 人
Oracle Span 8-9:  住 => 住-01
Oracle Span 10-11:  地方 => 地方
Oracle Span 2-3:  大 => 大-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 3-4:  路 => 路
Oracle Span 6-7:  通往 => 通往-01
Oracle Span 4-5:  都 => 都

Extra span: 是 => 是-04
Incorrect span: 大 => 大
Missing span: 大 => 大-01
Dependencies:
1	所有	_	DT	DT	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	大	_	JJ	JJ	_	4	amod	_	_
4	路	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	通往	_	VV	VV	_	6	attr	_	_
8	人	_	NN	NN	_	9	nsubj	_	_
9	住	_	VV	VV	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	的	_	DEC	DEC	_	7	cpm	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 路, mod, x11 / 大-01)
(x10 / 路, mod, x12 / 所有)
(x15 / 住-01, arg0, x16 / 人)
(x15 / 住-01, arg1, x13 / 地方)
(x8 / 通往-01, arg0, x10 / 路)
(x8 / 通往-01, arg1, x13 / 地方)
(x8 / 通往-01, manner, x17 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),地方,地方,false), Span(8,9,List(1),住,住-01,false), Span(7,8,List(2),人,人,false), Span(6,7,List(3),通往,通往-01,false), Span(5,6,List(4),是,是-04,false), Span(4,5,List(5),都,都,false), Span(3,4,List(6),路,路,false), Span(2,3,List(7),大,大,false), Span(0,1,List(8),所有,所有,false)),Map(2 -> 人, 5 -> 都, 8 -> 所有, 7 -> 大, 1 -> 住-01, 4 -> 是-04, 6 -> 路, 0 -> 地方, 3 -> 通往-01),Map(路 -> 路, 大 -> 大, 所 -> 所有, 通 -> 通往-01, 地 -> 地方, 都 -> 都, 人 -> 人, 是 -> 是-04, 住 -> 住-01))),[Ljava.lang.String;@714f3da4,Annotation([Ljava.lang.String;@1caa9eb6,[Ljava.lang.String;@1f53481b,[Ljava.lang.String;@2fcd7d3f),Annotation([Ljava.lang.String;@27e7c77f,[Ljava.lang.String;@6f70a21b,[Ledu.cmu.lti.nlp.amr.Dependency;@6ae62c7e),Annotation([Ljava.lang.String;@2e869098,[Ljava.lang.String;@37c36608,[Ljava.lang.String;@5d497a91),Annotation([Ljava.lang.String;@617389a,[Ljava.lang.String;@1c8f6a90,[Ledu.cmu.lti.nlp.amr.Entity;@3050ac2f))
AMR:
(住 / 住-01, op, 地 / 地方)
(住 / 住-01, prep-from, 人 / 人)
(是 / 是-04, manner, 都 / 都)
(路 / 路, mod, 大 / 大)
(路 / 路, mod, 所 / 所有)
(通 / 通往-01, ARG1, 是 / 是-04)
(通 / 通往-01, snt1, 地 / 地方)
(通 / 通往-01, time, 路 / 路)

Decoded in 34,223 microseconds
Sentence: “ 你们 好 。 ” 小 王子 说 。

Spans:
Span 1-2:  你们 => 你们
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 好 => 好-04
Missing span: 说 => 说-01
Missing span: 好 => 好-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你们	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 好-01)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 好-01, arg0, x6 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),好,好-04,false), Span(1,2,List(4),你们,你们,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你们, 0 -> 说-02, 3 -> 好-04),Map(你 -> 你们, 王 -> 王子, 小 -> 小, 好 -> 好-04, 说 -> 说-02))),[Ljava.lang.String;@265bd546,Annotation([Ljava.lang.String;@1937eaff,[Ljava.lang.String;@7e0bc8a3,[Ljava.lang.String;@4b0f2299),Annotation([Ljava.lang.String;@33063f5b,[Ljava.lang.String;@15405bd6,[Ledu.cmu.lti.nlp.amr.Dependency;@352ed70d),Annotation([Ljava.lang.String;@70730db,[Ljava.lang.String;@5793b87,[Ljava.lang.String;@12704e15),Annotation([Ljava.lang.String;@512575e9,[Ljava.lang.String;@6f1a16fe,[Ledu.cmu.lti.nlp.amr.Entity;@2373ad99))
AMR:
(好 / 好-04, location, 你 / 你们)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 好 / 好-04)
(说 / 说-02, degree, 小 / 小)

Decoded in 9,312 microseconds
Sentence: 这 是 一 个 玫瑰 盛开 的 花园 。

Spans:
Span 1-2:  是 => 是-04
Span 4-5:  玫瑰 => 玫瑰
Span 5-6:  盛开 => 盛开-01
Span 7-8:  花园 => 花园
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  玫瑰 => 玫瑰
Oracle Span 5-6:  盛开 => 盛开-01
Oracle Span 7-8:  花园 => 花园
Oracle Span 0-1:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	6	clf	_	_
5	玫瑰	_	NN	NN	_	6	nn	_	_
6	盛开	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	花园	_	NN	NN	_	2	attr	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 花园, domain, x6 / 这)
(x8 / 盛开-01, arg0, x9 / 玫瑰)
(x8 / 盛开-01, location, x0 / 花园)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),花园,花园,false), Span(5,6,List(1),盛开,盛开-01,false), Span(4,5,List(2),玫瑰,玫瑰,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),这,这,false)),Map(2 -> 玫瑰, 1 -> 盛开-01, 4 -> 这, 0 -> 花园, 3 -> 是-04),Map(这 -> 这, 玫 -> 玫瑰, 花 -> 花园, 盛 -> 盛开-01, 是 -> 是-04))),[Ljava.lang.String;@33634f04,Annotation([Ljava.lang.String;@4993febc,[Ljava.lang.String;@7601bc96,[Ljava.lang.String;@48a0c8aa),Annotation([Ljava.lang.String;@6192a5d5,[Ljava.lang.String;@3722c145,[Ledu.cmu.lti.nlp.amr.Dependency;@4cbc2e3b),Annotation([Ljava.lang.String;@2975a9e,[Ljava.lang.String;@765ffb14,[Ljava.lang.String;@57562473),Annotation([Ljava.lang.String;@7a360554,[Ljava.lang.String;@424de326,[Ledu.cmu.lti.nlp.amr.Entity;@4bc33720))
AMR:
(是 / 是-04, ARG1, 这 / 这)
(盛 / 盛开-01, location, 玫 / 玫瑰)
(盛 / 盛开-01, location, 花 / 花园)
(花 / 花园, domain, 这 / 这)

Decoded in 15,637 microseconds
Sentence: “ 你 好 。 ” 玫瑰花 说道 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  玫瑰花 => 玫瑰花
Span 6-7:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  玫瑰花 => 玫瑰花
Oracle Span 6-7:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	7	conj	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	6	punct	_	_
6	玫瑰花	_	NT	NT	_	7	nn	_	_
7	说道	_	NN	NN	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 玫瑰花)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说道,说道,false), Span(5,6,List(1),玫瑰花,玫瑰花,false), Span(2,3,List(2),好,好-04,false), Span(1,2,List(3),你,你,false)),Map(2 -> 好-04, 1 -> 玫瑰花, 0 -> 说道, 3 -> 你),Map(你 -> 你, 玫 -> 玫瑰花, 好 -> 好-04, 说 -> 说道))),[Ljava.lang.String;@2dd0f797,Annotation([Ljava.lang.String;@67064bdc,[Ljava.lang.String;@4a7fd0c9,[Ljava.lang.String;@18578491),Annotation([Ljava.lang.String;@3291b443,[Ljava.lang.String;@671c4166,[Ledu.cmu.lti.nlp.amr.Dependency;@53d13cd4),Annotation([Ljava.lang.String;@77865933,[Ljava.lang.String;@480ad82c,[Ljava.lang.String;@4d18b73a),Annotation([Ljava.lang.String;@177515d1,[Ljava.lang.String;@52ff99cd,[Ledu.cmu.lti.nlp.amr.Entity;@4c2af006))
AMR:
(好 / 好-04, location, 你 / 你)
(玫 / 玫瑰花, degree, 好 / 好-04)
(说 / 说道, mod, 玫 / 玫瑰花)

Decoded in 8,742 microseconds
Sentence: 小 王子 瞅 着 这些 花 ，

Spans:
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 2-3:  瞅 => 瞅-01
Span 5-6:  花 => 花-01
Span 4-5:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  瞅 => 瞅-01
Oracle Span 5-6:  花 => 花
Oracle Span 4-5:  这些 => 这些

Incorrect span: 花 => 花-01
Incorrect span: 小 => 小
Missing span: 花 => 花
Missing span: 小 => 小-01
Dependencies:
1	小	_	NN	NN	_	3	nsubj	_	_
2	王子	_	AD	AD	_	3	advmod	_	_
3	瞅	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	这些	_	DT	DT	_	6	det	_	_
6	花	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 瞅-01, arg0, x2 / 王子)
(x0 / 瞅-01, arg1, x4 / 花)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 花, mod, x5 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),花,花-01,false), Span(4,5,List(1),这些,这些,false), Span(2,3,List(2),瞅,瞅-01,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小,false)),Map(2 -> 瞅-01, 1 -> 这些, 4 -> 小, 0 -> 花-01, 3 -> 王子),Map(这 -> 这些, 王 -> 王子, 小 -> 小, 花 -> 花-01, 瞅 -> 瞅-01))),[Ljava.lang.String;@44032fde,Annotation([Ljava.lang.String;@7b676112,[Ljava.lang.String;@5578be42,[Ljava.lang.String;@4e49ce2b),Annotation([Ljava.lang.String;@136965e3,[Ljava.lang.String;@53c6f96d,[Ledu.cmu.lti.nlp.amr.Dependency;@435cc7f9),Annotation([Ljava.lang.String;@4364712f,[Ljava.lang.String;@1b7a52dd,[Ljava.lang.String;@7f93dd4e),Annotation([Ljava.lang.String;@5ad5be4a,[Ljava.lang.String;@3ad85136,[Ledu.cmu.lti.nlp.amr.Entity;@737d100a))
AMR:
(王 / 王子, mod, 小 / 小)
(瞅 / 瞅-01, location, 王 / 王子)
(瞅 / 瞅-01, season, 花 / 花-01)
(花 / 花-01, ARG2, 这 / 这些)

Decoded in 9,307 microseconds
Sentence: 它们 全 都 和 他 的 那 朵 花 一样 。

Spans:
Span 9-10:  一样 => 一样
Span 4-5:  他 => 他
Span 1-2:  全 => 全
Span 0-1:  它们 => 它们
Span 8-9:  花 => 花-01
Span 6-7:  那 => 那
Span 2-3:  都 => 都

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-02
Oracle Span 4-5:  他 => 他
Oracle Span 1-2:  全 => 全-01
Oracle Span 0-1:  它们 => 它们
Oracle Span 8-9:  花 => 花
Oracle Span 6-7:  那 => 那
Oracle Span 2-3:  都 => 都

Incorrect span: 一样 => 一样
Incorrect span: 花 => 花-01
Incorrect span: 全 => 全
Missing span: 一样 => 一样-02
Missing span: 全 => 全-01
Missing span: 花 => 花
Dependencies:
1	它们	_	PN	PN	_	10	nsubj	_	_
2	全	_	AD	AD	_	10	advmod	_	_
3	都	_	AD	AD	_	10	advmod	_	_
4	和	_	P	P	_	10	prep	_	_
5	他	_	PN	PN	_	9	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	那	_	DT	DT	_	9	det	_	_
8	朵	_	M	M	_	7	clf	_	_
9	花	_	NN	NN	_	4	pobj	_	_
10	一样	_	VA	VA	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 一样-02, arg0, x2 / 它们)
(x0 / 一样-02, arg1, x3 / 花)
(x0 / 一样-02, manner, x6 / 都)
(x0 / 一样-02, manner, x7 / 全-01)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),一样,一样,false), Span(8,9,List(1),花,花-01,false), Span(6,7,List(2),那,那,false), Span(4,5,List(3),他,他,false), Span(2,3,List(4),都,都,false), Span(1,2,List(5),全,全,false), Span(0,1,List(6),它们,它们,false)),Map(2 -> 那, 5 -> 全, 1 -> 花-01, 4 -> 都, 6 -> 它们, 0 -> 一样, 3 -> 他),Map(全 -> 全, 它 -> 它们, 他 -> 他, 花 -> 花-01, 都 -> 都, 那 -> 那, 一 -> 一样))),[Ljava.lang.String;@12e5da86,Annotation([Ljava.lang.String;@6535117e,[Ljava.lang.String;@1d1cbd0f,[Ljava.lang.String;@6fa13e6),Annotation([Ljava.lang.String;@3af7d855,[Ljava.lang.String;@77049094,[Ledu.cmu.lti.nlp.amr.Dependency;@f88bfbe),Annotation([Ljava.lang.String;@59bbe88a,[Ljava.lang.String;@5d8ab698,[Ljava.lang.String;@ed91d8d),Annotation([Ljava.lang.String;@446626a7,[Ljava.lang.String;@429f7919,[Ledu.cmu.lti.nlp.amr.Entity;@4a2929a4))
AMR:
(一 / 一样, location, 它 / 它们)
(一 / 一样, manner, 全 / 全)
(一 / 一样, manner, 都 / 都)
(一 / 一样, mod, 花 / 花-01)
(花 / 花-01, ARG3, 他 / 他)
(花 / 花-01, ARG4, 那 / 那)

Decoded in 19,690 microseconds
Sentence: “ 你们 是 什么 花 ？ ” 小 王子 惊奇 地 问 。

Spans:
Span 3-4:  什么 => 什么
Span 1-2:  你们 => 你们
Span 10-11:  地 => 地
Span 7-8:  小 => 小
Span 9-10:  惊奇 => 惊奇-01
Span 2-3:  是 => 是-04
Span 8-9:  王子 => 王子
Span 4-5:  花 => 花-01
Span 11-12:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  小 => 小-01
Oracle Span 9-10:  惊奇 => 惊奇-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 4-5:  花 => 花
Oracle Span 11-12:  问 => 问-01

Extra span: 地 => 地
Incorrect span: 小 => 小
Incorrect span: 花 => 花-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Missing span: 花 => 花
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	什么	_	PN	PN	_	5	nsubj	_	_
5	花	_	VV	VV	_	3	conj	_	_
6	？	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	惊奇	_	VA	VA	_	0	root	_	_
11	地	_	NN	NN	_	12	nn	_	_
12	问	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 问-01, arg0, x3 / 王子)
(x0 / 问-01, arg1, x5 / 花)
(x0 / 问-01, manner, x2 / 惊奇-01)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 花, domain, x7 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),问,问-01,false), Span(10,11,List(1),地,地,false), Span(9,10,List(2),惊奇,惊奇-01,false), Span(8,9,List(3),王子,王子,false), Span(7,8,List(4),小,小,false), Span(4,5,List(5),花,花-01,false), Span(3,4,List(6),什么,什么,false), Span(2,3,List(7),是,是-04,false), Span(1,2,List(8),你们,你们,false)),Map(2 -> 惊奇-01, 5 -> 花-01, 8 -> 你们, 7 -> 是-04, 1 -> 地, 4 -> 小, 6 -> 什么, 0 -> 问-01, 3 -> 王子),Map(你 -> 你们, 王 -> 王子, 小 -> 小, 惊 -> 惊奇-01, 地 -> 地, 花 -> 花-01, 什 -> 什么, 问 -> 问-01, 是 -> 是-04))),[Ljava.lang.String;@cda6019,Annotation([Ljava.lang.String;@797c3c3b,[Ljava.lang.String;@4012d5bc,[Ljava.lang.String;@4375b013),Annotation([Ljava.lang.String;@1cf0cacc,[Ljava.lang.String;@4f5b08d,[Ledu.cmu.lti.nlp.amr.Dependency;@529c2a9a),Annotation([Ljava.lang.String;@3c87fdf2,[Ljava.lang.String;@26bbe604,[Ljava.lang.String;@fe34b86),Annotation([Ljava.lang.String;@3c98781a,[Ljava.lang.String;@3f736a16,[Ledu.cmu.lti.nlp.amr.Entity;@4601203a))
AMR:
(什 / 什么, purpose, 花 / 花-01)
(地 / 地, mod, 惊 / 惊奇-01)
(小 / 小, location, 花 / 花-01)
(是 / 是-04, degree, 你 / 你们)
(是 / 是-04, purpose, 花 / 花-01)
(王 / 王子, mod, 小 / 小)
(王 / 王子, mod, 惊 / 惊奇-01)
(问 / 问-01, manner, 惊 / 惊奇-01)

Decoded in 23,272 microseconds
Sentence: “ 我们 是 玫瑰花 。 ” 花儿们 说道 。

Spans:
Span 1-2:  我们 => 我们
Span 2-3:  是 => 是-04
Span 3-4:  玫瑰花 => 玫瑰花
Span 6-7:  花儿们 => 花儿们
Span 7-8:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  玫瑰花 => 玫瑰花
Oracle Span 6-7:  花儿们 => 花儿们
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 是 => 是-04
Extra span: 我们 => 我们
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	prep	_	_
3	是	_	VC	VC	_	0	root	_	_
4	玫瑰花	_	NN	NN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	7	punct	_	_
7	花儿们	_	NT	NT	_	8	nn	_	_
8	说道	_	NN	NN	_	3	prep	_	_
9	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 花儿们)
(x0 / 说道-01, arg1, x3 / 玫瑰花)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说道,说道,false), Span(6,7,List(1),花儿们,花儿们,false), Span(3,4,List(2),玫瑰花,玫瑰花,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),我们,我们,false)),Map(2 -> 玫瑰花, 1 -> 花儿们, 4 -> 我们, 0 -> 说道, 3 -> 是-04),Map(我 -> 我们, 玫 -> 玫瑰花, 花 -> 花儿们, 说 -> 说道, 是 -> 是-04))),[Ljava.lang.String;@53abfc07,Annotation([Ljava.lang.String;@2c8c16c0,[Ljava.lang.String;@80bfa9d,[Ljava.lang.String;@47c40b56),Annotation([Ljava.lang.String;@4b039c6d,[Ljava.lang.String;@7f5b9db,[Ledu.cmu.lti.nlp.amr.Dependency;@507d64aa),Annotation([Ljava.lang.String;@37045b48,[Ljava.lang.String;@60b34931,[Ljava.lang.String;@4aa21f9d),Annotation([Ljava.lang.String;@71c17a57,[Ljava.lang.String;@640ab13c,[Ledu.cmu.lti.nlp.amr.Entity;@1e0a864d))
AMR:
(是 / 是-04, direction, 我 / 我们)
(是 / 是-04, purpose, 花 / 花儿们)
(玫 / 玫瑰花, mod, 是 / 是-04)
(说 / 说道, mod, 花 / 花儿们)

Decoded in 9,115 microseconds
Sentence: 他 感到 自己 非常 不幸 。

Spans:
Span 4-5:  不幸 => 不幸-01
Span 0-1:  他 => 他
Span 1-2:  感到 => 感到-01
Span 2-3:  自己 => 自己
Span 3-4:  非常 => 非常

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  不幸 => 不幸-01
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 3-4:  非常 => 非常-01

Incorrect span: 非常 => 非常
Extra span: 自己 => 自己
Missing span: 非常 => 非常-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	自己	_	PN	PN	_	4	advmod	_	_
4	非常	_	AD	AD	_	2	ccomp	_	_
5	不幸	_	AD	AD	_	2	advmod	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	他	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 他)
(x0 / 感到-01, arg1, x3 / 不幸-01)
(x3 / 不幸-01, degree, x4 / 非常-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),不幸,不幸-01,false), Span(3,4,List(1),非常,非常,false), Span(2,3,List(2),自己,自己,false), Span(1,2,List(3),感到,感到-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 自己, 1 -> 非常, 4 -> 他, 0 -> 不幸-01, 3 -> 感到-01),Map(自 -> 自己, 感 -> 感到-01, 他 -> 他, 非 -> 非常, 不 -> 不幸-01))),[Ljava.lang.String;@440e3ce6,Annotation([Ljava.lang.String;@3e67f5f2,[Ljava.lang.String;@fd53053,[Ljava.lang.String;@4527f70a),Annotation([Ljava.lang.String;@707b1a44,[Ljava.lang.String;@7132a9dc,[Ledu.cmu.lti.nlp.amr.Dependency;@57435801),Annotation([Ljava.lang.String;@2da66a44,[Ljava.lang.String;@527fc8e,[Ljava.lang.String;@61bfc9bf),Annotation([Ljava.lang.String;@2c7106d9,[Ljava.lang.String;@329bad59,[Ledu.cmu.lti.nlp.amr.Entity;@862f408))
AMR:
(不 / 不幸-01, degree, 非 / 非常)
(感 / 感到-01, ARG4, 他 / 他)
(感 / 感到-01, accompanier, 不 / 不幸-01)
(感 / 感到-01, topic, 自 / 自己)

Decoded in 9,158 microseconds
Sentence: 他 的 那 朵 花 曾 对 他 说 她 是 整个 宇宙 中 独一无二 的 一 种 花 。

Spans:
Span 7-8:  他 => 他
Span 0-1:  他 => 他
Span 9-10:  她 => 她
Span 12-13:  宇宙 => 宇宙
Span 6-7:  对 => 对-02
Span 11-12:  整个 => 整个
Span 10-11:  是 => 是-04
Span 5-6:  曾 => 曾
Span 14-15:  独一无二 => 独一无二
Span 17-18:  种 => 种
Span 18-19:  花 => 花-01
Span 4-5:  花 => 花-01
Span 8-9:  说 => 说-02
Span 2-3:  那 => 那

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 12-13:  宇宙 => 宇宙
Oracle Span 11-12:  整个 => 整个
Oracle Span 5-6:  曾 => 曾
Oracle Span 14-15:  独一无二 => 独一无二-01
Oracle Span 4-5:  花 => 花
Oracle Span 18-19:  花 => 花
Oracle Span 8-9:  说 => 说-01
Oracle Span 2-3:  那 => 那

Incorrect span: 花 => 花-01
Extra span: 种 => 种
Incorrect span: 独一无二 => 独一无二
Extra span: 是 => 是-04
Extra span: 她 => 她
Incorrect span: 说 => 说-02
Extra span: 他 => 他
Extra span: 对 => 对-02
Incorrect span: 花 => 花-01
Missing span: 说 => 说-01
Missing span: 花 => 花
Missing span: 独一无二 => 独一无二-01
Missing span: 花 => 花
Dependencies:
1	他	_	PN	PN	_	5	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	5	det	_	_
4	朵	_	M	M	_	3	clf	_	_
5	花	_	NN	NN	_	9	nsubj	_	_
6	曾	_	AD	AD	_	9	advmod	_	_
7	对	_	P	P	_	9	prep	_	_
8	他	_	PN	PN	_	7	pobj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	她	_	PN	PN	_	11	top	_	_
11	是	_	VC	VC	_	9	ccomp	_	_
12	整个	_	JJ	JJ	_	13	amod	_	_
13	宇宙	_	NN	NN	_	14	lobj	_	_
14	中	_	LC	LC	_	19	dep	_	_
15	独一无二	_	CD	CD	_	19	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	种	_	M	M	_	19	clf	_	_
19	花	_	NN	NN	_	11	attr	_	_
20	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x3 / 花)
(x0 / 说-01, arg1, x7 / 花)
(x0 / 说-01, time, x2 / 曾)
(x10 / 宇宙, mod, x11 / 整个)
(x3 / 花, mod, x4 / 那)
(x3 / 花, poss, x5 / 他)
(x7 / 花, location, x10 / 宇宙)
(x7 / 花, mod, x9 / 独一无二-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),花,花-01,false), Span(17,18,List(1),种,种,false), Span(14,15,List(2),独一无二,独一无二,false), Span(12,13,List(3),宇宙,宇宙,false), Span(11,12,List(4),整个,整个,false), Span(10,11,List(5),是,是-04,false), Span(9,10,List(6),她,她,false), Span(8,9,List(7),说,说-02,false), Span(7,8,List(8),他,他,false), Span(6,7,List(9),对,对-02,false), Span(5,6,List(10),曾,曾,false), Span(4,5,List(11),花,花-01,false), Span(2,3,List(12),那,那,false), Span(0,1,List(13),他,他,false)),Map(2 -> 独一无二, 5 -> 是-04, 12 -> 那, 8 -> 他, 7 -> 说-02, 1 -> 种, 4 -> 整个, 11 -> 花-01, 6 -> 她, 0 -> 花-01, 9 -> 对-02, 3 -> 宇宙, 10 -> 曾, 13 -> 他),Map(他2 -> 他, 宇 -> 宇宙, 整 -> 整个, 花2 -> 花-01, 独 -> 独一无二, 他 -> 他, 曾 -> 曾, 花 -> 花-01, 种 -> 种, 说 -> 说-02, 那 -> 那, 对 -> 对-02, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@178f268a,Annotation([Ljava.lang.String;@33ecbd6c,[Ljava.lang.String;@5c723f2d,[Ljava.lang.String;@432f521f),Annotation([Ljava.lang.String;@2d7a9786,[Ljava.lang.String;@7bab5898,[Ledu.cmu.lti.nlp.amr.Dependency;@366d8b97),Annotation([Ljava.lang.String;@feb98ef,[Ljava.lang.String;@7654f833,[Ljava.lang.String;@571a01f9),Annotation([Ljava.lang.String;@d7109be,[Ljava.lang.String;@5e0ec41f,[Ledu.cmu.lti.nlp.amr.Entity;@f4a3a8d))
AMR:
(宇 / 宇宙, mod, 整 / 整个)
(对 / 对-02, ARG0, 他 / 他)
(对 / 对-02, ARG4, 花2 / 花-01)
(对 / 对-02, degree, 说 / 说-02)
(对 / 对-02, manner, 曾 / 曾)
(是 / 是-04, ARG1, 她 / 她)
(是 / 是-04, ARG6, 整 / 整个)
(种 / 种, location, 独 / 独一无二)
(花 / 花-01, ARG4, 种 / 种)
(花 / 花-01, poss, 他2 / 他)
(花2 / 花-01, ARG4, 那 / 那)
(说 / 说-02, ARG4, 是 / 是-04)
(说 / 说-02, compared-to, 花 / 花-01)

Decoded in 65,316 microseconds
Sentence: 可是 ， 仅 在 这 一 座 花园 里 就 有 五千 朵 完全 一样 的 这 种 花朵 ！

Spans:
Span 14-15:  一样 => 一样
Span 2-3:  仅 => 仅
Span 3-4:  在 => 在-01
Span 13-14:  完全 => 完全-01
Span 9-10:  就 => 就-01
Span 10-11:  有 => 有-06
Span 17-18:  种 => 种
Span 7-8:  花园 => 花园
Span 18-19:  花朵 => 花朵
Span 16-17:  这 => 这
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  一样 => 一样-01
Oracle Span 2-3:  仅 => 仅
Oracle Span 13-14:  完全 => 完全-01
Oracle Span 9-10:  就 => 就
Oracle Span 10-11:  有 => 有-03
Oracle Span 7-8:  花园 => 花园
Oracle Span 18-19:  花朵 => 花朵
Oracle Span 4-5:  这 => 这
Oracle Span 16-17:  这 => 这

Extra span: 种 => 种
Incorrect span: 一样 => 一样
Incorrect span: 有 => 有-06
Incorrect span: 就 => 就-01
Extra span: 在 => 在-01
Missing span: 有 => 有-03
Missing span: 一样 => 一样-01
Missing span: 就 => 就
Dependencies:
1	可是	_	AD	AD	_	11	advmod	_	_
2	,	_	PU	PU	_	11	punct	_	_
3	仅	_	AD	AD	_	4	advmod	_	_
4	在	_	P	P	_	11	prep	_	_
5	这	_	DT	DT	_	8	det	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	座	_	M	M	_	5	dep	_	_
8	花园	_	NN	NN	_	9	lobj	_	_
9	里	_	LC	LC	_	4	plmod	_	_
10	就	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	0	root	_	_
12	五千	_	CD	CD	_	13	nummod	_	_
13	朵	_	M	M	_	15	dep	_	_
14	完全	_	AD	AD	_	15	advmod	_	_
15	一样	_	VA	VA	_	19	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	这	_	DT	DT	_	19	det	_	_
18	种	_	M	M	_	17	clf	_	_
19	花朵	_	NN	NN	_	11	dobj	_	_
20	！	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 一样-01, degree, x12 / 完全-01)
(x2 / 有-03, arg0, x4 / 花园)
(x2 / 有-03, arg1, x8 / 花朵)
(x2 / 有-03, manner, x3 / 就)
(x4 / 花园, mod, x5 / 这)
(x4 / 花园, mod, x7 / 仅)
(x8 / 花朵, manner, x11 / 一样-01)
(x8 / 花朵, mod, x9 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),花朵,花朵,false), Span(17,18,List(1),种,种,false), Span(16,17,List(2),这,这,false), Span(14,15,List(3),一样,一样,false), Span(13,14,List(4),完全,完全-01,false), Span(10,11,List(5),有,有-06,false), Span(9,10,List(6),就,就-01,false), Span(7,8,List(7),花园,花园,false), Span(4,5,List(8),这,这,false), Span(3,4,List(9),在,在-01,false), Span(2,3,List(10),仅,仅,false)),Map(2 -> 这, 5 -> 有-06, 8 -> 这, 7 -> 花园, 1 -> 种, 4 -> 完全-01, 6 -> 就-01, 9 -> 在-01, 0 -> 花朵, 10 -> 仅, 3 -> 一样),Map(仅 -> 仅, 就 -> 就-01, 在 -> 在-01, 这 -> 这, 花2 -> 花园, 完 -> 完全-01, 花 -> 花朵, 这2 -> 这, 种 -> 种, 一 -> 一样, 有 -> 有-06))),[Ljava.lang.String;@8d8f754,Annotation([Ljava.lang.String;@d613308,[Ljava.lang.String;@25673087,[Ljava.lang.String;@7b27e8f4),Annotation([Ljava.lang.String;@348ad293,[Ljava.lang.String;@30f74e79,[Ledu.cmu.lti.nlp.amr.Dependency;@2c88a3e8),Annotation([Ljava.lang.String;@68ac9ec5,[Ljava.lang.String;@a50d709,[Ljava.lang.String;@5ed4bc),Annotation([Ljava.lang.String;@6920b0bc,[Ljava.lang.String;@65f651eb,[Ledu.cmu.lti.nlp.amr.Entity;@69923ac3))
AMR:
(一 / 一样, degree, 完 / 完全-01)
(在 / 在-01, manner, 仅 / 仅)
(有 / 有-06, degree, 完 / 完全-01)
(有 / 有-06, manner, 就 / 就-01)
(种 / 种, mod, 一 / 一样)
(种 / 种, mod, 花 / 花朵)
(种 / 种, mod, 这 / 这)
(花2 / 花园, mod, 在 / 在-01)
(花2 / 花园, mod, 就 / 就-01)
(花2 / 花园, mod, 这2 / 这)

Decoded in 38,284 microseconds
Sentence: 小 王子 自言自语 地 说 ： “ 如果 她 看到 这些 ， 她 是 一定 会 很 恼火 … 她 会 咳嗽 得 更 厉害 ， 并且 为 避免 让 人 耻笑 ， 她 会 佯装 死去 。

Spans:
Span 14-15:  一定 => 一定
Span 30-31:  人 => 人
Span 34-35:  会 => 会-03
Span 20-21:  会 => 会-03
Span 15-16:  会 => 会-03
Span 35-36:  佯装 => 佯装-01
Span 24-25:  厉害 => 厉害
Span 21-22:  咳嗽 => 咳嗽-01
Span 3-4:  地 => 地
Span 33-34:  她 => 她
Span 19-20:  她 => 她
Span 12-13:  她 => 她
Span 8-9:  她 => 她
Span 0-1:  小 => 小
Span 16-17:  很 => 很
Span 22-23:  得 => 得-06
Span 17-18:  恼火 => 恼火-01
Span 13-14:  是 => 是-04
Span 23-24:  更 => 更-01
Span 36-37:  死去 => 死去
Span 1-2:  王子 => 王子
Span 9-10:  看到 => (thing :arg1-of 看到-01)
Span 31-32:  耻笑 => 耻笑-01
Span 2-3:  自言自语 => 自言自语
Span 29-30:  让 => 让-01
Span 4-5:  说 => 说-02
Span 10-11:  这些 => 这些
Span 28-29:  避免 => 避免-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 那么 ， 我 还 得 装 着 去 护理 她 ， 因为 如果 不 这样 的话 ， 她 为了 使 我 难堪 ， 她 可能 会 真的 死去 … ”

Spans:
Span 13-14:  不 => 不
Span 18-19:  为了 => 为了-01
Span 25-26:  会 => 会-03
Span 19-20:  使 => 使-01
Span 7-8:  去 => 去-02
Span 24-25:  可能 => 可能-02
Span 23-24:  她 => 她
Span 17-18:  她 => 她
Span 9-10:  她 => 她
Span 4-5:  得 => 得-06
Span 20-21:  我 => 我
Span 2-3:  我 => 我
Span 8-9:  护理 => 护理-01
Span 27-28:  死去 => 死去
Span 26-27:  真的 => 真的
Span 5-6:  装 => 装-03
Span 3-4:  还 => 还
Span 14-15:  这样 => 这样-01
Span 0-1:  那么 => 那么
Span 21-22:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 25-26:  会 => 会-02
Oracle Span 19-20:  使 => 使-01
Oracle Span 24-25:  可能 => 可能-01
Oracle Span 9-10:  她 => 她
Oracle Span 4-5:  得 => 得-02
Oracle Span 2-3:  我 => 我
Oracle Span 8-9:  护理 => 护理-01
Oracle Span 27-28:  死去 => 死去-01
Oracle Span 26-27:  真的 => 真的
Oracle Span 5-6:  装 => 装-03
Oracle Span 14-15:  这样 => 这样
Oracle Span 21-22:  难堪 => 难堪-01

Incorrect span: 死去 => 死去
Incorrect span: 会 => 会-03
Incorrect span: 可能 => 可能-02
Extra span: 她 => 她
Extra span: 我 => 我
Extra span: 为了 => 为了-01
Extra span: 她 => 她
Incorrect span: 这样 => 这样-01
Extra span: 不 => 不
Extra span: 去 => 去-02
Incorrect span: 得 => 得-06
Extra span: 还 => 还
Extra span: 那么 => 那么
Missing span: 这样 => 这样
Missing span: 可能 => 可能-01
Missing span: 会 => 会-02
Missing span: 死去 => 死去-01
Missing span: 得 => 得-02
Dependencies:
1	那么	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	还	_	AD	AD	_	6	advmod	_	_
5	得	_	VV	VV	_	6	mmod	_	_
6	装	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	去	_	MSP	MSP	_	9	dep	_	_
9	护理	_	VV	VV	_	6	dobj	_	_
10	她	_	PN	PN	_	26	nsubj	_	_
11	,	_	PU	PU	_	26	punct	_	_
12	因为	_	CS	CS	_	15	advmod	_	_
13	如果	_	CS	CS	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	这样	_	VV	VV	_	26	pccomp	_	_
16	的话	_	SP	SP	_	15	dep	_	_
17	,	_	PU	PU	_	26	punct	_	_
18	她	_	PN	PN	_	26	nsubj	_	_
19	为了	_	P	P	_	26	prep	_	_
20	使	_	VV	VV	_	19	pccomp	_	_
21	我	_	PN	PN	_	22	nsubj	_	_
22	难堪	_	VV	VV	_	20	ccomp	_	_
23	,	_	PU	PU	_	22	punct	_	_
24	她	_	PN	PN	_	25	nsubj	_	_
25	可能	_	VV	VV	_	22	ccomp	_	_
26	会	_	VV	VV	_	6	conj	_	_
27	真的	_	NN	NN	_	29	nn	_	_
28	死去	_	NN	NN	_	29	nn	_	_
29	…	_	NN	NN	_	26	dobj	_	_
30	”	_	PU	PU	_	29	punct	_	_

Oracle:
(x65 / 可能-01, arg0, x67 / 会-02)
(x65 / 可能-01, purpose, x71 / 使-01)
(x67 / 会-02, arg0, x68 / 死去-01)
(x68 / 死去-01, arg0, x70 / 她)
(x68 / 死去-01, manner, x69 / 真的)
(x71 / 使-01, arg1, x73 / 我)
(x71 / 使-01, arg2, x74 / 难堪-01)
(x75 / 得-02, arg1, x77 / 装-03)
(x77 / 装-03, arg1, x79 / 护理-01)

Input(Some(Graph(null,ArrayBuffer(Span(27,28,List(0),死去,死去,false), Span(26,27,List(1),真的,真的,false), Span(25,26,List(2),会,会-03,false), Span(24,25,List(3),可能,可能-02,false), Span(23,24,List(4),她,她,false), Span(21,22,List(5),难堪,难堪-01,false), Span(20,21,List(6),我,我,false), Span(19,20,List(7),使,使-01,false), Span(18,19,List(8),为了,为了-01,false), Span(17,18,List(9),她,她,false), Span(14,15,List(10),这样,这样-01,false), Span(13,14,List(11),不,不,false), Span(9,10,List(12),她,她,false), Span(8,9,List(13),护理,护理-01,false), Span(7,8,List(14),去,去-02,false), Span(5,6,List(15),装,装-03,false), Span(4,5,List(16),得,得-06,false), Span(3,4,List(17),还,还,false), Span(2,3,List(18),我,我,false), Span(0,1,List(19),那么,那么,false)),Map(2 -> 会-03, 5 -> 难堪-01, 12 -> 她, 15 -> 装-03, 8 -> 为了-01, 18 -> 我, 7 -> 使-01, 17 -> 还, 1 -> 真的, 4 -> 她, 11 -> 不, 14 -> 去-02, 6 -> 我, 0 -> 死去, 9 -> 她, 16 -> 得-06, 19 -> 那么, 3 -> 可能-02, 10 -> 这样-01, 13 -> 护理-01),Map(护 -> 护理-01, 难 -> 难堪-01, 我 -> 我, 她2 -> 她, 得 -> 得-06, 这 -> 这样-01, 装 -> 装-03, 死 -> 死去, 我2 -> 我, 去 -> 去-02, 为 -> 为了-01, 会 -> 会-03, 不 -> 不, 还 -> 还, 那 -> 那么, 使 -> 使-01, 她3 -> 她, 真 -> 真的, 可 -> 可能-02, 她 -> 她))),[Ljava.lang.String;@73d60e76,Annotation([Ljava.lang.String;@24f870ee,[Ljava.lang.String;@5c441290,[Ljava.lang.String;@3c78e551),Annotation([Ljava.lang.String;@7f1ef916,[Ljava.lang.String;@1886991b,[Ledu.cmu.lti.nlp.amr.Dependency;@64aad809),Annotation([Ljava.lang.String;@1f03fba0,[Ljava.lang.String;@17dd671f,[Ljava.lang.String;@3bbf6abe),Annotation([Ljava.lang.String;@9679750,[Ljava.lang.String;@9b9a327,[Ledu.cmu.lti.nlp.amr.Entity;@75a0c890))
AMR:
(不 / 不, domain, 护 / 护理-01)
(为 / 为了-01, instrument, 我 / 我)
(为 / 为了-01, manner, 这 / 这样-01)
(为 / 为了-01, season, 使 / 使-01)
(为 / 为了-01, season, 难 / 难堪-01)
(为 / 为了-01, subevent, 她2 / 她)
(会 / 会-03, ARG5, 真 / 真的)
(去 / 去-02, purpose, 装 / 装-03)
(去 / 去-02, season, 护 / 护理-01)
(可 / 可能-02, domain, 她 / 她)
(可 / 可能-02, purpose, 难 / 难堪-01)
(可 / 可能-02, season, 会 / 会-03)
(得 / 得-06, degree, 那 / 那么)
(得 / 得-06, manner, 还 / 还)
(得 / 得-06, poss, 我2 / 我)
(得 / 得-06, season, 装 / 装-03)
(护 / 护理-01, season, 她3 / 她)
(真 / 真的, part, 死 / 死去)
(这 / 这样-01, manner, 不 / 不)

Decoded in 115,656 microseconds
Sentence: 接着 他 又 说道 ： “ 我 还 以为 我 有 一 朵 独一无二 的 花 呢 ， 我 有 的 仅 是 一 朵 普通 的 花 。

Spans:
Span 21-22:  仅 => 仅
Span 1-2:  他 => 他
Span 8-9:  以为 => 以为-02
Span 2-3:  又 => 又
Span 18-19:  我 => 我
Span 9-10:  我 => 我
Span 6-7:  我 => 我
Span 0-1:  接着 => 接着-01
Span 22-23:  是 => 是-04
Span 25-26:  普通 => 普通
Span 19-20:  有 => 有-06
Span 10-11:  有 => 有-06
Span 13-14:  独一无二 => 独一无二
Span 27-28:  花 => 花-01
Span 15-16:  花 => 花-01
Span 3-4:  说道 => 说道
Span 7-8:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 21-22:  仅 => 仅
Oracle Span 1-2:  他 => 他
Oracle Span 8-9:  以为 => 以为-02
Oracle Span 2-3:  又 => 又
Oracle Span 25-26:  普通 => 普通
Oracle Span 10-11:  有 => 有-01
Oracle Span 19-20:  有 => (thing :arg1-of 有-01)
Oracle Span 13-14:  独一无二 => 独一无二-01
Oracle Span 15-16:  花 => 花
Oracle Span 27-28:  花 => 花
Oracle Span 3-4:  说道 => 说道-01
Oracle Span 7-8:  还 => 还

Incorrect span: 花 => 花-01
Extra span: 是 => 是-04
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Incorrect span: 花 => 花-01
Incorrect span: 独一无二 => 独一无二
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 接着 => 接着-01
Missing span: 说道 => 说道-01
Missing span: 花 => 花
Missing span: 独一无二 => 独一无二-01
Missing span: 有 => 有-01
Missing span: 花 => 花
Missing span: 有 => (thing :arg1-of 有-01)
Dependencies:
1	接着	_	NR	NR	_	4	nsubj	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说道	_	VV	VV	_	23	pccomp	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	9	nsubj	_	_
8	还	_	AD	AD	_	9	advmod	_	_
9	以为	_	VV	VV	_	4	ccomp	_	_
10	我	_	PN	PN	_	11	top	_	_
11	有	_	VE	VE	_	9	ccomp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	朵	_	M	M	_	16	clf	_	_
14	独一无二	_	CD	CD	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	花	_	NN	NN	_	11	dobj	_	_
17	呢	_	SP	SP	_	4	dep	_	_
18	,	_	PU	PU	_	23	punct	_	_
19	我	_	PN	PN	_	20	top	_	_
20	有	_	VE	VE	_	23	nsubj	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	仅	_	AD	AD	_	23	advmod	_	_
23	是	_	VC	VC	_	0	root	_	_
24	一	_	CD	CD	_	25	nummod	_	_
25	朵	_	M	M	_	28	clf	_	_
26	普通	_	VA	VA	_	28	rcmod	_	_
27	的	_	DEC	DEC	_	26	cpm	_	_
28	花	_	NN	NN	_	23	attr	_	_
29	。	_	PU	PU	_	23	punct	_	_

Oracle:
(x11 / 有-01, arg1, x9 / 花)
(x2 / 说道-01, arg0, x3 / 他)
(x2 / 说道-01, manner, x4 / 又)
(x27 / 花, domain, x30 / thing)
(x27 / 花, mod, x28 / 普通)
(x30 / thing, manner, x31 / 仅)
(x32 / 有-01, arg1, x30 / thing)
(x6 / 以为-02, arg1, x9 / 花)
(x6 / 以为-02, manner, x8 / 还)
(x9 / 花, mod, x14 / 独一无二-01)

Input(Some(Graph(null,ArrayBuffer(Span(27,28,List(0),花,花-01,false), Span(25,26,List(1),普通,普通,false), Span(22,23,List(2),是,是-04,false), Span(21,22,List(3),仅,仅,false), Span(19,20,List(4),有,有-06,false), Span(18,19,List(5),我,我,false), Span(15,16,List(6),花,花-01,false), Span(13,14,List(7),独一无二,独一无二,false), Span(10,11,List(8),有,有-06,false), Span(9,10,List(9),我,我,false), Span(8,9,List(10),以为,以为-02,false), Span(7,8,List(11),还,还,false), Span(6,7,List(12),我,我,false), Span(3,4,List(13),说道,说道,false), Span(2,3,List(14),又,又,false), Span(1,2,List(15),他,他,false), Span(0,1,List(16),接着,接着-01,false)),Map(2 -> 是-04, 5 -> 我, 12 -> 我, 15 -> 他, 8 -> 有-06, 7 -> 独一无二, 1 -> 普通, 4 -> 有-06, 11 -> 还, 14 -> 又, 6 -> 花-01, 0 -> 花-01, 9 -> 我, 16 -> 接着-01, 3 -> 仅, 10 -> 以为-02, 13 -> 说道),Map(又 -> 又, 仅 -> 仅, 有2 -> 有-06, 我3 -> 我, 接 -> 接着-01, 我 -> 我, 我2 -> 我, 花2 -> 花-01, 独 -> 独一无二, 以 -> 以为-02, 他 -> 他, 花 -> 花-01, 说 -> 说道, 还 -> 还, 普 -> 普通, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@358ab600,Annotation([Ljava.lang.String;@e26af6,[Ljava.lang.String;@44065156,[Ljava.lang.String;@3791f50e),Annotation([Ljava.lang.String;@574b7f4a,[Ljava.lang.String;@44ed0a8f,[Ledu.cmu.lti.nlp.amr.Dependency;@32177fa5),Annotation([Ljava.lang.String;@a96d56c,[Ljava.lang.String;@6ab4a5b,[Ljava.lang.String;@2abe9173),Annotation([Ljava.lang.String;@235d29d6,[Ljava.lang.String;@1fdca564,[Ledu.cmu.lti.nlp.amr.Entity;@43f9dd56))
AMR:
(以 / 以为-02, manner, 还 / 还)
(以 / 以为-02, prep-on-behalf, 我3 / 我)
(以 / 以为-02, prep-within, 我2 / 我)
(接 / 接着-01, condition, 他 / 他)
(是 / 是-04, degree, 仅 / 仅)
(是 / 是-04, prep-on-behalf, 有 / 有-06)
(普 / 普通, destination, 花 / 花-01)
(普 / 普通, prep-on-behalf, 是 / 是-04)
(有 / 有-06, prep-without, 我 / 我)
(有 / 有-06, source, 花2 / 花-01)
(有2 / 有-06, prep-on-behalf, 以 / 以为-02)
(有2 / 有-06, prep-within, 花2 / 花-01)
(独 / 独一无二, destination, 花2 / 花-01)
(说 / 说道, manner, 又 / 又)
(说 / 说道, prep-on-behalf, 接 / 接着-01)
(说 / 说道, prep-within, 以 / 以为-02)

Decoded in 86,465 microseconds
Sentence: 这 朵 花 ， 再 加上 三 座 只 有 我 膝盖 那么 高 的 火山 ， 而且 其中 一 座 还 可能 是 永远 熄灭 了 的 ， 这 一切 不 会 使 我 成为 一 个 了不起 的 王子 … ”

Spans:
Span 30-31:  一切 => 一切
Span 31-32:  不 => 不
Span 38-39:  了不起 => 了不起-01
Span 32-33:  会 => 会-03
Span 33-34:  使 => 使-01
Span 4-5:  再 => 再
Span 5-6:  加上 => 加上-01
Span 8-9:  只 => 只
Span 22-23:  可能 => 可能-02
Span 35-36:  成为 => 成为-01
Span 34-35:  我 => 我
Span 10-11:  我 => 我
Span 23-24:  是 => 是-04
Span 9-10:  有 => 有-06
Span 24-25:  永远 => 永远
Span 15-16:  火山 => 火山
Span 25-26:  熄灭 => 熄灭-01
Span 40-41:  王子 => 王子
Span 11-12:  膝盖 => 膝盖
Span 2-3:  花 => 花-01
Span 21-22:  还 => 还
Span 29-30:  这 => 这
Span 0-1:  这 => 这
Span 12-13:  那么 => 那么
Span 13-14:  高 => 高-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 30-31:  一切 => 一切
Oracle Span 38-39:  了不起 => 了不起-01
Oracle Span 32-33:  会 => 会-02
Oracle Span 5-6:  加上 => 加上-01
Oracle Span 22-23:  可能 => 可能-01
Oracle Span 35-36:  成为 => 成为-01
Oracle Span 10-11:  我 => 我
Oracle Span 24-25:  永远 => 永远
Oracle Span 15-16:  火山 => 火山
Oracle Span 25-26:  熄灭 => 熄灭-01
Oracle Span 40-41:  王子 => 王子
Oracle Span 11-12:  膝盖 => 膝盖
Oracle Span 2-3:  花 => 花
Oracle Span 0-1:  这 => 这
Oracle Span 29-30:  这 => 这
Oracle Span 12-13:  那么 => 那么
Oracle Span 13-14:  高 => 高-02

Extra span: 我 => 我
Extra span: 使 => 使-01
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 是 => 是-04
Incorrect span: 可能 => 可能-02
Extra span: 还 => 还
Extra span: 有 => 有-06
Extra span: 只 => 只
Extra span: 再 => 再
Incorrect span: 花 => 花-01
Missing span: 会 => 会-02
Missing span: 可能 => 可能-01
Missing span: 花 => 花
Dependencies:
1	这	_	DT	DT	_	3	det	_	_
2	朵	_	M	M	_	1	clf	_	_
3	花	_	NN	NN	_	6	nsubj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	再	_	AD	AD	_	6	advmod	_	_
6	加上	_	VV	VV	_	0	root	_	_
7	三	_	CD	CD	_	8	nummod	_	_
8	座	_	M	M	_	16	clf	_	_
9	只	_	AD	AD	_	10	advmod	_	_
10	有	_	VE	VE	_	16	rcmod	_	_
11	我	_	PN	PN	_	14	nsubj	_	_
12	膝盖	_	AD	AD	_	14	advmod	_	_
13	那么	_	AD	AD	_	14	advmod	_	_
14	高	_	VA	VA	_	10	dep	_	_
15	的	_	DEC	DEC	_	10	cpm	_	_
16	火山	_	NN	NN	_	6	dobj	_	_
17	,	_	PU	PU	_	6	punct	_	_
18	而且	_	AD	AD	_	23	advmod	_	_
19	其中	_	NN	NN	_	23	nsubj	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	座	_	M	M	_	23	nsubj	_	_
22	还	_	AD	AD	_	23	advmod	_	_
23	可能	_	VV	VV	_	6	conj	_	_
24	是	_	VC	VC	_	26	cop	_	_
25	永远	_	AD	AD	_	26	advmod	_	_
26	熄灭	_	VV	VV	_	23	dobj	_	_
27	了	_	AS	AS	_	26	asp	_	_
28	的	_	DEC	DEC	_	26	cpm	_	_
29	,	_	PU	PU	_	6	punct	_	_
30	这	_	DT	DT	_	33	dep	_	_
31	一切	_	CD	CD	_	30	dep	_	_
32	不	_	AD	AD	_	33	neg	_	_
33	会	_	VV	VV	_	6	conj	_	_
34	使	_	VV	VV	_	41	rcmod	_	_
35	我	_	PN	PN	_	36	nsubj	_	_
36	成为	_	VV	VV	_	34	ccomp	_	_
37	一	_	CD	CD	_	38	nummod	_	_
38	个	_	M	M	_	39	clf	_	_
39	了不起	_	NN	NN	_	36	dobj	_	_
40	的	_	DEC	DEC	_	34	cpm	_	_
41	王子	_	NN	NN	_	33	dobj	_	_
42	…	_	PU	PU	_	6	punct	_	_
43	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x102 / 高-02, arg0, x100 / 火山)
(x102 / 高-02, degree, x107 / 那么)
(x108 / 可能-01, arg0, x109 / 熄灭-01)
(x108 / 可能-01, subset, x100 / 火山)
(x109 / 熄灭-01, time, x110 / 永远)
(x86 / 会-02, arg0, x87 / 成为-01)
(x86 / 会-02, cause, x93 / 一切)
(x87 / 成为-01, arg0, x88 / 我)
(x87 / 成为-01, arg1, x89 / 王子)
(x89 / 王子, mod, x91 / 了不起-01)
(x93 / 一切, mod, x94 / 这)
(x97 / 加上-01, arg0, x98 / 花)
(x97 / 加上-01, arg1, x100 / 火山)
(x98 / 花, mod, x99 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(40,41,List(0),王子,王子,false), Span(38,39,List(1),了不起,了不起-01,false), Span(35,36,List(2),成为,成为-01,false), Span(34,35,List(3),我,我,false), Span(33,34,List(4),使,使-01,false), Span(32,33,List(5),会,会-03,false), Span(31,32,List(6),不,不,false), Span(30,31,List(7),一切,一切,false), Span(29,30,List(8),这,这,false), Span(25,26,List(9),熄灭,熄灭-01,false), Span(24,25,List(10),永远,永远,false), Span(23,24,List(11),是,是-04,false), Span(22,23,List(12),可能,可能-02,false), Span(21,22,List(13),还,还,false), Span(15,16,List(14),火山,火山,false), Span(13,14,List(15),高,高-02,false), Span(12,13,List(16),那么,那么,false), Span(11,12,List(17),膝盖,膝盖,false), Span(10,11,List(18),我,我,false), Span(9,10,List(19),有,有-06,false), Span(8,9,List(20),只,只,false), Span(5,6,List(21),加上,加上-01,false), Span(4,5,List(22),再,再,false), Span(2,3,List(23),花,花-01,false), Span(0,1,List(24),这,这,false)),Map(2 -> 成为-01, 5 -> 会-03, 12 -> 可能-02, 8 -> 这, 15 -> 高-02, 21 -> 加上-01, 18 -> 我, 24 -> 这, 7 -> 一切, 1 -> 了不起-01, 17 -> 膝盖, 23 -> 花-01, 4 -> 使-01, 11 -> 是-04, 14 -> 火山, 20 -> 只, 6 -> 不, 9 -> 熄灭-01, 0 -> 王子, 22 -> 再, 16 -> 那么, 19 -> 有-06, 10 -> 永远, 3 -> 我, 13 -> 还),Map(高 -> 高-02, 了 -> 了不起-01, 加 -> 加上-01, 永 -> 永远, 我 -> 我, 这 -> 这, 王 -> 王子, 我2 -> 我, 成 -> 成为-01, 花 -> 花-01, 不 -> 不, 会 -> 会-03, 只 -> 只, 还 -> 还, 这2 -> 这, 火 -> 火山, 那 -> 那么, 熄 -> 熄灭-01, 使 -> 使-01, 膝 -> 膝盖, 是 -> 是-04, 一 -> 一切, 可 -> 可能-02, 有 -> 有-06, 再 -> 再))),[Ljava.lang.String;@1d12e953,Annotation([Ljava.lang.String;@57cb70be,[Ljava.lang.String;@2d4608a6,[Ljava.lang.String;@20d87335),Annotation([Ljava.lang.String;@2a8a4e0c,[Ljava.lang.String;@26c89563,[Ledu.cmu.lti.nlp.amr.Dependency;@3bd6ba24),Annotation([Ljava.lang.String;@58f437b0,[Ljava.lang.String;@20f6f88c,[Ljava.lang.String;@4277127c),Annotation([Ljava.lang.String;@4c7e978c,[Ljava.lang.String;@354e7004,[Ledu.cmu.lti.nlp.amr.Entity;@22ebccb9))
AMR:
(一 / 一切, mod, 不 / 不)
(一 / 一切, mod, 这 / 这)
(会 / 会-03, degree, 不 / 不)
(会 / 会-03, degree, 是 / 是-04)
(会 / 会-03, direction, 使 / 使-01)
(加 / 加上-01, degree, 花 / 花-01)
(加 / 加上-01, manner, 再 / 再)
(加 / 加上-01, snt2, 有 / 有-06)
(可 / 可能-02, manner, 是 / 是-04)
(可 / 可能-02, manner, 还 / 还)
(成 / 成为-01, manner, 使 / 使-01)
(成 / 成为-01, manner, 我 / 我)
(成 / 成为-01, snt2, 了 / 了不起-01)
(是 / 是-04, degree, 火 / 火山)
(有 / 有-06, manner, 只 / 只)
(有 / 有-06, prep-into, 我2 / 我)
(永 / 永远, mod, 是 / 是-04)
(熄 / 熄灭-01, time, 永 / 永远)
(王 / 王子, mod, 了 / 了不起-01)
(这2 / 这, destination, 花 / 花-01)
(高 / 高-02, degree, 有 / 有-06)
(高 / 高-02, degree, 膝 / 膝盖)
(高 / 高-02, degree, 那 / 那么)
(高 / 高-02, prep-into, 火 / 火山)

Decoded in 226,930 microseconds
Sentence: 于是 ， 他 躺 在 草丛 中 哭泣 起来 。

Spans:
Span 2-3:  他 => 他
Span 7-8:  哭泣 => 哭泣-01
Span 4-5:  在 => 在-01
Span 5-6:  草丛 => 草丛
Span 3-4:  躺 => 躺-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  哭泣 => 哭泣-01
Oracle Span 5-6:  草丛 => 草丛
Oracle Span 3-4:  躺 => 躺-01

Extra span: 在 => 在-01
Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	躺	_	VV	VV	_	0	root	_	_
5	在	_	P	P	_	8	prep	_	_
6	草丛	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	5	plmod	_	_
8	哭泣	_	VV	VV	_	4	ccomp	_	_
9	起来	_	VV	VV	_	8	comod	_	_
10	。	_	PU	PU	_	4	punct	_	_
11	他	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x10 / 躺-01, arg1, x12 / 草丛)
(x8 / 哭泣-01, arg0, x9 / 他)
(x8 / 哭泣-01, manner, x10 / 躺-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),哭泣,哭泣-01,false), Span(5,6,List(1),草丛,草丛,false), Span(4,5,List(2),在,在-01,false), Span(3,4,List(3),躺,躺-01,false), Span(2,3,List(4),他,他,false)),Map(2 -> 在-01, 1 -> 草丛, 4 -> 他, 0 -> 哭泣-01, 3 -> 躺-01),Map(哭 -> 哭泣-01, 在 -> 在-01, 躺 -> 躺-01, 他 -> 他, 草 -> 草丛))),[Ljava.lang.String;@5875de6a,Annotation([Ljava.lang.String;@608fe01f,[Ljava.lang.String;@2687725a,[Ljava.lang.String;@5a75ec37),Annotation([Ljava.lang.String;@2c05ff9d,[Ljava.lang.String;@33956d1a,[Ledu.cmu.lti.nlp.amr.Dependency;@2e1ddc90),Annotation([Ljava.lang.String;@5b7c8930,[Ljava.lang.String;@58867cd5,[Ljava.lang.String;@40e32762),Annotation([Ljava.lang.String;@5a8ab2,[Ljava.lang.String;@3f50b680,[Ledu.cmu.lti.nlp.amr.Entity;@54db056b))
AMR:
(哭 / 哭泣-01, manner, 在 / 在-01)
(在 / 在-01, manner, 躺 / 躺-01)
(草 / 草丛, mod, 在 / 在-01)
(躺 / 躺-01, prep-on-behalf, 他 / 他)

Decoded in 8,946 microseconds
Sentence: XXI 。

Spans:
Span 0-1:  XXI => XXI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXI => XXI

Dependencies:
1	XXI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXI,XXI,false)),Map(0 -> XXI),Map(x -> XXI))),[Ljava.lang.String;@d5af0a5,Annotation([Ljava.lang.String;@5981f4a6,[Ljava.lang.String;@63dfada0,[Ljava.lang.String;@6f231ced),Annotation([Ljava.lang.String;@35a60674,[Ljava.lang.String;@63d4f0a2,[Ledu.cmu.lti.nlp.amr.Dependency;@7d78f3d5),Annotation([Ljava.lang.String;@a4b5ce3,[Ljava.lang.String;@f5b6e78,[Ljava.lang.String;@4b4eced1),Annotation([Ljava.lang.String;@71926a36,[Ljava.lang.String;@216e9ca3,[Ledu.cmu.lti.nlp.amr.Entity;@75120e58))
AMR:


Decoded in 1,289 microseconds
Sentence: 就 在 这 当儿 ， 跑来 了 一 只 狐狸 。

Spans:
Span 8-9:  只 => 只
Span 1-2:  在 => 在-01
Span 0-1:  就 => 就-01
Span 3-4:  当儿 => 当儿
Span 9-10:  狐狸 => 狐狸
Span 5-6:  跑来 => 跑来-01
Span 2-3:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  就 => 就
Oracle Span 3-4:  当儿 => 当儿
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 5-6:  跑来 => 跑来-01
Oracle Span 2-3:  这 => 这

Extra span: 只 => 只
Extra span: 在 => 在-01
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	就	_	AD	AD	_	4	advmod	_	_
2	在	_	P	P	_	4	prep	_	_
3	这	_	PN	PN	_	2	pobj	_	_
4	当儿	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	跑来	_	VV	VV	_	4	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	只	_	M	M	_	10	clf	_	_
10	狐狸	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 跑来-01, arg0, x4 / 狐狸)
(x2 / 跑来-01, time, x6 / 当儿)
(x6 / 当儿, manner, x8 / 就)
(x6 / 当儿, mod, x7 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),狐狸,狐狸,false), Span(8,9,List(1),只,只,false), Span(5,6,List(2),跑来,跑来-01,false), Span(3,4,List(3),当儿,当儿,false), Span(2,3,List(4),这,这,false), Span(1,2,List(5),在,在-01,false), Span(0,1,List(6),就,就-01,false)),Map(2 -> 跑来-01, 5 -> 在-01, 1 -> 只, 4 -> 这, 6 -> 就-01, 0 -> 狐狸, 3 -> 当儿),Map(就 -> 就-01, 在 -> 在-01, 这 -> 这, 跑 -> 跑来-01, 只 -> 只, 狐 -> 狐狸, 当 -> 当儿))),[Ljava.lang.String;@48976e6d,Annotation([Ljava.lang.String;@2a367e93,[Ljava.lang.String;@7f6874f2,[Ljava.lang.String;@1a6dc589),Annotation([Ljava.lang.String;@697a34af,[Ljava.lang.String;@70211df5,[Ledu.cmu.lti.nlp.amr.Dependency;@4c5228e7),Annotation([Ljava.lang.String;@38e7ed69,[Ljava.lang.String;@806996,[Ljava.lang.String;@78b612c6),Annotation([Ljava.lang.String;@257e0827,[Ljava.lang.String;@22752544,[Ledu.cmu.lti.nlp.amr.Entity;@21ba2445))
AMR:
(在 / 在-01, ARG5, 这 / 这)
(在 / 在-01, degree, 当 / 当儿)
(在 / 在-01, manner, 就 / 就-01)
(狐 / 狐狸, ARG4, 只 / 只)
(跑 / 跑来-01, ARG0, 只 / 只)
(跑 / 跑来-01, time, 当 / 当儿)

Decoded in 15,831 microseconds
Sentence: “ 你 好 。 ” 狐狸 说 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  好 => 好-01
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 好 => 好-04
Missing span: 说 => 说-01
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg0, x4 / 你)
(x0 / 说-01, arg1, x3 / 好-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),狐狸,狐狸,false), Span(2,3,List(2),好,好-04,false), Span(1,2,List(3),你,你,false)),Map(2 -> 好-04, 1 -> 狐狸, 0 -> 说-02, 3 -> 你),Map(你 -> 你, 好 -> 好-04, 说 -> 说-02, 狐 -> 狐狸))),[Ljava.lang.String;@69d23296,Annotation([Ljava.lang.String;@3c3820bb,[Ljava.lang.String;@376c7d7d,[Ljava.lang.String;@4784efd9),Annotation([Ljava.lang.String;@3fba233d,[Ljava.lang.String;@427ae189,[Ledu.cmu.lti.nlp.amr.Dependency;@16a9eb2e),Annotation([Ljava.lang.String;@76332405,[Ljava.lang.String;@187e5235,[Ljava.lang.String;@d1d8e1a),Annotation([Ljava.lang.String;@5434e40c,[Ljava.lang.String;@3b48e183,[Ledu.cmu.lti.nlp.amr.Entity;@514de325))
AMR:
(好 / 好-04, location, 你 / 你)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 好 / 好-04)

Decoded in 6,447 microseconds
Sentence: “ 你 好 。 ” 小 王子 很 有 礼貌 地 回答 道 。 他 转 过 身 来 ， 但 什么 也 没有 看到 。

Spans:
Span 22-23:  也 => 也
Span 21-22:  什么 => 什么
Span 14-15:  他 => 他
Span 1-2:  你 => 你
Span 11-12:  回答 => 回答-01
Span 10-11:  地 => 地
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 7-8:  很 => 很
Span 8-9:  有 => 有-06
Span 18-19:  来 => 来-06
Span 6-7:  王子 => 王子
Span 24-25:  看到 => (thing :arg1-of 看到-01)
Span 9-10:  礼貌 => 礼貌-01
Span 15-16:  转 => 转-04
Span 16-17:  过 => 过-01
Span 12-13:  道 => 道-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 我 在 这儿 ， 在 苹果 树 下 。 ” 那 声音 说 。

Spans:
Span 8-9:  下 => 下-07
Span 5-6:  在 => 在-01
Span 2-3:  在 => 在-01
Span 12-13:  声音 => 声音
Span 1-2:  我 => 我
Span 7-8:  树 => 树
Span 6-7:  苹果 => 苹果
Span 13-14:  说 => 说-02
Span 3-4:  这儿 => 这儿
Span 11-12:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  下 => 下
Oracle Span 12-13:  声音 => 声音
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  树 => 树
Oracle Span 6-7:  苹果 => 苹果
Oracle Span 13-14:  说 => 说-01
Oracle Span 11-12:  那 => 那

Incorrect span: 说 => 说-02
Incorrect span: 下 => 下-07
Extra span: 在 => 在-01
Extra span: 这儿 => 这儿
Extra span: 在 => 在-01
Missing span: 说 => 说-01
Missing span: 下 => 下
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	在	_	VV	VV	_	0	root	_	_
4	这儿	_	PN	PN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	在	_	P	P	_	3	conj	_	_
7	苹果	_	NN	NN	_	8	nn	_	_
8	树	_	NN	NN	_	9	lobj	_	_
9	下	_	LC	LC	_	6	plmod	_	_
10	。	_	PU	PU	_	3	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_
12	那	_	DT	DT	_	13	det	_	_
13	声音	_	NN	NN	_	14	nsubj	_	_
14	说	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 声音)
(x0 / 说-01, arg1, x4 / 我)
(x2 / 声音, mod, x3 / 那)
(x4 / 我, location, x6 / 下)
(x6 / 下, arg0, x7 / 树)
(x7 / 树, mod, x8 / 苹果)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),说,说-02,false), Span(12,13,List(1),声音,声音,false), Span(11,12,List(2),那,那,false), Span(8,9,List(3),下,下-07,false), Span(7,8,List(4),树,树,false), Span(6,7,List(5),苹果,苹果,false), Span(5,6,List(6),在,在-01,false), Span(3,4,List(7),这儿,这儿,false), Span(2,3,List(8),在,在-01,false), Span(1,2,List(9),我,我,false)),Map(2 -> 那, 5 -> 苹果, 8 -> 在-01, 7 -> 这儿, 1 -> 声音, 4 -> 树, 6 -> 在-01, 9 -> 我, 0 -> 说-02, 3 -> 下-07),Map(在2 -> 在-01, 在 -> 在-01, 我 -> 我, 这 -> 这儿, 下 -> 下-07, 苹 -> 苹果, 树 -> 树, 说 -> 说-02, 声 -> 声音, 那 -> 那))),[Ljava.lang.String;@43a65cd8,Annotation([Ljava.lang.String;@3f1ef9d6,[Ljava.lang.String;@17461db,[Ljava.lang.String;@3fd9e827),Annotation([Ljava.lang.String;@4e682398,[Ljava.lang.String;@670b3ca,[Ledu.cmu.lti.nlp.amr.Dependency;@24a86066),Annotation([Ljava.lang.String;@54402c04,[Ljava.lang.String;@5b3bb1f7,[Ljava.lang.String;@58d6b7b9),Annotation([Ljava.lang.String;@3f1a4795,[Ljava.lang.String;@6a6f6c7e,[Ledu.cmu.lti.nlp.amr.Entity;@6c5ddccd))
AMR:
(下 / 下-07, beneficiary, 树 / 树)
(下 / 下-07, purpose, 声 / 声音)
(在 / 在-01, location, 苹 / 苹果)
(在 / 在-01, location, 这 / 这儿)
(在2 / 在-01, beneficiary, 我 / 我)
(在2 / 在-01, location, 这 / 这儿)
(声 / 声音, mod, 那 / 那)
(树 / 树, mod, 苹 / 苹果)
(说 / 说-02, degree, 声 / 声音)

Decoded in 30,041 microseconds
Sentence: “ 你 是 谁 ？ ” 小 王子 说 ， “ 你 很 漂亮 。 ”

Spans:
Span 11-12:  你 => 你
Span 1-2:  你 => 你
Span 6-7:  小 => 小
Span 12-13:  很 => 很
Span 2-3:  是 => 是-04
Span 13-14:  漂亮 => 漂亮-01
Span 7-8:  王子 => 王子
Span 8-9:  说 => 说-02
Span 3-4:  谁 => 谁

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  小 => 小-01
Oracle Span 12-13:  很 => 很
Oracle Span 13-14:  漂亮 => 漂亮-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  说 => 说-01

Extra span: 你 => 你
Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 谁 => 谁
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	谁	_	PN	PN	_	8	vmod	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	“	_	PU	PU	_	14	punct	_	_
12	你	_	PN	PN	_	14	nsubj	_	_
13	很	_	AD	AD	_	14	advmod	_	_
14	漂亮	_	VA	VA	_	9	ccomp	_	_
15	。	_	PU	PU	_	9	punct	_	_
16	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 说-01, arg0, x13 / 王子)
(x13 / 王子, mod, x14 / 小-01)
(x19 / 漂亮-01, degree, x20 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),漂亮,漂亮-01,false), Span(12,13,List(1),很,很,false), Span(11,12,List(2),你,你,false), Span(8,9,List(3),说,说-02,false), Span(7,8,List(4),王子,王子,false), Span(6,7,List(5),小,小,false), Span(3,4,List(6),谁,谁,false), Span(2,3,List(7),是,是-04,false), Span(1,2,List(8),你,你,false)),Map(2 -> 你, 5 -> 小, 8 -> 你, 7 -> 是-04, 1 -> 很, 4 -> 王子, 6 -> 谁, 0 -> 漂亮-01, 3 -> 说-02),Map(谁 -> 谁, 王 -> 王子, 你 -> 你, 很 -> 很, 漂 -> 漂亮-01, 小 -> 小, 你2 -> 你, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@1dbd580,Annotation([Ljava.lang.String;@6c101cc1,[Ljava.lang.String;@7d0d91a1,[Ljava.lang.String;@7fb48179),Annotation([Ljava.lang.String;@201c3cda,[Ljava.lang.String;@4c86da0c,[Ledu.cmu.lti.nlp.amr.Dependency;@5d97caa4),Annotation([Ljava.lang.String;@6732726,[Ljava.lang.String;@474821de,[Ljava.lang.String;@3d64c581),Annotation([Ljava.lang.String;@5ec5ea63,[Ljava.lang.String;@4190bc8a,[Ledu.cmu.lti.nlp.amr.Entity;@47d023b7))
AMR:
(是 / 是-04, degree, 你2 / 你)
(漂 / 漂亮-01, degree, 很 / 很)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 谁 / 谁)
(说 / 说-02, op, 你 / 你)
(说 / 说-02, purpose, 漂 / 漂亮-01)
(谁 / 谁, mod, 是 / 是-04)

Decoded in 25,810 microseconds
Sentence: “ 我 是 一 只 狐狸 。 ” 狐狸 说 。

Spans:
Span 4-5:  只 => 只
Span 1-2:  我 => 我
Span 2-3:  是 => 是-04
Span 8-9:  狐狸 => 狐狸
Span 5-6:  狐狸 => 狐狸
Span 9-10:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 9-10:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 只 => 只
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	conj	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	只	_	M	M	_	6	nsubj	_	_
6	狐狸	_	NN	NN	_	3	conj	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	狐狸	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 狐狸)
(x3 / 狐狸, domain, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),狐狸,狐狸,false), Span(5,6,List(2),狐狸,狐狸,false), Span(4,5,List(3),只,只,false), Span(2,3,List(4),是,是-04,false), Span(1,2,List(5),我,我,false)),Map(2 -> 狐狸, 5 -> 我, 1 -> 狐狸, 4 -> 是-04, 0 -> 说-02, 3 -> 只),Map(我 -> 我, 狐2 -> 狐狸, 只 -> 只, 说 -> 说-02, 狐 -> 狐狸, 是 -> 是-04))),[Ljava.lang.String;@5c83ae01,Annotation([Ljava.lang.String;@2d64c100,[Ljava.lang.String;@69d45cca,[Ljava.lang.String;@2fdf17dc),Annotation([Ljava.lang.String;@6e6d4780,[Ljava.lang.String;@650ae78c,[Ledu.cmu.lti.nlp.amr.Dependency;@2e73d5eb),Annotation([Ljava.lang.String;@79c5460e,[Ljava.lang.String;@7d904ff1,[Ljava.lang.String;@4f94e148),Annotation([Ljava.lang.String;@7ff8a9dc,[Ljava.lang.String;@2cde651b,[Ledu.cmu.lti.nlp.amr.Entity;@534e58b6))
AMR:
(是 / 是-04, beneficiary, 我 / 我)
(是 / 是-04, manner, 只 / 只)
(狐2 / 狐狸, manner, 只 / 只)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 是 / 是-04)

Decoded in 11,493 microseconds
Sentence: “ 来 和 我 一起 玩 吧 ， ” 小 王子 建议 道 ，

Spans:
Span 4-5:  一起 => 一起
Span 9-10:  小 => 小
Span 11-12:  建议 => 建议-01
Span 3-4:  我 => 我
Span 1-2:  来 => 来-06
Span 10-11:  王子 => 王子
Span 5-6:  玩 => 玩-01
Span 12-13:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一起 => 一起
Oracle Span 9-10:  小 => 小-01
Oracle Span 11-12:  建议 => 建议-01
Oracle Span 1-2:  来 => 来-05
Oracle Span 10-11:  王子 => 王子
Oracle Span 5-6:  玩 => 玩-01

Extra span: 道 => 道-01
Incorrect span: 小 => 小
Extra span: 我 => 我
Incorrect span: 来 => 来-06
Missing span: 来 => 来-05
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	来	_	VV	VV	_	0	root	_	_
3	和	_	P	P	_	6	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	一起	_	AD	AD	_	6	advmod	_	_
6	玩	_	VV	VV	_	2	dobj	_	_
7	吧	_	SP	SP	_	6	dep	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	dep	_	_
12	建议	_	VV	VV	_	2	dep	_	_
13	道	_	NN	NN	_	12	dobj	_	_
14	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 建议-01, arg0, x2 / 王子)
(x0 / 建议-01, arg1, x4 / 来-05)
(x15 / 玩-01, manner, x17 / 一起)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, arg1, x15 / 玩-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),道,道-01,false), Span(11,12,List(1),建议,建议-01,false), Span(10,11,List(2),王子,王子,false), Span(9,10,List(3),小,小,false), Span(5,6,List(4),玩,玩-01,false), Span(4,5,List(5),一起,一起,false), Span(3,4,List(6),我,我,false), Span(1,2,List(7),来,来-06,false)),Map(2 -> 王子, 5 -> 一起, 7 -> 来-06, 1 -> 建议-01, 4 -> 玩-01, 6 -> 我, 0 -> 道-01, 3 -> 小),Map(来 -> 来-06, 我 -> 我, 玩 -> 玩-01, 王 -> 王子, 小 -> 小, 道 -> 道-01, 建 -> 建议-01, 一 -> 一起))),[Ljava.lang.String;@3bb87d36,Annotation([Ljava.lang.String;@1b495d4,[Ljava.lang.String;@5e1dde44,[Ljava.lang.String;@7f37b6d9),Annotation([Ljava.lang.String;@71e35c4,[Ljava.lang.String;@22a10ac6,[Ledu.cmu.lti.nlp.amr.Dependency;@12fe1f28),Annotation([Ljava.lang.String;@503df2d0,[Ljava.lang.String;@26fb4d06,[Ljava.lang.String;@c269425),Annotation([Ljava.lang.String;@6e43ddd6,[Ljava.lang.String;@51d719bc,[Ledu.cmu.lti.nlp.amr.Entity;@2d38edfd))
AMR:
(建 / 建议-01, location, 王 / 王子)
(来 / 来-06, prep-through, 我 / 我)
(来 / 来-06, purpose, 玩 / 玩-01)
(王 / 王子, mod, 小 / 小)
(玩 / 玩-01, manner, 一 / 一起)
(道 / 道-01, degree, 玩 / 玩-01)
(道 / 道-01, time, 建 / 建议-01)

Decoded in 22,893 microseconds
Sentence: “ 我 很 苦恼 … ”

Spans:
Span 2-3:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  苦恼 => 苦恼-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  苦恼 => 苦恼-01

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	苦恼	_	VV	VV	_	0	root	_	_
5	…	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 苦恼-01, arg0, x10 / 我)
(x8 / 苦恼-01, degree, x9 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),苦恼,苦恼-01,false), Span(2,3,List(1),很,很,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 很, 0 -> 苦恼-01),Map(我 -> 我, 很 -> 很, 苦 -> 苦恼-01))),[Ljava.lang.String;@1507c3c3,Annotation([Ljava.lang.String;@655a01d8,[Ljava.lang.String;@c29fe36,[Ljava.lang.String;@6614bd4b),Annotation([Ljava.lang.String;@4d266391,[Ljava.lang.String;@7847ef2c,[Ledu.cmu.lti.nlp.amr.Dependency;@3b5c665c),Annotation([Ljava.lang.String;@78e17a99,[Ljava.lang.String;@625a4ff,[Ljava.lang.String;@41dc0598),Annotation([Ljava.lang.String;@196ae579,[Ljava.lang.String;@6a2c717f,[Ledu.cmu.lti.nlp.amr.Entity;@41853299))
AMR:
(苦 / 苦恼-01, degree, 很 / 很)
(苦 / 苦恼-01, poss, 我 / 我)

Decoded in 8,331 microseconds
Sentence: “ 我 不 能 和 你 一起 玩 ， ” 狐狸 说 ，

Spans:
Span 6-7:  一起 => 一起
Span 2-3:  不 => 不
Span 5-6:  你 => 你
Span 1-2:  我 => 我
Span 10-11:  狐狸 => 狐狸
Span 7-8:  玩 => 玩-01
Span 3-4:  能 => 能
Span 11-12:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一起 => 一起
Oracle Span 5-6:  你 => 你
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 7-8:  玩 => 玩-01
Oracle Span 3-4:  能 => 能-01
Oracle Span 11-12:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 能 => 能
Extra span: 不 => 不
Extra span: 我 => 我
Missing span: 说 => 说-01
Missing span: 能 => 能-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	7	nsubj	_	_
3	不	_	AD	AD	_	7	neg	_	_
4	能	_	VV	VV	_	7	mmod	_	_
5	和	_	P	P	_	7	prep	_	_
6	你	_	PN	PN	_	5	pobj	_	_
7	一起	_	VV	VV	_	0	root	_	_
8	玩	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_
11	狐狸	_	NN	NN	_	12	dep	_	_
12	说	_	VV	VV	_	7	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 能-01)
(x14 / 玩-01, manner, x17 / 一起)
(x3 / 能-01, arg0, x14 / 玩-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),狐狸,狐狸,false), Span(7,8,List(2),玩,玩-01,false), Span(6,7,List(3),一起,一起,false), Span(5,6,List(4),你,你,false), Span(3,4,List(5),能,能,false), Span(2,3,List(6),不,不,false), Span(1,2,List(7),我,我,false)),Map(2 -> 玩-01, 5 -> 能, 7 -> 我, 1 -> 狐狸, 4 -> 你, 6 -> 不, 0 -> 说-02, 3 -> 一起),Map(我 -> 我, 玩 -> 玩-01, 能 -> 能, 你 -> 你, 不 -> 不, 说 -> 说-02, 狐 -> 狐狸, 一 -> 一起))),[Ljava.lang.String;@60d40ff4,Annotation([Ljava.lang.String;@2e5b7fba,[Ljava.lang.String;@27755487,[Ljava.lang.String;@4f0cab0a),Annotation([Ljava.lang.String;@fe7b6b0,[Ljava.lang.String;@7ab4ae59,[Ledu.cmu.lti.nlp.amr.Dependency;@77681ce4),Annotation([Ljava.lang.String;@5d96bdf8,[Ljava.lang.String;@6f76c2cc,[Ljava.lang.String;@306f6f1d),Annotation([Ljava.lang.String;@7d7cac8,[Ljava.lang.String;@6fc6deb7,[Ledu.cmu.lti.nlp.amr.Entity;@367f0121))
AMR:
(不 / 不, poss, 我 / 我)
(玩 / 玩-01, manner, 一 / 一起)
(玩 / 玩-01, manner, 能 / 能)
(能 / 能, mod, 不 / 不)
(能 / 能, poss, 你 / 你)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, topic, 玩 / 玩-01)

Decoded in 31,194 microseconds
Sentence: “ 我 还 没有 被 驯服 呢 。 ”

Spans:
Span 1-2:  我 => 我
Span 2-3:  还 => 还
Span 5-6:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 5-6:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Extra span: 还 => 还
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	没有	_	VE	VE	_	0	root	_	_
5	被	_	SB	SB	_	6	pass	_	_
6	驯服	_	VV	VV	_	4	dep	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 驯服-01, arg1, x8 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),驯服,驯服,false), Span(2,3,List(1),还,还,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 还, 0 -> 驯服),Map(驯 -> 驯服, 我 -> 我, 还 -> 还))),[Ljava.lang.String;@7da39774,Annotation([Ljava.lang.String;@441b8382,[Ljava.lang.String;@1df1ced0,[Ljava.lang.String;@5349b246),Annotation([Ljava.lang.String;@32b0876c,[Ljava.lang.String;@2aaf152b,[Ledu.cmu.lti.nlp.amr.Dependency;@39bbd9e0),Annotation([Ljava.lang.String;@27fe9713,[Ljava.lang.String;@11c3ff67,[Ljava.lang.String;@4397a639),Annotation([Ljava.lang.String;@24841372,[Ljava.lang.String;@77114efe,[Ledu.cmu.lti.nlp.amr.Entity;@79a7bfbc))
AMR:
(还 / 还, beneficiary, 我 / 我)
(驯 / 驯服, manner, 还 / 还)

Decoded in 8,490 microseconds
Sentence: “ 啊 ！

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	VA	VA	_	0	root	_	_
2	啊	_	SP	SP	_	1	dep	_	_
3	！	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@77f68df,Annotation([Ljava.lang.String;@3e4e4c1,[Ljava.lang.String;@7e7f3cfd,[Ljava.lang.String;@3ae126d1),Annotation([Ljava.lang.String;@46a488c2,[Ljava.lang.String;@6242ae3b,[Ledu.cmu.lti.nlp.amr.Dependency;@65ddee5a),Annotation([Ljava.lang.String;@56399b9e,[Ljava.lang.String;@34b9eb03,[Ljava.lang.String;@43fda8d9),Annotation([Ljava.lang.String;@49d831c2,[Ljava.lang.String;@53a7a60c,[Ledu.cmu.lti.nlp.amr.Entity;@28bdbe88))
AMR:


Decoded in 2,092 microseconds
Sentence: 真 对不起 。 ” 小 王子 说 。

Spans:
Span 1-2:  对不起 => 对不起-02
Span 4-5:  小 => 小
Span 5-6:  王子 => 王子
Span 0-1:  真 => 真
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  对不起 => 对不起-01
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 0-1:  真 => 真
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 对不起 => 对不起-02
Missing span: 说 => 说-01
Missing span: 对不起 => 对不起-01
Missing span: 小 => 小-01
Dependencies:
1	真	_	NN	NN	_	3	nn	_	_
2	对不起	_	NN	NN	_	3	nn	_	_
3	。	_	NN	NN	_	6	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 对不起-01, degree, x12 / 真)
(x7 / 说-01, arg0, x9 / 王子)
(x7 / 说-01, arg1, x11 / 对不起-01)
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),王子,王子,false), Span(4,5,List(2),小,小,false), Span(1,2,List(3),对不起,对不起-02,false), Span(0,1,List(4),真,真,false)),Map(2 -> 小, 1 -> 王子, 4 -> 真, 0 -> 说-02, 3 -> 对不起-02),Map(王 -> 王子, 小 -> 小, 说 -> 说-02, 对 -> 对不起-02, 真 -> 真))),[Ljava.lang.String;@6a87026,Annotation([Ljava.lang.String;@ef60710,[Ljava.lang.String;@600f5704,[Ljava.lang.String;@2503ec73),Annotation([Ljava.lang.String;@606f81b5,[Ljava.lang.String;@5e1fc42f,[Ledu.cmu.lti.nlp.amr.Dependency;@44b21f9f),Annotation([Ljava.lang.String;@7ee8130e,[Ljava.lang.String;@6296474f,[Ljava.lang.String;@4288d98e),Annotation([Ljava.lang.String;@169268a7,[Ljava.lang.String;@285c6918,[Ledu.cmu.lti.nlp.amr.Entity;@78a0ff63))
AMR:
(对 / 对不起-02, degree, 真 / 真)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, domain, 对 / 对不起-02)
(说 / 说-02, topic, 王 / 王子)

Decoded in 11,158 microseconds
Sentence: 思索 了 一会儿 ， 他 又 说道 ： “ 什么 叫 ‘ 驯服 ’ 呀 ？ ”

Spans:
Span 2-3:  一会儿 => 一会儿
Span 9-10:  什么 => 什么
Span 4-5:  他 => 他
Span 5-6:  又 => 又
Span 10-11:  叫 => 叫-06
Span 0-1:  思索 => 思索-01
Span 6-7:  说道 => 说道
Span 12-13:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一会儿 => 一会儿
Oracle Span 4-5:  他 => 他
Oracle Span 5-6:  又 => 又
Oracle Span 0-1:  思索 => 思索-01
Oracle Span 6-7:  说道 => 说道-01
Oracle Span 12-13:  驯服 => 驯服

Extra span: 叫 => 叫-06
Extra span: 什么 => 什么
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Dependencies:
1	思索	_	VV	VV	_	7	conj	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	一会儿	_	CD	CD	_	1	dep	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	他	_	PN	PN	_	7	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说道	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	什么	_	PN	PN	_	11	nsubj	_	_
11	叫	_	VV	VV	_	7	ccomp	_	_
12	‘	_	PU	PU	_	13	punct	_	_
13	驯服	_	NN	NN	_	11	dobj	_	_
14	’	_	PU	PU	_	13	punct	_	_
15	呀	_	SP	SP	_	7	dep	_	_
16	？	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 思索-01, duration, x3 / 一会儿)
(x9 / 说道-01, arg0, x11 / 他)
(x9 / 说道-01, arg1, x12 / 驯服)
(x9 / 说道-01, manner, x10 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),驯服,驯服,false), Span(10,11,List(1),叫,叫-06,false), Span(9,10,List(2),什么,什么,false), Span(6,7,List(3),说道,说道,false), Span(5,6,List(4),又,又,false), Span(4,5,List(5),他,他,false), Span(2,3,List(6),一会儿,一会儿,false), Span(0,1,List(7),思索,思索-01,false)),Map(2 -> 什么, 5 -> 他, 7 -> 思索-01, 1 -> 叫-06, 4 -> 又, 6 -> 一会儿, 0 -> 驯服, 3 -> 说道),Map(又 -> 又, 驯 -> 驯服, 思 -> 思索-01, 他 -> 他, 叫 -> 叫-06, 说 -> 说道, 什 -> 什么, 一 -> 一会儿))),[Ljava.lang.String;@7c601d50,Annotation([Ljava.lang.String;@79b2852b,[Ljava.lang.String;@326d27ac,[Ljava.lang.String;@4d499d65),Annotation([Ljava.lang.String;@313f8301,[Ljava.lang.String;@5cc9d3d0,[Ledu.cmu.lti.nlp.amr.Dependency;@7c2dfa2),Annotation([Ljava.lang.String;@661d88a,[Ljava.lang.String;@4b0b64cc,[Ljava.lang.String;@59ce792e),Annotation([Ljava.lang.String;@4860827a,[Ljava.lang.String;@404db674,[Ledu.cmu.lti.nlp.amr.Entity;@50f097b5))
AMR:
(叫 / 叫-06, degree, 什 / 什么)
(叫 / 叫-06, degree, 说 / 说道)
(思 / 思索-01, duration, 一 / 一会儿)
(思 / 思索-01, duration, 说 / 说道)
(说 / 说道, beneficiary, 他 / 他)
(说 / 说道, manner, 又 / 又)
(驯 / 驯服, mod, 叫 / 叫-06)

Decoded in 29,273 microseconds
Sentence: “ 你 不 是 此 地 人 。 ” 狐狸 说 ，

Spans:
Span 2-3:  不 => 不
Span 6-7:  人 => 人
Span 1-2:  你 => 你
Span 5-6:  地 => 地
Span 3-4:  是 => 是-04
Span 4-5:  此 => 此
Span 9-10:  狐狸 => 狐狸
Span 10-11:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  地 => 地
Oracle Span 4-5:  此 => 此
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 10-11:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 是 => 是-04
Extra span: 不 => 不
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	此	_	DT	DT	_	6	det	_	_
6	地	_	NN	NN	_	7	nn	_	_
7	人	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	狐狸	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	4	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 人)
(x3 / 人, domain, x5 / 你)
(x3 / 人, location, x7 / 地)
(x7 / 地, mod, x8 / 此)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),狐狸,狐狸,false), Span(6,7,List(2),人,人,false), Span(5,6,List(3),地,地,false), Span(4,5,List(4),此,此,false), Span(3,4,List(5),是,是-04,false), Span(2,3,List(6),不,不,false), Span(1,2,List(7),你,你,false)),Map(2 -> 人, 5 -> 是-04, 7 -> 你, 1 -> 狐狸, 4 -> 此, 6 -> 不, 0 -> 说-02, 3 -> 地),Map(此 -> 此, 你 -> 你, 地 -> 地, 不 -> 不, 说 -> 说-02, 狐 -> 狐狸, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@7add838c,Annotation([Ljava.lang.String;@3662bdff,[Ljava.lang.String;@1bb15351,[Ljava.lang.String;@4fa822ad),Annotation([Ljava.lang.String;@597f0937,[Ljava.lang.String;@7ad1caa2,[Ledu.cmu.lti.nlp.amr.Dependency;@6b6b3572),Annotation([Ljava.lang.String;@65d8dff8,[Ljava.lang.String;@444f44c5,[Ljava.lang.String;@303f1234),Annotation([Ljava.lang.String;@24d61e4,[Ljava.lang.String;@2149594a,[Ledu.cmu.lti.nlp.amr.Entity;@1f1e58ca))
AMR:
(不 / 不, mod, 你 / 你)
(人 / 人, location, 地 / 地)
(地 / 地, mod, 此 / 此)
(是 / 是-04, location, 此 / 此)
(是 / 是-04, manner, 不 / 不)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, location, 地 / 地)

Decoded in 19,916 microseconds
Sentence: “ 你 来 寻找 什么 ？ ”

Spans:
Span 4-5:  什么 => 什么
Span 1-2:  你 => 你
Span 3-4:  寻找 => 寻找-01
Span 2-3:  来 => 来-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  来 => 来-05

Extra span: 什么 => 什么
Incorrect span: 来 => 来-06
Missing span: 来 => 来-05
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	来	_	MSP	MSP	_	4	prtmod	_	_
4	寻找	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x9 / 来-05, arg0, x10 / 你)
(x9 / 来-05, arg1, x11 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),什么,什么,false), Span(3,4,List(1),寻找,寻找-01,false), Span(2,3,List(2),来,来-06,false), Span(1,2,List(3),你,你,false)),Map(2 -> 来-06, 1 -> 寻找-01, 0 -> 什么, 3 -> 你),Map(来 -> 来-06, 寻 -> 寻找-01, 你 -> 你, 什 -> 什么))),[Ljava.lang.String;@57f847af,Annotation([Ljava.lang.String;@3ed34ef5,[Ljava.lang.String;@553bc36c,[Ljava.lang.String;@380e1909),Annotation([Ljava.lang.String;@2d5ef498,[Ljava.lang.String;@95eb320,[Ledu.cmu.lti.nlp.amr.Dependency;@2f521c4),Annotation([Ljava.lang.String;@4afbb6c2,[Ljava.lang.String;@10db6131,[Ljava.lang.String;@6c6017b9),Annotation([Ljava.lang.String;@4730e0f0,[Ljava.lang.String;@506a1372,[Ledu.cmu.lti.nlp.amr.Entity;@1b7332a7))
AMR:
(寻 / 寻找-01, direction, 来 / 来-06)
(寻 / 寻找-01, subset, 什 / 什么)
(来 / 来-06, direction, 你 / 你)

Decoded in 7,190 microseconds
Sentence: “ 我 来 找 人 。 ” 小 王子 说 ，

Spans:
Span 4-5:  人 => 人
Span 7-8:  小 => 小
Span 1-2:  我 => 我
Span 3-4:  找 => 找-01
Span 2-3:  来 => 来-06
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  人 => 人
Oracle Span 7-8:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  找 => 找-01
Oracle Span 2-3:  来 => 来-05
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 来 => 来-06
Missing span: 说 => 说-01
Missing span: 来 => 来-05
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	dep	_	_
3	来	_	NN	NN	_	4	prep	_	_
4	找	_	VV	VV	_	0	root	_	_
5	人	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 来-05)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 来-05, arg0, x5 / 我)
(x4 / 来-05, arg1, x6 / 找-01)
(x6 / 找-01, arg1, x8 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(4,5,List(3),人,人,false), Span(3,4,List(4),找,找-01,false), Span(2,3,List(5),来,来-06,false), Span(1,2,List(6),我,我,false)),Map(2 -> 小, 5 -> 来-06, 1 -> 王子, 4 -> 找-01, 6 -> 我, 0 -> 说-02, 3 -> 人),Map(我 -> 我, 来 -> 来-06, 王 -> 王子, 小 -> 小, 说 -> 说-02, 找 -> 找-01, 人 -> 人))),[Ljava.lang.String;@77c233af,Annotation([Ljava.lang.String;@37b56ac7,[Ljava.lang.String;@37c41ec0,[Ljava.lang.String;@35a0e495),Annotation([Ljava.lang.String;@5399f6c5,[Ljava.lang.String;@4fe64d23,[Ledu.cmu.lti.nlp.amr.Dependency;@58437801),Annotation([Ljava.lang.String;@6af5bbd0,[Ljava.lang.String;@76464795,[Ljava.lang.String;@b34832b),Annotation([Ljava.lang.String;@48f4713c,[Ljava.lang.String;@f1868c9,[Ledu.cmu.lti.nlp.amr.Entity;@4ba6ec50))
AMR:
(找 / 找-01, location, 人 / 人)
(找 / 找-01, manner, 来 / 来-06)
(来 / 来-06, beneficiary, 我 / 我)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 找 / 找-01)

Decoded in 19,337 microseconds
Sentence: “ 什么 叫 ‘ 驯服 ’ 呢 ？ ”

Spans:
Span 1-2:  什么 => 什么
Span 2-3:  叫 => 叫-06
Span 4-5:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Extra span: 叫 => 叫-06
Extra span: 什么 => 什么
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	dep	_	_
3	叫	_	VV	VV	_	0	root	_	_
4	‘	_	PU	PU	_	5	punct	_	_
5	驯服	_	VV	VV	_	3	ccomp	_	_
6	’	_	PU	PU	_	5	punct	_	_
7	呢	_	SP	SP	_	3	dep	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),驯服,驯服,false), Span(2,3,List(1),叫,叫-06,false), Span(1,2,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 叫-06, 0 -> 驯服),Map(驯 -> 驯服, 叫 -> 叫-06, 什 -> 什么))),[Ljava.lang.String;@642413d4,Annotation([Ljava.lang.String;@fb2e3fd,[Ljava.lang.String;@43a09ce2,[Ljava.lang.String;@3f183caa),Annotation([Ljava.lang.String;@7b66322e,[Ljava.lang.String;@63538bb4,[Ledu.cmu.lti.nlp.amr.Dependency;@24534cb0),Annotation([Ljava.lang.String;@5a50d9fc,[Ljava.lang.String;@106d77da,[Ljava.lang.String;@6f9c5048),Annotation([Ljava.lang.String;@5114b7c7,[Ljava.lang.String;@dd71b20,[Ledu.cmu.lti.nlp.amr.Entity;@767f6ee7))
AMR:
(叫 / 叫-06, mod, 什 / 什么)
(驯 / 驯服, mod, 叫 / 叫-06)

Decoded in 4,330 microseconds
Sentence: “ 人 ， ” 狐狸 说 ，

Spans:
Span 1-2:  人 => 人
Span 4-5:  狐狸 => 狐狸
Span 5-6:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人 => 人
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	人	_	VA	VA	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_
5	狐狸	_	AD	AD	_	6	advmod	_	_
6	说	_	VV	VV	_	2	dep	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 人)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说,说-02,false), Span(4,5,List(1),狐狸,狐狸,false), Span(1,2,List(2),人,人,false)),Map(2 -> 人, 1 -> 狐狸, 0 -> 说-02),Map(说 -> 说-02, 狐 -> 狐狸, 人 -> 人))),[Ljava.lang.String;@7b6c6e70,Annotation([Ljava.lang.String;@f324455,[Ljava.lang.String;@3a894088,[Ljava.lang.String;@370c1968),Annotation([Ljava.lang.String;@2f0bfe17,[Ljava.lang.String;@3206174f,[Ledu.cmu.lti.nlp.amr.Dependency;@42fb8c87),Annotation([Ljava.lang.String;@15eb0ae9,[Ljava.lang.String;@65e0b505,[Ljava.lang.String;@67de7a99),Annotation([Ljava.lang.String;@795f5d51,[Ljava.lang.String;@34aeacd1,[Ledu.cmu.lti.nlp.amr.Entity;@54067fdc))
AMR:
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, topic, 人 / 人)

Decoded in 4,761 microseconds
Sentence: “ 他们 有 枪 ， 他们 还 打猎 ，

Spans:
Span 5-6:  他们 => 他们
Span 1-2:  他们 => 他们
Span 7-8:  打猎 => 打猎-01
Span 2-3:  有 => 有-06
Span 3-4:  枪 => 枪
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 7-8:  打猎 => 打猎-01
Oracle Span 2-3:  有 => 有-01
Oracle Span 3-4:  枪 => 枪
Oracle Span 6-7:  还 => 还

Extra span: 他们 => 他们
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	有	_	VE	VE	_	0	root	_	_
4	枪	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	他们	_	PN	PN	_	8	nsubj	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	打猎	_	VV	VV	_	3	conj	_	_
9	,	_	PU	PU	_	8	punct	_	_

Oracle:
(x18 / 有-01, arg0, x19 / 他们)
(x18 / 有-01, arg1, x20 / 枪)
(x21 / 打猎-01, manner, x23 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),打猎,打猎-01,false), Span(6,7,List(1),还,还,false), Span(5,6,List(2),他们,他们,false), Span(3,4,List(3),枪,枪,false), Span(2,3,List(4),有,有-06,false), Span(1,2,List(5),他们,他们,false)),Map(2 -> 他们, 5 -> 他们, 1 -> 还, 4 -> 有-06, 0 -> 打猎-01, 3 -> 枪),Map(他2 -> 他们, 枪 -> 枪, 打 -> 打猎-01, 他 -> 他们, 还 -> 还, 有 -> 有-06))),[Ljava.lang.String;@4098dd77,Annotation([Ljava.lang.String;@43aeb5e0,[Ljava.lang.String;@2274160,[Ljava.lang.String;@65383667),Annotation([Ljava.lang.String;@63cd2cd2,[Ljava.lang.String;@557a84fe,[Ledu.cmu.lti.nlp.amr.Dependency;@6deee370),Annotation([Ljava.lang.String;@49c17ba4,[Ljava.lang.String;@43e065f2,[Ljava.lang.String;@423c5404),Annotation([Ljava.lang.String;@5853ca50,[Ljava.lang.String;@1a0d96a5,[Ledu.cmu.lti.nlp.amr.Entity;@5a02bfe3))
AMR:
(打 / 打猎-01, location, 他 / 他们)
(打 / 打猎-01, manner, 还 / 还)
(有 / 有-06, degree, 他2 / 他们)
(有 / 有-06, prep-as, 他 / 他们)
(枪 / 枪, mod, 有 / 有-06)

Decoded in 11,425 microseconds
Sentence: 这 真 碍事 ！

Spans:
Span 1-2:  真 => 真
Span 2-3:  碍事 => 碍事-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  真 => 真
Oracle Span 2-3:  碍事 => 碍事-01
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	碍事	_	VV	VV	_	0	root	_	_
4	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 碍事-01, arg0, x3 / 这)
(x0 / 碍事-01, degree, x2 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),碍事,碍事-01,false), Span(1,2,List(1),真,真,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 真, 0 -> 碍事-01),Map(这 -> 这, 碍 -> 碍事-01, 真 -> 真))),[Ljava.lang.String;@7a3e5cd3,Annotation([Ljava.lang.String;@3c79088e,[Ljava.lang.String;@4a37191a,[Ljava.lang.String;@5854a18),Annotation([Ljava.lang.String;@d5556bf,[Ljava.lang.String;@791c12e3,[Ledu.cmu.lti.nlp.amr.Dependency;@b112b13),Annotation([Ljava.lang.String;@24eb65e3,[Ljava.lang.String;@3ac3f6f,[Ljava.lang.String;@1abebef3),Annotation([Ljava.lang.String;@18f55704,[Ljava.lang.String;@67cefd84,[Ledu.cmu.lti.nlp.amr.Entity;@5fbe155))
AMR:
(碍 / 碍事-01, degree, 真 / 真)
(碍 / 碍事-01, domain, 这 / 这)

Decoded in 3,833 microseconds
Sentence: 他们 也 养 鸡 ，

Spans:
Span 1-2:  也 => 也
Span 0-1:  他们 => 他们
Span 2-3:  养 => 养-01
Span 3-4:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  也 => 也
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  养 => 养-01
Oracle Span 3-4:  鸡 => 鸡

Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	养	_	VV	VV	_	0	root	_	_
4	鸡	_	NN	NN	_	3	dobj	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 养-01, arg0, x2 / 他们)
(x0 / 养-01, arg1, x4 / 鸡)
(x0 / 养-01, manner, x3 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),鸡,鸡,false), Span(2,3,List(1),养,养-01,false), Span(1,2,List(2),也,也,false), Span(0,1,List(3),他们,他们,false)),Map(2 -> 也, 1 -> 养-01, 0 -> 鸡, 3 -> 他们),Map(也 -> 也, 他 -> 他们, 鸡 -> 鸡, 养 -> 养-01))),[Ljava.lang.String;@6add8e3f,Annotation([Ljava.lang.String;@58a2b917,[Ljava.lang.String;@48904d5a,[Ljava.lang.String;@12bbfc54),Annotation([Ljava.lang.String;@1491344a,[Ljava.lang.String;@59b65dce,[Ledu.cmu.lti.nlp.amr.Dependency;@1386313f),Annotation([Ljava.lang.String;@5e922647,[Ljava.lang.String;@433c6abb,[Ljava.lang.String;@288f173f),Annotation([Ljava.lang.String;@a22c4d8,[Ljava.lang.String;@45cd7bc5,[Ledu.cmu.lti.nlp.amr.Entity;@6504a875))
AMR:
(养 / 养-01, ARG6, 他 / 他们)
(养 / 养-01, manner, 也 / 也)
(养 / 养-01, quant, 鸡 / 鸡)

Decoded in 6,064 microseconds
Sentence: 这些 是 他们 唯一 的 可取 之 处

Spans:
Span 2-3:  他们 => 他们
Span 3-4:  唯一 => 唯一
Span 1-2:  是 => 是-04
Span 0-1:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  他们 => 他们
Oracle Span 3-4:  唯一 => 唯一
Oracle Span 0-1:  这些 => 这些

Extra span: 是 => 是-04
Dependencies:
1	这些	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	他们	_	PN	PN	_	6	nn	_	_
4	唯一	_	JJ	JJ	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	可取	_	NN	NN	_	8	assmod	_	_
7	之	_	DEG	DEG	_	6	assm	_	_
8	处	_	NN	NN	_	2	attr	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),唯一,唯一,false), Span(2,3,List(1),他们,他们,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),这些,这些,false)),Map(2 -> 是-04, 1 -> 他们, 0 -> 唯一, 3 -> 这些),Map(唯 -> 唯一, 这 -> 这些, 他 -> 他们, 是 -> 是-04))),[Ljava.lang.String;@35e26d05,Annotation([Ljava.lang.String;@29fa6b65,[Ljava.lang.String;@7c72ecc,[Ljava.lang.String;@47406941),Annotation([Ljava.lang.String;@61ecbee9,[Ljava.lang.String;@1bb740f2,[Ledu.cmu.lti.nlp.amr.Dependency;@2538bc06),Annotation([Ljava.lang.String;@61f6d381,[Ljava.lang.String;@656922a0,[Ljava.lang.String;@44784e2f),Annotation([Ljava.lang.String;@2440022a,[Ljava.lang.String;@737db7f8,[Ledu.cmu.lti.nlp.amr.Entity;@5f2de715))
AMR:
(唯 / 唯一, ARG3, 他 / 他们)
(是 / 是-04, ARG1, 这 / 这些)
(是 / 是-04, ARG4, 他 / 他们)

Decoded in 6,613 microseconds
Sentence: 你 是 来 寻找 鸡 的 吗 ？ ”

Spans:
Span 0-1:  你 => 你
Span 3-4:  寻找 => 寻找-01
Span 1-2:  是 => 是-04
Span 2-3:  来 => 来-06
Span 4-5:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  来 => 来-05
Oracle Span 4-5:  鸡 => 鸡

Incorrect span: 来 => 来-06
Extra span: 是 => 是-04
Missing span: 来 => 来-05
Dependencies:
1	你	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	来	_	MSP	MSP	_	4	prtmod	_	_
4	寻找	_	VV	VV	_	2	attr	_	_
5	鸡	_	NN	NN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	吗	_	SP	SP	_	2	dep	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 寻找-01, arg1, x13 / 鸡)
(x9 / 来-05, arg0, x10 / 你)
(x9 / 来-05, arg1, x11 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),鸡,鸡,false), Span(3,4,List(1),寻找,寻找-01,false), Span(2,3,List(2),来,来-06,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),你,你,false)),Map(2 -> 来-06, 1 -> 寻找-01, 4 -> 你, 0 -> 鸡, 3 -> 是-04),Map(来 -> 来-06, 寻 -> 寻找-01, 你 -> 你, 鸡 -> 鸡, 是 -> 是-04))),[Ljava.lang.String;@5922d3e9,Annotation([Ljava.lang.String;@7d57dbb5,[Ljava.lang.String;@630b6190,[Ljava.lang.String;@532e27ab),Annotation([Ljava.lang.String;@1cdc1bbc,[Ljava.lang.String;@5f95f1e1,[Ledu.cmu.lti.nlp.amr.Dependency;@672a1c62),Annotation([Ljava.lang.String;@459b6c53,[Ljava.lang.String;@39e69ea7,[Ljava.lang.String;@490c7a83),Annotation([Ljava.lang.String;@7e72a6cc,[Ljava.lang.String;@6015a4a5,[Ledu.cmu.lti.nlp.amr.Entity;@6d0b0da6))
AMR:
(寻 / 寻找-01, direction, 鸡 / 鸡)
(寻 / 寻找-01, manner, 来 / 来-06)
(是 / 是-04, manner, 你 / 你)
(来 / 来-06, manner, 是 / 是-04)

Decoded in 8,897 microseconds
Sentence: “ 不 ， ” 小 王子 说 ，

Spans:
Span 1-2:  不 => 不
Span 4-5:  小 => 小
Span 5-6:  王子 => 王子
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不 => 不
Oracle Span 4-5:  小 => 小-01
Oracle Span 5-6:  王子 => 王子
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	,	_	JJ	JJ	_	6	amod	_	_
4	”	_	PU	PU	_	6	punct	_	_
5	小	_	JJ	JJ	_	6	amod	_	_
6	王子	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	,	_	VA	VA	_	7	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 不)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),王子,王子,false), Span(4,5,List(2),小,小,false), Span(1,2,List(3),不,不,false)),Map(2 -> 小, 1 -> 王子, 0 -> 说-02, 3 -> 不),Map(王 -> 王子, 小 -> 小, 不 -> 不, 说 -> 说-02))),[Ljava.lang.String;@4779aae6,Annotation([Ljava.lang.String;@2cd62003,[Ljava.lang.String;@61ab89b0,[Ljava.lang.String;@5478ce1e),Annotation([Ljava.lang.String;@5edc70ed,[Ljava.lang.String;@4317850d,[Ledu.cmu.lti.nlp.amr.Dependency;@7e4c72d6),Annotation([Ljava.lang.String;@6cd64b3f,[Ljava.lang.String;@51b01550,[Ljava.lang.String;@2ef0dd86),Annotation([Ljava.lang.String;@3337d04c,[Ljava.lang.String;@6de6faa6,[Ledu.cmu.lti.nlp.amr.Entity;@3cad68df))
AMR:
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, location, 不 / 不)

Decoded in 10,262 microseconds
Sentence: “ 我 是 来 找 朋友 的 。

Spans:
Span 1-2:  我 => 我
Span 4-5:  找 => 找-01
Span 2-3:  是 => 是-04
Span 5-6:  朋友 => 朋友
Span 3-4:  来 => 来-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 4-5:  找 => 找-01
Oracle Span 5-6:  朋友 => 朋友
Oracle Span 3-4:  来 => 来-05

Incorrect span: 来 => 来-06
Extra span: 是 => 是-04
Missing span: 来 => 来-05
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	找	_	VV	VV	_	3	attr	_	_
6	朋友	_	NN	NN	_	5	dobj	_	_
7	的	_	DEC	DEC	_	5	cpm	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 找-01, arg1, x12 / 朋友)
(x8 / 来-05, arg0, x9 / 我)
(x8 / 来-05, arg1, x10 / 找-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),朋友,朋友,false), Span(4,5,List(1),找,找-01,false), Span(3,4,List(2),来,来-06,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),我,我,false)),Map(2 -> 来-06, 1 -> 找-01, 4 -> 我, 0 -> 朋友, 3 -> 是-04),Map(我 -> 我, 来 -> 来-06, 朋 -> 朋友, 找 -> 找-01, 是 -> 是-04))),[Ljava.lang.String;@14998e21,Annotation([Ljava.lang.String;@1921994e,[Ljava.lang.String;@43c87306,[Ljava.lang.String;@14f40030),Annotation([Ljava.lang.String;@4c447c09,[Ljava.lang.String;@593a6726,[Ledu.cmu.lti.nlp.amr.Dependency;@596a7f44),Annotation([Ljava.lang.String;@6dab01d9,[Ljava.lang.String;@2e09c51,[Ljava.lang.String;@869d87c),Annotation([Ljava.lang.String;@2f3166a,[Ljava.lang.String;@37637a24,[Ledu.cmu.lti.nlp.amr.Entity;@31e76a8d))
AMR:
(找 / 找-01, manner, 来 / 来-06)
(找 / 找-01, prep-through, 朋 / 朋友)
(是 / 是-04, beneficiary, 我 / 我)
(来 / 来-06, manner, 是 / 是-04)

Decoded in 10,500 microseconds
Sentence: 什么 叫 ‘ 驯服 ’ 呢 ？ ”

Spans:
Span 0-1:  什么 => 什么
Span 1-2:  叫 => 叫-06
Span 3-4:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Extra span: 叫 => 叫-06
Extra span: 什么 => 什么
Missing span: 驯服 => 驯服-01
Dependencies:
1	什么	_	PN	PN	_	2	nsubj	_	_
2	叫	_	VV	VV	_	0	root	_	_
3	‘	_	PU	PU	_	4	punct	_	_
4	驯服	_	NN	NN	_	2	dobj	_	_
5	’	_	PU	PU	_	4	punct	_	_
6	呢	_	SP	SP	_	2	dep	_	_
7	？	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),驯服,驯服,false), Span(1,2,List(1),叫,叫-06,false), Span(0,1,List(2),什么,什么,false)),Map(2 -> 什么, 1 -> 叫-06, 0 -> 驯服),Map(驯 -> 驯服, 叫 -> 叫-06, 什 -> 什么))),[Ljava.lang.String;@770beef5,Annotation([Ljava.lang.String;@6dd1f638,[Ljava.lang.String;@414f13fc,[Ljava.lang.String;@4b76aa5a),Annotation([Ljava.lang.String;@63a28987,[Ljava.lang.String;@120d3fd,[Ledu.cmu.lti.nlp.amr.Dependency;@38c9e0d6),Annotation([Ljava.lang.String;@4693a9ef,[Ljava.lang.String;@310aee0b,[Ljava.lang.String;@36327cec),Annotation([Ljava.lang.String;@410ae5ac,[Ljava.lang.String;@1a8df0b3,[Ledu.cmu.lti.nlp.amr.Entity;@7c112f5f))
AMR:
(叫 / 叫-06, ARG1, 什 / 什么)
(驯 / 驯服, mod, 叫 / 叫-06)

Decoded in 4,335 microseconds
Sentence: “ 这 是 已经 早 就 被 人 遗忘 了 的 事情 ， ” 狐狸 说 ，

Spans:
Span 11-12:  事情 => 事情
Span 7-8:  人 => 人
Span 5-6:  就 => 就-01
Span 3-4:  已经 => 已经
Span 4-5:  早 => 早-01
Span 2-3:  是 => 是-04
Span 14-15:  狐狸 => 狐狸
Span 15-16:  说 => 说-02
Span 1-2:  这 => 这
Span 8-9:  遗忘 => 遗忘-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  事情 => 事情
Oracle Span 7-8:  人 => 人
Oracle Span 5-6:  就 => 就
Oracle Span 3-4:  已经 => 已经
Oracle Span 4-5:  早 => 早-01
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 15-16:  说 => 说-01
Oracle Span 1-2:  这 => 这
Oracle Span 8-9:  遗忘 => 遗忘-01

Incorrect span: 说 => 说-02
Incorrect span: 就 => 就-01
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	已经	_	AD	AD	_	9	advmod	_	_
5	早	_	AD	AD	_	9	advmod	_	_
6	就	_	AD	AD	_	9	advmod	_	_
7	被	_	LB	LB	_	9	pass	_	_
8	人	_	NN	NN	_	9	nsubj	_	_
9	遗忘	_	VV	VV	_	12	rcmod	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	的	_	DEC	DEC	_	9	cpm	_	_
12	事情	_	NN	NN	_	3	attr	_	_
13	,	_	PU	PU	_	3	punct	_	_
14	”	_	PU	PU	_	3	punct	_	_
15	狐狸	_	NN	NN	_	16	dep	_	_
16	说	_	VV	VV	_	3	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 事情)
(x3 / 事情, domain, x6 / 这)
(x7 / 遗忘-01, arg0, x8 / 人)
(x7 / 遗忘-01, arg1, x3 / 事情)
(x7 / 遗忘-01, manner, x10 / 就)
(x7 / 遗忘-01, time, x11 / 已经)
(x7 / 遗忘-01, time, x9 / 早-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说,说-02,false), Span(14,15,List(1),狐狸,狐狸,false), Span(11,12,List(2),事情,事情,false), Span(8,9,List(3),遗忘,遗忘-01,false), Span(7,8,List(4),人,人,false), Span(5,6,List(5),就,就-01,false), Span(4,5,List(6),早,早-01,false), Span(3,4,List(7),已经,已经,false), Span(2,3,List(8),是,是-04,false), Span(1,2,List(9),这,这,false)),Map(2 -> 事情, 5 -> 就-01, 8 -> 是-04, 7 -> 已经, 1 -> 狐狸, 4 -> 人, 6 -> 早-01, 9 -> 这, 0 -> 说-02, 3 -> 遗忘-01),Map(已 -> 已经, 就 -> 就-01, 早 -> 早-01, 这 -> 这, 遗 -> 遗忘-01, 事 -> 事情, 说 -> 说-02, 狐 -> 狐狸, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@5961e92d,Annotation([Ljava.lang.String;@4fd05028,[Ljava.lang.String;@3a2d3909,[Ljava.lang.String;@4fb392c4),Annotation([Ljava.lang.String;@194d329e,[Ljava.lang.String;@54d1608f,[Ledu.cmu.lti.nlp.amr.Dependency;@7e7fe6d),Annotation([Ljava.lang.String;@541179e7,[Ljava.lang.String;@24386839,[Ljava.lang.String;@7b32b129),Annotation([Ljava.lang.String;@439e3cb4,[Ljava.lang.String;@1c9fbb61,[Ledu.cmu.lti.nlp.amr.Entity;@7b81616b))
AMR:
(就 / 就-01, time, 早 / 早-01)
(是 / 是-04, mod, 这 / 这)
(是 / 是-04, time, 已 / 已经)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 事 / 事情)
(遗 / 遗忘-01, location, 事 / 事情)
(遗 / 遗忘-01, time, 人 / 人)
(遗 / 遗忘-01, time, 已 / 已经)
(遗 / 遗忘-01, time, 早 / 早-01)

Decoded in 41,728 microseconds
Sentence: “ 它 的 意思 就 是 ‘ 建立 联系 ’ 。 ”

Spans:
Span 1-2:  它 => 它
Span 4-5:  就 => 就-01
Span 7-8:  建立 => 建立-01
Span 3-4:  意思 => 意思-01
Span 5-6:  是 => 是-04
Span 8-9:  联系 => 联系

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  它 => 它
Oracle Span 7-8:  建立 => 建立-01
Oracle Span 8-9:  联系 => 联系

Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 意思 => 意思-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	它	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	意思	_	NN	NN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	‘	_	PU	PU	_	8	punct	_	_
8	建立	_	VV	VV	_	6	ccomp	_	_
9	联系	_	NN	NN	_	8	dobj	_	_
10	’	_	PU	PU	_	8	punct	_	_
11	。	_	PU	PU	_	6	punct	_	_
12	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 建立-01, arg1, x11 / 联系)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),联系,联系,false), Span(7,8,List(1),建立,建立-01,false), Span(5,6,List(2),是,是-04,false), Span(4,5,List(3),就,就-01,false), Span(3,4,List(4),意思,意思-01,false), Span(1,2,List(5),它,它,false)),Map(2 -> 是-04, 5 -> 它, 1 -> 建立-01, 4 -> 意思-01, 0 -> 联系, 3 -> 就-01),Map(就 -> 就-01, 它 -> 它, 意 -> 意思-01, 建 -> 建立-01, 是 -> 是-04, 联 -> 联系))),[Ljava.lang.String;@15d42ccb,Annotation([Ljava.lang.String;@279dd959,[Ljava.lang.String;@46383a78,[Ljava.lang.String;@36c281ed),Annotation([Ljava.lang.String;@244418a,[Ljava.lang.String;@4b5a078a,[Ledu.cmu.lti.nlp.amr.Dependency;@4c361f63),Annotation([Ljava.lang.String;@6ed922e1,[Ljava.lang.String;@4eb166a1,[Ljava.lang.String;@554c4eaa),Annotation([Ljava.lang.String;@29fd8e67,[Ljava.lang.String;@e146f93,[Ledu.cmu.lti.nlp.amr.Entity;@4bd5849e))
AMR:
(就 / 就-01, degree, 意 / 意思-01)
(建 / 建立-01, location, 联 / 联系)
(建 / 建立-01, manner, 是 / 是-04)
(意 / 意思-01, poss, 它 / 它)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 11,565 microseconds
Sentence: “ 建立 联系 ？ ”

Spans:
Span 1-2:  建立 => 建立-01
Span 2-3:  联系 => 联系

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  建立 => 建立-01
Oracle Span 2-3:  联系 => 联系

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	建立	_	VV	VV	_	0	root	_	_
3	联系	_	NN	NN	_	2	dep	_	_
4	？	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x6 / 建立-01, arg1, x7 / 联系)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),联系,联系,false), Span(1,2,List(1),建立,建立-01,false)),Map(1 -> 建立-01, 0 -> 联系),Map(建 -> 建立-01, 联 -> 联系))),[Ljava.lang.String;@7cdbaa50,Annotation([Ljava.lang.String;@39909d1a,[Ljava.lang.String;@1455154c,[Ljava.lang.String;@7343922c),Annotation([Ljava.lang.String;@526b2f3e,[Ljava.lang.String;@6f2e1024,[Ledu.cmu.lti.nlp.amr.Dependency;@536d97f8),Annotation([Ljava.lang.String;@3c50ad4b,[Ljava.lang.String;@37496720,[Ljava.lang.String;@28f9fedd),Annotation([Ljava.lang.String;@17947e6d,[Ljava.lang.String;@2e17a321,[Ledu.cmu.lti.nlp.amr.Entity;@521bb1a4))
AMR:
(建 / 建立-01, location, 联 / 联系)

Decoded in 2,795 microseconds
Sentence: “ 一点 不错 ， ” 狐狸 说 。

Spans:
Span 1-2:  一点 => 一点
Span 2-3:  不错 => 不错-01
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一点 => 一点
Oracle Span 2-3:  不错 => 不错-01
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	7	dep	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 不错-01)
(x3 / 不错-01, degree, x4 / 一点)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),狐狸,狐狸,false), Span(2,3,List(2),不错,不错-01,false), Span(1,2,List(3),一点,一点,false)),Map(2 -> 不错-01, 1 -> 狐狸, 0 -> 说-02, 3 -> 一点),Map(不 -> 不错-01, 说 -> 说-02, 狐 -> 狐狸, 一 -> 一点))),[Ljava.lang.String;@35f3a22c,Annotation([Ljava.lang.String;@1a0c5e9,[Ljava.lang.String;@123d7057,[Ljava.lang.String;@1d247525),Annotation([Ljava.lang.String;@35ee466f,[Ljava.lang.String;@32e652b6,[Ledu.cmu.lti.nlp.amr.Dependency;@4ba02375),Annotation([Ljava.lang.String;@7593ea79,[Ljava.lang.String;@3289079a,[Ljava.lang.String;@32fa809f),Annotation([Ljava.lang.String;@788ba63e,[Ljava.lang.String;@12a14b74,[Ledu.cmu.lti.nlp.amr.Entity;@68ee3b6d))
AMR:
(不 / 不错-01, degree, 一 / 一点)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, purpose, 不 / 不错-01)

Decoded in 7,649 microseconds
Sentence: “ 对 我 来说 ， 你 还 只 是 一 个 小 男孩 ， 就 像 其他 千万 个 小 男孩 一样 。

Spans:
Span 21-22:  一样 => 一样
Span 5-6:  你 => 你
Span 15-16:  像 => 像-01
Span 16-17:  其他 => 其他
Span 17-18:  千万 => 千万
Span 7-8:  只 => 只
Span 1-2:  对 => 对-02
Span 19-20:  小 => 小
Span 11-12:  小 => 小
Span 14-15:  就 => 就-01
Span 2-3:  我 => 我
Span 8-9:  是 => 是-04
Span 3-4:  来说 => 来说-01
Span 20-21:  男孩 => 男孩
Span 12-13:  男孩 => 男孩
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 15-16:  像 => 像-01
Oracle Span 16-17:  其他 => 其他
Oracle Span 17-18:  千万 => 千万
Oracle Span 7-8:  只 => 只
Oracle Span 11-12:  小 => 小-01
Oracle Span 19-20:  小 => 小-01
Oracle Span 14-15:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 12-13:  男孩 => 男孩
Oracle Span 20-21:  男孩 => 男孩
Oracle Span 6-7:  还 => 还

Extra span: 一样 => 一样
Incorrect span: 小 => 小
Incorrect span: 就 => 就-01
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 对 => 对-02
Missing span: 就 => 就
Missing span: 小 => 小-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	9	dep	_	_
5	,	_	PU	PU	_	9	punct	_	_
6	你	_	PN	PN	_	9	nsubj	_	_
7	还	_	AD	AD	_	9	advmod	_	_
8	只	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	13	clf	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	男孩	_	NN	NN	_	9	attr	_	_
14	,	_	PU	PU	_	9	punct	_	_
15	就	_	AD	AD	_	22	advmod	_	_
16	像	_	P	P	_	22	prep	_	_
17	其他	_	DT	DT	_	21	det	_	_
18	千万	_	CD	CD	_	19	nummod	_	_
19	个	_	M	M	_	17	dep	_	_
20	小	_	JJ	JJ	_	21	amod	_	_
21	男孩	_	NN	NN	_	16	pobj	_	_
22	一样	_	VA	VA	_	9	conj	_	_
23	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x17 / 来说-01, arg0, x18 / 你)
(x17 / 来说-01, arg1, x19 / 我)
(x17 / 来说-01, arg2, x20 / 男孩)
(x20 / 男孩, manner, x24 / 只)
(x20 / 男孩, manner, x25 / 还)
(x20 / 男孩, mod, x21 / 小-01)
(x26 / 像-01, arg0, x20 / 男孩)
(x26 / 像-01, arg1, x27 / 男孩)
(x26 / 像-01, manner, x30 / 就)
(x27 / 男孩, mod, x29 / 其他)
(x27 / 男孩, mod, x31 / 小-01)
(x27 / 男孩, quant, x28 / 千万)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),一样,一样,false), Span(20,21,List(1),男孩,男孩,false), Span(19,20,List(2),小,小,false), Span(17,18,List(3),千万,千万,false), Span(16,17,List(4),其他,其他,false), Span(15,16,List(5),像,像-01,false), Span(14,15,List(6),就,就-01,false), Span(12,13,List(7),男孩,男孩,false), Span(11,12,List(8),小,小,false), Span(8,9,List(9),是,是-04,false), Span(7,8,List(10),只,只,false), Span(6,7,List(11),还,还,false), Span(5,6,List(12),你,你,false), Span(3,4,List(13),来说,来说-01,false), Span(2,3,List(14),我,我,false), Span(1,2,List(15),对,对-02,false)),Map(2 -> 小, 5 -> 像-01, 12 -> 你, 15 -> 对-02, 8 -> 小, 7 -> 男孩, 1 -> 男孩, 4 -> 其他, 11 -> 还, 14 -> 我, 6 -> 就-01, 0 -> 一样, 9 -> 是-04, 3 -> 千万, 10 -> 只, 13 -> 来说-01),Map(男 -> 男孩, 就 -> 就-01, 我 -> 我, 来 -> 来说-01, 你 -> 你, 男2 -> 男孩, 小 -> 小, 千 -> 千万, 像 -> 像-01, 其 -> 其他, 只 -> 只, 还 -> 还, 对 -> 对-02, 小2 -> 小, 是 -> 是-04, 一 -> 一样))),[Ljava.lang.String;@e76b097,Annotation([Ljava.lang.String;@2be95d31,[Ljava.lang.String;@338b49d3,[Ljava.lang.String;@2aa7399c),Annotation([Ljava.lang.String;@11eed657,[Ljava.lang.String;@708f018e,[Ledu.cmu.lti.nlp.amr.Dependency;@19a31b9d),Annotation([Ljava.lang.String;@a5bbaec,[Ljava.lang.String;@6d60899e,[Ljava.lang.String;@65eb76cd),Annotation([Ljava.lang.String;@6415f61e,[Ljava.lang.String;@334ebcaa,[Ledu.cmu.lti.nlp.amr.Entity;@5a0bef24))
AMR:
(一 / 一样, mod, 男 / 男孩)
(像 / 像-01, location, 千 / 千万)
(像 / 像-01, location, 男2 / 男孩)
(像 / 像-01, manner, 就 / 就-01)
(对 / 对-02, purpose, 是 / 是-04)
(对 / 对-02, subset, 我 / 我)
(是 / 是-04, domain, 你 / 你)
(是 / 是-04, manner, 只 / 只)
(是 / 是-04, manner, 还 / 还)
(来 / 来说-01, example, 对 / 对-02)
(男 / 男孩, mod, 其 / 其他)
(男 / 男孩, mod, 小 / 小)
(男 / 男孩, quant, 千 / 千万)
(男2 / 男孩, mod, 小2 / 小)
(男2 / 男孩, mod, 是 / 是-04)

Decoded in 101,671 microseconds
Sentence: 我 不 需要 你 。

Spans:
Span 1-2:  不 => 不
Span 3-4:  你 => 你
Span 0-1:  我 => 我
Span 2-3:  需要 => 需要-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  需要 => 需要-01

Incorrect span: 需要 => 需要-04
Extra span: 不 => 不
Missing span: 需要 => 需要-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	需要	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	3	dobj	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 需要-01, arg0, x2 / 我)
(x0 / 需要-01, arg1, x3 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),你,你,false), Span(2,3,List(1),需要,需要-04,false), Span(1,2,List(2),不,不,false), Span(0,1,List(3),我,我,false)),Map(2 -> 不, 1 -> 需要-04, 0 -> 你, 3 -> 我),Map(需 -> 需要-04, 我 -> 我, 你 -> 你, 不 -> 不))),[Ljava.lang.String;@6468a7b6,Annotation([Ljava.lang.String;@2f860823,[Ljava.lang.String;@696b4a95,[Ljava.lang.String;@6c1cfa53),Annotation([Ljava.lang.String;@4d68b571,[Ljava.lang.String;@52b06bef,[Ledu.cmu.lti.nlp.amr.Dependency;@61bcbcce),Annotation([Ljava.lang.String;@6af91cc8,[Ljava.lang.String;@6232ffdb,[Ljava.lang.String;@330c1f61),Annotation([Ljava.lang.String;@37d28f02,[Ljava.lang.String;@15efda6c,[Ledu.cmu.lti.nlp.amr.Entity;@6056232d))
AMR:
(不 / 不, ARG1, 我 / 我)
(需 / 需要-04, dayperiod, 你 / 你)
(需 / 需要-04, manner, 不 / 不)

Decoded in 9,592 microseconds
Sentence: 你 也 同样 用 不 着 我 。

Spans:
Span 4-5:  不 => 不
Span 1-2:  也 => 也
Span 0-1:  你 => 你
Span 2-3:  同样 => 同样-01
Span 6-7:  我 => 我
Span 3-4:  用 => 用

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  同样 => 同样-01
Oracle Span 6-7:  我 => 我
Oracle Span 3-4:  用 => 用-01

Extra span: 不 => 不
Incorrect span: 用 => 用
Extra span: 也 => 也
Missing span: 用 => 用-01
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	也	_	AD	AD	_	4	advmod	_	_
3	同样	_	AD	AD	_	4	advmod	_	_
4	用	_	VV	VV	_	0	root	_	_
5	不	_	AD	AD	_	4	dep	_	_
6	着	_	VV	VV	_	4	dep	_	_
7	我	_	PN	PN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 用-01, arg0, x5 / 你)
(x2 / 用-01, arg1, x7 / 我)
(x2 / 用-01, manner, x6 / 同样-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),我,我,false), Span(4,5,List(1),不,不,false), Span(3,4,List(2),用,用,false), Span(2,3,List(3),同样,同样-01,false), Span(1,2,List(4),也,也,false), Span(0,1,List(5),你,你,false)),Map(2 -> 用, 5 -> 你, 1 -> 不, 4 -> 也, 0 -> 我, 3 -> 同样-01),Map(用 -> 用, 也 -> 也, 我 -> 我, 你 -> 你, 同 -> 同样-01, 不 -> 不))),[Ljava.lang.String;@33f2df51,Annotation([Ljava.lang.String;@107bfcb2,[Ljava.lang.String;@7bac686b,[Ljava.lang.String;@2ab26378),Annotation([Ljava.lang.String;@f9f3928,[Ljava.lang.String;@404eca05,[Ledu.cmu.lti.nlp.amr.Dependency;@58b91d57),Annotation([Ljava.lang.String;@61a91c9b,[Ljava.lang.String;@17092fff,[Ljava.lang.String;@2121d1f9),Annotation([Ljava.lang.String;@31e2232f,[Ljava.lang.String;@1806bc4c,[Ledu.cmu.lti.nlp.amr.Entity;@462e1e64))
AMR:
(你 / 你, age, 不 / 不)
(同 / 同样-01, ARG4, 不 / 不)
(用 / 用, domain, 我 / 我)
(用 / 用, manner, 也 / 也)
(用 / 用, manner, 同 / 同样-01)

Decoded in 11,736 microseconds
Sentence: 对 你 来说 ， 我 也 不过 是 一 只 狐狸 ， 和 其他 千万 只 狐狸 一样 。

Spans:
Span 17-18:  一样 => 一样
Span 6-7:  不过 => 不过
Span 5-6:  也 => 也
Span 1-2:  你 => 你
Span 13-14:  其他 => 其他
Span 14-15:  千万 => 千万
Span 15-16:  只 => 只
Span 9-10:  只 => 只
Span 0-1:  对 => 对-02
Span 4-5:  我 => 我
Span 7-8:  是 => 是-04
Span 2-3:  来说 => 来说-01
Span 16-17:  狐狸 => 狐狸
Span 10-11:  狐狸 => 狐狸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 17-18:  一样 => 一样-02
Oracle Span 6-7:  不过 => 不过
Oracle Span 5-6:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 13-14:  其他 => 其他
Oracle Span 14-15:  千万 => 千万
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  来说 => 来说-01
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 16-17:  狐狸 => 狐狸

Incorrect span: 一样 => 一样
Extra span: 只 => 只
Extra span: 只 => 只
Extra span: 是 => 是-04
Extra span: 对 => 对-02
Missing span: 一样 => 一样-02
Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	你	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	我	_	PN	PN	_	8	nsubj	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	不过	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	只	_	M	M	_	11	clf	_	_
11	狐狸	_	NN	NN	_	8	attr	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	和	_	CC	CC	_	8	cc	_	_
14	其他	_	DT	DT	_	17	det	_	_
15	千万	_	CD	CD	_	16	nummod	_	_
16	只	_	M	M	_	14	dep	_	_
17	狐狸	_	NN	NN	_	18	nsubj	_	_
18	一样	_	VA	VA	_	8	dep	_	_
19	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 我)
(x0 / 来说-01, arg1, x3 / 你)
(x0 / 来说-01, arg2, x4 / 狐狸)
(x10 / 狐狸, mod, x12 / 其他)
(x10 / 狐狸, quant, x11 / 千万)
(x4 / 狐狸, manner, x7 / 不过)
(x4 / 狐狸, manner, x8 / 也)
(x9 / 一样-02, arg0, x4 / 狐狸)
(x9 / 一样-02, arg1, x10 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),一样,一样,false), Span(16,17,List(1),狐狸,狐狸,false), Span(15,16,List(2),只,只,false), Span(14,15,List(3),千万,千万,false), Span(13,14,List(4),其他,其他,false), Span(10,11,List(5),狐狸,狐狸,false), Span(9,10,List(6),只,只,false), Span(7,8,List(7),是,是-04,false), Span(6,7,List(8),不过,不过,false), Span(5,6,List(9),也,也,false), Span(4,5,List(10),我,我,false), Span(2,3,List(11),来说,来说-01,false), Span(1,2,List(12),你,你,false), Span(0,1,List(13),对,对-02,false)),Map(2 -> 只, 5 -> 狐狸, 12 -> 你, 8 -> 不过, 7 -> 是-04, 1 -> 狐狸, 4 -> 其他, 11 -> 来说-01, 6 -> 只, 0 -> 一样, 9 -> 也, 3 -> 千万, 10 -> 我, 13 -> 对-02),Map(也 -> 也, 我 -> 我, 来 -> 来说-01, 狐2 -> 狐狸, 你 -> 你, 千 -> 千万, 不 -> 不过, 只 -> 只, 其 -> 其他, 只2 -> 只, 狐 -> 狐狸, 对 -> 对-02, 是 -> 是-04, 一 -> 一样))),[Ljava.lang.String;@69afa141,Annotation([Ljava.lang.String;@49f40c00,[Ljava.lang.String;@643d2dae,[Ljava.lang.String;@52d6d273),Annotation([Ljava.lang.String;@4667c4c1,[Ljava.lang.String;@2f9a4401,[Ledu.cmu.lti.nlp.amr.Dependency;@22c75c01),Annotation([Ljava.lang.String;@46e64760,[Ljava.lang.String;@3e5fd2b1,[Ljava.lang.String;@43982337),Annotation([Ljava.lang.String;@5b275811,[Ljava.lang.String;@2f0ed952,[Ledu.cmu.lti.nlp.amr.Entity;@6f044c58))
AMR:
(一 / 一样, location, 狐2 / 狐狸)
(一 / 一样, quant, 狐 / 狐狸)
(只 / 只, ARG3, 千 / 千万)
(对 / 对-02, ARG3, 来 / 来说-01)
(对 / 对-02, ARG5, 你 / 你)
(是 / 是-04, ARG1, 我 / 我)
(是 / 是-04, manner, 不 / 不过)
(来 / 来说-01, prep-through, 我 / 我)
(狐 / 狐狸, mod, 其 / 其他)
(狐 / 狐狸, quant, 千 / 千万)
(狐2 / 狐狸, ARG4, 只2 / 只)
(狐2 / 狐狸, manner, 不 / 不过)
(狐2 / 狐狸, manner, 也 / 也)

Decoded in 68,175 microseconds
Sentence: 但是 ， 如果 你 驯服 了 我 ， 我们 就 互相 不可 缺少 了 。

Spans:
Span 10-11:  互相 => 互相
Span 3-4:  你 => 你
Span 9-10:  就 => 就-01
Span 6-7:  我 => 我
Span 8-9:  我们 => 我们
Span 12-13:  缺少 => 缺少-01
Span 4-5:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  互相 => 互相
Oracle Span 3-4:  你 => 你
Oracle Span 6-7:  我 => 我
Oracle Span 8-9:  我们 => 我们
Oracle Span 12-13:  缺少 => 缺少-01
Oracle Span 4-5:  驯服 => 驯服-01

Extra span: 就 => 就-01
Incorrect span: 驯服 => 驯服
Missing span: 驯服 => 驯服-01
Dependencies:
1	但是	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	如果	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	驯服	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	5	dobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	我们	_	PN	PN	_	13	nsubj	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	互相	_	AD	AD	_	13	advmod	_	_
12	不可	_	AD	AD	_	13	advmod	_	_
13	缺少	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 缺少-01, arg0, x14 / 我们)
(x13 / 缺少-01, manner, x16 / 互相)
(x3 / 驯服-01, arg0, x4 / 你)
(x3 / 驯服-01, arg1, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),缺少,缺少-01,false), Span(10,11,List(1),互相,互相,false), Span(9,10,List(2),就,就-01,false), Span(8,9,List(3),我们,我们,false), Span(6,7,List(4),我,我,false), Span(4,5,List(5),驯服,驯服,false), Span(3,4,List(6),你,你,false)),Map(2 -> 就-01, 5 -> 驯服, 1 -> 互相, 4 -> 我, 6 -> 你, 0 -> 缺少-01, 3 -> 我们),Map(驯 -> 驯服, 就 -> 就-01, 互 -> 互相, 我 -> 我们, 缺 -> 缺少-01, 你 -> 你, 我2 -> 我))),[Ljava.lang.String;@6d074b14,Annotation([Ljava.lang.String;@c017175,[Ljava.lang.String;@559cedee,[Ljava.lang.String;@18371d89),Annotation([Ljava.lang.String;@4f3faa70,[Ljava.lang.String;@4832f03b,[Ledu.cmu.lti.nlp.amr.Dependency;@7af3874e),Annotation([Ljava.lang.String;@5a8816cc,[Ljava.lang.String;@68565bc7,[Ljava.lang.String;@37baddde),Annotation([Ljava.lang.String;@5115f590,[Ljava.lang.String;@4b31a708,[Ledu.cmu.lti.nlp.amr.Entity;@11e355ca))
AMR:
(你 / 你, compared-to, 我2 / 我)
(就 / 就-01, ARG3, 驯 / 驯服)
(缺 / 缺少-01, manner, 互 / 互相)
(缺 / 缺少-01, manner, 就 / 就-01)
(缺 / 缺少-01, op, 我 / 我们)
(驯 / 驯服, domain, 我2 / 我)

Decoded in 22,672 microseconds
Sentence: 对 我 来说 ， 你 就 是 世界 上 唯一 的 了 ；

Spans:
Span 12-13:  ; => and
Span 7-8:  世界 => 世界
Span 4-5:  你 => 你
Span 9-10:  唯一 => 唯一
Span 0-1:  对 => 对-02
Span 5-6:  就 => 就-01
Span 1-2:  我 => 我
Span 6-7:  是 => 是-04
Span 2-3:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  世界 => 世界
Oracle Span 4-5:  你 => 你
Oracle Span 9-10:  唯一 => 唯一
Oracle Span 5-6:  就 => 就
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  来说 => 来说-01

Extra span: ; => and
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 对 => 对-02
Missing span: 就 => 就
Dependencies:
1	对	_	P	P	_	7	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	7	punct	_	_
5	你	_	PN	PN	_	7	nsubj	_	_
6	就	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	世界	_	NN	NN	_	9	nsubj	_	_
9	上	_	VV	VV	_	7	attr	_	_
10	唯一	_	JJ	JJ	_	9	dobj	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	了	_	SP	SP	_	9	dep	_	_
13	；	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来说-01, arg1, x2 / 我)
(x0 / 来说-01, arg2, x3 / 唯一)
(x3 / 唯一, domain, x4 / 你)
(x3 / 唯一, location, x5 / 世界)
(x3 / 唯一, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),;,and,false), Span(9,10,List(1),唯一,唯一,false), Span(7,8,List(2),世界,世界,false), Span(6,7,List(3),是,是-04,false), Span(5,6,List(4),就,就-01,false), Span(4,5,List(5),你,你,false), Span(2,3,List(6),来说,来说-01,false), Span(1,2,List(7),我,我,false), Span(0,1,List(8),对,对-02,false)),Map(2 -> 世界, 5 -> 你, 8 -> 对-02, 7 -> 我, 1 -> 唯一, 4 -> 就-01, 6 -> 来说-01, 0 -> and, 3 -> 是-04),Map(就 -> 就-01, 唯 -> 唯一, 我 -> 我, 来 -> 来说-01, 你 -> 你, a -> and, 世 -> 世界, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@70d63e05,Annotation([Ljava.lang.String;@e11ecfa,[Ljava.lang.String;@485e13d7,[Ljava.lang.String;@43984213),Annotation([Ljava.lang.String;@2ff7a73,[Ljava.lang.String;@38830ea,[Ledu.cmu.lti.nlp.amr.Dependency;@3b705be7),Annotation([Ljava.lang.String;@3a790e40,[Ljava.lang.String;@43acd79e,[Ljava.lang.String;@1e1b061),Annotation([Ljava.lang.String;@38f77cd9,[Ljava.lang.String;@4a8e6e89,[Ledu.cmu.lti.nlp.amr.Entity;@6fbb4061))
AMR:
(a / and, mod, 唯 / 唯一)
(世 / 世界, mod, 是 / 是-04)
(唯 / 唯一, manner, 是 / 是-04)
(对 / 对-02, snt5, 我 / 我)
(就 / 就-01, manner, 你 / 你)
(是 / 是-04, manner, 就 / 就-01)
(来 / 来说-01, mode, 对 / 对-02)
(来 / 来说-01, snt5, 就 / 就-01)

Decoded in 32,798 microseconds
Sentence: 我 对 你 来说 ， 也 是 世界 上 唯一 的 了 。 ”

Spans:
Span 7-8:  世界 => 世界
Span 5-6:  也 => 也
Span 2-3:  你 => 你
Span 9-10:  唯一 => 唯一
Span 1-2:  对 => 对-02
Span 0-1:  我 => 我
Span 6-7:  是 => 是-04
Span 3-4:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  世界 => 世界
Oracle Span 5-6:  也 => 也
Oracle Span 2-3:  你 => 你
Oracle Span 9-10:  唯一 => 唯一
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  来说 => 来说-01

Extra span: 是 => 是-04
Extra span: 对 => 对-02
Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	对	_	P	P	_	7	prep	_	_
3	你	_	PN	PN	_	4	nn	_	_
4	来说	_	NN	NN	_	2	pobj	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	是	_	VC	VC	_	0	root	_	_
8	世界	_	NN	NN	_	9	nn	_	_
9	上	_	NN	NN	_	10	dep	_	_
10	唯一	_	JJ	JJ	_	7	dep	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	了	_	SP	SP	_	7	dep	_	_
13	。	_	PU	PU	_	7	punct	_	_
14	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 来说-01, arg0, x12 / 我)
(x11 / 来说-01, arg1, x13 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),唯一,唯一,false), Span(7,8,List(1),世界,世界,false), Span(6,7,List(2),是,是-04,false), Span(5,6,List(3),也,也,false), Span(3,4,List(4),来说,来说-01,false), Span(2,3,List(5),你,你,false), Span(1,2,List(6),对,对-02,false), Span(0,1,List(7),我,我,false)),Map(2 -> 是-04, 5 -> 你, 7 -> 我, 1 -> 世界, 4 -> 来说-01, 6 -> 对-02, 0 -> 唯一, 3 -> 也),Map(唯 -> 唯一, 我 -> 我, 来 -> 来说-01, 也 -> 也, 你 -> 你, 世 -> 世界, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@63d5874f,Annotation([Ljava.lang.String;@60c73e58,[Ljava.lang.String;@5984feef,[Ljava.lang.String;@6c0905f6),Annotation([Ljava.lang.String;@23a918c7,[Ljava.lang.String;@7a45d714,[Ledu.cmu.lti.nlp.amr.Dependency;@4483d35),Annotation([Ljava.lang.String;@204abeff,[Ljava.lang.String;@4b4ee511,[Ljava.lang.String;@1f67761b),Annotation([Ljava.lang.String;@5a034157,[Ljava.lang.String;@2f4ba1ae,[Ledu.cmu.lti.nlp.amr.Entity;@1391af3b))
AMR:
(世 / 世界, mod, 是 / 是-04)
(唯 / 唯一, quant, 是 / 是-04)
(对 / 对-02, beneficiary, 我 / 我)
(对 / 对-02, snt11, 你 / 你)
(是 / 是-04, manner, 也 / 也)
(来 / 来说-01, mode, 是 / 是-04)
(来 / 来说-01, scale, 对 / 对-02)

Decoded in 26,110 microseconds
Sentence: “ 我 有点 明白 了 。 ” 小 王子 说 ，

Spans:
Span 7-8:  小 => 小
Span 1-2:  我 => 我
Span 3-4:  明白 => 明白-01
Span 2-3:  有点 => 有点-01
Span 8-9:  王子 => 王子
Span 9-10:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  小 => 小-01
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 2-3:  有点 => 有点
Oracle Span 8-9:  王子 => 王子
Oracle Span 9-10:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 有点 => 有点-01
Extra span: 我 => 我
Missing span: 说 => 说-01
Missing span: 有点 => 有点
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	有点	_	AD	AD	_	4	advmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	了	_	VV	VV	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 明白-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 明白-01, degree, x6 / 有点)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(3,4,List(3),明白,明白-01,false), Span(2,3,List(4),有点,有点-01,false), Span(1,2,List(5),我,我,false)),Map(2 -> 小, 5 -> 我, 1 -> 王子, 4 -> 有点-01, 0 -> 说-02, 3 -> 明白-01),Map(我 -> 我, 王 -> 王子, 小 -> 小, 说 -> 说-02, 明 -> 明白-01, 有 -> 有点-01))),[Ljava.lang.String;@3762c4fc,Annotation([Ljava.lang.String;@77ab22be,[Ljava.lang.String;@59fbb34,[Ljava.lang.String;@1b6924cb),Annotation([Ljava.lang.String;@3a8d467e,[Ljava.lang.String;@141d3d43,[Ledu.cmu.lti.nlp.amr.Dependency;@6ca372ef),Annotation([Ljava.lang.String;@3ebe4ccc,[Ljava.lang.String;@6ed043d3,[Ljava.lang.String;@135a8c6f),Annotation([Ljava.lang.String;@6419a0e1,[Ljava.lang.String;@280d4882,[Ledu.cmu.lti.nlp.amr.Entity;@44af588b))
AMR:
(明 / 明白-01, degree, 有 / 有点-01)
(有 / 有点-01, beneficiary, 我 / 我)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 明 / 明白-01)

Decoded in 19,068 microseconds
Sentence: “ 有 一 朵 花 … ，

Spans:
Span 1-2:  有 => 有-06
Span 4-5:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  有 => 有-01
Oracle Span 4-5:  花 => 花

Incorrect span: 花 => 花-01
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 花 => 花
Dependencies:
1	“	_	NR	NR	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	朵	_	M	M	_	5	clf	_	_
5	花	_	NN	NN	_	2	dobj	_	_
6	…	_	PU	PU	_	7	punct	_	_
7	,	_	NN	NN	_	5	prnmod	_	_

Oracle:
(x6 / 有-01, arg1, x7 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),花,花-01,false), Span(1,2,List(1),有,有-06,false)),Map(1 -> 有-06, 0 -> 花-01),Map(花 -> 花-01, 有 -> 有-06))),[Ljava.lang.String;@3d19d85,Annotation([Ljava.lang.String;@2ae62bb6,[Ljava.lang.String;@68ed3f30,[Ljava.lang.String;@56b859a6),Annotation([Ljava.lang.String;@590adb41,[Ljava.lang.String;@42aae04d,[Ledu.cmu.lti.nlp.amr.Dependency;@43bf5397),Annotation([Ljava.lang.String;@575e572f,[Ljava.lang.String;@58015e56,[Ljava.lang.String;@4d3c6593),Annotation([Ljava.lang.String;@7426a448,[Ljava.lang.String;@516462cc,[Ledu.cmu.lti.nlp.amr.Entity;@3456558))
AMR:
(有 / 有-06, prep-following, 花 / 花-01)

Decoded in 4,438 microseconds
Sentence: 我 想 ， 她 把 我 驯服 了 … ”

Spans:
Span 3-4:  她 => 她
Span 1-2:  想 => 想-05
Span 5-6:  我 => 我
Span 0-1:  我 => 我
Span 6-7:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  她 => 她
Oracle Span 1-2:  想 => 想-01
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Extra span: 我 => 我
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 驯服 => 驯服-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	她	_	PN	PN	_	7	nsubj	_	_
5	把	_	BA	BA	_	7	ba	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	驯服	_	VV	VV	_	2	ccomp	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	…	_	NN	NN	_	7	dobj	_	_
10	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 驯服-01, arg0, x11 / 她)
(x8 / 想-01, arg0, x9 / 我)
(x8 / 想-01, arg1, x10 / 驯服-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),驯服,驯服,false), Span(5,6,List(1),我,我,false), Span(3,4,List(2),她,她,false), Span(1,2,List(3),想,想-05,false), Span(0,1,List(4),我,我,false)),Map(2 -> 她, 1 -> 我, 4 -> 我, 0 -> 驯服, 3 -> 想-05),Map(驯 -> 驯服, 我 -> 我, 我2 -> 我, 想 -> 想-05, 她 -> 她))),[Ljava.lang.String;@2dfb885e,Annotation([Ljava.lang.String;@6cbe7d4d,[Ljava.lang.String;@1e3e1014,[Ljava.lang.String;@3679d92e),Annotation([Ljava.lang.String;@47b11ec7,[Ljava.lang.String;@58fa5769,[Ledu.cmu.lti.nlp.amr.Dependency;@36aa52d2),Annotation([Ljava.lang.String;@4ee25d80,[Ljava.lang.String;@16a35bd,[Ljava.lang.String;@ba17be6),Annotation([Ljava.lang.String;@6f798482,[Ljava.lang.String;@332bcab0,[Ledu.cmu.lti.nlp.amr.Entity;@633cc6b5))
AMR:
(想 / 想-05, manner, 我2 / 我)
(想 / 想-05, prep-along-with, 她 / 她)
(驯 / 驯服, domain, 她 / 她)
(驯 / 驯服, poss, 我 / 我)

Decoded in 10,479 microseconds
Sentence: “ 这 是 可能 的 。 ” 狐狸 说 ，

Spans:
Span 3-4:  可能 => 可能-02
Span 2-3:  是 => 是-04
Span 7-8:  狐狸 => 狐狸
Span 8-9:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  可能 => 可能-01
Oracle Span 7-8:  狐狸 => 狐狸
Oracle Span 8-9:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 可能 => 可能-02
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 可能 => 可能-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	可能	_	VV	VV	_	3	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_
8	狐狸	_	NN	NN	_	9	dep	_	_
9	说	_	VV	VV	_	3	dep	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 可能-01)
(x3 / 可能-01, domain, x4 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),狐狸,狐狸,false), Span(3,4,List(2),可能,可能-02,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),这,这,false)),Map(2 -> 可能-02, 1 -> 狐狸, 4 -> 这, 0 -> 说-02, 3 -> 是-04),Map(这 -> 这, 说 -> 说-02, 狐 -> 狐狸, 是 -> 是-04, 可 -> 可能-02))),[Ljava.lang.String;@6342ff7f,Annotation([Ljava.lang.String;@403c3a01,[Ljava.lang.String;@2daf06fc,[Ljava.lang.String;@28237492),Annotation([Ljava.lang.String;@5ceecfee,[Ljava.lang.String;@7da31a40,[Ledu.cmu.lti.nlp.amr.Dependency;@28ee7bee),Annotation([Ljava.lang.String;@1b5a1d85,[Ljava.lang.String;@31e130bf,[Ljava.lang.String;@54755dd9),Annotation([Ljava.lang.String;@f1f7db2,[Ljava.lang.String;@4462efe1,[Ledu.cmu.lti.nlp.amr.Entity;@7c3e4b1a))
AMR:
(可 / 可能-02, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, purpose, 是 / 是-04)

Decoded in 12,708 microseconds
Sentence: “ 世界 上 什么样 的 事 都 可能 看到 … ”

Spans:
Span 1-2:  世界 => 世界
Span 5-6:  事 => 事
Span 3-4:  什么样 => 什么样
Span 7-8:  可能 => 可能-02
Span 8-9:  看到 => (thing :arg1-of 看到-01)
Span 6-7:  都 => 都

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ， 这 不 是 在 地球 上 的 事 。 ” 小 王子 说 。

Spans:
Span 4-5:  不 => 不
Span 10-11:  事 => 事
Span 1-2:  啊 => 啊
Span 6-7:  在 => 在-01
Span 7-8:  地球 => 地球
Span 13-14:  小 => 小
Span 5-6:  是 => 是-04
Span 14-15:  王子 => 王子
Span 15-16:  说 => 说-02
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  事 => 事
Oracle Span 1-2:  啊 => 啊
Oracle Span 7-8:  地球 => 地球
Oracle Span 13-14:  小 => 小-01
Oracle Span 14-15:  王子 => 王子
Oracle Span 15-16:  说 => 说-01
Oracle Span 3-4:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 不 => 不
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	VV	VV	_	16	dep	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	是	_	VC	VC	_	2	ccomp	_	_
7	在	_	P	P	_	11	assmod	_	_
8	地球	_	NN	NN	_	9	lobj	_	_
9	上	_	LC	LC	_	7	plmod	_	_
10	的	_	DEG	DEG	_	7	assm	_	_
11	事	_	NN	NN	_	6	attr	_	_
12	。	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	16	nsubj	_	_
16	说	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)
(x8 / 事, domain, x9 / 这)
(x8 / 事, location, x10 / 地球)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说,说-02,false), Span(14,15,List(1),王子,王子,false), Span(13,14,List(2),小,小,false), Span(10,11,List(3),事,事,false), Span(7,8,List(4),地球,地球,false), Span(6,7,List(5),在,在-01,false), Span(5,6,List(6),是,是-04,false), Span(4,5,List(7),不,不,false), Span(3,4,List(8),这,这,false), Span(1,2,List(9),啊,啊,false)),Map(2 -> 小, 5 -> 在-01, 8 -> 这, 7 -> 不, 1 -> 王子, 4 -> 地球, 6 -> 是-04, 9 -> 啊, 0 -> 说-02, 3 -> 事),Map(啊 -> 啊, 在 -> 在-01, 这 -> 这, 王 -> 王子, 地 -> 地球, 小 -> 小, 不 -> 不, 事 -> 事, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@765d55d5,Annotation([Ljava.lang.String;@2513a118,[Ljava.lang.String;@2bfb583b,[Ljava.lang.String;@73ae0257),Annotation([Ljava.lang.String;@6fc1020a,[Ljava.lang.String;@5762658b,[Ledu.cmu.lti.nlp.amr.Dependency;@2629d5dc),Annotation([Ljava.lang.String;@2596d7f4,[Ljava.lang.String;@42a0501e,[Ljava.lang.String;@6aa3bfc),Annotation([Ljava.lang.String;@6e4599c0,[Ljava.lang.String;@7dffda8b,[Ledu.cmu.lti.nlp.amr.Entity;@3d1f558a))
AMR:
(不 / 不, mod, 这 / 这)
(事 / 事, topic, 在 / 在-01)
(啊 / 啊, location, 不 / 不)
(在 / 在-01, degree, 是 / 是-04)
(在 / 在-01, location, 地 / 地球)
(是 / 是-04, manner, 不 / 不)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 事 / 事)
(说 / 说-02, degree, 小 / 小)

Decoded in 42,382 microseconds
Sentence: 狐狸 感到 十分 蹊跷 。

Spans:
Span 2-3:  十分 => 十分
Span 1-2:  感到 => 感到-01
Span 0-1:  狐狸 => 狐狸
Span 3-4:  蹊跷 => 蹊跷

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  十分 => 十分
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 0-1:  狐狸 => 狐狸
Oracle Span 3-4:  蹊跷 => 蹊跷

Dependencies:
1	狐狸	_	NN	NN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	十分	_	AD	AD	_	4	advmod	_	_
4	蹊跷	_	VA	VA	_	2	ccomp	_	_
5	。	_	PU	PU	_	2	punct	_	_
6	狐狸	_	NN	NN	_	4	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 狐狸)
(x0 / 感到-01, arg1, x3 / 蹊跷)
(x3 / 蹊跷, degree, x4 / 十分)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),蹊跷,蹊跷,false), Span(2,3,List(1),十分,十分,false), Span(1,2,List(2),感到,感到-01,false), Span(0,1,List(3),狐狸,狐狸,false)),Map(2 -> 感到-01, 1 -> 十分, 0 -> 蹊跷, 3 -> 狐狸),Map(感 -> 感到-01, 十 -> 十分, 狐 -> 狐狸, 蹊 -> 蹊跷))),[Ljava.lang.String;@6abdec0e,Annotation([Ljava.lang.String;@28f4f300,[Ljava.lang.String;@2b5c4f17,[Ljava.lang.String;@6ca8fcf3),Annotation([Ljava.lang.String;@69f0b0f4,[Ljava.lang.String;@66933239,[Ledu.cmu.lti.nlp.amr.Dependency;@2f7efd0b),Annotation([Ljava.lang.String;@41ad373,[Ljava.lang.String;@6801b414,[Ljava.lang.String;@177c41d7),Annotation([Ljava.lang.String;@4f327096,[Ljava.lang.String;@1d61a348,[Ledu.cmu.lti.nlp.amr.Entity;@78a515e4))
AMR:
(感 / 感到-01, domain, 狐 / 狐狸)
(感 / 感到-01, extent, 蹊 / 蹊跷)
(蹊 / 蹊跷, degree, 十 / 十分)

Decoded in 6,109 microseconds
Sentence: “ 在 另 一 个 星球 上 ？ ”

Spans:
Span 2-3:  另 => 另
Span 1-2:  在 => 在-01
Span 5-6:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  另 => 另
Oracle Span 5-6:  星球 => 星球

Extra span: 在 => 在-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	在	_	P	P	_	0	root	_	_
3	另	_	DT	DT	_	6	det	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	3	dep	_	_
6	星球	_	NN	NN	_	7	lobj	_	_
7	上	_	LC	LC	_	2	plmod	_	_
8	？	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 星球, mod, x12 / 另)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),星球,星球,false), Span(2,3,List(1),另,另,false), Span(1,2,List(2),在,在-01,false)),Map(2 -> 在-01, 1 -> 另, 0 -> 星球),Map(在 -> 在-01, 另 -> 另, 星 -> 星球))),[Ljava.lang.String;@d2291de,Annotation([Ljava.lang.String;@51c8f62c,[Ljava.lang.String;@41a374be,[Ljava.lang.String;@11f9535b),Annotation([Ljava.lang.String;@8cc8cdb,[Ljava.lang.String;@1e236278,[Ledu.cmu.lti.nlp.amr.Dependency;@44fff386),Annotation([Ljava.lang.String;@1fc713c9,[Ljava.lang.String;@7301eebe,[Ljava.lang.String;@76b47204),Annotation([Ljava.lang.String;@4d6ccc97,[Ljava.lang.String;@6a12c7a8,[Ledu.cmu.lti.nlp.amr.Entity;@161aa04a))
AMR:
(在 / 在-01, mod, 另 / 另)
(星 / 星球, mod, 另 / 另)

Decoded in 6,356 microseconds
Sentence: “ 是 的 。 ”

Spans:
Span 1-2:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  是 => 是-03

Incorrect span: 是 => 是-04
Missing span: 是 => 是-03
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	是	_	VC	VC	_	0	root	_	_
3	的	_	SP	SP	_	2	dep	_	_
4	。	_	PU	PU	_	2	punct	_	_
5	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),是,是-04,false)),Map(0 -> 是-04),Map(是 -> 是-04))),[Ljava.lang.String;@436bd4df,Annotation([Ljava.lang.String;@6848a051,[Ljava.lang.String;@149b0577,[Ljava.lang.String;@5740ff5e),Annotation([Ljava.lang.String;@4a901445,[Ljava.lang.String;@67f77f6e,[Ledu.cmu.lti.nlp.amr.Dependency;@2b0b7e5a),Annotation([Ljava.lang.String;@7be1ce6a,[Ljava.lang.String;@3119cf6f,[Ljava.lang.String;@6dc9da2d),Annotation([Ljava.lang.String;@1d408060,[Ljava.lang.String;@68a78f3c,[Ledu.cmu.lti.nlp.amr.Entity;@17ba57f0))
AMR:


Decoded in 2,302 microseconds
Sentence: “ 在 那 个 星球 上 ， 有 猎人 吗 ？ ”

Spans:
Span 1-2:  在 => 在-01
Span 4-5:  星球 => 星球
Span 7-8:  有 => 有-06
Span 8-9:  猎人 => 猎人
Span 2-3:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  星球 => 星球
Oracle Span 7-8:  有 => 有-03
Oracle Span 8-9:  猎人 => 猎人

Incorrect span: 有 => 有-06
Extra span: 那 => 那
Extra span: 在 => 在-01
Missing span: 有 => 有-03
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	在	_	P	P	_	8	prep	_	_
3	那	_	DT	DT	_	5	det	_	_
4	个	_	M	M	_	3	clf	_	_
5	星球	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	2	plmod	_	_
7	,	_	PU	PU	_	8	punct	_	_
8	有	_	VE	VE	_	9	dep	_	_
9	猎人	_	VV	VV	_	0	root	_	_
10	吗	_	SP	SP	_	9	dep	_	_
11	？	_	PU	PU	_	9	punct	_	_
12	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x9 / 有-03, arg0, x10 / 星球)
(x9 / 有-03, arg1, x12 / 猎人)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),猎人,猎人,false), Span(7,8,List(1),有,有-06,false), Span(4,5,List(2),星球,星球,false), Span(2,3,List(3),那,那,false), Span(1,2,List(4),在,在-01,false)),Map(2 -> 星球, 1 -> 有-06, 4 -> 在-01, 0 -> 猎人, 3 -> 那),Map(在 -> 在-01, 星 -> 星球, 那 -> 那, 有 -> 有-06, 猎 -> 猎人))),[Ljava.lang.String;@3481ff98,Annotation([Ljava.lang.String;@2ddb3ae8,[Ljava.lang.String;@79518e00,[Ljava.lang.String;@3c91530d),Annotation([Ljava.lang.String;@7d70638,[Ljava.lang.String;@732f6050,[Ledu.cmu.lti.nlp.amr.Dependency;@6fbc1bb),Annotation([Ljava.lang.String;@30c4e352,[Ljava.lang.String;@f1dd5b4,[Ljava.lang.String;@73809e7),Annotation([Ljava.lang.String;@5f96f6a2,[Ljava.lang.String;@48df4071,[Ledu.cmu.lti.nlp.amr.Entity;@290e8cab))
AMR:
(在 / 在-01, mod, 那 / 那)
(星 / 星球, mod, 那 / 那)
(有 / 有-06, location, 星 / 星球)
(猎 / 猎人, mod, 有 / 有-06)

Decoded in 12,676 microseconds
Sentence: “ 没有 。 ”

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@6e3ecf5c,Annotation([Ljava.lang.String;@67507df,[Ljava.lang.String;@341b13a8,[Ljava.lang.String;@692dba54),Annotation([Ljava.lang.String;@71f1cc02,[Ljava.lang.String;@5f14761c,[Ledu.cmu.lti.nlp.amr.Dependency;@33feb805),Annotation([Ljava.lang.String;@37854b34,[Ljava.lang.String;@48eb001a,[Ljava.lang.String;@34332b8d),Annotation([Ljava.lang.String;@724b939e,[Ljava.lang.String;@6f8aba08,[Ledu.cmu.lti.nlp.amr.Entity;@7ff19c33))
AMR:


Decoded in 1,358 microseconds
Sentence: “ 这 很 有 意思 。

Spans:
Span 2-3:  很 => 很
Span 4-5:  意思 => 意思-01
Span 3-4:  有 => 有-06
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  很 => 很
Oracle Span 4-5:  意思 => 意思
Oracle Span 3-4:  有 => 有-05
Oracle Span 1-2:  这 => 这

Incorrect span: 意思 => 意思-01
Incorrect span: 有 => 有-06
Missing span: 有 => 有-05
Missing span: 意思 => 意思
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	意思	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 有-05, arg0, x8 / 这)
(x7 / 有-05, arg1, x10 / 意思)
(x7 / 有-05, degree, x9 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),意思,意思-01,false), Span(3,4,List(1),有,有-06,false), Span(2,3,List(2),很,很,false), Span(1,2,List(3),这,这,false)),Map(2 -> 很, 1 -> 有-06, 0 -> 意思-01, 3 -> 这),Map(这 -> 这, 很 -> 很, 意 -> 意思-01, 有 -> 有-06))),[Ljava.lang.String;@52b3bf03,Annotation([Ljava.lang.String;@7cca01a8,[Ljava.lang.String;@462abec3,[Ljava.lang.String;@35c9a231),Annotation([Ljava.lang.String;@7a4d582c,[Ljava.lang.String;@5626d18c,[Ledu.cmu.lti.nlp.amr.Dependency;@45e9b12d),Annotation([Ljava.lang.String;@3dc95b8b,[Ljava.lang.String;@2d55e826,[Ljava.lang.String;@4d1ff6b1),Annotation([Ljava.lang.String;@45f756e6,[Ljava.lang.String;@329548d0,[Ledu.cmu.lti.nlp.amr.Entity;@3003827c))
AMR:
(意 / 意思-01, degree, 有 / 有-06)
(有 / 有-06, degree, 很 / 很)
(有 / 有-06, mod, 这 / 这)

Decoded in 6,381 microseconds
Sentence: 那么 ， 有 鸡 吗 ？ ”

Spans:
Span 2-3:  有 => 有-06
Span 0-1:  那么 => 那么
Span 3-4:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  有 => 有-03
Oracle Span 3-4:  鸡 => 鸡

Incorrect span: 有 => 有-06
Extra span: 那么 => 那么
Missing span: 有 => 有-03
Dependencies:
1	那么	_	AD	AD	_	3	advmod	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	有	_	VE	VE	_	0	root	_	_
4	鸡	_	NN	NN	_	3	dep	_	_
5	吗	_	SP	SP	_	3	dep	_	_
6	？	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 有-03, arg1, x14 / 鸡)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),鸡,鸡,false), Span(2,3,List(1),有,有-06,false), Span(0,1,List(2),那么,那么,false)),Map(2 -> 那么, 1 -> 有-06, 0 -> 鸡),Map(那 -> 那么, 鸡 -> 鸡, 有 -> 有-06))),[Ljava.lang.String;@29b40b3,Annotation([Ljava.lang.String;@7d247660,[Ljava.lang.String;@656f62dc,[Ljava.lang.String;@49d30c6f),Annotation([Ljava.lang.String;@1115433e,[Ljava.lang.String;@4fdca00a,[Ledu.cmu.lti.nlp.amr.Dependency;@513b52af),Annotation([Ljava.lang.String;@5a8c93,[Ljava.lang.String;@3bed3315,[Ljava.lang.String;@119b0892),Annotation([Ljava.lang.String;@1a3e8e24,[Ljava.lang.String;@4ed4a7e4,[Ledu.cmu.lti.nlp.amr.Entity;@1c7350b0))
AMR:
(有 / 有-06, degree, 那 / 那么)
(鸡 / 鸡, purpose, 有 / 有-06)

Decoded in 5,115 microseconds
Sentence: “ 没有 。 ”

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@55651434,Annotation([Ljava.lang.String;@3bc4ef12,[Ljava.lang.String;@50448409,[Ljava.lang.String;@5634a861),Annotation([Ljava.lang.String;@2b0dc227,[Ljava.lang.String;@37ad042b,[Ledu.cmu.lti.nlp.amr.Dependency;@43bdaa1b),Annotation([Ljava.lang.String;@30b975ad,[Ljava.lang.String;@75e09567,[Ljava.lang.String;@2a334bac),Annotation([Ljava.lang.String;@470d183,[Ljava.lang.String;@7f9fc8bd,[Ledu.cmu.lti.nlp.amr.Entity;@ea52184))
AMR:


Decoded in 2,093 microseconds
Sentence: “ 没有 十全十美 的 。 ” 狐狸 叹息 地 说道 。

Spans:
Span 2-3:  十全十美 => 十全十美-01
Span 7-8:  叹息 => 叹息-01
Span 8-9:  地 => 地
Span 6-7:  狐狸 => 狐狸
Span 9-10:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  十全十美 => 十全十美-01
Oracle Span 7-8:  叹息 => 叹息-01
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 9-10:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 地 => 地
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	没有	_	VE	VE	_	5	rcmod	_	_
3	十全十美	_	CD	CD	_	2	dep	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	10	nsubj	_	_
8	叹息	_	VA	VA	_	10	dvpmod	_	_
9	地	_	DEV	DEV	_	8	dvpm	_	_
10	说道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 说道-01, manner, x15 / 叹息-01)
(x15 / 叹息-01, arg0, x17 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说道,说道,false), Span(8,9,List(1),地,地,false), Span(7,8,List(2),叹息,叹息-01,false), Span(6,7,List(3),狐狸,狐狸,false), Span(2,3,List(4),十全十美,十全十美-01,false)),Map(2 -> 叹息-01, 1 -> 地, 4 -> 十全十美-01, 0 -> 说道, 3 -> 狐狸),Map(十 -> 十全十美-01, 地 -> 地, 说 -> 说道, 狐 -> 狐狸, 叹 -> 叹息-01))),[Ljava.lang.String;@3e7b65d7,Annotation([Ljava.lang.String;@3c854752,[Ljava.lang.String;@3ddeaa5f,[Ljava.lang.String;@1a500561),Annotation([Ljava.lang.String;@7f608e21,[Ljava.lang.String;@6949e948,[Ledu.cmu.lti.nlp.amr.Dependency;@210d2a6c),Annotation([Ljava.lang.String;@3bec5821,[Ljava.lang.String;@4086d8fb,[Ljava.lang.String;@66236a0a),Annotation([Ljava.lang.String;@2e3572e8,[Ljava.lang.String;@77c10a5f,[Ledu.cmu.lti.nlp.amr.Entity;@176555c))
AMR:
(十 / 十全十美-01, purpose, 叹 / 叹息-01)
(地 / 地, mod, 叹 / 叹息-01)
(地 / 地, mod, 说 / 说道)
(狐 / 狐狸, purpose, 叹 / 叹息-01)

Decoded in 15,826 microseconds
Sentence: 可是 ， 狐狸 又 把 话题 拉 回来 ：

Spans:
Span 3-4:  又 => 又
Span 7-8:  回来 => 回来-02
Span 6-7:  拉 => 拉-01
Span 2-3:  狐狸 => 狐狸
Span 5-6:  话题 => 话题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 7-8:  回来 => 回来-02
Oracle Span 6-7:  拉 => 拉-01
Oracle Span 2-3:  狐狸 => 狐狸
Oracle Span 5-6:  话题 => 话题

Dependencies:
1	可是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	狐狸	_	NN	NN	_	8	nsubj	_	_
4	又	_	AD	AD	_	8	advmod	_	_
5	把	_	BA	BA	_	8	ba	_	_
6	话题	_	NN	NN	_	8	nsubj	_	_
7	拉	_	AD	AD	_	8	advmod	_	_
8	回来	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 拉-01, arg0, x3 / 狐狸)
(x2 / 拉-01, arg1, x4 / 话题)
(x2 / 拉-01, arg2, x7 / 回来-02)
(x2 / 拉-01, manner, x8 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),回来,回来-02,false), Span(6,7,List(1),拉,拉-01,false), Span(5,6,List(2),话题,话题,false), Span(3,4,List(3),又,又,false), Span(2,3,List(4),狐狸,狐狸,false)),Map(2 -> 话题, 1 -> 拉-01, 4 -> 狐狸, 0 -> 回来-02, 3 -> 又),Map(又 -> 又, 话 -> 话题, 拉 -> 拉-01, 狐 -> 狐狸, 回 -> 回来-02))),[Ljava.lang.String;@7c781c42,Annotation([Ljava.lang.String;@795f8317,[Ljava.lang.String;@633fd91,[Ljava.lang.String;@355c94be),Annotation([Ljava.lang.String;@97a145b,[Ljava.lang.String;@c386958,[Ledu.cmu.lti.nlp.amr.Dependency;@157ec23b),Annotation([Ljava.lang.String;@44d64d4e,[Ljava.lang.String;@1dd74143,[Ljava.lang.String;@526a9908),Annotation([Ljava.lang.String;@3166f664,[Ljava.lang.String;@47ac613b,[Ledu.cmu.lti.nlp.amr.Entity;@60d6fdd4))
AMR:
(拉 / 拉-01, ARG5, 回 / 回来-02)
(拉 / 拉-01, manner, 又 / 又)
(拉 / 拉-01, manner, 话 / 话题)
(狐 / 狐狸, manner, 又 / 又)

Decoded in 11,293 microseconds
Sentence: “ 我 的 生活 很 单调 。

Spans:
Span 5-6:  单调 => 单调-01
Span 4-5:  很 => 很
Span 1-2:  我 => 我
Span 3-4:  生活 => 生活-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  单调 => 单调-01
Oracle Span 4-5:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  生活 => 生活

Incorrect span: 生活 => 生活-01
Missing span: 生活 => 生活
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	生活	_	NN	NN	_	6	nsubj	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	单调	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x7 / 单调-01, arg0, x9 / 生活)
(x7 / 单调-01, degree, x8 / 很)
(x9 / 生活, poss, x10 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),单调,单调-01,false), Span(4,5,List(1),很,很,false), Span(3,4,List(2),生活,生活-01,false), Span(1,2,List(3),我,我,false)),Map(2 -> 生活-01, 1 -> 很, 0 -> 单调-01, 3 -> 我),Map(生 -> 生活-01, 我 -> 我, 很 -> 很, 单 -> 单调-01))),[Ljava.lang.String;@66f28a1f,Annotation([Ljava.lang.String;@60a19573,[Ljava.lang.String;@44a085e5,[Ljava.lang.String;@134ff8f8),Annotation([Ljava.lang.String;@619f2afc,[Ljava.lang.String;@df921b1,[Ledu.cmu.lti.nlp.amr.Dependency;@4db60246),Annotation([Ljava.lang.String;@2152ab30,[Ljava.lang.String;@3902bd2c,[Ljava.lang.String;@7d32e714),Annotation([Ljava.lang.String;@eb6ec6,[Ljava.lang.String;@34d45ec0,[Ledu.cmu.lti.nlp.amr.Entity;@18137eab))
AMR:
(单 / 单调-01, degree, 很 / 很)
(单 / 单调-01, time, 生 / 生活-01)
(生 / 生活-01, poss, 我 / 我)

Decoded in 6,160 microseconds
Sentence: 我 捕捉 鸡 ， 而 人 又 捕捉 我 。

Spans:
Span 5-6:  人 => 人
Span 6-7:  又 => 又
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 7-8:  捕捉 => 捕捉-01
Span 1-2:  捕捉 => 捕捉-01
Span 2-3:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  又 => 又
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  捕捉 => 捕捉-01
Oracle Span 7-8:  捕捉 => 捕捉-01
Oracle Span 2-3:  鸡 => 鸡

Extra span: 我 => 我
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	捕捉	_	VV	VV	_	0	root	_	_
3	鸡	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	而	_	AD	AD	_	8	advmod	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	捕捉	_	VV	VV	_	2	conj	_	_
9	我	_	PN	PN	_	8	dobj	_	_
10	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 捕捉-01, arg0, x3 / 我)
(x2 / 捕捉-01, arg1, x4 / 鸡)
(x5 / 捕捉-01, arg0, x6 / 人)
(x5 / 捕捉-01, manner, x8 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),我,我,false), Span(7,8,List(1),捕捉,捕捉-01,false), Span(6,7,List(2),又,又,false), Span(5,6,List(3),人,人,false), Span(2,3,List(4),鸡,鸡,false), Span(1,2,List(5),捕捉,捕捉-01,false), Span(0,1,List(6),我,我,false)),Map(2 -> 又, 5 -> 捕捉-01, 1 -> 捕捉-01, 4 -> 鸡, 6 -> 我, 0 -> 我, 3 -> 人),Map(又 -> 又, 我 -> 我, 我2 -> 我, 鸡 -> 鸡, 捕2 -> 捕捉-01, 人 -> 人, 捕 -> 捕捉-01))),[Ljava.lang.String;@727320fa,Annotation([Ljava.lang.String;@2935fd2c,[Ljava.lang.String;@3f018494,[Ljava.lang.String;@3ce443f9),Annotation([Ljava.lang.String;@57fbc06f,[Ljava.lang.String;@51a18b21,[Ledu.cmu.lti.nlp.amr.Dependency;@62b790a5),Annotation([Ljava.lang.String;@7c52fc81,[Ljava.lang.String;@7523a3dc,[Ljava.lang.String;@2806d6da),Annotation([Ljava.lang.String;@766a49c7,[Ljava.lang.String;@1db7157f,[Ledu.cmu.lti.nlp.amr.Entity;@75e27856))
AMR:
(人 / 人, domain, 我 / 我)
(我 / 我, prep-on-behalf, 捕2 / 捕捉-01)
(捕 / 捕捉-01, manner, 又 / 又)
(捕 / 捕捉-01, value, 我 / 我)
(捕2 / 捕捉-01, quant, 鸡 / 鸡)
(捕2 / 捕捉-01, value, 我2 / 我)

Decoded in 17,404 microseconds
Sentence: 所有 的 鸡 全 都 一样 ， 所有 的 人 也 全 都 一样 。

Spans:
Span 13-14:  一样 => 一样
Span 5-6:  一样 => 一样
Span 10-11:  也 => 也
Span 9-10:  人 => 人
Span 11-12:  全 => 全
Span 3-4:  全 => 全
Span 7-8:  所有 => 所有
Span 0-1:  所有 => 所有
Span 12-13:  都 => 都
Span 4-5:  都 => 都
Span 2-3:  鸡 => 鸡

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一样 => 一样-01
Oracle Span 13-14:  一样 => 一样-01
Oracle Span 9-10:  人 => 人
Oracle Span 3-4:  全 => 全-01
Oracle Span 11-12:  全 => 全
Oracle Span 0-1:  所有 => 所有
Oracle Span 7-8:  所有 => 所有
Oracle Span 4-5:  都 => 都
Oracle Span 12-13:  都 => 都
Oracle Span 2-3:  鸡 => 鸡

Incorrect span: 一样 => 一样
Extra span: 也 => 也
Incorrect span: 一样 => 一样
Incorrect span: 全 => 全
Missing span: 一样 => 一样-01
Missing span: 全 => 全-01
Missing span: 一样 => 一样-01
Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	鸡	_	NN	NN	_	6	nsubj	_	_
4	全	_	AD	AD	_	6	advmod	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	一样	_	VA	VA	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	所有	_	DT	DT	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	人	_	NN	NN	_	14	nsubj	_	_
11	也	_	AD	AD	_	14	advmod	_	_
12	全	_	AD	AD	_	14	advmod	_	_
13	都	_	AD	AD	_	14	advmod	_	_
14	一样	_	VA	VA	_	6	conj	_	_
15	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 一样-01, arg0, x3 / 鸡)
(x2 / 一样-01, manner, x5 / 都)
(x2 / 一样-01, manner, x6 / 全-01)
(x3 / 鸡, mod, x4 / 所有)
(x7 / 一样-01, arg0, x8 / 人)
(x7 / 一样-01, manner, x10 / 都)
(x7 / 一样-01, manner, x11 / 全)
(x8 / 人, mod, x9 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),一样,一样,false), Span(12,13,List(1),都,都,false), Span(11,12,List(2),全,全,false), Span(10,11,List(3),也,也,false), Span(9,10,List(4),人,人,false), Span(7,8,List(5),所有,所有,false), Span(5,6,List(6),一样,一样,false), Span(4,5,List(7),都,都,false), Span(3,4,List(8),全,全,false), Span(2,3,List(9),鸡,鸡,false), Span(0,1,List(10),所有,所有,false)),Map(2 -> 全, 5 -> 所有, 8 -> 全, 7 -> 都, 1 -> 都, 4 -> 人, 6 -> 一样, 9 -> 鸡, 0 -> 一样, 10 -> 所有, 3 -> 也),Map(所2 -> 所有, 也 -> 也, 全 -> 全, 全2 -> 全, 一2 -> 一样, 所 -> 所有, 鸡 -> 鸡, 都 -> 都, 都2 -> 都, 人 -> 人, 一 -> 一样))),[Ljava.lang.String;@6bccd036,Annotation([Ljava.lang.String;@4f4c88f9,[Ljava.lang.String;@6a756082,[Ljava.lang.String;@cb39552),Annotation([Ljava.lang.String;@1f3b992,[Ljava.lang.String;@2a53f215,[Ledu.cmu.lti.nlp.amr.Dependency;@6b63e6ad),Annotation([Ljava.lang.String;@7beae796,[Ljava.lang.String;@6749fe50,[Ljava.lang.String;@52bf7bf6),Annotation([Ljava.lang.String;@261db982,[Ljava.lang.String;@ae73c80,[Ledu.cmu.lti.nlp.amr.Entity;@22f4f8f2))
AMR:
(一 / 一样, manner, 也 / 也)
(一 / 一样, manner, 全 / 全)
(一 / 一样, manner, 都 / 都)
(一 / 一样, snt3, 人 / 人)
(一2 / 一样, manner, 全2 / 全)
(一2 / 一样, manner, 都2 / 都)
(一2 / 一样, prep-on-behalf, 鸡 / 鸡)
(也 / 也, domain, 一2 / 一样)
(人 / 人, mod, 所 / 所有)
(鸡 / 鸡, mod, 所2 / 所有)

Decoded in 37,879 microseconds
Sentence: 因此 ， 我 感到 有些 厌烦 了 。

Spans:
Span 5-6:  厌烦 => 厌烦-01
Span 3-4:  感到 => 感到-01
Span 2-3:  我 => 我
Span 4-5:  有些 => 有些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  厌烦 => 厌烦-01
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  有些 => 有些

Dependencies:
1	因此	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	有些	_	AD	AD	_	6	advmod	_	_
6	厌烦	_	VV	VV	_	4	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	4	punct	_	_
9	我	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x2 / 感到-01, arg0, x3 / 我)
(x2 / 感到-01, arg1, x4 / 厌烦-01)
(x4 / 厌烦-01, degree, x5 / 有些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),厌烦,厌烦-01,false), Span(4,5,List(1),有些,有些,false), Span(3,4,List(2),感到,感到-01,false), Span(2,3,List(3),我,我,false)),Map(2 -> 感到-01, 1 -> 有些, 0 -> 厌烦-01, 3 -> 我),Map(厌 -> 厌烦-01, 我 -> 我, 感 -> 感到-01, 有 -> 有些))),[Ljava.lang.String;@bbd4791,Annotation([Ljava.lang.String;@40a72ecd,[Ljava.lang.String;@73971965,[Ljava.lang.String;@76a14c8d),Annotation([Ljava.lang.String;@17410c07,[Ljava.lang.String;@6ee99964,[Ledu.cmu.lti.nlp.amr.Dependency;@257ef9ed),Annotation([Ljava.lang.String;@59c70ceb,[Ljava.lang.String;@46f902e0,[Ljava.lang.String;@64f981e2),Annotation([Ljava.lang.String;@361abd01,[Ljava.lang.String;@575b5f7d,[Ledu.cmu.lti.nlp.amr.Entity;@59bbb974))
AMR:
(厌 / 厌烦-01, degree, 有 / 有些)
(感 / 感到-01, prep-in-addition-to, 厌 / 厌烦-01)
(感 / 感到-01, prep-in-addition-to, 我 / 我)

Decoded in 6,282 microseconds
Sentence: 但是 ， 如果 你 要是 驯服 了 我 ， 我 的 生活 就 一定 会 是 欢快 的 。

Spans:
Span 13-14:  一定 => 一定
Span 14-15:  会 => 会-03
Span 3-4:  你 => 你
Span 12-13:  就 => 就-01
Span 9-10:  我 => 我
Span 7-8:  我 => 我
Span 15-16:  是 => 是-04
Span 16-17:  欢快 => 欢快
Span 11-12:  生活 => 生活-01
Span 5-6:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  一定 => 一定
Oracle Span 14-15:  会 => 会-02
Oracle Span 3-4:  你 => 你
Oracle Span 12-13:  就 => 就
Oracle Span 7-8:  我 => 我
Oracle Span 16-17:  欢快 => 欢快
Oracle Span 11-12:  生活 => 生活-01
Oracle Span 5-6:  驯服 => 驯服-01

Extra span: 是 => 是-04
Incorrect span: 会 => 会-03
Incorrect span: 就 => 就-01
Extra span: 我 => 我
Incorrect span: 驯服 => 驯服
Missing span: 驯服 => 驯服-01
Missing span: 会 => 会-02
Missing span: 就 => 就
Dependencies:
1	但是	_	AD	AD	_	16	advmod	_	_
2	,	_	PU	PU	_	16	punct	_	_
3	如果	_	CS	CS	_	6	advmod	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	要是	_	AD	AD	_	6	advmod	_	_
6	驯服	_	VV	VV	_	16	pccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	我	_	PN	PN	_	6	dobj	_	_
9	,	_	PU	PU	_	16	punct	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	生活	_	NN	NN	_	16	nsubj	_	_
13	就	_	AD	AD	_	16	advmod	_	_
14	一定	_	AD	AD	_	16	advmod	_	_
15	会	_	VV	VV	_	16	mmod	_	_
16	是	_	VC	VC	_	0	root	_	_
17	欢快	_	VA	VA	_	16	attr	_	_
18	的	_	DEC	DEC	_	17	cpm	_	_
19	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x4 / 驯服-01, arg0, x5 / 你)
(x4 / 驯服-01, arg1, x6 / 我)
(x7 / 会-02, arg0, x8 / 欢快)
(x7 / 会-02, manner, x11 / 一定)
(x7 / 会-02, manner, x12 / 就)
(x8 / 欢快, arg0, x9 / 生活-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),欢快,欢快,false), Span(15,16,List(1),是,是-04,false), Span(14,15,List(2),会,会-03,false), Span(13,14,List(3),一定,一定,false), Span(12,13,List(4),就,就-01,false), Span(11,12,List(5),生活,生活-01,false), Span(9,10,List(6),我,我,false), Span(7,8,List(7),我,我,false), Span(5,6,List(8),驯服,驯服,false), Span(3,4,List(9),你,你,false)),Map(2 -> 会-03, 5 -> 生活-01, 8 -> 驯服, 7 -> 我, 1 -> 是-04, 4 -> 就-01, 6 -> 我, 9 -> 你, 0 -> 欢快, 3 -> 一定),Map(驯 -> 驯服, 就 -> 就-01, 生 -> 生活-01, 欢 -> 欢快, 我 -> 我, 你 -> 你, 我2 -> 我, 会 -> 会-03, 一 -> 一定, 是 -> 是-04))),[Ljava.lang.String;@7165d530,Annotation([Ljava.lang.String;@12f49ca8,[Ljava.lang.String;@1fd9893c,[Ljava.lang.String;@1b2df3aa),Annotation([Ljava.lang.String;@44be69aa,[Ljava.lang.String;@7219ac49,[Ledu.cmu.lti.nlp.amr.Dependency;@21da4b5f),Annotation([Ljava.lang.String;@551e4c6d,[Ljava.lang.String;@625a9c5d,[Ljava.lang.String;@5d1e0fbb),Annotation([Ljava.lang.String;@2eed37f4,[Ljava.lang.String;@9b76b60,[Ledu.cmu.lti.nlp.amr.Entity;@3fb9a67f))
AMR:
(会 / 会-03, ARG1, 是 / 是-04)
(会 / 会-03, manner, 一 / 一定)
(会 / 会-03, manner, 就 / 就-01)
(我2 / 我, prep-on-behalf, 是 / 是-04)
(是 / 是-04, ARG1, 欢 / 欢快)
(欢 / 欢快, age, 生 / 生活-01)
(生 / 生活-01, poss, 我 / 我)
(驯 / 驯服, domain, 我2 / 我)
(驯 / 驯服, mode, 你 / 你)

Decoded in 36,910 microseconds
Sentence: 我 会 辨认 出 一 种 与众不同 的 脚步声 。

Spans:
Span 6-7:  与众不同 => 与众不同-01
Span 1-2:  会 => 会-03
Span 3-4:  出 => 出-04
Span 0-1:  我 => 我
Span 5-6:  种 => 种
Span 8-9:  脚步声 => 脚步声
Span 2-3:  辨认 => 辨认-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  与众不同 => 与众不同-01
Oracle Span 1-2:  会 => 会-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  辨认 => 辨认-01

Extra span: 脚步声 => 脚步声
Extra span: 种 => 种
Extra span: 出 => 出-04
Incorrect span: 会 => 会-03
Missing span: 会 => 会-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	mmod	_	_
3	辨认	_	VV	VV	_	0	root	_	_
4	出	_	VV	VV	_	9	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	7	clf	_	_
7	与众不同	_	NN	NN	_	4	dobj	_	_
8	的	_	DEC	DEC	_	4	cpm	_	_
9	脚步声	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 辨认-01)
(x2 / 辨认-01, arg0, x3 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),脚步声,脚步声,false), Span(6,7,List(1),与众不同,与众不同-01,false), Span(5,6,List(2),种,种,false), Span(3,4,List(3),出,出-04,false), Span(2,3,List(4),辨认,辨认-01,false), Span(1,2,List(5),会,会-03,false), Span(0,1,List(6),我,我,false)),Map(2 -> 种, 5 -> 会-03, 1 -> 与众不同-01, 4 -> 辨认-01, 6 -> 我, 0 -> 脚步声, 3 -> 出-04),Map(我 -> 我, 与 -> 与众不同-01, 脚 -> 脚步声, 会 -> 会-03, 出 -> 出-04, 种 -> 种, 辨 -> 辨认-01))),[Ljava.lang.String;@127705e4,Annotation([Ljava.lang.String;@5562c2c9,[Ljava.lang.String;@673c4f6e,[Ljava.lang.String;@15c487a8),Annotation([Ljava.lang.String;@3f36e8d1,[Ljava.lang.String;@7c011174,[Ledu.cmu.lti.nlp.amr.Dependency;@794366a5),Annotation([Ljava.lang.String;@480b57e2,[Ljava.lang.String;@40f35e52,[Ljava.lang.String;@340d6d89),Annotation([Ljava.lang.String;@561953e3,[Ljava.lang.String;@443faa85,[Ledu.cmu.lti.nlp.amr.Entity;@1ee47d9e))
AMR:
(与 / 与众不同-01, ARG4, 种 / 种)
(会 / 会-03, mode, 辨 / 辨认-01)
(出 / 出-04, ARG4, 种 / 种)
(出 / 出-04, value, 脚 / 脚步声)
(辨 / 辨认-01, ARG3, 出 / 出-04)
(辨 / 辨认-01, snt1, 我 / 我)

Decoded in 15,175 microseconds
Sentence: 其他 的 脚步声 会 使 我 躲到 地下 去 ，

Spans:
Span 3-4:  会 => 会-03
Span 4-5:  使 => 使-01
Span 0-1:  其他 => 其他
Span 8-9:  去 => 去-02
Span 7-8:  地下 => 地下
Span 5-6:  我 => 我
Span 2-3:  脚步声 => 脚步声
Span 6-7:  躲到 => 躲到-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-02
Oracle Span 0-1:  其他 => 其他
Oracle Span 7-8:  地下 => 地下
Oracle Span 5-6:  我 => 我
Oracle Span 2-3:  脚步声 => 脚步声
Oracle Span 6-7:  躲到 => 躲到-01

Extra span: 去 => 去-02
Extra span: 使 => 使-01
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Dependencies:
1	其他	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	脚步声	_	NN	NN	_	5	nsubj	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	9	nsubj	_	_
7	躲到	_	NN	NN	_	9	nsubj	_	_
8	地下	_	AD	AD	_	9	advmod	_	_
9	去	_	VV	VV	_	5	ccomp	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x15 / 躲到-01, arg0, x16 / 我)
(x15 / 躲到-01, arg1, x17 / 地下)
(x18 / 脚步声, mod, x19 / 其他)
(x2 / 会-02, arg0, x15 / 躲到-01)
(x2 / 会-02, cause, x18 / 脚步声)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),去,去-02,false), Span(7,8,List(1),地下,地下,false), Span(6,7,List(2),躲到,躲到-01,false), Span(5,6,List(3),我,我,false), Span(4,5,List(4),使,使-01,false), Span(3,4,List(5),会,会-03,false), Span(2,3,List(6),脚步声,脚步声,false), Span(0,1,List(7),其他,其他,false)),Map(2 -> 躲到-01, 5 -> 会-03, 7 -> 其他, 1 -> 地下, 4 -> 使-01, 6 -> 脚步声, 0 -> 去-02, 3 -> 我),Map(我 -> 我, 去 -> 去-02, 脚 -> 脚步声, 地 -> 地下, 会 -> 会-03, 其 -> 其他, 使 -> 使-01, 躲 -> 躲到-01))),[Ljava.lang.String;@41da3aee,Annotation([Ljava.lang.String;@5dc0ff7d,[Ljava.lang.String;@64920dc2,[Ljava.lang.String;@59a79443),Annotation([Ljava.lang.String;@493ac8d3,[Ljava.lang.String;@13dbed9e,[Ledu.cmu.lti.nlp.amr.Dependency;@67531e3a),Annotation([Ljava.lang.String;@2b38b1f,[Ljava.lang.String;@1d50a7ca,[Ljava.lang.String;@51ab1ee3),Annotation([Ljava.lang.String;@2e766822,[Ljava.lang.String;@3003e580,[Ledu.cmu.lti.nlp.amr.Entity;@28757abd))
AMR:
(会 / 会-03, degree, 脚 / 脚步声)
(会 / 会-03, op, 使 / 使-01)
(使 / 使-01, ARG6, 躲 / 躲到-01)
(去 / 去-02, manner, 地 / 地下)
(去 / 去-02, mode, 躲 / 躲到-01)
(脚 / 脚步声, mod, 其 / 其他)
(躲 / 躲到-01, ARG3, 我 / 我)

Decoded in 18,831 microseconds
Sentence: 而 你 的 脚步声 就 会 象 音乐 一样 让 我 从 洞 里 走 出来 。

Spans:
Span 8-9:  一样 => 一样
Span 5-6:  会 => 会-03
Span 1-2:  你 => 你
Span 15-16:  出来 => 出来
Span 4-5:  就 => 就-01
Span 10-11:  我 => 我
Span 12-13:  洞 => 洞
Span 3-4:  脚步声 => 脚步声
Span 9-10:  让 => 让-01
Span 14-15:  走 => 走-05
Span 7-8:  音乐 => 音乐

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  会 => 会-02
Oracle Span 1-2:  你 => 你
Oracle Span 15-16:  出来 => 出来-01
Oracle Span 10-11:  我 => 我
Oracle Span 12-13:  洞 => 洞
Oracle Span 9-10:  让 => 让-02
Oracle Span 14-15:  走 => 走-05
Oracle Span 7-8:  音乐 => 音乐

Incorrect span: 出来 => 出来
Incorrect span: 让 => 让-01
Extra span: 一样 => 一样
Incorrect span: 会 => 会-03
Extra span: 就 => 就-01
Extra span: 脚步声 => 脚步声
Missing span: 会 => 会-02
Missing span: 让 => 让-02
Missing span: 出来 => 出来-01
Dependencies:
1	而	_	AD	AD	_	10	advmod	_	_
2	你	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脚步声	_	NN	NN	_	10	nsubj	_	_
5	就	_	P	P	_	10	prep	_	_
6	会	_	VV	VV	_	9	mmod	_	_
7	象	_	P	P	_	9	prep	_	_
8	音乐	_	NN	NN	_	7	pobj	_	_
9	一样	_	VA	VA	_	5	pccomp	_	_
10	让	_	VV	VV	_	0	root	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	从	_	P	P	_	15	prep	_	_
13	洞	_	NN	NN	_	14	lobj	_	_
14	里	_	LC	LC	_	12	plmod	_	_
15	走	_	VV	VV	_	10	dep	_	_
16	出来	_	VV	VV	_	15	comod	_	_
17	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x24 / 让-02, arg1, x26 / 我)
(x24 / 让-02, arg2, x27 / 走-05)
(x27 / 走-05, arg1, x30 / 洞)
(x27 / 走-05, direction, x28 / 出来-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),出来,出来,false), Span(14,15,List(1),走,走-05,false), Span(12,13,List(2),洞,洞,false), Span(10,11,List(3),我,我,false), Span(9,10,List(4),让,让-01,false), Span(8,9,List(5),一样,一样,false), Span(7,8,List(6),音乐,音乐,false), Span(5,6,List(7),会,会-03,false), Span(4,5,List(8),就,就-01,false), Span(3,4,List(9),脚步声,脚步声,false), Span(1,2,List(10),你,你,false)),Map(2 -> 洞, 5 -> 一样, 8 -> 就-01, 7 -> 会-03, 1 -> 走-05, 4 -> 让-01, 6 -> 音乐, 9 -> 脚步声, 0 -> 出来, 10 -> 你, 3 -> 我),Map(就 -> 就-01, 我 -> 我, 洞 -> 洞, 你 -> 你, 脚 -> 脚步声, 会 -> 会-03, 出 -> 出来, 走 -> 走-05, 让 -> 让-01, 音 -> 音乐, 一 -> 一样))),[Ljava.lang.String;@21a02556,Annotation([Ljava.lang.String;@3c8a7e38,[Ljava.lang.String;@138aa3cc,[Ljava.lang.String;@10a98392),Annotation([Ljava.lang.String;@30839e44,[Ljava.lang.String;@5f174dd2,[Ledu.cmu.lti.nlp.amr.Dependency;@1945113f),Annotation([Ljava.lang.String;@45aca496,[Ljava.lang.String;@697173d9,[Ljava.lang.String;@ceddaf8),Annotation([Ljava.lang.String;@3d90eeb3,[Ljava.lang.String;@1db87583,[Ledu.cmu.lti.nlp.amr.Entity;@7fb53256))
AMR:
(一 / 一样, manner, 就 / 就-01)
(一 / 一样, mod, 音 / 音乐)
(会 / 会-03, ARG1, 就 / 就-01)
(就 / 就-01, ARG4, 脚 / 脚步声)
(脚 / 脚步声, poss, 你 / 你)
(让 / 让-01, ARG1, 一 / 一样)
(让 / 让-01, subevent, 走 / 走-05)
(让 / 让-01, value, 我 / 我)
(走 / 走-05, direction, 出 / 出来)
(走 / 走-05, prep-following, 洞 / 洞)

Decoded in 38,452 microseconds
Sentence: 再 说 ， 你 看 ！ 你 看到 那边 的 麦田 没有 ？

Spans:
Span 6-7:  你 => 你
Span 3-4:  你 => 你
Span 0-1:  再 => 再
Span 4-5:  看 => 看-10
Span 7-8:  看到 => (thing :arg1-of 看到-01)
Span 1-2:  说 => 说-02
Span 8-9:  那边 => 那边
Span 10-11:  麦田 => 麦田

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 不 吃 面包 ，

Spans:
Span 1-2:  不 => 不
Span 2-3:  吃 => (thing :arg1-of 吃-01)
Span 0-1:  我 => 我
Span 3-4:  面包 => 面包

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 麦子 对 我 来说 ， 一点 用 也 没有 。

Spans:
Span 5-6:  一点 => 一点
Span 7-8:  也 => 也
Span 1-2:  对 => 对-02
Span 2-3:  我 => 我
Span 3-4:  来说 => 来说-01
Span 6-7:  用 => 用
Span 0-1:  麦子 => 麦子

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  一点 => 一点
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  来说 => 来说-01
Oracle Span 0-1:  麦子 => 麦子

Extra span: 也 => 也
Extra span: 用 => 用
Extra span: 对 => 对-02
Dependencies:
1	麦子	_	NN	NN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	来说	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	一点	_	AD	AD	_	7	advmod	_	_
7	用	_	VV	VV	_	4	dep	_	_
8	也	_	AD	AD	_	7	dep	_	_
9	没有	_	VV	VV	_	7	dep	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 麦子)
(x0 / 来说-01, arg1, x3 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),也,也,false), Span(6,7,List(1),用,用,false), Span(5,6,List(2),一点,一点,false), Span(3,4,List(3),来说,来说-01,false), Span(2,3,List(4),我,我,false), Span(1,2,List(5),对,对-02,false), Span(0,1,List(6),麦子,麦子,false)),Map(2 -> 一点, 5 -> 对-02, 1 -> 用, 4 -> 我, 6 -> 麦子, 0 -> 也, 3 -> 来说-01),Map(用 -> 用, 我 -> 我, 来 -> 来说-01, 也 -> 也, 麦 -> 麦子, 对 -> 对-02, 一 -> 一点))),[Ljava.lang.String;@7978e022,Annotation([Ljava.lang.String;@2f894ad9,[Ljava.lang.String;@5afbd567,[Ljava.lang.String;@6993c8df),Annotation([Ljava.lang.String;@57545c3f,[Ljava.lang.String;@326e0b8e,[Ledu.cmu.lti.nlp.amr.Dependency;@36baa049),Annotation([Ljava.lang.String;@41184371,[Ljava.lang.String;@34585ac9,[Ljava.lang.String;@76a805b7),Annotation([Ljava.lang.String;@15f35bc3,[Ljava.lang.String;@167381c7,[Ledu.cmu.lti.nlp.amr.Entity;@608b1fd2))
AMR:
(一 / 一点, ARG4, 也 / 也)
(也 / 也, ARG5, 用 / 用)
(对 / 对-02, ARG0, 我 / 我)
(对 / 对-02, ARG4, 麦 / 麦子)
(对 / 对-02, degree, 来 / 来说-01)
(来 / 来说-01, ARG4, 也 / 也)

Decoded in 22,668 microseconds
Sentence: 我 对 麦田 无动于衷 。

Spans:
Span 1-2:  对 => 对-02
Span 0-1:  我 => 我
Span 3-4:  无动于衷 => 无动于衷-01
Span 2-3:  麦田 => 麦田

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  无动于衷 => 无动于衷-01
Oracle Span 2-3:  麦田 => 麦田

Extra span: 对 => 对-02
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	麦田	_	NN	NN	_	2	pobj	_	_
4	无动于衷	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 无动于衷-01, arg0, x9 / 我)
(x7 / 无动于衷-01, arg1, x10 / 麦田)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),无动于衷,无动于衷-01,false), Span(2,3,List(1),麦田,麦田,false), Span(1,2,List(2),对,对-02,false), Span(0,1,List(3),我,我,false)),Map(2 -> 对-02, 1 -> 麦田, 0 -> 无动于衷-01, 3 -> 我),Map(我 -> 我, 麦 -> 麦田, 无 -> 无动于衷-01, 对 -> 对-02))),[Ljava.lang.String;@56382bc9,Annotation([Ljava.lang.String;@591a4f8e,[Ljava.lang.String;@53ed80d3,[Ljava.lang.String;@6ba060f3),Annotation([Ljava.lang.String;@7c51782d,[Ljava.lang.String;@77bc2e16,[Ledu.cmu.lti.nlp.amr.Dependency;@48e8c32a),Annotation([Ljava.lang.String;@20a7953c,[Ljava.lang.String;@57c00115,[Ljava.lang.String;@411a5965),Annotation([Ljava.lang.String;@4fe533ff,[Ljava.lang.String;@5377414a,[Ledu.cmu.lti.nlp.amr.Entity;@4e83a98))
AMR:
(对 / 对-02, ARG0, 麦 / 麦田)
(对 / 对-02, ARG5, 我 / 我)
(对 / 对-02, degree, 无 / 无动于衷-01)

Decoded in 6,195 microseconds
Sentence: 而 这 ， 真 使 人 扫兴 。

Spans:
Span 5-6:  人 => 人
Span 4-5:  使 => 使-01
Span 6-7:  扫兴 => 扫兴
Span 3-4:  真 => 真
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  人 => 人
Oracle Span 6-7:  扫兴 => 扫兴
Oracle Span 3-4:  真 => 真
Oracle Span 1-2:  这 => 这

Extra span: 使 => 使-01
Dependencies:
1	而	_	AD	AD	_	5	advmod	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	真	_	AD	AD	_	5	advmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	人	_	NN	NN	_	5	dobj	_	_
7	扫兴	_	VV	VV	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 扫兴, arg0, x8 / 人)
(x7 / 扫兴, cause, x10 / 这)
(x7 / 扫兴, degree, x9 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),扫兴,扫兴,false), Span(5,6,List(1),人,人,false), Span(4,5,List(2),使,使-01,false), Span(3,4,List(3),真,真,false), Span(1,2,List(4),这,这,false)),Map(2 -> 使-01, 1 -> 人, 4 -> 这, 0 -> 扫兴, 3 -> 真),Map(扫 -> 扫兴, 这 -> 这, 使 -> 使-01, 人 -> 人, 真 -> 真))),[Ljava.lang.String;@17aa8a11,Annotation([Ljava.lang.String;@71b639d0,[Ljava.lang.String;@18a25bbd,[Ljava.lang.String;@5d5b9ecb),Annotation([Ljava.lang.String;@1ee27d73,[Ljava.lang.String;@5e5aafc6,[Ledu.cmu.lti.nlp.amr.Dependency;@542f6803),Annotation([Ljava.lang.String;@5583098b,[Ljava.lang.String;@5807efad,[Ljava.lang.String;@53a84ff4),Annotation([Ljava.lang.String;@7ce85af2,[Ljava.lang.String;@316acbb5,[Ledu.cmu.lti.nlp.amr.Entity;@56f730b2))
AMR:
(使 / 使-01, beneficiary, 人 / 人)
(扫 / 扫兴, degree, 真 / 真)
(扫 / 扫兴, mod, 人 / 人)
(扫 / 扫兴, quant, 这 / 这)

Decoded in 9,785 microseconds
Sentence: 但是 ， 你 有 着 金黄色 的 头发 。

Spans:
Span 2-3:  你 => 你
Span 7-8:  头发 => 头发
Span 3-4:  有 => 有-06
Span 5-6:  金黄色 => 金黄色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 7-8:  头发 => 头发
Oracle Span 3-4:  有 => 有-01
Oracle Span 5-6:  金黄色 => 金黄色

Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	你	_	PN	PN	_	4	top	_	_
4	有	_	VE	VE	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	金黄色	_	JJ	JJ	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	头发	_	NN	NN	_	4	dobj	_	_
9	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x2 / 有-01, arg0, x3 / 你)
(x2 / 有-01, arg1, x4 / 头发)
(x4 / 头发, mod, x5 / 金黄色)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),头发,头发,false), Span(5,6,List(1),金黄色,金黄色,false), Span(3,4,List(2),有,有-06,false), Span(2,3,List(3),你,你,false)),Map(2 -> 有-06, 1 -> 金黄色, 0 -> 头发, 3 -> 你),Map(头 -> 头发, 你 -> 你, 金 -> 金黄色, 有 -> 有-06))),[Ljava.lang.String;@47311277,Annotation([Ljava.lang.String;@7930ffa9,[Ljava.lang.String;@1e60b459,[Ljava.lang.String;@717d7587),Annotation([Ljava.lang.String;@3e906375,[Ljava.lang.String;@40230eb9,[Ledu.cmu.lti.nlp.amr.Dependency;@5b7aa898),Annotation([Ljava.lang.String;@41b13f3d,[Ljava.lang.String;@7c0777b5,[Ljava.lang.String;@2489e84a),Annotation([Ljava.lang.String;@2a39aa2b,[Ljava.lang.String;@62b93086,[Ledu.cmu.lti.nlp.amr.Entity;@254449bb))
AMR:
(头 / 头发, mod, 金 / 金黄色)
(有 / 有-06, ARG5, 你 / 你)
(有 / 有-06, part, 头 / 头发)

Decoded in 10,804 microseconds
Sentence: 那么 ， 一旦 你 驯服 了 我 ， 这 就 会 十分 美妙 。

Spans:
Span 10-11:  会 => 会-03
Span 3-4:  你 => 你
Span 11-12:  十分 => 十分
Span 9-10:  就 => 就-01
Span 6-7:  我 => 我
Span 12-13:  美妙 => 美妙-01
Span 8-9:  这 => 这
Span 0-1:  那么 => 那么
Span 4-5:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 11-12:  十分 => 十分
Oracle Span 9-10:  就 => 就
Oracle Span 6-7:  我 => 我
Oracle Span 12-13:  美妙 => 美妙-01
Oracle Span 8-9:  这 => 这
Oracle Span 4-5:  驯服 => 驯服-01

Extra span: 会 => 会-03
Incorrect span: 就 => 就-01
Incorrect span: 驯服 => 驯服
Extra span: 那么 => 那么
Missing span: 驯服 => 驯服-01
Missing span: 就 => 就
Dependencies:
1	那么	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	一旦	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	驯服	_	VV	VV	_	13	pccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	我	_	PN	PN	_	5	dobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	这	_	PN	PN	_	13	nsubj	_	_
10	就	_	AD	AD	_	13	advmod	_	_
11	会	_	VV	VV	_	13	mmod	_	_
12	十分	_	AD	AD	_	13	advmod	_	_
13	美妙	_	VV	VV	_	0	root	_	_
14	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x11 / 美妙-01, arg0, x14 / 这)
(x11 / 美妙-01, degree, x12 / 十分)
(x11 / 美妙-01, manner, x13 / 就)
(x3 / 驯服-01, arg0, x4 / 你)
(x3 / 驯服-01, arg1, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),美妙,美妙-01,false), Span(11,12,List(1),十分,十分,false), Span(10,11,List(2),会,会-03,false), Span(9,10,List(3),就,就-01,false), Span(8,9,List(4),这,这,false), Span(6,7,List(5),我,我,false), Span(4,5,List(6),驯服,驯服,false), Span(3,4,List(7),你,你,false), Span(0,1,List(8),那么,那么,false)),Map(2 -> 会-03, 5 -> 我, 8 -> 那么, 7 -> 你, 1 -> 十分, 4 -> 这, 6 -> 驯服, 0 -> 美妙-01, 3 -> 就-01),Map(驯 -> 驯服, 就 -> 就-01, 美 -> 美妙-01, 我 -> 我, 这 -> 这, 十 -> 十分, 你 -> 你, 会 -> 会-03, 那 -> 那么))),[Ljava.lang.String;@4e642ee1,Annotation([Ljava.lang.String;@29ebbdf4,[Ljava.lang.String;@2fd954f,[Ljava.lang.String;@5731d3a),Annotation([Ljava.lang.String;@6a0f2853,[Ljava.lang.String;@1eff3cfb,[Ledu.cmu.lti.nlp.amr.Dependency;@70c69586),Annotation([Ljava.lang.String;@6dc1dc69,[Ljava.lang.String;@7e9f2c32,[Ljava.lang.String;@19e0dffe),Annotation([Ljava.lang.String;@5d4e13e1,[Ljava.lang.String;@3e0fbeb5,[Ledu.cmu.lti.nlp.amr.Entity;@3976ebfa))
AMR:
(会 / 会-03, manner, 就 / 就-01)
(会 / 会-03, medium, 这 / 这)
(你 / 你, compared-to, 我 / 我)
(就 / 就-01, ARG3, 驯 / 驯服)
(美 / 美妙-01, degree, 十 / 十分)
(美 / 美妙-01, manner, 就 / 就-01)
(那 / 那么, age, 驯 / 驯服)
(驯 / 驯服, domain, 我 / 我)

Decoded in 37,658 microseconds
Sentence: 麦子 ， 是 金黄色 的 ， 它 就 会 使 我 想起 你 。

Spans:
Span 8-9:  会 => 会-03
Span 12-13:  你 => 你
Span 9-10:  使 => 使-01
Span 6-7:  它 => 它
Span 7-8:  就 => 就-01
Span 11-12:  想起 => 想起-01
Span 10-11:  我 => 我
Span 2-3:  是 => 是-04
Span 3-4:  金黄色 => 金黄色
Span 0-1:  麦子 => 麦子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 12-13:  你 => 你
Oracle Span 11-12:  想起 => 想起-01
Oracle Span 10-11:  我 => 我
Oracle Span 3-4:  金黄色 => 金黄色
Oracle Span 0-1:  麦子 => 麦子

Extra span: 使 => 使-01
Incorrect span: 会 => 会-03
Extra span: 就 => 就-01
Extra span: 它 => 它
Extra span: 是 => 是-04
Missing span: 会 => 会-02
Dependencies:
1	麦子	_	NN	NN	_	3	dep	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	是	_	VC	VC	_	0	root	_	_
4	金黄色	_	JJ	JJ	_	3	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	它	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	使	_	VV	VV	_	3	conj	_	_
11	我	_	PN	PN	_	10	dobj	_	_
12	想起	_	VV	VV	_	10	dep	_	_
13	你	_	PN	PN	_	12	dobj	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 会-02, arg0, x13 / 想起-01)
(x11 / 会-02, cause, x16 / 金黄色)
(x13 / 想起-01, arg0, x14 / 我)
(x13 / 想起-01, arg1, x15 / 你)
(x16 / 金黄色, domain, x17 / 麦子)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),你,你,false), Span(11,12,List(1),想起,想起-01,false), Span(10,11,List(2),我,我,false), Span(9,10,List(3),使,使-01,false), Span(8,9,List(4),会,会-03,false), Span(7,8,List(5),就,就-01,false), Span(6,7,List(6),它,它,false), Span(3,4,List(7),金黄色,金黄色,false), Span(2,3,List(8),是,是-04,false), Span(0,1,List(9),麦子,麦子,false)),Map(2 -> 我, 5 -> 就-01, 8 -> 是-04, 7 -> 金黄色, 1 -> 想起-01, 4 -> 会-03, 6 -> 它, 9 -> 麦子, 0 -> 你, 3 -> 使-01),Map(就 -> 就-01, 我 -> 我, 麦 -> 麦子, 你 -> 你, 它 -> 它, 会 -> 会-03, 使 -> 使-01, 想 -> 想起-01, 是 -> 是-04, 金 -> 金黄色))),[Ljava.lang.String;@2676dc05,Annotation([Ljava.lang.String;@b0a1231,[Ljava.lang.String;@4833eff3,[Ljava.lang.String;@4694f434),Annotation([Ljava.lang.String;@56928e17,[Ljava.lang.String;@dd2856e,[Ledu.cmu.lti.nlp.amr.Dependency;@5a49af50),Annotation([Ljava.lang.String;@3b1dc579,[Ljava.lang.String;@793d163b,[Ljava.lang.String;@60dd0587),Annotation([Ljava.lang.String;@77f905e3,[Ljava.lang.String;@221a2068,[Ledu.cmu.lti.nlp.amr.Entity;@338766de))
AMR:
(会 / 会-03, ARG0, 想 / 想起-01)
(会 / 会-03, manner, 就 / 就-01)
(使 / 使-01, prep-on-behalf, 想 / 想起-01)
(使 / 使-01, value, 我 / 我)
(使 / 使-01, weekday, 它 / 它)
(想 / 想起-01, dayperiod, 你 / 你)
(是 / 是-04, ARG1, 金 / 金黄色)
(是 / 是-04, ARG4, 它 / 它)
(金 / 金黄色, domain, 麦 / 麦子)

Decoded in 40,163 microseconds
Sentence: 而且 ， 我 甚至 会 喜欢 那 风 吹 麦浪 的 声音 … ”

Spans:
Span 4-5:  会 => 会-03
Span 8-9:  吹 => 吹-01
Span 5-6:  喜欢 => 喜欢-01
Span 11-12:  声音 => 声音
Span 2-3:  我 => 我
Span 3-4:  甚至 => 甚至
Span 6-7:  那 => 那
Span 7-8:  风 => 风
Span 9-10:  麦浪 => 麦浪

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  会 => 会-02
Oracle Span 8-9:  吹 => 吹-01
Oracle Span 5-6:  喜欢 => 喜欢-01
Oracle Span 11-12:  声音 => 声音
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  甚至 => 甚至
Oracle Span 6-7:  那 => 那
Oracle Span 7-8:  风 => 风
Oracle Span 9-10:  麦浪 => 麦浪

Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Dependencies:
1	而且	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	甚至	_	AD	AD	_	5	advmod	_	_
5	会	_	VV	VV	_	0	root	_	_
6	喜欢	_	VV	VV	_	12	rcmod	_	_
7	那	_	DT	DT	_	8	det	_	_
8	风	_	NN	NN	_	6	dobj	_	_
9	吹	_	VV	VV	_	6	dep	_	_
10	麦浪	_	NN	NN	_	9	dobj	_	_
11	的	_	DEC	DEC	_	6	cpm	_	_
12	声音	_	NN	NN	_	5	dobj	_	_
13	…	_	PU	PU	_	5	punct	_	_
14	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 会-02, arg0, x15 / 喜欢-01)
(x14 / 会-02, manner, x18 / 甚至)
(x15 / 喜欢-01, arg0, x16 / 我)
(x15 / 喜欢-01, arg1, x17 / 声音)
(x17 / 声音, mod, x19 / 那)
(x17 / 声音, mod, x21 / 吹-01)
(x21 / 吹-01, arg0, x22 / 风)
(x21 / 吹-01, arg1, x23 / 麦浪)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),声音,声音,false), Span(9,10,List(1),麦浪,麦浪,false), Span(8,9,List(2),吹,吹-01,false), Span(7,8,List(3),风,风,false), Span(6,7,List(4),那,那,false), Span(5,6,List(5),喜欢,喜欢-01,false), Span(4,5,List(6),会,会-03,false), Span(3,4,List(7),甚至,甚至,false), Span(2,3,List(8),我,我,false)),Map(2 -> 吹-01, 5 -> 喜欢-01, 8 -> 我, 7 -> 甚至, 1 -> 麦浪, 4 -> 那, 6 -> 会-03, 0 -> 声音, 3 -> 风),Map(我 -> 我, 麦 -> 麦浪, 吹 -> 吹-01, 喜 -> 喜欢-01, 会 -> 会-03, 风 -> 风, 声 -> 声音, 那 -> 那, 甚 -> 甚至))),[Ljava.lang.String;@3b7eac14,Annotation([Ljava.lang.String;@4976085,[Ljava.lang.String;@777d191f,[Ljava.lang.String;@7fc420b8),Annotation([Ljava.lang.String;@31142d58,[Ljava.lang.String;@e38f0b7,[Ledu.cmu.lti.nlp.amr.Dependency;@1192b58e),Annotation([Ljava.lang.String;@4f8d86e4,[Ljava.lang.String;@5f631ca0,[Ljava.lang.String;@1697f2b3),Annotation([Ljava.lang.String;@12ad1b2a,[Ljava.lang.String;@3134153d,[Ledu.cmu.lti.nlp.amr.Entity;@767599a7))
AMR:
(会 / 会-03, manner, 甚 / 甚至)
(会 / 会-03, prep-on-behalf, 我 / 我)
(吹 / 吹-01, ARG5, 麦 / 麦浪)
(喜 / 喜欢-01, manner, 会 / 会-03)
(喜 / 喜欢-01, mod, 那 / 那)
(声 / 声音, mod, 吹 / 吹-01)
(声 / 声音, mod, 那 / 那)
(风 / 风, mod, 吹 / 吹-01)

Decoded in 23,366 microseconds
Sentence: 狐狸 沉默 不语 ， 久久 地 看 着 小 王子 。

Spans:
Span 2-3:  不语 => 不语
Span 4-5:  久久 => 久久
Span 5-6:  地 => 地
Span 8-9:  小 => 小
Span 1-2:  沉默 => 沉默-01
Span 0-1:  狐狸 => 狐狸
Span 9-10:  王子 => 王子
Span 6-7:  看 => 看-10

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  不语 => 不语
Oracle Span 4-5:  久久 => 久久
Oracle Span 8-9:  小 => 小-01
Oracle Span 1-2:  沉默 => 沉默-01
Oracle Span 0-1:  狐狸 => 狐狸
Oracle Span 9-10:  王子 => 王子
Oracle Span 6-7:  看 => 看-02

Incorrect span: 小 => 小
Incorrect span: 看 => 看-10
Extra span: 地 => 地
Missing span: 看 => 看-02
Missing span: 小 => 小-01
Dependencies:
1	狐狸	_	NN	NN	_	2	nsubj	_	_
2	沉默	_	VV	VV	_	0	root	_	_
3	不语	_	NN	NN	_	2	dobj	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	久久	_	AD	AD	_	7	advmod	_	_
6	地	_	NN	NN	_	7	prep	_	_
7	看	_	VV	VV	_	2	conj	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x2 / 不语, manner, x3 / 沉默-01)
(x3 / 沉默-01, arg0, x4 / 狐狸)
(x5 / 看-02, arg1, x6 / 王子)
(x5 / 看-02, manner, x8 / 久久)
(x6 / 王子, mod, x7 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),王子,王子,false), Span(8,9,List(1),小,小,false), Span(6,7,List(2),看,看-10,false), Span(5,6,List(3),地,地,false), Span(4,5,List(4),久久,久久,false), Span(2,3,List(5),不语,不语,false), Span(1,2,List(6),沉默,沉默-01,false), Span(0,1,List(7),狐狸,狐狸,false)),Map(2 -> 看-10, 5 -> 不语, 7 -> 狐狸, 1 -> 小, 4 -> 久久, 6 -> 沉默-01, 0 -> 王子, 3 -> 地),Map(沉 -> 沉默-01, 王 -> 王子, 地 -> 地, 小 -> 小, 不 -> 不语, 看 -> 看-10, 狐 -> 狐狸, 久 -> 久久))),[Ljava.lang.String;@5f5effb0,Annotation([Ljava.lang.String;@25d0cb3a,[Ljava.lang.String;@345cbf40,[Ljava.lang.String;@6e3eb0cd),Annotation([Ljava.lang.String;@463561c5,[Ljava.lang.String;@659feb22,[Ledu.cmu.lti.nlp.amr.Dependency;@3468ee6e),Annotation([Ljava.lang.String;@2f4b98f6,[Ljava.lang.String;@421def93,[Ljava.lang.String;@58c1da09),Annotation([Ljava.lang.String;@2b2954e1,[Ljava.lang.String;@58d6e55a,[Ledu.cmu.lti.nlp.amr.Entity;@751ae8a4))
AMR:
(不 / 不语, manner, 沉 / 沉默-01)
(地 / 地, manner, 久 / 久久)
(沉 / 沉默-01, ARG4, 地 / 地)
(沉 / 沉默-01, manner, 狐 / 狐狸)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, manner, 久 / 久久)
(看 / 看-10, snt3, 王 / 王子)

Decoded in 23,632 microseconds
Sentence: “ 请 你 驯服 我 吧 ！ ” 他 说 。

Spans:
Span 8-9:  他 => 他
Span 2-3:  你 => 你
Span 4-5:  我 => 我
Span 9-10:  说 => 说-02
Span 1-2:  请 => 请-02
Span 3-4:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  他 => 他
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  我 => 我
Oracle Span 9-10:  说 => 说-01
Oracle Span 1-2:  请 => 请-01
Oracle Span 3-4:  驯服 => 驯服-01

Incorrect span: 说 => 说-02
Incorrect span: 驯服 => 驯服
Incorrect span: 请 => 请-02
Missing span: 说 => 说-01
Missing span: 请 => 请-01
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	请	_	VV	VV	_	10	dep	_	_
3	你	_	PN	PN	_	5	nsubj	_	_
4	驯服	_	NR	NR	_	5	nsubj	_	_
5	我	_	PN	PN	_	2	ccomp	_	_
6	吧	_	SP	SP	_	5	dep	_	_
7	！	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_
9	他	_	PN	PN	_	10	nsubj	_	_
10	说	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x3 / 请-01)
(x3 / 请-01, arg1, x6 / 你)
(x3 / 请-01, arg2, x7 / 驯服-01)
(x7 / 驯服-01, arg1, x9 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),他,他,false), Span(4,5,List(2),我,我,false), Span(3,4,List(3),驯服,驯服,false), Span(2,3,List(4),你,你,false), Span(1,2,List(5),请,请-02,false)),Map(2 -> 我, 5 -> 请-02, 1 -> 他, 4 -> 你, 0 -> 说-02, 3 -> 驯服),Map(驯 -> 驯服, 我 -> 我, 你 -> 你, 他 -> 他, 说 -> 说-02, 请 -> 请-02))),[Ljava.lang.String;@235d659c,Annotation([Ljava.lang.String;@4232b34a,[Ljava.lang.String;@2da16263,[Ljava.lang.String;@f5ce0bb),Annotation([Ljava.lang.String;@47e51549,[Ljava.lang.String;@101a461c,[Ledu.cmu.lti.nlp.amr.Dependency;@360e9c06),Annotation([Ljava.lang.String;@5ebffb44,[Ljava.lang.String;@311ff287,[Ljava.lang.String;@7377781e),Annotation([Ljava.lang.String;@31db34da,[Ljava.lang.String;@109f8c7e,[Ledu.cmu.lti.nlp.amr.Entity;@5edacf20))
AMR:
(说 / 说-02, degree, 驯 / 驯服)
(说 / 说-02, direction, 他 / 他)
(请 / 请-02, degree, 驯 / 驯服)
(驯 / 驯服, mod, 你 / 你)
(驯 / 驯服, poss, 我 / 我)

Decoded in 12,104 microseconds
Sentence: “ 我 是 很 愿意 的 。 ” 小 王子 回答 道 ，

Spans:
Span 10-11:  回答 => 回答-01
Span 8-9:  小 => 小
Span 3-4:  很 => 很
Span 4-5:  愿意 => 愿意-01
Span 1-2:  我 => 我
Span 2-3:  是 => 是-04
Span 9-10:  王子 => 王子
Span 11-12:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  回答 => 回答-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 3-4:  很 => 很
Oracle Span 4-5:  愿意 => 愿意-01
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  王子 => 王子

Extra span: 道 => 道-01
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	10	vmod	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	愿意	_	VV	VV	_	7	rcmod	_	_
6	的	_	DEC	DEC	_	5	cpm	_	_
7	。	_	NN	NN	_	3	attr	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	12	nsubj	_	_
11	回答	_	VV	VV	_	12	mmod	_	_
12	道	_	CD	CD	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 王子)
(x0 / 回答-01, arg2, x4 / 愿意-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 愿意-01, arg0, x6 / 我)
(x4 / 愿意-01, degree, x5 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),道,道-01,false), Span(10,11,List(1),回答,回答-01,false), Span(9,10,List(2),王子,王子,false), Span(8,9,List(3),小,小,false), Span(4,5,List(4),愿意,愿意-01,false), Span(3,4,List(5),很,很,false), Span(2,3,List(6),是,是-04,false), Span(1,2,List(7),我,我,false)),Map(2 -> 王子, 5 -> 很, 7 -> 我, 1 -> 回答-01, 4 -> 愿意-01, 6 -> 是-04, 0 -> 道-01, 3 -> 小),Map(我 -> 我, 很 -> 很, 王 -> 王子, 愿 -> 愿意-01, 小 -> 小, 道 -> 道-01, 是 -> 是-04, 回 -> 回答-01))),[Ljava.lang.String;@16a5eb6d,Annotation([Ljava.lang.String;@7e307087,[Ljava.lang.String;@1220ef43,[Ljava.lang.String;@1a8b81e8),Annotation([Ljava.lang.String;@234cff57,[Ljava.lang.String;@5e8507f1,[Ledu.cmu.lti.nlp.amr.Dependency;@4bcaa195),Annotation([Ljava.lang.String;@d08edc5,[Ljava.lang.String;@49fa1d74,[Ljava.lang.String;@3f362135),Annotation([Ljava.lang.String;@21eee94f,[Ljava.lang.String;@6bc24e72,[Ledu.cmu.lti.nlp.amr.Entity;@724aefc3))
AMR:
(回 / 回答-01, ARG1, 王 / 王子)
(愿 / 愿意-01, degree, 很 / 很)
(是 / 是-04, beneficiary, 我 / 我)
(是 / 是-04, purpose, 愿 / 愿意-01)
(王 / 王子, mod, 小 / 小)
(道 / 道-01, degree, 回 / 回答-01)
(道 / 道-01, degree, 愿 / 愿意-01)

Decoded in 18,331 microseconds
Sentence: “ 可 我 的 时间 不 多 了 。

Spans:
Span 5-6:  不 => 不
Span 1-2:  可 => 可-01
Span 6-7:  多 => 多
Span 2-3:  我 => 我
Span 4-5:  时间 => 时间

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  多 => 多-03
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  时间 => 时间

Incorrect span: 多 => 多
Extra span: 不 => 不
Extra span: 可 => 可-01
Missing span: 多 => 多-03
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	可	_	VV	VV	_	5	rcmod	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	时间	_	NN	NN	_	7	nsubj	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	多	_	VA	VA	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 时间, poss, x12 / 我)
(x9 / 多-03, arg0, x11 / 时间)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),多,多,false), Span(5,6,List(1),不,不,false), Span(4,5,List(2),时间,时间,false), Span(2,3,List(3),我,我,false), Span(1,2,List(4),可,可-01,false)),Map(2 -> 时间, 1 -> 不, 4 -> 可-01, 0 -> 多, 3 -> 我),Map(我 -> 我, 不 -> 不, 多 -> 多, 时 -> 时间, 可 -> 可-01))),[Ljava.lang.String;@7cfb4736,Annotation([Ljava.lang.String;@2a097d77,[Ljava.lang.String;@53c1179a,[Ljava.lang.String;@7650ded6),Annotation([Ljava.lang.String;@5034f5dd,[Ljava.lang.String;@31b7d869,[Ledu.cmu.lti.nlp.amr.Dependency;@6a916402),Annotation([Ljava.lang.String;@1a47a1e8,[Ljava.lang.String;@6d2a2560,[Ljava.lang.String;@62d1dc3c),Annotation([Ljava.lang.String;@3811510,[Ljava.lang.String;@24eeac69,[Ledu.cmu.lti.nlp.amr.Entity;@18539cb1))
AMR:
(可 / 可-01, purpose, 不 / 不)
(可 / 可-01, subset, 我 / 我)
(多 / 多, mod, 不 / 不)
(时 / 时间, mod, 不 / 不)

Decoded in 8,591 microseconds
Sentence: 我 还 要 去 寻找 朋友 ， 还 有 许多 事物 要 了解 。 ”

Spans:
Span 12-13:  了解 => 了解-02
Span 10-11:  事物 => 事物
Span 3-4:  去 => 去-02
Span 4-5:  寻找 => 寻找-01
Span 0-1:  我 => 我
Span 8-9:  有 => 有-06
Span 5-6:  朋友 => 朋友
Span 11-12:  要 => 要-02
Span 2-3:  要 => 要-02
Span 9-10:  许多 => 许多
Span 7-8:  还 => 还
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  了解 => 了解-02
Oracle Span 10-11:  事物 => 事物
Oracle Span 3-4:  去 => 去-01
Oracle Span 4-5:  寻找 => 寻找-01
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  有 => 有-01
Oracle Span 5-6:  朋友 => 朋友
Oracle Span 2-3:  要 => 要-03
Oracle Span 11-12:  要 => 要
Oracle Span 9-10:  许多 => 许多
Oracle Span 1-2:  还 => 还
Oracle Span 7-8:  还 => 还

Incorrect span: 要 => 要-02
Incorrect span: 有 => 有-06
Incorrect span: 去 => 去-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 去 => 去-01
Missing span: 有 => 有-01
Missing span: 要 => 要
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	还	_	AD	AD	_	5	advmod	_	_
3	要	_	VV	VV	_	5	mmod	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	寻找	_	VV	VV	_	0	root	_	_
6	朋友	_	NN	NN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	还	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	5	conj	_	_
10	许多	_	CD	CD	_	11	nummod	_	_
11	事物	_	NN	NN	_	9	dobj	_	_
12	要	_	VV	VV	_	5	conj	_	_
13	了解	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	5	punct	_	_
15	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x18 / 要-03, arg0, x20 / 去-01)
(x18 / 要-03, manner, x19 / 还)
(x20 / 去-01, arg0, x21 / 我)
(x20 / 去-01, arg1, x22 / 寻找-01)
(x22 / 寻找-01, arg1, x24 / 朋友)
(x30 / 有-01, arg1, x32 / 事物)
(x30 / 有-01, manner, x31 / 还)
(x32 / 事物, mod, x33 / 许多)
(x34 / 了解-02, arg1, x32 / 事物)
(x36 / 要, arg0, x34 / 了解-02)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),了解,了解-02,false), Span(11,12,List(1),要,要-02,false), Span(10,11,List(2),事物,事物,false), Span(9,10,List(3),许多,许多,false), Span(8,9,List(4),有,有-06,false), Span(7,8,List(5),还,还,false), Span(5,6,List(6),朋友,朋友,false), Span(4,5,List(7),寻找,寻找-01,false), Span(3,4,List(8),去,去-02,false), Span(2,3,List(9),要,要-02,false), Span(1,2,List(10),还,还,false), Span(0,1,List(11),我,我,false)),Map(2 -> 事物, 5 -> 还, 8 -> 去-02, 7 -> 寻找-01, 1 -> 要-02, 11 -> 我, 4 -> 有-06, 6 -> 朋友, 9 -> 要-02, 0 -> 了解-02, 10 -> 还, 3 -> 许多),Map(了 -> 了解-02, 我 -> 我, 朋 -> 朋友, 寻 -> 寻找-01, 要 -> 要-02, 去 -> 去-02, 要2 -> 要-02, 事 -> 事物, 还 -> 还, 许 -> 许多, 还2 -> 还, 有 -> 有-06))),[Ljava.lang.String;@748f93bb,Annotation([Ljava.lang.String;@7f2d31af,[Ljava.lang.String;@2e7157c7,[Ljava.lang.String;@2a43e0ac),Annotation([Ljava.lang.String;@22d9bc14,[Ljava.lang.String;@346f41a9,[Ledu.cmu.lti.nlp.amr.Dependency;@1084f78c),Annotation([Ljava.lang.String;@25f723b0,[Ljava.lang.String;@4aa11206,[Ljava.lang.String;@40d60f2),Annotation([Ljava.lang.String;@3382cf68,[Ljava.lang.String;@2f74900b,[Ledu.cmu.lti.nlp.amr.Entity;@6d8796c1))
AMR:
(事 / 事物, mod, 有 / 有-06)
(事 / 事物, mod, 许 / 许多)
(寻 / 寻找-01, direction, 朋 / 朋友)
(寻 / 寻找-01, manner, 去 / 去-02)
(寻 / 寻找-01, mode, 有 / 有-06)
(有 / 有-06, manner, 还 / 还)
(要 / 要-02, manner, 事 / 事物)
(要 / 要-02, snt11, 了 / 了解-02)
(要2 / 要-02, manner, 还2 / 还)
(要2 / 要-02, poss, 我 / 我)
(要2 / 要-02, snt11, 去 / 去-02)

Decoded in 38,697 microseconds
Sentence: “ 只有 被 驯服 了 的 事物 ， 才 会 被 了解 。 ” 狐狸 说 ，

Spans:
Span 11-12:  了解 => 了解-02
Span 6-7:  事物 => 事物
Span 9-10:  会 => 会-03
Span 1-2:  只有 => 只有-01
Span 8-9:  才 => 才
Span 14-15:  狐狸 => 狐狸
Span 15-16:  说 => 说-02
Span 3-4:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  了解 => 了解-02
Oracle Span 6-7:  事物 => 事物
Oracle Span 9-10:  会 => 会-03
Oracle Span 8-9:  才 => 才
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 15-16:  说 => 说-01
Oracle Span 3-4:  驯服 => 驯服-01

Incorrect span: 说 => 说-02
Incorrect span: 驯服 => 驯服
Extra span: 只有 => 只有-01
Missing span: 说 => 说-01
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	只有	_	CS	CS	_	12	advmod	_	_
3	被	_	LB	LB	_	12	pass	_	_
4	驯服	_	VV	VV	_	7	rcmod	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	事物	_	NN	NN	_	12	nsubj	_	_
8	,	_	PU	PU	_	12	punct	_	_
9	才	_	AD	AD	_	12	advmod	_	_
10	会	_	VV	VV	_	12	mmod	_	_
11	被	_	SB	SB	_	12	pass	_	_
12	了解	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	12	punct	_	_
15	狐狸	_	NN	NN	_	16	dep	_	_
16	说	_	VV	VV	_	12	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x4 / 驯服-01, arg1, x5 / 事物)
(x9 / 会-03, arg0, x10 / 了解-02)
(x9 / 会-03, manner, x12 / 才)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说,说-02,false), Span(14,15,List(1),狐狸,狐狸,false), Span(11,12,List(2),了解,了解-02,false), Span(9,10,List(3),会,会-03,false), Span(8,9,List(4),才,才,false), Span(6,7,List(5),事物,事物,false), Span(3,4,List(6),驯服,驯服,false), Span(1,2,List(7),只有,只有-01,false)),Map(2 -> 了解-02, 5 -> 事物, 7 -> 只有-01, 1 -> 狐狸, 4 -> 才, 6 -> 驯服, 0 -> 说-02, 3 -> 会-03),Map(驯 -> 驯服, 了 -> 了解-02, 才 -> 才, 事 -> 事物, 会 -> 会-03, 只 -> 只有-01, 说 -> 说-02, 狐 -> 狐狸))),[Ljava.lang.String;@2e26173,Annotation([Ljava.lang.String;@27be17c8,[Ljava.lang.String;@2c413ffc,[Ljava.lang.String;@7d21852b),Annotation([Ljava.lang.String;@6cd98a05,[Ljava.lang.String;@3b8ec001,[Ledu.cmu.lti.nlp.amr.Dependency;@1e95b653),Annotation([Ljava.lang.String;@6f6c6077,[Ljava.lang.String;@4fc5563d,[Ljava.lang.String;@286090c),Annotation([Ljava.lang.String;@31120021,[Ljava.lang.String;@3df1a1ac,[Ledu.cmu.lti.nlp.amr.Entity;@58606c91))
AMR:
(了 / 了解-02, time, 会 / 会-03)
(事 / 事物, mod, 驯 / 驯服)
(会 / 会-03, location, 事 / 事物)
(会 / 会-03, manner, 才 / 才)
(只 / 只有-01, location, 驯 / 驯服)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, topic, 了 / 了解-02)

Decoded in 20,902 microseconds
Sentence: “ 人 不 会 再 有 时间 去 了解 任何 东西 的 。

Spans:
Span 2-3:  不 => 不
Span 10-11:  东西 => 东西
Span 8-9:  了解 => 了解-02
Span 1-2:  人 => 人
Span 9-10:  任何 => 任何
Span 3-4:  会 => 会-03
Span 4-5:  再 => 再
Span 7-8:  去 => 去-02
Span 6-7:  时间 => 时间
Span 5-6:  有 => 有-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  东西 => 东西
Oracle Span 8-9:  了解 => 了解-02
Oracle Span 1-2:  人 => 人
Oracle Span 9-10:  任何 => 任何
Oracle Span 3-4:  会 => 会-02
Oracle Span 4-5:  再 => 再
Oracle Span 7-8:  去 => 去-01
Oracle Span 6-7:  时间 => 时间
Oracle Span 5-6:  有 => 有-01

Incorrect span: 去 => 去-02
Incorrect span: 有 => 有-06
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Missing span: 会 => 会-02
Missing span: 有 => 有-01
Missing span: 去 => 去-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	人	_	NN	NN	_	6	nsubj	_	_
3	不	_	AD	AD	_	6	neg	_	_
4	会	_	VV	VV	_	6	mmod	_	_
5	再	_	AD	AD	_	6	advmod	_	_
6	有	_	VE	VE	_	0	root	_	_
7	时间	_	NN	NN	_	9	nsubj	_	_
8	去	_	MSP	MSP	_	9	prtmod	_	_
9	了解	_	VV	VV	_	6	dobj	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	东西	_	NN	NN	_	9	dobj	_	_
12	的	_	DEC	DEC	_	9	cpm	_	_
13	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x13 / 会-02, arg0, x15 / 有-01)
(x15 / 有-01, arg0, x17 / 人)
(x15 / 有-01, arg1, x18 / 时间)
(x15 / 有-01, manner, x16 / 再)
(x15 / 有-01, purpose, x19 / 去-01)
(x19 / 去-01, arg1, x21 / 了解-02)
(x21 / 了解-02, arg1, x23 / 东西)
(x23 / 东西, mod, x24 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),东西,东西,false), Span(9,10,List(1),任何,任何,false), Span(8,9,List(2),了解,了解-02,false), Span(7,8,List(3),去,去-02,false), Span(6,7,List(4),时间,时间,false), Span(5,6,List(5),有,有-06,false), Span(4,5,List(6),再,再,false), Span(3,4,List(7),会,会-03,false), Span(2,3,List(8),不,不,false), Span(1,2,List(9),人,人,false)),Map(2 -> 了解-02, 5 -> 有-06, 8 -> 不, 7 -> 会-03, 1 -> 任何, 4 -> 时间, 6 -> 再, 9 -> 人, 0 -> 东西, 3 -> 去-02),Map(了 -> 了解-02, 任 -> 任何, 去 -> 去-02, 东 -> 东西, 不 -> 不, 会 -> 会-03, 人 -> 人, 时 -> 时间, 再 -> 再, 有 -> 有-06))),[Ljava.lang.String;@6a9cd0f8,Annotation([Ljava.lang.String;@4baed682,[Ljava.lang.String;@7be2f29a,[Ljava.lang.String;@203d1d93),Annotation([Ljava.lang.String;@2c2a027c,[Ljava.lang.String;@118dcbbd,[Ledu.cmu.lti.nlp.amr.Dependency;@7d979d34),Annotation([Ljava.lang.String;@350ec690,[Ljava.lang.String;@49cb1baf,[Ljava.lang.String;@3664f108),Annotation([Ljava.lang.String;@77dba4cd,[Ljava.lang.String;@34a2d6e0,[Ledu.cmu.lti.nlp.amr.Entity;@2525a5b8))
AMR:
(东 / 东西, location, 了 / 了解-02)
(东 / 东西, mod, 任 / 任何)
(了 / 了解-02, time, 去 / 去-02)
(人 / 人, location, 不 / 不)
(会 / 会-03, location, 不 / 不)
(会 / 会-03, prep-through, 有 / 有-06)
(时 / 时间, mod, 有 / 有-06)
(有 / 有-06, manner, 再 / 再)
(有 / 有-06, purpose, 去 / 去-02)

Decoded in 27,229 microseconds
Sentence: 他们 总是 到 商人 那里 去 购买 现成 的 东西 。

Spans:
Span 9-10:  东西 => 东西
Span 0-1:  他们 => 他们
Span 2-3:  到 => 到-01
Span 5-6:  去 => 去-02
Span 3-4:  商人 => 商人
Span 1-2:  总是 => 总是
Span 7-8:  现成 => 现成
Span 6-7:  购买 => 购买-01
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  东西 => 东西
Oracle Span 0-1:  他们 => 他们
Oracle Span 2-3:  到 => 到-01
Oracle Span 3-4:  商人 => 商人
Oracle Span 1-2:  总是 => 总是
Oracle Span 7-8:  现成 => 现成
Oracle Span 6-7:  购买 => 购买-01
Oracle Span 4-5:  那里 => 那里

Extra span: 去 => 去-02
Dependencies:
1	他们	_	PN	PN	_	3	nsubj	_	_
2	总是	_	AD	AD	_	3	advmod	_	_
3	到	_	VV	VV	_	0	root	_	_
4	商人	_	NN	NN	_	3	dobj	_	_
5	那里	_	PN	PN	_	7	nsubj	_	_
6	去	_	MSP	MSP	_	7	prtmod	_	_
7	购买	_	VV	VV	_	3	conj	_	_
8	现成	_	JJ	JJ	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	东西	_	NN	NN	_	7	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 到-01, arg0, x2 / 他们)
(x0 / 到-01, arg1, x3 / 那里)
(x0 / 到-01, manner, x5 / 总是)
(x0 / 到-01, purpose, x6 / 购买-01)
(x3 / 那里, mod, x4 / 商人)
(x6 / 购买-01, arg1, x8 / 东西)
(x8 / 东西, mod, x9 / 现成)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),东西,东西,false), Span(7,8,List(1),现成,现成,false), Span(6,7,List(2),购买,购买-01,false), Span(5,6,List(3),去,去-02,false), Span(4,5,List(4),那里,那里,false), Span(3,4,List(5),商人,商人,false), Span(2,3,List(6),到,到-01,false), Span(1,2,List(7),总是,总是,false), Span(0,1,List(8),他们,他们,false)),Map(2 -> 购买-01, 5 -> 商人, 8 -> 他们, 7 -> 总是, 1 -> 现成, 4 -> 那里, 6 -> 到-01, 0 -> 东西, 3 -> 去-02),Map(购 -> 购买-01, 总 -> 总是, 商 -> 商人, 去 -> 去-02, 他 -> 他们, 东 -> 东西, 到 -> 到-01, 那 -> 那里, 现 -> 现成))),[Ljava.lang.String;@3458eca5,Annotation([Ljava.lang.String;@1e0fdb2f,[Ljava.lang.String;@3c380bd8,[Ljava.lang.String;@34b87182),Annotation([Ljava.lang.String;@47768e74,[Ljava.lang.String;@2740e316,[Ledu.cmu.lti.nlp.amr.Dependency;@5b5a4aed),Annotation([Ljava.lang.String;@2c991465,[Ljava.lang.String;@5fef2aac,[Ljava.lang.String;@7f973a14),Annotation([Ljava.lang.String;@76130a29,[Ljava.lang.String;@124d02b2,[Ledu.cmu.lti.nlp.amr.Entity;@3451f01d))
AMR:
(东 / 东西, mod, 现 / 现成)
(到 / 到-01, ARG0, 那 / 那里)
(到 / 到-01, ARG6, 他 / 他们)
(到 / 到-01, manner, 总 / 总是)
(到 / 到-01, purpose, 购 / 购买-01)
(去 / 去-02, prep-through, 购 / 购买-01)
(购 / 购买-01, ARG0, 东 / 东西)
(那 / 那里, mod, 商 / 商人)

Decoded in 40,390 microseconds
Sentence: 因为 世界 上 还 没有 购买 朋友 的 商店 ， 所以 人 也 就 没有 朋友 。

Spans:
Span 1-2:  世界 => 世界
Span 12-13:  也 => 也
Span 11-12:  人 => 人
Span 8-9:  商店 => 商店
Span 13-14:  就 => 就-01
Span 15-16:  朋友 => 朋友
Span 6-7:  朋友 => 朋友
Span 5-6:  购买 => 购买-01
Span 3-4:  还 => 还

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  世界 => 世界
Oracle Span 12-13:  也 => 也
Oracle Span 11-12:  人 => 人
Oracle Span 8-9:  商店 => 商店
Oracle Span 13-14:  就 => 就
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 15-16:  朋友 => 朋友
Oracle Span 5-6:  购买 => 购买-01

Incorrect span: 就 => 就-01
Extra span: 还 => 还
Missing span: 就 => 就
Dependencies:
1	因为	_	P	P	_	15	prep	_	_
2	世界	_	NN	NN	_	3	lobj	_	_
3	上	_	LC	LC	_	5	loc	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	1	pccomp	_	_
6	购买	_	VV	VV	_	9	rcmod	_	_
7	朋友	_	NN	NN	_	6	dobj	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	商店	_	NN	NN	_	5	dobj	_	_
10	,	_	PU	PU	_	15	punct	_	_
11	所以	_	AD	AD	_	15	advmod	_	_
12	人	_	NN	NN	_	15	nsubj	_	_
13	也	_	AD	AD	_	15	advmod	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	没有	_	VE	VE	_	0	root	_	_
16	朋友	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x25 / 购买-01, arg1, x26 / 朋友)
(x25 / 购买-01, location, x17 / 商店)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),朋友,朋友,false), Span(13,14,List(1),就,就-01,false), Span(12,13,List(2),也,也,false), Span(11,12,List(3),人,人,false), Span(8,9,List(4),商店,商店,false), Span(6,7,List(5),朋友,朋友,false), Span(5,6,List(6),购买,购买-01,false), Span(3,4,List(7),还,还,false), Span(1,2,List(8),世界,世界,false)),Map(2 -> 也, 5 -> 朋友, 8 -> 世界, 7 -> 还, 1 -> 就-01, 4 -> 商店, 6 -> 购买-01, 0 -> 朋友, 3 -> 人),Map(购 -> 购买-01, 就 -> 就-01, 也 -> 也, 朋 -> 朋友, 朋2 -> 朋友, 商 -> 商店, 世 -> 世界, 还 -> 还, 人 -> 人))),[Ljava.lang.String;@72503b19,Annotation([Ljava.lang.String;@1cfc2538,[Ljava.lang.String;@66deec87,[Ljava.lang.String;@5d342959),Annotation([Ljava.lang.String;@2ecf5915,[Ljava.lang.String;@53e76c11,[Ledu.cmu.lti.nlp.amr.Dependency;@42cc183e),Annotation([Ljava.lang.String;@3e4e8fdf,[Ljava.lang.String;@6a1d6ef2,[Ljava.lang.String;@2721044),Annotation([Ljava.lang.String;@205df5dc,[Ljava.lang.String;@6aa7b67f,[Ledu.cmu.lti.nlp.amr.Entity;@6bcc3f27))
AMR:
(世 / 世界, location, 还 / 还)
(也 / 也, ARG4, 就 / 就-01)
(商 / 商店, mod, 就 / 就-01)
(就 / 就-01, ARG0, 朋 / 朋友)
(就 / 就-01, ARG2, 人 / 人)
(购 / 购买-01, location, 商 / 商店)
(购 / 购买-01, quant, 朋2 / 朋友)
(还 / 还, timezone, 购 / 购买-01)

Decoded in 48,763 microseconds
Sentence: 如果 你 想 要 一 个 朋友 ， 那 就 驯服 我 吧 ！ ”

Spans:
Span 1-2:  你 => 你
Span 9-10:  就 => 就-01
Span 2-3:  想 => 想-05
Span 11-12:  我 => 我
Span 6-7:  朋友 => 朋友
Span 3-4:  要 => 要-02
Span 8-9:  那 => 那
Span 10-11:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 11-12:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 10-11:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Extra span: 就 => 就-01
Extra span: 那 => 那
Extra span: 要 => 要-02
Extra span: 想 => 想-05
Missing span: 驯服 => 驯服-01
Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	想	_	VV	VV	_	11	pccomp	_	_
4	要	_	VV	VV	_	3	ccomp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	7	clf	_	_
7	朋友	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	11	punct	_	_
9	那	_	PN	PN	_	11	nsubj	_	_
10	就	_	AD	AD	_	11	advmod	_	_
11	驯服	_	VV	VV	_	0	root	_	_
12	我	_	PN	PN	_	11	dobj	_	_
13	吧	_	SP	SP	_	11	dep	_	_
14	！	_	PU	PU	_	11	punct	_	_
15	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x18 / 驯服-01, arg1, x20 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),我,我,false), Span(10,11,List(1),驯服,驯服,false), Span(9,10,List(2),就,就-01,false), Span(8,9,List(3),那,那,false), Span(6,7,List(4),朋友,朋友,false), Span(3,4,List(5),要,要-02,false), Span(2,3,List(6),想,想-05,false), Span(1,2,List(7),你,你,false)),Map(2 -> 就-01, 5 -> 要-02, 7 -> 你, 1 -> 驯服, 4 -> 朋友, 6 -> 想-05, 0 -> 我, 3 -> 那),Map(就 -> 就-01, 驯 -> 驯服, 朋 -> 朋友, 我 -> 我, 要 -> 要-02, 你 -> 你, 那 -> 那, 想 -> 想-05))),[Ljava.lang.String;@79aee22a,Annotation([Ljava.lang.String;@36920bd6,[Ljava.lang.String;@61514735,[Ljava.lang.String;@6bee793f),Annotation([Ljava.lang.String;@655f69da,[Ljava.lang.String;@43b5021c,[Ledu.cmu.lti.nlp.amr.Dependency;@28369db0),Annotation([Ljava.lang.String;@30893e08,[Ljava.lang.String;@2e86807a,[Ljava.lang.String;@4548d254),Annotation([Ljava.lang.String;@590f0c50,[Ljava.lang.String;@208f0007,[Ledu.cmu.lti.nlp.amr.Entity;@3a90c13c))
AMR:
(就 / 就-01, mod, 那 / 那)
(想 / 想-05, time, 你 / 你)
(朋 / 朋友, prep-on-behalf, 就 / 就-01)
(要 / 要-02, prep-on-behalf, 朋 / 朋友)
(要 / 要-02, time, 想 / 想-05)
(驯 / 驯服, decade, 我 / 我)
(驯 / 驯服, mod, 就 / 就-01)

Decoded in 24,039 microseconds
Sentence: “ 那么 应当 做 些 什么 呢 ？ ” 小 王子 说 。

Spans:
Span 4-5:  些 => 些
Span 5-6:  什么 => 什么
Span 3-4:  做 => 做-04
Span 9-10:  小 => 小
Span 2-3:  应当 => 应当-01
Span 10-11:  王子 => 王子
Span 11-12:  说 => 说-02
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  做 => 做-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 2-3:  应当 => 应当-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 什么 => 什么
Extra span: 些 => 些
Incorrect span: 做 => 做-04
Extra span: 那么 => 那么
Missing span: 说 => 说-01
Missing span: 做 => 做-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	那么	_	AD	AD	_	3	advmod	_	_
3	应当	_	VV	VV	_	12	dep	_	_
4	做	_	VV	VV	_	3	dobj	_	_
5	些	_	M	M	_	6	dep	_	_
6	什么	_	PN	PN	_	4	dobj	_	_
7	呢	_	SP	SP	_	4	dep	_	_
8	？	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 应当-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 应当-01, arg0, x5 / 做-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),王子,王子,false), Span(9,10,List(2),小,小,false), Span(5,6,List(3),什么,什么,false), Span(4,5,List(4),些,些,false), Span(3,4,List(5),做,做-04,false), Span(2,3,List(6),应当,应当-01,false), Span(1,2,List(7),那么,那么,false)),Map(2 -> 小, 5 -> 做-04, 7 -> 那么, 1 -> 王子, 4 -> 些, 6 -> 应当-01, 0 -> 说-02, 3 -> 什么),Map(些 -> 些, 王 -> 王子, 小 -> 小, 说 -> 说-02, 做 -> 做-04, 那 -> 那么, 什 -> 什么, 应 -> 应当-01))),[Ljava.lang.String;@39c96e48,Annotation([Ljava.lang.String;@188598ad,[Ljava.lang.String;@40d23c82,[Ljava.lang.String;@7cf78c85),Annotation([Ljava.lang.String;@ebe067d,[Ljava.lang.String;@3a4ab7f7,[Ledu.cmu.lti.nlp.amr.Dependency;@6badba10),Annotation([Ljava.lang.String;@2b7e8044,[Ljava.lang.String;@550de6b8,[Ljava.lang.String;@3a1706e1),Annotation([Ljava.lang.String;@3c6c4689,[Ljava.lang.String;@63cf9de0,[Ledu.cmu.lti.nlp.amr.Entity;@594d9f07))
AMR:
(些 / 些, mod, 什 / 什么)
(些 / 些, mod, 做 / 做-04)
(做 / 做-04, manner, 应 / 应当-01)
(应 / 应当-01, degree, 那 / 那么)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 应 / 应当-01)

Decoded in 18,767 microseconds
Sentence: “ 应当 非常 耐心 。 ” 狐狸 回答 道 ，

Spans:
Span 7-8:  回答 => 回答-01
Span 1-2:  应当 => 应当-01
Span 6-7:  狐狸 => 狐狸
Span 3-4:  耐心 => 耐心-01
Span 8-9:  道 => 道-01
Span 2-3:  非常 => 非常

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  回答 => 回答-01
Oracle Span 1-2:  应当 => 应当-01
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 3-4:  耐心 => 耐心-01
Oracle Span 2-3:  非常 => 非常-01

Extra span: 道 => 道-01
Incorrect span: 非常 => 非常
Missing span: 非常 => 非常-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	应当	_	VV	VV	_	4	mmod	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	耐心	_	VV	VV	_	5	rcmod	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	9	nsubj	_	_
8	回答	_	VV	VV	_	9	mmod	_	_
9	道	_	CD	CD	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 狐狸)
(x0 / 回答-01, arg2, x3 / 应当-01)
(x3 / 应当-01, arg0, x4 / 耐心-01)
(x4 / 耐心-01, degree, x5 / 非常-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),道,道-01,false), Span(7,8,List(1),回答,回答-01,false), Span(6,7,List(2),狐狸,狐狸,false), Span(3,4,List(3),耐心,耐心-01,false), Span(2,3,List(4),非常,非常,false), Span(1,2,List(5),应当,应当-01,false)),Map(2 -> 狐狸, 5 -> 应当-01, 1 -> 回答-01, 4 -> 非常, 0 -> 道-01, 3 -> 耐心-01),Map(非 -> 非常, 耐 -> 耐心-01, 道 -> 道-01, 狐 -> 狐狸, 应 -> 应当-01, 回 -> 回答-01))),[Ljava.lang.String;@5befbac1,Annotation([Ljava.lang.String;@5e9f73b,[Ljava.lang.String;@1a565afb,[Ljava.lang.String;@2fd64b11),Annotation([Ljava.lang.String;@949c598,[Ljava.lang.String;@43d3aba5,[Ledu.cmu.lti.nlp.amr.Dependency;@6bfaa0a6),Annotation([Ljava.lang.String;@76e9f00b,[Ljava.lang.String;@314b9e4b,[Ljava.lang.String;@6f1b8544),Annotation([Ljava.lang.String;@51dae791,[Ljava.lang.String;@688a2c09,[Ledu.cmu.lti.nlp.amr.Entity;@5de5e95))
AMR:
(回 / 回答-01, example, 狐 / 狐狸)
(应 / 应当-01, degree, 非 / 非常)
(耐 / 耐心-01, degree, 非 / 非常)
(道 / 道-01, degree, 回 / 回答-01)
(道 / 道-01, degree, 耐 / 耐心-01)

Decoded in 11,838 microseconds
Sentence: “ 开始 你 就 这样 坐 在 草丛 中 ， 坐 得 离 我 稍微 远 些 。

Spans:
Span 16-17:  些 => 些
Span 2-3:  你 => 你
Span 6-7:  在 => 在-01
Span 10-11:  坐 => 坐-03
Span 5-6:  坐 => 坐-03
Span 3-4:  就 => 就-01
Span 1-2:  开始 => 开始
Span 11-12:  得 => 得-06
Span 13-14:  我 => 我
Span 12-13:  离 => 离-02
Span 14-15:  稍微 => 稍微
Span 7-8:  草丛 => 草丛
Span 4-5:  这样 => 这样-01
Span 15-16:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 5-6:  坐 => 坐-01
Oracle Span 3-4:  就 => 就
Oracle Span 1-2:  开始 => 开始
Oracle Span 13-14:  我 => 我
Oracle Span 12-13:  离 => 离-02
Oracle Span 14-15:  稍微 => 稍微
Oracle Span 7-8:  草丛 => 草丛
Oracle Span 4-5:  这样 => 这样
Oracle Span 15-16:  远 => 远-01

Extra span: 些 => 些
Incorrect span: 远 => 远
Extra span: 得 => 得-06
Extra span: 坐 => 坐-03
Extra span: 在 => 在-01
Incorrect span: 坐 => 坐-03
Incorrect span: 这样 => 这样-01
Incorrect span: 就 => 就-01
Missing span: 坐 => 坐-01
Missing span: 远 => 远-01
Missing span: 就 => 就
Missing span: 这样 => 这样
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	开始	_	VV	VV	_	6	dep	_	_
3	你	_	PN	PN	_	6	nsubj	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	这样	_	AD	AD	_	6	advmod	_	_
6	坐	_	VV	VV	_	0	root	_	_
7	在	_	P	P	_	6	prep	_	_
8	草丛	_	NN	NN	_	9	lobj	_	_
9	中	_	LC	LC	_	7	plmod	_	_
10	,	_	PU	PU	_	6	punct	_	_
11	坐	_	VV	VV	_	16	dep	_	_
12	得	_	DER	DER	_	16	dep	_	_
13	离	_	P	P	_	16	prep	_	_
14	我	_	PN	PN	_	13	pobj	_	_
15	稍微	_	AD	AD	_	16	advmod	_	_
16	远	_	VA	VA	_	6	conj	_	_
17	些	_	M	M	_	16	dep	_	_
18	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x29 / 坐-01, arg0, x32 / 你)
(x29 / 坐-01, arg1, x33 / 草丛)
(x29 / 坐-01, manner, x30 / 这样)
(x29 / 坐-01, manner, x31 / 就)
(x29 / 坐-01, manner, x35 / 离-02)
(x29 / 坐-01, time, x34 / 开始)
(x35 / 离-02, arg1, x37 / 我)
(x35 / 离-02, arg2, x38 / 远-01)
(x38 / 远-01, degree, x39 / 稍微)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),些,些,false), Span(15,16,List(1),远,远,false), Span(14,15,List(2),稍微,稍微,false), Span(13,14,List(3),我,我,false), Span(12,13,List(4),离,离-02,false), Span(11,12,List(5),得,得-06,false), Span(10,11,List(6),坐,坐-03,false), Span(7,8,List(7),草丛,草丛,false), Span(6,7,List(8),在,在-01,false), Span(5,6,List(9),坐,坐-03,false), Span(4,5,List(10),这样,这样-01,false), Span(3,4,List(11),就,就-01,false), Span(2,3,List(12),你,你,false), Span(1,2,List(13),开始,开始,false)),Map(2 -> 稍微, 5 -> 得-06, 12 -> 你, 8 -> 在-01, 7 -> 草丛, 1 -> 远, 4 -> 离-02, 11 -> 就-01, 6 -> 坐-03, 0 -> 些, 9 -> 坐-03, 3 -> 我, 10 -> 这样-01, 13 -> 开始),Map(就 -> 就-01, 稍 -> 稍微, 些 -> 些, 在 -> 在-01, 我 -> 我, 得 -> 得-06, 这 -> 这样-01, 远 -> 远, 你 -> 你, 坐2 -> 坐-03, 离 -> 离-02, 开 -> 开始, 草 -> 草丛, 坐 -> 坐-03))),[Ljava.lang.String;@365cdacf,Annotation([Ljava.lang.String;@303c55fa,[Ljava.lang.String;@9efcd90,[Ljava.lang.String;@7eb200ce),Annotation([Ljava.lang.String;@2ee83775,[Ljava.lang.String;@7c2924d7,[Ledu.cmu.lti.nlp.amr.Dependency;@b5de58f),Annotation([Ljava.lang.String;@6587305a,[Ljava.lang.String;@abbe000,[Ljava.lang.String;@3f81621c),Annotation([Ljava.lang.String;@5b9499fe,[Ljava.lang.String;@74d6736,[Ledu.cmu.lti.nlp.amr.Entity;@52a33c3f))
AMR:
(些 / 些, mod, 远 / 远)
(在 / 在-01, degree, 坐2 / 坐-03)
(在 / 在-01, purpose, 坐 / 坐-03)
(坐2 / 坐-03, degree, 这 / 这样-01)
(就 / 就-01, degree, 你 / 你)
(就 / 就-01, time, 开 / 开始)
(得 / 得-06, degree, 坐 / 坐-03)
(得 / 得-06, purpose, 离 / 离-02)
(离 / 离-02, location, 稍 / 稍微)
(离 / 离-02, subset, 我 / 我)
(草 / 草丛, mod, 在 / 在-01)
(这 / 这样-01, manner, 就 / 就-01)
(远 / 远, degree, 稍 / 稍微)

Decoded in 52,376 microseconds
Sentence: 我 用 眼角 瞅着 你 ， 你 什么 也 不 要 说 。

Spans:
Span 9-10:  不 => 不
Span 8-9:  也 => 也
Span 7-8:  什么 => 什么
Span 6-7:  你 => 你
Span 4-5:  你 => 你
Span 0-1:  我 => 我
Span 1-2:  用 => 用
Span 2-3:  眼角 => 眼角
Span 10-11:  要 => 要-02
Span 11-12:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 7-8:  什么 => 什么
Oracle Span 4-5:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  眼角 => 眼角
Oracle Span 10-11:  要 => 要-03
Oracle Span 11-12:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 要 => 要-02
Extra span: 不 => 不
Extra span: 你 => 你
Extra span: 用 => 用
Missing span: 要 => 要-03
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	用	_	P	P	_	4	prep	_	_
3	眼角	_	NN	NN	_	2	pobj	_	_
4	瞅着	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	12	nsubj	_	_
8	什么	_	PN	PN	_	12	nsubj	_	_
9	也	_	AD	AD	_	12	advmod	_	_
10	不	_	AD	AD	_	12	neg	_	_
11	要	_	VV	VV	_	12	dep	_	_
12	说	_	VV	VV	_	4	conj	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 说-01, arg1, x14 / 什么)
(x8 / 要-03, arg0, x10 / 说-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),要,要-02,false), Span(9,10,List(2),不,不,false), Span(8,9,List(3),也,也,false), Span(7,8,List(4),什么,什么,false), Span(6,7,List(5),你,你,false), Span(4,5,List(6),你,你,false), Span(2,3,List(7),眼角,眼角,false), Span(1,2,List(8),用,用,false), Span(0,1,List(9),我,我,false)),Map(2 -> 不, 5 -> 你, 8 -> 用, 7 -> 眼角, 1 -> 要-02, 4 -> 什么, 6 -> 你, 9 -> 我, 0 -> 说-02, 3 -> 也),Map(用 -> 用, 我 -> 我, 眼 -> 眼角, 也 -> 也, 要 -> 要-02, 你 -> 你, 不 -> 不, 你2 -> 你, 说 -> 说-02, 什 -> 什么))),[Ljava.lang.String;@668625f5,Annotation([Ljava.lang.String;@19a20bb2,[Ljava.lang.String;@75babb67,[Ljava.lang.String;@3eb3232b),Annotation([Ljava.lang.String;@69cd1085,[Ljava.lang.String;@60bb7995,[Ledu.cmu.lti.nlp.amr.Dependency;@40fa8766),Annotation([Ljava.lang.String;@67774e29,[Ljava.lang.String;@663f237a,[Ljava.lang.String;@5d7399f9),Annotation([Ljava.lang.String;@49a6f486,[Ljava.lang.String;@14fded9d,[Ledu.cmu.lti.nlp.amr.Entity;@bc6288b))
AMR:
(不 / 不, location, 你 / 你)
(你2 / 你, location, 你 / 你)
(用 / 用, ARG5, 我 / 我)
(用 / 用, location, 你2 / 你)
(用 / 用, quant, 眼 / 眼角)
(要 / 要-02, compared-to, 说 / 说-02)
(要 / 要-02, manner, 不 / 不)
(要 / 要-02, time, 也 / 也)
(说 / 说-02, prep-from, 什 / 什么)

Decoded in 27,736 microseconds
Sentence: 话语 是 误会 的 根源 。

Spans:
Span 1-2:  是 => 是-04
Span 4-5:  根源 => 根源
Span 0-1:  话语 => 话语
Span 2-3:  误会 => 误会-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
Oracle Span 4-5:  根源 => 根源
Oracle Span 0-1:  话语 => 话语
Oracle Span 2-3:  误会 => 误会-01

Extra span: 是 => 是-04
Dependencies:
1	话语	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	误会	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	根源	_	NN	NN	_	2	attr	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 根源, domain, x3 / 话语)
(x0 / 根源, mod, x2 / 误会-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),根源,根源,false), Span(2,3,List(1),误会,误会-01,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),话语,话语,false)),Map(2 -> 是-04, 1 -> 误会-01, 0 -> 根源, 3 -> 话语),Map(话 -> 话语, 误 -> 误会-01, 根 -> 根源, 是 -> 是-04))),[Ljava.lang.String;@4a3bd45b,Annotation([Ljava.lang.String;@34c70b5e,[Ljava.lang.String;@4f2d995e,[Ljava.lang.String;@75156240),Annotation([Ljava.lang.String;@6198e9b5,[Ljava.lang.String;@6d099323,[Ledu.cmu.lti.nlp.amr.Dependency;@4ecd00b5),Annotation([Ljava.lang.String;@10947c4e,[Ljava.lang.String;@3667faa8,[Ljava.lang.String;@1756f7cc),Annotation([Ljava.lang.String;@3138953b,[Ljava.lang.String;@27df95e,[Ledu.cmu.lti.nlp.amr.Entity;@b46e103))
AMR:
(是 / 是-04, ARG3, 话 / 话语)
(根 / 根源, mod, 误 / 误会-01)
(误 / 误会-01, ARG1, 是 / 是-04)

Decoded in 7,480 microseconds
Sentence: 但是 ， 每 天 ， 你 坐 得 靠 我 更 近 些 … ”

Spans:
Span 12-13:  些 => 些
Span 5-6:  你 => 你
Span 6-7:  坐 => 坐-03
Span 3-4:  天 => (temporal-quantity :unit 天)
Span 7-8:  得 => 得-06
Span 9-10:  我 => 我
Span 10-11:  更 => 更-01
Span 2-3:  每 => 每
Span 11-12:  近 => 近-01
Span 8-9:  靠 => 靠-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 6-7:  坐 => 坐-01
Oracle Span 3-4:  天 => 天
Oracle Span 9-10:  我 => 我
Oracle Span 10-11:  更 => 更
Oracle Span 2-3:  每 => 每
Oracle Span 11-12:  近 => 近-01
Oracle Span 8-9:  靠 => 靠-03

Extra span: 些 => 些
Incorrect span: 更 => 更-01
Extra span: 得 => 得-06
Incorrect span: 坐 => 坐-03
Incorrect span: 天 => (temporal-quantity :unit 天)
Missing span: 坐 => 坐-01
Missing span: 天 => 天
Missing span: 更 => 更
Dependencies:
1	但是	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	每	_	DT	DT	_	14	dep	_	_
4	天	_	M	M	_	3	clf	_	_
5	,	_	PU	PU	_	14	punct	_	_
6	你	_	PN	PN	_	14	nsubj	_	_
7	坐	_	VV	VV	_	14	dep	_	_
8	得	_	DER	DER	_	14	dep	_	_
9	靠	_	P	P	_	14	prep	_	_
10	我	_	PN	PN	_	9	pobj	_	_
11	更	_	AD	AD	_	14	advmod	_	_
12	近	_	AD	AD	_	13	advmod	_	_
13	些	_	CD	CD	_	14	dep	_	_
14	…	_	VV	VV	_	0	root	_	_
15	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x15 / 坐-01, arg0, x16 / 你)
(x15 / 坐-01, frequency, x22 / 天)
(x15 / 坐-01, manner, x17 / 靠-03)
(x17 / 靠-03, arg1, x19 / 我)
(x17 / 靠-03, manner, x20 / 近-01)
(x20 / 近-01, degree, x21 / 更)
(x22 / 天, mod, x23 / 每)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),些,些,false), Span(11,12,List(1),近,近-01,false), Span(10,11,List(2),更,更-01,false), Span(9,10,List(3),我,我,false), Span(8,9,List(4),靠,靠-03,false), Span(7,8,List(5),得,得-06,false), Span(6,7,List(6),坐,坐-03,false), Span(5,6,List(7),你,你,false), Span(3,4,List(9, 8),天,(temporal-quantity :unit 天),false), Span(2,3,List(10),每,每,false)),Map(2 -> 更-01, 5 -> 得-06, 8 -> temporal-quantity, 7 -> 你, 1 -> 近-01, 4 -> 靠-03, 6 -> 坐-03, 9 -> 天, 0 -> 些, 10 -> 每, 3 -> 我),Map(靠 -> 靠-03, 近 -> 近-01, t -> temporal-quantity, 些 -> 些, 我 -> 我, 得 -> 得-06, 你 -> 你, 每 -> 每, 天 -> 天, 坐 -> 坐-03, 更 -> 更-01))),[Ljava.lang.String;@2b0e9f30,Annotation([Ljava.lang.String;@5eea5627,[Ljava.lang.String;@3330f3ad,[Ljava.lang.String;@f425231),Annotation([Ljava.lang.String;@506aabf6,[Ljava.lang.String;@5cbd94b2,[Ledu.cmu.lti.nlp.amr.Dependency;@6824b913),Annotation([Ljava.lang.String;@756aadfc,[Ljava.lang.String;@705a8dbc,[Ljava.lang.String;@40729f01),Annotation([Ljava.lang.String;@d535a3d,[Ljava.lang.String;@2d760326,[Ledu.cmu.lti.nlp.amr.Entity;@9e54c59))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(些 / 些, manner, 近 / 近-01)
(坐 / 坐-03, frequency, t / temporal-quantity)
(坐 / 坐-03, manner, 你 / 你)
(天 / 天, mod, 每 / 每)
(得 / 得-06, manner, 坐 / 坐-03)
(更 / 更-01, manner, 近 / 近-01)
(靠 / 靠-03, manner, 得 / 得-06)
(靠 / 靠-03, manner, 近 / 近-01)
(靠 / 靠-03, prep-at, 我 / 我)

Decoded in 37,208 microseconds
Sentence: 第二 天 ， 小 王子 又 来 了 。

Spans:
Span 5-6:  又 => 又
Span 1-2:  天 => (temporal-quantity :unit 天)
Span 3-4:  小 => 小
Span 6-7:  来 => 来-06
Span 4-5:  王子 => 王子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  又 => 又
Oracle Span 1-2:  天 => 天
Oracle Span 3-4:  小 => 小-01
Oracle Span 6-7:  来 => 来-01
Oracle Span 4-5:  王子 => 王子

Incorrect span: 来 => 来-06
Incorrect span: 小 => 小
Incorrect span: 天 => (temporal-quantity :unit 天)
Missing span: 来 => 来-01
Missing span: 天 => 天
Missing span: 小 => 小-01
Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	7	nsubj	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	来	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 来-01, arg0, x3 / 王子)
(x0 / 来-01, manner, x2 / 又)
(x0 / 来-01, time, x5 / 天)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),来,来-06,false), Span(5,6,List(1),又,又,false), Span(4,5,List(2),王子,王子,false), Span(3,4,List(3),小,小,false), Span(1,2,List(5, 4),天,(temporal-quantity :unit 天),false)),Map(2 -> 王子, 5 -> 天, 1 -> 又, 4 -> temporal-quantity, 0 -> 来-06, 3 -> 小),Map(又 -> 又, t -> temporal-quantity, 来 -> 来-06, 王 -> 王子, 小 -> 小, 天 -> 天))),[Ljava.lang.String;@5dbb50f3,Annotation([Ljava.lang.String;@4a2e7bcb,[Ljava.lang.String;@575c3e9b,[Ljava.lang.String;@74f827ad),Annotation([Ljava.lang.String;@73c3cd09,[Ljava.lang.String;@4a8a0099,[Ledu.cmu.lti.nlp.amr.Dependency;@7c1447b5),Annotation([Ljava.lang.String;@49e4c2d5,[Ljava.lang.String;@24a2e565,[Ljava.lang.String;@3e36b7a0),Annotation([Ljava.lang.String;@60c1663c,[Ljava.lang.String;@f5cf29b,[Ledu.cmu.lti.nlp.amr.Entity;@3c66b7d8))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(来 / 来-06, manner, 又 / 又)
(来 / 来-06, time, t / temporal-quantity)
(来 / 来-06, value, 王 / 王子)
(王 / 王子, mod, 小 / 小)

Decoded in 13,252 microseconds
Sentence: “ 最好 还是 在 原来 的 那个 时间 来 。 ” 狐狸 说道 ，

Spans:
Span 4-5:  原来 => 原来-01
Span 3-4:  在 => 在-01
Span 7-8:  时间 => 时间
Span 1-2:  最好 => 最好
Span 8-9:  来 => 来-06
Span 11-12:  狐狸 => 狐狸
Span 12-13:  说道 => 说道
Span 2-3:  还是 => 还是
Span 6-7:  那个 => 那个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  原来 => 原来-01
Oracle Span 7-8:  时间 => 时间
Oracle Span 1-2:  最好 => 最好
Oracle Span 8-9:  来 => 来-01
Oracle Span 11-12:  狐狸 => 狐狸
Oracle Span 12-13:  说道 => 说道-01
Oracle Span 2-3:  还是 => 还是

Incorrect span: 说道 => 说道
Incorrect span: 来 => 来-06
Extra span: 那个 => 那个
Extra span: 在 => 在-01
Missing span: 说道 => 说道-01
Missing span: 来 => 来-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	最好	_	JJ	JJ	_	0	root	_	_
3	还是	_	CC	CC	_	2	cc	_	_
4	在	_	P	P	_	9	prep	_	_
5	原来	_	JJ	JJ	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	那个	_	NN	NN	_	4	pobj	_	_
8	时间	_	NN	NN	_	9	prep	_	_
9	来	_	VV	VV	_	2	dep	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	2	punct	_	_
12	狐狸	_	NN	NN	_	13	dep	_	_
13	说道	_	VV	VV	_	2	dep	_	_
14	,	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 狐狸)
(x0 / 说道-01, arg1, x3 / 来-01)
(x3 / 来-01, manner, x7 / 最好)
(x3 / 来-01, time, x4 / 时间)
(x4 / 时间, mod, x6 / 原来-01)
(x4 / 时间, mod, x8 / 还是)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),说道,说道,false), Span(11,12,List(1),狐狸,狐狸,false), Span(8,9,List(2),来,来-06,false), Span(7,8,List(3),时间,时间,false), Span(6,7,List(4),那个,那个,false), Span(4,5,List(5),原来,原来-01,false), Span(3,4,List(6),在,在-01,false), Span(2,3,List(7),还是,还是,false), Span(1,2,List(8),最好,最好,false)),Map(2 -> 来-06, 5 -> 原来-01, 8 -> 最好, 7 -> 还是, 1 -> 狐狸, 4 -> 那个, 6 -> 在-01, 0 -> 说道, 3 -> 时间),Map(在 -> 在-01, 来 -> 来-06, 还 -> 还是, 说 -> 说道, 原 -> 原来-01, 那 -> 那个, 狐 -> 狐狸, 时 -> 时间, 最 -> 最好))),[Ljava.lang.String;@37e69c43,Annotation([Ljava.lang.String;@5c7dfc05,[Ljava.lang.String;@345d053b,[Ljava.lang.String;@3d0cac1f),Annotation([Ljava.lang.String;@3e8b3b79,[Ljava.lang.String;@d257579,[Ledu.cmu.lti.nlp.amr.Dependency;@518ddd3b),Annotation([Ljava.lang.String;@939ff41,[Ljava.lang.String;@6e0e5dec,[Ljava.lang.String;@48a663e9),Annotation([Ljava.lang.String;@777d0bc3,[Ljava.lang.String;@3178219a,[Ledu.cmu.lti.nlp.amr.Entity;@2d85fb64))
AMR:
(原 / 原来-01, degree, 在 / 在-01)
(在 / 在-01, location, 那 / 那个)
(在 / 在-01, manner, 最 / 最好)
(在 / 在-01, manner, 还 / 还是)
(时 / 时间, mod, 那 / 那个)
(来 / 来-06, duration, 时 / 时间)
(说 / 说道, mod, 狐 / 狐狸)
(说 / 说道, topic, 来 / 来-06)

Decoded in 22,655 microseconds
Sentence: “ 比如 说 ， 你 下午 四点钟 来 ， 那么 从 三点钟 起 ， 我 就 开始 感到 幸福 。

Spans:
Span 5-6:  下午 => 下午
Span 4-5:  你 => 你
Span 15-16:  就 => 就-01
Span 18-19:  幸福 => 幸福
Span 16-17:  开始 => 开始
Span 17-18:  感到 => 感到-01
Span 14-15:  我 => 我
Span 7-8:  来 => 来-06
Span 1-2:  比如 => 比如-01
Span 2-3:  说 => 说-02
Span 9-10:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  下午 => 下午
Oracle Span 4-5:  你 => 你
Oracle Span 18-19:  幸福 => 幸福-01
Oracle Span 16-17:  开始 => 开始-01
Oracle Span 17-18:  感到 => 感到-01
Oracle Span 14-15:  我 => 我
Oracle Span 7-8:  来 => 来-01
Oracle Span 1-2:  比如 => 比如-01

Incorrect span: 幸福 => 幸福
Incorrect span: 开始 => 开始
Extra span: 就 => 就-01
Extra span: 那么 => 那么
Incorrect span: 来 => 来-06
Extra span: 说 => 说-02
Missing span: 来 => 来-01
Missing span: 开始 => 开始-01
Missing span: 幸福 => 幸福-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	比如	_	AD	AD	_	3	advmod	_	_
3	说	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	你	_	PN	PN	_	18	nsubj	_	_
6	下午	_	NT	NT	_	18	dep	_	_
7	四点钟	_	CD	CD	_	8	lobj	_	_
8	来	_	LC	LC	_	18	loc	_	_
9	,	_	PU	PU	_	18	punct	_	_
10	那么	_	AD	AD	_	18	advmod	_	_
11	从	_	P	P	_	18	prep	_	_
12	三点钟	_	CD	CD	_	13	lobj	_	_
13	起	_	LC	LC	_	11	plmod	_	_
14	,	_	PU	PU	_	18	punct	_	_
15	我	_	PN	PN	_	18	nsubj	_	_
16	就	_	AD	AD	_	18	advmod	_	_
17	开始	_	VV	VV	_	18	mmod	_	_
18	感到	_	VV	VV	_	3	ccomp	_	_
19	幸福	_	NN	NN	_	18	dobj	_	_
20	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x27 / 来-01, arg0, x35 / 你)
(x33 / 开始-01, arg0, x34 / 我)
(x33 / 开始-01, arg1, x36 / 感到-01)
(x36 / 感到-01, arg1, x41 / 幸福-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),幸福,幸福,false), Span(17,18,List(1),感到,感到-01,false), Span(16,17,List(2),开始,开始,false), Span(15,16,List(3),就,就-01,false), Span(14,15,List(4),我,我,false), Span(9,10,List(5),那么,那么,false), Span(7,8,List(6),来,来-06,false), Span(5,6,List(7),下午,下午,false), Span(4,5,List(8),你,你,false), Span(2,3,List(9),说,说-02,false), Span(1,2,List(10),比如,比如-01,false)),Map(2 -> 开始, 5 -> 那么, 8 -> 你, 7 -> 下午, 1 -> 感到-01, 4 -> 我, 6 -> 来-06, 9 -> 说-02, 0 -> 幸福, 10 -> 比如-01, 3 -> 就-01),Map(就 -> 就-01, 来 -> 来-06, 我 -> 我, 感 -> 感到-01, 幸 -> 幸福, 你 -> 你, 下 -> 下午, 说 -> 说-02, 比 -> 比如-01, 开 -> 开始, 那 -> 那么))),[Ljava.lang.String;@56476c16,Annotation([Ljava.lang.String;@497b560e,[Ljava.lang.String;@39ffda4a,[Ljava.lang.String;@3ba348ca),Annotation([Ljava.lang.String;@56e9a474,[Ljava.lang.String;@45b15381,[Ledu.cmu.lti.nlp.amr.Dependency;@2dbfcf7),Annotation([Ljava.lang.String;@239f017e,[Ljava.lang.String;@38cedb7d,[Ljava.lang.String;@772caabe),Annotation([Ljava.lang.String;@2acdcce8,[Ljava.lang.String;@7102ac3e,[Ledu.cmu.lti.nlp.amr.Entity;@3f598450))
AMR:
(就 / 就-01, beneficiary, 我 / 我)
(就 / 就-01, degree, 那 / 那么)
(开 / 开始, manner, 就 / 就-01)
(感 / 感到-01, example, 幸 / 幸福)
(感 / 感到-01, time, 开 / 开始)
(来 / 来-06, degree, 那 / 那么)
(来 / 来-06, manner, 下 / 下午)
(说 / 说-02, degree, 比 / 比如-01)
(说 / 说-02, op, 你 / 你)
(说 / 说-02, purpose, 来 / 来-06)

Decoded in 36,096 microseconds
Sentence: 时间 越 临近 ， 我 就 越 感到 幸福 。

Spans:
Span 2-3:  临近 => 临近-01
Span 5-6:  就 => 就-01
Span 8-9:  幸福 => 幸福
Span 7-8:  感到 => 感到-01
Span 4-5:  我 => 我
Span 0-1:  时间 => 时间
Span 6-7:  越 => 越
Span 1-2:  越 => 越

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  临近 => 临近-01
Oracle Span 5-6:  就 => 就
Oracle Span 8-9:  幸福 => 幸福-01
Oracle Span 7-8:  感到 => 感到-01
Oracle Span 4-5:  我 => 我
Oracle Span 0-1:  时间 => 时间
Oracle Span 1-2:  越 => 越
Oracle Span 6-7:  越 => 越

Incorrect span: 幸福 => 幸福
Incorrect span: 就 => 就-01
Missing span: 幸福 => 幸福-01
Missing span: 就 => 就
Dependencies:
1	时间	_	NN	NN	_	3	nn	_	_
2	越	_	NR	NR	_	3	nn	_	_
3	临近	_	NN	NN	_	8	nsubj	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	我	_	PN	PN	_	8	nsubj	_	_
6	就	_	AD	AD	_	8	advmod	_	_
7	越	_	AD	AD	_	8	advmod	_	_
8	感到	_	VV	VV	_	0	root	_	_
9	幸福	_	NN	NN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 临近-01, arg0, x3 / 时间)
(x2 / 临近-01, manner, x10 / 越)
(x5 / 感到-01, arg0, x6 / 我)
(x5 / 感到-01, arg1, x9 / 幸福-01)
(x5 / 感到-01, manner, x11 / 越)
(x5 / 感到-01, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),幸福,幸福,false), Span(7,8,List(1),感到,感到-01,false), Span(6,7,List(2),越,越,false), Span(5,6,List(3),就,就-01,false), Span(4,5,List(4),我,我,false), Span(2,3,List(5),临近,临近-01,false), Span(1,2,List(6),越,越,false), Span(0,1,List(7),时间,时间,false)),Map(2 -> 越, 5 -> 临近-01, 7 -> 时间, 1 -> 感到-01, 4 -> 我, 6 -> 越, 0 -> 幸福, 3 -> 就-01),Map(就 -> 就-01, 我 -> 我, 感 -> 感到-01, 幸 -> 幸福, 越2 -> 越, 临 -> 临近-01, 时 -> 时间, 越 -> 越))),[Ljava.lang.String;@2db2a05f,Annotation([Ljava.lang.String;@695c938d,[Ljava.lang.String;@d5bb1c4,[Ljava.lang.String;@7ed3df3b),Annotation([Ljava.lang.String;@465b38e6,[Ljava.lang.String;@4b960b5b,[Ledu.cmu.lti.nlp.amr.Dependency;@1b13467c),Annotation([Ljava.lang.String;@7bd96822,[Ljava.lang.String;@64dae3b7,[Ljava.lang.String;@1fedf0a4),Annotation([Ljava.lang.String;@1e4c6583,[Ljava.lang.String;@2ee48610,[Ledu.cmu.lti.nlp.amr.Entity;@1d901f20))
AMR:
(临 / 临近-01, ARG1, 时 / 时间)
(临 / 临近-01, manner, 越2 / 越)
(就 / 就-01, ARG5, 临 / 临近-01)
(感 / 感到-01, beneficiary, 我 / 我)
(感 / 感到-01, manner, 就 / 就-01)
(感 / 感到-01, manner, 越 / 越)
(感 / 感到-01, quant, 幸 / 幸福)

Decoded in 18,483 microseconds
Sentence: 到 了 四点钟 的 时候 ， 我 就 会 坐立不安 ；

Spans:
Span 10-11:  ; => and
Span 8-9:  会 => 会-03
Span 0-1:  到 => 到-01
Span 9-10:  坐立不安 => 坐立不安-01
Span 7-8:  就 => 就-01
Span 6-7:  我 => 我
Span 4-5:  时候 => 时候

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  会 => 会-01
Oracle Span 9-10:  坐立不安 => 坐立不安-01
Oracle Span 6-7:  我 => 我

Extra span: ; => and
Incorrect span: 会 => 会-03
Extra span: 就 => 就-01
Extra span: 时候 => 时候
Extra span: 到 => 到-01
Missing span: 会 => 会-01
Dependencies:
1	到	_	VV	VV	_	5	rcmod	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	四点钟	_	CD	CD	_	1	dep	_	_
4	的	_	DEC	DEC	_	1	cpm	_	_
5	时候	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	我	_	PN	PN	_	10	nsubj	_	_
8	就	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	dep	_	_
10	坐立不安	_	VV	VV	_	0	root	_	_
11	；	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 坐立不安-01)
(x2 / 坐立不安-01, arg0, x3 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),;,and,false), Span(9,10,List(1),坐立不安,坐立不安-01,false), Span(8,9,List(2),会,会-03,false), Span(7,8,List(3),就,就-01,false), Span(6,7,List(4),我,我,false), Span(4,5,List(5),时候,时候,false), Span(0,1,List(6),到,到-01,false)),Map(2 -> 会-03, 5 -> 时候, 1 -> 坐立不安-01, 4 -> 我, 6 -> 到-01, 0 -> and, 3 -> 就-01),Map(就 -> 就-01, 我 -> 我, a -> and, 到 -> 到-01, 会 -> 会-03, 时 -> 时候, 坐 -> 坐立不安-01))),[Ljava.lang.String;@6d08b4e6,Annotation([Ljava.lang.String;@1015a4b9,[Ljava.lang.String;@1acb74ad,[Ljava.lang.String;@7bf01cb),Annotation([Ljava.lang.String;@2f382a5e,[Ljava.lang.String;@12b5736c,[Ledu.cmu.lti.nlp.amr.Dependency;@539a138b),Annotation([Ljava.lang.String;@2cd4e16a,[Ljava.lang.String;@42505474,[Ljava.lang.String;@7b477141),Annotation([Ljava.lang.String;@784223e9,[Ljava.lang.String;@7316523a,[Ledu.cmu.lti.nlp.amr.Entity;@33a55bd8))
AMR:
(a / and, degree, 坐 / 坐立不安-01)
(会 / 会-03, degree, 就 / 就-01)
(坐 / 坐立不安-01, degree, 会 / 会-03)
(就 / 就-01, degree, 我 / 我)
(时 / 时候, domain, 到 / 到-01)
(时 / 时候, domain, 坐 / 坐立不安-01)

Decoded in 13,803 microseconds
Sentence: 我 就 会 发现 幸福 的 代价 。

Spans:
Span 6-7:  代价 => 代价
Span 2-3:  会 => 会-03
Span 3-4:  发现 => 发现-01
Span 1-2:  就 => 就-01
Span 4-5:  幸福 => 幸福
Span 0-1:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  代价 => 代价
Oracle Span 2-3:  会 => 会-02
Oracle Span 3-4:  发现 => 发现-01
Oracle Span 1-2:  就 => 就
Oracle Span 4-5:  幸福 => 幸福-01
Oracle Span 0-1:  我 => 我

Incorrect span: 幸福 => 幸福
Incorrect span: 会 => 会-03
Incorrect span: 就 => 就-01
Missing span: 会 => 会-02
Missing span: 就 => 就
Missing span: 幸福 => 幸福-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	发现	_	VV	VV	_	0	root	_	_
5	幸福	_	NN	NN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	代价	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 发现-01)
(x0 / 会-02, manner, x4 / 就)
(x2 / 发现-01, arg0, x3 / 我)
(x2 / 发现-01, arg1, x5 / 代价)
(x5 / 代价, mod, x6 / 幸福-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),代价,代价,false), Span(4,5,List(1),幸福,幸福,false), Span(3,4,List(2),发现,发现-01,false), Span(2,3,List(3),会,会-03,false), Span(1,2,List(4),就,就-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 发现-01, 5 -> 我, 1 -> 幸福, 4 -> 就-01, 0 -> 代价, 3 -> 会-03),Map(就 -> 就-01, 发 -> 发现-01, 代 -> 代价, 我 -> 我, 幸 -> 幸福, 会 -> 会-03))),[Ljava.lang.String;@73a8e994,Annotation([Ljava.lang.String;@1a1cc163,[Ljava.lang.String;@5b5ac798,[Ljava.lang.String;@42383cb0),Annotation([Ljava.lang.String;@7668892a,[Ljava.lang.String;@a83495d,[Ledu.cmu.lti.nlp.amr.Dependency;@7e83992),Annotation([Ljava.lang.String;@4364863,[Ljava.lang.String;@3625a016,[Ljava.lang.String;@267cde2e),Annotation([Ljava.lang.String;@609e57da,[Ljava.lang.String;@56dd6efa,[Ledu.cmu.lti.nlp.amr.Entity;@4d634127))
AMR:
(代 / 代价, mod, 幸 / 幸福)
(会 / 会-03, manner, 就 / 就-01)
(会 / 会-03, op, 发 / 发现-01)
(发 / 发现-01, ARG0, 代 / 代价)
(发 / 发现-01, season, 我 / 我)

Decoded in 14,068 microseconds
Sentence: 但是 ， 如果 你 随便 什么 时候 来 ， 我 就 不 知道 在 什么 时候 该 准备 好 我 的 心情 …

Spans:
Span 11-12:  不 => 不
Span 14-15:  什么 => 什么
Span 5-6:  什么 => 什么
Span 3-4:  你 => 你
Span 17-18:  准备 => 准备-02
Span 13-14:  在 => 在-01
Span 18-19:  好 => 好-04
Span 10-11:  就 => 就-01
Span 21-22:  心情 => 心情
Span 19-20:  我 => 我
Span 9-10:  我 => 我
Span 15-16:  时候 => 时候
Span 6-7:  时候 => 时候
Span 7-8:  来 => 来-06
Span 12-13:  知道 => 知道-01
Span 16-17:  该 => 该-01
Span 4-5:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 17-18:  准备 => 准备-01
Oracle Span 10-11:  就 => 就
Oracle Span 21-22:  心情 => 心情
Oracle Span 9-10:  我 => 我
Oracle Span 7-8:  来 => 来-01
Oracle Span 12-13:  知道 => 知道-01
Oracle Span 16-17:  该 => 该-01
Oracle Span 4-5:  随便 => 随便-01

Extra span: 我 => 我
Extra span: 好 => 好-04
Incorrect span: 准备 => 准备-02
Extra span: 时候 => 时候
Extra span: 什么 => 什么
Extra span: 在 => 在-01
Extra span: 不 => 不
Incorrect span: 就 => 就-01
Incorrect span: 来 => 来-06
Extra span: 时候 => 时候
Extra span: 什么 => 什么
Incorrect span: 随便 => 随便
Missing span: 来 => 来-01
Missing span: 随便 => 随便-01
Missing span: 准备 => 准备-01
Missing span: 就 => 就
Dependencies:
1	但是	_	AD	AD	_	13	advmod	_	_
2	,	_	PU	PU	_	13	punct	_	_
3	如果	_	CS	CS	_	5	advmod	_	_
4	你	_	PN	PN	_	5	nsubj	_	_
5	随便	_	VV	VV	_	13	pccomp	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	时候	_	NN	NN	_	8	lobj	_	_
8	来	_	LC	LC	_	5	loc	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	就	_	AD	AD	_	13	advmod	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	知道	_	VV	VV	_	0	root	_	_
14	在	_	P	P	_	19	prep	_	_
15	什么	_	DT	DT	_	16	det	_	_
16	时候	_	NN	NN	_	18	nn	_	_
17	该	_	DT	DT	_	18	det	_	_
18	准备	_	NN	NN	_	14	pobj	_	_
19	好	_	VV	VV	_	13	dobj	_	_
20	我	_	PN	PN	_	19	dobj	_	_
21	的	_	DEC	DEC	_	19	cpm	_	_
22	心情	_	PU	PU	_	13	punct	_	_
23	…	_	PU	PU	_	13	punct	_	_

Oracle:
(x12 / 该-01, arg0, x13 / 准备-01)
(x13 / 准备-01, arg1, x15 / 心情)
(x3 / 来-01, arg0, x4 / 你)
(x3 / 来-01, manner, x5 / 随便-01)
(x7 / 知道-01, arg0, x11 / 我)
(x7 / 知道-01, arg1, x12 / 该-01)
(x7 / 知道-01, manner, x10 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),心情,心情,false), Span(19,20,List(1),我,我,false), Span(18,19,List(2),好,好-04,false), Span(17,18,List(3),准备,准备-02,false), Span(16,17,List(4),该,该-01,false), Span(15,16,List(5),时候,时候,false), Span(14,15,List(6),什么,什么,false), Span(13,14,List(7),在,在-01,false), Span(12,13,List(8),知道,知道-01,false), Span(11,12,List(9),不,不,false), Span(10,11,List(10),就,就-01,false), Span(9,10,List(11),我,我,false), Span(7,8,List(12),来,来-06,false), Span(6,7,List(13),时候,时候,false), Span(5,6,List(14),什么,什么,false), Span(4,5,List(15),随便,随便,false), Span(3,4,List(16),你,你,false)),Map(2 -> 好-04, 5 -> 时候, 12 -> 来-06, 15 -> 随便, 8 -> 知道-01, 7 -> 在-01, 1 -> 我, 4 -> 该-01, 11 -> 我, 14 -> 什么, 6 -> 什么, 0 -> 心情, 9 -> 不, 16 -> 你, 3 -> 准备-02, 10 -> 就-01, 13 -> 时候),Map(准 -> 准备-02, 就 -> 就-01, 什2 -> 什么, 在 -> 在-01, 我 -> 我, 来 -> 来-06, 你 -> 你, 我2 -> 我, 心 -> 心情, 不 -> 不, 好 -> 好-04, 时2 -> 时候, 该 -> 该-01, 知 -> 知道-01, 什 -> 什么, 时 -> 时候, 随 -> 随便))),[Ljava.lang.String;@d2e6b0b,Annotation([Ljava.lang.String;@1f1cddf3,[Ljava.lang.String;@228bda54,[Ljava.lang.String;@75b6dd5b),Annotation([Ljava.lang.String;@b3e86d5,[Ljava.lang.String;@72b43104,[Ledu.cmu.lti.nlp.amr.Dependency;@e111c7c),Annotation([Ljava.lang.String;@4d0e54e0,[Ljava.lang.String;@32f96bba,[Ljava.lang.String;@611640f0),Annotation([Ljava.lang.String;@67e25252,[Ljava.lang.String;@58f4b31a,[Ledu.cmu.lti.nlp.amr.Entity;@21a9a705))
AMR:
(不 / 不, manner, 就 / 就-01)
(准 / 准备-02, degree, 好 / 好-04)
(准 / 准备-02, frequency, 心 / 心情)
(准 / 准备-02, manner, 在 / 在-01)
(准 / 准备-02, manner, 该 / 该-01)
(好 / 好-04, prep-at, 我 / 我)
(就 / 就-01, snt5, 我2 / 我)
(时 / 时候, mod, 什 / 什么)
(时2 / 时候, mod, 什2 / 什么)
(来 / 来-06, manner, 就 / 就-01)
(来 / 来-06, manner, 随 / 随便)
(来 / 来-06, time, 时2 / 时候)
(知 / 知道-01, ARG5, 在 / 在-01)
(知 / 知道-01, manner, 不 / 不)
(该 / 该-01, time, 时 / 时候)
(随 / 随便, snt5, 你 / 你)

Decoded in 76,305 microseconds
Sentence: 应当 有 一定 的 仪式 。 ”

Spans:
Span 2-3:  一定 => 一定
Span 4-5:  仪式 => 仪式
Span 0-1:  应当 => 应当-01
Span 1-2:  有 => 有-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一定 => 一定
Oracle Span 4-5:  仪式 => 仪式
Oracle Span 0-1:  应当 => 应当-01
Oracle Span 1-2:  有 => 有-04

Incorrect span: 有 => 有-06
Missing span: 有 => 有-04
Dependencies:
1	应当	_	VV	VV	_	2	top	_	_
2	有	_	VE	VE	_	0	root	_	_
3	一定	_	JJ	JJ	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	仪式	_	NN	NN	_	2	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x7 / 应当-01, arg0, x8 / 有-04)
(x8 / 有-04, arg1, x9 / 仪式)
(x9 / 仪式, mod, x10 / 一定)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),仪式,仪式,false), Span(2,3,List(1),一定,一定,false), Span(1,2,List(2),有,有-06,false), Span(0,1,List(3),应当,应当-01,false)),Map(2 -> 有-06, 1 -> 一定, 0 -> 仪式, 3 -> 应当-01),Map(仪 -> 仪式, 应 -> 应当-01, 一 -> 一定, 有 -> 有-06))),[Ljava.lang.String;@72eb6200,Annotation([Ljava.lang.String;@76ececd,[Ljava.lang.String;@7affc159,[Ljava.lang.String;@1682c08c),Annotation([Ljava.lang.String;@3fd05b3e,[Ljava.lang.String;@4eb9f2af,[Ledu.cmu.lti.nlp.amr.Dependency;@4a481728),Annotation([Ljava.lang.String;@4ace284d,[Ljava.lang.String;@77fa9381,[Ljava.lang.String;@76d72b5b),Annotation([Ljava.lang.String;@7cac93fe,[Ljava.lang.String;@479b5066,[Ledu.cmu.lti.nlp.amr.Entity;@64deb58f))
AMR:
(一 / 一定, mod, 有 / 有-06)
(仪 / 仪式, mod, 一 / 一定)
(有 / 有-06, degree, 应 / 应当-01)

Decoded in 6,914 microseconds
Sentence: “ 仪式 是 什么 ？ ” 小 王子 问道 。

Spans:
Span 3-4:  什么 => 什么
Span 1-2:  仪式 => 仪式
Span 6-7:  小 => 小
Span 2-3:  是 => 是-04
Span 7-8:  王子 => 王子
Span 8-9:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  仪式 => 仪式
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 8-9:  问道 => 问道-01

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	仪式	_	NN	NN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	什么	_	PN	PN	_	8	vmod	_	_
5	？	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	问道	_	VA	VA	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),问道,问道-01,false), Span(7,8,List(1),王子,王子,false), Span(6,7,List(2),小,小,false), Span(3,4,List(3),什么,什么,false), Span(2,3,List(4),是,是-04,false), Span(1,2,List(5),仪式,仪式,false)),Map(2 -> 小, 5 -> 仪式, 1 -> 王子, 4 -> 是-04, 0 -> 问道-01, 3 -> 什么),Map(王 -> 王子, 小 -> 小, 仪 -> 仪式, 什 -> 什么, 问 -> 问道-01, 是 -> 是-04))),[Ljava.lang.String;@2b1cd7bc,Annotation([Ljava.lang.String;@33379242,[Ljava.lang.String;@2e32fc22,[Ljava.lang.String;@3f5156a6),Annotation([Ljava.lang.String;@72bdd7c7,[Ljava.lang.String;@7d17ee50,[Ledu.cmu.lti.nlp.amr.Dependency;@44fdce3c),Annotation([Ljava.lang.String;@712c5463,[Ljava.lang.String;@6d33a66e,[Ljava.lang.String;@2f14b0f6),Annotation([Ljava.lang.String;@5b20706,[Ljava.lang.String;@16aed49f,[Ledu.cmu.lti.nlp.amr.Entity;@66de00f2))
AMR:
(什 / 什么, mod, 是 / 是-04)
(是 / 是-04, degree, 仪 / 仪式)
(王 / 王子, mod, 小 / 小)
(问 / 问道-01, ARG3, 王 / 王子)
(问 / 问道-01, manner, 是 / 是-04)

Decoded in 11,062 microseconds
Sentence: “ 这 也 是 一 种 早 已 被 人 忘却 了 的 事 。 ” 狐狸 说 ，

Spans:
Span 2-3:  也 => 也
Span 13-14:  事 => 事
Span 9-10:  人 => 人
Span 10-11:  忘却 => 忘却-01
Span 6-7:  早 => 早-01
Span 3-4:  是 => 是-04
Span 16-17:  狐狸 => 狐狸
Span 5-6:  种 => 种
Span 17-18:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 13-14:  事 => 事
Oracle Span 9-10:  人 => 人
Oracle Span 10-11:  忘却 => 忘却-01
Oracle Span 16-17:  狐狸 => 狐狸
Oracle Span 17-18:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 早 => 早-01
Extra span: 种 => 种
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	也	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	14	clf	_	_
7	早	_	AD	AD	_	11	advmod	_	_
8	已	_	AD	AD	_	11	advmod	_	_
9	被	_	LB	LB	_	11	pass	_	_
10	人	_	NN	NN	_	11	nsubj	_	_
11	忘却	_	VV	VV	_	14	rcmod	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	的	_	DEC	DEC	_	11	cpm	_	_
14	事	_	NN	NN	_	4	attr	_	_
15	。	_	PU	PU	_	4	punct	_	_
16	”	_	PU	PU	_	4	punct	_	_
17	狐狸	_	NN	NN	_	18	dep	_	_
18	说	_	VV	VV	_	4	dep	_	_
19	,	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 事)
(x3 / 事, domain, x10 / 这)
(x3 / 事, manner, x9 / 也)
(x5 / 忘却-01, arg0, x6 / 人)
(x5 / 忘却-01, arg1, x3 / 事)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),说,说-02,false), Span(16,17,List(1),狐狸,狐狸,false), Span(13,14,List(2),事,事,false), Span(10,11,List(3),忘却,忘却-01,false), Span(9,10,List(4),人,人,false), Span(6,7,List(5),早,早-01,false), Span(5,6,List(6),种,种,false), Span(3,4,List(7),是,是-04,false), Span(2,3,List(8),也,也,false), Span(1,2,List(9),这,这,false)),Map(2 -> 事, 5 -> 早-01, 8 -> 也, 7 -> 是-04, 1 -> 狐狸, 4 -> 人, 6 -> 种, 9 -> 这, 0 -> 说-02, 3 -> 忘却-01),Map(早 -> 早-01, 也 -> 也, 这 -> 这, 忘 -> 忘却-01, 事 -> 事, 种 -> 种, 说 -> 说-02, 狐 -> 狐狸, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@6c479fdf,Annotation([Ljava.lang.String;@79d82f66,[Ljava.lang.String;@19b206ee,[Ljava.lang.String;@ffd4cba),Annotation([Ljava.lang.String;@5f1483fd,[Ljava.lang.String;@670f2466,[Ledu.cmu.lti.nlp.amr.Dependency;@6e03db1f),Annotation([Ljava.lang.String;@bfec2f9,[Ljava.lang.String;@708eb310,[Ljava.lang.String;@6ebc9573),Annotation([Ljava.lang.String;@1e977098,[Ljava.lang.String;@630390b9,[Ledu.cmu.lti.nlp.amr.Entity;@6690b9fa))
AMR:
(事 / 事, location, 忘 / 忘却-01)
(忘 / 忘却-01, location, 人 / 人)
(忘 / 忘却-01, time, 早 / 早-01)
(是 / 是-04, manner, 也 / 也)
(是 / 是-04, mod, 这 / 这)
(种 / 种, mod, 是 / 是-04)
(种 / 种, purpose, 早 / 早-01)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, purpose, 事 / 事)

Decoded in 29,312 microseconds
Sentence: “ 它 就 是 使 某 一 天 与 其他 日子 不同 ， 使 某 一 时刻 与 其他 时刻 不同 。

Spans:
Span 20-21:  不同 => 不同-01
Span 11-12:  不同 => 不同-01
Span 13-14:  使 => 使-01
Span 4-5:  使 => 使-01
Span 18-19:  其他 => 其他
Span 9-10:  其他 => 其他
Span 7-8:  天 => (temporal-quantity :unit 天)
Span 1-2:  它 => 它
Span 2-3:  就 => 就-01
Span 10-11:  日子 => (temporal-quantity :unit 日子)
Span 19-20:  时刻 => 时刻
Span 16-17:  时刻 => 时刻
Span 3-4:  是 => 是-04
Span 14-15:  某 => 某
Span 5-6:  某 => 某

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  使 => 使-01
Oracle Span 13-14:  使 => 使-01
Oracle Span 9-10:  其他 => 其他
Oracle Span 18-19:  其他 => 其他
Oracle Span 7-8:  天 => 天
Oracle Span 1-2:  它 => 它
Oracle Span 2-3:  就 => 就
Oracle Span 10-11:  日子 => 日子
Oracle Span 16-17:  时刻 => 时刻
Oracle Span 19-20:  时刻 => 时刻
Oracle Span 5-6:  某 => 某
Oracle Span 14-15:  某 => 某

Extra span: 不同 => 不同-01
Extra span: 不同 => 不同-01
Incorrect span: 日子 => (temporal-quantity :unit 日子)
Incorrect span: 天 => (temporal-quantity :unit 天)
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 日子 => 日子
Missing span: 天 => 天
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	它	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	使	_	VV	VV	_	4	ccomp	_	_
6	某	_	DT	DT	_	12	dep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	天	_	M	M	_	6	dep	_	_
9	与	_	P	P	_	12	prep	_	_
10	其他	_	DT	DT	_	11	det	_	_
11	日子	_	NN	NN	_	9	pobj	_	_
12	不同	_	VA	VA	_	5	ccomp	_	_
13	,	_	PU	PU	_	5	punct	_	_
14	使	_	VV	VV	_	5	dep	_	_
15	某	_	DT	DT	_	17	det	_	_
16	一	_	CD	CD	_	15	dep	_	_
17	时刻	_	NN	NN	_	14	dobj	_	_
18	与	_	P	P	_	21	prep	_	_
19	其他	_	DT	DT	_	20	det	_	_
20	时刻	_	NN	NN	_	18	pobj	_	_
21	不同	_	VA	VA	_	14	dep	_	_
22	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x18 / 使-01, arg0, x20 / 它)
(x18 / 使-01, manner, x19 / 就)
(x24 / 日子, mod, x25 / 其他)
(x26 / 天, mod, x28 / 某)
(x32 / 时刻, mod, x34 / 某)
(x35 / 时刻, mod, x36 / 其他)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),不同,不同-01,false), Span(19,20,List(1),时刻,时刻,false), Span(18,19,List(2),其他,其他,false), Span(16,17,List(3),时刻,时刻,false), Span(14,15,List(4),某,某,false), Span(13,14,List(5),使,使-01,false), Span(11,12,List(6),不同,不同-01,false), Span(10,11,List(8, 7),日子,(temporal-quantity :unit 日子),false), Span(9,10,List(9),其他,其他,false), Span(7,8,List(11, 10),天,(temporal-quantity :unit 天),false), Span(5,6,List(12),某,某,false), Span(4,5,List(13),使,使-01,false), Span(3,4,List(14),是,是-04,false), Span(2,3,List(15),就,就-01,false), Span(1,2,List(16),它,它,false)),Map(2 -> 其他, 5 -> 使-01, 12 -> 某, 15 -> 就-01, 8 -> 日子, 7 -> temporal-quantity, 1 -> 时刻, 4 -> 某, 11 -> 天, 14 -> 是-04, 6 -> 不同-01, 0 -> 不同-01, 9 -> 其他, 16 -> 它, 3 -> 时刻, 10 -> temporal-quantity, 13 -> 使-01),Map(就 -> 就-01, t -> temporal-quantity, 使2 -> 使-01, 其2 -> 其他, 某 -> 某, 它 -> 它, 某2 -> 某, 不 -> 不同-01, 不2 -> 不同-01, 天 -> 天, 其 -> 其他, 日 -> 日子, t2 -> temporal-quantity, 时2 -> 时刻, 使 -> 使-01, 时 -> 时刻, 是 -> 是-04))),[Ljava.lang.String;@6c8dbf56,Annotation([Ljava.lang.String;@493b01ef,[Ljava.lang.String;@36c2d629,[Ljava.lang.String;@55fee662),Annotation([Ljava.lang.String;@54089484,[Ljava.lang.String;@45adc393,[Ledu.cmu.lti.nlp.amr.Dependency;@65fe2691),Annotation([Ljava.lang.String;@479111ba,[Ljava.lang.String;@57ad1178,[Ljava.lang.String;@7c37f145),Annotation([Ljava.lang.String;@68699afc,[Ljava.lang.String;@273a5a8a,[Ledu.cmu.lti.nlp.amr.Entity;@1823b9c4))
AMR:
(t / temporal-quantity, unit, 日 / 日子)
(t2 / temporal-quantity, unit, 天 / 天)
(不 / 不同-01, manner, 时 / 时刻)
(不2 / 不同-01, manner, 日 / 日子)
(不2 / 不同-01, manner, 是 / 是-04)
(不2 / 不同-01, purpose, 使 / 使-01)
(使 / 使-01, prep-for, 某 / 某)
(使2 / 使-01, degree, 是 / 是-04)
(使2 / 使-01, prep-for, 某2 / 某)
(天 / 天, mod, 某2 / 某)
(就 / 就-01, ARG3, 它 / 它)
(日 / 日子, mod, 其2 / 其他)
(时 / 时刻, mod, 其 / 其他)
(时2 / 时刻, mod, 其 / 其他)
(时2 / 时刻, mod, 某 / 某)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 78,909 microseconds
Sentence: 比如 说 ， 我 的 那些 猎人 就 有 一 种 仪式 。

Spans:
Span 11-12:  仪式 => 仪式
Span 7-8:  就 => 就-01
Span 3-4:  我 => 我
Span 8-9:  有 => 有-06
Span 0-1:  比如 => 比如-01
Span 6-7:  猎人 => 猎人
Span 10-11:  种 => 种
Span 1-2:  说 => 说-02
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  仪式 => 仪式
Oracle Span 7-8:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  有 => 有-05
Oracle Span 0-1:  比如 => 比如-01
Oracle Span 6-7:  猎人 => 猎人
Oracle Span 5-6:  那些 => 那些

Extra span: 种 => 种
Incorrect span: 有 => 有-06
Incorrect span: 就 => 就-01
Extra span: 说 => 说-02
Missing span: 有 => 有-05
Missing span: 就 => 就
Dependencies:
1	比如	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	我	_	PN	PN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	猎人	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	2	ccomp	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	种	_	M	M	_	12	clf	_	_
12	仪式	_	NN	NN	_	9	dobj	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 比如-01, arg0, x2 / 有-05)
(x2 / 有-05, arg0, x3 / 猎人)
(x2 / 有-05, arg1, x7 / 仪式)
(x2 / 有-05, manner, x6 / 就)
(x3 / 猎人, mod, x4 / 那些)
(x3 / 猎人, poss, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),仪式,仪式,false), Span(10,11,List(1),种,种,false), Span(8,9,List(2),有,有-06,false), Span(7,8,List(3),就,就-01,false), Span(6,7,List(4),猎人,猎人,false), Span(5,6,List(5),那些,那些,false), Span(3,4,List(6),我,我,false), Span(1,2,List(7),说,说-02,false), Span(0,1,List(8),比如,比如-01,false)),Map(2 -> 有-06, 5 -> 那些, 8 -> 比如-01, 7 -> 说-02, 1 -> 种, 4 -> 猎人, 6 -> 我, 0 -> 仪式, 3 -> 就-01),Map(就 -> 就-01, 我 -> 我, 说 -> 说-02, 种 -> 种, 比 -> 比如-01, 仪 -> 仪式, 那 -> 那些, 猎 -> 猎人, 有 -> 有-06))),[Ljava.lang.String;@5b5dce5c,Annotation([Ljava.lang.String;@7f4701b1,[Ljava.lang.String;@adcfad9,[Ljava.lang.String;@fb49fdf),Annotation([Ljava.lang.String;@3a2e9f5b,[Ljava.lang.String;@7da34b26,[Ledu.cmu.lti.nlp.amr.Dependency;@10c47c79),Annotation([Ljava.lang.String;@3b2553d9,[Ljava.lang.String;@753fd7a1,[Ljava.lang.String;@12a2585b),Annotation([Ljava.lang.String;@21b6c9c2,[Ljava.lang.String;@309cedb6,[Ledu.cmu.lti.nlp.amr.Entity;@3b95a6db))
AMR:
(仪 / 仪式, ARG4, 种 / 种)
(有 / 有-06, ARG0, 猎 / 猎人)
(有 / 有-06, ARG4, 种 / 种)
(有 / 有-06, manner, 就 / 就-01)
(比 / 比如-01, time, 有 / 有-06)
(猎 / 猎人, mod, 那 / 那些)
(猎 / 猎人, poss, 我 / 我)
(说 / 说-02, manner, 比 / 比如-01)

Decoded in 23,383 microseconds
Sentence: 他们 每 星期四 都 和 村子 里 的 姑娘们 跳舞 。

Spans:
Span 0-1:  他们 => 他们
Span 8-9:  姑娘们 => 姑娘们
Span 2-3:  星期四 => 星期四
Span 5-6:  村子 => 村子
Span 1-2:  每 => 每
Span 9-10:  跳舞 => 跳舞-01
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他们 => 他们
Oracle Span 8-9:  姑娘们 => 姑娘们
Oracle Span 2-3:  星期四 => 星期四
Oracle Span 5-6:  村子 => 村子
Oracle Span 9-10:  跳舞 => 跳舞-01
Oracle Span 3-4:  都 => 都

Extra span: 每 => 每
Dependencies:
1	他们	_	PN	PN	_	10	nsubj	_	_
2	每	_	DT	DT	_	3	det	_	_
3	星期四	_	NT	NT	_	10	nsubj	_	_
4	都	_	AD	AD	_	10	advmod	_	_
5	和	_	P	P	_	10	prep	_	_
6	村子	_	NN	NN	_	7	lobj	_	_
7	里	_	LC	LC	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	姑娘们	_	NN	NN	_	5	pobj	_	_
10	跳舞	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 跳舞-01, accompanier, x8 / 姑娘们)
(x0 / 跳舞-01, arg0, x2 / 他们)
(x0 / 跳舞-01, frequency, x11 / 星期四)
(x0 / 跳舞-01, manner, x7 / 都)
(x8 / 姑娘们, location, x9 / 村子)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),跳舞,跳舞-01,false), Span(8,9,List(1),姑娘们,姑娘们,false), Span(5,6,List(2),村子,村子,false), Span(3,4,List(3),都,都,false), Span(2,3,List(4),星期四,星期四,false), Span(1,2,List(5),每,每,false), Span(0,1,List(6),他们,他们,false)),Map(2 -> 村子, 5 -> 每, 1 -> 姑娘们, 4 -> 星期四, 6 -> 他们, 0 -> 跳舞-01, 3 -> 都),Map(星 -> 星期四, 每 -> 每, 他 -> 他们, 姑 -> 姑娘们, 都 -> 都, 村 -> 村子, 跳 -> 跳舞-01))),[Ljava.lang.String;@3bf54172,Annotation([Ljava.lang.String;@2c9a6717,[Ljava.lang.String;@7b3cde6f,[Ljava.lang.String;@6d091cad),Annotation([Ljava.lang.String;@7c663eaf,[Ljava.lang.String;@3bb5ceb,[Ledu.cmu.lti.nlp.amr.Dependency;@1e692555),Annotation([Ljava.lang.String;@3ba0ae41,[Ljava.lang.String;@76fe6cdc,[Ljava.lang.String;@2ffb3aec),Annotation([Ljava.lang.String;@786ff1cb,[Ljava.lang.String;@46039a21,[Ledu.cmu.lti.nlp.amr.Entity;@431e86b1))
AMR:
(他 / 他们, ARG6, 每 / 每)
(姑 / 姑娘们, location, 村 / 村子)
(星 / 星期四, ARG3, 每 / 每)
(跳 / 跳舞-01, accompanier, 姑 / 姑娘们)
(跳 / 跳舞-01, frequency, 星 / 星期四)
(跳 / 跳舞-01, manner, 都 / 都)

Decoded in 15,803 microseconds
Sentence: 于是 ， 星期四 就 是 一 个 美好 的 日子 ！

Spans:
Span 3-4:  就 => 就-01
Span 9-10:  日子 => (temporal-quantity :unit 日子)
Span 2-3:  星期四 => 星期四
Span 4-5:  是 => 是-04
Span 7-8:  美好 => 美好-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  就 => 就
Oracle Span 9-10:  日子 => 日子
Oracle Span 2-3:  星期四 => 星期四
Oracle Span 7-8:  美好 => 美好-01

Incorrect span: 日子 => (temporal-quantity :unit 日子)
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 日子 => 日子
Missing span: 就 => 就
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	星期四	_	NT	NT	_	5	dep	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	10	clf	_	_
8	美好	_	VA	VA	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	日子	_	NN	NN	_	5	attr	_	_
11	！	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 日子, manner, x6 / 就)
(x2 / 日子, mod, x4 / 美好-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(1, 0),日子,(temporal-quantity :unit 日子),false), Span(7,8,List(2),美好,美好-01,false), Span(4,5,List(3),是,是-04,false), Span(3,4,List(4),就,就-01,false), Span(2,3,List(5),星期四,星期四,false)),Map(2 -> 美好-01, 5 -> 星期四, 1 -> 日子, 4 -> 就-01, 0 -> temporal-quantity, 3 -> 是-04),Map(就 -> 就-01, 美 -> 美好-01, 星 -> 星期四, t -> temporal-quantity, 日 -> 日子, 是 -> 是-04))),[Ljava.lang.String;@35c4e864,Annotation([Ljava.lang.String;@32a2a6be,[Ljava.lang.String;@682af059,[Ljava.lang.String;@5f36c8e3),Annotation([Ljava.lang.String;@4da39ca9,[Ljava.lang.String;@6a9344f5,[Ledu.cmu.lti.nlp.amr.Dependency;@5584d9c6),Annotation([Ljava.lang.String;@3c9c6245,[Ljava.lang.String;@6d0be7ab,[Ljava.lang.String;@1d4fb213),Annotation([Ljava.lang.String;@6ef60295,[Ljava.lang.String;@3127cb44,[Ledu.cmu.lti.nlp.amr.Entity;@3234474))
AMR:
(t / temporal-quantity, unit, 日 / 日子)
(就 / 就-01, manner, 星 / 星期四)
(日 / 日子, mod, 美 / 美好-01)
(是 / 是-04, manner, 就 / 就-01)
(美 / 美好-01, manner, 是 / 是-04)

Decoded in 11,066 microseconds
Sentence: 我 可以 一直 散步 到 葡萄园 去 。

Spans:
Span 2-3:  一直 => 一直
Span 4-5:  到 => 到-01
Span 6-7:  去 => 去-02
Span 1-2:  可以 => 可以-02
Span 0-1:  我 => 我
Span 3-4:  散步 => 散步-01
Span 5-6:  葡萄园 => 葡萄园

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一直 => 一直
Oracle Span 1-2:  可以 => 可以-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  散步 => 散步-01
Oracle Span 5-6:  葡萄园 => 葡萄园

Extra span: 去 => 去-02
Extra span: 到 => 到-01
Incorrect span: 可以 => 可以-02
Missing span: 可以 => 可以-01
Dependencies:
1	我	_	PN	PN	_	7	nsubj	_	_
2	可以	_	VV	VV	_	7	mmod	_	_
3	一直	_	AD	AD	_	7	advmod	_	_
4	散步	_	AD	AD	_	7	advmod	_	_
5	到	_	P	P	_	7	prep	_	_
6	葡萄园	_	NN	NN	_	5	pobj	_	_
7	去	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 可以-01, arg0, x2 / 散步-01)
(x2 / 散步-01, arg0, x3 / 我)
(x2 / 散步-01, direction, x6 / 葡萄园)
(x2 / 散步-01, manner, x4 / 一直)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),去,去-02,false), Span(5,6,List(1),葡萄园,葡萄园,false), Span(4,5,List(2),到,到-01,false), Span(3,4,List(3),散步,散步-01,false), Span(2,3,List(4),一直,一直,false), Span(1,2,List(5),可以,可以-02,false), Span(0,1,List(6),我,我,false)),Map(2 -> 到-01, 5 -> 可以-02, 1 -> 葡萄园, 4 -> 一直, 6 -> 我, 0 -> 去-02, 3 -> 散步-01),Map(葡 -> 葡萄园, 我 -> 我, 去 -> 去-02, 到 -> 到-01, 一 -> 一直, 可 -> 可以-02, 散 -> 散步-01))),[Ljava.lang.String;@631cb129,Annotation([Ljava.lang.String;@3d20e575,[Ljava.lang.String;@3252747e,[Ljava.lang.String;@2b4b96a4),Annotation([Ljava.lang.String;@2dd8ff1d,[Ljava.lang.String;@17e9bc9e,[Ledu.cmu.lti.nlp.amr.Dependency;@36b9cb99),Annotation([Ljava.lang.String;@4130955c,[Ljava.lang.String;@2bfaba70,[Ljava.lang.String;@71adfedd),Annotation([Ljava.lang.String;@9301672,[Ljava.lang.String;@4ceff87d,[Ledu.cmu.lti.nlp.amr.Entity;@3238e2aa))
AMR:
(到 / 到-01, ARG0, 葡 / 葡萄园)
(到 / 到-01, ARG4, 一 / 一直)
(到 / 到-01, degree, 去 / 去-02)
(到 / 到-01, manner, 散 / 散步-01)
(可 / 可以-02, ARG6, 散 / 散步-01)
(散 / 散步-01, time, 我 / 我)

Decoded in 14,209 microseconds
Sentence: 如果 猎人们 什么 时候 都 跳舞 ， 天天 又 全 都 一样 ， 那么 我 也 就 没有 假日 了 。 ”

Spans:
Span 11-12:  一样 => 一样
Span 15-16:  也 => 也
Span 2-3:  什么 => 什么
Span 18-19:  假日 => 假日
Span 9-10:  全 => 全
Span 8-9:  又 => 又
Span 7-8:  天天 => 天天
Span 16-17:  就 => 就-01
Span 14-15:  我 => 我
Span 3-4:  时候 => 时候
Span 1-2:  猎人们 => 猎人们
Span 5-6:  跳舞 => 跳舞-01
Span 13-14:  那么 => 那么
Span 10-11:  都 => 都
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  一样 => 一样-01
Oracle Span 15-16:  也 => 也
Oracle Span 2-3:  什么 => 什么
Oracle Span 18-19:  假日 => 假日
Oracle Span 9-10:  全 => 全-01
Oracle Span 8-9:  又 => 又
Oracle Span 7-8:  天天 => 天天
Oracle Span 16-17:  就 => 就
Oracle Span 14-15:  我 => 我
Oracle Span 3-4:  时候 => 时候
Oracle Span 1-2:  猎人们 => 猎人们
Oracle Span 5-6:  跳舞 => 跳舞-01
Oracle Span 4-5:  都 => 都
Oracle Span 10-11:  都 => 都

Incorrect span: 就 => 就-01
Extra span: 那么 => 那么
Incorrect span: 一样 => 一样
Incorrect span: 全 => 全
Missing span: 一样 => 一样-01
Missing span: 全 => 全-01
Missing span: 就 => 就
Dependencies:
1	如果	_	CS	CS	_	6	advmod	_	_
2	猎人们	_	NR	NR	_	4	nn	_	_
3	什么	_	DT	DT	_	4	det	_	_
4	时候	_	NN	NN	_	6	nsubj	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	跳舞	_	VV	VV	_	12	pccomp	_	_
7	,	_	PU	PU	_	12	punct	_	_
8	天天	_	NN	NN	_	12	nsubj	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	全	_	AD	AD	_	12	advmod	_	_
11	都	_	AD	AD	_	12	advmod	_	_
12	一样	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	那么	_	AD	AD	_	18	advmod	_	_
15	我	_	PN	PN	_	18	nsubj	_	_
16	也	_	AD	AD	_	18	advmod	_	_
17	就	_	AD	AD	_	18	advmod	_	_
18	没有	_	VE	VE	_	12	conj	_	_
19	假日	_	NN	NN	_	18	dobj	_	_
20	了	_	SP	SP	_	12	dep	_	_
21	。	_	PU	PU	_	12	punct	_	_
22	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x27 / 跳舞-01, arg0, x28 / 猎人们)
(x27 / 跳舞-01, manner, x29 / 都)
(x27 / 跳舞-01, time, x30 / 时候)
(x30 / 时候, mod, x31 / 什么)
(x32 / 一样-01, manner, x35 / 又)
(x32 / 一样-01, manner, x36 / 全-01)
(x32 / 一样-01, manner, x37 / 都)
(x32 / 一样-01, time, x34 / 天天)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),假日,假日,false), Span(16,17,List(1),就,就-01,false), Span(15,16,List(2),也,也,false), Span(14,15,List(3),我,我,false), Span(13,14,List(4),那么,那么,false), Span(11,12,List(5),一样,一样,false), Span(10,11,List(6),都,都,false), Span(9,10,List(7),全,全,false), Span(8,9,List(8),又,又,false), Span(7,8,List(9),天天,天天,false), Span(5,6,List(10),跳舞,跳舞-01,false), Span(4,5,List(11),都,都,false), Span(3,4,List(12),时候,时候,false), Span(2,3,List(13),什么,什么,false), Span(1,2,List(14),猎人们,猎人们,false)),Map(2 -> 也, 5 -> 一样, 12 -> 时候, 8 -> 又, 7 -> 全, 1 -> 就-01, 4 -> 那么, 11 -> 都, 14 -> 猎人们, 6 -> 都, 0 -> 假日, 9 -> 天天, 3 -> 我, 10 -> 跳舞-01, 13 -> 什么),Map(就 -> 就-01, 又 -> 又, 假 -> 假日, 也 -> 也, 我 -> 我, 全 -> 全, 天 -> 天天, 那 -> 那么, 都 -> 都, 什 -> 什么, 都2 -> 都, 跳 -> 跳舞-01, 时 -> 时候, 一 -> 一样, 猎 -> 猎人们))),[Ljava.lang.String;@2c7db926,Annotation([Ljava.lang.String;@2577a95d,[Ljava.lang.String;@1668919e,[Ljava.lang.String;@63300c4b),Annotation([Ljava.lang.String;@22c53d82,[Ljava.lang.String;@3a6045c6,[Ledu.cmu.lti.nlp.amr.Dependency;@68d6d775),Annotation([Ljava.lang.String;@b67cc70,[Ljava.lang.String;@45c9b3,[Ljava.lang.String;@38b3f208),Annotation([Ljava.lang.String;@6680f714,[Ljava.lang.String;@53b1a3f8,[Ledu.cmu.lti.nlp.amr.Entity;@7d97e06c))
AMR:
(一 / 一样, manner, 都 / 都)
(一 / 一样, prep-on-behalf, 那 / 那么)
(一 / 一样, time, 全 / 全)
(也 / 也, season, 就 / 就-01)
(全 / 全, manner, 又 / 又)
(全 / 全, time, 天 / 天天)
(就 / 就-01, snt5, 假 / 假日)
(时 / 时候, mod, 什 / 什么)
(跳 / 跳舞-01, manner, 都2 / 都)
(跳 / 跳舞-01, time, 天 / 天天)
(跳 / 跳舞-01, time, 时 / 时候)
(跳 / 跳舞-01, time, 猎 / 猎人们)
(那 / 那么, decade, 我 / 我)
(那 / 那么, prep-on-behalf, 就 / 就-01)

Decoded in 59,539 microseconds
Sentence: 就 这样 ， 小 王子 驯服 了 狐狸 。

Spans:
Span 3-4:  小 => 小
Span 0-1:  就 => 就-01
Span 7-8:  狐狸 => 狐狸
Span 4-5:  王子 => 王子
Span 1-2:  这样 => 这样-01
Span 5-6:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  小 => 小-01
Oracle Span 0-1:  就 => 就
Oracle Span 7-8:  狐狸 => 狐狸
Oracle Span 4-5:  王子 => 王子
Oracle Span 1-2:  这样 => 这样
Oracle Span 5-6:  驯服 => 驯服-01

Incorrect span: 驯服 => 驯服
Incorrect span: 小 => 小
Incorrect span: 这样 => 这样-01
Incorrect span: 就 => 就-01
Missing span: 驯服 => 驯服-01
Missing span: 这样 => 这样
Missing span: 就 => 就
Missing span: 小 => 小-01
Dependencies:
1	就	_	P	P	_	6	prep	_	_
2	这样	_	PN	PN	_	1	pobj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	王子	_	NN	NN	_	6	nsubj	_	_
6	驯服	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	狐狸	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 驯服-01, arg0, x2 / 王子)
(x0 / 驯服-01, arg1, x4 / 狐狸)
(x0 / 驯服-01, manner, x6 / 这样)
(x2 / 王子, mod, x3 / 小-01)
(x6 / 这样, manner, x7 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),狐狸,狐狸,false), Span(5,6,List(1),驯服,驯服,false), Span(4,5,List(2),王子,王子,false), Span(3,4,List(3),小,小,false), Span(1,2,List(4),这样,这样-01,false), Span(0,1,List(5),就,就-01,false)),Map(2 -> 王子, 5 -> 就-01, 1 -> 驯服, 4 -> 这样-01, 0 -> 狐狸, 3 -> 小),Map(就 -> 就-01, 驯 -> 驯服, 这 -> 这样-01, 王 -> 王子, 小 -> 小, 狐 -> 狐狸))),[Ljava.lang.String;@5a936e64,Annotation([Ljava.lang.String;@3b4a1a75,[Ljava.lang.String;@65bad087,[Ljava.lang.String;@276cc8dc),Annotation([Ljava.lang.String;@66cd621b,[Ljava.lang.String;@d3f4505,[Ledu.cmu.lti.nlp.amr.Dependency;@3eb292cd),Annotation([Ljava.lang.String;@7fd987ef,[Ljava.lang.String;@7209ffb5,[Ljava.lang.String;@5e99b9c),Annotation([Ljava.lang.String;@2fe74516,[Ljava.lang.String;@1c3259fa,[Ledu.cmu.lti.nlp.amr.Entity;@217bf99e))
AMR:
(王 / 王子, mod, 小 / 小)
(这 / 这样-01, ARG1, 就 / 就-01)
(驯 / 驯服, domain, 王 / 王子)
(驯 / 驯服, manner, 这 / 这样-01)
(驯 / 驯服, mod, 狐 / 狐狸)

Decoded in 11,910 microseconds
Sentence: 当 出发 的 时刻 就 快 要 来到 时： “ 啊 ！ ” 狐狸 说 ， “ 我 一定 会 哭 的 。 ”

Spans:
Span 19-20:  一定 => 一定
Span 20-21:  会 => 会-03
Span 1-2:  出发 => 出发-01
Span 21-22:  哭 => 哭-01
Span 11-12:  啊 => 啊
Span 4-5:  就 => 就-01
Span 0-1:  当 => 当-04
Span 5-6:  快 => 快
Span 18-19:  我 => 我
Span 3-4:  时刻 => 时刻
Span 7-8:  来到 => 来到-01
Span 14-15:  狐狸 => 狐狸
Span 6-7:  要 => 要-02
Span 15-16:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  一定 => 一定
Oracle Span 20-21:  会 => 会-02
Oracle Span 1-2:  出发 => 出发-01
Oracle Span 21-22:  哭 => 哭-01
Oracle Span 11-12:  啊 => 啊
Oracle Span 5-6:  快 => 快-01
Oracle Span 18-19:  我 => 我
Oracle Span 3-4:  时刻 => 时刻
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 6-7:  要 => 要-03
Oracle Span 15-16:  说 => 说-01

Incorrect span: 会 => 会-03
Incorrect span: 说 => 说-02
Extra span: 来到 => 来到-01
Incorrect span: 要 => 要-02
Incorrect span: 快 => 快
Extra span: 就 => 就-01
Extra span: 当 => 当-04
Missing span: 说 => 说-01
Missing span: 会 => 会-02
Missing span: 要 => 要-03
Missing span: 快 => 快-01
Dependencies:
1	当	_	AD	AD	_	2	advmod	_	_
2	出发	_	VV	VV	_	4	rcmod	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	时刻	_	NN	NN	_	8	nsubj	_	_
5	就	_	P	P	_	8	prep	_	_
6	快	_	VA	VA	_	5	pccomp	_	_
7	要	_	VV	VV	_	8	mmod	_	_
8	来到	_	VV	VV	_	0	root	_	_
9	时：	_	NR	NR	_	14	nn	_	_
10	“	_	PU	PU	_	12	punct	_	_
11	啊	_	JJ	JJ	_	12	amod	_	_
12	！	_	NN	NN	_	14	nn	_	_
13	”	_	PU	PU	_	12	punct	_	_
14	狐狸	_	NN	NN	_	15	nsubj	_	_
15	说	_	VV	VV	_	8	dobj	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	“	_	PU	PU	_	20	punct	_	_
18	我	_	PN	PN	_	20	nsubj	_	_
19	一定	_	AD	AD	_	20	advmod	_	_
20	会	_	VV	VV	_	15	ccomp	_	_
21	哭	_	NN	NN	_	20	dobj	_	_
22	的	_	DEC	DEC	_	15	cpm	_	_
23	。	_	PU	PU	_	8	punct	_	_
24	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 说-01, arg0, x15 / 狐狸)
(x18 / 会-02, arg0, x19 / 哭-01)
(x18 / 会-02, manner, x21 / 一定)
(x19 / 哭-01, arg0, x20 / 我)
(x25 / 时刻, mod, x26 / 出发-01)
(x29 / 要-03, manner, x30 / 快-01)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),哭,哭-01,false), Span(20,21,List(1),会,会-03,false), Span(19,20,List(2),一定,一定,false), Span(18,19,List(3),我,我,false), Span(15,16,List(4),说,说-02,false), Span(14,15,List(5),狐狸,狐狸,false), Span(11,12,List(6),啊,啊,false), Span(7,8,List(7),来到,来到-01,false), Span(6,7,List(8),要,要-02,false), Span(5,6,List(9),快,快,false), Span(4,5,List(10),就,就-01,false), Span(3,4,List(11),时刻,时刻,false), Span(1,2,List(12),出发,出发-01,false), Span(0,1,List(13),当,当-04,false)),Map(2 -> 一定, 5 -> 狐狸, 12 -> 出发-01, 8 -> 要-02, 7 -> 来到-01, 1 -> 会-03, 4 -> 说-02, 11 -> 时刻, 6 -> 啊, 0 -> 哭-01, 9 -> 快, 3 -> 我, 10 -> 就-01, 13 -> 当-04),Map(哭 -> 哭-01, 就 -> 就-01, 啊 -> 啊, 快 -> 快, 我 -> 我, 来 -> 来到-01, 要 -> 要-02, 出 -> 出发-01, 会 -> 会-03, 说 -> 说-02, 狐 -> 狐狸, 时 -> 时刻, 一 -> 一定, 当 -> 当-04))),[Ljava.lang.String;@6807a356,Annotation([Ljava.lang.String;@7ddd84b5,[Ljava.lang.String;@73aeef7d,[Ljava.lang.String;@d675f9f),Annotation([Ljava.lang.String;@58af5076,[Ljava.lang.String;@49469ffa,[Ledu.cmu.lti.nlp.amr.Dependency;@4d9754a8),Annotation([Ljava.lang.String;@7a3b7122,[Ljava.lang.String;@58b5a2f3,[Ljava.lang.String;@25f15f50),Annotation([Ljava.lang.String;@52b46d52,[Ljava.lang.String;@7327a447,[Ledu.cmu.lti.nlp.amr.Entity;@67022ea))
AMR:
(会 / 会-03, manner, 一 / 一定)
(会 / 会-03, poss, 我 / 我)
(出 / 出发-01, manner, 当 / 当-04)
(哭 / 哭-01, manner, 会 / 会-03)
(就 / 就-01, manner, 时 / 时刻)
(快 / 快, manner, 就 / 就-01)
(时 / 时刻, mod, 出 / 出发-01)
(要 / 要-02, manner, 快 / 快)
(要 / 要-02, manner, 来 / 来到-01)
(说 / 说-02, manner, 啊 / 啊)
(说 / 说-02, manner, 来 / 来到-01)
(说 / 说-02, op, 会 / 会-03)
(说 / 说-02, poss, 狐 / 狐狸)

Decoded in 53,854 microseconds
Sentence: “ 这 是 你 的 过错 ， ” 小 王子 说 ，

Spans:
Span 3-4:  你 => 你
Span 8-9:  小 => 小
Span 2-3:  是 => 是-04
Span 9-10:  王子 => 王子
Span 10-11:  说 => 说-02
Span 5-6:  过错 => 过错
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 10-11:  说 => 说-01
Oracle Span 5-6:  过错 => 过错
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	你	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	过错	_	NN	NN	_	3	attr	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	3	dep	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 过错)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 过错, domain, x7 / 这)
(x4 / 过错, poss, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),王子,王子,false), Span(8,9,List(2),小,小,false), Span(5,6,List(3),过错,过错,false), Span(3,4,List(4),你,你,false), Span(2,3,List(5),是,是-04,false), Span(1,2,List(6),这,这,false)),Map(2 -> 小, 5 -> 是-04, 1 -> 王子, 4 -> 你, 6 -> 这, 0 -> 说-02, 3 -> 过错),Map(这 -> 这, 过 -> 过错, 你 -> 你, 王 -> 王子, 小 -> 小, 说 -> 说-02, 是 -> 是-04))),[Ljava.lang.String;@2954f6ab,Annotation([Ljava.lang.String;@58fbd02e,[Ljava.lang.String;@163042ea,[Ljava.lang.String;@11d045b4),Annotation([Ljava.lang.String;@1fbf088b,[Ljava.lang.String;@1943c1f2,[Ledu.cmu.lti.nlp.amr.Dependency;@d70f722),Annotation([Ljava.lang.String;@1e1eeedd,[Ljava.lang.String;@798256c5,[Ljava.lang.String;@7ec95456),Annotation([Ljava.lang.String;@748a654a,[Ljava.lang.String;@1d8b0500,[Ledu.cmu.lti.nlp.amr.Entity;@76544c0a))
AMR:
(是 / 是-04, mod, 这 / 这)
(是 / 是-04, prep-through, 你 / 你)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, degree, 是 / 是-04)
(过 / 过错, domain, 是 / 是-04)

Decoded in 17,540 microseconds
Sentence: “ 我 本来 并 不 想 给 你 任何 痛苦 ， 可 你 却 要 我 驯服 你 … ”

Spans:
Span 4-5:  不 => 不
Span 8-9:  任何 => 任何
Span 17-18:  你 => 你
Span 12-13:  你 => 你
Span 7-8:  你 => 你
Span 11-12:  可 => 可-01
Span 3-4:  并 => 并
Span 5-6:  想 => 想-05
Span 15-16:  我 => 我
Span 1-2:  我 => 我
Span 2-3:  本来 => 本来
Span 9-10:  痛苦 => 痛苦-01
Span 6-7:  给 => 给-02
Span 14-15:  要 => 要-02
Span 16-17:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 8-9:  任何 => 任何
Oracle Span 7-8:  你 => 你
Oracle Span 5-6:  想 => 想-02
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  本来 => 本来
Oracle Span 9-10:  痛苦 => 痛苦-01
Oracle Span 6-7:  给 => 给-01
Oracle Span 14-15:  要 => 要-04
Oracle Span 16-17:  驯服 => 驯服-01

Extra span: 你 => 你
Incorrect span: 驯服 => 驯服
Extra span: 我 => 我
Incorrect span: 要 => 要-02
Extra span: 你 => 你
Extra span: 可 => 可-01
Incorrect span: 给 => 给-02
Incorrect span: 想 => 想-05
Extra span: 不 => 不
Extra span: 并 => 并
Missing span: 想 => 想-02
Missing span: 给 => 给-01
Missing span: 要 => 要-04
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	本来	_	AD	AD	_	6	advmod	_	_
4	并	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	想	_	VV	VV	_	17	conj	_	_
7	给	_	P	P	_	15	prep	_	_
8	你	_	PN	PN	_	10	nn	_	_
9	任何	_	DT	DT	_	10	det	_	_
10	痛苦	_	NN	NN	_	7	pobj	_	_
11	,	_	PU	PU	_	15	punct	_	_
12	可	_	AD	AD	_	15	advmod	_	_
13	你	_	PN	PN	_	15	nsubj	_	_
14	却	_	AD	AD	_	15	advmod	_	_
15	要	_	VV	VV	_	6	ccomp	_	_
16	我	_	PN	PN	_	17	nsubj	_	_
17	驯服	_	VV	VV	_	0	root	_	_
18	你	_	PN	PN	_	19	nn	_	_
19	…	_	NN	NN	_	17	dobj	_	_
20	”	_	PU	PU	_	17	punct	_	_

Oracle:
(x23 / 想-02, arg0, x25 / 我)
(x23 / 想-02, arg1, x27 / 给-01)
(x23 / 想-02, manner, x26 / 本来)
(x27 / 给-01, arg1, x29 / 痛苦-01)
(x27 / 给-01, arg2, x31 / 你)
(x29 / 痛苦-01, mod, x30 / 任何)
(x32 / 要-04, arg2, x39 / 驯服-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),你,你,false), Span(16,17,List(1),驯服,驯服,false), Span(15,16,List(2),我,我,false), Span(14,15,List(3),要,要-02,false), Span(12,13,List(4),你,你,false), Span(11,12,List(5),可,可-01,false), Span(9,10,List(6),痛苦,痛苦-01,false), Span(8,9,List(7),任何,任何,false), Span(7,8,List(8),你,你,false), Span(6,7,List(9),给,给-02,false), Span(5,6,List(10),想,想-05,false), Span(4,5,List(11),不,不,false), Span(3,4,List(12),并,并,false), Span(2,3,List(13),本来,本来,false), Span(1,2,List(14),我,我,false)),Map(2 -> 我, 5 -> 可-01, 12 -> 并, 8 -> 你, 7 -> 任何, 1 -> 驯服, 4 -> 你, 11 -> 不, 14 -> 我, 6 -> 痛苦-01, 0 -> 你, 9 -> 给-02, 3 -> 要-02, 10 -> 想-05, 13 -> 本来),Map(驯 -> 驯服, 任 -> 任何, 本 -> 本来, 我 -> 我, 要 -> 要-02, 你3 -> 你, 我2 -> 我, 你 -> 你, 痛 -> 痛苦-01, 给 -> 给-02, 不 -> 不, 你2 -> 你, 想 -> 想-05, 并 -> 并, 可 -> 可-01))),[Ljava.lang.String;@428bdd72,Annotation([Ljava.lang.String;@650c405c,[Ljava.lang.String;@20eaeaf8,[Ljava.lang.String;@748ac6f3),Annotation([Ljava.lang.String;@68f6e55d,[Ljava.lang.String;@6fff46bf,[Ledu.cmu.lti.nlp.amr.Dependency;@1835dc92),Annotation([Ljava.lang.String;@3aaa3c39,[Ljava.lang.String;@65a9ea3c,[Ljava.lang.String;@70f68288),Annotation([Ljava.lang.String;@46911148,[Ljava.lang.String;@2db1b657,[Ledu.cmu.lti.nlp.amr.Entity;@7e351d7))
AMR:
(可 / 可-01, degree, 痛 / 痛苦-01)
(可 / 可-01, prep-through, 你2 / 你)
(想 / 想-05, manner, 不 / 不)
(想 / 想-05, manner, 并 / 并)
(想 / 想-05, manner, 本 / 本来)
(想 / 想-05, purpose, 给 / 给-02)
(本 / 本来, beneficiary, 我2 / 我)
(痛 / 痛苦-01, degree, 给 / 给-02)
(痛 / 痛苦-01, mod, 任 / 任何)
(给 / 给-02, prep-through, 你3 / 你)
(要 / 要-02, degree, 可 / 可-01)
(要 / 要-02, location, 驯 / 驯服)
(驯 / 驯服, poss, 你 / 你)
(驯 / 驯服, poss, 我 / 我)

Decoded in 61,183 microseconds
Sentence: “ 是 这样 的 。 ” 狐狸 说 。

Spans:
Span 1-2:  是 => 是-04
Span 6-7:  狐狸 => 狐狸
Span 7-8:  说 => 说-02
Span 2-3:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  狐狸 => 狐狸
Oracle Span 7-8:  说 => 说-01
Oracle Span 2-3:  这样 => 这样-01

Incorrect span: 说 => 说-02
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	是	_	VC	VC	_	5	rcmod	_	_
3	这样	_	PN	PN	_	2	attr	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	。	_	NN	NN	_	7	nn	_	_
6	”	_	PU	PU	_	5	punct	_	_
7	狐狸	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 这样-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),狐狸,狐狸,false), Span(2,3,List(2),这样,这样-01,false), Span(1,2,List(3),是,是-04,false)),Map(2 -> 这样-01, 1 -> 狐狸, 0 -> 说-02, 3 -> 是-04),Map(这 -> 这样-01, 说 -> 说-02, 狐 -> 狐狸, 是 -> 是-04))),[Ljava.lang.String;@43c57161,Annotation([Ljava.lang.String;@d902300,[Ljava.lang.String;@2db33feb,[Ljava.lang.String;@30c3ae63),Annotation([Ljava.lang.String;@58658f63,[Ljava.lang.String;@54e12f4c,[Ledu.cmu.lti.nlp.amr.Dependency;@60990e5c),Annotation([Ljava.lang.String;@4d84049a,[Ljava.lang.String;@39ee94de,[Ljava.lang.String;@642857e0),Annotation([Ljava.lang.String;@4c6b4ed7,[Ljava.lang.String;@21263314,[Ledu.cmu.lti.nlp.amr.Entity;@6ca30b8a))
AMR:
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 这 / 这样-01)
(这 / 这样-01, degree, 是 / 是-04)

Decoded in 8,779 microseconds
Sentence: “ 你 可 就 要 哭 了 ！ ” 小 王子 说 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  可 => 可-01
Span 5-6:  哭 => 哭-01
Span 9-10:  小 => 小
Span 3-4:  就 => 就-01
Span 10-11:  王子 => 王子
Span 4-5:  要 => 要-02
Span 11-12:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  哭 => 哭-01
Oracle Span 9-10:  小 => 小
Oracle Span 3-4:  就 => 就
Oracle Span 10-11:  王子 => 王子
Oracle Span 4-5:  要 => 要-03
Oracle Span 11-12:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 要 => 要-02
Incorrect span: 就 => 就-01
Extra span: 可 => 可-01
Missing span: 说 => 说-01
Missing span: 要 => 要-03
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你	_	PN	PN	_	6	xsubj	_	_
3	可	_	VV	VV	_	6	mmod	_	_
4	就	_	AD	AD	_	6	advmod	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	哭	_	VV	VV	_	11	vmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	！	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	6	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	说	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_
14	你	_	PN	PN	_	6	nsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 要-03)
(x2 / 王子, mod, x3 / 小)
(x4 / 要-03, arg0, x5 / 哭-01)
(x4 / 要-03, manner, x7 / 就)
(x5 / 哭-01, arg0, x6 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),王子,王子,false), Span(9,10,List(2),小,小,false), Span(5,6,List(3),哭,哭-01,false), Span(4,5,List(4),要,要-02,false), Span(3,4,List(5),就,就-01,false), Span(2,3,List(6),可,可-01,false), Span(1,2,List(7),你,你,false)),Map(2 -> 小, 5 -> 就-01, 7 -> 你, 1 -> 王子, 4 -> 要-02, 6 -> 可-01, 0 -> 说-02, 3 -> 哭-01),Map(哭 -> 哭-01, 就 -> 就-01, 要 -> 要-02, 你 -> 你, 王 -> 王子, 小 -> 小, 说 -> 说-02, 可 -> 可-01))),[Ljava.lang.String;@4a92c6a9,Annotation([Ljava.lang.String;@5c9934da,[Ljava.lang.String;@4cb702ce,[Ljava.lang.String;@383caf89),Annotation([Ljava.lang.String;@64c781a9,[Ljava.lang.String;@71ed560f,[Ledu.cmu.lti.nlp.amr.Dependency;@5b88b8e),Annotation([Ljava.lang.String;@58253c57,[Ljava.lang.String;@b73433,[Ljava.lang.String;@1bf14704),Annotation([Ljava.lang.String;@5a545b0f,[Ljava.lang.String;@2be21396,[Ledu.cmu.lti.nlp.amr.Entity;@124dac75))
AMR:
(可 / 可-01, degree, 你 / 你)
(就 / 就-01, degree, 可 / 可-01)
(要 / 要-02, manner, 就 / 就-01)
(要 / 要-02, purpose, 哭 / 哭-01)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 哭 / 哭-01)

Decoded in 18,971 microseconds
Sentence: “ 当然 罗 。 ” 狐狸 说 。

Spans:
Span 1-2:  当然 => 当然
Span 5-6:  狐狸 => 狐狸
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  当然 => 当然
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	罗	_	VV	VV	_	6	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	狐狸	_	NN	NN	_	7	nsubj	_	_
7	说	_	VV	VV	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 当然)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(5,6,List(1),狐狸,狐狸,false), Span(1,2,List(2),当然,当然,false)),Map(2 -> 当然, 1 -> 狐狸, 0 -> 说-02),Map(说 -> 说-02, 狐 -> 狐狸, 当 -> 当然))),[Ljava.lang.String;@315105f,Annotation([Ljava.lang.String;@7b61bf11,[Ljava.lang.String;@40247d48,[Ljava.lang.String;@3ff54f3d),Annotation([Ljava.lang.String;@14c93774,[Ljava.lang.String;@62a68bcb,[Ledu.cmu.lti.nlp.amr.Dependency;@18b74ea),Annotation([Ljava.lang.String;@14924f41,[Ljava.lang.String;@493da830,[Ljava.lang.String;@1f939a0f),Annotation([Ljava.lang.String;@45658133,[Ljava.lang.String;@430b2699,[Ledu.cmu.lti.nlp.amr.Entity;@67536ae0))
AMR:
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 当 / 当然)

Decoded in 4,526 microseconds
Sentence: “ 那么 你 什么 好处 也 没 得到 。 ”

Spans:
Span 5-6:  也 => 也
Span 3-4:  什么 => 什么
Span 2-3:  你 => 你
Span 4-5:  好处 => 好处
Span 7-8:  得到 => 得到-01
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 3-4:  什么 => 什么
Oracle Span 2-3:  你 => 你
Oracle Span 4-5:  好处 => 好处
Oracle Span 7-8:  得到 => 得到-01

Extra span: 那么 => 那么
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	什么	_	DT	DT	_	5	det	_	_
5	好处	_	NN	NN	_	8	dep	_	_
6	也	_	AD	AD	_	8	advmod	_	_
7	没	_	AD	AD	_	8	neg	_	_
8	得到	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 得到-01, arg0, x12 / 你)
(x10 / 得到-01, arg1, x13 / 好处)
(x10 / 得到-01, manner, x15 / 也)
(x13 / 好处, mod, x14 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),得到,得到-01,false), Span(5,6,List(1),也,也,false), Span(4,5,List(2),好处,好处,false), Span(3,4,List(3),什么,什么,false), Span(2,3,List(4),你,你,false), Span(1,2,List(5),那么,那么,false)),Map(2 -> 好处, 5 -> 那么, 1 -> 也, 4 -> 你, 0 -> 得到-01, 3 -> 什么),Map(也 -> 也, 得 -> 得到-01, 你 -> 你, 好 -> 好处, 那 -> 那么, 什 -> 什么))),[Ljava.lang.String;@6413d7e7,Annotation([Ljava.lang.String;@d16be4f,[Ljava.lang.String;@17b37e9a,[Ljava.lang.String;@6bcb12e6),Annotation([Ljava.lang.String;@111d5c97,[Ljava.lang.String;@29c17c3d,[Ledu.cmu.lti.nlp.amr.Dependency;@250a9031),Annotation([Ljava.lang.String;@1665fa54,[Ljava.lang.String;@6d67f5eb,[Ljava.lang.String;@4f654cee),Annotation([Ljava.lang.String;@3e1fd62b,[Ljava.lang.String;@7112ce6,[Ledu.cmu.lti.nlp.amr.Entity;@558b4942))
AMR:
(你 / 你, degree, 那 / 那么)
(好 / 好处, degree, 那 / 那么)
(好 / 好处, mod, 什 / 什么)
(得 / 得到-01, manner, 也 / 也)
(得 / 得到-01, unit, 好 / 好处)

Decoded in 11,321 microseconds
Sentence: “ 由于 麦子 颜色 的 缘故 ， 我 还是 得到 了 好处 。 ” 狐狸 说 。

Spans:
Span 11-12:  好处 => 好处
Span 9-10:  得到 => 得到-01
Span 7-8:  我 => 我
Span 14-15:  狐狸 => 狐狸
Span 5-6:  缘故 => 缘故
Span 15-16:  说 => 说-02
Span 8-9:  还是 => 还是
Span 3-4:  颜色 => 颜色
Span 2-3:  麦子 => 麦子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  好处 => 好处
Oracle Span 9-10:  得到 => 得到-01
Oracle Span 7-8:  我 => 我
Oracle Span 14-15:  狐狸 => 狐狸
Oracle Span 5-6:  缘故 => 缘故
Oracle Span 15-16:  说 => 说-01
Oracle Span 8-9:  还是 => 还是
Oracle Span 3-4:  颜色 => 颜色
Oracle Span 2-3:  麦子 => 麦子

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	10	punct	_	_
2	由于	_	P	P	_	10	prep	_	_
3	麦子	_	VV	VV	_	2	pccomp	_	_
4	颜色	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	缘故	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	还是	_	AD	AD	_	10	advmod	_	_
10	得到	_	VV	VV	_	15	vmod	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	好处	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	10	punct	_	_
14	”	_	PU	PU	_	10	punct	_	_
15	狐狸	_	NN	NN	_	16	nsubj	_	_
16	说	_	VV	VV	_	0	root	_	_
17	。	_	PU	PU	_	16	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x4 / 缘故, mod, x5 / 颜色)
(x5 / 颜色, poss, x6 / 麦子)
(x8 / 得到-01, arg0, x9 / 我)
(x8 / 得到-01, arg1, x11 / 好处)
(x8 / 得到-01, manner, x10 / 还是)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说,说-02,false), Span(14,15,List(1),狐狸,狐狸,false), Span(11,12,List(2),好处,好处,false), Span(9,10,List(3),得到,得到-01,false), Span(8,9,List(4),还是,还是,false), Span(7,8,List(5),我,我,false), Span(5,6,List(6),缘故,缘故,false), Span(3,4,List(7),颜色,颜色,false), Span(2,3,List(8),麦子,麦子,false)),Map(2 -> 好处, 5 -> 我, 8 -> 麦子, 7 -> 颜色, 1 -> 狐狸, 4 -> 还是, 6 -> 缘故, 0 -> 说-02, 3 -> 得到-01),Map(我 -> 我, 颜 -> 颜色, 得 -> 得到-01, 麦 -> 麦子, 缘 -> 缘故, 还 -> 还是, 好 -> 好处, 说 -> 说-02, 狐 -> 狐狸))),[Ljava.lang.String;@30ec7d21,Annotation([Ljava.lang.String;@70025b99,[Ljava.lang.String;@7efa3f63,[Ljava.lang.String;@7134b8a7),Annotation([Ljava.lang.String;@2262d6d5,[Ljava.lang.String;@40de8f93,[Ledu.cmu.lti.nlp.amr.Dependency;@6ff0b1cc),Annotation([Ljava.lang.String;@3b55dd15,[Ljava.lang.String;@f3560d4,[Ljava.lang.String;@3ba3d4b6),Annotation([Ljava.lang.String;@51b77cdf,[Ljava.lang.String;@441fbe89,[Ledu.cmu.lti.nlp.amr.Entity;@6088451e))
AMR:
(得 / 得到-01, example, 我 / 我)
(得 / 得到-01, manner, 还 / 还是)
(得 / 得到-01, unit, 好 / 好处)
(缘 / 缘故, mod, 颜 / 颜色)
(缘 / 缘故, purpose, 得 / 得到-01)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, unit, 好 / 好处)
(颜 / 颜色, poss, 麦 / 麦子)

Decoded in 24,128 microseconds
Sentence: 然后 ， 他 又 接着 说 。 “ 再 去 看看 那些 玫瑰花 吧 。

Spans:
Span 2-3:  他 => 他
Span 8-9:  再 => 再
Span 9-10:  去 => 去-02
Span 3-4:  又 => 又
Span 4-5:  接着 => 接着-01
Span 12-13:  玫瑰花 => 玫瑰花
Span 10-11:  看看 => 看看-01
Span 5-6:  说 => 说-02
Span 11-12:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 8-9:  再 => 再-01
Oracle Span 9-10:  去 => 去-01
Oracle Span 4-5:  接着 => 接着-01
Oracle Span 12-13:  玫瑰花 => 玫瑰花
Oracle Span 10-11:  看看 => 看看-01
Oracle Span 5-6:  说 => 说-01
Oracle Span 11-12:  那些 => 那些

Incorrect span: 去 => 去-02
Incorrect span: 再 => 再
Incorrect span: 说 => 说-02
Extra span: 又 => 又
Missing span: 说 => 说-01
Missing span: 去 => 去-01
Missing span: 再 => 再-01
Dependencies:
1	然后	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	dobj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	接着	_	VV	VV	_	0	root	_	_
6	说	_	VV	VV	_	5	comod	_	_
7	。	_	PU	PU	_	5	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	去	_	VV	VV	_	11	nsubj	_	_
11	看看	_	VV	VV	_	5	dep	_	_
12	那些	_	DT	DT	_	13	det	_	_
13	玫瑰花	_	NN	NN	_	11	dobj	_	_
14	吧	_	SP	SP	_	11	dep	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 接着-01, arg0, x3 / 他)
(x2 / 接着-01, arg1, x4 / 说-01)
(x4 / 说-01, arg1, x6 / 去-01)
(x6 / 去-01, arg1, x8 / 看看-01)
(x6 / 去-01, manner, x7 / 再-01)
(x8 / 看看-01, arg1, x9 / 玫瑰花)
(x9 / 玫瑰花, mod, x10 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),玫瑰花,玫瑰花,false), Span(11,12,List(1),那些,那些,false), Span(10,11,List(2),看看,看看-01,false), Span(9,10,List(3),去,去-02,false), Span(8,9,List(4),再,再,false), Span(5,6,List(5),说,说-02,false), Span(4,5,List(6),接着,接着-01,false), Span(3,4,List(7),又,又,false), Span(2,3,List(8),他,他,false)),Map(2 -> 看看-01, 5 -> 说-02, 8 -> 他, 7 -> 又, 1 -> 那些, 4 -> 再, 6 -> 接着-01, 0 -> 玫瑰花, 3 -> 去-02),Map(又 -> 又, 接 -> 接着-01, 去 -> 去-02, 他 -> 他, 玫 -> 玫瑰花, 说 -> 说-02, 看 -> 看看-01, 那 -> 那些, 再 -> 再))),[Ljava.lang.String;@45ab3bdd,Annotation([Ljava.lang.String;@2f10f633,[Ljava.lang.String;@1642eeae,[Ljava.lang.String;@3440e9cd),Annotation([Ljava.lang.String;@28a9494b,[Ljava.lang.String;@a09303,[Ledu.cmu.lti.nlp.amr.Dependency;@1163a27),Annotation([Ljava.lang.String;@322ba549,[Ljava.lang.String;@502a4156,[Ljava.lang.String;@5416f8db),Annotation([Ljava.lang.String;@64e1377c,[Ljava.lang.String;@b0fd744,[Ledu.cmu.lti.nlp.amr.Entity;@92d1782))
AMR:
(去 / 去-02, manner, 再 / 再)
(接 / 接着-01, manner, 又 / 又)
(玫 / 玫瑰花, mod, 那 / 那些)
(看 / 看看-01, ARG5, 那 / 那些)
(看 / 看看-01, prep-in-addition-to, 去 / 去-02)
(说 / 说-02, prep-in-addition-to, 接 / 接着-01)
(说 / 说-02, prep-on-behalf, 他 / 他)
(说 / 说-02, snt3, 去 / 去-02)

Decoded in 25,996 microseconds
Sentence: 你 一定 会 明白 ， 你 的 那 朵 是 世界 上 独一无二 的 玫瑰 。

Spans:
Span 1-2:  一定 => 一定
Span 10-11:  世界 => 世界
Span 2-3:  会 => 会-03
Span 5-6:  你 => 你
Span 0-1:  你 => 你
Span 3-4:  明白 => 明白-01
Span 9-10:  是 => 是-04
Span 12-13:  独一无二 => 独一无二
Span 14-15:  玫瑰 => 玫瑰
Span 7-8:  那 => 那

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一定 => 一定
Oracle Span 10-11:  世界 => 世界
Oracle Span 2-3:  会 => 会-02
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 12-13:  独一无二 => 独一无二-01
Oracle Span 14-15:  玫瑰 => 玫瑰
Oracle Span 7-8:  那 => 那

Incorrect span: 独一无二 => 独一无二
Extra span: 是 => 是-04
Extra span: 你 => 你
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 独一无二 => 独一无二-01
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	一定	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	你	_	PN	PN	_	8	dep	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	那	_	DT	DT	_	10	top	_	_
9	朵	_	M	M	_	8	clf	_	_
10	是	_	VC	VC	_	4	ccomp	_	_
11	世界	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	15	dep	_	_
13	独一无二	_	CD	CD	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	玫瑰	_	NN	NN	_	10	attr	_	_
16	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 明白-01)
(x0 / 会-02, manner, x4 / 一定)
(x2 / 明白-01, arg0, x3 / 你)
(x2 / 明白-01, arg1, x5 / 玫瑰)
(x5 / 玫瑰, domain, x6 / 那)
(x5 / 玫瑰, mod, x8 / 独一无二-01)
(x8 / 独一无二-01, location, x9 / 世界)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),玫瑰,玫瑰,false), Span(12,13,List(1),独一无二,独一无二,false), Span(10,11,List(2),世界,世界,false), Span(9,10,List(3),是,是-04,false), Span(7,8,List(4),那,那,false), Span(5,6,List(5),你,你,false), Span(3,4,List(6),明白,明白-01,false), Span(2,3,List(7),会,会-03,false), Span(1,2,List(8),一定,一定,false), Span(0,1,List(9),你,你,false)),Map(2 -> 世界, 5 -> 你, 8 -> 一定, 7 -> 会-03, 1 -> 独一无二, 4 -> 那, 6 -> 明白-01, 9 -> 你, 0 -> 玫瑰, 3 -> 是-04),Map(你 -> 你, 独 -> 独一无二, 玫 -> 玫瑰, 会 -> 会-03, 世 -> 世界, 你2 -> 你, 明 -> 明白-01, 那 -> 那, 一 -> 一定, 是 -> 是-04))),[Ljava.lang.String;@6a1ef65c,Annotation([Ljava.lang.String;@72976b4,[Ljava.lang.String;@726934e2,[Ljava.lang.String;@1319bc2a),Annotation([Ljava.lang.String;@e280403,[Ljava.lang.String;@42f85fa4,[Ledu.cmu.lti.nlp.amr.Dependency;@798dad3d),Annotation([Ljava.lang.String;@27abb6ca,[Ljava.lang.String;@696db620,[Ljava.lang.String;@6968c1d6),Annotation([Ljava.lang.String;@7d986d83,[Ljava.lang.String;@77f991c,[Ledu.cmu.lti.nlp.amr.Entity;@3a7e365))
AMR:
(一 / 一定, degree, 会 / 会-03)
(会 / 会-03, op, 明 / 明白-01)
(明 / 明白-01, op, 玫 / 玫瑰)
(明 / 明白-01, season, 你2 / 你)
(是 / 是-04, ARG0, 那 / 那)
(是 / 是-04, ARG6, 世 / 世界)
(玫 / 玫瑰, domain, 那 / 那)
(玫 / 玫瑰, mod, 独 / 独一无二)
(那 / 那, ARG4, 你 / 你)

Decoded in 34,698 microseconds
Sentence: 你 回来 和 我 告别 时 ， 我 再 赠送 给 你 一 个 秘密 。 ”

Spans:
Span 11-12:  你 => 你
Span 0-1:  你 => 你
Span 8-9:  再 => 再
Span 4-5:  告别 => 告别-01
Span 1-2:  回来 => 回来-02
Span 7-8:  我 => 我
Span 3-4:  我 => 我
Span 14-15:  秘密 => 秘密-01
Span 10-11:  给 => 给-02
Span 9-10:  赠送 => 赠送-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 8-9:  再 => 再-01
Oracle Span 4-5:  告别 => 告别-01
Oracle Span 1-2:  回来 => 回来-01
Oracle Span 3-4:  我 => 我
Oracle Span 14-15:  秘密 => 秘密
Oracle Span 9-10:  赠送 => 赠送-01

Incorrect span: 秘密 => 秘密-01
Extra span: 你 => 你
Extra span: 给 => 给-02
Incorrect span: 再 => 再
Extra span: 我 => 我
Incorrect span: 回来 => 回来-02
Missing span: 回来 => 回来-01
Missing span: 秘密 => 秘密
Missing span: 再 => 再-01
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	回来	_	VV	VV	_	6	lccomp	_	_
3	和	_	CC	CC	_	2	cc	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	告别	_	VV	VV	_	2	conj	_	_
6	时	_	LC	LC	_	10	loc	_	_
7	,	_	PU	PU	_	10	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	再	_	AD	AD	_	10	advmod	_	_
10	赠送	_	VV	VV	_	0	root	_	_
11	给	_	VV	VV	_	10	dobj	_	_
12	你	_	PN	PN	_	11	dobj	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	个	_	M	M	_	11	range	_	_
15	秘密	_	AD	AD	_	11	advmod	_	_
16	。	_	PU	PU	_	10	punct	_	_
17	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 赠送-01, arg0, x15 / 我)
(x13 / 赠送-01, arg1, x16 / 秘密)
(x13 / 赠送-01, arg2, x18 / 你)
(x13 / 赠送-01, manner, x14 / 再-01)
(x13 / 赠送-01, time, x19 / 回来-01)
(x19 / 回来-01, purpose, x22 / 告别-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),秘密,秘密-01,false), Span(11,12,List(1),你,你,false), Span(10,11,List(2),给,给-02,false), Span(9,10,List(3),赠送,赠送-01,false), Span(8,9,List(4),再,再,false), Span(7,8,List(5),我,我,false), Span(4,5,List(6),告别,告别-01,false), Span(3,4,List(7),我,我,false), Span(1,2,List(8),回来,回来-02,false), Span(0,1,List(9),你,你,false)),Map(2 -> 给-02, 5 -> 我, 8 -> 回来-02, 7 -> 我, 1 -> 你, 4 -> 再, 6 -> 告别-01, 9 -> 你, 0 -> 秘密-01, 3 -> 赠送-01),Map(我 -> 我, 我2 -> 我, 你 -> 你, 给 -> 给-02, 告 -> 告别-01, 你2 -> 你, 回 -> 回来-02, 秘 -> 秘密-01, 再 -> 再, 赠 -> 赠送-01))),[Ljava.lang.String;@2ceee4b6,Annotation([Ljava.lang.String;@12a470dd,[Ljava.lang.String;@6968bcec,[Ljava.lang.String;@5568c66f),Annotation([Ljava.lang.String;@e784320,[Ljava.lang.String;@3f6bf8aa,[Ledu.cmu.lti.nlp.amr.Dependency;@13c8ac77),Annotation([Ljava.lang.String;@4bdf,[Ljava.lang.String;@4cad79bc,[Ljava.lang.String;@2c63762b),Annotation([Ljava.lang.String;@7a9eccc4,[Ljava.lang.String;@78422efb,[Ledu.cmu.lti.nlp.amr.Entity;@5f05c8d6))
AMR:
(回 / 回来-02, purpose, 告 / 告别-01)
(回 / 回来-02, quant, 你2 / 你)
(我2 / 我, accompanier, 告 / 告别-01)
(给 / 给-02, accompanier, 你 / 你)
(赠 / 赠送-01, manner, 再 / 再)
(赠 / 赠送-01, manner, 告 / 告别-01)
(赠 / 赠送-01, manner, 我 / 我)
(赠 / 赠送-01, time, 秘 / 秘密-01)
(赠 / 赠送-01, time, 给 / 给-02)

Decoded in 30,078 microseconds
Sentence: 于是 小 王子 又 去 看 那些 玫瑰 。

Spans:
Span 4-5:  去 => 去-02
Span 3-4:  又 => 又
Span 1-2:  小 => 小
Span 2-3:  王子 => 王子
Span 7-8:  玫瑰 => 玫瑰
Span 5-6:  看 => 看-10
Span 6-7:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-02
Oracle Span 3-4:  又 => 又
Oracle Span 1-2:  小 => 小-01
Oracle Span 2-3:  王子 => 王子
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 5-6:  看 => 看-02
Oracle Span 6-7:  那些 => 那些

Incorrect span: 看 => 看-10
Incorrect span: 小 => 小
Missing span: 看 => 看-02
Missing span: 小 => 小-01
Dependencies:
1	于是	_	AD	AD	_	6	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	6	nsubj	_	_
4	又	_	AD	AD	_	6	advmod	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	看	_	VV	VV	_	0	root	_	_
7	那些	_	DT	DT	_	8	det	_	_
8	玫瑰	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x12 / 去-02, arg0, x13 / 王子)
(x12 / 去-02, arg1, x16 / 看-02)
(x12 / 去-02, manner, x15 / 又)
(x13 / 王子, mod, x14 / 小-01)
(x16 / 看-02, arg1, x18 / 玫瑰)
(x18 / 玫瑰, mod, x19 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),玫瑰,玫瑰,false), Span(6,7,List(1),那些,那些,false), Span(5,6,List(2),看,看-10,false), Span(4,5,List(3),去,去-02,false), Span(3,4,List(4),又,又,false), Span(2,3,List(5),王子,王子,false), Span(1,2,List(6),小,小,false)),Map(2 -> 看-10, 5 -> 王子, 1 -> 那些, 4 -> 又, 6 -> 小, 0 -> 玫瑰, 3 -> 去-02),Map(又 -> 又, 王 -> 王子, 去 -> 去-02, 玫 -> 玫瑰, 小 -> 小, 看 -> 看-10, 那 -> 那些))),[Ljava.lang.String;@68e02f33,Annotation([Ljava.lang.String;@64942607,[Ljava.lang.String;@d48e998,[Ljava.lang.String;@7cfac39f),Annotation([Ljava.lang.String;@158ae284,[Ljava.lang.String;@50eb4a2c,[Ledu.cmu.lti.nlp.amr.Dependency;@1a256d80),Annotation([Ljava.lang.String;@3069a360,[Ljava.lang.String;@7235f92b,[Ljava.lang.String;@7885776b),Annotation([Ljava.lang.String;@497d4c96,[Ljava.lang.String;@3472947a,[Ledu.cmu.lti.nlp.amr.Entity;@69d3cf7e))
AMR:
(去 / 去-02, ARG6, 王 / 王子)
(去 / 去-02, manner, 又 / 又)
(去 / 去-02, prep-through, 看 / 看-10)
(王 / 王子, mod, 小 / 小)
(玫 / 玫瑰, mod, 那 / 那些)
(看 / 看-10, op, 玫 / 玫瑰)

Decoded in 14,896 microseconds
Sentence: “ 你们 一点 也 不 象 我 的 那 朵 玫瑰 ，

Spans:
Span 2-3:  一点 => 一点
Span 4-5:  不 => 不
Span 3-4:  也 => 也
Span 1-2:  你们 => 你们
Span 6-7:  我 => 我
Span 10-11:  玫瑰 => 玫瑰
Span 8-9:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  一点 => 一点
Oracle Span 3-4:  也 => 也
Oracle Span 1-2:  你们 => 你们
Oracle Span 6-7:  我 => 我
Oracle Span 10-11:  玫瑰 => 玫瑰
Oracle Span 8-9:  那 => 那

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	你们	_	PN	PN	_	6	nsubj	_	_
3	一点	_	AD	AD	_	6	advmod	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	象	_	VA	VA	_	0	root	_	_
7	我	_	PN	PN	_	11	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	那	_	DT	DT	_	11	det	_	_
10	朵	_	M	M	_	9	clf	_	_
11	玫瑰	_	NN	NN	_	6	conj	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x16 / 玫瑰, mod, x17 / 那)
(x16 / 玫瑰, poss, x18 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),玫瑰,玫瑰,false), Span(8,9,List(1),那,那,false), Span(6,7,List(2),我,我,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),也,也,false), Span(2,3,List(5),一点,一点,false), Span(1,2,List(6),你们,你们,false)),Map(2 -> 我, 5 -> 一点, 1 -> 那, 4 -> 也, 6 -> 你们, 0 -> 玫瑰, 3 -> 不),Map(也 -> 也, 我 -> 我, 你 -> 你们, 玫 -> 玫瑰, 不 -> 不, 那 -> 那, 一 -> 一点))),[Ljava.lang.String;@3a3ed300,Annotation([Ljava.lang.String;@1984212d,[Ljava.lang.String;@39f5b723,[Ljava.lang.String;@4eaa375c),Annotation([Ljava.lang.String;@2404b5a,[Ljava.lang.String;@3af58f76,[Ledu.cmu.lti.nlp.amr.Dependency;@2ead6ba4),Annotation([Ljava.lang.String;@31a2a9fa,[Ljava.lang.String;@31b82e0f,[Ljava.lang.String;@27a09971),Annotation([Ljava.lang.String;@6215366a,[Ljava.lang.String;@46dcbeab,[Ledu.cmu.lti.nlp.amr.Entity;@36e43829))
AMR:
(一 / 一点, location, 不 / 不)
(不 / 不, domain, 你 / 你们)
(不 / 不, manner, 也 / 也)
(我 / 我, location, 不 / 不)
(玫 / 玫瑰, mod, 那 / 那)
(玫 / 玫瑰, poss, 不 / 不)

Decoded in 13,838 microseconds
Sentence: 你们 还 什么 都 不 是 呢 ！ ” 小 王子 对 她们 说 。

Spans:
Span 4-5:  不 => 不
Span 2-3:  什么 => 什么
Span 0-1:  你们 => 你们
Span 12-13:  她们 => 她们
Span 11-12:  对 => 对-02
Span 9-10:  小 => 小
Span 5-6:  是 => 是-04
Span 10-11:  王子 => 王子
Span 13-14:  说 => 说-02
Span 1-2:  还 => 还
Span 3-4:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  什么 => 什么
Oracle Span 0-1:  你们 => 你们
Oracle Span 12-13:  她们 => 她们
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 13-14:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 都 => 都
Extra span: 还 => 还
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	你们	_	PN	PN	_	2	nsubj	_	_
2	还	_	VV	VV	_	14	dep	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	都	_	NN	NN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	是	_	VC	VC	_	2	dobj	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	！	_	PU	PU	_	6	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	14	nsubj	_	_
12	对	_	P	P	_	14	prep	_	_
13	她们	_	PN	PN	_	12	pobj	_	_
14	说	_	VV	VV	_	0	root	_	_
15	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x13 / 什么, domain, x15 / 你们)
(x2 / 说-01, arg0, x4 / 王子)
(x2 / 说-01, arg1, x13 / 什么)
(x2 / 说-01, arg3, x6 / 她们)
(x4 / 王子, mod, x5 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),说,说-02,false), Span(12,13,List(1),她们,她们,false), Span(11,12,List(2),对,对-02,false), Span(10,11,List(3),王子,王子,false), Span(9,10,List(4),小,小,false), Span(5,6,List(5),是,是-04,false), Span(4,5,List(6),不,不,false), Span(3,4,List(7),都,都,false), Span(2,3,List(8),什么,什么,false), Span(1,2,List(9),还,还,false), Span(0,1,List(10),你们,你们,false)),Map(2 -> 对-02, 5 -> 是-04, 8 -> 什么, 7 -> 都, 1 -> 她们, 4 -> 小, 6 -> 不, 9 -> 还, 0 -> 说-02, 10 -> 你们, 3 -> 王子),Map(你 -> 你们, 王 -> 王子, 小 -> 小, 不 -> 不, 还 -> 还, 说 -> 说-02, 什 -> 什么, 都 -> 都, 对 -> 对-02, 是 -> 是-04, 她 -> 她们))),[Ljava.lang.String;@152c4495,Annotation([Ljava.lang.String;@5ec1963c,[Ljava.lang.String;@7dcb42a9,[Ljava.lang.String;@6af90849),Annotation([Ljava.lang.String;@1d06f16f,[Ljava.lang.String;@4fa4f485,[Ledu.cmu.lti.nlp.amr.Dependency;@68dd39d2),Annotation([Ljava.lang.String;@4a44cfc0,[Ljava.lang.String;@60e3c26e,[Ljava.lang.String;@80b122b),Annotation([Ljava.lang.String;@999b951,[Ljava.lang.String;@65cf4d6d,[Ledu.cmu.lti.nlp.amr.Entity;@1b410308))
AMR:
(不 / 不, mod, 什 / 什么)
(你 / 你们, part, 还 / 还)
(对 / 对-02, ARG4, 王 / 王子)
(对 / 对-02, direction, 她 / 她们)
(小 / 小, source, 是 / 是-04)
(是 / 是-04, manner, 还 / 还)
(是 / 是-04, time, 不 / 不)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, ARG4, 她 / 她们)
(都 / 都, accompanier, 不 / 不)

Decoded in 31,327 microseconds
Sentence: “ 没有 人 驯服 过 你们 ， 你们 也 没有 驯服 过 任何 人 。

Spans:
Span 8-9:  也 => 也
Span 13-14:  人 => 人
Span 2-3:  人 => 人
Span 12-13:  任何 => 任何
Span 7-8:  你们 => 你们
Span 5-6:  你们 => 你们
Span 11-12:  过 => 过-01
Span 4-5:  过 => 过-01
Span 10-11:  驯服 => 驯服
Span 3-4:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 2-3:  人 => 人
Oracle Span 13-14:  人 => 人
Oracle Span 12-13:  任何 => 任何
Oracle Span 5-6:  你们 => 你们
Oracle Span 3-4:  驯服 => 驯服-01
Oracle Span 10-11:  驯服 => 驯服-01

Extra span: 过 => 过-01
Incorrect span: 驯服 => 驯服
Extra span: 你们 => 你们
Extra span: 过 => 过-01
Incorrect span: 驯服 => 驯服
Missing span: 驯服 => 驯服-01
Missing span: 驯服 => 驯服-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	驯服	_	VV	VV	_	2	dep	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	你们	_	PN	PN	_	4	dobj	_	_
7	,	_	PU	PU	_	2	punct	_	_
8	你们	_	PN	PN	_	11	nsubj	_	_
9	也	_	AD	AD	_	11	advmod	_	_
10	没有	_	VV	VV	_	11	neg	_	_
11	驯服	_	VV	VV	_	2	dep	_	_
12	过	_	AS	AS	_	11	asp	_	_
13	任何	_	DT	DT	_	14	det	_	_
14	人	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 驯服-01, arg0, x19 / 人)
(x21 / 驯服-01, arg1, x22 / 你们)
(x23 / 驯服-01, arg1, x27 / 人)
(x23 / 驯服-01, manner, x25 / 也)
(x27 / 人, mod, x28 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),人,人,false), Span(12,13,List(1),任何,任何,false), Span(11,12,List(2),过,过-01,false), Span(10,11,List(3),驯服,驯服,false), Span(8,9,List(4),也,也,false), Span(7,8,List(5),你们,你们,false), Span(5,6,List(6),你们,你们,false), Span(4,5,List(7),过,过-01,false), Span(3,4,List(8),驯服,驯服,false), Span(2,3,List(9),人,人,false)),Map(2 -> 过-01, 5 -> 你们, 8 -> 驯服, 7 -> 过-01, 1 -> 任何, 4 -> 也, 6 -> 你们, 9 -> 人, 0 -> 人, 3 -> 驯服),Map(驯 -> 驯服, 任 -> 任何, 过2 -> 过-01, 也 -> 也, 过 -> 过-01, 人2 -> 人, 你 -> 你们, 驯2 -> 驯服, 你2 -> 你们, 人 -> 人))),[Ljava.lang.String;@4b0bd001,Annotation([Ljava.lang.String;@f9cab00,[Ljava.lang.String;@10272bbb,[Ljava.lang.String;@36d33f4),Annotation([Ljava.lang.String;@16736040,[Ljava.lang.String;@7c5d1d25,[Ledu.cmu.lti.nlp.amr.Dependency;@550e9be6),Annotation([Ljava.lang.String;@3f96f020,[Ljava.lang.String;@32eae6f2,[Ljava.lang.String;@26ca61bf),Annotation([Ljava.lang.String;@73a0f2b,[Ljava.lang.String;@fa5f81c,[Ledu.cmu.lti.nlp.amr.Entity;@6a1d526c))
AMR:
(人 / 人, mod, 任 / 任何)
(人2 / 人, location, 驯2 / 驯服)
(过 / 过-01, degree, 过2 / 过-01)
(过 / 过-01, degree, 驯 / 驯服)
(过 / 过-01, mod, 任 / 任何)
(过2 / 过-01, degree, 驯2 / 驯服)
(过2 / 过-01, subset, 你2 / 你们)
(驯 / 驯服, domain, 你 / 你们)
(驯 / 驯服, manner, 也 / 也)

Decoded in 26,774 microseconds
Sentence: 你们 就 象 我 的 狐狸 过去 那样 ，

Spans:
Span 0-1:  你们 => 你们
Span 1-2:  就 => 就-01
Span 3-4:  我 => 我
Span 5-6:  狐狸 => 狐狸
Span 6-7:  过去 => 过去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  狐狸 => 狐狸
Oracle Span 6-7:  过去 => 过去-01

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	你们	_	PN	PN	_	7	nsubj	_	_
2	就	_	AD	AD	_	7	advmod	_	_
3	象	_	P	P	_	7	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	狐狸	_	NN	NN	_	3	pobj	_	_
7	过去	_	VV	VV	_	0	root	_	_
8	那样	_	AD	AD	_	7	advmod	_	_
9	,	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 狐狸, poss, x5 / 我)
(x4 / 狐狸, time, x6 / 过去-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),过去,过去-01,false), Span(5,6,List(1),狐狸,狐狸,false), Span(3,4,List(2),我,我,false), Span(1,2,List(3),就,就-01,false), Span(0,1,List(4),你们,你们,false)),Map(2 -> 我, 1 -> 狐狸, 4 -> 你们, 0 -> 过去-01, 3 -> 就-01),Map(就 -> 就-01, 我 -> 我, 过 -> 过去-01, 你 -> 你们, 狐 -> 狐狸))),[Ljava.lang.String;@1f2f0109,Annotation([Ljava.lang.String;@483b0690,[Ljava.lang.String;@687e6293,[Ljava.lang.String;@6870c3c2),Annotation([Ljava.lang.String;@fb0a08c,[Ljava.lang.String;@1faf386c,[Ledu.cmu.lti.nlp.amr.Dependency;@4debbf0),Annotation([Ljava.lang.String;@6a5e167a,[Ljava.lang.String;@60e06f7d,[Ljava.lang.String;@66a5755),Annotation([Ljava.lang.String;@771a7d53,[Ljava.lang.String;@6d6d480c,[Ledu.cmu.lti.nlp.amr.Entity;@e95595b))
AMR:
(就 / 就-01, ARG0, 你 / 你们)
(我 / 我, manner, 就 / 就-01)
(狐 / 狐狸, poss, 我 / 我)
(狐 / 狐狸, time, 过 / 过去-01)

Decoded in 9,265 microseconds
Sentence: 它 那时 只 是 和 千万 只 别的 狐狸 一样 的 一 只 狐狸 。

Spans:
Span 9-10:  一样 => 一样
Span 7-8:  别的 => 别的
Span 5-6:  千万 => 千万
Span 12-13:  只 => 只
Span 6-7:  只 => 只
Span 2-3:  只 => 只
Span 0-1:  它 => 它
Span 3-4:  是 => 是-04
Span 13-14:  狐狸 => 狐狸
Span 8-9:  狐狸 => 狐狸
Span 1-2:  那时 => 那时

Langrangian relaxation converged after 7 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一样 => 一样-02
Oracle Span 7-8:  别的 => 别的
Oracle Span 0-1:  它 => 它
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 13-14:  狐狸 => 狐狸
Oracle Span 1-2:  那时 => 那时

Extra span: 只 => 只
Incorrect span: 一样 => 一样
Extra span: 只 => 只
Extra span: 千万 => 千万
Extra span: 是 => 是-04
Extra span: 只 => 只
Missing span: 一样 => 一样-02
Dependencies:
1	它	_	PN	PN	_	4	nsubj	_	_
2	那时	_	NT	NT	_	4	dep	_	_
3	只	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	和	_	P	P	_	10	prep	_	_
6	千万	_	CD	CD	_	7	nummod	_	_
7	只	_	M	M	_	9	clf	_	_
8	别的	_	JJ	JJ	_	9	amod	_	_
9	狐狸	_	NN	NN	_	5	pobj	_	_
10	一样	_	VA	VA	_	14	rcmod	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	只	_	M	M	_	14	clf	_	_
14	狐狸	_	NN	NN	_	4	attr	_	_
15	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 狐狸, domain, x17 / 它)
(x10 / 狐狸, time, x18 / 那时)
(x13 / 一样-02, arg0, x10 / 狐狸)
(x13 / 一样-02, arg1, x14 / 狐狸)
(x14 / 狐狸, mod, x15 / 别的)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),狐狸,狐狸,false), Span(12,13,List(1),只,只,false), Span(9,10,List(2),一样,一样,false), Span(8,9,List(3),狐狸,狐狸,false), Span(7,8,List(4),别的,别的,false), Span(6,7,List(5),只,只,false), Span(5,6,List(6),千万,千万,false), Span(3,4,List(7),是,是-04,false), Span(2,3,List(8),只,只,false), Span(1,2,List(9),那时,那时,false), Span(0,1,List(10),它,它,false)),Map(2 -> 一样, 5 -> 只, 8 -> 只, 7 -> 是-04, 1 -> 只, 4 -> 别的, 6 -> 千万, 9 -> 那时, 0 -> 狐狸, 10 -> 它, 3 -> 狐狸),Map(只3 -> 只, 别 -> 别的, 狐2 -> 狐狸, 它 -> 它, 千 -> 千万, 只2 -> 只, 只 -> 只, 那 -> 那时, 狐 -> 狐狸, 是 -> 是-04, 一 -> 一样))),[Ljava.lang.String;@5a917723,Annotation([Ljava.lang.String;@7e4579c7,[Ljava.lang.String;@796f632b,[Ljava.lang.String;@5d94a2dc),Annotation([Ljava.lang.String;@cedee22,[Ljava.lang.String;@59b32539,[Ledu.cmu.lti.nlp.amr.Dependency;@5b47731f),Annotation([Ljava.lang.String;@233db8e9,[Ljava.lang.String;@40c2ce52,[Ljava.lang.String;@18a19e),Annotation([Ljava.lang.String;@60a7e509,[Ljava.lang.String;@2e13f304,[Ledu.cmu.lti.nlp.amr.Entity;@787508ca))
AMR:
(一 / 一样, age, 狐 / 狐狸)
(只2 / 只, ARG2, 千 / 千万)
(只2 / 只, ARG6, 别 / 别的)
(只3 / 只, ARG3, 那 / 那时)
(是 / 是-04, ARG1, 它 / 它)
(是 / 是-04, manner, 只3 / 只)
(狐 / 狐狸, ARG4, 只 / 只)
(狐 / 狐狸, manner, 只3 / 只)
(狐 / 狐狸, mod, 别 / 别的)
(狐2 / 狐狸, mod, 只2 / 只)

Decoded in 68,102 microseconds
Sentence: 但是 ， 我 现在 已经 把 它 当成 了 我 的 朋友 ， 于是 它 现在 就 是 世界 上 独一无二 的 了 。 ”

Spans:
Span 18-19:  世界 => 世界
Span 14-15:  它 => 它
Span 6-7:  它 => 它
Span 16-17:  就 => 就-01
Span 4-5:  已经 => 已经
Span 7-8:  当成 => 当成-01
Span 9-10:  我 => 我
Span 2-3:  我 => 我
Span 17-18:  是 => 是-04
Span 11-12:  朋友 => 朋友
Span 20-21:  独一无二 => 独一无二
Span 15-16:  现在 => 现在
Span 3-4:  现在 => 现在

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  世界 => 世界
Oracle Span 6-7:  它 => 它
Oracle Span 16-17:  就 => 就
Oracle Span 7-8:  当成 => 当成-01
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  朋友 => 朋友
Oracle Span 20-21:  独一无二 => 独一无二-01
Oracle Span 3-4:  现在 => 现在
Oracle Span 15-16:  现在 => 现在

Incorrect span: 独一无二 => 独一无二
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Extra span: 它 => 它
Extra span: 我 => 我
Extra span: 已经 => 已经
Missing span: 独一无二 => 独一无二-01
Missing span: 就 => 就
Dependencies:
1	但是	_	AD	AD	_	8	advmod	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	我	_	PN	PN	_	8	nsubj	_	_
4	现在	_	NT	NT	_	8	dep	_	_
5	已经	_	AD	AD	_	8	advmod	_	_
6	把	_	BA	BA	_	8	ba	_	_
7	它	_	PN	PN	_	8	nsubj	_	_
8	当成	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	我	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	朋友	_	NN	NN	_	8	dobj	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	于是	_	AD	AD	_	18	advmod	_	_
15	它	_	PN	PN	_	18	nsubj	_	_
16	现在	_	NT	NT	_	18	dep	_	_
17	就	_	AD	AD	_	18	advmod	_	_
18	是	_	VC	VC	_	8	conj	_	_
19	世界	_	NN	NN	_	20	nsubj	_	_
20	上	_	VV	VV	_	18	attr	_	_
21	独一无二	_	CD	CD	_	20	range	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	了	_	SP	SP	_	8	dep	_	_
24	。	_	PU	PU	_	8	punct	_	_
25	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x26 / 当成-01, arg0, x28 / 我)
(x26 / 当成-01, arg1, x29 / 它)
(x26 / 当成-01, arg2, x30 / 朋友)
(x26 / 当成-01, time, x27 / 现在)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),独一无二,独一无二,false), Span(18,19,List(1),世界,世界,false), Span(17,18,List(2),是,是-04,false), Span(16,17,List(3),就,就-01,false), Span(15,16,List(4),现在,现在,false), Span(14,15,List(5),它,它,false), Span(11,12,List(6),朋友,朋友,false), Span(9,10,List(7),我,我,false), Span(7,8,List(8),当成,当成-01,false), Span(6,7,List(9),它,它,false), Span(4,5,List(10),已经,已经,false), Span(3,4,List(11),现在,现在,false), Span(2,3,List(12),我,我,false)),Map(2 -> 是-04, 5 -> 它, 12 -> 我, 8 -> 当成-01, 7 -> 我, 1 -> 世界, 4 -> 现在, 11 -> 现在, 6 -> 朋友, 0 -> 独一无二, 9 -> 它, 3 -> 就-01, 10 -> 已经),Map(就 -> 就-01, 已 -> 已经, 它2 -> 它, 朋 -> 朋友, 我 -> 我, 我2 -> 我, 独 -> 独一无二, 它 -> 它, 现2 -> 现在, 世 -> 世界, 是 -> 是-04, 当 -> 当成-01, 现 -> 现在))),[Ljava.lang.String;@3d24420b,Annotation([Ljava.lang.String;@6274670b,[Ljava.lang.String;@53ce2392,[Ljava.lang.String;@32d5279),Annotation([Ljava.lang.String;@1c067c0d,[Ljava.lang.String;@5d0b0cb9,[Ledu.cmu.lti.nlp.amr.Dependency;@7f7b6639),Annotation([Ljava.lang.String;@16ac5d35,[Ljava.lang.String;@3965bdf9,[Ljava.lang.String;@3c0e00a8),Annotation([Ljava.lang.String;@1860f3be,[Ljava.lang.String;@6cd15072,[Ledu.cmu.lti.nlp.amr.Entity;@78cfa264))
AMR:
(就 / 就-01, snt5, 它 / 它)
(就 / 就-01, time, 现 / 现在)
(当 / 当成-01, degree, 是 / 是-04)
(当 / 当成-01, snt5, 它2 / 它)
(当 / 当成-01, snt5, 朋 / 朋友)
(当 / 当成-01, time, 已 / 已经)
(当 / 当成-01, time, 现2 / 现在)
(是 / 是-04, ARG5, 世 / 世界)
(是 / 是-04, frequency, 独 / 独一无二)
(是 / 是-04, manner, 就 / 就-01)
(朋 / 朋友, poss, 我 / 我)
(现2 / 现在, poss, 我2 / 我)

Decoded in 55,527 microseconds
Sentence: 这时 ， 那些 玫瑰花 显得 十分 难堪 。

Spans:
Span 5-6:  十分 => 十分
Span 4-5:  显得 => 显得-01
Span 3-4:  玫瑰花 => 玫瑰花
Span 0-1:  这时 => 这时
Span 2-3:  那些 => 那些
Span 6-7:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  十分 => 十分
Oracle Span 4-5:  显得 => 显得-01
Oracle Span 3-4:  玫瑰花 => 玫瑰花
Oracle Span 0-1:  这时 => 这时
Oracle Span 2-3:  那些 => 那些
Oracle Span 6-7:  难堪 => 难堪-01

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	那些	_	DT	DT	_	4	det	_	_
4	玫瑰花	_	NN	NN	_	5	nsubj	_	_
5	显得	_	VV	VV	_	0	root	_	_
6	十分	_	AD	AD	_	7	advmod	_	_
7	难堪	_	VV	VV	_	5	ccomp	_	_
8	。	_	PU	PU	_	5	punct	_	_
9	玫瑰花	_	NN	NN	_	7	xsubj	_	_

Oracle:
(x0 / 显得-01, arg0, x2 / 玫瑰花)
(x0 / 显得-01, arg1, x4 / 难堪-01)
(x0 / 显得-01, time, x6 / 这时)
(x2 / 玫瑰花, mod, x3 / 那些)
(x4 / 难堪-01, degree, x5 / 十分)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),难堪,难堪-01,false), Span(5,6,List(1),十分,十分,false), Span(4,5,List(2),显得,显得-01,false), Span(3,4,List(3),玫瑰花,玫瑰花,false), Span(2,3,List(4),那些,那些,false), Span(0,1,List(5),这时,这时,false)),Map(2 -> 显得-01, 5 -> 这时, 1 -> 十分, 4 -> 那些, 0 -> 难堪-01, 3 -> 玫瑰花),Map(难 -> 难堪-01, 这 -> 这时, 十 -> 十分, 玫 -> 玫瑰花, 那 -> 那些, 显 -> 显得-01))),[Ljava.lang.String;@3408f695,Annotation([Ljava.lang.String;@2b6a0ea9,[Ljava.lang.String;@4dde8976,[Ljava.lang.String;@4887de2b),Annotation([Ljava.lang.String;@3b4825f0,[Ljava.lang.String;@40ac6b76,[Ledu.cmu.lti.nlp.amr.Dependency;@7980cf2c),Annotation([Ljava.lang.String;@f0020b1,[Ljava.lang.String;@759de304,[Ljava.lang.String;@5649d11a),Annotation([Ljava.lang.String;@294f9d50,[Ljava.lang.String;@27443560,[Ledu.cmu.lti.nlp.amr.Entity;@3ddb774f))
AMR:
(显 / 显得-01, degree, 十 / 十分)
(显 / 显得-01, manner, 玫 / 玫瑰花)
(显 / 显得-01, time, 这 / 这时)
(玫 / 玫瑰花, mod, 那 / 那些)
(难 / 难堪-01, degree, 十 / 十分)

Decoded in 13,247 microseconds
Sentence: “ 你们 很 美 ， 但 你们 是 空虚 的 。 ” 小 王子 继续 说 ，

Spans:
Span 6-7:  你们 => 你们
Span 1-2:  你们 => 你们
Span 12-13:  小 => 小
Span 2-3:  很 => 很
Span 7-8:  是 => 是-04
Span 13-14:  王子 => 王子
Span 8-9:  空虚 => 空虚-01
Span 14-15:  继续 => 继续-01
Span 3-4:  美 => 美-01
Span 15-16:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 12-13:  小 => 小-01
Oracle Span 2-3:  很 => 很
Oracle Span 13-14:  王子 => 王子
Oracle Span 8-9:  空虚 => 空虚-01
Oracle Span 14-15:  继续 => 继续-01
Oracle Span 3-4:  美 => 美-01
Oracle Span 15-16:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 你们 => 你们
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你们	_	PN	PN	_	8	dep	_	_
3	很	_	AD	AD	_	8	advmod	_	_
4	美	_	NR	NR	_	8	prep	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	但	_	AD	AD	_	8	advmod	_	_
7	你们	_	PN	PN	_	8	prep	_	_
8	是	_	VC	VC	_	0	root	_	_
9	空虚	_	VA	VA	_	8	attr	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	。	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	16	nsubj	_	_
15	继续	_	VV	VV	_	16	advmod	_	_
16	说	_	VV	VV	_	8	dep	_	_
17	,	_	PU	PU	_	16	punct	_	_

Oracle:
(x12 / 美-01, arg0, x14 / 你们)
(x12 / 美-01, degree, x13 / 很)
(x5 / 继续-01, arg0, x7 / 王子)
(x5 / 继续-01, arg1, x9 / 说-01)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),说,说-02,false), Span(14,15,List(1),继续,继续-01,false), Span(13,14,List(2),王子,王子,false), Span(12,13,List(3),小,小,false), Span(8,9,List(4),空虚,空虚-01,false), Span(7,8,List(5),是,是-04,false), Span(6,7,List(6),你们,你们,false), Span(3,4,List(7),美,美-01,false), Span(2,3,List(8),很,很,false), Span(1,2,List(9),你们,你们,false)),Map(2 -> 王子, 5 -> 是-04, 8 -> 很, 7 -> 美-01, 1 -> 继续-01, 4 -> 空虚-01, 6 -> 你们, 9 -> 你们, 0 -> 说-02, 3 -> 小),Map(美 -> 美-01, 很 -> 很, 你 -> 你们, 王 -> 王子, 小 -> 小, 你2 -> 你们, 说 -> 说-02, 空 -> 空虚-01, 是 -> 是-04, 继 -> 继续-01))),[Ljava.lang.String;@2582b0ef,Annotation([Ljava.lang.String;@70721c12,[Ljava.lang.String;@769bd849,[Ljava.lang.String;@101ca8da),Annotation([Ljava.lang.String;@20a967fe,[Ljava.lang.String;@405b6d75,[Ledu.cmu.lti.nlp.amr.Dependency;@682abca7),Annotation([Ljava.lang.String;@1d858300,[Ljava.lang.String;@76f881d9,[Ljava.lang.String;@6dd36ab6),Annotation([Ljava.lang.String;@50a13c2f,[Ljava.lang.String;@610d28b8,[Ledu.cmu.lti.nlp.amr.Entity;@53c99b09))
AMR:
(是 / 是-04, degree, 你 / 你们)
(王 / 王子, mod, 小 / 小)
(空 / 空虚-01, manner, 是 / 是-04)
(继 / 继续-01, beneficiary, 王 / 王子)
(继 / 继续-01, location, 是 / 是-04)
(美 / 美-01, degree, 你2 / 你们)
(美 / 美-01, degree, 很 / 很)
(美 / 美-01, purpose, 是 / 是-04)
(说 / 说-02, degree, 继 / 继续-01)

Decoded in 30,511 microseconds
Sentence: “ 没有 人 能 为 你们 去 死 。

Spans:
Span 2-3:  人 => 人
Span 5-6:  你们 => 你们
Span 6-7:  去 => 去-02
Span 7-8:  死 => 死
Span 3-4:  能 => 能

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 5-6:  你们 => 你们
Oracle Span 7-8:  死 => 死-01
Oracle Span 3-4:  能 => 能-01

Incorrect span: 死 => 死
Extra span: 去 => 去-02
Incorrect span: 能 => 能
Missing span: 能 => 能-01
Missing span: 死 => 死-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	没有	_	VE	VE	_	8	dep	_	_
3	人	_	NN	NN	_	2	dobj	_	_
4	能	_	VV	VV	_	8	mmod	_	_
5	为	_	P	P	_	8	prep	_	_
6	你们	_	PN	PN	_	5	pobj	_	_
7	去	_	MSP	MSP	_	8	prtmod	_	_
8	死	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x13 / 死-01, arg0, x14 / 人)
(x13 / 死-01, beneficiary, x15 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),死,死,false), Span(6,7,List(1),去,去-02,false), Span(5,6,List(2),你们,你们,false), Span(3,4,List(3),能,能,false), Span(2,3,List(4),人,人,false)),Map(2 -> 你们, 1 -> 去-02, 4 -> 人, 0 -> 死, 3 -> 能),Map(能 -> 能, 你 -> 你们, 死 -> 死, 去 -> 去-02, 人 -> 人))),[Ljava.lang.String;@2539cd1c,Annotation([Ljava.lang.String;@7c20cdd0,[Ljava.lang.String;@74606204,[Ljava.lang.String;@6b6eae52),Annotation([Ljava.lang.String;@d4df0e,[Ljava.lang.String;@7ae0cc89,[Ledu.cmu.lti.nlp.amr.Dependency;@de7e193),Annotation([Ljava.lang.String;@13e5d243,[Ljava.lang.String;@35ef439e,[Ljava.lang.String;@4997552e),Annotation([Ljava.lang.String;@7bcecef6,[Ljava.lang.String;@46046c06,[Ledu.cmu.lti.nlp.amr.Entity;@93824eb))
AMR:
(人 / 人, location, 能 / 能)
(去 / 去-02, degree, 你 / 你们)
(死 / 死, mod, 去 / 去-02)
(能 / 能, purpose, 去 / 去-02)

Decoded in 7,996 microseconds
Sentence: 当然 ， 我 的 那 朵 玫瑰花 ， 一 个 普通 的 过路人 以为 她 和 你们 一样 。

Spans:
Span 17-18:  一样 => 一样
Span 13-14:  以为 => 以为-02
Span 16-17:  你们 => 你们
Span 14-15:  她 => 她
Span 0-1:  当然 => 当然
Span 2-3:  我 => 我
Span 10-11:  普通 => 普通
Span 6-7:  玫瑰花 => 玫瑰花
Span 4-5:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  一样 => 一样-02
Oracle Span 13-14:  以为 => 以为-02
Oracle Span 16-17:  你们 => 你们
Oracle Span 2-3:  我 => 我
Oracle Span 10-11:  普通 => 普通-01
Oracle Span 6-7:  玫瑰花 => 玫瑰花
Oracle Span 4-5:  那 => 那

Incorrect span: 一样 => 一样
Extra span: 她 => 她
Incorrect span: 普通 => 普通
Extra span: 当然 => 当然
Missing span: 普通 => 普通-01
Missing span: 一样 => 一样-02
Dependencies:
1	当然	_	AD	AD	_	14	advmod	_	_
2	,	_	PU	PU	_	14	punct	_	_
3	我	_	PN	PN	_	7	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	那	_	DT	DT	_	7	det	_	_
6	朵	_	M	M	_	5	clf	_	_
7	玫瑰花	_	NN	NN	_	14	nsubj	_	_
8	,	_	PU	PU	_	14	punct	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	个	_	M	M	_	13	clf	_	_
11	普通	_	VA	VA	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	过路人	_	NN	NN	_	14	nsubj	_	_
14	以为	_	VV	VV	_	0	root	_	_
15	她	_	PN	PN	_	18	nsubj	_	_
16	和	_	P	P	_	18	prep	_	_
17	你们	_	PN	PN	_	16	pobj	_	_
18	一样	_	VA	VA	_	14	ccomp	_	_
19	。	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 以为-02, arg1, x5 / 玫瑰花)
(x0 / 以为-02, arg2, x8 / 一样-02)
(x5 / 玫瑰花, mod, x6 / 那)
(x5 / 玫瑰花, poss, x7 / 我)
(x8 / 一样-02, arg1, x10 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),一样,一样,false), Span(16,17,List(1),你们,你们,false), Span(14,15,List(2),她,她,false), Span(13,14,List(3),以为,以为-02,false), Span(10,11,List(4),普通,普通,false), Span(6,7,List(5),玫瑰花,玫瑰花,false), Span(4,5,List(6),那,那,false), Span(2,3,List(7),我,我,false), Span(0,1,List(8),当然,当然,false)),Map(2 -> 她, 5 -> 玫瑰花, 8 -> 当然, 7 -> 我, 1 -> 你们, 4 -> 普通, 6 -> 那, 0 -> 一样, 3 -> 以为-02),Map(我 -> 我, 你 -> 你们, 以 -> 以为-02, 玫 -> 玫瑰花, 普 -> 普通, 那 -> 那, 一 -> 一样, 当 -> 当然, 她 -> 她))),[Ljava.lang.String;@7af52ec7,Annotation([Ljava.lang.String;@77c1e611,[Ljava.lang.String;@12c0c0b3,[Ljava.lang.String;@5a97b17c),Annotation([Ljava.lang.String;@9c73fff,[Ljava.lang.String;@71cea1b8,[Ledu.cmu.lti.nlp.amr.Dependency;@659f226a),Annotation([Ljava.lang.String;@2e463f4,[Ljava.lang.String;@32ec9c90,[Ljava.lang.String;@36ab3814),Annotation([Ljava.lang.String;@2abbd0d9,[Ljava.lang.String;@b61edb9,[Ledu.cmu.lti.nlp.amr.Entity;@5d3ff859))
AMR:
(一 / 一样, ARG5, 你 / 你们)
(一 / 一样, location, 她 / 她)
(以 / 以为-02, ARG0, 普 / 普通)
(以 / 以为-02, ARG4, 她 / 她)
(以 / 以为-02, time, 玫 / 玫瑰花)
(我 / 我, location, 当 / 当然)
(玫 / 玫瑰花, mod, 那 / 那)
(玫 / 玫瑰花, poss, 我 / 我)

Decoded in 30,993 microseconds
Sentence: 可是 ， 她 单独 一 朵 就 比 你们 全体 更 重要 ， 因为 她 是 我 浇灌 的 。 因为 她 是 我 放 在 花罩 中 的 。 因为 她 是 我 用 屏风 保护 起来 的 。 因为 她 身上 的 毛虫 （ 除了 留下 两三 只 为了 变 蝴蝶 而外 ） 是 我 除灭 的 。 因为 我 倾听 过 她 的 怨艾 和 自诩 ， 甚至 有时 我 聆听 着 她 的 沉默 。

Spans:
Span 50-51:  为了 => 为了-01
Span 8-9:  你们 => 你们
Span 36-37:  保护 => 保护-01
Span 62-63:  倾听 => 倾听-01
Span 9-10:  全体 => 全体
Span 3-4:  单独 => 单独
Span 51-52:  变 => 变-01
Span 49-50:  只 => 只
Span 25-26:  在 => 在-01
Span 75-76:  她 => 她
Span 64-65:  她 => 她
Span 41-42:  她 => 她
Span 31-32:  她 => 她
Span 21-22:  她 => 她
Span 14-15:  她 => 她
Span 2-3:  她 => 她
Span 6-7:  就 => 就-01
Span 35-36:  屏风 => 屏风
Span 66-67:  怨艾 => 怨艾
Span 72-73:  我 => 我
Span 61-62:  我 => 我
Span 56-57:  我 => 我
Span 33-34:  我 => 我
Span 23-24:  我 => 我
Span 16-17:  我 => 我
Span 24-25:  放 => 放-03
Span 55-56:  是 => 是-04
Span 32-33:  是 => 是-04
Span 22-23:  是 => 是-04
Span 15-16:  是 => 是-04
Span 10-11:  更 => 更-01
Span 71-72:  有时 => 有时
Span 44-45:  毛虫 => 毛虫
Span 77-78:  沉默 => 沉默-01
Span 17-18:  浇灌 => 浇灌-01
Span 70-71:  甚至 => 甚至
Span 34-35:  用 => 用
Span 47-48:  留下 => 留下-01
Span 73-74:  聆听 => 聆听-01
Span 68-69:  自诩 => 自诩-01
Span 26-27:  花罩 => 花罩
Span 52-53:  蝴蝶 => 蝴蝶
Span 42-43:  身上 => 身上
Span 63-64:  过 => 过-01
Span 11-12:  重要 => 重要-01
Span 46-47:  除了 => 除了
Span 57-58:  除灭 => 除灭

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 8-9:  你们 => 你们
Oracle Span 36-37:  保护 => 保护-01
Oracle Span 62-63:  倾听 => 倾听-01
Oracle Span 9-10:  全体 => 全体
Oracle Span 3-4:  单独 => 单独
Oracle Span 51-52:  变 => 变-01
Oracle Span 2-3:  她 => 她
Oracle Span 35-36:  屏风 => 屏风
Oracle Span 66-67:  怨艾 => 怨艾
Oracle Span 16-17:  我 => 我
Oracle Span 24-25:  放 => 放-01
Oracle Span 10-11:  更 => 更
Oracle Span 71-72:  有时 => 有时
Oracle Span 44-45:  毛虫 => 毛虫
Oracle Span 77-78:  沉默 => 沉默-01
Oracle Span 17-18:  浇灌 => 浇灌-01
Oracle Span 70-71:  甚至 => 甚至
Oracle Span 47-48:  留下 => 留下-01
Oracle Span 73-74:  聆听 => 聆听-01
Oracle Span 68-69:  自诩 => 自诩-01
Oracle Span 26-27:  花罩 => 花罩
Oracle Span 52-53:  蝴蝶 => 蝴蝶
Oracle Span 42-43:  身上 => 身上
Oracle Span 11-12:  重要 => 重要-01
Oracle Span 46-47:  除了 => 除了
Oracle Span 57-58:  除灭 => 除灭

Extra span: 她 => 她
Extra span: 我 => 我
Extra span: 她 => 她
Extra span: 过 => 过-01
Extra span: 我 => 我
Extra span: 我 => 我
Extra span: 是 => 是-04
Extra span: 为了 => 为了-01
Extra span: 只 => 只
Extra span: 她 => 她
Extra span: 用 => 用
Extra span: 我 => 我
Extra span: 是 => 是-04
Extra span: 她 => 她
Extra span: 在 => 在-01
Incorrect span: 放 => 放-03
Extra span: 我 => 我
Extra span: 是 => 是-04
Extra span: 她 => 她
Extra span: 是 => 是-04
Extra span: 她 => 她
Incorrect span: 更 => 更-01
Extra span: 就 => 就-01
Missing span: 更 => 更
Missing span: 放 => 放-01
Dependencies:
1	可是	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	她	_	PN	PN	_	12	nsubj	_	_
4	单独	_	JJ	JJ	_	6	amod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	12	dep	_	_
7	就	_	AD	AD	_	12	advmod	_	_
8	比	_	P	P	_	12	prep	_	_
9	你们	_	PN	PN	_	10	dep	_	_
10	全体	_	DT	DT	_	8	pobj	_	_
11	更	_	AD	AD	_	12	advmod	_	_
12	重要	_	VA	VA	_	0	root	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	因为	_	CS	CS	_	16	advmod	_	_
15	她	_	PN	PN	_	16	top	_	_
16	是	_	VC	VC	_	12	dep	_	_
17	我	_	PN	PN	_	18	nsubj	_	_
18	浇灌	_	VA	VA	_	16	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	。	_	PU	PU	_	12	punct	_	_
21	因为	_	P	P	_	23	prep	_	_
22	她	_	PN	PN	_	21	pobj	_	_
23	是	_	VC	VC	_	12	conj	_	_
24	我	_	PN	PN	_	25	nsubj	_	_
25	放	_	VV	VV	_	23	attr	_	_
26	在	_	P	P	_	25	prep	_	_
27	花罩	_	NN	NN	_	28	lobj	_	_
28	中	_	LC	LC	_	26	plmod	_	_
29	的	_	DEC	DEC	_	25	cpm	_	_
30	。	_	PU	PU	_	12	punct	_	_
31	因为	_	P	P	_	33	prep	_	_
32	她	_	PN	PN	_	31	pobj	_	_
33	是	_	VC	VC	_	12	conj	_	_
34	我	_	PN	PN	_	38	nsubj	_	_
35	用	_	P	P	_	38	prep	_	_
36	屏风	_	NN	NN	_	37	nn	_	_
37	保护	_	NN	NN	_	35	pobj	_	_
38	起来	_	VV	VV	_	33	attr	_	_
39	的	_	DEC	DEC	_	38	cpm	_	_
40	。	_	PU	PU	_	12	punct	_	_
41	因为	_	P	P	_	43	prep	_	_
42	她	_	PN	PN	_	41	pobj	_	_
43	身上	_	VV	VV	_	45	rcmod	_	_
44	的	_	DEC	DEC	_	43	cpm	_	_
45	毛虫	_	NN	NN	_	56	top	_	_
46	（	_	PU	PU	_	54	punct	_	_
47	除了	_	P	P	_	54	prep	_	_
48	留下	_	VV	VV	_	47	pccomp	_	_
49	两三	_	CD	CD	_	50	nummod	_	_
50	只	_	M	M	_	48	range	_	_
51	为了	_	P	P	_	54	prep	_	_
52	变	_	VV	VV	_	51	pccomp	_	_
53	蝴蝶	_	NN	NN	_	52	dobj	_	_
54	而外	_	VV	VV	_	45	prnmod	_	_
55	）	_	PU	PU	_	54	punct	_	_
56	是	_	VC	VC	_	12	conj	_	_
57	我	_	PN	PN	_	58	nsubj	_	_
58	除灭	_	VA	VA	_	56	attr	_	_
59	的	_	DEC	DEC	_	58	cpm	_	_
60	。	_	PU	PU	_	12	punct	_	_
61	因为	_	P	P	_	74	prep	_	_
62	我	_	PN	PN	_	63	nsubj	_	_
63	倾听	_	VV	VV	_	61	pccomp	_	_
64	过	_	AS	AS	_	63	asp	_	_
65	她	_	PN	PN	_	69	assmod	_	_
66	的	_	DEG	DEG	_	65	assm	_	_
67	怨艾	_	NN	NN	_	69	conj	_	_
68	和	_	CC	CC	_	69	cc	_	_
69	自诩	_	NN	NN	_	63	dobj	_	_
70	,	_	PU	PU	_	74	punct	_	_
71	甚至	_	AD	AD	_	74	advmod	_	_
72	有时	_	AD	AD	_	74	advmod	_	_
73	我	_	PN	PN	_	74	nsubj	_	_
74	聆听	_	VV	VV	_	12	conj	_	_
75	着	_	AS	AS	_	74	asp	_	_
76	她	_	PN	PN	_	78	assmod	_	_
77	的	_	DEG	DEG	_	76	assm	_	_
78	沉默	_	NN	NN	_	74	dobj	_	_
79	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x26 / 除灭, arg1, x28 / 毛虫)
(x28 / 毛虫, location, x29 / 身上)
(x33 / 留下-01, arg2, x37 / 变-01)
(x33 / 留下-01, manner, x39 / 除了)
(x37 / 变-01, arg2, x38 / 蝴蝶)
(x48 / 聆听-01, arg1, x50 / 沉默-01)
(x48 / 聆听-01, degree, x53 / 甚至)
(x48 / 聆听-01, time, x52 / 有时)
(x59 / 浇灌-01, arg0, x60 / 我)
(x59 / 浇灌-01, arg1, x61 / 她)
(x62 / 重要-01, degree, x63 / 更)
(x74 / 放-01, arg2, x78 / 花罩)
(x79 / 保护-01, manner, x82 / 屏风)

Input(Some(Graph(null,ArrayBuffer(Span(77,78,List(0),沉默,沉默-01,false), Span(75,76,List(1),她,她,false), Span(73,74,List(2),聆听,聆听-01,false), Span(72,73,List(3),我,我,false), Span(71,72,List(4),有时,有时,false), Span(70,71,List(5),甚至,甚至,false), Span(68,69,List(6),自诩,自诩-01,false), Span(66,67,List(7),怨艾,怨艾,false), Span(64,65,List(8),她,她,false), Span(63,64,List(9),过,过-01,false), Span(62,63,List(10),倾听,倾听-01,false), Span(61,62,List(11),我,我,false), Span(57,58,List(12),除灭,除灭,false), Span(56,57,List(13),我,我,false), Span(55,56,List(14),是,是-04,false), Span(52,53,List(15),蝴蝶,蝴蝶,false), Span(51,52,List(16),变,变-01,false), Span(50,51,List(17),为了,为了-01,false), Span(49,50,List(18),只,只,false), Span(47,48,List(19),留下,留下-01,false), Span(46,47,List(20),除了,除了,false), Span(44,45,List(21),毛虫,毛虫,false), Span(42,43,List(22),身上,身上,false), Span(41,42,List(23),她,她,false), Span(36,37,List(24),保护,保护-01,false), Span(35,36,List(25),屏风,屏风,false), Span(34,35,List(26),用,用,false), Span(33,34,List(27),我,我,false), Span(32,33,List(28),是,是-04,false), Span(31,32,List(29),她,她,false), Span(26,27,List(30),花罩,花罩,false), Span(25,26,List(31),在,在-01,false), Span(24,25,List(32),放,放-03,false), Span(23,24,List(33),我,我,false), Span(22,23,List(34),是,是-04,false), Span(21,22,List(35),她,她,false), Span(17,18,List(36),浇灌,浇灌-01,false), Span(16,17,List(37),我,我,false), Span(15,16,List(38),是,是-04,false), Span(14,15,List(39),她,她,false), Span(11,12,List(40),重要,重要-01,false), Span(10,11,List(41),更,更-01,false), Span(9,10,List(42),全体,全体,false), Span(8,9,List(43),你们,你们,false), Span(6,7,List(44),就,就-01,false), Span(3,4,List(45),单独,单独,false), Span(2,3,List(46),她,她,false)),Map(45 -> 单独, 39 -> 她, 30 -> 花罩, 2 -> 聆听-01, 5 -> 甚至, 33 -> 我, 27 -> 我, 12 -> 除灭, 8 -> 她, 15 -> 蝴蝶, 42 -> 全体, 36 -> 浇灌-01, 21 -> 毛虫, 18 -> 只, 24 -> 保护-01, 41 -> 更-01, 35 -> 她, 7 -> 怨艾, 1 -> 她, 17 -> 为了-01, 44 -> 就-01, 23 -> 她, 38 -> 是-04, 26 -> 用, 4 -> 有时, 11 -> 我, 32 -> 放-03, 14 -> 是-04, 29 -> 她, 20 -> 除了, 46 -> 她, 34 -> 是-04, 28 -> 是-04, 6 -> 自诩-01, 40 -> 重要-01, 43 -> 你们, 9 -> 过-01, 0 -> 沉默-01, 22 -> 身上, 16 -> 变-01, 37 -> 我, 19 -> 留下-01, 10 -> 倾听-01, 3 -> 我, 31 -> 在-01, 25 -> 屏风, 13 -> 我),Map(我6 -> 我, 就 -> 就-01, 她5 -> 她, 倾 -> 倾听-01, 是4 -> 是-04, 自 -> 自诩-01, 沉 -> 沉默-01, 我3 -> 我, 在 -> 在-01, 屏 -> 屏风, 用 -> 用, 重 -> 重要-01, 除 -> 除灭, 我 -> 我, 她2 -> 她, 过 -> 过-01, 毛 -> 毛虫, 放 -> 放-03, 身 -> 身上, 全 -> 全体, 我2 -> 我, 你 -> 你们, 我5 -> 我, 她4 -> 她, 保 -> 保护-01, 她7 -> 她, 单 -> 单独, 是3 -> 是-04, 花 -> 花罩, 为 -> 为了-01, 聆 -> 聆听-01, 浇 -> 浇灌-01, 只 -> 只, 变 -> 变-01, 她6 -> 她, 怨 -> 怨艾, 我4 -> 我, 甚 -> 甚至, 留 -> 留下-01, 她3 -> 她, 是 -> 是-04, 是2 -> 是-04, 更 -> 更-01, 她 -> 她, 除2 -> 除了, 蝴 -> 蝴蝶, 有 -> 有时))),[Ljava.lang.String;@32bb0072,Annotation([Ljava.lang.String;@467233e4,[Ljava.lang.String;@427a12b6,[Ljava.lang.String;@6025d790),Annotation([Ljava.lang.String;@af7e376,[Ljava.lang.String;@5dcd0cdf,[Ledu.cmu.lti.nlp.amr.Dependency;@4fb04a72),Annotation([Ljava.lang.String;@1e79d43,[Ljava.lang.String;@343e225a,[Ljava.lang.String;@1a07bf6),Annotation([Ljava.lang.String;@4c0e426a,[Ljava.lang.String;@713ec32d,[Ledu.cmu.lti.nlp.amr.Entity;@34d713a2))
AMR:
(为 / 为了-01, ARG5, 变 / 变-01)
(为 / 为了-01, manner, 只 / 只)
(为 / 为了-01, manner, 留 / 留下-01)
(为 / 为了-01, scale, 是 / 是-04)
(为 / 为了-01, scale, 蝴 / 蝴蝶)
(保 / 保护-01, location, 身 / 身上)
(保 / 保护-01, manner, 屏 / 屏风)
(倾 / 倾听-01, ARG5, 过 / 过-01)
(倾 / 倾听-01, purpose, 是 / 是-04)
(倾 / 倾听-01, time, 我2 / 我)
(全 / 全体, mod, 更 / 更-01)
(单 / 单独, snt2, 她7 / 她)
(在 / 在-01, manner, 放 / 放-03)
(她3 / 她, part, 身 / 身上)
(就 / 就-01, manner, 单 / 单独)
(屏 / 屏风, mod, 用 / 用)
(怨 / 怨艾, mod, 自 / 自诩-01)
(怨 / 怨艾, quant, 过 / 过-01)
(放 / 放-03, manner, 我5 / 我)
(放 / 放-03, manner, 是3 / 是-04)
(是 / 是-04, ARG6, 我3 / 我)
(是2 / 是-04, ARG6, 我4 / 我)
(是2 / 是-04, degree, 她4 / 她)
(是2 / 是-04, manner, 在 / 在-01)
(是3 / 是-04, degree, 她5 / 她)
(是4 / 是-04, ARG6, 我6 / 我)
(是4 / 是-04, degree, 她6 / 她)
(更 / 更-01, manner, 就 / 就-01)
(毛 / 毛虫, location, 身 / 身上)
(毛 / 毛虫, mod, 除2 / 除了)
(浇 / 浇灌-01, manner, 是4 / 是-04)
(浇 / 浇灌-01, scale, 是3 / 是-04)
(用 / 用, mod, 是2 / 是-04)
(留 / 留下-01, manner, 除2 / 除了)
(聆 / 聆听-01, degree, 她 / 她)
(聆 / 聆听-01, degree, 甚 / 甚至)
(聆 / 聆听-01, manner, 我 / 我)
(聆 / 聆听-01, prep-within, 沉 / 沉默-01)
(聆 / 聆听-01, time, 有 / 有时)
(聆 / 聆听-01, time, 自 / 自诩-01)
(花 / 花罩, mod, 在 / 在-01)
(过 / 过-01, example, 她2 / 她)
(重 / 重要-01, degree, 更 / 更-01)
(重 / 重要-01, manner, 你 / 你们)
(重 / 重要-01, prep-within, 是4 / 是-04)
(除 / 除灭, mod, 是 / 是-04)

Decoded in 905,273 microseconds
Sentence: 因为 她 是 我 的 玫瑰 。 ”

Spans:
Span 1-2:  她 => 她
Span 3-4:  我 => 我
Span 2-3:  是 => 是-04
Span 5-6:  玫瑰 => 玫瑰

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  她 => 她
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  玫瑰 => 玫瑰

Extra span: 是 => 是-04
Dependencies:
1	因为	_	P	P	_	3	prep	_	_
2	她	_	PN	PN	_	1	pobj	_	_
3	是	_	VC	VC	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	玫瑰	_	NN	NN	_	3	attr	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 玫瑰, domain, x14 / 她)
(x12 / 玫瑰, poss, x13 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),玫瑰,玫瑰,false), Span(3,4,List(1),我,我,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),她,她,false)),Map(2 -> 是-04, 1 -> 我, 0 -> 玫瑰, 3 -> 她),Map(我 -> 我, 玫 -> 玫瑰, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@36aab105,Annotation([Ljava.lang.String;@889a8a8,[Ljava.lang.String;@f29353f,[Ljava.lang.String;@36f7d7b),Annotation([Ljava.lang.String;@60aec68a,[Ljava.lang.String;@25a7fedf,[Ledu.cmu.lti.nlp.amr.Dependency;@6361b799),Annotation([Ljava.lang.String;@1b9d9a2b,[Ljava.lang.String;@d919544,[Ljava.lang.String;@17dad32f),Annotation([Ljava.lang.String;@79696332,[Ljava.lang.String;@ed2f2f6,[Ledu.cmu.lti.nlp.amr.Entity;@fe87ddd))
AMR:
(是 / 是-04, beneficiary, 她 / 她)
(是 / 是-04, degree, 我 / 我)
(玫 / 玫瑰, mod, 是 / 是-04)

Decoded in 6,305 microseconds
Sentence: 他 又 回到 了 狐狸 身边 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  又 => 又
Span 2-3:  回到 => 回到-01
Span 4-5:  狐狸 => 狐狸
Span 5-6:  身边 => 身边

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  又 => 又
Oracle Span 2-3:  回到 => 回到-01
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  身边 => 身边

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	回到	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	狐狸	_	NN	NN	_	6	nn	_	_
6	身边	_	NN	NN	_	3	dobj	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回到-01, arg0, x2 / 他)
(x0 / 回到-01, arg1, x4 / 身边)
(x0 / 回到-01, manner, x3 / 又)
(x4 / 身边, mod, x5 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),身边,身边,false), Span(4,5,List(1),狐狸,狐狸,false), Span(2,3,List(2),回到,回到-01,false), Span(1,2,List(3),又,又,false), Span(0,1,List(4),他,他,false)),Map(2 -> 回到-01, 1 -> 狐狸, 4 -> 他, 0 -> 身边, 3 -> 又),Map(又 -> 又, 身 -> 身边, 他 -> 他, 狐 -> 狐狸, 回 -> 回到-01))),[Ljava.lang.String;@4eea94a4,Annotation([Ljava.lang.String;@7c281eb8,[Ljava.lang.String;@65f40689,[Ljava.lang.String;@29be997f),Annotation([Ljava.lang.String;@33eb6758,[Ljava.lang.String;@f8a6243,[Ledu.cmu.lti.nlp.amr.Dependency;@4a8ffd75),Annotation([Ljava.lang.String;@1727e03a,[Ljava.lang.String;@7f9e8421,[Ljava.lang.String;@23da79eb),Annotation([Ljava.lang.String;@168b4cb0,[Ljava.lang.String;@3e05586b,[Ledu.cmu.lti.nlp.amr.Entity;@35b17c06))
AMR:
(回 / 回到-01, ARG6, 他 / 他)
(回 / 回到-01, manner, 又 / 又)
(回 / 回到-01, snt3, 身 / 身边)
(身 / 身边, mod, 狐 / 狐狸)

Decoded in 8,801 microseconds
Sentence: “ 再见 了 。 ” 小 王子 说道 。

Spans:
Span 1-2:  再见 => 再见
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Missing span: 说道 => 说道-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	AD	AD	_	3	advmod	_	_
3	了	_	VV	VV	_	7	vmod	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x0 / 说道-01, arg1, x4 / 再见)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说道,说道,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(1,2,List(3),再见,再见,false)),Map(2 -> 小, 1 -> 王子, 0 -> 说道, 3 -> 再见),Map(王 -> 王子, 小 -> 小, 说 -> 说道, 再 -> 再见))),[Ljava.lang.String;@45545e7a,Annotation([Ljava.lang.String;@9f674ac,[Ljava.lang.String;@1da4b3f9,[Ljava.lang.String;@23cbbd07),Annotation([Ljava.lang.String;@448b808a,[Ljava.lang.String;@7e62cfa3,[Ledu.cmu.lti.nlp.amr.Dependency;@46e190ed),Annotation([Ljava.lang.String;@383c3eb3,[Ljava.lang.String;@20ab76ee,[Ljava.lang.String;@485caa8f),Annotation([Ljava.lang.String;@2703d91,[Ljava.lang.String;@5be052ca,[Ledu.cmu.lti.nlp.amr.Entity;@2007435e))
AMR:
(小 / 小, topic, 再 / 再见)
(王 / 王子, mod, 小 / 小)
(说 / 说道, beneficiary, 王 / 王子)

Decoded in 6,329 microseconds
Sentence: “ 再见 。 ” 狐狸 说 。

Spans:
Span 1-2:  再见 => 再见
Span 4-5:  狐狸 => 狐狸
Span 5-6:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  再见 => 再见
Oracle Span 4-5:  狐狸 => 狐狸
Oracle Span 5-6:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	再见	_	JJ	JJ	_	3	amod	_	_
3	。	_	NN	NN	_	5	nn	_	_
4	”	_	PU	PU	_	3	punct	_	_
5	狐狸	_	NN	NN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 狐狸)
(x0 / 说-01, arg1, x3 / 再见)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说,说-02,false), Span(4,5,List(1),狐狸,狐狸,false), Span(1,2,List(2),再见,再见,false)),Map(2 -> 再见, 1 -> 狐狸, 0 -> 说-02),Map(说 -> 说-02, 狐 -> 狐狸, 再 -> 再见))),[Ljava.lang.String;@da28d03,Annotation([Ljava.lang.String;@ebda593,[Ljava.lang.String;@5792c08c,[Ljava.lang.String;@4d157493),Annotation([Ljava.lang.String;@54c622a7,[Ljava.lang.String;@37348491,[Ledu.cmu.lti.nlp.amr.Dependency;@76e3b45b),Annotation([Ljava.lang.String;@10b4e7f8,[Ljava.lang.String;@75023c53,[Ljava.lang.String;@66813e6e),Annotation([Ljava.lang.String;@dab1f89,[Ljava.lang.String;@3a17b2e3,[Ledu.cmu.lti.nlp.amr.Entity;@5e13f156))
AMR:
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, topic, 再 / 再见)

Decoded in 6,059 microseconds
Sentence: “ 喏 ， 这 就 是 我 的 秘密 。 很 简单 ： 只有 用 心 才 能 看 得 清 。 实质性 的 东西 ， 用 眼睛 是 看 不 见 的 。 ”

Spans:
Span 30-31:  不 => 不
Span 24-25:  东西 => 东西
Span 13-14:  只有 => 只有-01
Span 1-2:  喏 => 喏
Span 22-23:  实质性 => 实质性
Span 4-5:  就 => 就-01
Span 10-11:  很 => 很
Span 19-20:  得 => 得-06
Span 15-16:  心 => 心
Span 6-7:  我 => 我
Span 16-17:  才 => 才
Span 28-29:  是 => 是-04
Span 5-6:  是 => 是-04
Span 26-27:  用 => 用
Span 14-15:  用 => 用
Span 29-30:  看 => 看-10
Span 18-19:  看 => 看-10
Span 27-28:  眼睛 => 眼睛
Span 8-9:  秘密 => 秘密-01
Span 11-12:  简单 => 简单-01
Span 17-18:  能 => 能
Span 31-32:  见 => 见-01
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 24-25:  东西 => 东西
Oracle Span 1-2:  喏 => 喏
Oracle Span 22-23:  实质性 => 实质性
Oracle Span 4-5:  就 => 就
Oracle Span 10-11:  很 => 很
Oracle Span 6-7:  我 => 我
Oracle Span 14-15:  用 => 用-01
Oracle Span 27-28:  眼睛 => 眼睛
Oracle Span 8-9:  秘密 => 秘密
Oracle Span 11-12:  简单 => 简单-01
Oracle Span 17-18:  能 => 能-01
Oracle Span 3-4:  这 => 这

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Extra span: 用 => 用
Extra span: 得 => 得-06
Extra span: 看 => 看-10
Incorrect span: 能 => 能
Extra span: 才 => 才
Extra span: 心 => 心
Incorrect span: 用 => 用
Extra span: 只有 => 只有-01
Incorrect span: 秘密 => 秘密-01
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 秘密 => 秘密
Missing span: 能 => 能-01
Missing span: 用 => 用-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	喏	_	VV	VV	_	12	dep	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	这	_	PN	PN	_	5	nsubj	_	_
5	就	_	P	P	_	2	ccomp	_	_
6	是	_	VC	VC	_	5	pccomp	_	_
7	我	_	PN	PN	_	6	attr	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	秘密	_	AD	AD	_	6	advmod	_	_
10	。	_	PU	PU	_	2	punct	_	_
11	很	_	AD	AD	_	12	advmod	_	_
12	简单	_	VA	VA	_	0	root	_	_
13	：	_	PU	PU	_	12	punct	_	_
14	只有	_	CS	CS	_	21	advmod	_	_
15	用	_	P	P	_	21	prep	_	_
16	心	_	NN	NN	_	15	pobj	_	_
17	才	_	AD	AD	_	21	advmod	_	_
18	能	_	VV	VV	_	21	mmod	_	_
19	看	_	VV	VV	_	21	dep	_	_
20	得	_	DER	DER	_	21	dep	_	_
21	清	_	JJ	JJ	_	12	dep	_	_
22	。	_	PU	PU	_	12	punct	_	_
23	实质性	_	JJ	JJ	_	25	assmod	_	_
24	的	_	DEG	DEG	_	23	assm	_	_
25	东西	_	NN	NN	_	30	nsubj	_	_
26	,	_	PU	PU	_	30	punct	_	_
27	用	_	P	P	_	30	prep	_	_
28	眼睛	_	NN	NN	_	27	pobj	_	_
29	是	_	VC	VC	_	30	cop	_	_
30	看	_	VV	VV	_	12	dep	_	_
31	不	_	AD	AD	_	32	neg	_	_
32	见	_	VV	VV	_	30	dobj	_	_
33	的	_	DEC	DEC	_	32	cpm	_	_
34	。	_	PU	PU	_	12	punct	_	_
35	”	_	PU	PU	_	12	punct	_	_
36	是	_	VC	VC	_	30	conj	_	_

Oracle:
(x24 / 秘密, domain, x27 / 这)
(x24 / 秘密, manner, x26 / 就)
(x24 / 秘密, mod, x28 / 简单-01)
(x24 / 秘密, poss, x25 / 我)
(x28 / 简单-01, degree, x29 / 很)
(x38 / 东西, mod, x39 / 实质性)
(x41 / 用-01, arg1, x40 / 眼睛)

Input(Some(Graph(null,ArrayBuffer(Span(31,32,List(0),见,见-01,false), Span(30,31,List(1),不,不,false), Span(29,30,List(2),看,看-10,false), Span(28,29,List(3),是,是-04,false), Span(27,28,List(4),眼睛,眼睛,false), Span(26,27,List(5),用,用,false), Span(24,25,List(6),东西,东西,false), Span(22,23,List(7),实质性,实质性,false), Span(19,20,List(8),得,得-06,false), Span(18,19,List(9),看,看-10,false), Span(17,18,List(10),能,能,false), Span(16,17,List(11),才,才,false), Span(15,16,List(12),心,心,false), Span(14,15,List(13),用,用,false), Span(13,14,List(14),只有,只有-01,false), Span(11,12,List(15),简单,简单-01,false), Span(10,11,List(16),很,很,false), Span(8,9,List(17),秘密,秘密-01,false), Span(6,7,List(18),我,我,false), Span(5,6,List(19),是,是-04,false), Span(4,5,List(20),就,就-01,false), Span(3,4,List(21),这,这,false), Span(1,2,List(22),喏,喏,false)),Map(2 -> 看-10, 5 -> 用, 12 -> 心, 15 -> 简单-01, 8 -> 得-06, 21 -> 这, 18 -> 我, 7 -> 实质性, 17 -> 秘密-01, 1 -> 不, 4 -> 眼睛, 11 -> 才, 14 -> 只有-01, 20 -> 就-01, 6 -> 东西, 22 -> 喏, 0 -> 见-01, 9 -> 看-10, 16 -> 很, 19 -> 是-04, 3 -> 是-04, 10 -> 能, 13 -> 用),Map(喏 -> 喏, 就 -> 就-01, 简 -> 简单-01, 用 -> 用, 才 -> 才, 我 -> 我, 眼 -> 眼睛, 这 -> 这, 得 -> 得-06, 看2 -> 看-10, 能 -> 能, 很 -> 很, 实 -> 实质性, 心 -> 心, 东 -> 东西, 不 -> 不, 只 -> 只有-01, 看 -> 看-10, 是2 -> 是-04, 是 -> 是-04, 秘 -> 秘密-01, 用2 -> 用, 见 -> 见-01))),[Ljava.lang.String;@310ed6b4,Annotation([Ljava.lang.String;@640cc04b,[Ljava.lang.String;@630bf683,[Ljava.lang.String;@22d322f5),Annotation([Ljava.lang.String;@65afeb6d,[Ljava.lang.String;@6723610b,[Ledu.cmu.lti.nlp.amr.Dependency;@5ba03c82),Annotation([Ljava.lang.String;@60df7989,[Ljava.lang.String;@7ab1127c,[Ljava.lang.String;@6e60f18),Annotation([Ljava.lang.String;@5cf8676a,[Ljava.lang.String;@47f04e4d,[Ledu.cmu.lti.nlp.amr.Entity;@3520963d))
AMR:
(东 / 东西, location, 用 / 用)
(东 / 东西, mod, 实 / 实质性)
(只 / 只有-01, location, 心 / 心)
(只 / 只有-01, location, 用2 / 用)
(只 / 只有-01, manner, 简 / 简单-01)
(喏 / 喏, purpose, 是2 / 是-04)
(就 / 就-01, mod, 这 / 这)
(得 / 得-06, degree, 看2 / 看-10)
(得 / 得-06, location, 实 / 实质性)
(是 / 是-04, degree, 用 / 用)
(是 / 是-04, manner, 眼 / 眼睛)
(是2 / 是-04, manner, 就 / 就-01)
(是2 / 是-04, purpose, 秘 / 秘密-01)
(是2 / 是-04, subset, 我 / 我)
(看 / 看-10, degree, 是 / 是-04)
(看 / 看-10, location, 不 / 不)
(看2 / 看-10, degree, 能 / 能)
(简 / 简单-01, degree, 很 / 很)
(简 / 简单-01, degree, 秘 / 秘密-01)
(能 / 能, location, 心 / 心)
(能 / 能, manner, 才 / 才)
(见 / 见-01, manner, 不 / 不)

Decoded in 155,533 microseconds
Sentence: “ 实质性 的 东西 ， 用 眼睛 是 看 不 见 的 。 ” 小 王子 重复 着 这 句 话 ， 以便 能 把 它 记 在 心 间 。

Spans:
Span 9-10:  不 => 不
Span 3-4:  东西 => 东西
Span 19-20:  句 => 句
Span 27-28:  在 => 在-01
Span 25-26:  它 => 它
Span 1-2:  实质性 => 实质性
Span 14-15:  小 => 小
Span 28-29:  心 => 心
Span 7-8:  是 => 是-04
Span 15-16:  王子 => 王子
Span 5-6:  用 => 用
Span 8-9:  看 => 看-10
Span 6-7:  眼睛 => 眼睛
Span 23-24:  能 => 能
Span 10-11:  见 => 见-01
Span 26-27:  记 => 记-02
Span 20-21:  话 => 话-01
Span 18-19:  这 => 这
Span 16-17:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  东西 => 东西
Oracle Span 1-2:  实质性 => 实质性
Oracle Span 14-15:  小 => 小-01
Oracle Span 28-29:  心 => 心
Oracle Span 15-16:  王子 => 王子
Oracle Span 6-7:  眼睛 => 眼睛
Oracle Span 23-24:  能 => 能-01
Oracle Span 26-27:  记 => 记-02
Oracle Span 20-21:  话 => 话
Oracle Span 18-19:  这 => 这
Oracle Span 16-17:  重复 => 重复-01

Extra span: 在 => 在-01
Extra span: 它 => 它
Incorrect span: 能 => 能
Incorrect span: 话 => 话-01
Extra span: 句 => 句
Incorrect span: 小 => 小
Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Extra span: 用 => 用
Missing span: 能 => 能-01
Missing span: 话 => 话
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	实质性	_	JJ	JJ	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	东西	_	NN	NN	_	8	dep	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	用	_	P	P	_	8	prep	_	_
7	眼睛	_	NN	NN	_	6	pobj	_	_
8	是	_	VC	VC	_	27	dep	_	_
9	看	_	VV	VV	_	11	mmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	见	_	VV	VV	_	8	attr	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	。	_	PU	PU	_	8	punct	_	_
14	”	_	PU	PU	_	8	punct	_	_
15	小	_	JJ	JJ	_	16	amod	_	_
16	王子	_	NN	NN	_	27	nsubj	_	_
17	重复	_	JJ	JJ	_	21	amod	_	_
18	着	_	VV	VV	_	21	rcmod	_	_
19	这	_	DT	DT	_	21	det	_	_
20	句	_	CD	CD	_	19	dep	_	_
21	话	_	NN	NN	_	27	nsubj	_	_
22	,	_	PU	PU	_	27	punct	_	_
23	以便	_	AD	AD	_	27	advmod	_	_
24	能	_	VV	VV	_	27	mmod	_	_
25	把	_	BA	BA	_	27	ba	_	_
26	它	_	PN	PN	_	27	nsubj	_	_
27	记	_	VV	VV	_	0	root	_	_
28	在	_	P	P	_	27	prep	_	_
29	心	_	NN	NN	_	30	lobj	_	_
30	间	_	LC	LC	_	28	plmod	_	_
31	。	_	PU	PU	_	27	punct	_	_

Oracle:
(x21 / 重复-01, arg0, x23 / 王子)
(x21 / 重复-01, arg1, x25 / 话)
(x21 / 重复-01, purpose, x33 / 能-01)
(x23 / 王子, mod, x24 / 小-01)
(x25 / 话, mod, x26 / 这)
(x30 / 东西, mod, x31 / 实质性)
(x33 / 能-01, arg0, x34 / 记-02)
(x34 / 记-02, location, x37 / 心)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),心,心,false), Span(27,28,List(1),在,在-01,false), Span(26,27,List(2),记,记-02,false), Span(25,26,List(3),它,它,false), Span(23,24,List(4),能,能,false), Span(20,21,List(5),话,话-01,false), Span(19,20,List(6),句,句,false), Span(18,19,List(7),这,这,false), Span(16,17,List(8),重复,重复-01,false), Span(15,16,List(9),王子,王子,false), Span(14,15,List(10),小,小,false), Span(10,11,List(11),见,见-01,false), Span(9,10,List(12),不,不,false), Span(8,9,List(13),看,看-10,false), Span(7,8,List(14),是,是-04,false), Span(6,7,List(15),眼睛,眼睛,false), Span(5,6,List(16),用,用,false), Span(3,4,List(17),东西,东西,false), Span(1,2,List(18),实质性,实质性,false)),Map(2 -> 记-02, 5 -> 话-01, 12 -> 不, 15 -> 眼睛, 8 -> 重复-01, 18 -> 实质性, 7 -> 这, 17 -> 东西, 1 -> 在-01, 4 -> 能, 11 -> 见-01, 14 -> 是-04, 6 -> 句, 0 -> 心, 9 -> 王子, 16 -> 用, 3 -> 它, 10 -> 小, 13 -> 看-10),Map(在 -> 在-01, 用 -> 用, 眼 -> 眼睛, 重 -> 重复-01, 这 -> 这, 能 -> 能, 话 -> 话-01, 王 -> 王子, 句 -> 句, 实 -> 实质性, 它 -> 它, 心 -> 心, 东 -> 东西, 记 -> 记-02, 小 -> 小, 不 -> 不, 看 -> 看-10, 是 -> 是-04, 见 -> 见-01))),[Ljava.lang.String;@388d14e,Annotation([Ljava.lang.String;@1cd43562,[Ljava.lang.String;@59939293,[Ljava.lang.String;@68b366e2),Annotation([Ljava.lang.String;@2d74c81b,[Ljava.lang.String;@10b687f2,[Ledu.cmu.lti.nlp.amr.Dependency;@55f4887d),Annotation([Ljava.lang.String;@26837057,[Ljava.lang.String;@2dbc408c,[Ljava.lang.String;@991cbde),Annotation([Ljava.lang.String;@78d71df1,[Ljava.lang.String;@456bcb74,[Ledu.cmu.lti.nlp.amr.Entity;@a9c5b75))
AMR:
(东 / 东西, location, 用 / 用)
(东 / 东西, mod, 实 / 实质性)
(句 / 句, mod, 这 / 这)
(在 / 在-01, degree, 记 / 记-02)
(在 / 在-01, location, 心 / 心)
(它 / 它, location, 记 / 记-02)
(是 / 是-04, degree, 用 / 用)
(是 / 是-04, manner, 眼 / 眼睛)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, degree, 是 / 是-04)
(看 / 看-10, location, 不 / 不)
(能 / 能, location, 话 / 话-01)
(能 / 能, purpose, 记 / 记-02)
(见 / 见-01, manner, 不 / 不)
(话 / 话-01, location, 句 / 句)
(重 / 重复-01, location, 不 / 不)
(重 / 重复-01, purpose, 话 / 话-01)
(重 / 重复-01, topic, 王 / 王子)

Decoded in 103,055 microseconds
Sentence: “ 正 因为 你 为 你 的 玫瑰 花费 了 时间 ， 这 才 使 你 的 玫瑰 变得 如此 重要 。 ”

Spans:
Span 15-16:  你 => 你
Span 5-6:  你 => 你
Span 3-4:  你 => 你
Span 14-15:  使 => 使-01
Span 18-19:  变得 => 变得-01
Span 19-20:  如此 => 如此
Span 13-14:  才 => 才
Span 10-11:  时间 => 时间
Span 1-2:  正 => 正
Span 17-18:  玫瑰 => 玫瑰
Span 7-8:  玫瑰 => 玫瑰
Span 8-9:  花费 => 花费-01
Span 12-13:  这 => 这
Span 20-21:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 14-15:  使 => 使-01
Oracle Span 18-19:  变得 => 变得-01
Oracle Span 19-20:  如此 => 如此-01
Oracle Span 13-14:  才 => 才
Oracle Span 10-11:  时间 => 时间
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 8-9:  花费 => 花费-01
Oracle Span 12-13:  这 => 这
Oracle Span 20-21:  重要 => 重要-01

Incorrect span: 如此 => 如此
Extra span: 玫瑰 => 玫瑰
Extra span: 你 => 你
Extra span: 你 => 你
Extra span: 正 => 正
Missing span: 如此 => 如此-01
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	正	_	AD	AD	_	9	advmod	_	_
3	因为	_	P	P	_	9	prep	_	_
4	你	_	PN	PN	_	5	top	_	_
5	为	_	VC	VC	_	3	pccomp	_	_
6	你	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	玫瑰	_	NN	NN	_	5	attr	_	_
9	花费	_	VV	VV	_	15	dep	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	时间	_	NN	NN	_	9	dobj	_	_
12	,	_	PU	PU	_	15	punct	_	_
13	这	_	PN	PN	_	15	nsubj	_	_
14	才	_	AD	AD	_	15	advmod	_	_
15	使	_	VV	VV	_	0	root	_	_
16	你	_	PN	PN	_	18	assmod	_	_
17	的	_	DEG	DEG	_	16	assm	_	_
18	玫瑰	_	NN	NN	_	15	dobj	_	_
19	变得	_	VV	VV	_	21	mmod	_	_
20	如此	_	AD	AD	_	21	advmod	_	_
21	重要	_	VA	VA	_	15	dep	_	_
22	。	_	PU	PU	_	15	punct	_	_
23	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x20 / 花费-01, arg0, x21 / 你)
(x20 / 花费-01, arg1, x22 / 时间)
(x20 / 花费-01, arg2, x23 / 玫瑰)
(x25 / 使-01, arg0, x27 / 这)
(x25 / 使-01, arg2, x29 / 变得-01)
(x25 / 使-01, manner, x26 / 才)
(x29 / 变得-01, arg1, x31 / 重要-01)
(x31 / 重要-01, degree, x32 / 如此-01)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),重要,重要-01,false), Span(19,20,List(1),如此,如此,false), Span(18,19,List(2),变得,变得-01,false), Span(17,18,List(3),玫瑰,玫瑰,false), Span(15,16,List(4),你,你,false), Span(14,15,List(5),使,使-01,false), Span(13,14,List(6),才,才,false), Span(12,13,List(7),这,这,false), Span(10,11,List(8),时间,时间,false), Span(8,9,List(9),花费,花费-01,false), Span(7,8,List(10),玫瑰,玫瑰,false), Span(5,6,List(11),你,你,false), Span(3,4,List(12),你,你,false), Span(1,2,List(13),正,正,false)),Map(2 -> 变得-01, 5 -> 使-01, 12 -> 你, 8 -> 时间, 7 -> 这, 1 -> 如此, 4 -> 你, 11 -> 你, 6 -> 才, 0 -> 重要-01, 9 -> 花费-01, 3 -> 玫瑰, 10 -> 玫瑰, 13 -> 正),Map(才 -> 才, 重 -> 重要-01, 玫2 -> 玫瑰, 这 -> 这, 你3 -> 你, 你 -> 你, 正 -> 正, 玫 -> 玫瑰, 花 -> 花费-01, 变 -> 变得-01, 你2 -> 你, 使 -> 使-01, 时 -> 时间, 如 -> 如此))),[Ljava.lang.String;@dd4aec3,Annotation([Ljava.lang.String;@4dac121d,[Ljava.lang.String;@568750b7,[Ljava.lang.String;@3e28fee1),Annotation([Ljava.lang.String;@16a2ed51,[Ljava.lang.String;@3b332962,[Ledu.cmu.lti.nlp.amr.Dependency;@57ddd45b),Annotation([Ljava.lang.String;@2e7bf7b7,[Ljava.lang.String;@2fb25f4c,[Ljava.lang.String;@de81be1),Annotation([Ljava.lang.String;@342e690b,[Ljava.lang.String;@4519f676,[Ledu.cmu.lti.nlp.amr.Entity;@78ec89a6))
AMR:
(你3 / 你, location, 正 / 正)
(使 / 使-01, domain, 这 / 这)
(使 / 使-01, manner, 才 / 才)
(使 / 使-01, prep-for, 你 / 你)
(使 / 使-01, purpose, 变 / 变得-01)
(使 / 使-01, time, 时 / 时间)
(变 / 变得-01, beneficiary, 玫 / 玫瑰)
(变 / 变得-01, location, 如 / 如此)
(玫2 / 玫瑰, poss, 你2 / 你)
(花 / 花费-01, manner, 正 / 正)
(花 / 花费-01, prep-through, 时 / 时间)
(花 / 花费-01, topic, 玫2 / 玫瑰)
(重 / 重要-01, degree, 如 / 如此)

Decoded in 54,040 microseconds
Sentence: “ 正 因为 你 为 你 的 玫瑰 花费 了 时间 … ” 小 王子 又 重复 着 ， 要 使 自己 记住 这些 。

Spans:
Span 5-6:  你 => 你
Span 3-4:  你 => 你
Span 20-21:  使 => 使-01
Span 15-16:  又 => 又
Span 13-14:  小 => 小
Span 10-11:  时间 => 时间
Span 1-2:  正 => 正
Span 14-15:  王子 => 王子
Span 7-8:  玫瑰 => 玫瑰
Span 21-22:  自己 => 自己
Span 8-9:  花费 => 花费-01
Span 19-20:  要 => 要-02
Span 22-23:  记住 => 记住-01
Span 23-24:  这些 => 这些
Span 16-17:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 20-21:  使 => 使-01
Oracle Span 13-14:  小 => 小-01
Oracle Span 10-11:  时间 => 时间
Oracle Span 14-15:  王子 => 王子
Oracle Span 7-8:  玫瑰 => 玫瑰
Oracle Span 8-9:  花费 => 花费-01
Oracle Span 22-23:  记住 => 记住-01
Oracle Span 16-17:  重复 => 重复-01

Extra span: 这些 => 这些
Extra span: 自己 => 自己
Extra span: 要 => 要-02
Extra span: 又 => 又
Incorrect span: 小 => 小
Extra span: 你 => 你
Extra span: 正 => 正
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	正	_	AD	AD	_	9	advmod	_	_
3	因为	_	P	P	_	9	prep	_	_
4	你	_	PN	PN	_	5	top	_	_
5	为	_	VC	VC	_	3	pccomp	_	_
6	你	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	玫瑰	_	NN	NN	_	5	attr	_	_
9	花费	_	VV	VV	_	15	vmod	_	_
10	了	_	AS	AS	_	9	asp	_	_
11	时间	_	NN	NN	_	12	nn	_	_
12	…	_	NN	NN	_	9	dobj	_	_
13	”	_	PU	PU	_	9	punct	_	_
14	小	_	JJ	JJ	_	15	amod	_	_
15	王子	_	NN	NN	_	17	nsubj	_	_
16	又	_	AD	AD	_	17	advmod	_	_
17	重复	_	VV	VV	_	0	root	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_
20	要	_	VV	VV	_	21	mmod	_	_
21	使	_	VV	VV	_	17	dep	_	_
22	自己	_	PN	PN	_	23	nsubj	_	_
23	记住	_	VV	VV	_	21	ccomp	_	_
24	这些	_	PN	PN	_	23	dobj	_	_
25	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x19 / 重复-01, arg0, x21 / 王子)
(x19 / 重复-01, purpose, x29 / 使-01)
(x21 / 王子, mod, x22 / 小-01)
(x24 / 花费-01, arg0, x25 / 你)
(x24 / 花费-01, arg1, x26 / 时间)
(x24 / 花费-01, arg2, x27 / 玫瑰)
(x29 / 使-01, arg2, x32 / 记住-01)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),这些,这些,false), Span(22,23,List(1),记住,记住-01,false), Span(21,22,List(2),自己,自己,false), Span(20,21,List(3),使,使-01,false), Span(19,20,List(4),要,要-02,false), Span(16,17,List(5),重复,重复-01,false), Span(15,16,List(6),又,又,false), Span(14,15,List(7),王子,王子,false), Span(13,14,List(8),小,小,false), Span(10,11,List(9),时间,时间,false), Span(8,9,List(10),花费,花费-01,false), Span(7,8,List(11),玫瑰,玫瑰,false), Span(5,6,List(12),你,你,false), Span(3,4,List(13),你,你,false), Span(1,2,List(14),正,正,false)),Map(2 -> 自己, 5 -> 重复-01, 12 -> 你, 8 -> 小, 7 -> 王子, 1 -> 记住-01, 4 -> 要-02, 11 -> 玫瑰, 14 -> 正, 6 -> 又, 0 -> 这些, 9 -> 时间, 3 -> 使-01, 10 -> 花费-01, 13 -> 你),Map(又 -> 又, 自 -> 自己, 重 -> 重复-01, 这 -> 这些, 要 -> 要-02, 王 -> 王子, 你 -> 你, 正 -> 正, 玫 -> 玫瑰, 记 -> 记住-01, 小 -> 小, 花 -> 花费-01, 你2 -> 你, 使 -> 使-01, 时 -> 时间))),[Ljava.lang.String;@3596b249,Annotation([Ljava.lang.String;@7237f3c1,[Ljava.lang.String;@781711b7,[Ljava.lang.String;@642a16aa),Annotation([Ljava.lang.String;@642ee49c,[Ljava.lang.String;@294aba23,[Ledu.cmu.lti.nlp.amr.Dependency;@69909c14),Annotation([Ljava.lang.String;@5d3b58ca,[Ljava.lang.String;@4e224df5,[Ljava.lang.String;@32456db0),Annotation([Ljava.lang.String;@5f5827d0,[Ljava.lang.String;@58a2d9f9,[Ledu.cmu.lti.nlp.amr.Entity;@4337afd))
AMR:
(你2 / 你, location, 正 / 正)
(使 / 使-01, prep-for, 记 / 记住-01)
(时 / 时间, mod, 小 / 小)
(王 / 王子, mod, 小 / 小)
(玫 / 玫瑰, poss, 你 / 你)
(自 / 自己, prep-for, 记 / 记住-01)
(花 / 花费-01, manner, 正 / 正)
(花 / 花费-01, prep-through, 时 / 时间)
(花 / 花费-01, topic, 玫 / 玫瑰)
(要 / 要-02, purpose, 使 / 使-01)
(这 / 这些, degree, 记 / 记住-01)
(重 / 重复-01, manner, 又 / 又)
(重 / 重复-01, purpose, 使 / 使-01)
(重 / 重复-01, unit, 王 / 王子)

Decoded in 62,845 microseconds
Sentence: “ 人们 已经 忘记 了 这个 道理 ， ” 狐狸 说 ，

Spans:
Span 1-2:  人们 => 人们
Span 2-3:  已经 => 已经
Span 3-4:  忘记 => 忘记-01
Span 9-10:  狐狸 => 狐狸
Span 10-11:  说 => 说-02
Span 5-6:  这个 => 这个
Span 6-7:  道理 => 道理

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  人们 => 人们
Oracle Span 2-3:  已经 => 已经
Oracle Span 3-4:  忘记 => 忘记-01
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 10-11:  说 => 说-02
Oracle Span 5-6:  这个 => 这个
Oracle Span 6-7:  道理 => 道理

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	人们	_	NN	NN	_	4	nsubj	_	_
3	已经	_	AD	AD	_	4	advmod	_	_
4	忘记	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	道理	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_
9	”	_	PU	PU	_	4	punct	_	_
10	狐狸	_	NN	NN	_	11	dep	_	_
11	说	_	VV	VV	_	4	conj	_	_
12	,	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-02, arg0, x2 / 狐狸)
(x0 / 说-02, arg1, x3 / 忘记-01)
(x3 / 忘记-01, arg0, x6 / 人们)
(x3 / 忘记-01, arg1, x7 / 道理)
(x3 / 忘记-01, time, x5 / 已经)
(x7 / 道理, mod, x9 / 这个)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),狐狸,狐狸,false), Span(6,7,List(2),道理,道理,false), Span(5,6,List(3),这个,这个,false), Span(3,4,List(4),忘记,忘记-01,false), Span(2,3,List(5),已经,已经,false), Span(1,2,List(6),人们,人们,false)),Map(2 -> 道理, 5 -> 已经, 1 -> 狐狸, 4 -> 忘记-01, 6 -> 人们, 0 -> 说-02, 3 -> 这个),Map(已 -> 已经, 这 -> 这个, 忘 -> 忘记-01, 道 -> 道理, 说 -> 说-02, 狐 -> 狐狸, 人 -> 人们))),[Ljava.lang.String;@1d02af26,Annotation([Ljava.lang.String;@3fa7df1,[Ljava.lang.String;@4dd90166,[Ljava.lang.String;@52227eb2),Annotation([Ljava.lang.String;@5ad1904f,[Ljava.lang.String;@a146b11,[Ledu.cmu.lti.nlp.amr.Dependency;@f438904),Annotation([Ljava.lang.String;@4ed5a1b0,[Ljava.lang.String;@18d003cd,[Ljava.lang.String;@3135bf25),Annotation([Ljava.lang.String;@22ad1bae,[Ljava.lang.String;@4116f66a,[Ledu.cmu.lti.nlp.amr.Entity;@59c04bee))
AMR:
(忘 / 忘记-01, time, 人 / 人们)
(忘 / 忘记-01, time, 已 / 已经)
(说 / 说-02, ARG1, 狐 / 狐狸)
(说 / 说-02, degree, 道 / 道理)
(这 / 这个, conj-as-if, 忘 / 忘记-01)
(道 / 道理, mod, 这 / 这个)

Decoded in 14,870 microseconds
Sentence: “ 可是 ， 你 不 应该 忘记 它 。

Spans:
Span 4-5:  不 => 不
Span 3-4:  你 => 你
Span 7-8:  它 => 它
Span 5-6:  应该 => 应该-01
Span 6-7:  忘记 => 忘记-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 7-8:  它 => 它
Oracle Span 5-6:  应该 => 应该-02
Oracle Span 6-7:  忘记 => 忘记-01

Incorrect span: 应该 => 应该-01
Extra span: 不 => 不
Missing span: 应该 => 应该-02
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	可是	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	应该	_	VV	VV	_	7	conj	_	_
7	忘记	_	VV	VV	_	0	root	_	_
8	它	_	PN	PN	_	7	dobj	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x11 / 应该-02, arg0, x14 / 忘记-01)
(x14 / 忘记-01, arg0, x15 / 你)
(x14 / 忘记-01, arg1, x16 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),它,它,false), Span(6,7,List(1),忘记,忘记-01,false), Span(5,6,List(2),应该,应该-01,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),你,你,false)),Map(2 -> 应该-01, 1 -> 忘记-01, 4 -> 你, 0 -> 它, 3 -> 不),Map(你 -> 你, 它 -> 它, 忘 -> 忘记-01, 不 -> 不, 应 -> 应该-01))),[Ljava.lang.String;@45900b64,Annotation([Ljava.lang.String;@f2a1813,[Ljava.lang.String;@79f90a3a,[Ljava.lang.String;@22bdb1d0),Annotation([Ljava.lang.String;@67b355c8,[Ljava.lang.String;@388623ad,[Ledu.cmu.lti.nlp.amr.Dependency;@91f565d),Annotation([Ljava.lang.String;@46e3559f,[Ljava.lang.String;@3b83459e,[Ljava.lang.String;@32118208),Annotation([Ljava.lang.String;@414f87a9,[Ljava.lang.String;@1ddc6db2,[Ledu.cmu.lti.nlp.amr.Entity;@3cd26422))
AMR:
(不 / 不, mod, 你 / 你)
(它 / 它, location, 忘 / 忘记-01)
(应 / 应该-01, manner, 不 / 不)
(忘 / 忘记-01, time, 应 / 应该-01)

Decoded in 8,874 microseconds
Sentence: 你 现在 要 对 你 驯服 过 的 一切 负责 到底 。

Spans:
Span 8-9:  一切 => 一切
Span 4-5:  你 => 你
Span 0-1:  你 => 你
Span 10-11:  到底 => 到底
Span 3-4:  对 => 对-02
Span 1-2:  现在 => 现在
Span 2-3:  要 => 要-02
Span 9-10:  负责 => 负责-01
Span 6-7:  过 => 过-01
Span 5-6:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  一切 => 一切
Oracle Span 0-1:  你 => 你
Oracle Span 10-11:  到底 => 到底
Oracle Span 1-2:  现在 => 现在
Oracle Span 2-3:  要 => 要-01
Oracle Span 9-10:  负责 => 负责-01
Oracle Span 5-6:  驯服 => 驯服-01

Extra span: 过 => 过-01
Incorrect span: 驯服 => 驯服
Extra span: 你 => 你
Extra span: 对 => 对-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-01
Missing span: 驯服 => 驯服-01
Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	现在	_	NT	NT	_	6	tmod	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	你	_	PN	PN	_	4	pobj	_	_
6	驯服	_	VV	VV	_	0	root	_	_
7	过	_	VV	VV	_	11	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	一切	_	DT	DT	_	11	det	_	_
10	负责	_	VV	VV	_	11	rcmod	_	_
11	到底	_	NN	NN	_	6	dobj	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 要-01, arg0, x2 / 负责-01)
(x0 / 要-01, time, x4 / 现在)
(x2 / 负责-01, arg0, x3 / 你)
(x2 / 负责-01, arg1, x5 / 一切)
(x2 / 负责-01, degree, x8 / 到底)
(x6 / 驯服-01, arg1, x5 / 一切)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),到底,到底,false), Span(9,10,List(1),负责,负责-01,false), Span(8,9,List(2),一切,一切,false), Span(6,7,List(3),过,过-01,false), Span(5,6,List(4),驯服,驯服,false), Span(4,5,List(5),你,你,false), Span(3,4,List(6),对,对-02,false), Span(2,3,List(7),要,要-02,false), Span(1,2,List(8),现在,现在,false), Span(0,1,List(9),你,你,false)),Map(2 -> 一切, 5 -> 你, 8 -> 现在, 7 -> 要-02, 1 -> 负责-01, 4 -> 驯服, 6 -> 对-02, 9 -> 你, 0 -> 到底, 3 -> 过-01),Map(驯 -> 驯服, 要 -> 要-02, 过 -> 过-01, 你 -> 你, 到 -> 到底, 你2 -> 你, 负 -> 负责-01, 对 -> 对-02, 一 -> 一切, 现 -> 现在))),[Ljava.lang.String;@2eda072,Annotation([Ljava.lang.String;@3fa21d49,[Ljava.lang.String;@416d56f2,[Ljava.lang.String;@6e31d989),Annotation([Ljava.lang.String;@1b01a0d,[Ljava.lang.String;@2ed71727,[Ledu.cmu.lti.nlp.amr.Dependency;@5261ec9),Annotation([Ljava.lang.String;@65bb6275,[Ljava.lang.String;@64da6cbd,[Ljava.lang.String;@72a2312e),Annotation([Ljava.lang.String;@47c7a9e5,[Ljava.lang.String;@7951c3a2,[Ledu.cmu.lti.nlp.amr.Entity;@4ed9f7b1))
AMR:
(对 / 对-02, ARG5, 你 / 你)
(对 / 对-02, ARG6, 你2 / 你)
(对 / 对-02, degree, 驯 / 驯服)
(要 / 要-02, ARG2, 对 / 对-02)
(要 / 要-02, time, 现 / 现在)
(负 / 负责-01, ARG4, 一 / 一切)
(负 / 负责-01, degree, 到 / 到底)
(过 / 过-01, degree, 到 / 到底)
(驯 / 驯服, location, 一 / 一切)

Decoded in 30,401 microseconds
Sentence: 你 要 对 你 的 玫瑰 负责 … ”

Spans:
Span 3-4:  你 => 你
Span 0-1:  你 => 你
Span 2-3:  对 => 对-02
Span 5-6:  玫瑰 => 玫瑰
Span 1-2:  要 => 要-02
Span 6-7:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 5-6:  玫瑰 => 玫瑰
Oracle Span 1-2:  要 => 要-03
Oracle Span 6-7:  负责 => 负责-01

Extra span: 你 => 你
Extra span: 对 => 对-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	要	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	8	assmod	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	的	_	DEG	DEG	_	3	assm	_	_
6	玫瑰	_	NN	NN	_	8	nn	_	_
7	负责	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	2	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x8 / 要-03, arg0, x9 / 负责-01)
(x9 / 负责-01, arg0, x10 / 你)
(x9 / 负责-01, arg1, x11 / 玫瑰)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),负责,负责-01,false), Span(5,6,List(1),玫瑰,玫瑰,false), Span(3,4,List(2),你,你,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),要,要-02,false), Span(0,1,List(5),你,你,false)),Map(2 -> 你, 5 -> 你, 1 -> 玫瑰, 4 -> 要-02, 0 -> 负责-01, 3 -> 对-02),Map(要 -> 要-02, 你 -> 你, 玫 -> 玫瑰, 你2 -> 你, 负 -> 负责-01, 对 -> 对-02))),[Ljava.lang.String;@2d119405,Annotation([Ljava.lang.String;@57e388c3,[Ljava.lang.String;@20580d4e,[Ljava.lang.String;@21bd128b),Annotation([Ljava.lang.String;@2d0b05,[Ljava.lang.String;@4b432e53,[Ledu.cmu.lti.nlp.amr.Dependency;@2b916808),Annotation([Ljava.lang.String;@62f11ebb,[Ljava.lang.String;@a6c54c3,[Ljava.lang.String;@580fd26b),Annotation([Ljava.lang.String;@78fe204a,[Ljava.lang.String;@1290ed28,[Ledu.cmu.lti.nlp.amr.Entity;@7a3269f5))
AMR:
(玫 / 玫瑰, accompanier, 负 / 负责-01)
(要 / 要-02, accompanier, 对 / 对-02)
(要 / 要-02, accompanier, 负 / 负责-01)
(要 / 要-02, manner, 你2 / 你)
(负 / 负责-01, quant, 你 / 你)

Decoded in 10,803 microseconds
Sentence: “ 我 要 对 我 的 玫瑰 负责 … ” 小 王子 又 重复 着 ， 这样 他 能够 记住 … …

Spans:
Span 17-18:  他 => 他
Span 12-13:  又 => 又
Span 3-4:  对 => 对-02
Span 10-11:  小 => 小
Span 4-5:  我 => 我
Span 1-2:  我 => 我
Span 11-12:  王子 => 王子
Span 6-7:  玫瑰 => 玫瑰
Span 18-19:  能够 => 能够-01
Span 2-3:  要 => 要-02
Span 19-20:  记住 => 记住-01
Span 7-8:  负责 => 负责-01
Span 16-17:  这样 => 这样-01
Span 13-14:  重复 => 重复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  小 => 小-01
Oracle Span 11-12:  王子 => 王子
Oracle Span 6-7:  玫瑰 => 玫瑰
Oracle Span 18-19:  能够 => 能够-01
Oracle Span 2-3:  要 => 要-03
Oracle Span 19-20:  记住 => 记住-01
Oracle Span 7-8:  负责 => 负责-01
Oracle Span 13-14:  重复 => 重复-01

Extra span: 他 => 他
Extra span: 这样 => 这样-01
Extra span: 又 => 又
Incorrect span: 小 => 小
Extra span: 我 => 我
Extra span: 对 => 对-02
Incorrect span: 要 => 要-02
Extra span: 我 => 我
Missing span: 要 => 要-03
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	8	nsubj	_	_
3	要	_	VV	VV	_	8	mmod	_	_
4	对	_	P	P	_	8	prep	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	玫瑰	_	NN	NN	_	4	pobj	_	_
8	负责	_	VV	VV	_	12	vmod	_	_
9	…	_	NN	NN	_	8	dobj	_	_
10	”	_	PU	PU	_	8	punct	_	_
11	小	_	JJ	JJ	_	12	amod	_	_
12	王子	_	NN	NN	_	14	nsubj	_	_
13	又	_	AD	AD	_	14	advmod	_	_
14	重复	_	VV	VV	_	0	root	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	,	_	PU	PU	_	14	punct	_	_
17	这样	_	AD	AD	_	19	advmod	_	_
18	他	_	PN	PN	_	19	nsubj	_	_
19	能够	_	VV	VV	_	14	conj	_	_
20	记住	_	NN	NN	_	19	dobj	_	_
21	…	_	PU	PU	_	14	punct	_	_
22	…	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 重复-01, arg0, x2 / 王子)
(x0 / 重复-01, arg1, x4 / 要-03)
(x0 / 重复-01, cause, x9 / 能够-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 要-03, arg0, x5 / 负责-01)
(x5 / 负责-01, arg1, x7 / 玫瑰)
(x9 / 能够-01, arg0, x10 / 记住-01)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),记住,记住-01,false), Span(18,19,List(1),能够,能够-01,false), Span(17,18,List(2),他,他,false), Span(16,17,List(3),这样,这样-01,false), Span(13,14,List(4),重复,重复-01,false), Span(12,13,List(5),又,又,false), Span(11,12,List(6),王子,王子,false), Span(10,11,List(7),小,小,false), Span(7,8,List(8),负责,负责-01,false), Span(6,7,List(9),玫瑰,玫瑰,false), Span(4,5,List(10),我,我,false), Span(3,4,List(11),对,对-02,false), Span(2,3,List(12),要,要-02,false), Span(1,2,List(13),我,我,false)),Map(2 -> 他, 5 -> 又, 12 -> 要-02, 8 -> 负责-01, 7 -> 小, 1 -> 能够-01, 4 -> 重复-01, 11 -> 对-02, 6 -> 王子, 0 -> 记住-01, 9 -> 玫瑰, 3 -> 这样-01, 10 -> 我, 13 -> 我),Map(又 -> 又, 重 -> 重复-01, 我 -> 我, 这 -> 这样-01, 要 -> 要-02, 能 -> 能够-01, 王 -> 王子, 我2 -> 我, 他 -> 他, 玫 -> 玫瑰, 记 -> 记住-01, 小 -> 小, 负 -> 负责-01, 对 -> 对-02))),[Ljava.lang.String;@5c887052,Annotation([Ljava.lang.String;@55fdf7f9,[Ljava.lang.String;@4091b9c3,[Ljava.lang.String;@29050de5),Annotation([Ljava.lang.String;@3610f277,[Ljava.lang.String;@c689973,[Ledu.cmu.lti.nlp.amr.Dependency;@41fa769c),Annotation([Ljava.lang.String;@40113163,[Ljava.lang.String;@71a3e05c,[Ljava.lang.String;@39c85c1a),Annotation([Ljava.lang.String;@2b148329,[Ljava.lang.String;@62c72501,[Ledu.cmu.lti.nlp.amr.Entity;@c889805))
AMR:
(王 / 王子, mod, 小 / 小)
(玫 / 玫瑰, poss, 我 / 我)
(能 / 能够-01, degree, 这 / 这样-01)
(能 / 能够-01, example, 记 / 记住-01)
(能 / 能够-01, location, 他 / 他)
(要 / 要-02, beneficiary, 我2 / 我)
(要 / 要-02, example, 对 / 对-02)
(负 / 负责-01, beneficiary, 玫 / 玫瑰)
(负 / 负责-01, extent, 对 / 对-02)
(负 / 负责-01, location, 小 / 小)
(重 / 重复-01, manner, 又 / 又)
(重 / 重复-01, purpose, 能 / 能够-01)
(重 / 重复-01, unit, 王 / 王子)

Decoded in 63,665 microseconds
Sentence: XXII

Spans:
Span 0-1:  XXII => XXII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXII => XXII

Dependencies:
1	XXII	_	VV	VV	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXII,XXII,false)),Map(0 -> XXII),Map(x -> XXII))),[Ljava.lang.String;@77db3d02,Annotation([Ljava.lang.String;@78d9f51b,[Ljava.lang.String;@23ed382c,[Ljava.lang.String;@6bedd4e4),Annotation([Ljava.lang.String;@4570d7b6,[Ljava.lang.String;@72b6832e,[Ledu.cmu.lti.nlp.amr.Dependency;@3850e90c),Annotation([Ljava.lang.String;@3d9f5016,[Ljava.lang.String;@7e91ed74,[Ljava.lang.String;@3878be7b),Annotation([Ljava.lang.String;@7df28f1,[Ljava.lang.String;@4087c7fc,[Ledu.cmu.lti.nlp.amr.Entity;@318c68d5))
AMR:


Decoded in 1,031 microseconds
Sentence: “ 你 好 。 ” 小 王子 说道 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说道 => 说道-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说道	_	VA	VA	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说道,说道,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),好,好-04,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 说道, 3 -> 好-04),Map(你 -> 你, 王 -> 王子, 小 -> 小, 好 -> 好-04, 说 -> 说道))),[Ljava.lang.String;@4cfa83f9,Annotation([Ljava.lang.String;@321ca237,[Ljava.lang.String;@4c5a2baf,[Ljava.lang.String;@1ec22831),Annotation([Ljava.lang.String;@63f855b,[Ljava.lang.String;@516592b1,[Ledu.cmu.lti.nlp.amr.Dependency;@4cffcc61),Annotation([Ljava.lang.String;@4373f66f,[Ljava.lang.String;@399ca607,[Ljava.lang.String;@44114b9f),Annotation([Ljava.lang.String;@76bf1bb8,[Ljava.lang.String;@2a235b8e,[Ledu.cmu.lti.nlp.amr.Entity;@76536c53))
AMR:
(好 / 好-04, location, 你 / 你)
(小 / 小, degree, 好 / 好-04)
(王 / 王子, mod, 小 / 小)
(说 / 说道, beneficiary, 王 / 王子)

Decoded in 9,116 microseconds
Sentence: “ 你 好 。 ” 扳道工 说道 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  扳道工 => 扳道工
Span 6-7:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  扳道工 => 扳道工
Oracle Span 6-7:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	7	conj	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	6	punct	_	_
6	扳道工	_	NT	NT	_	7	nn	_	_
7	说道	_	NN	NN	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 扳道工)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说道,说道,false), Span(5,6,List(1),扳道工,扳道工,false), Span(2,3,List(2),好,好-04,false), Span(1,2,List(3),你,你,false)),Map(2 -> 好-04, 1 -> 扳道工, 0 -> 说道, 3 -> 你),Map(你 -> 你, 扳 -> 扳道工, 好 -> 好-04, 说 -> 说道))),[Ljava.lang.String;@38d08cb5,Annotation([Ljava.lang.String;@363c32cc,[Ljava.lang.String;@6f3f0ae,[Ljava.lang.String;@6baf25d7),Annotation([Ljava.lang.String;@57a6a933,[Ljava.lang.String;@5b5b59,[Ledu.cmu.lti.nlp.amr.Dependency;@1934ad7c),Annotation([Ljava.lang.String;@b27b210,[Ljava.lang.String;@69aa7d76,[Ljava.lang.String;@33f17289),Annotation([Ljava.lang.String;@f1266c6,[Ljava.lang.String;@3913f206,[Ledu.cmu.lti.nlp.amr.Entity;@3e8799f))
AMR:
(好 / 好-04, location, 你 / 你)
(扳 / 扳道工, degree, 好 / 好-04)
(说 / 说道, mod, 扳 / 扳道工)

Decoded in 6,272 microseconds
Sentence: “ 你 在 这里 做 什么 ？ ” 小 王子 问 。

Spans:
Span 5-6:  什么 => 什么
Span 1-2:  你 => 你
Span 4-5:  做 => 做-04
Span 2-3:  在 => 在-01
Span 8-9:  小 => 小
Span 9-10:  王子 => 王子
Span 3-4:  这里 => 这里
Span 10-11:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  做 => 做-01
Oracle Span 8-9:  小 => 小-01
Oracle Span 9-10:  王子 => 王子
Oracle Span 3-4:  这里 => 这里
Oracle Span 10-11:  问 => 问-01

Incorrect span: 小 => 小
Extra span: 什么 => 什么
Incorrect span: 做 => 做-04
Extra span: 在 => 在-01
Missing span: 做 => 做-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	dep	_	_
3	在	_	P	P	_	5	prep	_	_
4	这里	_	PN	PN	_	3	pobj	_	_
5	做	_	VV	VV	_	0	root	_	_
6	什么	_	PN	PN	_	5	dobj	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	问	_	NN	NN	_	5	dep	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 王子, mod, x11 / 小-01)
(x12 / 做-01, arg0, x13 / 你)
(x12 / 做-01, location, x15 / 这里)
(x8 / 问-01, arg0, x10 / 王子)
(x8 / 问-01, arg1, x12 / 做-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),问,问-01,false), Span(9,10,List(1),王子,王子,false), Span(8,9,List(2),小,小,false), Span(5,6,List(3),什么,什么,false), Span(4,5,List(4),做,做-04,false), Span(3,4,List(5),这里,这里,false), Span(2,3,List(6),在,在-01,false), Span(1,2,List(7),你,你,false)),Map(2 -> 小, 5 -> 这里, 7 -> 你, 1 -> 王子, 4 -> 做-04, 6 -> 在-01, 0 -> 问-01, 3 -> 什么),Map(在 -> 在-01, 这 -> 这里, 你 -> 你, 王 -> 王子, 小 -> 小, 做 -> 做-04, 什 -> 什么, 问 -> 问-01))),[Ljava.lang.String;@3b353651,Annotation([Ljava.lang.String;@270d43a7,[Ljava.lang.String;@1280682,[Ljava.lang.String;@41ccb3b9),Annotation([Ljava.lang.String;@53d9826f,[Ljava.lang.String;@1e84f3c8,[Ledu.cmu.lti.nlp.amr.Dependency;@5f59ea8c),Annotation([Ljava.lang.String;@7b2ccba5,[Ljava.lang.String;@64f9f455,[Ljava.lang.String;@5d5a51b1),Annotation([Ljava.lang.String;@4dc7cd1c,[Ljava.lang.String;@50ab56e2,[Ledu.cmu.lti.nlp.amr.Entity;@7b5b5bfe))
AMR:
(做 / 做-04, location, 这 / 这里)
(做 / 做-04, manner, 在 / 在-01)
(做 / 做-04, purpose, 问 / 问-01)
(做 / 做-04, subset, 什 / 什么)
(在 / 在-01, degree, 你 / 你)
(王 / 王子, mod, 小 / 小)
(问 / 问-01, ARG1, 王 / 王子)

Decoded in 18,994 microseconds
Sentence: “ 我 一 包 包 地 分选 旅客 ， 按 每 千 人 一 包 。 ” 扳道工 说 ，

Spans:
Span 12-13:  人 => 人
Span 14-15:  包 => 包
Span 4-5:  包 => 包
Span 3-4:  包 => 包
Span 5-6:  地 => 地
Span 1-2:  我 => 我
Span 17-18:  扳道工 => 扳道工
Span 9-10:  按 => 按-02
Span 7-8:  旅客 => 旅客
Span 10-11:  每 => 每
Span 18-19:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  人 => 人
Oracle Span 3-4:  包 => 包
Oracle Span 17-18:  扳道工 => 扳道工
Oracle Span 9-10:  按 => 按-02
Oracle Span 7-8:  旅客 => 旅客
Oracle Span 18-19:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 包 => 包
Extra span: 每 => 每
Extra span: 地 => 地
Extra span: 包 => 包
Extra span: 我 => 我
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	我	_	PN	PN	_	4	nn	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	包	_	NN	NN	_	5	nn	_	_
5	包	_	NN	NN	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	分选	_	VV	VV	_	0	root	_	_
8	旅客	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	7	punct	_	_
10	按	_	P	P	_	15	prep	_	_
11	每	_	DT	DT	_	13	det	_	_
12	千	_	CD	CD	_	11	dep	_	_
13	人	_	NN	NN	_	10	pobj	_	_
14	一	_	AD	AD	_	15	advmod	_	_
15	包	_	VV	VV	_	7	dep	_	_
16	。	_	PU	PU	_	7	punct	_	_
17	”	_	PU	PU	_	7	punct	_	_
18	扳道工	_	AD	AD	_	19	advmod	_	_
19	说	_	VV	VV	_	7	dep	_	_
20	,	_	PU	PU	_	19	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),说,说-02,false), Span(17,18,List(1),扳道工,扳道工,false), Span(14,15,List(2),包,包,false), Span(12,13,List(3),人,人,false), Span(10,11,List(4),每,每,false), Span(9,10,List(5),按,按-02,false), Span(7,8,List(6),旅客,旅客,false), Span(5,6,List(7),地,地,false), Span(4,5,List(8),包,包,false), Span(3,4,List(9),包,包,false), Span(1,2,List(10),我,我,false)),Map(2 -> 包, 5 -> 按-02, 8 -> 包, 7 -> 地, 1 -> 扳道工, 4 -> 每, 6 -> 旅客, 9 -> 包, 0 -> 说-02, 10 -> 我, 3 -> 人),Map(包3 -> 包, 我 -> 我, 旅 -> 旅客, 按 -> 按-02, 包 -> 包, 包2 -> 包, 每 -> 每, 地 -> 地, 扳 -> 扳道工, 说 -> 说-02, 人 -> 人))),[Ljava.lang.String;@74834afd,Annotation([Ljava.lang.String;@75fd65c,[Ljava.lang.String;@d499c13,[Ljava.lang.String;@2ceca2ef),Annotation([Ljava.lang.String;@42d6c12d,[Ljava.lang.String;@3b42121d,[Ledu.cmu.lti.nlp.amr.Dependency;@7a2ab862),Annotation([Ljava.lang.String;@33188612,[Ljava.lang.String;@4733f6f5,[Ljava.lang.String;@6ccac6f4),Annotation([Ljava.lang.String;@438c9aa7,[Ljava.lang.String;@3453acd2,[Ledu.cmu.lti.nlp.amr.Entity;@6c8f60f3))
AMR:
(人 / 人, location, 包 / 包)
(人 / 人, mod, 每 / 每)
(包2 / 包, location, 包3 / 包)
(包3 / 包, poss, 我 / 我)
(地 / 地, mod, 包2 / 包)
(按 / 按-02, location, 旅 / 旅客)
(旅 / 旅客, location, 地 / 地)
(每 / 每, degree, 按 / 按-02)
(说 / 说-02, degree, 包 / 包)
(说 / 说-02, degree, 扳 / 扳道工)

Decoded in 33,337 microseconds
Sentence: “ 我 打发 这些 运载 旅客 的 列车 ， 一会儿 发往 右方 ， 一会儿 发往 左方 。 ”

Spans:
Span 13-14:  一会儿 => 一会儿
Span 9-10:  一会儿 => 一会儿
Span 7-8:  列车 => 列车
Span 11-12:  右方 => 右方
Span 15-16:  左方 => 左方
Span 1-2:  我 => 我
Span 2-3:  打发 => 打发-01
Span 5-6:  旅客 => 旅客
Span 4-5:  运载 => 运载-01
Span 3-4:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  一会儿 => 一会儿
Oracle Span 13-14:  一会儿 => 一会儿
Oracle Span 7-8:  列车 => 列车
Oracle Span 11-12:  右方 => 右方
Oracle Span 15-16:  左方 => 左方
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  打发 => 打发-01
Oracle Span 5-6:  旅客 => 旅客
Oracle Span 4-5:  运载 => 运载-01
Oracle Span 3-4:  这些 => 这些

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	打发	_	VV	VV	_	0	root	_	_
4	这些	_	DT	DT	_	6	det	_	_
5	运载	_	JJ	JJ	_	6	amod	_	_
6	旅客	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	列车	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	一会儿	_	CD	CD	_	11	nummod	_	_
11	发往	_	NN	NN	_	12	nn	_	_
12	右方	_	NN	NN	_	16	nsubj	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	一会儿	_	CD	CD	_	15	nummod	_	_
15	发往	_	NN	NN	_	16	nsubj	_	_
16	左方	_	VV	VV	_	3	conj	_	_
17	。	_	PU	PU	_	3	punct	_	_
18	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x17 / 打发-01, arg0, x18 / 我)
(x17 / 打发-01, arg1, x19 / 列车)
(x19 / 列车, mod, x20 / 这些)
(x21 / 运载-01, arg0, x19 / 列车)
(x21 / 运载-01, arg1, x22 / 旅客)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),左方,左方,false), Span(13,14,List(1),一会儿,一会儿,false), Span(11,12,List(2),右方,右方,false), Span(9,10,List(3),一会儿,一会儿,false), Span(7,8,List(4),列车,列车,false), Span(5,6,List(5),旅客,旅客,false), Span(4,5,List(6),运载,运载-01,false), Span(3,4,List(7),这些,这些,false), Span(2,3,List(8),打发,打发-01,false), Span(1,2,List(9),我,我,false)),Map(2 -> 右方, 5 -> 旅客, 8 -> 打发-01, 7 -> 这些, 1 -> 一会儿, 4 -> 列车, 6 -> 运载-01, 9 -> 我, 0 -> 左方, 3 -> 一会儿),Map(左 -> 左方, 我 -> 我, 打 -> 打发-01, 这 -> 这些, 运 -> 运载-01, 旅 -> 旅客, 一2 -> 一会儿, 右 -> 右方, 列 -> 列车, 一 -> 一会儿))),[Ljava.lang.String;@56c8e6f0,Annotation([Ljava.lang.String;@71b6172c,[Ljava.lang.String;@58aa10f4,[Ljava.lang.String;@4fb56bea),Annotation([Ljava.lang.String;@5e5beb8a,[Ljava.lang.String;@1f95881a,[Ledu.cmu.lti.nlp.amr.Dependency;@17b016ac),Annotation([Ljava.lang.String;@733ec58b,[Ljava.lang.String;@723877dd,[Ljava.lang.String;@415ef4d8),Annotation([Ljava.lang.String;@56cc9f29,[Ljava.lang.String;@535b1ae6,[Ledu.cmu.lti.nlp.amr.Entity;@626c19cf))
AMR:
(一 / 一会儿, location, 右 / 右方)
(一2 / 一会儿, poss, 列 / 列车)
(右 / 右方, location, 列 / 列车)
(左 / 左方, location, 一 / 一会儿)
(打 / 打发-01, degree, 我 / 我)
(打 / 打发-01, location, 这 / 这些)
(打 / 打发-01, purpose, 运 / 运载-01)
(运 / 运载-01, prep-through, 旅 / 旅客)
(运 / 运载-01, unit, 列 / 列车)

Decoded in 28,426 microseconds
Sentence: 这时 ， 一 列 灯火 明亮 的 快车 ， 雷鸣般 地 响 着 ， 把 扳道 房 震 得 颤颤悠悠 。

Spans:
Span 11-12:  响 => 响-01
Span 10-11:  地 => 地
Span 18-19:  得 => 得-06
Span 7-8:  快车 => 快车
Span 16-17:  房 => 房
Span 15-16:  扳道 => 扳道-01
Span 5-6:  明亮 => 明亮-01
Span 4-5:  灯火 => 灯火
Span 0-1:  这时 => 这时
Span 17-18:  震 => 震-01
Span 19-20:  颤颤悠悠 => 颤颤悠悠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
Oracle Span 11-12:  响 => 响-01
Oracle Span 7-8:  快车 => 快车
Oracle Span 16-17:  房 => 房
Oracle Span 15-16:  扳道 => 扳道-01
Oracle Span 5-6:  明亮 => 明亮-01
Oracle Span 4-5:  灯火 => 灯火
Oracle Span 0-1:  这时 => 这时
Oracle Span 17-18:  震 => 震-01
Oracle Span 19-20:  颤颤悠悠 => 颤颤悠悠

Extra span: 得 => 得-06
Extra span: 地 => 地
Dependencies:
1	这时	_	AD	AD	_	12	advmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	一	_	CD	CD	_	8	nummod	_	_
4	列	_	VV	VV	_	8	rcmod	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	明亮	_	NN	NN	_	4	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	快车	_	NN	NN	_	12	dep	_	_
9	,	_	PU	PU	_	12	punct	_	_
10	雷鸣般	_	JJ	JJ	_	12	dvpmod	_	_
11	地	_	DEV	DEV	_	10	dvpm	_	_
12	响	_	VV	VV	_	0	root	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	,	_	PU	PU	_	12	punct	_	_
15	把	_	BA	BA	_	19	ba	_	_
16	扳道	_	NN	NN	_	18	nn	_	_
17	房	_	NN	NN	_	18	nn	_	_
18	震	_	NN	NN	_	19	nsubj	_	_
19	得	_	VV	VV	_	12	conj	_	_
20	颤颤悠悠	_	NN	NN	_	19	dobj	_	_
21	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x12 / 房, mod, x13 / 扳道-01)
(x14 / 颤颤悠悠, cause, x7 / 震-01)
(x17 / 明亮-01, arg0, x18 / 灯火)
(x2 / 响-01, arg0, x4 / 快车)
(x2 / 响-01, time, x15 / 这时)
(x4 / 快车, mod, x17 / 明亮-01)
(x7 / 震-01, arg1, x12 / 房)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),颤颤悠悠,颤颤悠悠,false), Span(18,19,List(1),得,得-06,false), Span(17,18,List(2),震,震-01,false), Span(16,17,List(3),房,房,false), Span(15,16,List(4),扳道,扳道-01,false), Span(11,12,List(5),响,响-01,false), Span(10,11,List(6),地,地,false), Span(7,8,List(7),快车,快车,false), Span(5,6,List(8),明亮,明亮-01,false), Span(4,5,List(9),灯火,灯火,false), Span(0,1,List(10),这时,这时,false)),Map(2 -> 震-01, 5 -> 响-01, 8 -> 明亮-01, 7 -> 快车, 1 -> 得-06, 4 -> 扳道-01, 6 -> 地, 9 -> 灯火, 0 -> 颤颤悠悠, 10 -> 这时, 3 -> 房),Map(快 -> 快车, 这 -> 这时, 得 -> 得-06, 灯 -> 灯火, 地 -> 地, 扳 -> 扳道-01, 颤 -> 颤颤悠悠, 明 -> 明亮-01, 房 -> 房, 震 -> 震-01, 响 -> 响-01))),[Ljava.lang.String;@54a2d96e,Annotation([Ljava.lang.String;@66a53104,[Ljava.lang.String;@6d229b1c,[Ljava.lang.String;@6f825516),Annotation([Ljava.lang.String;@2da99821,[Ljava.lang.String;@62cba181,[Ledu.cmu.lti.nlp.amr.Dependency;@1b482cbf),Annotation([Ljava.lang.String;@661fe025,[Ljava.lang.String;@7161457,[Ljava.lang.String;@38ee7a9d),Annotation([Ljava.lang.String;@629984eb,[Ljava.lang.String;@7b1e5e55,[Ledu.cmu.lti.nlp.amr.Entity;@4c1d59cd))
AMR:
(响 / 响-01, ARG1, 地 / 地)
(响 / 响-01, time, 快 / 快车)
(响 / 响-01, time, 这 / 这时)
(得 / 得-06, ARG2, 房 / 房)
(得 / 得-06, age, 快 / 快车)
(得 / 得-06, name, 震 / 震-01)
(得 / 得-06, quant, 颤 / 颤颤悠悠)
(快 / 快车, mod, 明 / 明亮-01)
(房 / 房, mod, 扳 / 扳道-01)
(明 / 明亮-01, snt1, 灯 / 灯火)

Decoded in 38,878 microseconds
Sentence: “ 他们 真 匆忙 呀 ， ” 小 王子 说 ，

Spans:
Span 1-2:  他们 => 他们
Span 3-4:  匆忙 => 匆忙-01
Span 7-8:  小 => 小
Span 8-9:  王子 => 王子
Span 2-3:  真 => 真
Span 9-10:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  匆忙 => 匆忙-01
Oracle Span 7-8:  小 => 小-01
Oracle Span 8-9:  王子 => 王子
Oracle Span 2-3:  真 => 真
Oracle Span 9-10:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	匆忙	_	VV	VV	_	0	root	_	_
5	呀	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	王子	_	NN	NN	_	10	dep	_	_
10	说	_	VV	VV	_	4	conj	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 匆忙-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 匆忙-01, arg0, x5 / 他们)
(x4 / 匆忙-01, degree, x6 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),王子,王子,false), Span(7,8,List(2),小,小,false), Span(3,4,List(3),匆忙,匆忙-01,false), Span(2,3,List(4),真,真,false), Span(1,2,List(5),他们,他们,false)),Map(2 -> 小, 5 -> 他们, 1 -> 王子, 4 -> 真, 0 -> 说-02, 3 -> 匆忙-01),Map(王 -> 王子, 他 -> 他们, 小 -> 小, 说 -> 说-02, 真 -> 真, 匆 -> 匆忙-01))),[Ljava.lang.String;@76cf841,Annotation([Ljava.lang.String;@297c9a9b,[Ljava.lang.String;@20999517,[Ljava.lang.String;@6ec63f8),Annotation([Ljava.lang.String;@66223d94,[Ljava.lang.String;@2bc7db89,[Ledu.cmu.lti.nlp.amr.Dependency;@479ac2cb),Annotation([Ljava.lang.String;@220c9a63,[Ljava.lang.String;@55b5cd2b,[Ljava.lang.String;@40bb4f87),Annotation([Ljava.lang.String;@51a651c1,[Ljava.lang.String;@173f1614,[Ledu.cmu.lti.nlp.amr.Entity;@6c184d4d))
AMR:
(匆 / 匆忙-01, degree, 真 / 真)
(匆 / 匆忙-01, location, 他 / 他们)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 匆 / 匆忙-01)

Decoded in 11,305 microseconds
Sentence: “ 他们 要 寻找 什么 ？ ”

Spans:
Span 4-5:  什么 => 什么
Span 1-2:  他们 => 他们
Span 3-4:  寻找 => 寻找-01
Span 2-3:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  寻找 => 寻找-01
Oracle Span 2-3:  要 => 要-03

Extra span: 什么 => 什么
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	寻找	_	VV	VV	_	0	root	_	_
5	什么	_	PN	PN	_	4	dobj	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 要-03, arg0, x9 / 寻找-01)
(x9 / 寻找-01, arg0, x10 / 他们)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),什么,什么,false), Span(3,4,List(1),寻找,寻找-01,false), Span(2,3,List(2),要,要-02,false), Span(1,2,List(3),他们,他们,false)),Map(2 -> 要-02, 1 -> 寻找-01, 0 -> 什么, 3 -> 他们),Map(要 -> 要-02, 寻 -> 寻找-01, 他 -> 他们, 什 -> 什么))),[Ljava.lang.String;@7645f03e,Annotation([Ljava.lang.String;@158e9f6e,[Ljava.lang.String;@7a6ea47d,[Ljava.lang.String;@54b2fc58),Annotation([Ljava.lang.String;@daf22f0,[Ljava.lang.String;@6cbbb9c4,[Ledu.cmu.lti.nlp.amr.Dependency;@63f9b562),Annotation([Ljava.lang.String;@20ead579,[Ljava.lang.String;@5426cb36,[Ljava.lang.String;@65e22def),Annotation([Ljava.lang.String;@4b1ec694,[Ljava.lang.String;@3d299393,[Ledu.cmu.lti.nlp.amr.Entity;@5f34907b))
AMR:
(寻 / 寻找-01, subset, 什 / 什么)
(要 / 要-02, degree, 他 / 他们)
(要 / 要-02, example, 寻 / 寻找-01)

Decoded in 5,755 microseconds
Sentence: “ 开 机车 的 人 自己 也 不 知道 。 ” 扳道工 说道 。

Spans:
Span 7-8:  不 => 不
Span 6-7:  也 => 也
Span 4-5:  人 => 人
Span 1-2:  开 => 开-03
Span 11-12:  扳道工 => 扳道工
Span 2-3:  机车 => 机车
Span 8-9:  知道 => 知道-01
Span 5-6:  自己 => 自己
Span 12-13:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  也 => 也
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  开 => 开-03
Oracle Span 11-12:  扳道工 => 扳道工
Oracle Span 2-3:  机车 => 机车
Oracle Span 8-9:  知道 => 知道-01
Oracle Span 12-13:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 不 => 不
Extra span: 自己 => 自己
Missing span: 说道 => 说道-01
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	开	_	VV	VV	_	5	rcmod	_	_
3	机车	_	NN	NN	_	2	dobj	_	_
4	的	_	DEC	DEC	_	2	cpm	_	_
5	人	_	NN	NN	_	9	nsubj	_	_
6	自己	_	PN	PN	_	9	nsubj	_	_
7	也	_	AD	AD	_	9	advmod	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	知道	_	VV	VV	_	12	conj	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	”	_	PU	PU	_	9	punct	_	_
12	扳道工	_	VV	VV	_	0	root	_	_
13	说道	_	NN	NN	_	12	dobj	_	_
14	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 扳道工)
(x0 / 说道-01, arg1, x3 / 知道-01)
(x3 / 知道-01, arg0, x6 / 人)
(x7 / 开-03, arg0, x6 / 人)
(x7 / 开-03, arg1, x8 / 机车)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),说道,说道,false), Span(11,12,List(1),扳道工,扳道工,false), Span(8,9,List(2),知道,知道-01,false), Span(7,8,List(3),不,不,false), Span(6,7,List(4),也,也,false), Span(5,6,List(5),自己,自己,false), Span(4,5,List(6),人,人,false), Span(2,3,List(7),机车,机车,false), Span(1,2,List(8),开,开-03,false)),Map(2 -> 知道-01, 5 -> 自己, 8 -> 开-03, 7 -> 机车, 1 -> 扳道工, 4 -> 也, 6 -> 人, 0 -> 说道, 3 -> 不),Map(自 -> 自己, 也 -> 也, 机 -> 机车, 不 -> 不, 扳 -> 扳道工, 说 -> 说道, 开 -> 开-03, 知 -> 知道-01, 人 -> 人))),[Ljava.lang.String;@2b4d4327,Annotation([Ljava.lang.String;@16da1abc,[Ljava.lang.String;@671ea6ff,[Ljava.lang.String;@1c52552f),Annotation([Ljava.lang.String;@5dc769f9,[Ljava.lang.String;@1b0e9707,[Ledu.cmu.lti.nlp.amr.Dependency;@9b5f3c7),Annotation([Ljava.lang.String;@74024f3,[Ljava.lang.String;@61ae0d43,[Ljava.lang.String;@ef718de),Annotation([Ljava.lang.String;@287ae90c,[Ljava.lang.String;@2e1b374c,[Ledu.cmu.lti.nlp.amr.Entity;@3fcee3d9))
AMR:
(不 / 不, manner, 也 / 也)
(开 / 开-03, prep-through, 机 / 机车)
(开 / 开-03, source, 人 / 人)
(知 / 知道-01, time, 不 / 不)
(自 / 自己, location, 不 / 不)
(自 / 自己, mod, 人 / 人)
(说 / 说道, mod, 不 / 不)
(说 / 说道, mod, 扳 / 扳道工)

Decoded in 22,178 microseconds
Sentence: 于是 ， 第二 列 灯火 通明 的 快车 又 朝着 相反 的 方向 轰隆 轰隆 地 开 过去 。

Spans:
Span 8-9:  又 => 又
Span 15-16:  地 => 地
Span 16-17:  开 => 开-03
Span 7-8:  快车 => 快车
Span 12-13:  方向 => 方向
Span 4-5:  灯火 => 灯火
Span 10-11:  相反 => 相反-01
Span 14-15:  轰隆 => 轰隆-01
Span 13-14:  轰隆 => 轰隆-01
Span 17-18:  过去 => 过去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  开 => 开-02
Oracle Span 7-8:  快车 => 快车
Oracle Span 12-13:  方向 => 方向
Oracle Span 10-11:  相反 => 相反-01
Oracle Span 13-14:  轰隆 => 轰隆-01
Oracle Span 14-15:  轰隆 => 轰隆-01

Extra span: 过去 => 过去-01
Incorrect span: 开 => 开-03
Extra span: 地 => 地
Extra span: 又 => 又
Extra span: 灯火 => 灯火
Missing span: 开 => 开-02
Dependencies:
1	于是	_	AD	AD	_	17	advmod	_	_
2	,	_	PU	PU	_	17	punct	_	_
3	第二	_	OD	OD	_	8	nummod	_	_
4	列	_	VV	VV	_	8	rcmod	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	通明	_	NN	NN	_	4	dobj	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	快车	_	NN	NN	_	17	nsubj	_	_
9	又	_	AD	AD	_	17	advmod	_	_
10	朝着	_	P	P	_	17	prep	_	_
11	相反	_	NR	NR	_	14	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	方向	_	NN	NN	_	14	nn	_	_
14	轰隆	_	NN	NN	_	10	pobj	_	_
15	轰隆	_	VA	VA	_	17	dvpmod	_	_
16	地	_	DEV	DEV	_	15	dvpm	_	_
17	开	_	VV	VV	_	0	root	_	_
18	过去	_	NT	NT	_	17	dobj	_	_
19	。	_	PU	PU	_	17	punct	_	_

Oracle:
(x16 / 开-02, arg1, x17 / 快车)
(x16 / 开-02, direction, x21 / 方向)
(x16 / 开-02, manner, x23 / 轰隆-01)
(x16 / 开-02, manner, x24 / 轰隆-01)
(x21 / 方向, mod, x22 / 相反-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),过去,过去-01,false), Span(16,17,List(1),开,开-03,false), Span(15,16,List(2),地,地,false), Span(14,15,List(3),轰隆,轰隆-01,false), Span(13,14,List(4),轰隆,轰隆-01,false), Span(12,13,List(5),方向,方向,false), Span(10,11,List(6),相反,相反-01,false), Span(8,9,List(7),又,又,false), Span(7,8,List(8),快车,快车,false), Span(4,5,List(9),灯火,灯火,false)),Map(2 -> 地, 5 -> 方向, 8 -> 快车, 7 -> 又, 1 -> 开-03, 4 -> 轰隆-01, 6 -> 相反-01, 9 -> 灯火, 0 -> 过去-01, 3 -> 轰隆-01),Map(又 -> 又, 相 -> 相反-01, 快 -> 快车, 方 -> 方向, 过 -> 过去-01, 灯 -> 灯火, 轰 -> 轰隆-01, 地 -> 地, 开 -> 开-03, 轰2 -> 轰隆-01))),[Ljava.lang.String;@9c93d16,Annotation([Ljava.lang.String;@760487aa,[Ljava.lang.String;@1526f71,[Ljava.lang.String;@49ca94a9),Annotation([Ljava.lang.String;@9ab310b,[Ljava.lang.String;@5b40de43,[Ledu.cmu.lti.nlp.amr.Dependency;@49fb0bbd),Annotation([Ljava.lang.String;@5489b1f7,[Ljava.lang.String;@4faf104,[Ljava.lang.String;@5995851e),Annotation([Ljava.lang.String;@48a2db72,[Ljava.lang.String;@51bddd98,[Ledu.cmu.lti.nlp.amr.Entity;@21c747a))
AMR:
(开 / 开-03, ARG5, 过 / 过去-01)
(开 / 开-03, direction, 方 / 方向)
(开 / 开-03, manner, 轰 / 轰隆-01)
(开 / 开-03, manner, 轰2 / 轰隆-01)
(开 / 开-03, op, 快 / 快车)
(方 / 方向, mod, 相 / 相反-01)
(灯 / 灯火, location, 快 / 快车)
(轰 / 轰隆-01, ARG1, 地 / 地)
(轰 / 轰隆-01, age, 又 / 又)

Decoded in 55,554 microseconds
Sentence: “ 他们 怎么 又 回来 了 呢 ？ ” 小 王子 问道 。

Spans:
Span 1-2:  他们 => 他们
Span 3-4:  又 => 又
Span 4-5:  回来 => 回来-02
Span 9-10:  小 => 小
Span 2-3:  怎么 => 怎么
Span 10-11:  王子 => 王子
Span 11-12:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  回来 => 回来-01
Oracle Span 9-10:  小 => 小-01
Oracle Span 10-11:  王子 => 王子
Oracle Span 11-12:  问道 => 问道-01

Incorrect span: 小 => 小
Incorrect span: 回来 => 回来-02
Extra span: 怎么 => 怎么
Missing span: 回来 => 回来-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他们	_	PN	PN	_	5	nsubj	_	_
3	怎么	_	AD	AD	_	5	advmod	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	回来	_	VV	VV	_	11	vmod	_	_
6	了	_	VV	VV	_	5	dobj	_	_
7	呢	_	SP	SP	_	6	dep	_	_
8	？	_	PU	PU	_	5	punct	_	_
9	”	_	PU	PU	_	5	punct	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	王子	_	NN	NN	_	12	nsubj	_	_
12	问道	_	VA	VA	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 回来-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 回来-01, arg0, x6 / 他们)
(x4 / 回来-01, manner, x5 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),问道,问道-01,false), Span(10,11,List(1),王子,王子,false), Span(9,10,List(2),小,小,false), Span(4,5,List(3),回来,回来-02,false), Span(3,4,List(4),又,又,false), Span(2,3,List(5),怎么,怎么,false), Span(1,2,List(6),他们,他们,false)),Map(2 -> 小, 5 -> 怎么, 1 -> 王子, 4 -> 又, 6 -> 他们, 0 -> 问道-01, 3 -> 回来-02),Map(又 -> 又, 王 -> 王子, 他 -> 他们, 怎 -> 怎么, 小 -> 小, 问 -> 问道-01, 回 -> 回来-02))),[Ljava.lang.String;@77d4ac52,Annotation([Ljava.lang.String;@29f38091,[Ljava.lang.String;@161dd92a,[Ljava.lang.String;@77c3c037),Annotation([Ljava.lang.String;@252744a1,[Ljava.lang.String;@10e5bf9c,[Ledu.cmu.lti.nlp.amr.Dependency;@68c9e023),Annotation([Ljava.lang.String;@1624775,[Ljava.lang.String;@1e7f19b4,[Ljava.lang.String;@235b4cb8),Annotation([Ljava.lang.String;@4346808,[Ljava.lang.String;@17fede14,[Ledu.cmu.lti.nlp.amr.Entity;@712ac7e6))
AMR:
(回 / 回来-02, location, 他 / 他们)
(回 / 回来-02, location, 怎 / 怎么)
(回 / 回来-02, manner, 又 / 又)
(王 / 王子, mod, 小 / 小)
(问 / 问道-01, ARG3, 王 / 王子)
(问 / 问道-01, manner, 回 / 回来-02)

Decoded in 23,271 microseconds
Sentence: “ 他们 不 是 原来 那些 人 了 。 ” 扳道工 说 ，

Spans:
Span 2-3:  不 => 不
Span 6-7:  人 => 人
Span 1-2:  他们 => 他们
Span 4-5:  原来 => 原来-01
Span 10-11:  扳道工 => 扳道工
Span 3-4:  是 => 是-04
Span 11-12:  说 => 说-02
Span 5-6:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  人 => 人
Oracle Span 1-2:  他们 => 他们
Oracle Span 4-5:  原来 => 原来-01
Oracle Span 10-11:  扳道工 => 扳道工
Oracle Span 11-12:  说 => 说-01
Oracle Span 5-6:  那些 => 那些

Incorrect span: 说 => 说-02
Extra span: 是 => 是-04
Extra span: 不 => 不
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	是	_	VC	VC	_	0	root	_	_
5	原来	_	AD	AD	_	8	advmod	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	人	_	NN	NN	_	8	prep	_	_
8	了	_	VV	VV	_	4	ccomp	_	_
9	。	_	PU	PU	_	8	punct	_	_
10	”	_	PU	PU	_	4	punct	_	_
11	扳道工	_	AD	AD	_	12	advmod	_	_
12	说	_	VV	VV	_	4	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 人)
(x3 / 人, domain, x4 / 他们)
(x3 / 人, mod, x6 / 那些)
(x6 / 那些, mod, x7 / 原来-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),扳道工,扳道工,false), Span(6,7,List(2),人,人,false), Span(5,6,List(3),那些,那些,false), Span(4,5,List(4),原来,原来-01,false), Span(3,4,List(5),是,是-04,false), Span(2,3,List(6),不,不,false), Span(1,2,List(7),他们,他们,false)),Map(2 -> 人, 5 -> 是-04, 7 -> 他们, 1 -> 扳道工, 4 -> 原来-01, 6 -> 不, 0 -> 说-02, 3 -> 那些),Map(他 -> 他们, 不 -> 不, 扳 -> 扳道工, 说 -> 说-02, 原 -> 原来-01, 那 -> 那些, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@86d6bf7,Annotation([Ljava.lang.String;@2fbe26da,[Ljava.lang.String;@4ed15347,[Ljava.lang.String;@6963b88c),Annotation([Ljava.lang.String;@ab24484,[Ljava.lang.String;@54e43bfe,[Ledu.cmu.lti.nlp.amr.Dependency;@106b014e),Annotation([Ljava.lang.String;@64387c17,[Ljava.lang.String;@7c369270,[Ljava.lang.String;@9f86dc3),Annotation([Ljava.lang.String;@41d16cc3,[Ljava.lang.String;@662e682a,[Ledu.cmu.lti.nlp.amr.Entity;@2e43c38d))
AMR:
(人 / 人, mod, 那 / 那些)
(他 / 他们, location, 不 / 不)
(原 / 原来-01, degree, 是 / 是-04)
(是 / 是-04, manner, 不 / 不)
(说 / 说-02, degree, 扳 / 扳道工)
(说 / 说-02, degree, 是 / 是-04)
(那 / 那些, mod, 原 / 原来-01)

Decoded in 20,990 microseconds
Sentence: “ 这 是 一 次 对开 列车 。 ”

Spans:
Span 6-7:  列车 => 列车
Span 5-6:  对开 => 对开-01
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  列车 => 列车
Oracle Span 5-6:  对开 => 对开-01
Oracle Span 1-2:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	次	_	M	M	_	7	clf	_	_
6	对开	_	NN	NN	_	7	nn	_	_
7	列车	_	NN	NN	_	3	attr	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 对开-01, arg0, x7 / 列车)
(x7 / 列车, domain, x9 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),列车,列车,false), Span(5,6,List(1),对开,对开-01,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),这,这,false)),Map(2 -> 是-04, 1 -> 对开-01, 0 -> 列车, 3 -> 这),Map(这 -> 这, 对 -> 对开-01, 列 -> 列车, 是 -> 是-04))),[Ljava.lang.String;@649f25f3,Annotation([Ljava.lang.String;@2e62ead7,[Ljava.lang.String;@3b98b809,[Ljava.lang.String;@bf75b5c),Annotation([Ljava.lang.String;@16da476c,[Ljava.lang.String;@2fd72332,[Ledu.cmu.lti.nlp.amr.Dependency;@51f18e31),Annotation([Ljava.lang.String;@60ed12e8,[Ljava.lang.String;@24c8d8be,[Ljava.lang.String;@3290b1a6),Annotation([Ljava.lang.String;@6fcd31c3,[Ljava.lang.String;@67bf0480,[Ledu.cmu.lti.nlp.amr.Entity;@5503de1))
AMR:
(列 / 列车, mod, 对 / 对开-01)
(对 / 对开-01, degree, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)

Decoded in 9,973 microseconds
Sentence: “ 他们 不 满意 他们 原来 所 住 的 地方 吗 ？ ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  他们 => 他们
Span 1-2:  他们 => 他们
Span 7-8:  住 => 住-01
Span 5-6:  原来 => 原来-01
Span 9-10:  地方 => 地方
Span 3-4:  满意 => 满意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 7-8:  住 => 住-01
Oracle Span 5-6:  原来 => 原来-01
Oracle Span 9-10:  地方 => 地方
Oracle Span 3-4:  满意 => 满意-01

Extra span: 他们 => 他们
Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	满意	_	VV	VV	_	0	root	_	_
5	他们	_	PN	PN	_	8	nsubj	_	_
6	原来	_	AD	AD	_	8	advmod	_	_
7	所	_	MSP	MSP	_	8	prtmod	_	_
8	住	_	VV	VV	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	地方	_	NN	NN	_	4	dobj	_	_
11	吗	_	SP	SP	_	4	dep	_	_
12	？	_	PU	PU	_	4	punct	_	_
13	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 满意-01, arg0, x13 / 他们)
(x11 / 满意-01, arg1, x14 / 地方)
(x15 / 住-01, arg1, x14 / 地方)
(x15 / 住-01, time, x17 / 原来-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),地方,地方,false), Span(7,8,List(1),住,住-01,false), Span(5,6,List(2),原来,原来-01,false), Span(4,5,List(3),他们,他们,false), Span(3,4,List(4),满意,满意-01,false), Span(2,3,List(5),不,不,false), Span(1,2,List(6),他们,他们,false)),Map(2 -> 原来-01, 5 -> 不, 1 -> 住-01, 4 -> 满意-01, 6 -> 他们, 0 -> 地方, 3 -> 他们),Map(他2 -> 他们, 他 -> 他们, 满 -> 满意-01, 地 -> 地方, 不 -> 不, 原 -> 原来-01, 住 -> 住-01))),[Ljava.lang.String;@32faa16c,Annotation([Ljava.lang.String;@343fddd9,[Ljava.lang.String;@2bbb44da,[Ljava.lang.String;@2f80cb79),Annotation([Ljava.lang.String;@4816ee24,[Ljava.lang.String;@20d33ea,[Ledu.cmu.lti.nlp.amr.Dependency;@73613ae5),Annotation([Ljava.lang.String;@5a13fcf3,[Ljava.lang.String;@250b5e5b,[Ljava.lang.String;@4ef2ab73),Annotation([Ljava.lang.String;@34be065a,[Ljava.lang.String;@718f805a,[Ledu.cmu.lti.nlp.amr.Entity;@e09f1b6))
AMR:
(住 / 住-01, manner, 原 / 原来-01)
(住 / 住-01, prep-through, 地 / 地方)
(满 / 满意-01, location, 不 / 不)
(满 / 满意-01, location, 他 / 他们)
(满 / 满意-01, location, 他2 / 他们)
(满 / 满意-01, prep-through, 原 / 原来-01)

Decoded in 18,948 microseconds
Sentence: “ 人们 是 从来 也 不 会 满意 自己 所 在 的 地方 的 。 ” 扳道工 说 。

Spans:
Span 5-6:  不 => 不
Span 4-5:  也 => 也
Span 1-2:  人们 => 人们
Span 3-4:  从来 => 从来
Span 6-7:  会 => 会-03
Span 10-11:  在 => 在-01
Span 12-13:  地方 => 地方
Span 16-17:  扳道工 => 扳道工
Span 2-3:  是 => 是-04
Span 7-8:  满意 => 满意-01
Span 8-9:  自己 => 自己
Span 17-18:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 1-2:  人们 => 人们
Oracle Span 3-4:  从来 => 从来
Oracle Span 6-7:  会 => 会-02
Oracle Span 12-13:  地方 => 地方
Oracle Span 16-17:  扳道工 => 扳道工
Oracle Span 7-8:  满意 => 满意-01
Oracle Span 17-18:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 在 => 在-01
Extra span: 自己 => 自己
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 是 => 是-04
Missing span: 说 => 说-01
Missing span: 会 => 会-02
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	人们	_	NN	NN	_	3	top	_	_
3	是	_	VC	VC	_	18	dep	_	_
4	从来	_	AD	AD	_	8	advmod	_	_
5	也	_	AD	AD	_	8	advmod	_	_
6	不	_	AD	AD	_	8	neg	_	_
7	会	_	NN	NN	_	8	prep	_	_
8	满意	_	VV	VV	_	3	ccomp	_	_
9	自己	_	PN	PN	_	11	nsubj	_	_
10	所	_	MSP	MSP	_	11	prtmod	_	_
11	在	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	地方	_	NN	NN	_	8	dobj	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	。	_	PU	PU	_	8	punct	_	_
16	”	_	PU	PU	_	3	punct	_	_
17	扳道工	_	NR	NR	_	18	nsubj	_	_
18	说	_	VV	VV	_	0	root	_	_
19	。	_	PU	PU	_	18	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 会-02)
(x3 / 会-02, arg0, x4 / 满意-01)
(x3 / 会-02, manner, x7 / 也)
(x4 / 满意-01, arg0, x5 / 人们)
(x4 / 满意-01, arg1, x8 / 地方)
(x4 / 满意-01, duration, x11 / 从来)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),说,说-02,false), Span(16,17,List(1),扳道工,扳道工,false), Span(12,13,List(2),地方,地方,false), Span(10,11,List(3),在,在-01,false), Span(8,9,List(4),自己,自己,false), Span(7,8,List(5),满意,满意-01,false), Span(6,7,List(6),会,会-03,false), Span(5,6,List(7),不,不,false), Span(4,5,List(8),也,也,false), Span(3,4,List(9),从来,从来,false), Span(2,3,List(10),是,是-04,false), Span(1,2,List(11),人们,人们,false)),Map(2 -> 地方, 5 -> 满意-01, 8 -> 也, 7 -> 不, 1 -> 扳道工, 11 -> 人们, 4 -> 自己, 6 -> 会-03, 9 -> 从来, 0 -> 说-02, 10 -> 是-04, 3 -> 在-01),Map(从 -> 从来, 自 -> 自己, 在 -> 在-01, 也 -> 也, 满 -> 满意-01, 地 -> 地方, 不 -> 不, 会 -> 会-03, 扳 -> 扳道工, 说 -> 说-02, 人 -> 人们, 是 -> 是-04))),[Ljava.lang.String;@557b6a37,Annotation([Ljava.lang.String;@11b32a14,[Ljava.lang.String;@1c33e528,[Ljava.lang.String;@5df63359),Annotation([Ljava.lang.String;@53d2d002,[Ljava.lang.String;@5b39a3e6,[Ledu.cmu.lti.nlp.amr.Dependency;@5820070c),Annotation([Ljava.lang.String;@34208baa,[Ljava.lang.String;@71370fec,[Ljava.lang.String;@6707a4bf),Annotation([Ljava.lang.String;@3fc7c734,[Ljava.lang.String;@f0a66bd,[Ledu.cmu.lti.nlp.amr.Entity;@460b50df))
AMR:
(不 / 不, manner, 也 / 也)
(会 / 会-03, location, 不 / 不)
(地 / 地方, mod, 在 / 在-01)
(是 / 是-04, degree, 人 / 人们)
(是 / 是-04, duration, 从 / 从来)
(是 / 是-04, location, 不 / 不)
(满 / 满意-01, duration, 在 / 在-01)
(满 / 满意-01, duration, 自 / 自己)
(满 / 满意-01, time, 会 / 会-03)
(说 / 说-02, degree, 扳 / 扳道工)
(说 / 说-02, unit, 地 / 地方)

Decoded in 66,878 microseconds
Sentence: 此时 ， 第三 趟 灯火 明亮 的 快车 又 隆隆 而 过 。

Spans:
Span 8-9:  又 => 又
Span 7-8:  快车 => 快车
Span 5-6:  明亮 => 明亮-01
Span 0-1:  此时 => 此时
Span 4-5:  灯火 => 灯火
Span 11-12:  过 => 过-01
Span 9-10:  隆隆 => 隆隆-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  快车 => 快车
Oracle Span 5-6:  明亮 => 明亮-01
Oracle Span 0-1:  此时 => 此时
Oracle Span 4-5:  灯火 => 灯火
Oracle Span 11-12:  过 => 过-05
Oracle Span 9-10:  隆隆 => 隆隆-01

Incorrect span: 过 => 过-01
Extra span: 又 => 又
Missing span: 过 => 过-05
Dependencies:
1	此时	_	NT	NT	_	12	tmod	_	_
2	,	_	PU	PU	_	12	punct	_	_
3	第三	_	OD	OD	_	4	nummod	_	_
4	趟	_	NN	NN	_	6	nn	_	_
5	灯火	_	NN	NN	_	6	nn	_	_
6	明亮	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	快车	_	NN	NN	_	12	nsubj	_	_
9	又	_	AD	AD	_	12	advmod	_	_
10	隆隆	_	AD	AD	_	12	advmod	_	_
11	而	_	MSP	MSP	_	12	prtmod	_	_
12	过	_	VV	VV	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 过-05, arg0, x3 / 快车)
(x0 / 过-05, manner, x2 / 隆隆-01)
(x0 / 过-05, time, x8 / 此时)
(x10 / 明亮-01, arg0, x11 / 灯火)
(x3 / 快车, mod, x10 / 明亮-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),过,过-01,false), Span(9,10,List(1),隆隆,隆隆-01,false), Span(8,9,List(2),又,又,false), Span(7,8,List(3),快车,快车,false), Span(5,6,List(4),明亮,明亮-01,false), Span(4,5,List(5),灯火,灯火,false), Span(0,1,List(6),此时,此时,false)),Map(2 -> 又, 5 -> 灯火, 1 -> 隆隆-01, 4 -> 明亮-01, 6 -> 此时, 0 -> 过-01, 3 -> 快车),Map(此 -> 此时, 又 -> 又, 快 -> 快车, 过 -> 过-01, 灯 -> 灯火, 明 -> 明亮-01, 隆 -> 隆隆-01))),[Ljava.lang.String;@1cf336fd,Annotation([Ljava.lang.String;@1d0cac30,[Ljava.lang.String;@41ef1ea2,[Ljava.lang.String;@5dfe23e8),Annotation([Ljava.lang.String;@583fb274,[Ljava.lang.String;@202ae86f,[Ledu.cmu.lti.nlp.amr.Dependency;@1989e8c6),Annotation([Ljava.lang.String;@35c4697c,[Ljava.lang.String;@104dc1a2,[Ljava.lang.String;@67d32a54),Annotation([Ljava.lang.String;@314a31b0,[Ljava.lang.String;@2753316c,[Ledu.cmu.lti.nlp.amr.Entity;@59edb4f5))
AMR:
(快 / 快车, mod, 明 / 明亮-01)
(明 / 明亮-01, snt1, 灯 / 灯火)
(过 / 过-01, beneficiary, 快 / 快车)
(过 / 过-01, manner, 又 / 又)
(过 / 过-01, manner, 隆 / 隆隆-01)
(过 / 过-01, time, 此 / 此时)

Decoded in 26,922 microseconds
Sentence: “ 他们 是 在 追随 第一 批 旅客 吗 ？ ” 小 王子 问道 。

Spans:
Span 1-2:  他们 => 他们
Span 3-4:  在 => 在-01
Span 11-12:  小 => 小
Span 6-7:  批 => 批
Span 7-8:  旅客 => 旅客
Span 2-3:  是 => 是-04
Span 12-13:  王子 => 王子
Span 4-5:  追随 => 追随-01
Span 13-14:  问道 => 问道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 11-12:  小 => 小-01
Oracle Span 6-7:  批 => 批
Oracle Span 7-8:  旅客 => 旅客
Oracle Span 12-13:  王子 => 王子
Oracle Span 4-5:  追随 => 追随-01
Oracle Span 13-14:  问道 => 问道-01

Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	在	_	AD	AD	_	5	advmod	_	_
5	追随	_	VV	VV	_	3	ccomp	_	_
6	第一	_	OD	OD	_	7	dep	_	_
7	批	_	VV	VV	_	5	ccomp	_	_
8	旅客	_	NN	NN	_	7	dobj	_	_
9	吗	_	SP	SP	_	7	dep	_	_
10	？	_	PU	PU	_	5	punct	_	_
11	”	_	PU	PU	_	3	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	nsubj	_	_
14	问道	_	VV	VV	_	3	conj	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 问道-01, arg0, x2 / 王子)
(x0 / 问道-01, arg1, x4 / 追随-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 追随-01, arg0, x5 / 他们)
(x4 / 追随-01, arg1, x6 / 旅客)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),问道,问道-01,false), Span(12,13,List(1),王子,王子,false), Span(11,12,List(2),小,小,false), Span(7,8,List(3),旅客,旅客,false), Span(6,7,List(4),批,批,false), Span(4,5,List(5),追随,追随-01,false), Span(3,4,List(6),在,在-01,false), Span(2,3,List(7),是,是-04,false), Span(1,2,List(8),他们,他们,false)),Map(2 -> 小, 5 -> 追随-01, 8 -> 他们, 7 -> 是-04, 1 -> 王子, 4 -> 批, 6 -> 在-01, 0 -> 问道-01, 3 -> 旅客),Map(在 -> 在-01, 追 -> 追随-01, 旅 -> 旅客, 王 -> 王子, 他 -> 他们, 批 -> 批, 小 -> 小, 问 -> 问道-01, 是 -> 是-04))),[Ljava.lang.String;@2792b416,Annotation([Ljava.lang.String;@4735d6e5,[Ljava.lang.String;@79d3473e,[Ljava.lang.String;@4dad0eed),Annotation([Ljava.lang.String;@7fad214a,[Ljava.lang.String;@164642a4,[Ledu.cmu.lti.nlp.amr.Dependency;@75cf0de5),Annotation([Ljava.lang.String;@50b0afd7,[Ljava.lang.String;@468173fa,[Ljava.lang.String;@62765aec),Annotation([Ljava.lang.String;@6f5bd362,[Ljava.lang.String;@3a401749,[Ledu.cmu.lti.nlp.amr.Entity;@7793ad58))
AMR:
(在 / 在-01, degree, 是 / 是-04)
(旅 / 旅客, location, 批 / 批)
(是 / 是-04, degree, 他 / 他们)
(王 / 王子, mod, 小 / 小)
(追 / 追随-01, location, 小 / 小)
(追 / 追随-01, location, 批 / 批)
(追 / 追随-01, manner, 在 / 在-01)
(问 / 问道-01, ARG3, 王 / 王子)

Decoded in 31,070 microseconds
Sentence: “ 他们 什么 也 不 追随 。 ” 扳道工 说 ，

Spans:
Span 4-5:  不 => 不
Span 3-4:  也 => 也
Span 2-3:  什么 => 什么
Span 1-2:  他们 => 他们
Span 8-9:  扳道工 => 扳道工
Span 9-10:  说 => 说-02
Span 5-6:  追随 => 追随-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  什么 => 什么
Oracle Span 1-2:  他们 => 他们
Oracle Span 8-9:  扳道工 => 扳道工
Oracle Span 9-10:  说 => 说-01
Oracle Span 5-6:  追随 => 追随-01

Incorrect span: 说 => 说-02
Extra span: 不 => 不
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	他们	_	PN	PN	_	6	nsubj	_	_
3	什么	_	PN	PN	_	6	nsubj	_	_
4	也	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	追随	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_
8	”	_	PU	PU	_	6	punct	_	_
9	扳道工	_	AD	AD	_	10	advmod	_	_
10	说	_	VV	VV	_	6	dep	_	_
11	,	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 追随-01)
(x3 / 追随-01, arg0, x5 / 他们)
(x3 / 追随-01, arg1, x6 / 什么)
(x3 / 追随-01, manner, x7 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说,说-02,false), Span(8,9,List(1),扳道工,扳道工,false), Span(5,6,List(2),追随,追随-01,false), Span(4,5,List(3),不,不,false), Span(3,4,List(4),也,也,false), Span(2,3,List(5),什么,什么,false), Span(1,2,List(6),他们,他们,false)),Map(2 -> 追随-01, 5 -> 什么, 1 -> 扳道工, 4 -> 也, 6 -> 他们, 0 -> 说-02, 3 -> 不),Map(也 -> 也, 追 -> 追随-01, 他 -> 他们, 不 -> 不, 扳 -> 扳道工, 说 -> 说-02, 什 -> 什么))),[Ljava.lang.String;@27e2287c,Annotation([Ljava.lang.String;@16132f21,[Ljava.lang.String;@2cd388f5,[Ljava.lang.String;@4640195a),Annotation([Ljava.lang.String;@70d77826,[Ljava.lang.String;@7f323b3a,[Ledu.cmu.lti.nlp.amr.Dependency;@4f169009),Annotation([Ljava.lang.String;@9dada78,[Ljava.lang.String;@4207852d,[Ljava.lang.String;@2c829dbc),Annotation([Ljava.lang.String;@57efc6fd,[Ljava.lang.String;@839df62,[Ledu.cmu.lti.nlp.amr.Entity;@76e90da5))
AMR:
(不 / 不, mod, 什 / 什么)
(说 / 说-02, degree, 扳 / 扳道工)
(说 / 说-02, purpose, 追 / 追随-01)
(追 / 追随-01, location, 他 / 他们)
(追 / 追随-01, manner, 不 / 不)
(追 / 追随-01, manner, 也 / 也)

Decoded in 18,975 microseconds
Sentence: “ 他们 在 里面 睡觉 ， 或是 在 打哈欠 。

Spans:
Span 1-2:  他们 => 他们
Span 7-8:  在 => 在-01
Span 2-3:  在 => 在-01
Span 8-9:  打哈欠 => 打哈欠-01
Span 4-5:  睡觉 => 睡觉-01
Span 3-4:  里面 => 里面

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 8-9:  打哈欠 => 打哈欠-01
Oracle Span 4-5:  睡觉 => 睡觉-01
Oracle Span 3-4:  里面 => 里面

Extra span: 在 => 在-01
Extra span: 在 => 在-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他们	_	PN	PN	_	5	nsubj	_	_
3	在	_	P	P	_	5	prep	_	_
4	里面	_	NN	NN	_	3	pobj	_	_
5	睡觉	_	VV	VV	_	0	root	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	或是	_	VV	VV	_	5	ccomp	_	_
8	在	_	P	P	_	7	prep	_	_
9	打哈欠	_	NR	NR	_	8	pobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 睡觉-01, arg0, x11 / 他们)
(x10 / 睡觉-01, location, x12 / 里面)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),打哈欠,打哈欠-01,false), Span(7,8,List(1),在,在-01,false), Span(4,5,List(2),睡觉,睡觉-01,false), Span(3,4,List(3),里面,里面,false), Span(2,3,List(4),在,在-01,false), Span(1,2,List(5),他们,他们,false)),Map(2 -> 睡觉-01, 5 -> 他们, 1 -> 在-01, 4 -> 在-01, 0 -> 打哈欠-01, 3 -> 里面),Map(在2 -> 在-01, 在 -> 在-01, 打 -> 打哈欠-01, 里 -> 里面, 他 -> 他们, 睡 -> 睡觉-01))),[Ljava.lang.String;@4e3e11b9,Annotation([Ljava.lang.String;@67cffead,[Ljava.lang.String;@214beff9,[Ljava.lang.String;@1ff15a50),Annotation([Ljava.lang.String;@217c23ce,[Ljava.lang.String;@39de9bda,[Ledu.cmu.lti.nlp.amr.Dependency;@47148f3f),Annotation([Ljava.lang.String;@52226e57,[Ljava.lang.String;@1200458e,[Ljava.lang.String;@5fcd1c5f),Annotation([Ljava.lang.String;@3cc30dee,[Ljava.lang.String;@7d528cf7,[Ledu.cmu.lti.nlp.amr.Entity;@6dee8ae6))
AMR:
(在 / 在-01, degree, 睡 / 睡觉-01)
(在2 / 在-01, degree, 他 / 他们)
(在2 / 在-01, location, 里 / 里面)
(打 / 打哈欠-01, time, 在 / 在-01)
(睡 / 睡觉-01, location, 里 / 里面)

Decoded in 14,929 microseconds
Sentence: 只有 孩子们 把 鼻子 贴 在 玻璃窗 上 往 外 看 。 ”

Spans:
Span 0-1:  只有 => 只有-01
Span 5-6:  在 => 在-01
Span 9-10:  外 => 外
Span 1-2:  孩子们 => 孩子们
Span 6-7:  玻璃窗 => 玻璃窗
Span 10-11:  看 => 看-10
Span 4-5:  贴 => 贴-01
Span 3-4:  鼻子 => 鼻子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  外 => 外
Oracle Span 1-2:  孩子们 => 孩子们
Oracle Span 6-7:  玻璃窗 => 玻璃窗
Oracle Span 10-11:  看 => 看-02
Oracle Span 4-5:  贴 => 贴-01
Oracle Span 3-4:  鼻子 => 鼻子

Incorrect span: 看 => 看-10
Extra span: 在 => 在-01
Extra span: 只有 => 只有-01
Missing span: 看 => 看-02
Dependencies:
1	只有	_	AD	AD	_	2	advmod	_	_
2	孩子们	_	NN	NN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	鼻子	_	NN	NN	_	5	nsubj	_	_
5	贴	_	VV	VV	_	0	root	_	_
6	在	_	P	P	_	5	prep	_	_
7	玻璃窗	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	6	plmod	_	_
9	往	_	P	P	_	11	prep	_	_
10	外	_	NN	NN	_	9	pobj	_	_
11	看	_	VV	VV	_	5	dep	_	_
12	。	_	PU	PU	_	5	punct	_	_
13	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x42 / 看-02, arg0, x43 / 孩子们)
(x42 / 看-02, direction, x44 / 外)
(x42 / 看-02, manner, x45 / 贴-01)
(x45 / 贴-01, arg1, x47 / 鼻子)
(x45 / 贴-01, arg2, x48 / 玻璃窗)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),看,看-10,false), Span(9,10,List(1),外,外,false), Span(6,7,List(2),玻璃窗,玻璃窗,false), Span(5,6,List(3),在,在-01,false), Span(4,5,List(4),贴,贴-01,false), Span(3,4,List(5),鼻子,鼻子,false), Span(1,2,List(6),孩子们,孩子们,false), Span(0,1,List(7),只有,只有-01,false)),Map(2 -> 玻璃窗, 5 -> 鼻子, 7 -> 只有-01, 1 -> 外, 4 -> 贴-01, 6 -> 孩子们, 0 -> 看-10, 3 -> 在-01),Map(孩 -> 孩子们, 在 -> 在-01, 玻 -> 玻璃窗, 鼻 -> 鼻子, 只 -> 只有-01, 看 -> 看-10, 贴 -> 贴-01, 外 -> 外))),[Ljava.lang.String;@5af64ce0,Annotation([Ljava.lang.String;@7e7e962d,[Ljava.lang.String;@17229821,[Ljava.lang.String;@e829999),Annotation([Ljava.lang.String;@66fb45e5,[Ljava.lang.String;@6cbe68e9,[Ledu.cmu.lti.nlp.amr.Dependency;@6f5e16cf),Annotation([Ljava.lang.String;@750a04ec,[Ljava.lang.String;@49e2b3c5,[Ljava.lang.String;@56846330),Annotation([Ljava.lang.String;@49f3ff41,[Ljava.lang.String;@6cfbbff7,[Ledu.cmu.lti.nlp.amr.Entity;@30db5536))
AMR:
(只 / 只有-01, ARG5, 孩 / 孩子们)
(只 / 只有-01, op, 鼻 / 鼻子)
(在 / 在-01, manner, 玻 / 玻璃窗)
(在 / 在-01, manner, 贴 / 贴-01)
(看 / 看-10, manner, 外 / 外)
(看 / 看-10, manner, 玻 / 玻璃窗)
(贴 / 贴-01, degree, 鼻 / 鼻子)

Decoded in 19,193 microseconds
Sentence: “ 只有 孩子 知道 他们 自己 在 寻找 什么 。 ” 小 王子 说 ，

Spans:
Span 8-9:  什么 => 什么
Span 4-5:  他们 => 他们
Span 1-2:  只有 => 只有-01
Span 6-7:  在 => 在-01
Span 2-3:  孩子 => 孩子
Span 7-8:  寻找 => 寻找-01
Span 11-12:  小 => 小
Span 12-13:  王子 => 王子
Span 3-4:  知道 => 知道-01
Span 5-6:  自己 => 自己
Span 13-14:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  什么 => 什么
Oracle Span 1-2:  只有 => 只有
Oracle Span 2-3:  孩子 => 孩子
Oracle Span 7-8:  寻找 => 寻找-01
Oracle Span 11-12:  小 => 小-01
Oracle Span 12-13:  王子 => 王子
Oracle Span 3-4:  知道 => 知道-01
Oracle Span 13-14:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 自己 => 自己
Extra span: 他们 => 他们
Incorrect span: 只有 => 只有-01
Missing span: 说 => 说-01
Missing span: 只有 => 只有
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	只有	_	AD	AD	_	3	advmod	_	_
3	孩子	_	NN	NN	_	4	nsubj	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	他们	_	PN	PN	_	6	dep	_	_
6	自己	_	PN	PN	_	8	nsubj	_	_
7	在	_	AD	AD	_	8	advmod	_	_
8	寻找	_	VV	VV	_	4	ccomp	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	。	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	4	punct	_	_
12	小	_	JJ	JJ	_	13	amod	_	_
13	王子	_	NN	NN	_	14	dep	_	_
14	说	_	VV	VV	_	4	conj	_	_
15	,	_	PU	PU	_	14	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 知道-01)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 知道-01, arg0, x5 / 孩子)
(x4 / 知道-01, arg1, x7 / 寻找-01)
(x5 / 孩子, mod, x6 / 只有)
(x7 / 寻找-01, arg1, x9 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),说,说-02,false), Span(12,13,List(1),王子,王子,false), Span(11,12,List(2),小,小,false), Span(8,9,List(3),什么,什么,false), Span(7,8,List(4),寻找,寻找-01,false), Span(6,7,List(5),在,在-01,false), Span(5,6,List(6),自己,自己,false), Span(4,5,List(7),他们,他们,false), Span(3,4,List(8),知道,知道-01,false), Span(2,3,List(9),孩子,孩子,false), Span(1,2,List(10),只有,只有-01,false)),Map(2 -> 小, 5 -> 在-01, 8 -> 知道-01, 7 -> 他们, 1 -> 王子, 4 -> 寻找-01, 6 -> 自己, 9 -> 孩子, 0 -> 说-02, 10 -> 只有-01, 3 -> 什么),Map(孩 -> 孩子, 自 -> 自己, 在 -> 在-01, 寻 -> 寻找-01, 王 -> 王子, 他 -> 他们, 小 -> 小, 只 -> 只有-01, 说 -> 说-02, 知 -> 知道-01, 什 -> 什么))),[Ljava.lang.String;@45b32dfe,Annotation([Ljava.lang.String;@136ccbfe,[Ljava.lang.String;@22d9ca63,[Ljava.lang.String;@484149eb),Annotation([Ljava.lang.String;@14c141c0,[Ljava.lang.String;@61874b9d,[Ledu.cmu.lti.nlp.amr.Dependency;@d611f1c),Annotation([Ljava.lang.String;@4f2d014a,[Ljava.lang.String;@51fc862e,[Ljava.lang.String;@a7cf42f),Annotation([Ljava.lang.String;@fe09383,[Ljava.lang.String;@28e0e464,[Ledu.cmu.lti.nlp.amr.Entity;@1d98daa0))
AMR:
(只 / 只有-01, location, 孩 / 孩子)
(在 / 在-01, degree, 自 / 自己)
(在 / 在-01, location, 他 / 他们)
(寻 / 寻找-01, direction, 在 / 在-01)
(寻 / 寻找-01, subset, 什 / 什么)
(知 / 知道-01, direction, 孩 / 孩子)
(知 / 知道-01, prep-with, 他 / 他们)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 在 / 在-01)
(说 / 说-02, degree, 小 / 小)

Decoded in 39,001 microseconds
Sentence: “ 他们 为 一 个 布娃娃 花费 不少 时间 ， 这 个 布娃娃 就 成 了 很 重要 的 东西 ， 如果 有 人 夺走 的 他们 的 布娃娃 ， 他们 就 哭泣 … ”

Spans:
Span 19-20:  东西 => 东西
Span 23-24:  人 => 人
Span 30-31:  他们 => 他们
Span 26-27:  他们 => 他们
Span 1-2:  他们 => 他们
Span 32-33:  哭泣 => 哭泣-01
Span 24-25:  夺走 => 夺走-01
Span 31-32:  就 => 就-01
Span 13-14:  就 => 就-01
Span 28-29:  布娃娃 => 布娃娃
Span 12-13:  布娃娃 => 布娃娃
Span 5-6:  布娃娃 => 布娃娃
Span 16-17:  很 => 很
Span 14-15:  成 => 成-01
Span 8-9:  时间 => 时间
Span 22-23:  有 => 有-06
Span 6-7:  花费 => 花费-01
Span 10-11:  这 => 这
Span 17-18:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 19-20:  东西 => 东西
Oracle Span 23-24:  人 => 人
Oracle Span 1-2:  他们 => 他们
Oracle Span 32-33:  哭泣 => 哭泣-01
Oracle Span 24-25:  夺走 => 夺走-01
Oracle Span 13-14:  就 => 就
Oracle Span 31-32:  就 => 就
Oracle Span 5-6:  布娃娃 => 布娃娃
Oracle Span 12-13:  布娃娃 => 布娃娃
Oracle Span 16-17:  很 => 很
Oracle Span 14-15:  成 => 成-01
Oracle Span 8-9:  时间 => 时间
Oracle Span 22-23:  有 => 有-03
Oracle Span 6-7:  花费 => 花费-01
Oracle Span 17-18:  重要 => 重要-01

Incorrect span: 就 => 就-01
Extra span: 他们 => 他们
Extra span: 布娃娃 => 布娃娃
Extra span: 他们 => 他们
Incorrect span: 有 => 有-06
Incorrect span: 就 => 就-01
Extra span: 这 => 这
Missing span: 就 => 就
Missing span: 有 => 有-03
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	他们	_	PN	PN	_	7	nsubj	_	_
3	为	_	P	P	_	7	prep	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	布娃娃	_	NN	NN	_	3	pobj	_	_
7	花费	_	VV	VV	_	0	root	_	_
8	不少	_	CD	CD	_	9	nummod	_	_
9	时间	_	NN	NN	_	7	dobj	_	_
10	,	_	PU	PU	_	7	punct	_	_
11	这	_	DT	DT	_	13	det	_	_
12	个	_	M	M	_	11	clf	_	_
13	布娃娃	_	NN	NN	_	15	nsubj	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	成	_	VV	VV	_	7	conj	_	_
16	了	_	AS	AS	_	15	asp	_	_
17	很	_	AD	AD	_	18	advmod	_	_
18	重要	_	VA	VA	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	东西	_	NN	NN	_	15	dobj	_	_
21	,	_	PU	PU	_	7	punct	_	_
22	如果	_	CS	CS	_	23	advmod	_	_
23	有	_	VE	VE	_	7	conj	_	_
24	人	_	NN	NN	_	25	nn	_	_
25	夺走	_	NN	NN	_	29	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	他们	_	PN	PN	_	29	assmod	_	_
28	的	_	DEG	DEG	_	27	assm	_	_
29	布娃娃	_	NN	NN	_	23	dobj	_	_
30	,	_	PU	PU	_	7	punct	_	_
31	他们	_	PN	PN	_	33	dep	_	_
32	就	_	AD	AD	_	33	advmod	_	_
33	哭泣	_	VV	VV	_	7	conj	_	_
34	…	_	NN	NN	_	33	dobj	_	_
35	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x30 / 花费-01, arg0, x31 / 他们)
(x30 / 花费-01, arg1, x33 / 时间)
(x30 / 花费-01, arg2, x37 / 布娃娃)
(x39 / 成-01, arg1, x42 / 东西)
(x39 / 成-01, manner, x41 / 就)
(x42 / 东西, mod, x43 / 重要-01)
(x43 / 重要-01, degree, x44 / 很)
(x47 / 有-03, arg1, x48 / 人)
(x49 / 夺走-01, arg0, x48 / 人)
(x49 / 夺走-01, arg1, x50 / 布娃娃)
(x52 / 哭泣-01, manner, x53 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(32,33,List(0),哭泣,哭泣-01,false), Span(31,32,List(1),就,就-01,false), Span(30,31,List(2),他们,他们,false), Span(28,29,List(3),布娃娃,布娃娃,false), Span(26,27,List(4),他们,他们,false), Span(24,25,List(5),夺走,夺走-01,false), Span(23,24,List(6),人,人,false), Span(22,23,List(7),有,有-06,false), Span(19,20,List(8),东西,东西,false), Span(17,18,List(9),重要,重要-01,false), Span(16,17,List(10),很,很,false), Span(14,15,List(11),成,成-01,false), Span(13,14,List(12),就,就-01,false), Span(12,13,List(13),布娃娃,布娃娃,false), Span(10,11,List(14),这,这,false), Span(8,9,List(15),时间,时间,false), Span(6,7,List(16),花费,花费-01,false), Span(5,6,List(17),布娃娃,布娃娃,false), Span(1,2,List(18),他们,他们,false)),Map(2 -> 他们, 5 -> 夺走-01, 12 -> 就-01, 15 -> 时间, 8 -> 东西, 18 -> 他们, 7 -> 有-06, 17 -> 布娃娃, 1 -> 就-01, 4 -> 他们, 11 -> 成-01, 14 -> 这, 6 -> 人, 0 -> 哭泣-01, 9 -> 重要-01, 16 -> 花费-01, 3 -> 布娃娃, 10 -> 很, 13 -> 布娃娃),Map(哭 -> 哭泣-01, 布2 -> 布娃娃, 就 -> 就-01, 他2 -> 他们, 重 -> 重要-01, 这 -> 这, 布 -> 布娃娃, 很 -> 很, 他 -> 他们, 东 -> 东西, 花 -> 花费-01, 成 -> 成-01, 就2 -> 就-01, 他3 -> 他们, 布3 -> 布娃娃, 时 -> 时间, 人 -> 人, 夺 -> 夺走-01, 有 -> 有-06))),[Ljava.lang.String;@70a898b0,Annotation([Ljava.lang.String;@7bdf61ad,[Ljava.lang.String;@54336976,[Ljava.lang.String;@f25f48a),Annotation([Ljava.lang.String;@3b7c80c6,[Ljava.lang.String;@3b2e5c0d,[Ledu.cmu.lti.nlp.amr.Dependency;@7499eac7),Annotation([Ljava.lang.String;@5438c17a,[Ljava.lang.String;@b9d018b,[Ljava.lang.String;@429aeac1),Annotation([Ljava.lang.String;@79eeff87,[Ljava.lang.String;@6b4fc2d1,[Ledu.cmu.lti.nlp.amr.Entity;@8bd076a))
AMR:
(东 / 东西, location, 有 / 有-06)
(东 / 东西, mod, 重 / 重要-01)
(人 / 人, mod, 有 / 有-06)
(哭 / 哭泣-01, location, 他 / 他们)
(哭 / 哭泣-01, manner, 就 / 就-01)
(哭 / 哭泣-01, time, 布 / 布娃娃)
(夺 / 夺走-01, prep-as, 他2 / 他们)
(夺 / 夺走-01, prep-through, 布 / 布娃娃)
(夺 / 夺走-01, time, 有 / 有-06)
(就2 / 就-01, time, 布2 / 布娃娃)
(布2 / 布娃娃, mod, 这 / 这)
(成 / 成-01, manner, 就2 / 就-01)
(成 / 成-01, purpose, 重 / 重要-01)
(时 / 时间, mod, 这 / 这)
(花 / 花费-01, domain, 他3 / 他们)
(花 / 花费-01, prep-through, 时 / 时间)
(花 / 花费-01, topic, 布3 / 布娃娃)
(重 / 重要-01, degree, 很 / 很)

Decoded in 170,099 microseconds
Sentence: “ 他们 真 幸运 。 ” 扳道工 说 。

Spans:
Span 1-2:  他们 => 他们
Span 3-4:  幸运 => 幸运-01
Span 6-7:  扳道工 => 扳道工
Span 2-3:  真 => 真
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他们 => 他们
Oracle Span 3-4:  幸运 => 幸运-01
Oracle Span 6-7:  扳道工 => 扳道工
Oracle Span 2-3:  真 => 真
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他们	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	幸运	_	VA	VA	_	8	dep	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	”	_	PU	PU	_	4	punct	_	_
7	扳道工	_	NR	NR	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 扳道工)
(x0 / 说-01, arg1, x3 / 幸运-01)
(x3 / 幸运-01, arg0, x5 / 他们)
(x3 / 幸运-01, degree, x4 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),扳道工,扳道工,false), Span(3,4,List(2),幸运,幸运-01,false), Span(2,3,List(3),真,真,false), Span(1,2,List(4),他们,他们,false)),Map(2 -> 幸运-01, 1 -> 扳道工, 4 -> 他们, 0 -> 说-02, 3 -> 真),Map(幸 -> 幸运-01, 他 -> 他们, 扳 -> 扳道工, 说 -> 说-02, 真 -> 真))),[Ljava.lang.String;@1de4285e,Annotation([Ljava.lang.String;@1378eea2,[Ljava.lang.String;@634ff56,[Ljava.lang.String;@66522ead),Annotation([Ljava.lang.String;@5a484ce1,[Ljava.lang.String;@e91b4f4,[Ledu.cmu.lti.nlp.amr.Dependency;@2ffe243f),Annotation([Ljava.lang.String;@58ae402b,[Ljava.lang.String;@4099209b,[Ljava.lang.String;@43ac0a68),Annotation([Ljava.lang.String;@1dad01fe,[Ljava.lang.String;@3728a578,[Ledu.cmu.lti.nlp.amr.Entity;@3e3cd6fe))
AMR:
(幸 / 幸运-01, degree, 真 / 真)
(幸 / 幸运-01, location, 他 / 他们)
(说 / 说-02, degree, 扳 / 扳道工)
(说 / 说-02, purpose, 幸 / 幸运-01)

Decoded in 15,536 microseconds
Sentence: XXIII 。

Spans:
Span 0-1:  XXIII => XXIII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXIII => XXIII

Dependencies:
1	XXIII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXIII,XXIII,false)),Map(0 -> XXIII),Map(x -> XXIII))),[Ljava.lang.String;@1de0641b,Annotation([Ljava.lang.String;@68b734a8,[Ljava.lang.String;@1a464fa3,[Ljava.lang.String;@4215e133),Annotation([Ljava.lang.String;@5ccb85d6,[Ljava.lang.String;@d88f893,[Ledu.cmu.lti.nlp.amr.Dependency;@259b85d6),Annotation([Ljava.lang.String;@48eaf42f,[Ljava.lang.String;@488f3dd1,[Ljava.lang.String;@2091833),Annotation([Ljava.lang.String;@7bc58891,[Ljava.lang.String;@6411504a,[Ledu.cmu.lti.nlp.amr.Entity;@554188ac))
AMR:


Decoded in 1,971 microseconds
Sentence: “ 你 好 。 ” 小 王子 说 。

Spans:
Span 1-2:  你 => 你
Span 2-3:  好 => 好-04
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  小 => 小-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 好 => 好-04
Extra span: 你 => 你
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	4	rcmod	_	_
4	。	_	NN	NN	_	7	nn	_	_
5	”	_	PU	PU	_	4	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),好,好-04,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 说-02, 3 -> 好-04),Map(你 -> 你, 王 -> 王子, 小 -> 小, 好 -> 好-04, 说 -> 说-02))),[Ljava.lang.String;@1f43cab7,Annotation([Ljava.lang.String;@481558ce,[Ljava.lang.String;@2668c286,[Ljava.lang.String;@7f353a0f),Annotation([Ljava.lang.String;@7ea2412c,[Ljava.lang.String;@1c93b51e,[Ledu.cmu.lti.nlp.amr.Dependency;@7c0f28f8),Annotation([Ljava.lang.String;@2abc8034,[Ljava.lang.String;@467b0f6e,[Ljava.lang.String;@474179fa),Annotation([Ljava.lang.String;@420cd102,[Ljava.lang.String;@c7f4457,[Ledu.cmu.lti.nlp.amr.Entity;@12e12ac9))
AMR:
(好 / 好-04, location, 你 / 你)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 好 / 好-04)
(说 / 说-02, degree, 小 / 小)

Decoded in 9,756 microseconds
Sentence: “ 你 好 。 ” 商人 说道 。

Spans:
Span 1-2:  你 => 你
Span 5-6:  商人 => 商人
Span 2-3:  好 => 好-04
Span 6-7:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  商人 => 商人
Oracle Span 2-3:  好 => 好-01
Oracle Span 6-7:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 好 => 好-04
Missing span: 说道 => 说道-01
Missing span: 好 => 好-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	好	_	VA	VA	_	6	vmod	_	_
4	。	_	VA	VA	_	3	comod	_	_
5	”	_	PU	PU	_	3	punct	_	_
6	商人	_	NN	NN	_	7	nsubj	_	_
7	说道	_	VA	VA	_	0	root	_	_
8	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 说道-01, arg0, x6 / 商人)
(x4 / 说道-01, arg1, x7 / 好-01)
(x7 / 好-01, arg0, x8 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说道,说道,false), Span(5,6,List(1),商人,商人,false), Span(2,3,List(2),好,好-04,false), Span(1,2,List(3),你,你,false)),Map(2 -> 好-04, 1 -> 商人, 0 -> 说道, 3 -> 你),Map(你 -> 你, 商 -> 商人, 好 -> 好-04, 说 -> 说道))),[Ljava.lang.String;@5e230fc6,Annotation([Ljava.lang.String;@7a8341c1,[Ljava.lang.String;@ca8ef3a,[Ljava.lang.String;@17043b04),Annotation([Ljava.lang.String;@511f5b1d,[Ljava.lang.String;@31f295b6,[Ledu.cmu.lti.nlp.amr.Dependency;@7a687d8d),Annotation([Ljava.lang.String;@4c82b5df,[Ljava.lang.String;@67eec8e1,[Ljava.lang.String;@4214ae8f),Annotation([Ljava.lang.String;@7ba93755,[Ljava.lang.String;@22dc59b2,[Ledu.cmu.lti.nlp.amr.Entity;@33e434c8))
AMR:
(商 / 商人, degree, 好 / 好-04)
(好 / 好-04, location, 你 / 你)
(说 / 说道, mod, 商 / 商人)

Decoded in 6,125 microseconds
Sentence: 这 是 一 位 贩卖 能够 止渴 的 精制 药丸 的 商人 。

Spans:
Span 11-12:  商人 => 商人
Span 1-2:  是 => 是-04
Span 6-7:  止渴 => 止渴-01
Span 8-9:  精制 => 精制-01
Span 5-6:  能够 => 能够-01
Span 9-10:  药丸 => 药丸
Span 4-5:  贩卖 => 贩卖-01
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  商人 => 商人
Oracle Span 6-7:  止渴 => 止渴-01
Oracle Span 8-9:  精制 => 精制-01
Oracle Span 5-6:  能够 => 能够-01
Oracle Span 9-10:  药丸 => 药丸
Oracle Span 4-5:  贩卖 => 贩卖-01
Oracle Span 0-1:  这 => 这

Extra span: 是 => 是-04
Dependencies:
1	这	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	位	_	M	M	_	12	clf	_	_
5	贩卖	_	VV	VV	_	12	rcmod	_	_
6	能够	_	VV	VV	_	10	rcmod	_	_
7	止渴	_	NN	NN	_	6	dobj	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	精制	_	JJ	JJ	_	10	amod	_	_
10	药丸	_	NN	NN	_	5	dobj	_	_
11	的	_	DEC	DEC	_	5	cpm	_	_
12	商人	_	NN	NN	_	2	attr	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 商人, domain, x3 / 这)
(x10 / 精制-01, arg1, x5 / 药丸)
(x11 / 止渴-01, arg0, x5 / 药丸)
(x12 / 能够-01, arg0, x11 / 止渴-01)
(x4 / 贩卖-01, arg0, x0 / 商人)
(x4 / 贩卖-01, arg1, x5 / 药丸)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),商人,商人,false), Span(9,10,List(1),药丸,药丸,false), Span(8,9,List(2),精制,精制-01,false), Span(6,7,List(3),止渴,止渴-01,false), Span(5,6,List(4),能够,能够-01,false), Span(4,5,List(5),贩卖,贩卖-01,false), Span(1,2,List(6),是,是-04,false), Span(0,1,List(7),这,这,false)),Map(2 -> 精制-01, 5 -> 贩卖-01, 7 -> 这, 1 -> 药丸, 4 -> 能够-01, 6 -> 是-04, 0 -> 商人, 3 -> 止渴-01),Map(药 -> 药丸, 这 -> 这, 能 -> 能够-01, 贩 -> 贩卖-01, 商 -> 商人, 止 -> 止渴-01, 精 -> 精制-01, 是 -> 是-04))),[Ljava.lang.String;@546394ed,Annotation([Ljava.lang.String;@664212ab,[Ljava.lang.String;@2693c618,[Ljava.lang.String;@3443e476),Annotation([Ljava.lang.String;@7ccfdaef,[Ljava.lang.String;@a6e4897,[Ledu.cmu.lti.nlp.amr.Dependency;@32f5ecc4),Annotation([Ljava.lang.String;@19bedeb8,[Ljava.lang.String;@1ba467c2,[Ljava.lang.String;@63f6bed1),Annotation([Ljava.lang.String;@7ef8eda7,[Ljava.lang.String;@115ca7de,[Ledu.cmu.lti.nlp.amr.Entity;@29fe4840))
AMR:
(商 / 商人, domain, 这 / 这)
(是 / 是-04, ARG1, 这 / 这)
(止 / 止渴-01, ARG3, 药 / 药丸)
(精 / 精制-01, ARG3, 药 / 药丸)
(能 / 能够-01, prep-within, 止 / 止渴-01)
(贩 / 贩卖-01, subset, 药 / 药丸)
(贩 / 贩卖-01, value, 商 / 商人)

Decoded in 25,637 microseconds
Sentence: 每 周 吞服 一 丸 就 不 会 感觉 口渴 。

Spans:
Span 6-7:  不 => 不
Span 4-5:  丸 => 丸
Span 7-8:  会 => 会-03
Span 9-10:  口渴 => 口渴-01
Span 2-3:  吞服 => 吞服-01
Span 1-2:  周 => 周
Span 5-6:  就 => 就-01
Span 8-9:  感觉 => 感觉-01
Span 0-1:  每 => 每

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  丸 => 丸
Oracle Span 7-8:  会 => 会-02
Oracle Span 9-10:  口渴 => 口渴-01
Oracle Span 2-3:  吞服 => 吞服-01
Oracle Span 1-2:  周 => 周
Oracle Span 5-6:  就 => 就
Oracle Span 0-1:  每 => 每

Extra span: 感觉 => 感觉-01
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 就 => 就-01
Missing span: 会 => 会-02
Missing span: 就 => 就
Dependencies:
1	每	_	DT	DT	_	3	det	_	_
2	周	_	M	M	_	1	clf	_	_
3	吞服	_	NN	NN	_	5	nn	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	丸	_	NN	NN	_	9	nsubj	_	_
6	就	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	mmod	_	_
9	感觉	_	VV	VV	_	0	root	_	_
10	口渴	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 会-02, manner, x14 / 就)
(x6 / 吞服-01, arg1, x7 / 丸)
(x6 / 吞服-01, frequency, x9 / 周)
(x9 / 周, mod, x10 / 每)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),口渴,口渴-01,false), Span(8,9,List(1),感觉,感觉-01,false), Span(7,8,List(2),会,会-03,false), Span(6,7,List(3),不,不,false), Span(5,6,List(4),就,就-01,false), Span(4,5,List(5),丸,丸,false), Span(2,3,List(6),吞服,吞服-01,false), Span(1,2,List(7),周,周,false), Span(0,1,List(8),每,每,false)),Map(2 -> 会-03, 5 -> 丸, 8 -> 每, 7 -> 周, 1 -> 感觉-01, 4 -> 就-01, 6 -> 吞服-01, 0 -> 口渴-01, 3 -> 不),Map(就 -> 就-01, 口 -> 口渴-01, 感 -> 感觉-01, 丸 -> 丸, 每 -> 每, 吞 -> 吞服-01, 不 -> 不, 会 -> 会-03, 周 -> 周))),[Ljava.lang.String;@7f287b98,Annotation([Ljava.lang.String;@4684240f,[Ljava.lang.String;@32120956,[Ljava.lang.String;@6975fb1c),Annotation([Ljava.lang.String;@553da911,[Ljava.lang.String;@327e5be5,[Ledu.cmu.lti.nlp.amr.Dependency;@1084ac45),Annotation([Ljava.lang.String;@566f1852,[Ljava.lang.String;@6ea246af,[Ljava.lang.String;@2e4389ed),Annotation([Ljava.lang.String;@1b90fee4,[Ljava.lang.String;@3513c84c,[Ledu.cmu.lti.nlp.amr.Entity;@4978777f))
AMR:
(丸 / 丸, ARG2, 不 / 不)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 就 / 就-01)
(会 / 会-03, op, 感 / 感觉-01)
(吞 / 吞服-01, ARG3, 丸 / 丸)
(吞 / 吞服-01, frequency, 周 / 周)
(周 / 周, mod, 每 / 每)
(感 / 感觉-01, prep-within, 口 / 口渴-01)

Decoded in 25,036 microseconds
Sentence: “ 你 为什么 卖 这 玩艺儿 ？ ” 小 王子 说 。

Spans:
Span 1-2:  你 => 你
Span 3-4:  卖 => 卖-03
Span 8-9:  小 => 小
Span 9-10:  王子 => 王子
Span 5-6:  玩艺儿 => 玩艺儿
Span 10-11:  说 => 说-02
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  卖 => 卖-03
Oracle Span 8-9:  小 => 小
Oracle Span 9-10:  王子 => 王子
Oracle Span 5-6:  玩艺儿 => 玩艺儿
Oracle Span 10-11:  说 => 说-01
Oracle Span 4-5:  这 => 这

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	为什么	_	AD	AD	_	4	advmod	_	_
4	卖	_	VV	VV	_	10	vmod	_	_
5	这	_	DT	DT	_	6	det	_	_
6	玩艺儿	_	NN	NN	_	4	dobj	_	_
7	？	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_
9	小	_	JJ	JJ	_	10	amod	_	_
10	王子	_	NN	NN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 卖-03)
(x2 / 王子, mod, x3 / 小)
(x4 / 卖-03, arg0, x5 / 你)
(x4 / 卖-03, arg1, x7 / 玩艺儿)
(x7 / 玩艺儿, mod, x8 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),王子,王子,false), Span(8,9,List(2),小,小,false), Span(5,6,List(3),玩艺儿,玩艺儿,false), Span(4,5,List(4),这,这,false), Span(3,4,List(5),卖,卖-03,false), Span(1,2,List(6),你,你,false)),Map(2 -> 小, 5 -> 卖-03, 1 -> 王子, 4 -> 这, 6 -> 你, 0 -> 说-02, 3 -> 玩艺儿),Map(卖 -> 卖-03, 玩 -> 玩艺儿, 这 -> 这, 你 -> 你, 王 -> 王子, 小 -> 小, 说 -> 说-02))),[Ljava.lang.String;@7bc6935c,Annotation([Ljava.lang.String;@67bd351e,[Ljava.lang.String;@4cc7d00d,[Ljava.lang.String;@468e8565),Annotation([Ljava.lang.String;@91da29b,[Ljava.lang.String;@7066363,[Ledu.cmu.lti.nlp.amr.Dependency;@75b38c36),Annotation([Ljava.lang.String;@47248a48,[Ljava.lang.String;@2349f14d,[Ljava.lang.String;@17e0933c),Annotation([Ljava.lang.String;@7edb6fca,[Ljava.lang.String;@1dcedc93,[Ledu.cmu.lti.nlp.amr.Entity;@716185fe))
AMR:
(卖 / 卖-03, degree, 你 / 你)
(卖 / 卖-03, location, 玩 / 玩艺儿)
(玩 / 玩艺儿, mod, 这 / 这)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 卖 / 卖-03)
(说 / 说-02, degree, 小 / 小)

Decoded in 16,477 microseconds
Sentence: “ 这 就 大大 地 节约 了 时间 。 ” 商人 说 ，

Spans:
Span 10-11:  商人 => 商人
Span 4-5:  地 => 地
Span 3-4:  大大 => 大大-01
Span 2-3:  就 => 就-01
Span 7-8:  时间 => 时间
Span 5-6:  节约 => 节约-01
Span 11-12:  说 => 说-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  商人 => 商人
Oracle Span 3-4:  大大 => 大大-01
Oracle Span 2-3:  就 => 就
Oracle Span 7-8:  时间 => 时间
Oracle Span 5-6:  节约 => 节约-01
Oracle Span 11-12:  说 => 说-01
Oracle Span 1-2:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 就 => 就-01
Missing span: 说 => 说-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	dep	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	大大	_	AD	AD	_	6	advmod	_	_
5	地	_	NN	NN	_	6	prep	_	_
6	节约	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	时间	_	NN	NN	_	6	dobj	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_
11	商人	_	NN	NN	_	12	dep	_	_
12	说	_	VV	VV	_	6	dep	_	_
13	,	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 商人)
(x0 / 说-01, arg1, x3 / 节约-01)
(x3 / 节约-01, arg0, x4 / 这)
(x3 / 节约-01, arg1, x8 / 时间)
(x3 / 节约-01, degree, x6 / 大大-01)
(x3 / 节约-01, manner, x5 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),说,说-02,false), Span(10,11,List(1),商人,商人,false), Span(7,8,List(2),时间,时间,false), Span(5,6,List(3),节约,节约-01,false), Span(4,5,List(4),地,地,false), Span(3,4,List(5),大大,大大-01,false), Span(2,3,List(6),就,就-01,false), Span(1,2,List(7),这,这,false)),Map(2 -> 时间, 5 -> 大大-01, 7 -> 这, 1 -> 商人, 4 -> 地, 6 -> 就-01, 0 -> 说-02, 3 -> 节约-01),Map(就 -> 就-01, 节 -> 节约-01, 这 -> 这, 大 -> 大大-01, 商 -> 商人, 地 -> 地, 说 -> 说-02, 时 -> 时间))),[Ljava.lang.String;@628b819d,Annotation([Ljava.lang.String;@478b0739,[Ljava.lang.String;@2cca611f,[Ljava.lang.String;@51f95f0d),Annotation([Ljava.lang.String;@6fc0bbc6,[Ljava.lang.String;@706ddbc8,[Ledu.cmu.lti.nlp.amr.Dependency;@fd09e43),Annotation([Ljava.lang.String;@144ab983,[Ljava.lang.String;@7ebe2e47,[Ljava.lang.String;@609319c3),Annotation([Ljava.lang.String;@6bbab114,[Ljava.lang.String;@2a7d9b41,[Ledu.cmu.lti.nlp.amr.Entity;@25be445f))
AMR:
(地 / 地, degree, 大 / 大大-01)
(就 / 就-01, degree, 大 / 大大-01)
(就 / 就-01, mod, 这 / 这)
(节 / 节约-01, degree, 大 / 大大-01)
(节 / 节约-01, prep-through, 时 / 时间)
(说 / 说-02, degree, 商 / 商人)
(说 / 说-02, duration, 时 / 时间)

Decoded in 18,156 microseconds
Sentence: “ 专家们 计算 过 ，

Spans:
Span 1-2:  专家们 => 专家们
Span 2-3:  计算 => 计算-01
Span 3-4:  过 => 过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  专家们 => 专家们
Oracle Span 2-3:  计算 => 计算-01

Extra span: 过 => 过-01
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	专家们	_	NN	NN	_	3	nsubj	_	_
3	计算	_	VV	VV	_	0	root	_	_
4	过	_	VV	VV	_	3	dep	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 计算-01, arg0, x7 / 专家们)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),过,过-01,false), Span(2,3,List(1),计算,计算-01,false), Span(1,2,List(2),专家们,专家们,false)),Map(2 -> 专家们, 1 -> 计算-01, 0 -> 过-01),Map(过 -> 过-01, 计 -> 计算-01, 专 -> 专家们))),[Ljava.lang.String;@5d1b1c2a,Annotation([Ljava.lang.String;@6397248c,[Ljava.lang.String;@25f61c2c,[Ljava.lang.String;@72bd2871),Annotation([Ljava.lang.String;@77429040,[Ljava.lang.String;@2d2b6960,[Ledu.cmu.lti.nlp.amr.Dependency;@38291795),Annotation([Ljava.lang.String;@234c5e41,[Ljava.lang.String;@40ef0af8,[Ljava.lang.String;@36790bec),Annotation([Ljava.lang.String;@461c3709,[Ljava.lang.String;@7e3d7dd,[Ledu.cmu.lti.nlp.amr.Entity;@3f63a513))
AMR:
(计 / 计算-01, location, 专 / 专家们)
(过 / 过-01, degree, 计 / 计算-01)

Decoded in 5,896 microseconds
Sentence: 这样 ， 每 周 可以 节约 五十三 分钟 。 ”

Spans:
Span 7-8:  分钟 => 分钟
Span 4-5:  可以 => 可以-02
Span 3-4:  周 => 周
Span 2-3:  每 => 每
Span 5-6:  节约 => 节约-01
Span 0-1:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 4-5:  可以 => 可以-01
Oracle Span 3-4:  周 => (temporal-quantity :unit 周)
Oracle Span 5-6:  节约 => 节约-01
Oracle Span 0-1:  这样 => 这样

Incorrect span: 分钟 => 分钟
Incorrect span: 可以 => 可以-02
Incorrect span: 周 => 周
Extra span: 每 => 每
Incorrect span: 这样 => 这样-01
Missing span: 可以 => 可以-01
Missing span: 这样 => 这样
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Missing span: 周 => (temporal-quantity :unit 周)
Dependencies:
1	这样	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	每	_	DT	DT	_	6	dep	_	_
4	周	_	M	M	_	3	clf	_	_
5	可以	_	VV	VV	_	6	mmod	_	_
6	节约	_	VV	VV	_	0	root	_	_
7	五十三	_	CD	CD	_	8	nummod	_	_
8	分钟	_	M	M	_	6	range	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x17 / 可以-01, arg0, x18 / 节约-01)
(x18 / 节约-01, arg0, x27 / 这样)
(x21 / temporal-quantity, unit, x28 / 分钟)
(x24 / temporal-quantity, unit, x29 / 周)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),分钟,分钟,false), Span(5,6,List(1),节约,节约-01,false), Span(4,5,List(2),可以,可以-02,false), Span(3,4,List(3),周,周,false), Span(2,3,List(4),每,每,false), Span(0,1,List(5),这样,这样-01,false)),Map(2 -> 可以-02, 5 -> 这样-01, 1 -> 节约-01, 4 -> 每, 0 -> 分钟, 3 -> 周),Map(节 -> 节约-01, 这 -> 这样-01, 每 -> 每, 周 -> 周, 分 -> 分钟, 可 -> 可以-02))),[Ljava.lang.String;@413bef78,Annotation([Ljava.lang.String;@66383c29,[Ljava.lang.String;@7f7c420c,[Ljava.lang.String;@5d152bcd),Annotation([Ljava.lang.String;@43cb5f38,[Ljava.lang.String;@6435fa1c,[Ledu.cmu.lti.nlp.amr.Dependency;@7944b8b4),Annotation([Ljava.lang.String;@d7bbf12,[Ljava.lang.String;@1450131a,[Ljava.lang.String;@5f7eee96),Annotation([Ljava.lang.String;@3a36cd5,[Ljava.lang.String;@53f0d09c,[Ledu.cmu.lti.nlp.amr.Entity;@47acd13b))
AMR:
(可 / 可以-02, ARG5, 节 / 节约-01)
(可 / 可以-02, time, 周 / 周)
(周 / 周, mod, 每 / 每)
(每 / 每, mod, 这 / 这样-01)
(节 / 节约-01, op, 分 / 分钟)

Decoded in 11,996 microseconds
Sentence: “ 那么 ， 用 这 五十三 分钟 做 什么 用 ？ ”

Spans:
Span 8-9:  什么 => 什么
Span 7-8:  做 => 做-04
Span 6-7:  分钟 => 分钟
Span 9-10:  用 => 用
Span 3-4:  用 => 用
Span 4-5:  这 => 这
Span 1-2:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  做 => 做-01
Oracle Span 6-7:  分钟 => (temporal-quantity :unit 分钟)
Oracle Span 3-4:  用 => 用-01
Oracle Span 4-5:  这 => 这

Extra span: 用 => 用
Extra span: 什么 => 什么
Incorrect span: 做 => 做-04
Incorrect span: 分钟 => 分钟
Incorrect span: 用 => 用
Extra span: 那么 => 那么
Missing span: 用 => 用-01
Missing span: 做 => 做-01
Missing span: 分钟 => (temporal-quantity :unit 分钟)
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	那么	_	AD	AD	_	8	advmod	_	_
3	,	_	PU	PU	_	8	punct	_	_
4	用	_	VV	VV	_	8	conj	_	_
5	这	_	PN	PN	_	4	dobj	_	_
6	五十三	_	CD	CD	_	7	nummod	_	_
7	分钟	_	M	M	_	4	range	_	_
8	做	_	VV	VV	_	10	dep	_	_
9	什么	_	PN	PN	_	8	dobj	_	_
10	用	_	VV	VV	_	0	root	_	_
11	？	_	PU	PU	_	10	punct	_	_
12	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x11 / 用-01, arg1, x17 / temporal-quantity)
(x11 / 用-01, arg2, x21 / 做-01)
(x17 / temporal-quantity, unit, x24 / 分钟)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),用,用,false), Span(8,9,List(1),什么,什么,false), Span(7,8,List(2),做,做-04,false), Span(6,7,List(3),分钟,分钟,false), Span(4,5,List(4),这,这,false), Span(3,4,List(5),用,用,false), Span(1,2,List(6),那么,那么,false)),Map(2 -> 做-04, 5 -> 用, 1 -> 什么, 4 -> 这, 6 -> 那么, 0 -> 用, 3 -> 分钟),Map(用 -> 用, 这 -> 这, 分 -> 分钟, 做 -> 做-04, 那 -> 那么, 什 -> 什么, 用2 -> 用))),[Ljava.lang.String;@6f8e9d06,Annotation([Ljava.lang.String;@77d381e6,[Ljava.lang.String;@2272cbb0,[Ljava.lang.String;@3f6f3cc),Annotation([Ljava.lang.String;@180b3819,[Ljava.lang.String;@733c464f,[Ledu.cmu.lti.nlp.amr.Dependency;@47272cd3),Annotation([Ljava.lang.String;@73fbdf68,[Ljava.lang.String;@32f1fafe,[Ljava.lang.String;@236eccd1),Annotation([Ljava.lang.String;@5d512ddb,[Ljava.lang.String;@707ca986,[Ledu.cmu.lti.nlp.amr.Entity;@4de79b7d))
AMR:
(做 / 做-04, location, 分 / 分钟)
(做 / 做-04, location, 用 / 用)
(做 / 做-04, manner, 用2 / 用)
(做 / 做-04, subset, 什 / 什么)
(用2 / 用, degree, 那 / 那么)
(用2 / 用, mod, 这 / 这)

Decoded in 16,465 microseconds
Sentence: “ 随便 怎么 用 都 行 。

Spans:
Span 2-3:  怎么 => 怎么
Span 3-4:  用 => 用
Span 5-6:  行 => 行-04
Span 4-5:  都 => 都
Span 1-2:  随便 => 随便

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  怎么 => 怎么
Oracle Span 3-4:  用 => 用-01
Oracle Span 5-6:  行 => 行-04
Oracle Span 4-5:  都 => 都
Oracle Span 1-2:  随便 => 随便-01

Incorrect span: 用 => 用
Incorrect span: 随便 => 随便
Missing span: 用 => 用-01
Missing span: 随便 => 随便-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	随便	_	NN	NN	_	4	nsubj	_	_
3	怎么	_	AD	AD	_	4	advmod	_	_
4	用	_	VV	VV	_	0	root	_	_
5	都	_	AD	AD	_	4	dep	_	_
6	行	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x12 / 行-04, arg0, x14 / 用-01)
(x12 / 行-04, manner, x13 / 都)
(x14 / 用-01, manner, x15 / 怎么)
(x14 / 用-01, manner, x16 / 随便-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),行,行-04,false), Span(4,5,List(1),都,都,false), Span(3,4,List(2),用,用,false), Span(2,3,List(3),怎么,怎么,false), Span(1,2,List(4),随便,随便,false)),Map(2 -> 用, 1 -> 都, 4 -> 随便, 0 -> 行-04, 3 -> 怎么),Map(用 -> 用, 怎 -> 怎么, 都 -> 都, 行 -> 行-04, 随 -> 随便))),[Ljava.lang.String;@183ade54,Annotation([Ljava.lang.String;@4c51077d,[Ljava.lang.String;@5974b7e8,[Ljava.lang.String;@2839e3c8),Annotation([Ljava.lang.String;@66bf40e5,[Ljava.lang.String;@2291d9a0,[Ledu.cmu.lti.nlp.amr.Dependency;@5e26f1ed),Annotation([Ljava.lang.String;@39666e42,[Ljava.lang.String;@25c2a9e3,[Ljava.lang.String;@9b23822),Annotation([Ljava.lang.String;@60f21960,[Ljava.lang.String;@6a6c7f42,[Ledu.cmu.lti.nlp.amr.Entity;@5a515e5d))
AMR:
(怎 / 怎么, location, 随 / 随便)
(行 / 行-04, manner, 用 / 用)
(行 / 行-04, manner, 都 / 都)
(行 / 行-04, manner, 随 / 随便)

Decoded in 8,411 microseconds
Sentence: … ” 小 王子 自言自语 地 说 ： “ 我 如果 有 五十三 分钟 可 支配 ， 我 就 悠哉悠哉 地 向 水泉 走去 … ”

Spans:
Span 13-14:  分钟 => 分钟
Span 14-15:  可 => 可-01
Span 20-21:  地 => 地
Span 5-6:  地 => 地
Span 2-3:  小 => 小
Span 18-19:  就 => 就-01
Span 19-20:  悠哉悠哉 => 悠哉悠哉
Span 17-18:  我 => 我
Span 9-10:  我 => 我
Span 15-16:  支配 => 支配-01
Span 11-12:  有 => 有-06
Span 22-23:  水泉 => 水泉
Span 3-4:  王子 => 王子
Span 4-5:  自言自语 => 自言自语
Span 6-7:  说 => 说-02
Span 23-24:  走去 => 走去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 13-14:  分钟 => 分钟
Oracle Span 2-3:  小 => 小-01
Oracle Span 19-20:  悠哉悠哉 => 悠哉悠哉
Oracle Span 15-16:  支配 => 支配-01
Oracle Span 11-12:  有 => 有-01
Oracle Span 22-23:  水泉 => 水泉
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  自言自语 => 自言自语
Oracle Span 6-7:  说 => 说-01
Oracle Span 23-24:  走去 => 走去-01

Extra span: 地 => 地
Extra span: 就 => 就-01
Extra span: 我 => 我
Extra span: 可 => 可-01
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 有 => 有-01
Missing span: 小 => 小-01
Dependencies:
1	…	_	PU	PU	_	2	punct	_	_
2	”	_	NN	NN	_	7	dep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	7	nsubj	_	_
5	自言自语	_	VA	VA	_	7	dvpmod	_	_
6	地	_	DEV	DEV	_	5	dvpm	_	_
7	说	_	VV	VV	_	0	root	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	12	punct	_	_
10	我	_	PN	PN	_	12	nsubj	_	_
11	如果	_	CS	CS	_	12	advmod	_	_
12	有	_	VE	VE	_	7	ccomp	_	_
13	五十三	_	CD	CD	_	14	nummod	_	_
14	分钟	_	M	M	_	15	nsubj	_	_
15	可	_	VV	VV	_	12	dep	_	_
16	支配	_	NN	NN	_	15	dobj	_	_
17	,	_	PU	PU	_	12	punct	_	_
18	我	_	PN	PN	_	25	nsubj	_	_
19	就	_	AD	AD	_	25	advmod	_	_
20	悠哉悠哉	_	VA	VA	_	25	dep	_	_
21	地	_	DEV	DEV	_	20	dvpm	_	_
22	向	_	P	P	_	25	prep	_	_
23	水泉	_	NN	NN	_	24	nn	_	_
24	走去	_	NN	NN	_	22	pobj	_	_
25	…	_	VV	VV	_	12	conj	_	_
26	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, manner, x4 / 自言自语)
(x11 / 支配-01, arg1, x9 / 分钟)
(x13 / 走去-01, arg1, x15 / 水泉)
(x13 / 走去-01, manner, x17 / 悠哉悠哉)
(x2 / 王子, mod, x3 / 小-01)
(x6 / 有-01, arg1, x9 / 分钟)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),走去,走去-01,false), Span(22,23,List(1),水泉,水泉,false), Span(20,21,List(2),地,地,false), Span(19,20,List(3),悠哉悠哉,悠哉悠哉,false), Span(18,19,List(4),就,就-01,false), Span(17,18,List(5),我,我,false), Span(15,16,List(6),支配,支配-01,false), Span(14,15,List(7),可,可-01,false), Span(13,14,List(8),分钟,分钟,false), Span(11,12,List(9),有,有-06,false), Span(9,10,List(10),我,我,false), Span(6,7,List(11),说,说-02,false), Span(5,6,List(12),地,地,false), Span(4,5,List(13),自言自语,自言自语,false), Span(3,4,List(14),王子,王子,false), Span(2,3,List(15),小,小,false)),Map(2 -> 地, 5 -> 我, 12 -> 地, 15 -> 小, 8 -> 分钟, 7 -> 可-01, 1 -> 水泉, 4 -> 就-01, 11 -> 说-02, 14 -> 王子, 6 -> 支配-01, 0 -> 走去-01, 9 -> 有-06, 3 -> 悠哉悠哉, 10 -> 我, 13 -> 自言自语),Map(就 -> 就-01, 自 -> 自言自语, 地2 -> 地, 我 -> 我, 王 -> 王子, 我2 -> 我, 支 -> 支配-01, 水 -> 水泉, 小 -> 小, 地 -> 地, 悠 -> 悠哉悠哉, 说 -> 说-02, 分 -> 分钟, 走 -> 走去-01, 可 -> 可-01, 有 -> 有-06))),[Ljava.lang.String;@423a0e1d,Annotation([Ljava.lang.String;@32f32623,[Ljava.lang.String;@3becc950,[Ljava.lang.String;@6b9fdbc6),Annotation([Ljava.lang.String;@79476a4e,[Ljava.lang.String;@52ae997b,[Ledu.cmu.lti.nlp.amr.Dependency;@f557c37),Annotation([Ljava.lang.String;@1a01d7f0,[Ljava.lang.String;@5856dbe4,[Ljava.lang.String;@7e15f4d4),Annotation([Ljava.lang.String;@5a058be5,[Ljava.lang.String;@4eaf7902,[Ledu.cmu.lti.nlp.amr.Entity;@20c812c8))
AMR:
(可 / 可-01, direction, 分 / 分钟)
(地 / 地, quant, 悠 / 悠哉悠哉)
(地2 / 地, conj-as-if, 王 / 王子)
(地2 / 地, manner, 自 / 自言自语)
(小 / 小, weekday, 王 / 王子)
(就 / 就-01, year, 我 / 我)
(悠 / 悠哉悠哉, conj-as-if, 就 / 就-01)
(支 / 支配-01, direction, 可 / 可-01)
(支 / 支配-01, year, 就 / 就-01)
(有 / 有-06, conj-as-if, 我2 / 我)
(有 / 有-06, year, 可 / 可-01)
(说 / 说-02, direction, 地2 / 地)
(说 / 说-02, year, 有 / 有-06)
(走 / 走去-01, direction, 水 / 水泉)
(走 / 走去-01, quant, 地 / 地)

Decoded in 78,998 microseconds
Sentence: XXIV 。

Spans:
Span 0-1:  XXIV => XXIV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXIV => XXIV

Dependencies:
1	XXIV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXIV,XXIV,false)),Map(0 -> XXIV),Map(x -> XXIV))),[Ljava.lang.String;@71aaf151,Annotation([Ljava.lang.String;@7061622,[Ljava.lang.String;@32d418a9,[Ljava.lang.String;@52ea0269),Annotation([Ljava.lang.String;@746c411c,[Ljava.lang.String;@43ecfeb5,[Ledu.cmu.lti.nlp.amr.Dependency;@51efb731),Annotation([Ljava.lang.String;@53940e2f,[Ljava.lang.String;@45e6d1e0,[Ljava.lang.String;@61db86bf),Annotation([Ljava.lang.String;@4da1f38a,[Ljava.lang.String;@3e377967,[Ledu.cmu.lti.nlp.amr.Entity;@4dadd690))
AMR:


Decoded in 1,151 microseconds
Sentence: 这 是 我 在 沙漠 上 出 了 事故 的 第八 天 。 我 听 着 有关 这个 商人 的 故事 ， 喝 完 了 我 所 备用 的 最后 一 滴 水 。

Spans:
Span 8-9:  事故 => 事故
Span 6-7:  出 => 出-04
Span 14-15:  听 => 听-02
Span 18-19:  商人 => 商人
Span 22-23:  喝 => (thing :arg1-of 喝-01)
Span 3-4:  在 => 在-01
Span 27-28:  备用 => 备用-01
Span 11-12:  天 => (temporal-quantity :unit 天)
Span 23-24:  完 => 完-01
Span 25-26:  我 => 我
Span 13-14:  我 => 我
Span 2-3:  我 => 我
Span 20-21:  故事 => 故事
Span 1-2:  是 => 是-04
Span 29-30:  最后 => 最后
Span 32-33:  水 => 水
Span 4-5:  沙漠 => 沙漠
Span 0-1:  这 => 这
Span 17-18:  这个 => 这个

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ！ ”

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@3281dfc2,Annotation([Ljava.lang.String;@377874b4,[Ljava.lang.String;@14422d9d,[Ljava.lang.String;@16c1519e),Annotation([Ljava.lang.String;@2a02e34b,[Ljava.lang.String;@5eabff6b,[Ledu.cmu.lti.nlp.amr.Dependency;@5b000fe6),Annotation([Ljava.lang.String;@4751e8b9,[Ljava.lang.String;@7af443a3,[Ljava.lang.String;@7b25ab31),Annotation([Ljava.lang.String;@2001e48c,[Ljava.lang.String;@68ddd415,[Ledu.cmu.lti.nlp.amr.Entity;@306c7bf6))
AMR:


Decoded in 1,214 microseconds
Sentence: 我 对 小 王子 说 ， “ 你 回忆 的 这些 故事 真 美 。 可是 ， 我 还 没有 修 好 我 的 飞机 。 我 没有 喝 的 了 ， 假如 我 能 悠哉悠哉 地 走到 水泉 边 去 ， 我 一定 也 会 很 高兴 的 ！ ”

Spans:
Span 43-44:  一定 => 一定
Span 44-45:  也 => 也
Span 45-46:  会 => 会-03
Span 7-8:  你 => 你
Span 20-21:  修 => 修-01
Span 40-41:  去 => 去-02
Span 28-29:  喝 => (thing :arg1-of 喝-01)
Span 8-9:  回忆 => 回忆
Span 36-37:  地 => 地
Span 21-22:  好 => 好-04
Span 1-2:  对 => 对-02
Span 2-3:  小 => 小
Span 46-47:  很 => 很
Span 35-36:  悠哉悠哉 => 悠哉悠哉
Span 42-43:  我 => 我
Span 33-34:  我 => 我
Span 26-27:  我 => 我
Span 22-23:  我 => 我
Span 17-18:  我 => 我
Span 0-1:  我 => 我
Span 11-12:  故事 => 故事
Span 38-39:  水泉 => 水泉
Span 3-4:  王子 => 王子
Span 12-13:  真 => 真
Span 13-14:  美 => 美-01
Span 34-35:  能 => 能
Span 4-5:  说 => 说-02
Span 37-38:  走到 => 走到-01
Span 18-19:  还 => 还
Span 10-11:  这些 => 这些
Span 24-25:  飞机 => 飞机
Span 47-48:  高兴 => 高兴

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 小 王子 对 我 说 ： “ 我 的 朋友 狐狸 … ”

Spans:
Span 2-3:  对 => 对-02
Span 0-1:  小 => 小
Span 7-8:  我 => 我
Span 3-4:  我 => 我
Span 9-10:  朋友 => 朋友
Span 10-11:  狐狸 => 狐狸
Span 1-2:  王子 => 王子
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  小 => 小-01
Oracle Span 3-4:  我 => 我
Oracle Span 9-10:  朋友 => 朋友
Oracle Span 10-11:  狐狸 => 狐狸
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	12	punct	_	_
8	我	_	PN	PN	_	11	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	朋友	_	NN	NN	_	11	nn	_	_
11	狐狸	_	NN	NN	_	12	nsubj	_	_
12	…	_	VA	VA	_	5	ccomp	_	_
13	”	_	PU	PU	_	12	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x5 / 朋友)
(x0 / 说-01, arg3, x4 / 我)
(x2 / 王子, mod, x3 / 小-01)
(x5 / 朋友, domain, x7 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),狐狸,狐狸,false), Span(9,10,List(1),朋友,朋友,false), Span(7,8,List(2),我,我,false), Span(4,5,List(3),说,说-02,false), Span(3,4,List(4),我,我,false), Span(2,3,List(5),对,对-02,false), Span(1,2,List(6),王子,王子,false), Span(0,1,List(7),小,小,false)),Map(2 -> 我, 5 -> 对-02, 7 -> 小, 1 -> 朋友, 4 -> 我, 6 -> 王子, 0 -> 狐狸, 3 -> 说-02),Map(我 -> 我, 朋 -> 朋友, 王 -> 王子, 我2 -> 我, 小 -> 小, 说 -> 说-02, 狐 -> 狐狸, 对 -> 对-02))),[Ljava.lang.String;@494c8f29,Annotation([Ljava.lang.String;@4f379769,[Ljava.lang.String;@1c57f6b2,[Ljava.lang.String;@4b515eab),Annotation([Ljava.lang.String;@66c9b52f,[Ljava.lang.String;@1536ea40,[Ledu.cmu.lti.nlp.amr.Dependency;@36776c32),Annotation([Ljava.lang.String;@7792d851,[Ljava.lang.String;@5cd96b41,[Ljava.lang.String;@7e1ffe70),Annotation([Ljava.lang.String;@73041b7d,[Ljava.lang.String;@1235151c,[Ledu.cmu.lti.nlp.amr.Entity;@5a1f778))
AMR:
(对 / 对-02, value, 王 / 王子)
(朋 / 朋友, domain, 狐 / 狐狸)
(朋 / 朋友, poss, 我 / 我)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, poss, 我2 / 我)
(说 / 说-02, purpose, 对 / 对-02)
(说 / 说-02, purpose, 朋 / 朋友)

Decoded in 18,203 microseconds
Sentence: “ 我 的 小家伙 ， 现在 还 说 什么 狐狸 ！ ”

Spans:
Span 8-9:  什么 => 什么
Span 1-2:  我 => 我
Span 9-10:  狐狸 => 狐狸
Span 5-6:  现在 => 现在
Span 7-8:  说 => 说-02
Span 6-7:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  什么 => 什么
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 7-8:  说 => 说-01
Oracle Span 6-7:  还 => 还

Incorrect span: 说 => 说-02
Extra span: 现在 => 现在
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	我	_	PN	PN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	小家伙	_	NN	NN	_	8	nsubj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	现在	_	NT	NT	_	8	tmod	_	_
7	还	_	AD	AD	_	8	advmod	_	_
8	说	_	VV	VV	_	0	root	_	_
9	什么	_	DT	DT	_	10	det	_	_
10	狐狸	_	NN	NN	_	8	dobj	_	_
11	！	_	PU	PU	_	8	punct	_	_
12	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 说-01, arg1, x15 / 狐狸)
(x10 / 说-01, manner, x14 / 还)
(x15 / 狐狸, mod, x16 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),狐狸,狐狸,false), Span(8,9,List(1),什么,什么,false), Span(7,8,List(2),说,说-02,false), Span(6,7,List(3),还,还,false), Span(5,6,List(4),现在,现在,false), Span(1,2,List(5),我,我,false)),Map(2 -> 说-02, 5 -> 我, 1 -> 什么, 4 -> 现在, 0 -> 狐狸, 3 -> 还),Map(我 -> 我, 还 -> 还, 说 -> 说-02, 什 -> 什么, 狐 -> 狐狸, 现 -> 现在))),[Ljava.lang.String;@4cc65c2,Annotation([Ljava.lang.String;@574059d5,[Ljava.lang.String;@6d672bd4,[Ljava.lang.String;@67770b37),Annotation([Ljava.lang.String;@72906e,[Ljava.lang.String;@5529ff44,[Ledu.cmu.lti.nlp.amr.Dependency;@14447be),Annotation([Ljava.lang.String;@5eb5da12,[Ljava.lang.String;@4a50d04a,[Ljava.lang.String;@5099c59b),Annotation([Ljava.lang.String;@73c31181,[Ljava.lang.String;@3d620a1,[Ledu.cmu.lti.nlp.amr.Entity;@4f486211))
AMR:
(狐 / 狐狸, mod, 什 / 什么)
(说 / 说-02, domain, 我 / 我)
(说 / 说-02, manner, 还 / 还)
(说 / 说-02, subset, 什 / 什么)
(说 / 说-02, time, 现 / 现在)

Decoded in 14,372 microseconds
Sentence: “ 为什么 ？ ”

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	为什么	_	CD	CD	_	0	root	_	_
3	？	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@51e3d37e,Annotation([Ljava.lang.String;@3a479fda,[Ljava.lang.String;@8a6631b,[Ljava.lang.String;@472d0f4),Annotation([Ljava.lang.String;@4bc59b27,[Ljava.lang.String;@4d7a64ca,[Ledu.cmu.lti.nlp.amr.Dependency;@76ff68c5),Annotation([Ljava.lang.String;@6418e39e,[Ljava.lang.String;@3635099,[Ljava.lang.String;@1da1380b),Annotation([Ljava.lang.String;@1095d23a,[Ljava.lang.String;@3332c7a5,[Ledu.cmu.lti.nlp.amr.Entity;@2accaec2))
AMR:


Decoded in 1,457 microseconds
Sentence: “ 因为 我 就 要 渴 死 了 。 ”

Spans:
Span 3-4:  就 => 就-01
Span 2-3:  我 => 我
Span 6-7:  死 => 死
Span 5-6:  渴 => 渴-01
Span 4-5:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  就 => 就
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  死 => 死-01
Oracle Span 5-6:  渴 => 渴-01
Oracle Span 4-5:  要 => 要-03

Incorrect span: 死 => 死
Incorrect span: 要 => 要-02
Incorrect span: 就 => 就-01
Missing span: 要 => 要-03
Missing span: 死 => 死-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	因为	_	P	P	_	7	prep	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	2	pccomp	_	_
6	渴	_	AD	AD	_	7	advmod	_	_
7	死	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_
10	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 要-03, arg0, x13 / 死-01)
(x10 / 要-03, manner, x11 / 就)
(x13 / 死-01, arg0, x14 / 我)
(x13 / 死-01, cause, x16 / 渴-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),死,死,false), Span(5,6,List(1),渴,渴-01,false), Span(4,5,List(2),要,要-02,false), Span(3,4,List(3),就,就-01,false), Span(2,3,List(4),我,我,false)),Map(2 -> 要-02, 1 -> 渴-01, 4 -> 我, 0 -> 死, 3 -> 就-01),Map(就 -> 就-01, 我 -> 我, 要 -> 要-02, 渴 -> 渴-01, 死 -> 死))),[Ljava.lang.String;@3e39baf0,Annotation([Ljava.lang.String;@83bb0f,[Ljava.lang.String;@25a94b55,[Ljava.lang.String;@6adc5b9c),Annotation([Ljava.lang.String;@19c1820d,[Ljava.lang.String;@40709f9,[Ledu.cmu.lti.nlp.amr.Dependency;@6b1b19cf),Annotation([Ljava.lang.String;@6393bf8b,[Ljava.lang.String;@76d7881e,[Ljava.lang.String;@4aa31ffc),Annotation([Ljava.lang.String;@7945b206,[Ljava.lang.String;@7d42542,[Ledu.cmu.lti.nlp.amr.Entity;@4d09cade))
AMR:
(就 / 就-01, beneficiary, 我 / 我)
(死 / 死, mod, 渴 / 渴-01)
(要 / 要-02, manner, 就 / 就-01)
(要 / 要-02, purpose, 渴 / 渴-01)

Decoded in 8,673 microseconds
Sentence: 他 不 理解 我 的 思路 ， 他 回答 我 道 ： “ 即使 快 要 死 了 ， 有 过 一 个 朋友 也 好 么 ！

Spans:
Span 1-2:  不 => 不
Span 24-25:  也 => 也
Span 7-8:  他 => 他
Span 0-1:  他 => 他
Span 8-9:  回答 => 回答-01
Span 25-26:  好 => 好-04
Span 14-15:  快 => 快
Span 5-6:  思路 => 思路
Span 9-10:  我 => 我
Span 3-4:  我 => 我
Span 19-20:  有 => 有-06
Span 23-24:  朋友 => 朋友
Span 16-17:  死 => 死
Span 2-3:  理解 => 理解-01
Span 15-16:  要 => 要-02
Span 20-21:  过 => 过-01
Span 10-11:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 25-26:  好 => 好-01
Oracle Span 14-15:  快 => 快-01
Oracle Span 5-6:  思路 => 思路
Oracle Span 3-4:  我 => 我
Oracle Span 19-20:  有 => 有-01
Oracle Span 23-24:  朋友 => 朋友
Oracle Span 16-17:  死 => 死-01
Oracle Span 2-3:  理解 => 理解-01
Oracle Span 15-16:  要 => 要-03

Incorrect span: 好 => 好-04
Extra span: 也 => 也
Extra span: 过 => 过-01
Incorrect span: 有 => 有-06
Incorrect span: 死 => 死
Incorrect span: 要 => 要-02
Incorrect span: 快 => 快
Extra span: 道 => 道-01
Extra span: 我 => 我
Extra span: 他 => 他
Extra span: 不 => 不
Missing span: 要 => 要-03
Missing span: 死 => 死-01
Missing span: 快 => 快-01
Missing span: 好 => 好-01
Missing span: 有 => 有-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	理解	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	思路	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	他	_	PN	PN	_	9	nsubj	_	_
9	回答	_	VV	VV	_	3	conj	_	_
10	我	_	PN	PN	_	11	nsubj	_	_
11	道	_	VV	VV	_	27	vmod	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	26	punct	_	_
14	即使	_	CS	CS	_	17	advmod	_	_
15	快	_	VA	VA	_	17	dep	_	_
16	要	_	VV	VV	_	17	mmod	_	_
17	死	_	VV	VV	_	26	dep	_	_
18	了	_	AS	AS	_	17	asp	_	_
19	,	_	PU	PU	_	17	punct	_	_
20	有	_	VE	VE	_	17	dep	_	_
21	过	_	AS	AS	_	20	asp	_	_
22	一	_	CD	CD	_	23	nummod	_	_
23	个	_	M	M	_	24	clf	_	_
24	朋友	_	NN	NN	_	20	dobj	_	_
25	也	_	AD	AD	_	26	advmod	_	_
26	好	_	VA	VA	_	11	ccomp	_	_
27	么	_	NN	NN	_	9	dobj	_	_
28	！	_	PU	PU	_	3	punct	_	_
29	我	_	PN	PN	_	26	xsubj	_	_

Oracle:
(x2 / 理解-01, arg0, x4 / 他)
(x2 / 理解-01, arg1, x5 / 思路)
(x23 / 要-03, arg0, x24 / 死-01)
(x24 / 死-01, manner, x25 / 快-01)
(x26 / 好-01, arg0, x27 / 有-01)
(x27 / 有-01, arg1, x28 / 朋友)
(x5 / 思路, poss, x6 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),好,好-04,false), Span(24,25,List(1),也,也,false), Span(23,24,List(2),朋友,朋友,false), Span(20,21,List(3),过,过-01,false), Span(19,20,List(4),有,有-06,false), Span(16,17,List(5),死,死,false), Span(15,16,List(6),要,要-02,false), Span(14,15,List(7),快,快,false), Span(10,11,List(8),道,道-01,false), Span(9,10,List(9),我,我,false), Span(8,9,List(10),回答,回答-01,false), Span(7,8,List(11),他,他,false), Span(5,6,List(12),思路,思路,false), Span(3,4,List(13),我,我,false), Span(2,3,List(14),理解,理解-01,false), Span(1,2,List(15),不,不,false), Span(0,1,List(16),他,他,false)),Map(2 -> 朋友, 5 -> 死, 12 -> 思路, 15 -> 不, 8 -> 道-01, 7 -> 快, 1 -> 也, 4 -> 有-06, 11 -> 他, 14 -> 理解-01, 6 -> 要-02, 0 -> 好-04, 9 -> 我, 16 -> 他, 3 -> 过-01, 10 -> 回答-01, 13 -> 我),Map(他2 -> 他, 理 -> 理解-01, 快 -> 快, 也 -> 也, 朋 -> 朋友, 我 -> 我, 过 -> 过-01, 要 -> 要-02, 死 -> 死, 我2 -> 我, 他 -> 他, 思 -> 思路, 道 -> 道-01, 不 -> 不, 好 -> 好-04, 回 -> 回答-01, 有 -> 有-06))),[Ljava.lang.String;@1f87607c,Annotation([Ljava.lang.String;@4b862408,[Ljava.lang.String;@6ddee60f,[Ljava.lang.String;@6e829e50),Annotation([Ljava.lang.String;@4aa2877c,[Ljava.lang.String;@307e4c44,[Ledu.cmu.lti.nlp.amr.Dependency;@2a8a3ada),Annotation([Ljava.lang.String;@500051c5,[Ljava.lang.String;@ec7b5de,[Ljava.lang.String;@4c19d42e),Annotation([Ljava.lang.String;@373e6b9d,[Ljava.lang.String;@65629ac6,[Ledu.cmu.lti.nlp.amr.Entity;@56b8aaf1))
AMR:
(他2 / 他, part, 不 / 不)
(回 / 回答-01, manner, 他 / 他)
(回 / 回答-01, time, 思 / 思路)
(好 / 好-04, manner, 也 / 也)
(好 / 好-04, time, 朋 / 朋友)
(思 / 思路, manner, 理 / 理解-01)
(思 / 思路, poss, 我2 / 我)
(有 / 有-06, manner, 死 / 死)
(理 / 理解-01, manner, 不 / 不)
(要 / 要-02, location, 死 / 死)
(要 / 要-02, manner, 快 / 快)
(过 / 过-01, degree, 有 / 有-06)
(过 / 过-01, topic, 朋 / 朋友)
(道 / 道-01, prep-following, 我 / 我)
(道 / 道-01, time, 回 / 回答-01)
(道 / 道-01, topic, 快 / 快)

Decoded in 82,293 microseconds
Sentence: 我 就 为 我 有 过 一 个 狐狸 朋友 而 感到 很 高兴 … ”

Spans:
Span 1-2:  就 => 就-01
Span 12-13:  很 => 很
Span 11-12:  感到 => 感到-01
Span 3-4:  我 => 我
Span 0-1:  我 => 我
Span 4-5:  有 => 有-06
Span 9-10:  朋友 => 朋友
Span 8-9:  狐狸 => 狐狸
Span 5-6:  过 => 过-01
Span 13-14:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  很 => 很
Oracle Span 11-12:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  有 => 有-01
Oracle Span 9-10:  朋友 => 朋友
Oracle Span 8-9:  狐狸 => 狐狸
Oracle Span 13-14:  高兴 => 高兴

Extra span: 过 => 过-01
Incorrect span: 有 => 有-06
Extra span: 我 => 我
Extra span: 就 => 就-01
Missing span: 有 => 有-01
Dependencies:
1	我	_	PN	PN	_	12	nsubj	_	_
2	就	_	AD	AD	_	12	advmod	_	_
3	为	_	P	P	_	12	prep	_	_
4	我	_	PN	PN	_	5	top	_	_
5	有	_	VE	VE	_	3	pccomp	_	_
6	过	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	10	clf	_	_
9	狐狸	_	NN	NN	_	10	nn	_	_
10	朋友	_	NN	NN	_	5	dobj	_	_
11	而	_	MSP	MSP	_	12	prtmod	_	_
12	感到	_	VV	VV	_	0	root	_	_
13	很	_	AD	AD	_	14	advmod	_	_
14	高兴	_	VA	VA	_	12	ccomp	_	_
15	…	_	PU	PU	_	12	punct	_	_
16	”	_	PU	PU	_	12	punct	_	_
17	我	_	PN	PN	_	14	xsubj	_	_

Oracle:
(x17 / 感到-01, arg0, x18 / 我)
(x17 / 感到-01, arg1, x19 / 高兴)
(x19 / 高兴, arg1, x22 / 有-01)
(x19 / 高兴, degree, x20 / 很)
(x22 / 有-01, arg1, x24 / 朋友)
(x24 / 朋友, mod, x25 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),高兴,高兴,false), Span(12,13,List(1),很,很,false), Span(11,12,List(2),感到,感到-01,false), Span(9,10,List(3),朋友,朋友,false), Span(8,9,List(4),狐狸,狐狸,false), Span(5,6,List(5),过,过-01,false), Span(4,5,List(6),有,有-06,false), Span(3,4,List(7),我,我,false), Span(1,2,List(8),就,就-01,false), Span(0,1,List(9),我,我,false)),Map(2 -> 感到-01, 5 -> 过-01, 8 -> 就-01, 7 -> 我, 1 -> 很, 4 -> 狐狸, 6 -> 有-06, 9 -> 我, 0 -> 高兴, 3 -> 朋友),Map(高 -> 高兴, 就 -> 就-01, 我 -> 我, 朋 -> 朋友, 感 -> 感到-01, 过 -> 过-01, 我2 -> 我, 很 -> 很, 狐 -> 狐狸, 有 -> 有-06))),[Ljava.lang.String;@5482bcac,Annotation([Ljava.lang.String;@10244722,[Ljava.lang.String;@61615b4a,[Ljava.lang.String;@721d8ab5),Annotation([Ljava.lang.String;@33bb3f86,[Ljava.lang.String;@1946384,[Ledu.cmu.lti.nlp.amr.Dependency;@6ac4c3f7),Annotation([Ljava.lang.String;@7412a438,[Ljava.lang.String;@1e3ff233,[Ljava.lang.String;@3c952a33),Annotation([Ljava.lang.String;@70029d2d,[Ljava.lang.String;@1150d471,[Ledu.cmu.lti.nlp.amr.Entity;@709f0202))
AMR:
(就 / 就-01, beneficiary, 我2 / 我)
(感 / 感到-01, prep-along-with, 高 / 高兴)
(感 / 感到-01, time, 朋 / 朋友)
(有 / 有-06, manner, 就 / 就-01)
(有 / 有-06, manner, 我 / 我)
(朋 / 朋友, mod, 狐 / 狐狸)
(过 / 过-01, degree, 有 / 有-06)
(过 / 过-01, mode, 狐 / 狐狸)
(高 / 高兴, degree, 很 / 很)

Decoded in 27,673 microseconds
Sentence: “ 他 不 顾 危险 。 ”

Spans:
Span 2-3:  不 => 不
Span 1-2:  他 => 他
Span 4-5:  危险 => 危险-01
Span 3-4:  顾 => 顾-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  危险 => 危险-01
Oracle Span 3-4:  顾 => 顾-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	顾	_	VV	VV	_	0	root	_	_
5	危险	_	NN	NN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x7 / 顾-01, arg0, x9 / 他)
(x7 / 顾-01, arg1, x10 / 危险-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),危险,危险-01,false), Span(3,4,List(1),顾,顾-01,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),他,他,false)),Map(2 -> 不, 1 -> 顾-01, 0 -> 危险-01, 3 -> 他),Map(危 -> 危险-01, 顾 -> 顾-01, 他 -> 他, 不 -> 不))),[Ljava.lang.String;@654e6a90,Annotation([Ljava.lang.String;@14168e1,[Ljava.lang.String;@16a5c7e4,[Ljava.lang.String;@1e225820),Annotation([Ljava.lang.String;@8aeab9e,[Ljava.lang.String;@2a2dc0a,[Ledu.cmu.lti.nlp.amr.Dependency;@3a00b15d),Annotation([Ljava.lang.String;@36ef1d65,[Ljava.lang.String;@4be0a27d,[Ljava.lang.String;@5f366587),Annotation([Ljava.lang.String;@6003ad65,[Ljava.lang.String;@2ec99035,[Ledu.cmu.lti.nlp.amr.Entity;@60743cdb))
AMR:
(他 / 他, part, 不 / 不)
(顾 / 顾-01, manner, 不 / 不)
(顾 / 顾-01, purpose, 危 / 危险-01)

Decoded in 5,587 microseconds
Sentence: 我 自己 思量 着 ，

Spans:
Span 2-3:  思量 => 思量-01
Span 0-1:  我 => 我
Span 1-2:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  思量 => 思量-01
Oracle Span 0-1:  我 => 我

Extra span: 自己 => 自己
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	自己	_	PN	PN	_	3	dep	_	_
3	思量	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 思量-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),思量,思量-01,false), Span(1,2,List(1),自己,自己,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 自己, 0 -> 思量-01),Map(自 -> 自己, 我 -> 我, 思 -> 思量-01))),[Ljava.lang.String;@c02670f,Annotation([Ljava.lang.String;@71179b6f,[Ljava.lang.String;@13bdf540,[Ljava.lang.String;@526e8108),Annotation([Ljava.lang.String;@4dcbae55,[Ljava.lang.String;@4a9860,[Ledu.cmu.lti.nlp.amr.Dependency;@7ca16adc),Annotation([Ljava.lang.String;@5ae1c281,[Ljava.lang.String;@4ac8768e,[Ljava.lang.String;@1e957e2f),Annotation([Ljava.lang.String;@691500ab,[Ljava.lang.String;@3db432c2,[Ledu.cmu.lti.nlp.amr.Entity;@34414ffc))
AMR:
(思 / 思量-01, ARG4, 我 / 我)
(思 / 思量-01, ARG6, 自 / 自己)

Decoded in 3,981 microseconds
Sentence: “ 他 从来 不 知道 饥渴 。

Spans:
Span 3-4:  不 => 不
Span 2-3:  从来 => 从来
Span 1-2:  他 => 他
Span 4-5:  知道 => 知道-01
Span 5-6:  饥渴 => 饥渴-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从来 => 从来
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  知道 => 知道-01
Oracle Span 5-6:  饥渴 => 饥渴-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	从来	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	知道	_	VV	VV	_	0	root	_	_
6	饥渴	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x8 / 知道-01, arg0, x10 / 他)
(x8 / 知道-01, arg1, x11 / 饥渴-01)
(x8 / 知道-01, time, x12 / 从来)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),饥渴,饥渴-01,false), Span(4,5,List(1),知道,知道-01,false), Span(3,4,List(2),不,不,false), Span(2,3,List(3),从来,从来,false), Span(1,2,List(4),他,他,false)),Map(2 -> 不, 1 -> 知道-01, 4 -> 他, 0 -> 饥渴-01, 3 -> 从来),Map(从 -> 从来, 饥 -> 饥渴-01, 他 -> 他, 不 -> 不, 知 -> 知道-01))),[Ljava.lang.String;@1903b5d,Annotation([Ljava.lang.String;@4041739c,[Ljava.lang.String;@5cff6b74,[Ljava.lang.String;@627ff1b8),Annotation([Ljava.lang.String;@62b57479,[Ljava.lang.String;@29a33620,[Ledu.cmu.lti.nlp.amr.Dependency;@ea04cab),Annotation([Ljava.lang.String;@134f8ef6,[Ljava.lang.String;@5a90265a,[Ljava.lang.String;@6a32191e),Annotation([Ljava.lang.String;@66fbc5e7,[Ljava.lang.String;@9accff0,[Ledu.cmu.lti.nlp.amr.Entity;@52559a69))
AMR:
(不 / 不, mod, 从 / 从来)
(不 / 不, poss, 他 / 他)
(知 / 知道-01, prep-through, 饥 / 饥渴-01)
(知 / 知道-01, time, 不 / 不)

Decoded in 7,734 microseconds
Sentence: 只要 有 点 阳光 ， 他 就 满足 了 … ”

Spans:
Span 5-6:  他 => 他
Span 6-7:  就 => 就-01
Span 1-2:  有 => 有-06
Span 7-8:  满足 => 满足-01
Span 2-3:  点 => 点
Span 3-4:  阳光 => 阳光

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 6-7:  就 => 就
Oracle Span 1-2:  有 => 有-03
Oracle Span 7-8:  满足 => 满足-01
Oracle Span 2-3:  点 => 点
Oracle Span 3-4:  阳光 => 阳光

Incorrect span: 就 => 就-01
Incorrect span: 有 => 有-06
Missing span: 有 => 有-03
Missing span: 就 => 就
Dependencies:
1	只要	_	CS	CS	_	2	advmod	_	_
2	有	_	VE	VE	_	8	pccomp	_	_
3	点	_	NN	NN	_	4	nn	_	_
4	阳光	_	NN	NN	_	2	dobj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	满足	_	VV	VV	_	0	root	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	PU	PU	_	8	punct	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x12 / 有-03, arg1, x13 / 阳光)
(x13 / 阳光, quant, x14 / 点)
(x15 / 满足-01, arg0, x17 / 他)
(x15 / 满足-01, manner, x16 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),满足,满足-01,false), Span(6,7,List(1),就,就-01,false), Span(5,6,List(2),他,他,false), Span(3,4,List(3),阳光,阳光,false), Span(2,3,List(4),点,点,false), Span(1,2,List(5),有,有-06,false)),Map(2 -> 他, 5 -> 有-06, 1 -> 就-01, 4 -> 点, 0 -> 满足-01, 3 -> 阳光),Map(就 -> 就-01, 他 -> 他, 满 -> 满足-01, 点 -> 点, 阳 -> 阳光, 有 -> 有-06))),[Ljava.lang.String;@285583d4,Annotation([Ljava.lang.String;@1039bfc4,[Ljava.lang.String;@7f85217c,[Ljava.lang.String;@1fd7a37),Annotation([Ljava.lang.String;@5b202ff,[Ljava.lang.String;@58a84a12,[Ledu.cmu.lti.nlp.amr.Dependency;@e700eba),Annotation([Ljava.lang.String;@6436e181,[Ljava.lang.String;@7186b202,[Ljava.lang.String;@6b649efa),Annotation([Ljava.lang.String;@65ef48f2,[Ljava.lang.String;@36068727,[Ledu.cmu.lti.nlp.amr.Entity;@72543547))
AMR:
(就 / 就-01, year, 他 / 他)
(有 / 有-06, prep-on-behalf, 阳 / 阳光)
(满 / 满足-01, manner, 就 / 就-01)
(阳 / 阳光, quant, 就 / 就-01)
(阳 / 阳光, quant, 点 / 点)

Decoded in 11,502 microseconds
Sentence: 他 看 着 我 ， 答复 着 我 的 思想 ： “ 我 也 渴 了 …

Spans:
Span 13-14:  也 => 也
Span 0-1:  他 => 他
Span 9-10:  思想 => 思想
Span 12-13:  我 => 我
Span 7-8:  我 => 我
Span 3-4:  我 => 我
Span 14-15:  渴 => 渴-01
Span 1-2:  看 => 看-10
Span 5-6:  答复 => 答复-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 0-1:  他 => 他
Oracle Span 9-10:  思想 => 思想
Oracle Span 3-4:  我 => 我
Oracle Span 14-15:  渴 => 渴-01
Oracle Span 1-2:  看 => 看-02
Oracle Span 5-6:  答复 => 答复-01

Extra span: 我 => 我
Extra span: 我 => 我
Incorrect span: 看 => 看-10
Missing span: 看 => 看-02
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	看	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	我	_	PN	PN	_	2	dobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	答复	_	VV	VV	_	2	conj	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	思想	_	NN	NN	_	6	dobj	_	_
11	：	_	PU	PU	_	2	punct	_	_
12	“	_	PU	PU	_	2	punct	_	_
13	我	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	渴	_	VV	VV	_	2	conj	_	_
16	了	_	PU	PU	_	2	punct	_	_
17	…	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 渴-01, manner, x14 / 也)
(x4 / 看-02, arg0, x5 / 他)
(x4 / 看-02, arg1, x6 / 我)
(x7 / 答复-01, arg1, x10 / 思想)
(x7 / 答复-01, arg2, x12 / 渴-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),渴,渴-01,false), Span(13,14,List(1),也,也,false), Span(12,13,List(2),我,我,false), Span(9,10,List(3),思想,思想,false), Span(7,8,List(4),我,我,false), Span(5,6,List(5),答复,答复-01,false), Span(3,4,List(6),我,我,false), Span(1,2,List(7),看,看-10,false), Span(0,1,List(8),他,他,false)),Map(2 -> 我, 5 -> 答复-01, 8 -> 他, 7 -> 看-10, 1 -> 也, 4 -> 我, 6 -> 我, 0 -> 渴-01, 3 -> 思想),Map(我3 -> 我, 我 -> 我, 也 -> 也, 渴 -> 渴-01, 我2 -> 我, 他 -> 他, 思 -> 思想, 看 -> 看-10, 答 -> 答复-01))),[Ljava.lang.String;@3d88e6b9,Annotation([Ljava.lang.String;@22bf9122,[Ljava.lang.String;@208205ed,[Ljava.lang.String;@73afe2b7),Annotation([Ljava.lang.String;@9687f55,[Ljava.lang.String;@5700c9db,[Ledu.cmu.lti.nlp.amr.Dependency;@671d03bb),Annotation([Ljava.lang.String;@6babffb5,[Ljava.lang.String;@2173a742,[Ljava.lang.String;@706ceca6),Annotation([Ljava.lang.String;@7f6329cb,[Ljava.lang.String;@4b8137c5,[Ledu.cmu.lti.nlp.amr.Entity;@77f4c040))
AMR:
(思 / 思想, location, 渴 / 渴-01)
(渴 / 渴-01, manner, 也 / 也)
(渴 / 渴-01, prep-following, 我 / 我)
(看 / 看-10, prep-following, 他 / 他)
(答 / 答复-01, manner, 我3 / 我)
(答 / 答复-01, manner, 看 / 看-10)
(答 / 答复-01, prep-along-with, 我2 / 我)
(答 / 答复-01, topic, 思 / 思想)

Decoded in 26,397 microseconds
Sentence: 我们 去 找 一 口 井 吧 … ”

Spans:
Span 5-6:  井 => 井
Span 1-2:  去 => 去-02
Span 0-1:  我们 => 我们
Span 2-3:  找 => 找-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  井 => 井
Oracle Span 1-2:  去 => 去-01
Oracle Span 0-1:  我们 => 我们
Oracle Span 2-3:  找 => 找-01

Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	去	_	MSP	MSP	_	3	prtmod	_	_
3	找	_	VV	VV	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	口	_	M	M	_	8	clf	_	_
6	井	_	NN	NN	_	8	nn	_	_
7	吧	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	3	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x10 / 去-01, arg0, x11 / 我们)
(x10 / 去-01, arg1, x12 / 找-01)
(x12 / 找-01, arg1, x14 / 井)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),井,井,false), Span(2,3,List(1),找,找-01,false), Span(1,2,List(2),去,去-02,false), Span(0,1,List(3),我们,我们,false)),Map(2 -> 去-02, 1 -> 找-01, 0 -> 井, 3 -> 我们),Map(我 -> 我们, 井 -> 井, 去 -> 去-02, 找 -> 找-01))),[Ljava.lang.String;@606a1bc4,Annotation([Ljava.lang.String;@6a15b73,[Ljava.lang.String;@44dc7b7d,[Ljava.lang.String;@15fb4566),Annotation([Ljava.lang.String;@25ffd826,[Ljava.lang.String;@29896529,[Ledu.cmu.lti.nlp.amr.Dependency;@e29f4f6),Annotation([Ljava.lang.String;@41b64020,[Ljava.lang.String;@1a538ed8,[Ljava.lang.String;@78910096),Annotation([Ljava.lang.String;@39dec536,[Ljava.lang.String;@4a1a256d,[Ledu.cmu.lti.nlp.amr.Entity;@4cb957b8))
AMR:
(去 / 去-02, ARG4, 我 / 我们)
(找 / 找-01, mod, 去 / 去-02)
(找 / 找-01, snt1, 井 / 井)

Decoded in 6,256 microseconds
Sentence: 我 显出 厌烦 的 样子 ：

Spans:
Span 2-3:  厌烦 => 厌烦-01
Span 0-1:  我 => 我
Span 1-2:  显出 => 显出-01
Span 4-5:  样子 => 样子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  厌烦 => 厌烦-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  显出 => 显出-01
Oracle Span 4-5:  样子 => 样子

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	显出	_	VV	VV	_	0	root	_	_
3	厌烦	_	NN	NN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	样子	_	NN	NN	_	2	dobj	_	_
6	：	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 显出-01, arg0, x2 / 我)
(x0 / 显出-01, arg1, x4 / 样子)
(x4 / 样子, mod, x5 / 厌烦-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),样子,样子,false), Span(2,3,List(1),厌烦,厌烦-01,false), Span(1,2,List(2),显出,显出-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 显出-01, 1 -> 厌烦-01, 0 -> 样子, 3 -> 我),Map(厌 -> 厌烦-01, 我 -> 我, 显 -> 显出-01, 样 -> 样子))),[Ljava.lang.String;@3cdc7b09,Annotation([Ljava.lang.String;@7364eed1,[Ljava.lang.String;@684e8c9d,[Ljava.lang.String;@6ecc02bb),Annotation([Ljava.lang.String;@31973858,[Ljava.lang.String;@65514add,[Ledu.cmu.lti.nlp.amr.Dependency;@79e7188e),Annotation([Ljava.lang.String;@773014d3,[Ljava.lang.String;@7fedb795,[Ljava.lang.String;@10850d17),Annotation([Ljava.lang.String;@51e754e1,[Ljava.lang.String;@26865482,[Ledu.cmu.lti.nlp.amr.Entity;@34451ed8))
AMR:
(显 / 显出-01, manner, 我 / 我)
(显 / 显出-01, snt11, 厌 / 厌烦-01)
(样 / 样子, mod, 厌 / 厌烦-01)

Decoded in 5,933 microseconds
Sentence: 在 茫茫 的 大 沙漠 上 盲目 地 去 找 水井 ， 真 荒唐 。

Spans:
Span 8-9:  去 => 去-02
Span 0-1:  在 => 在-01
Span 7-8:  地 => 地
Span 3-4:  大 => 大
Span 9-10:  找 => 找-01
Span 10-11:  水井 => 水井
Span 4-5:  沙漠 => 沙漠
Span 6-7:  盲目 => 盲目-01
Span 12-13:  真 => 真
Span 1-2:  茫茫 => 茫茫-01
Span 13-14:  荒唐 => 荒唐-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  去 => 去-01
Oracle Span 3-4:  大 => 大-01
Oracle Span 9-10:  找 => 找-01
Oracle Span 10-11:  水井 => 水井
Oracle Span 4-5:  沙漠 => 沙漠
Oracle Span 6-7:  盲目 => 盲目-01
Oracle Span 1-2:  茫茫 => 茫茫-01
Oracle Span 13-14:  荒唐 => 荒唐-01

Extra span: 真 => 真
Incorrect span: 去 => 去-02
Extra span: 地 => 地
Incorrect span: 大 => 大
Extra span: 在 => 在-01
Missing span: 去 => 去-01
Missing span: 大 => 大-01
Dependencies:
1	在	_	P	P	_	10	prep	_	_
2	茫茫	_	NN	NN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	大	_	JJ	JJ	_	5	amod	_	_
5	沙漠	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	1	plmod	_	_
7	盲目	_	JJ	JJ	_	8	amod	_	_
8	地	_	NN	NN	_	10	nsubj	_	_
9	去	_	MSP	MSP	_	10	prtmod	_	_
10	找	_	VV	VV	_	0	root	_	_
11	水井	_	NN	NN	_	10	dobj	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	真	_	AD	AD	_	14	advmod	_	_
14	荒唐	_	VV	VV	_	10	conj	_	_
15	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 荒唐-01, arg0, x4 / 去-01)
(x4 / 去-01, arg1, x5 / 找-01)
(x5 / 找-01, arg1, x6 / 水井)
(x5 / 找-01, location, x8 / 沙漠)
(x5 / 找-01, manner, x7 / 盲目-01)
(x8 / 沙漠, mod, x10 / 茫茫-01)
(x8 / 沙漠, mod, x9 / 大-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),荒唐,荒唐-01,false), Span(12,13,List(1),真,真,false), Span(10,11,List(2),水井,水井,false), Span(9,10,List(3),找,找-01,false), Span(8,9,List(4),去,去-02,false), Span(7,8,List(5),地,地,false), Span(6,7,List(6),盲目,盲目-01,false), Span(4,5,List(7),沙漠,沙漠,false), Span(3,4,List(8),大,大,false), Span(1,2,List(9),茫茫,茫茫-01,false), Span(0,1,List(10),在,在-01,false)),Map(2 -> 水井, 5 -> 地, 8 -> 大, 7 -> 沙漠, 1 -> 真, 4 -> 去-02, 6 -> 盲目-01, 9 -> 茫茫-01, 0 -> 荒唐-01, 10 -> 在-01, 3 -> 找-01),Map(在 -> 在-01, 大 -> 大, 去 -> 去-02, 水 -> 水井, 地 -> 地, 茫 -> 茫茫-01, 沙 -> 沙漠, 荒 -> 荒唐-01, 找 -> 找-01, 盲 -> 盲目-01, 真 -> 真))),[Ljava.lang.String;@c1050f2,Annotation([Ljava.lang.String;@67bb4dcd,[Ljava.lang.String;@738d37fc,[Ljava.lang.String;@6fa2448b),Annotation([Ljava.lang.String;@61bb1e4d,[Ljava.lang.String;@5c53f292,[Ledu.cmu.lti.nlp.amr.Dependency;@46fb0c33),Annotation([Ljava.lang.String;@3b009e7b,[Ljava.lang.String;@270a620,[Ljava.lang.String;@41f4039e),Annotation([Ljava.lang.String;@5ff00507,[Ljava.lang.String;@603cabc4,[Ledu.cmu.lti.nlp.amr.Entity;@67fa5045))
AMR:
(去 / 去-02, prep-through, 找 / 找-01)
(地 / 地, mod, 盲 / 盲目-01)
(找 / 找-01, beneficiary, 水 / 水井)
(找 / 找-01, location, 沙 / 沙漠)
(找 / 找-01, manner, 盲 / 盲目-01)
(沙 / 沙漠, mod, 大 / 大)
(沙 / 沙漠, mod, 茫 / 茫茫-01)
(茫 / 茫茫-01, manner, 在 / 在-01)
(荒 / 荒唐-01, ARG3, 去 / 去-02)
(荒 / 荒唐-01, degree, 真 / 真)

Decoded in 33,632 microseconds
Sentence: 然而 我们 还是 开始 去 寻找 了 。

Spans:
Span 4-5:  去 => 去-02
Span 5-6:  寻找 => 寻找-01
Span 3-4:  开始 => 开始
Span 1-2:  我们 => 我们
Span 2-3:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-01
Oracle Span 5-6:  寻找 => 寻找-01
Oracle Span 3-4:  开始 => 开始-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 2-3:  还是 => 还是

Incorrect span: 去 => 去-02
Incorrect span: 开始 => 开始
Missing span: 开始 => 开始-01
Missing span: 去 => 去-01
Dependencies:
1	然而	_	AD	AD	_	6	advmod	_	_
2	我们	_	PN	PN	_	6	nsubj	_	_
3	还是	_	AD	AD	_	6	advmod	_	_
4	开始	_	VV	VV	_	6	mmod	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	寻找	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 开始-01, arg0, x3 / 我们)
(x2 / 开始-01, arg1, x6 / 去-01)
(x2 / 开始-01, manner, x4 / 还是)
(x6 / 去-01, arg1, x8 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),寻找,寻找-01,false), Span(4,5,List(1),去,去-02,false), Span(3,4,List(2),开始,开始,false), Span(2,3,List(3),还是,还是,false), Span(1,2,List(4),我们,我们,false)),Map(2 -> 开始, 1 -> 去-02, 4 -> 我们, 0 -> 寻找-01, 3 -> 还是),Map(我 -> 我们, 寻 -> 寻找-01, 去 -> 去-02, 还 -> 还是, 开 -> 开始))),[Ljava.lang.String;@6f347d7,Annotation([Ljava.lang.String;@5974b233,[Ljava.lang.String;@5c134052,[Ljava.lang.String;@69de5bed),Annotation([Ljava.lang.String;@750f64fe,[Ljava.lang.String;@996a546,[Ledu.cmu.lti.nlp.amr.Dependency;@4fc165f6),Annotation([Ljava.lang.String;@545b5ed0,[Ljava.lang.String;@5a7df831,[Ljava.lang.String;@667dcaad),Annotation([Ljava.lang.String;@22d7fd41,[Ljava.lang.String;@2c748a15,[Ledu.cmu.lti.nlp.amr.Entity;@19fd43da))
AMR:
(去 / 去-02, prep-through, 寻 / 寻找-01)
(开 / 开始, ARG4, 去 / 去-02)
(开 / 开始, manner, 还 / 还是)
(开 / 开始, mod, 我 / 我们)

Decoded in 11,692 microseconds
Sentence: 当 我们 默默 地 走 了 好 几 个 小时 以后 ， 天 黑 了 下来 ， 星星 开始 发出 光亮 。

Spans:
Span 15-16:  下来 => 下来-02
Span 20-21:  光亮 => 光亮-01
Span 7-8:  几 => 几
Span 19-20:  发出 => 发出-01
Span 3-4:  地 => 地
Span 12-13:  天 => (temporal-quantity :unit 天)
Span 6-7:  好 => 好-04
Span 9-10:  小时 => 小时
Span 18-19:  开始 => 开始
Span 0-1:  当 => 当-04
Span 1-2:  我们 => 我们
Span 17-18:  星星 => 星星
Span 4-5:  走 => 走-05
Span 13-14:  黑 => 黑-01
Span 2-3:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 20-21:  光亮 => 光亮-01
Oracle Span 7-8:  几 => 几
Oracle Span 19-20:  发出 => 发出-02
Oracle Span 12-13:  天 => 天
Oracle Span 6-7:  好 => 好
Oracle Span 9-10:  小时 => 小时
Oracle Span 18-19:  开始 => 开始-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 17-18:  星星 => 星星
Oracle Span 4-5:  走 => 走-01
Oracle Span 13-14:  黑 => 黑-01
Oracle Span 2-3:  默默 => 默默

Incorrect span: 发出 => 发出-01
Incorrect span: 开始 => 开始
Extra span: 下来 => 下来-02
Incorrect span: 天 => (temporal-quantity :unit 天)
Incorrect span: 好 => 好-04
Incorrect span: 走 => 走-05
Extra span: 地 => 地
Extra span: 当 => 当-04
Missing span: 走 => 走-01
Missing span: 好 => 好
Missing span: 天 => 天
Missing span: 开始 => 开始-01
Missing span: 发出 => 发出-02
Dependencies:
1	当	_	P	P	_	14	prep	_	_
2	我们	_	PN	PN	_	5	nsubj	_	_
3	默默	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	走	_	VV	VV	_	11	lccomp	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	好	_	AD	AD	_	9	advmod	_	_
8	几	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	10	clf	_	_
10	小时	_	NN	NN	_	5	dobj	_	_
11	以后	_	LC	LC	_	1	plmod	_	_
12	,	_	PU	PU	_	14	punct	_	_
13	天	_	M	M	_	14	dep	_	_
14	黑	_	VA	VA	_	20	dep	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	下来	_	VV	VV	_	14	dep	_	_
17	,	_	PU	PU	_	20	punct	_	_
18	星星	_	NN	NN	_	20	nsubj	_	_
19	开始	_	VV	VV	_	20	mmod	_	_
20	发出	_	VV	VV	_	0	root	_	_
21	光亮	_	NN	NN	_	20	dobj	_	_
22	。	_	PU	PU	_	20	punct	_	_

Oracle:
(x11 / 发出-02, arg1, x12 / 光亮-01)
(x13 / 几, mod, x14 / 好)
(x2 / 走-01, arg0, x3 / 我们)
(x2 / 走-01, duration, x4 / 小时)
(x2 / 走-01, manner, x6 / 默默)
(x4 / 小时, quant, x13 / 几)
(x7 / 黑-01, arg0, x8 / 天)
(x9 / 开始-01, arg0, x10 / 星星)
(x9 / 开始-01, arg1, x11 / 发出-02)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),光亮,光亮-01,false), Span(19,20,List(1),发出,发出-01,false), Span(18,19,List(2),开始,开始,false), Span(17,18,List(3),星星,星星,false), Span(15,16,List(4),下来,下来-02,false), Span(13,14,List(5),黑,黑-01,false), Span(12,13,List(7, 6),天,(temporal-quantity :unit 天),false), Span(9,10,List(8),小时,小时,false), Span(7,8,List(9),几,几,false), Span(6,7,List(10),好,好-04,false), Span(4,5,List(11),走,走-05,false), Span(3,4,List(12),地,地,false), Span(2,3,List(13),默默,默默,false), Span(1,2,List(14),我们,我们,false), Span(0,1,List(15),当,当-04,false)),Map(2 -> 开始, 5 -> 黑-01, 12 -> 地, 15 -> 当-04, 8 -> 小时, 7 -> 天, 1 -> 发出-01, 4 -> 下来-02, 11 -> 走-05, 14 -> 我们, 6 -> temporal-quantity, 0 -> 光亮-01, 9 -> 几, 3 -> 星星, 10 -> 好-04, 13 -> 默默),Map(发 -> 发出-01, 星 -> 星星, t -> temporal-quantity, 我 -> 我们, 几 -> 几, 下 -> 下来-02, 小 -> 小时, 地 -> 地, 天 -> 天, 默 -> 默默, 好 -> 好-04, 开 -> 开始, 走 -> 走-05, 光 -> 光亮-01, 黑 -> 黑-01, 当 -> 当-04))),[Ljava.lang.String;@115dcaea,Annotation([Ljava.lang.String;@cfd1075,[Ljava.lang.String;@45117dd,[Ljava.lang.String;@7741771e),Annotation([Ljava.lang.String;@834e986,[Ljava.lang.String;@6cae2e4d,[Ledu.cmu.lti.nlp.amr.Dependency;@604d23fa),Annotation([Ljava.lang.String;@1cc8416a,[Ljava.lang.String;@331ff3ac,[Ljava.lang.String;@2e5e6fc4),Annotation([Ljava.lang.String;@2785db06,[Ljava.lang.String;@79980d8d,[Ledu.cmu.lti.nlp.amr.Entity;@35d60381))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(下 / 下来-02, ARG4, 黑 / 黑-01)
(几 / 几, mod, 好 / 好-04)
(发 / 发出-01, ARG4, 下 / 下来-02)
(发 / 发出-01, prep-within, 光 / 光亮-01)
(小 / 小时, quant, 几 / 几)
(开 / 开始, mod, 发 / 发出-01)
(开 / 开始, mod, 星 / 星星)
(当 / 当-04, ARG4, 走 / 走-05)
(走 / 走-05, ARG1, 地 / 地)
(走 / 走-05, ARG3, 我 / 我们)
(走 / 走-05, duration, 小 / 小时)
(走 / 走-05, manner, 默 / 默默)
(黑 / 黑-01, ARG3, t / temporal-quantity)
(黑 / 黑-01, age, 当 / 当-04)

Decoded in 78,750 microseconds
Sentence: 由于 渴 我 有点 发烧 ， 我 看 着 这些 星星 ， 象是 在 做梦 一样 。

Spans:
Span 15-16:  一样 => 一样
Span 14-15:  做梦 => 做梦-01
Span 4-5:  发烧 => 发烧-01
Span 13-14:  在 => 在-01
Span 6-7:  我 => 我
Span 2-3:  我 => 我
Span 10-11:  星星 => 星星
Span 3-4:  有点 => 有点-01
Span 1-2:  渴 => 渴-01
Span 7-8:  看 => 看-10
Span 9-10:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 14-15:  做梦 => 做梦-01
Oracle Span 4-5:  发烧 => 发烧-01
Oracle Span 2-3:  我 => 我
Oracle Span 10-11:  星星 => 星星
Oracle Span 3-4:  有点 => 有点
Oracle Span 1-2:  渴 => 渴-01
Oracle Span 7-8:  看 => 看-02
Oracle Span 9-10:  这些 => 这些

Extra span: 一样 => 一样
Extra span: 在 => 在-01
Incorrect span: 看 => 看-10
Extra span: 我 => 我
Incorrect span: 有点 => 有点-01
Missing span: 有点 => 有点
Missing span: 看 => 看-02
Dependencies:
1	由于	_	P	P	_	8	prep	_	_
2	渴	_	VV	VV	_	1	pccomp	_	_
3	我	_	PN	PN	_	5	nn	_	_
4	有点	_	NN	NN	_	5	nn	_	_
5	发烧	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	我	_	PN	PN	_	8	nsubj	_	_
8	看	_	VV	VV	_	0	root	_	_
9	着	_	AS	AS	_	8	asp	_	_
10	这些	_	DT	DT	_	11	det	_	_
11	星星	_	NN	NN	_	8	dobj	_	_
12	,	_	PU	PU	_	8	punct	_	_
13	象是	_	AD	AD	_	16	advmod	_	_
14	在	_	P	P	_	16	prep	_	_
15	做梦	_	NR	NR	_	14	pobj	_	_
16	一样	_	VA	VA	_	8	conj	_	_
17	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x15 / 发烧-01, arg0, x16 / 我)
(x15 / 发烧-01, cause, x18 / 渴-01)
(x15 / 发烧-01, degree, x17 / 有点)
(x25 / 看-02, arg1, x27 / 星星)
(x27 / 星星, mod, x28 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),一样,一样,false), Span(14,15,List(1),做梦,做梦-01,false), Span(13,14,List(2),在,在-01,false), Span(10,11,List(3),星星,星星,false), Span(9,10,List(4),这些,这些,false), Span(7,8,List(5),看,看-10,false), Span(6,7,List(6),我,我,false), Span(4,5,List(7),发烧,发烧-01,false), Span(3,4,List(8),有点,有点-01,false), Span(2,3,List(9),我,我,false), Span(1,2,List(10),渴,渴-01,false)),Map(2 -> 在-01, 5 -> 看-10, 8 -> 有点-01, 7 -> 发烧-01, 1 -> 做梦-01, 4 -> 这些, 6 -> 我, 9 -> 我, 0 -> 一样, 10 -> 渴-01, 3 -> 星星),Map(发 -> 发烧-01, 星 -> 星星, 在 -> 在-01, 我 -> 我, 渴 -> 渴-01, 这 -> 这些, 我2 -> 我, 看 -> 看-10, 做 -> 做梦-01, 一 -> 一样, 有 -> 有点-01))),[Ljava.lang.String;@68ab6ab0,Annotation([Ljava.lang.String;@61ffd148,[Ljava.lang.String;@58324c9f,[Ljava.lang.String;@5d7d8613),Annotation([Ljava.lang.String;@6eb089e6,[Ljava.lang.String;@715a70e9,[Ledu.cmu.lti.nlp.amr.Dependency;@3bc69ce9),Annotation([Ljava.lang.String;@abad89c,[Ljava.lang.String;@602f8f94,[Ljava.lang.String;@42507640),Annotation([Ljava.lang.String;@4dfe8b37,[Ljava.lang.String;@11dcd42c,[Ledu.cmu.lti.nlp.amr.Entity;@d13baac))
AMR:
(做 / 做梦-01, ARG1, 一 / 一样)
(发 / 发烧-01, ARG0, 我 / 我)
(发 / 发烧-01, ARG4, 渴 / 渴-01)
(发 / 发烧-01, degree, 有 / 有点-01)
(发 / 发烧-01, manner, 我2 / 我)
(在 / 在-01, ARG1, 做 / 做梦-01)
(在 / 在-01, ARG3, 看 / 看-10)
(星 / 星星, mod, 这 / 这些)
(看 / 看-10, op, 我 / 我)
(看 / 看-10, snt3, 星 / 星星)

Decoded in 38,820 microseconds
Sentence: 小 王子 的 话 在 我 的 脑海 中 跳来跳去 。 “ 你 也 渴 吗 ？ ”

Spans:
Span 13-14:  也 => 也
Span 12-13:  你 => 你
Span 4-5:  在 => 在-01
Span 0-1:  小 => 小
Span 5-6:  我 => 我
Span 14-15:  渴 => 渴-01
Span 1-2:  王子 => 王子
Span 7-8:  脑海 => 脑海
Span 3-4:  话 => 话-01
Span 9-10:  跳来跳去 => 跳来跳去

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 12-13:  你 => 你
Oracle Span 0-1:  小 => 小-01
Oracle Span 5-6:  我 => 我
Oracle Span 14-15:  渴 => 渴-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  脑海 => 脑海
Oracle Span 3-4:  话 => 话
Oracle Span 9-10:  跳来跳去 => 跳来跳去

Extra span: 在 => 在-01
Incorrect span: 话 => 话-01
Incorrect span: 小 => 小
Missing span: 话 => 话
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	话	_	NN	NN	_	10	nsubj	_	_
5	在	_	P	P	_	10	prep	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	脑海	_	NN	NN	_	9	lobj	_	_
9	中	_	LC	LC	_	5	plmod	_	_
10	跳来跳去	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	15	punct	_	_
13	你	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	渴	_	VV	VV	_	10	conj	_	_
16	吗	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	10	punct	_	_
18	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 渴-01, arg0, x15 / 你)
(x13 / 渴-01, manner, x14 / 也)
(x2 / 跳来跳去, arg0, x3 / 话)
(x2 / 跳来跳去, location, x6 / 脑海)
(x3 / 话, poss, x4 / 王子)
(x4 / 王子, mod, x5 / 小-01)
(x6 / 脑海, poss, x7 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),渴,渴-01,false), Span(13,14,List(1),也,也,false), Span(12,13,List(2),你,你,false), Span(9,10,List(3),跳来跳去,跳来跳去,false), Span(7,8,List(4),脑海,脑海,false), Span(5,6,List(5),我,我,false), Span(4,5,List(6),在,在-01,false), Span(3,4,List(7),话,话-01,false), Span(1,2,List(8),王子,王子,false), Span(0,1,List(9),小,小,false)),Map(2 -> 你, 5 -> 我, 8 -> 王子, 7 -> 话-01, 1 -> 也, 4 -> 脑海, 6 -> 在-01, 9 -> 小, 0 -> 渴-01, 3 -> 跳来跳去),Map(在 -> 在-01, 我 -> 我, 也 -> 也, 渴 -> 渴-01, 王 -> 王子, 话 -> 话-01, 你 -> 你, 小 -> 小, 脑 -> 脑海, 跳 -> 跳来跳去))),[Ljava.lang.String;@4c302f38,Annotation([Ljava.lang.String;@75aea2ba,[Ljava.lang.String;@2a47597,[Ljava.lang.String;@12f279b5),Annotation([Ljava.lang.String;@5ff6dd3c,[Ljava.lang.String;@5fcd1f0a,[Ledu.cmu.lti.nlp.amr.Dependency;@7e64c1a9),Annotation([Ljava.lang.String;@7fda2001,[Ljava.lang.String;@162c1dfb,[Ljava.lang.String;@21ae657b),Annotation([Ljava.lang.String;@799f916e,[Ljava.lang.String;@576b7c74,[Ledu.cmu.lti.nlp.amr.Entity;@21de60a7))
AMR:
(在 / 在-01, manner, 话 / 话-01)
(渴 / 渴-01, manner, 也 / 也)
(渴 / 渴-01, poss, 你 / 你)
(王 / 王子, mod, 小 / 小)
(脑 / 脑海, poss, 在 / 在-01)
(脑 / 脑海, poss, 我 / 我)
(话 / 话-01, value, 王 / 王子)
(跳 / 跳来跳去, location, 脑 / 脑海)
(跳 / 跳来跳去, purpose, 渴 / 渴-01)

Decoded in 29,261 microseconds
Sentence: 我 问 他 。

Spans:
Span 2-3:  他 => 他
Span 0-1:  我 => 我
Span 1-2:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  问 => 问-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	问	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	2	ccomp	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 问-01, arg0, x2 / 我)
(x0 / 问-01, arg2, x3 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),他,他,false), Span(1,2,List(1),问,问-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 问-01, 0 -> 他),Map(我 -> 我, 他 -> 他, 问 -> 问-01))),[Ljava.lang.String;@73894c5a,Annotation([Ljava.lang.String;@7698b7a4,[Ljava.lang.String;@7a9ceddf,[Ljava.lang.String;@28157173),Annotation([Ljava.lang.String;@11c713b7,[Ljava.lang.String;@2251b3bc,[Ledu.cmu.lti.nlp.amr.Dependency;@3fbe503c),Annotation([Ljava.lang.String;@3c232051,[Ljava.lang.String;@15d0d6c9,[Ljava.lang.String;@3ab35b9c),Annotation([Ljava.lang.String;@7741d346,[Ljava.lang.String;@52454457,[Ledu.cmu.lti.nlp.amr.Entity;@4130a648))
AMR:
(问 / 问-01, location, 他 / 他)
(问 / 问-01, value, 我 / 我)

Decoded in 3,918 microseconds
Sentence: 他 却 不 回答 我 的 问题 ，

Spans:
Span 2-3:  不 => 不
Span 0-1:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  问题 => 问题

Extra span: 不 => 不
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	回答	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	,	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 回答-01, arg0, x6 / 他)
(x5 / 回答-01, arg1, x8 / 问题)
(x8 / 问题, poss, x9 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),问题,问题,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),回答,回答-01,false), Span(2,3,List(3),不,不,false), Span(0,1,List(4),他,他,false)),Map(2 -> 回答-01, 1 -> 我, 4 -> 他, 0 -> 问题, 3 -> 不),Map(我 -> 我, 他 -> 他, 不 -> 不, 问 -> 问题, 回 -> 回答-01))),[Ljava.lang.String;@61ff6a49,Annotation([Ljava.lang.String;@18dd5ed3,[Ljava.lang.String;@6042d663,[Ljava.lang.String;@24043ec5),Annotation([Ljava.lang.String;@3e33b52e,[Ljava.lang.String;@4c6a4ffd,[Ledu.cmu.lti.nlp.amr.Dependency;@3aed69dd),Annotation([Ljava.lang.String;@3f1a9a53,[Ljava.lang.String;@1ca3d25b,[Ljava.lang.String;@2287395),Annotation([Ljava.lang.String;@535a518c,[Ljava.lang.String;@38f981b6,[Ledu.cmu.lti.nlp.amr.Entity;@3a4aadf8))
AMR:
(回 / 回答-01, ARG0, 问 / 问题)
(回 / 回答-01, manner, 不 / 不)
(回 / 回答-01, op, 他 / 他)
(问 / 问题, poss, 我 / 我)

Decoded in 8,818 microseconds
Sentence: 只是 对 我 说 ： “ 水 对 心 也 是 有 益处 的 … ”

Spans:
Span 9-10:  也 => 也
Span 0-1:  只是 => 只是
Span 7-8:  对 => 对-02
Span 1-2:  对 => 对-02
Span 8-9:  心 => 心
Span 2-3:  我 => 我
Span 10-11:  是 => 是-04
Span 11-12:  有 => 有-06
Span 6-7:  水 => 水
Span 12-13:  益处 => 益处
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  只是 => 只是
Oracle Span 8-9:  心 => 心
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  有 => 有-05
Oracle Span 6-7:  水 => 水
Oracle Span 12-13:  益处 => 益处
Oracle Span 3-4:  说 => 说-01

Incorrect span: 有 => 有-06
Extra span: 是 => 是-04
Extra span: 也 => 也
Extra span: 对 => 对-02
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Missing span: 有 => 有-05
Dependencies:
1	只是	_	AD	AD	_	4	advmod	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	11	punct	_	_
7	水	_	NN	NN	_	11	nsubj	_	_
8	对	_	P	P	_	11	prep	_	_
9	心	_	NN	NN	_	8	pobj	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	是	_	VC	VC	_	4	ccomp	_	_
12	有	_	VE	VE	_	15	rcmod	_	_
13	益处	_	NN	NN	_	12	dobj	_	_
14	的	_	DEC	DEC	_	12	cpm	_	_
15	…	_	NN	NN	_	11	attr	_	_
16	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 说-01, arg1, x13 / 有-05)
(x0 / 说-01, arg3, x12 / 我)
(x0 / 说-01, manner, x11 / 只是)
(x13 / 有-05, arg0, x14 / 水)
(x13 / 有-05, arg1, x15 / 益处)
(x13 / 有-05, beneficiary, x16 / 心)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),益处,益处,false), Span(11,12,List(1),有,有-06,false), Span(10,11,List(2),是,是-04,false), Span(9,10,List(3),也,也,false), Span(8,9,List(4),心,心,false), Span(7,8,List(5),对,对-02,false), Span(6,7,List(6),水,水,false), Span(3,4,List(7),说,说-02,false), Span(2,3,List(8),我,我,false), Span(1,2,List(9),对,对-02,false), Span(0,1,List(10),只是,只是,false)),Map(2 -> 是-04, 5 -> 对-02, 8 -> 我, 7 -> 说-02, 1 -> 有-06, 4 -> 心, 6 -> 水, 9 -> 对-02, 0 -> 益处, 10 -> 只是, 3 -> 也),Map(对2 -> 对-02, 我 -> 我, 也 -> 也, 水 -> 水, 心 -> 心, 益 -> 益处, 只 -> 只是, 说 -> 说-02, 对 -> 对-02, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@7bbfc5ff,Annotation([Ljava.lang.String;@7a682d35,[Ljava.lang.String;@ee8e7ff,[Ljava.lang.String;@61a2aeb7),Annotation([Ljava.lang.String;@64b70f41,[Ljava.lang.String;@5f8d9767,[Ledu.cmu.lti.nlp.amr.Dependency;@16134476),Annotation([Ljava.lang.String;@62b09715,[Ljava.lang.String;@3e214105,[Ljava.lang.String;@da4cf09),Annotation([Ljava.lang.String;@1980a3f,[Ljava.lang.String;@67f63d26,[Ledu.cmu.lti.nlp.amr.Entity;@536b71b4))
AMR:
(对 / 对-02, beneficiary, 心 / 心)
(对 / 对-02, manner, 水 / 水)
(对2 / 对-02, manner, 只 / 只是)
(是 / 是-04, manner, 也 / 也)
(是 / 是-04, manner, 心 / 心)
(有 / 有-06, degree, 益 / 益处)
(有 / 有-06, manner, 是 / 是-04)
(说 / 说-02, manner, 只 / 只是)
(说 / 说-02, op, 水 / 水)
(说 / 说-02, poss, 我 / 我)

Decoded in 33,246 microseconds
Sentence: 我 不 懂 他 的 话 是 什么 意思 ， 可 我 也 不 做声 …

Spans:
Span 13-14:  不 => 不
Span 1-2:  不 => 不
Span 12-13:  也 => 也
Span 7-8:  什么 => 什么
Span 3-4:  他 => 他
Span 14-15:  做声 => 做声
Span 10-11:  可 => 可-01
Span 8-9:  意思 => 意思-01
Span 2-3:  懂 => 懂-01
Span 11-12:  我 => 我
Span 0-1:  我 => 我
Span 6-7:  是 => 是-04
Span 5-6:  话 => 话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  也 => 也
Oracle Span 3-4:  他 => 他
Oracle Span 14-15:  做声 => 做声
Oracle Span 2-3:  懂 => 懂-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  话 => 话

Extra span: 不 => 不
Extra span: 我 => 我
Extra span: 可 => 可-01
Extra span: 意思 => 意思-01
Extra span: 什么 => 什么
Extra span: 是 => 是-04
Incorrect span: 话 => 话-01
Extra span: 不 => 不
Missing span: 话 => 话
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	懂	_	VV	VV	_	0	root	_	_
4	他	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	话	_	NN	NN	_	3	dobj	_	_
7	是	_	VC	VC	_	3	conj	_	_
8	什么	_	DT	DT	_	9	det	_	_
9	意思	_	NN	NN	_	7	attr	_	_
10	,	_	PU	PU	_	3	punct	_	_
11	可	_	VV	VV	_	3	conj	_	_
12	我	_	PN	PN	_	15	nsubj	_	_
13	也	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	做声	_	VV	VV	_	16	rcmod	_	_
16	…	_	NN	NN	_	11	dobj	_	_

Oracle:
(x2 / 懂-01, arg0, x4 / 我)
(x2 / 懂-01, arg1, x5 / 话)
(x5 / 话, poss, x6 / 他)
(x7 / 做声, manner, x9 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),做声,做声,false), Span(13,14,List(1),不,不,false), Span(12,13,List(2),也,也,false), Span(11,12,List(3),我,我,false), Span(10,11,List(4),可,可-01,false), Span(8,9,List(5),意思,意思-01,false), Span(7,8,List(6),什么,什么,false), Span(6,7,List(7),是,是-04,false), Span(5,6,List(8),话,话-01,false), Span(3,4,List(9),他,他,false), Span(2,3,List(10),懂,懂-01,false), Span(1,2,List(11),不,不,false), Span(0,1,List(12),我,我,false)),Map(2 -> 也, 5 -> 意思-01, 12 -> 我, 8 -> 话-01, 7 -> 是-04, 1 -> 不, 4 -> 可-01, 11 -> 不, 6 -> 什么, 0 -> 做声, 9 -> 他, 3 -> 我, 10 -> 懂-01),Map(也 -> 也, 我 -> 我, 话 -> 话-01, 我2 -> 我, 意 -> 意思-01, 他 -> 他, 不 -> 不, 不2 -> 不, 懂 -> 懂-01, 做 -> 做声, 什 -> 什么, 是 -> 是-04, 可 -> 可-01))),[Ljava.lang.String;@789c3057,Annotation([Ljava.lang.String;@39941489,[Ljava.lang.String;@6f5d0190,[Ljava.lang.String;@67332b1e),Annotation([Ljava.lang.String;@7e34b127,[Ljava.lang.String;@679dd234,[Ledu.cmu.lti.nlp.amr.Dependency;@60cb1ed6),Annotation([Ljava.lang.String;@1e5eb20a,[Ljava.lang.String;@4538856f,[Ljava.lang.String;@4c3de38e),Annotation([Ljava.lang.String;@74b86971,[Ljava.lang.String;@1f9d4b0e,[Ledu.cmu.lti.nlp.amr.Entity;@1e8fb66f))
AMR:
(不 / 不, manner, 也 / 也)
(不2 / 不, poss, 我2 / 我)
(什 / 什么, mod, 是 / 是-04)
(做 / 做声, mod, 不 / 不)
(可 / 可-01, manner, 意 / 意思-01)
(可 / 可-01, snt1, 不 / 不)
(可 / 可-01, snt11, 我 / 我)
(意 / 意思-01, manner, 是 / 是-04)
(懂 / 懂-01, snt11, 他 / 他)
(懂 / 懂-01, time, 不2 / 不)
(是 / 是-04, manner, 话 / 话-01)
(话 / 话-01, manner, 懂 / 懂-01)

Decoded in 47,180 microseconds
Sentence: 我 知道 不 应该 去 问 他 。

Spans:
Span 2-3:  不 => 不
Span 6-7:  他 => 他
Span 4-5:  去 => 去-02
Span 3-4:  应该 => 应该-01
Span 0-1:  我 => 我
Span 1-2:  知道 => 知道-01
Span 5-6:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  去 => 去-01
Oracle Span 3-4:  应该 => 应该-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  知道 => 知道-01
Oracle Span 5-6:  问 => 问-01

Extra span: 他 => 他
Incorrect span: 去 => 去-02
Incorrect span: 应该 => 应该-01
Extra span: 不 => 不
Missing span: 应该 => 应该-02
Missing span: 去 => 去-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	知道	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	应该	_	VV	VV	_	2	ccomp	_	_
5	去	_	MSP	MSP	_	6	prtmod	_	_
6	问	_	VV	VV	_	2	dep	_	_
7	他	_	PN	PN	_	6	ccomp	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	我	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 知道-01, arg0, x2 / 我)
(x0 / 知道-01, arg1, x3 / 应该-02)
(x3 / 应该-02, arg0, x5 / 去-01)
(x5 / 去-01, arg1, x7 / 问-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),他,他,false), Span(5,6,List(1),问,问-01,false), Span(4,5,List(2),去,去-02,false), Span(3,4,List(3),应该,应该-01,false), Span(2,3,List(4),不,不,false), Span(1,2,List(5),知道,知道-01,false), Span(0,1,List(6),我,我,false)),Map(2 -> 去-02, 5 -> 知道-01, 1 -> 问-01, 4 -> 不, 6 -> 我, 0 -> 他, 3 -> 应该-01),Map(我 -> 我, 去 -> 去-02, 他 -> 他, 不 -> 不, 知 -> 知道-01, 问 -> 问-01, 应 -> 应该-01))),[Ljava.lang.String;@3d8d17a3,Annotation([Ljava.lang.String;@ac91282,[Ljava.lang.String;@7f79edee,[Ljava.lang.String;@1ca610a0),Annotation([Ljava.lang.String;@49433c98,[Ljava.lang.String;@b5c6a30,[Ledu.cmu.lti.nlp.amr.Dependency;@3bfae028),Annotation([Ljava.lang.String;@1775c4e7,[Ljava.lang.String;@47829d6d,[Ljava.lang.String;@2f677247),Annotation([Ljava.lang.String;@43f03c23,[Ljava.lang.String;@7a1b8a46,[Ledu.cmu.lti.nlp.amr.Entity;@2921199d))
AMR:
(应 / 应该-01, manner, 不 / 不)
(应 / 应该-01, snt11, 去 / 去-02)
(知 / 知道-01, decade, 我 / 我)
(知 / 知道-01, direction, 不 / 不)
(问 / 问-01, manner, 去 / 去-02)
(问 / 问-01, prep-along-with, 他 / 他)

Decoded in 24,323 microseconds
Sentence: 他 累 了 ，

Spans:
Span 0-1:  他 => 他
Span 1-2:  累 => 累-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  累 => 累-02

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	累	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 累-02, arg0, x2 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),累,累-02,false), Span(0,1,List(1),他,他,false)),Map(1 -> 他, 0 -> 累-02),Map(他 -> 他, 累 -> 累-02))),[Ljava.lang.String;@3d40a3b4,Annotation([Ljava.lang.String;@7f13811b,[Ljava.lang.String;@59fc6d05,[Ljava.lang.String;@78307a56),Annotation([Ljava.lang.String;@40d52be7,[Ljava.lang.String;@23ad71bf,[Ledu.cmu.lti.nlp.amr.Dependency;@1983b48a),Annotation([Ljava.lang.String;@629a9f26,[Ljava.lang.String;@b791a81,[Ljava.lang.String;@4391a2d8),Annotation([Ljava.lang.String;@47b269c4,[Ljava.lang.String;@71e7adbb,[Ledu.cmu.lti.nlp.amr.Entity;@32091c14))
AMR:
(累 / 累-02, prep-from, 他 / 他)

Decoded in 4,407 microseconds
Sentence: 他 坐 下来 。

Spans:
Span 2-3:  下来 => 下来-02
Span 0-1:  他 => 他
Span 1-2:  坐 => 坐-03

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  下来 => 下来-01
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  坐 => 坐-01

Incorrect span: 下来 => 下来-02
Incorrect span: 坐 => 坐-03
Missing span: 坐 => 坐-01
Missing span: 下来 => 下来-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	坐	_	VV	VV	_	0	root	_	_
3	下来	_	VV	VV	_	2	comod	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x4 / 他)
(x0 / 坐-01, direction, x3 / 下来-01)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),下来,下来-02,false), Span(1,2,List(1),坐,坐-03,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 坐-03, 0 -> 下来-02),Map(下 -> 下来-02, 他 -> 他, 坐 -> 坐-03))),[Ljava.lang.String;@7c40ffef,Annotation([Ljava.lang.String;@286855ea,[Ljava.lang.String;@64aeaf29,[Ljava.lang.String;@1e3df614),Annotation([Ljava.lang.String;@6579cdbb,[Ljava.lang.String;@fd413fb,[Ledu.cmu.lti.nlp.amr.Dependency;@1e1232cf),Annotation([Ljava.lang.String;@6f6efa4f,[Ljava.lang.String;@4451f60c,[Ljava.lang.String;@6b357eb6),Annotation([Ljava.lang.String;@64bebd55,[Ljava.lang.String;@7c1a8f0f,[Ledu.cmu.lti.nlp.amr.Entity;@3730f716))
AMR:
(他 / 他, ARG6, 下 / 下来-02)
(坐 / 坐-03, direction, 下 / 下来-02)

Decoded in 4,992 microseconds
Sentence: 我 在 他 身 旁 坐下 。

Spans:
Span 2-3:  他 => 他
Span 1-2:  在 => 在-01
Span 5-6:  坐下 => 坐下-01
Span 0-1:  我 => 我
Span 4-5:  旁 => 旁

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 5-6:  坐下 => 坐下-01
Oracle Span 0-1:  我 => 我

Extra span: 旁 => 旁
Extra span: 在 => 在-01
Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	在	_	P	P	_	6	prep	_	_
3	他	_	PN	PN	_	4	nn	_	_
4	身	_	NN	NN	_	5	lobj	_	_
5	旁	_	LC	LC	_	2	plmod	_	_
6	坐下	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 坐下-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),坐下,坐下-01,false), Span(4,5,List(1),旁,旁,false), Span(2,3,List(2),他,他,false), Span(1,2,List(3),在,在-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 他, 1 -> 旁, 4 -> 我, 0 -> 坐下-01, 3 -> 在-01),Map(在 -> 在-01, 我 -> 我, 他 -> 他, 旁 -> 旁, 坐 -> 坐下-01))),[Ljava.lang.String;@7730ef88,Annotation([Ljava.lang.String;@66f5a02e,[Ljava.lang.String;@4e3f2908,[Ljava.lang.String;@7e87ef9e),Annotation([Ljava.lang.String;@e3b0369,[Ljava.lang.String;@45843650,[Ledu.cmu.lti.nlp.amr.Dependency;@72443081),Annotation([Ljava.lang.String;@33feda48,[Ljava.lang.String;@6588b715,[Ljava.lang.String;@15a3b42),Annotation([Ljava.lang.String;@52c9d3d0,[Ljava.lang.String;@17207f5b,[Ledu.cmu.lti.nlp.amr.Entity;@373052b5))
AMR:
(在 / 在-01, ARG0, 旁 / 旁)
(在 / 在-01, ARG5, 我 / 我)
(坐 / 坐下-01, location, 旁 / 旁)
(旁 / 旁, ARG4, 他 / 他)

Decoded in 15,778 microseconds
Sentence: 沉默 了 一会 ， 他 又 说道 ： “ 星星 是 很 美 的 ， 因为 有 一 朵 人们 看 不 到 的 花… ”

Spans:
Span 2-3:  一会 => 一会
Span 21-22:  不 => 不
Span 19-20:  人们 => 人们
Span 4-5:  他 => 他
Span 22-23:  到 => 到-01
Span 5-6:  又 => 又
Span 11-12:  很 => 很
Span 9-10:  星星 => 星星
Span 10-11:  是 => 是-04
Span 16-17:  有 => 有-06
Span 0-1:  沉默 => 沉默-01
Span 20-21:  看 => 看-10
Span 12-13:  美 => 美-01
Span 24-25:  花 => 花-01
Span 6-7:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  一会 => 一会
Oracle Span 19-20:  人们 => 人们
Oracle Span 4-5:  他 => 他
Oracle Span 5-6:  又 => 又
Oracle Span 11-12:  很 => 很
Oracle Span 9-10:  星星 => 星星
Oracle Span 16-17:  有 => 有-04
Oracle Span 0-1:  沉默 => 沉默-01
Oracle Span 12-13:  美 => 美-01
Oracle Span 24-25:  花 => 花

Incorrect span: 花 => 花-01
Extra span: 到 => 到-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Incorrect span: 有 => 有-06
Extra span: 是 => 是-04
Extra span: 说道 => 说道
Missing span: 有 => 有-04
Missing span: 花 => 花
Dependencies:
1	沉默	_	VV	VV	_	0	root	_	_
2	了	_	AS	AS	_	1	asp	_	_
3	一会	_	CD	CD	_	1	dep	_	_
4	,	_	PU	PU	_	1	punct	_	_
5	他	_	PN	PN	_	7	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说道	_	VV	VV	_	1	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	星星	_	NN	NN	_	11	nsubj	_	_
11	是	_	VC	VC	_	7	ccomp	_	_
12	很	_	AD	AD	_	13	advmod	_	_
13	美	_	JJ	JJ	_	11	dep	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	,	_	PU	PU	_	11	punct	_	_
16	因为	_	P	P	_	21	prep	_	_
17	有	_	VE	VE	_	16	pccomp	_	_
18	一	_	CD	CD	_	19	nummod	_	_
19	朵	_	M	M	_	20	clf	_	_
20	人们	_	NN	NN	_	17	dobj	_	_
21	看	_	VV	VV	_	11	dep	_	_
22	不	_	AD	AD	_	23	neg	_	_
23	到	_	VV	VV	_	25	rcmod	_	_
24	的	_	DEC	DEC	_	23	cpm	_	_
25	花…	_	NN	NN	_	21	dobj	_	_
26	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x2 / 沉默-01, arg0, x3 / 他)
(x2 / 沉默-01, duration, x4 / 一会)
(x8 / 美-01, arg0, x9 / 星星)
(x8 / 美-01, cause, x17 / 有-04)
(x8 / 美-01, degree, x10 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),花,花-01,false), Span(22,23,List(1),到,到-01,false), Span(21,22,List(2),不,不,false), Span(20,21,List(3),看,看-10,false), Span(19,20,List(4),人们,人们,false), Span(16,17,List(5),有,有-06,false), Span(12,13,List(6),美,美-01,false), Span(11,12,List(7),很,很,false), Span(10,11,List(8),是,是-04,false), Span(9,10,List(9),星星,星星,false), Span(6,7,List(10),说道,说道,false), Span(5,6,List(11),又,又,false), Span(4,5,List(12),他,他,false), Span(2,3,List(13),一会,一会,false), Span(0,1,List(14),沉默,沉默-01,false)),Map(2 -> 不, 5 -> 有-06, 12 -> 他, 8 -> 是-04, 7 -> 很, 1 -> 到-01, 4 -> 人们, 11 -> 又, 14 -> 沉默-01, 6 -> 美-01, 0 -> 花-01, 9 -> 星星, 3 -> 看-10, 10 -> 说道, 13 -> 一会),Map(美 -> 美-01, 又 -> 又, 沉 -> 沉默-01, 星 -> 星星, 很 -> 很, 他 -> 他, 花 -> 花-01, 到 -> 到-01, 不 -> 不, 说 -> 说道, 看 -> 看-10, 人 -> 人们, 是 -> 是-04, 一 -> 一会, 有 -> 有-06))),[Ljava.lang.String;@67e0ff3a,Annotation([Ljava.lang.String;@7b2bf745,[Ljava.lang.String;@6fe595dc,[Ljava.lang.String;@5af5d76f),Annotation([Ljava.lang.String;@3a8cea24,[Ljava.lang.String;@1eb9a3ef,[Ledu.cmu.lti.nlp.amr.Dependency;@5d318e91),Annotation([Ljava.lang.String;@298b64f7,[Ljava.lang.String;@740b6628,[Ljava.lang.String;@27fe059d),Annotation([Ljava.lang.String;@766a52f5,[Ljava.lang.String;@4342c13,[Ledu.cmu.lti.nlp.amr.Entity;@2ba1209b))
AMR:
(到 / 到-01, degree, 不 / 不)
(到 / 到-01, duration, 花 / 花-01)
(是 / 是-04, degree, 说 / 说道)
(是 / 是-04, location, 星 / 星星)
(沉 / 沉默-01, duration, 一 / 一会)
(沉 / 沉默-01, duration, 说 / 说道)
(看 / 看-10, degree, 人 / 人们)
(看 / 看-10, degree, 有 / 有-06)
(看 / 看-10, duration, 不 / 不)
(美 / 美-01, degree, 很 / 很)
(美 / 美-01, degree, 是 / 是-04)
(美 / 美-01, topic, 有 / 有-06)
(说 / 说道, beneficiary, 他 / 他)
(说 / 说道, manner, 又 / 又)

Decoded in 83,736 microseconds
Sentence: 我 回答 道 ： “ 当然 。 ”

Spans:
Span 1-2:  回答 => 回答-01
Span 5-6:  当然 => 当然
Span 0-1:  我 => 我
Span 2-3:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 5-6:  当然 => 当然
Oracle Span 0-1:  我 => 我

Extra span: 道 => 道-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	3	dep	_	_
3	道	_	VV	VV	_	0	root	_	_
4	：	_	PU	PU	_	3	punct	_	_
5	“	_	PU	PU	_	3	punct	_	_
6	当然	_	VA	VA	_	3	ccomp	_	_
7	。	_	PU	PU	_	3	punct	_	_
8	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)
(x0 / 回答-01, arg2, x3 / 当然)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),当然,当然,false), Span(2,3,List(1),道,道-01,false), Span(1,2,List(2),回答,回答-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 回答-01, 1 -> 道-01, 0 -> 当然, 3 -> 我),Map(我 -> 我, 道 -> 道-01, 回 -> 回答-01, 当 -> 当然))),[Ljava.lang.String;@7c241a9f,Annotation([Ljava.lang.String;@58fd1214,[Ljava.lang.String;@7d8cf9ac,[Ljava.lang.String;@5f0bab7e),Annotation([Ljava.lang.String;@3a7b2e2,[Ljava.lang.String;@337a6d30,[Ledu.cmu.lti.nlp.amr.Dependency;@2921a36a),Annotation([Ljava.lang.String;@2b73bd6b,[Ljava.lang.String;@157d3a45,[Ljava.lang.String;@750ed637),Annotation([Ljava.lang.String;@5190010f,[Ljava.lang.String;@673e76b3,[Ledu.cmu.lti.nlp.amr.Entity;@1bedc703))
AMR:
(回 / 回答-01, manner, 我 / 我)
(道 / 道-01, manner, 回 / 回答-01)
(道 / 道-01, snt1, 当 / 当然)

Decoded in 9,584 microseconds
Sentence: 而 我 默默 地 看 着 月光 下 沙漠 的 褶皱 。

Spans:
Span 7-8:  下 => 下-07
Span 3-4:  地 => 地
Span 1-2:  我 => 我
Span 6-7:  月光 => 月光
Span 8-9:  沙漠 => 沙漠
Span 4-5:  看 => 看-10
Span 10-11:  褶皱 => 褶皱
Span 2-3:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  月光 => 月光
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 4-5:  看 => 看-02
Oracle Span 10-11:  褶皱 => 褶皱
Oracle Span 2-3:  默默 => 默默

Extra span: 下 => 下-07
Incorrect span: 看 => 看-10
Extra span: 地 => 地
Missing span: 看 => 看-02
Dependencies:
1	而	_	AD	AD	_	5	advmod	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	默默	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	看	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	月光	_	NN	NN	_	8	lobj	_	_
8	下	_	LC	LC	_	9	dep	_	_
9	沙漠	_	NN	NN	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	褶皱	_	NN	NN	_	5	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 看-02, arg0, x3 / 我)
(x2 / 看-02, arg1, x5 / 褶皱)
(x2 / 看-02, manner, x4 / 默默)
(x5 / 褶皱, poss, x6 / 沙漠)
(x6 / 沙漠, time, x7 / 月光)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),褶皱,褶皱,false), Span(8,9,List(1),沙漠,沙漠,false), Span(7,8,List(2),下,下-07,false), Span(6,7,List(3),月光,月光,false), Span(4,5,List(4),看,看-10,false), Span(3,4,List(5),地,地,false), Span(2,3,List(6),默默,默默,false), Span(1,2,List(7),我,我,false)),Map(2 -> 下-07, 5 -> 地, 7 -> 我, 1 -> 沙漠, 4 -> 看-10, 6 -> 默默, 0 -> 褶皱, 3 -> 月光),Map(我 -> 我, 月 -> 月光, 下 -> 下-07, 褶 -> 褶皱, 地 -> 地, 默 -> 默默, 看 -> 看-10, 沙 -> 沙漠))),[Ljava.lang.String;@18d11527,Annotation([Ljava.lang.String;@4998e74b,[Ljava.lang.String;@5d878b25,[Ljava.lang.String;@28279a49),Annotation([Ljava.lang.String;@384fda47,[Ljava.lang.String;@3663d0ba,[Ledu.cmu.lti.nlp.amr.Dependency;@575cabf0),Annotation([Ljava.lang.String;@433d9680,[Ljava.lang.String;@566e142,[Ljava.lang.String;@2da81754),Annotation([Ljava.lang.String;@1f992a3a,[Ljava.lang.String;@30bf26df,[Ledu.cmu.lti.nlp.amr.Entity;@261bd7b))
AMR:
(下 / 下-07, ARG1, 沙 / 沙漠)
(下 / 下-07, ARG4, 月 / 月光)
(看 / 看-10, ARG1, 地 / 地)
(看 / 看-10, manner, 默 / 默默)
(看 / 看-10, op, 我 / 我)
(看 / 看-10, snt1, 褶 / 褶皱)
(褶 / 褶皱, poss, 沙 / 沙漠)

Decoded in 26,587 microseconds
Sentence: “ 沙漠 是 美 的 。 ” 他 又 说道 。

Spans:
Span 7-8:  他 => 他
Span 8-9:  又 => 又
Span 2-3:  是 => 是-04
Span 1-2:  沙漠 => 沙漠
Span 3-4:  美 => 美-01
Span 9-10:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  他 => 他
Oracle Span 8-9:  又 => 又
Oracle Span 1-2:  沙漠 => 沙漠
Oracle Span 3-4:  美 => 美-01

Extra span: 说道 => 说道
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	沙漠	_	NN	NN	_	4	nsubj	_	_
3	是	_	VC	VC	_	4	nsubj	_	_
4	美	_	NR	NR	_	10	dep	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_
8	他	_	PN	PN	_	10	nsubj	_	_
9	又	_	AD	AD	_	10	advmod	_	_
10	说道	_	VV	VV	_	0	root	_	_
11	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x4 / 美-01, arg0, x5 / 沙漠)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),说道,说道,false), Span(8,9,List(1),又,又,false), Span(7,8,List(2),他,他,false), Span(3,4,List(3),美,美-01,false), Span(2,3,List(4),是,是-04,false), Span(1,2,List(5),沙漠,沙漠,false)),Map(2 -> 他, 5 -> 沙漠, 1 -> 又, 4 -> 是-04, 0 -> 说道, 3 -> 美-01),Map(美 -> 美-01, 又 -> 又, 他 -> 他, 说 -> 说道, 沙 -> 沙漠, 是 -> 是-04))),[Ljava.lang.String;@6f9e08d4,Annotation([Ljava.lang.String;@390037e7,[Ljava.lang.String;@704067c6,[Ljava.lang.String;@7f4596d0),Annotation([Ljava.lang.String;@6002e944,[Ljava.lang.String;@588545ac,[Ledu.cmu.lti.nlp.amr.Dependency;@2b08772d),Annotation([Ljava.lang.String;@78a8978a,[Ljava.lang.String;@f171912,[Ljava.lang.String;@7d4d8579),Annotation([Ljava.lang.String;@159424e2,[Ljava.lang.String;@29bcf51d,[Ledu.cmu.lti.nlp.amr.Entity;@1e54a6b1))
AMR:
(是 / 是-04, location, 沙 / 沙漠)
(美 / 美-01, degree, 是 / 是-04)
(说 / 说道, manner, 又 / 又)
(说 / 说道, mod, 是 / 是-04)
(说 / 说道, part, 他 / 他)

Decoded in 11,163 microseconds
Sentence: 确实 如此 。

Spans:
Span 1-2:  如此 => 如此
Span 0-1:  确实 => 确实-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  如此 => 如此-01
Oracle Span 0-1:  确实 => 确实-01

Incorrect span: 如此 => 如此
Missing span: 如此 => 如此-01
Dependencies:
1	确实	_	AD	AD	_	2	advmod	_	_
2	如此	_	PN	PN	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 如此-01, manner, x2 / 确实-01)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),如此,如此,false), Span(0,1,List(1),确实,确实-01,false)),Map(1 -> 确实-01, 0 -> 如此),Map(确 -> 确实-01, 如 -> 如此))),[Ljava.lang.String;@f238e4f,Annotation([Ljava.lang.String;@3b24087d,[Ljava.lang.String;@75fe1619,[Ljava.lang.String;@4e245739),Annotation([Ljava.lang.String;@5d66e944,[Ljava.lang.String;@469a7575,[Ledu.cmu.lti.nlp.amr.Dependency;@4351ed61),Annotation([Ljava.lang.String;@2f20f7ad,[Ljava.lang.String;@45e617c4,[Ljava.lang.String;@5042e3d0),Annotation([Ljava.lang.String;@1c34365c,[Ljava.lang.String;@348137e8,[Ledu.cmu.lti.nlp.amr.Entity;@412c5e8b))
AMR:
(如 / 如此, manner, 确 / 确实-01)

Decoded in 4,192 microseconds
Sentence: 我 一直 很 喜欢 沙漠 。

Spans:
Span 1-2:  一直 => 一直
Span 3-4:  喜欢 => 喜欢-01
Span 2-3:  很 => 很
Span 0-1:  我 => 我
Span 4-5:  沙漠 => 沙漠

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  一直 => 一直
Oracle Span 3-4:  喜欢 => 喜欢-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  沙漠 => 沙漠

Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	一直	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	喜欢	_	VV	VV	_	0	root	_	_
5	沙漠	_	NN	NN	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 喜欢-01, arg0, x2 / 我)
(x0 / 喜欢-01, arg1, x5 / 沙漠)
(x0 / 喜欢-01, degree, x4 / 很)
(x0 / 喜欢-01, duration, x3 / 一直)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),沙漠,沙漠,false), Span(3,4,List(1),喜欢,喜欢-01,false), Span(2,3,List(2),很,很,false), Span(1,2,List(3),一直,一直,false), Span(0,1,List(4),我,我,false)),Map(2 -> 很, 1 -> 喜欢-01, 4 -> 我, 0 -> 沙漠, 3 -> 一直),Map(我 -> 我, 很 -> 很, 喜 -> 喜欢-01, 沙 -> 沙漠, 一 -> 一直))),[Ljava.lang.String;@637791d,Annotation([Ljava.lang.String;@3b0c3951,[Ljava.lang.String;@60f77af,[Ljava.lang.String;@2574a9e3),Annotation([Ljava.lang.String;@18b6d3c1,[Ljava.lang.String;@422ab737,[Ledu.cmu.lti.nlp.amr.Dependency;@3fe512d2),Annotation([Ljava.lang.String;@3fde8f7c,[Ljava.lang.String;@11d86b9d,[Ljava.lang.String;@6dce59e),Annotation([Ljava.lang.String;@11381415,[Ljava.lang.String;@5ad6cc21,[Ledu.cmu.lti.nlp.amr.Entity;@800d065))
AMR:
(喜 / 喜欢-01, ARG5, 沙 / 沙漠)
(喜 / 喜欢-01, degree, 很 / 很)
(喜 / 喜欢-01, duration, 一 / 一直)
(喜 / 喜欢-01, op, 我 / 我)

Decoded in 14,809 microseconds
Sentence: 坐 在 一 个 沙丘 上 ， 什么 也 看 不 见 、 听 不 见 。

Spans:
Span 14-15:  不 => 不
Span 10-11:  不 => 不
Span 8-9:  也 => 也
Span 7-8:  什么 => 什么
Span 13-14:  听 => 听-02
Span 1-2:  在 => 在-01
Span 0-1:  坐 => 坐-03
Span 4-5:  沙丘 => 沙丘
Span 9-10:  看 => 看-10
Span 15-16:  见 => 见-01
Span 11-12:  见 => 见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  什么 => 什么
Oracle Span 0-1:  坐 => 坐-01
Oracle Span 4-5:  沙丘 => 沙丘

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 听 => 听-02
Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 也 => 也
Extra span: 在 => 在-01
Incorrect span: 坐 => 坐-03
Missing span: 坐 => 坐-01
Dependencies:
1	坐	_	VV	VV	_	0	root	_	_
2	在	_	P	P	_	1	prep	_	_
3	一	_	CD	CD	_	4	nummod	_	_
4	个	_	M	M	_	5	clf	_	_
5	沙丘	_	NN	NN	_	6	lobj	_	_
6	上	_	LC	LC	_	2	plmod	_	_
7	,	_	PU	PU	_	1	punct	_	_
8	什么	_	PN	PN	_	10	nsubj	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	看	_	VV	VV	_	1	dep	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	见	_	VV	VV	_	10	dep	_	_
13	、	_	PU	PU	_	12	punct	_	_
14	听	_	VV	VV	_	12	dep	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	见	_	VV	VV	_	12	dep	_	_
17	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x12 / 坐-01, arg1, x13 / 沙丘)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),见,见-01,false), Span(14,15,List(1),不,不,false), Span(13,14,List(2),听,听-02,false), Span(11,12,List(3),见,见-01,false), Span(10,11,List(4),不,不,false), Span(9,10,List(5),看,看-10,false), Span(8,9,List(6),也,也,false), Span(7,8,List(7),什么,什么,false), Span(4,5,List(8),沙丘,沙丘,false), Span(1,2,List(9),在,在-01,false), Span(0,1,List(10),坐,坐-03,false)),Map(2 -> 听-02, 5 -> 看-10, 8 -> 沙丘, 7 -> 什么, 1 -> 不, 4 -> 不, 6 -> 也, 9 -> 在-01, 0 -> 见-01, 10 -> 坐-03, 3 -> 见-01),Map(在 -> 在-01, 也 -> 也, 见2 -> 见-01, 不2 -> 不, 不 -> 不, 沙 -> 沙丘, 看 -> 看-10, 听 -> 听-02, 什 -> 什么, 坐 -> 坐-03, 见 -> 见-01))),[Ljava.lang.String;@691124ee,Annotation([Ljava.lang.String;@38d80d65,[Ljava.lang.String;@5403799b,[Ljava.lang.String;@5a0e0886),Annotation([Ljava.lang.String;@3ad8717d,[Ljava.lang.String;@4293e066,[Ledu.cmu.lti.nlp.amr.Dependency;@d13960e),Annotation([Ljava.lang.String;@27f3f512,[Ljava.lang.String;@5e593b08,[Ljava.lang.String;@3946075),Annotation([Ljava.lang.String;@122635ef,[Ljava.lang.String;@2ac519dc,[Ledu.cmu.lti.nlp.amr.Entity;@3d53e6f7))
AMR:
(听 / 听-02, ord, 不 / 不)
(在 / 在-01, degree, 坐 / 坐-03)
(在 / 在-01, prep-through, 沙 / 沙丘)
(看 / 看-10, degree, 什 / 什么)
(看 / 看-10, degree, 沙 / 沙丘)
(看 / 看-10, manner, 也 / 也)
(看 / 看-10, ord, 不2 / 不)
(见 / 见-01, manner, 不 / 不)
(见2 / 见-01, manner, 不2 / 不)
(见2 / 见-01, prep-through, 听 / 听-02)

Decoded in 34,477 microseconds
Sentence: 但是 ， 却 有 一 种 说 不 出 的 东西 在 默默 地 放 着 光芒 …

Spans:
Span 7-8:  不 => 不
Span 10-11:  东西 => 东西
Span 16-17:  光芒 => 光芒
Span 8-9:  出 => 出-04
Span 11-12:  在 => 在-01
Span 13-14:  地 => 地
Span 14-15:  放 => 放-03
Span 3-4:  有 => 有-06
Span 5-6:  种 => 种
Span 6-7:  说 => 说-02
Span 12-13:  默默 => 默默

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  东西 => 东西
Oracle Span 16-17:  光芒 => 光芒
Oracle Span 14-15:  放 => 放-01
Oracle Span 12-13:  默默 => 默默

Incorrect span: 放 => 放-03
Extra span: 地 => 地
Extra span: 在 => 在-01
Extra span: 出 => 出-04
Extra span: 不 => 不
Extra span: 说 => 说-02
Extra span: 种 => 种
Extra span: 有 => 有-06
Missing span: 放 => 放-01
Dependencies:
1	但是	_	AD	AD	_	15	advmod	_	_
2	,	_	PU	PU	_	15	punct	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	11	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	种	_	M	M	_	7	nsubj	_	_
7	说	_	VV	VV	_	4	dep	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	出	_	VV	VV	_	7	ccomp	_	_
10	的	_	DEC	DEC	_	4	cpm	_	_
11	东西	_	NN	NN	_	15	nsubj	_	_
12	在	_	P	P	_	15	prep	_	_
13	默默	_	NN	NN	_	14	nn	_	_
14	地	_	NN	NN	_	12	pobj	_	_
15	放	_	VV	VV	_	0	root	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	光芒	_	PU	PU	_	15	punct	_	_
18	…	_	PU	PU	_	15	punct	_	_

Oracle:
(x14 / 放-01, arg0, x15 / 东西)
(x14 / 放-01, arg1, x19 / 光芒)
(x14 / 放-01, manner, x20 / 默默)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),光芒,光芒,false), Span(14,15,List(1),放,放-03,false), Span(13,14,List(2),地,地,false), Span(12,13,List(3),默默,默默,false), Span(11,12,List(4),在,在-01,false), Span(10,11,List(5),东西,东西,false), Span(8,9,List(6),出,出-04,false), Span(7,8,List(7),不,不,false), Span(6,7,List(8),说,说-02,false), Span(5,6,List(9),种,种,false), Span(3,4,List(10),有,有-06,false)),Map(2 -> 地, 5 -> 东西, 8 -> 说-02, 7 -> 不, 1 -> 放-03, 4 -> 在-01, 6 -> 出-04, 9 -> 种, 0 -> 光芒, 10 -> 有-06, 3 -> 默默),Map(在 -> 在-01, 放 -> 放-03, 东 -> 东西, 地 -> 地, 不 -> 不, 出 -> 出-04, 种 -> 种, 说 -> 说-02, 默 -> 默默, 光 -> 光芒, 有 -> 有-06))),[Ljava.lang.String;@1de4bee0,Annotation([Ljava.lang.String;@3ece79fe,[Ljava.lang.String;@3cc79c02,[Ljava.lang.String;@1e01b133),Annotation([Ljava.lang.String;@262a1fad,[Ljava.lang.String;@6be6931f,[Ledu.cmu.lti.nlp.amr.Dependency;@6b4125ed),Annotation([Ljava.lang.String;@78da899f,[Ljava.lang.String;@e7b265e,[Ljava.lang.String;@51da32e5),Annotation([Ljava.lang.String;@33d60b7e,[Ljava.lang.String;@1fecfaea,[Ledu.cmu.lti.nlp.amr.Entity;@4872669f))
AMR:
(出 / 出-04, manner, 不 / 不)
(在 / 在-01, manner, 东 / 东西)
(在 / 在-01, manner, 出 / 出-04)
(在 / 在-01, manner, 默 / 默默)
(地 / 地, manner, 默 / 默默)
(地 / 地, prep-at, 放 / 放-03)
(放 / 放-03, snt5, 光 / 光芒)
(说 / 说-02, ARG5, 不 / 不)
(说 / 说-02, manner, 有 / 有-06)
(说 / 说-02, manner, 种 / 种)

Decoded in 44,392 microseconds
Sentence: “ 使 沙漠 更加 美丽 的 ， 就 是 在 某个 角落 里 ， 藏 着 一 口 井 … ”

Spans:
Span 18-19:  井 => 井
Span 1-2:  使 => 使-01
Span 9-10:  在 => 在-01
Span 7-8:  就 => 就-01
Span 8-9:  是 => 是-04
Span 3-4:  更加 => 更加
Span 10-11:  某个 => 某个
Span 2-3:  沙漠 => 沙漠
Span 4-5:  美丽 => 美丽-01
Span 14-15:  藏 => 藏-01
Span 11-12:  角落 => 角落

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  井 => 井
Oracle Span 1-2:  使 => 使-01
Oracle Span 3-4:  更加 => 更加
Oracle Span 2-3:  沙漠 => 沙漠
Oracle Span 4-5:  美丽 => 美丽-01
Oracle Span 14-15:  藏 => 藏-01
Oracle Span 11-12:  角落 => 角落

Extra span: 某个 => 某个
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	使	_	VV	VV	_	9	nsubj	_	_
3	沙漠	_	NN	NN	_	2	dobj	_	_
4	更加	_	AD	AD	_	5	advmod	_	_
5	美丽	_	VA	VA	_	2	dep	_	_
6	的	_	DEC	DEC	_	2	cpm	_	_
7	,	_	PU	PU	_	9	punct	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	在	_	P	P	_	9	prep	_	_
11	某个	_	NN	NN	_	12	nn	_	_
12	角落	_	NN	NN	_	13	lobj	_	_
13	里	_	LC	LC	_	10	plmod	_	_
14	,	_	PU	PU	_	9	punct	_	_
15	藏	_	VV	VV	_	9	conj	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	口	_	M	M	_	20	clf	_	_
19	井	_	NN	NN	_	20	nn	_	_
20	…	_	NN	NN	_	15	dobj	_	_
21	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x13 / 使-01, arg0, x14 / 藏-01)
(x13 / 使-01, arg1, x20 / 沙漠)
(x13 / 使-01, arg2, x21 / 美丽-01)
(x14 / 藏-01, arg1, x15 / 井)
(x14 / 藏-01, location, x18 / 角落)
(x21 / 美丽-01, degree, x22 / 更加)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),井,井,false), Span(14,15,List(1),藏,藏-01,false), Span(11,12,List(2),角落,角落,false), Span(10,11,List(3),某个,某个,false), Span(9,10,List(4),在,在-01,false), Span(8,9,List(5),是,是-04,false), Span(7,8,List(6),就,就-01,false), Span(4,5,List(7),美丽,美丽-01,false), Span(3,4,List(8),更加,更加,false), Span(2,3,List(9),沙漠,沙漠,false), Span(1,2,List(10),使,使-01,false)),Map(2 -> 角落, 5 -> 是-04, 8 -> 更加, 7 -> 美丽-01, 1 -> 藏-01, 4 -> 在-01, 6 -> 就-01, 9 -> 沙漠, 0 -> 井, 10 -> 使-01, 3 -> 某个),Map(美 -> 美丽-01, 就 -> 就-01, 在 -> 在-01, 井 -> 井, 角 -> 角落, 某 -> 某个, 沙 -> 沙漠, 藏 -> 藏-01, 使 -> 使-01, 更 -> 更加, 是 -> 是-04))),[Ljava.lang.String;@483f286e,Annotation([Ljava.lang.String;@4bb147ec,[Ljava.lang.String;@33f2cfda,[Ljava.lang.String;@68ef01a5),Annotation([Ljava.lang.String;@59a2388e,[Ljava.lang.String;@186d8a71,[Ledu.cmu.lti.nlp.amr.Dependency;@3dc40ab9),Annotation([Ljava.lang.String;@2db6d68d,[Ljava.lang.String;@6518fdfd,[Ljava.lang.String;@11d2dd2d),Annotation([Ljava.lang.String;@cde8c6c,[Ljava.lang.String;@174721c4,[Ledu.cmu.lti.nlp.amr.Entity;@3592c1c4))
AMR:
(井 / 井, topic, 藏 / 藏-01)
(使 / 使-01, prep-for, 沙 / 沙漠)
(使 / 使-01, purpose, 美 / 美丽-01)
(在 / 在-01, degree, 是 / 是-04)
(在 / 在-01, location, 角 / 角落)
(是 / 是-04, manner, 就 / 就-01)
(某 / 某个, location, 角 / 角落)
(美 / 美丽-01, degree, 更 / 更加)
(美 / 美丽-01, purpose, 是 / 是-04)
(藏 / 藏-01, location, 角 / 角落)

Decoded in 36,676 microseconds
Sentence: 我 很 惊讶 ， 突然 明白 了 为什么 沙漠 放 着 光芒 。

Spans:
Span 11-12:  光芒 => 光芒
Span 1-2:  很 => 很
Span 2-3:  惊讶 => 惊讶-01
Span 0-1:  我 => 我
Span 9-10:  放 => 放-03
Span 5-6:  明白 => 明白-01
Span 8-9:  沙漠 => 沙漠
Span 4-5:  突然 => 突然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  光芒 => 光芒
Oracle Span 1-2:  很 => 很
Oracle Span 2-3:  惊讶 => 惊讶-01
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  放 => 放-02
Oracle Span 5-6:  明白 => 明白-01
Oracle Span 8-9:  沙漠 => 沙漠
Oracle Span 4-5:  突然 => 突然

Incorrect span: 放 => 放-03
Missing span: 放 => 放-02
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	惊讶	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	突然	_	AD	AD	_	6	advmod	_	_
6	明白	_	VV	VV	_	3	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	为什么	_	AD	AD	_	10	advmod	_	_
9	沙漠	_	NN	NN	_	10	prep	_	_
10	放	_	VV	VV	_	6	ccomp	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	光芒	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	我	_	PN	PN	_	10	xsubj	_	_

Oracle:
(x0 / 惊讶-01, arg0, x2 / 我)
(x0 / 惊讶-01, arg1, x4 / 明白-01)
(x0 / 惊讶-01, degree, x3 / 很)
(x4 / 明白-01, arg1, x7 / 放-02)
(x4 / 明白-01, manner, x6 / 突然)
(x7 / 放-02, arg0, x8 / 沙漠)
(x7 / 放-02, arg1, x9 / 光芒)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),光芒,光芒,false), Span(9,10,List(1),放,放-03,false), Span(8,9,List(2),沙漠,沙漠,false), Span(5,6,List(3),明白,明白-01,false), Span(4,5,List(4),突然,突然,false), Span(2,3,List(5),惊讶,惊讶-01,false), Span(1,2,List(6),很,很,false), Span(0,1,List(7),我,我,false)),Map(2 -> 沙漠, 5 -> 惊讶-01, 7 -> 我, 1 -> 放-03, 4 -> 突然, 6 -> 很, 0 -> 光芒, 3 -> 明白-01),Map(我 -> 我, 很 -> 很, 放 -> 放-03, 突 -> 突然, 惊 -> 惊讶-01, 沙 -> 沙漠, 明 -> 明白-01, 光 -> 光芒))),[Ljava.lang.String;@322e49ee,Annotation([Ljava.lang.String;@4aeb0e2b,[Ljava.lang.String;@648c5fb3,[Ljava.lang.String;@47b33e07),Annotation([Ljava.lang.String;@7126e26,[Ljava.lang.String;@151ab2b9,[Ledu.cmu.lti.nlp.amr.Dependency;@13ed066e),Annotation([Ljava.lang.String;@4d705112,[Ljava.lang.String;@590765c4,[Ljava.lang.String;@19489b27),Annotation([Ljava.lang.String;@626d2016,[Ljava.lang.String;@2d5a1588,[Ledu.cmu.lti.nlp.amr.Entity;@4f116ca2))
AMR:
(惊 / 惊讶-01, degree, 很 / 很)
(惊 / 惊讶-01, mode, 明 / 明白-01)
(惊 / 惊讶-01, polite, 我 / 我)
(放 / 放-03, manner, 沙 / 沙漠)
(放 / 放-03, prep-along-with, 光 / 光芒)
(明 / 明白-01, manner, 突 / 突然)
(明 / 明白-01, mode, 放 / 放-03)

Decoded in 21,224 microseconds
Sentence: 当 我 还 是 一 个 小 孩子 的 时候 ， 我 住 在 一 座 古老 的 房子 里 ， 而且 传说 ， 这个 房子 里 埋藏 着 一 个 宝贝 。

Spans:
Span 22-23:  传说 => 传说-01
Span 12-13:  住 => 住-01
Span 16-17:  古老 => 古老-01
Span 13-14:  在 => 在-01
Span 27-28:  埋藏 => 埋藏-01
Span 7-8:  孩子 => 孩子
Span 31-32:  宝贝 => 宝贝
Span 6-7:  小 => 小
Span 0-1:  当 => 当-04
Span 11-12:  我 => 我
Span 1-2:  我 => 我
Span 25-26:  房子 => 房子
Span 18-19:  房子 => 房子
Span 9-10:  时候 => 时候
Span 3-4:  是 => 是-04
Span 2-3:  还 => 还
Span 24-25:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 22-23:  传说 => 传说-01
Oracle Span 12-13:  住 => 住-01
Oracle Span 16-17:  古老 => 古老-01
Oracle Span 27-28:  埋藏 => 埋藏-01
Oracle Span 7-8:  孩子 => 孩子
Oracle Span 31-32:  宝贝 => 宝贝
Oracle Span 6-7:  小 => 小-01
Oracle Span 1-2:  我 => 我
Oracle Span 18-19:  房子 => 房子

Extra span: 房子 => 房子
Extra span: 这个 => 这个
Extra span: 在 => 在-01
Extra span: 我 => 我
Extra span: 时候 => 时候
Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 还 => 还
Extra span: 当 => 当-04
Missing span: 小 => 小-01
Dependencies:
1	当	_	P	P	_	28	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	还	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	10	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	孩子	_	NN	NN	_	4	attr	_	_
9	的	_	DEC	DEC	_	4	cpm	_	_
10	时候	_	NN	NN	_	1	pobj	_	_
11	,	_	PU	PU	_	28	punct	_	_
12	我	_	PN	PN	_	13	nsubj	_	_
13	住	_	VV	VV	_	28	conj	_	_
14	在	_	P	P	_	13	prep	_	_
15	一	_	CD	CD	_	16	nummod	_	_
16	座	_	M	M	_	19	clf	_	_
17	古老	_	VA	VA	_	19	rcmod	_	_
18	的	_	DEC	DEC	_	17	cpm	_	_
19	房子	_	NN	NN	_	20	lobj	_	_
20	里	_	LC	LC	_	14	plmod	_	_
21	,	_	PU	PU	_	28	punct	_	_
22	而且	_	AD	AD	_	28	advmod	_	_
23	传说	_	NN	NN	_	28	nsubj	_	_
24	,	_	PU	PU	_	28	punct	_	_
25	这个	_	NN	NN	_	26	nn	_	_
26	房子	_	NN	NN	_	27	lobj	_	_
27	里	_	LC	LC	_	28	loc	_	_
28	埋藏	_	VV	VV	_	0	root	_	_
29	着	_	AS	AS	_	28	asp	_	_
30	一	_	CD	CD	_	31	nummod	_	_
31	个	_	M	M	_	32	clf	_	_
32	宝贝	_	NN	NN	_	28	dobj	_	_
33	。	_	PU	PU	_	28	punct	_	_

Oracle:
(x18 / 住-01, arg0, x19 / 我)
(x18 / 住-01, arg1, x20 / 房子)
(x18 / 住-01, time, x23 / 孩子)
(x20 / 房子, mod, x21 / 古老-01)
(x23 / 孩子, mod, x24 / 小-01)
(x27 / 传说-01, arg1, x28 / 埋藏-01)
(x28 / 埋藏-01, arg0, x29 / 宝贝)

Input(Some(Graph(null,ArrayBuffer(Span(31,32,List(0),宝贝,宝贝,false), Span(27,28,List(1),埋藏,埋藏-01,false), Span(25,26,List(2),房子,房子,false), Span(24,25,List(3),这个,这个,false), Span(22,23,List(4),传说,传说-01,false), Span(18,19,List(5),房子,房子,false), Span(16,17,List(6),古老,古老-01,false), Span(13,14,List(7),在,在-01,false), Span(12,13,List(8),住,住-01,false), Span(11,12,List(9),我,我,false), Span(9,10,List(10),时候,时候,false), Span(7,8,List(11),孩子,孩子,false), Span(6,7,List(12),小,小,false), Span(3,4,List(13),是,是-04,false), Span(2,3,List(14),还,还,false), Span(1,2,List(15),我,我,false), Span(0,1,List(16),当,当-04,false)),Map(2 -> 房子, 5 -> 房子, 12 -> 小, 15 -> 我, 8 -> 住-01, 7 -> 在-01, 1 -> 埋藏-01, 4 -> 传说-01, 11 -> 孩子, 14 -> 还, 6 -> 古老-01, 0 -> 宝贝, 9 -> 我, 16 -> 当-04, 3 -> 这个, 10 -> 时候, 13 -> 是-04),Map(孩 -> 孩子, 在 -> 在-01, 我 -> 我, 这 -> 这个, 我2 -> 我, 小 -> 小, 房2 -> 房子, 宝 -> 宝贝, 还 -> 还, 传 -> 传说-01, 古 -> 古老-01, 埋 -> 埋藏-01, 房 -> 房子, 时 -> 时候, 是 -> 是-04, 当 -> 当-04, 住 -> 住-01))),[Ljava.lang.String;@125d47c4,Annotation([Ljava.lang.String;@193bb809,[Ljava.lang.String;@64b018f3,[Ljava.lang.String;@20801cbb),Annotation([Ljava.lang.String;@581b1c08,[Ljava.lang.String;@1c240cf2,[Ledu.cmu.lti.nlp.amr.Dependency;@78b7f805),Annotation([Ljava.lang.String;@58f2466c,[Ljava.lang.String;@5809fa26,[Ljava.lang.String;@64763e49),Annotation([Ljava.lang.String;@23468512,[Ljava.lang.String;@69cd7630,[Ledu.cmu.lti.nlp.amr.Entity;@7e8279e5))
AMR:
(传 / 传说-01, ARG3, 埋 / 埋藏-01)
(住 / 住-01, time, 孩 / 孩子)
(在 / 在-01, ARG5, 住 / 住-01)
(在 / 在-01, ARG6, 我 / 我)
(在 / 在-01, degree, 埋 / 埋藏-01)
(埋 / 埋藏-01, location, 房 / 房子)
(埋 / 埋藏-01, prep-for, 宝 / 宝贝)
(孩 / 孩子, mod, 小 / 小)
(孩 / 孩子, time, 还 / 还)
(房 / 房子, mod, 这 / 这个)
(房2 / 房子, manner, 在 / 在-01)
(房2 / 房子, mod, 古 / 古老-01)
(时 / 时候, mod, 孩 / 孩子)
(是 / 是-04, ARG0, 当 / 当-04)
(是 / 是-04, ARG4, 我2 / 我)
(是 / 是-04, manner, 还 / 还)

Decoded in 101,498 microseconds
Sentence: 当然 ， 从来 没有 任何 人 能 发现 这个 宝贝 ， 可能 ， 甚至 也 没有 人 去 寻找 过 。

Spans:
Span 14-15:  也 => 也
Span 16-17:  人 => 人
Span 5-6:  人 => 人
Span 2-3:  从来 => 从来
Span 4-5:  任何 => 任何
Span 17-18:  去 => 去-02
Span 7-8:  发现 => 发现-01
Span 11-12:  可能 => 可能-02
Span 9-10:  宝贝 => 宝贝
Span 18-19:  寻找 => 寻找-01
Span 0-1:  当然 => 当然
Span 13-14:  甚至 => 甚至
Span 6-7:  能 => 能
Span 19-20:  过 => 过-01
Span 8-9:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  也 => 也
Oracle Span 5-6:  人 => 人
Oracle Span 16-17:  人 => 人
Oracle Span 4-5:  任何 => 任何
Oracle Span 17-18:  去 => 去-01
Oracle Span 7-8:  发现 => 发现-01
Oracle Span 11-12:  可能 => 可能-01
Oracle Span 9-10:  宝贝 => 宝贝
Oracle Span 18-19:  寻找 => 寻找-01
Oracle Span 13-14:  甚至 => 甚至
Oracle Span 6-7:  能 => 能-01

Extra span: 过 => 过-01
Incorrect span: 去 => 去-02
Incorrect span: 可能 => 可能-02
Extra span: 这个 => 这个
Incorrect span: 能 => 能
Extra span: 从来 => 从来
Extra span: 当然 => 当然
Missing span: 能 => 能-01
Missing span: 可能 => 可能-01
Missing span: 去 => 去-01
Dependencies:
1	当然	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	从来	_	AD	AD	_	4	advmod	_	_
4	没有	_	VE	VE	_	0	root	_	_
5	任何	_	DT	DT	_	6	det	_	_
6	人	_	NN	NN	_	8	nsubj	_	_
7	能	_	VV	VV	_	8	mmod	_	_
8	发现	_	VV	VV	_	4	dep	_	_
9	这个	_	NN	NN	_	10	nn	_	_
10	宝贝	_	NN	NN	_	8	dobj	_	_
11	,	_	PU	PU	_	8	punct	_	_
12	可能	_	VV	VV	_	8	conj	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	甚至	_	AD	AD	_	16	advmod	_	_
15	也	_	AD	AD	_	16	advmod	_	_
16	没有	_	VE	VE	_	8	conj	_	_
17	人	_	NN	NN	_	16	dobj	_	_
18	去	_	MSP	MSP	_	19	prtmod	_	_
19	寻找	_	VV	VV	_	8	dep	_	_
20	过	_	AS	AS	_	19	asp	_	_
21	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x30 / 能-01, arg0, x31 / 发现-01)
(x31 / 发现-01, arg0, x32 / 人)
(x31 / 发现-01, arg1, x36 / 宝贝)
(x32 / 人, mod, x33 / 任何)
(x41 / 可能-01, arg0, x46 / 去-01)
(x46 / 去-01, arg0, x47 / 人)
(x46 / 去-01, arg1, x50 / 寻找-01)
(x46 / 去-01, manner, x54 / 甚至)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),过,过-01,false), Span(18,19,List(1),寻找,寻找-01,false), Span(17,18,List(2),去,去-02,false), Span(16,17,List(3),人,人,false), Span(14,15,List(4),也,也,false), Span(13,14,List(5),甚至,甚至,false), Span(11,12,List(6),可能,可能-02,false), Span(9,10,List(7),宝贝,宝贝,false), Span(8,9,List(8),这个,这个,false), Span(7,8,List(9),发现,发现-01,false), Span(6,7,List(10),能,能,false), Span(5,6,List(11),人,人,false), Span(4,5,List(12),任何,任何,false), Span(2,3,List(13),从来,从来,false), Span(0,1,List(14),当然,当然,false)),Map(2 -> 去-02, 5 -> 甚至, 12 -> 任何, 8 -> 这个, 7 -> 宝贝, 1 -> 寻找-01, 4 -> 也, 11 -> 人, 14 -> 当然, 6 -> 可能-02, 0 -> 过-01, 9 -> 发现-01, 3 -> 人, 10 -> 能, 13 -> 从来),Map(从 -> 从来, 发 -> 发现-01, 任 -> 任何, 也 -> 也, 过 -> 过-01, 这 -> 这个, 寻 -> 寻找-01, 能 -> 能, 人2 -> 人, 去 -> 去-02, 宝 -> 宝贝, 甚 -> 甚至, 人 -> 人, 当 -> 当然, 可 -> 可能-02))),[Ljava.lang.String;@2b53840a,Annotation([Ljava.lang.String;@3caafa67,[Ljava.lang.String;@3e546734,[Ljava.lang.String;@53747c4a),Annotation([Ljava.lang.String;@64b0d1fa,[Ljava.lang.String;@f2276c9,[Ledu.cmu.lti.nlp.amr.Dependency;@12d2ddde),Annotation([Ljava.lang.String;@62b475e2,[Ljava.lang.String;@e9474f,[Ljava.lang.String;@1c61eda5),Annotation([Ljava.lang.String;@1859ffda,[Ljava.lang.String;@59838256,[Ledu.cmu.lti.nlp.amr.Entity;@131a7516))
AMR:
(人 / 人, degree, 也 / 也)
(人2 / 人, mod, 任 / 任何)
(从 / 从来, ARG4, 当 / 当然)
(去 / 去-02, ARG5, 人 / 人)
(去 / 去-02, manner, 甚 / 甚至)
(去 / 去-02, prep-through, 寻 / 寻找-01)
(发 / 发现-01, ARG0, 人2 / 人)
(发 / 发现-01, op, 宝 / 宝贝)
(发 / 发现-01, time, 当 / 当然)
(可 / 可能-02, ARG6, 发 / 发现-01)
(可 / 可能-02, direction, 去 / 去-02)
(宝 / 宝贝, mod, 这 / 这个)
(寻 / 寻找-01, ARG1, 过 / 过-01)
(能 / 能, mod, 发 / 发现-01)

Decoded in 69,408 microseconds
Sentence: 但是 ， 这个 宝贝 使 整个 房子 着 了 魔 似的 。

Spans:
Span 4-5:  使 => 使-01
Span 3-4:  宝贝 => 宝贝
Span 6-7:  房子 => 房子
Span 5-6:  整个 => 整个
Span 2-3:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  使 => 使-01
Oracle Span 3-4:  宝贝 => 宝贝
Oracle Span 6-7:  房子 => 房子
Oracle Span 5-6:  整个 => 整个

Extra span: 这个 => 这个
Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	这个	_	NN	NN	_	4	nn	_	_
4	宝贝	_	NN	NN	_	5	nsubj	_	_
5	使	_	VV	VV	_	0	root	_	_
6	整个	_	JJ	JJ	_	7	amod	_	_
7	房子	_	NN	NN	_	5	dobj	_	_
8	着	_	VV	VV	_	5	dep	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	魔	_	NN	NN	_	11	nn	_	_
11	似的	_	NN	NN	_	8	dobj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 使-01, arg0, x11 / 宝贝)
(x10 / 使-01, arg1, x13 / 房子)
(x13 / 房子, mod, x14 / 整个)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),房子,房子,false), Span(5,6,List(1),整个,整个,false), Span(4,5,List(2),使,使-01,false), Span(3,4,List(3),宝贝,宝贝,false), Span(2,3,List(4),这个,这个,false)),Map(2 -> 使-01, 1 -> 整个, 4 -> 这个, 0 -> 房子, 3 -> 宝贝),Map(这 -> 这个, 整 -> 整个, 宝 -> 宝贝, 使 -> 使-01, 房 -> 房子))),[Ljava.lang.String;@5ae15,Annotation([Ljava.lang.String;@577536e0,[Ljava.lang.String;@12219f6a,[Ljava.lang.String;@52d3fafd),Annotation([Ljava.lang.String;@7f0b93b4,[Ljava.lang.String;@1376883,[Ledu.cmu.lti.nlp.amr.Dependency;@1f736d00),Annotation([Ljava.lang.String;@523a7801,[Ljava.lang.String;@718fd7c1,[Ljava.lang.String;@4bc6da03),Annotation([Ljava.lang.String;@4f59a516,[Ljava.lang.String;@4e22368c,[Ledu.cmu.lti.nlp.amr.Entity;@411cd156))
AMR:
(使 / 使-01, ARG2, 这 / 这个)
(使 / 使-01, ARG6, 房 / 房子)
(宝 / 宝贝, mod, 这 / 这个)
(房 / 房子, mod, 整 / 整个)

Decoded in 11,282 microseconds
Sentence: 我 家 的 房子 在 它 的 心灵 深处 隐藏 着 一 个 秘密 …

Spans:
Span 4-5:  在 => 在-01
Span 5-6:  它 => 它
Span 1-2:  家 => 家
Span 7-8:  心灵 => 心灵
Span 0-1:  我 => 我
Span 3-4:  房子 => 房子
Span 8-9:  深处 => 深处
Span 13-14:  秘密 => 秘密-01
Span 9-10:  隐藏 => 隐藏-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  它 => 它
Oracle Span 7-8:  心灵 => 心灵
Oracle Span 3-4:  房子 => 房子
Oracle Span 8-9:  深处 => 深处
Oracle Span 13-14:  秘密 => 秘密-01
Oracle Span 9-10:  隐藏 => 隐藏-01

Extra span: 在 => 在-01
Extra span: 家 => 家
Extra span: 我 => 我
Dependencies:
1	我	_	PN	PN	_	2	nn	_	_
2	家	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	房子	_	NN	NN	_	10	nsubj	_	_
5	在	_	P	P	_	10	prep	_	_
6	它	_	PN	PN	_	9	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	心灵	_	NN	NN	_	9	nn	_	_
9	深处	_	NN	NN	_	5	pobj	_	_
10	隐藏	_	VV	VV	_	0	root	_	_
11	着	_	AS	AS	_	10	asp	_	_
12	一	_	CD	CD	_	13	nummod	_	_
13	个	_	M	M	_	15	clf	_	_
14	秘密	_	JJ	JJ	_	15	amod	_	_
15	…	_	NN	NN	_	10	dobj	_	_

Oracle:
(x0 / 隐藏-01, arg0, x2 / 房子)
(x0 / 隐藏-01, arg1, x4 / 秘密-01)
(x0 / 隐藏-01, arg2, x7 / 心灵)
(x7 / 心灵, location, x8 / 深处)
(x7 / 心灵, poss, x9 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),秘密,秘密-01,false), Span(9,10,List(1),隐藏,隐藏-01,false), Span(8,9,List(2),深处,深处,false), Span(7,8,List(3),心灵,心灵,false), Span(5,6,List(4),它,它,false), Span(4,5,List(5),在,在-01,false), Span(3,4,List(6),房子,房子,false), Span(1,2,List(7),家,家,false), Span(0,1,List(8),我,我,false)),Map(2 -> 深处, 5 -> 在-01, 8 -> 我, 7 -> 家, 1 -> 隐藏-01, 4 -> 它, 6 -> 房子, 0 -> 秘密-01, 3 -> 心灵),Map(在 -> 在-01, 我 -> 我, 家 -> 家, 它 -> 它, 心 -> 心灵, 隐 -> 隐藏-01, 深 -> 深处, 房 -> 房子, 秘 -> 秘密-01))),[Ljava.lang.String;@3c770db4,Annotation([Ljava.lang.String;@3e046e39,[Ljava.lang.String;@61cda923,[Ljava.lang.String;@46fc522d),Annotation([Ljava.lang.String;@4262fdeb,[Ljava.lang.String;@5f0a2638,[Ledu.cmu.lti.nlp.amr.Dependency;@5382184b),Annotation([Ljava.lang.String;@77cb452c,[Ljava.lang.String;@2213639b,[Ljava.lang.String;@2c26ba07),Annotation([Ljava.lang.String;@6f25bf88,[Ljava.lang.String;@42ea7565,[Ledu.cmu.lti.nlp.amr.Entity;@7b5cc918))
AMR:
(在 / 在-01, manner, 房 / 房子)
(在 / 在-01, mode, 它 / 它)
(家 / 家, mode, 在 / 在-01)
(家 / 家, poss, 我 / 我)
(心 / 心灵, location, 深 / 深处)
(心 / 心灵, poss, 它 / 它)
(隐 / 隐藏-01, location, 深 / 深处)
(隐 / 隐藏-01, year, 秘 / 秘密-01)

Decoded in 23,072 microseconds
Sentence: 是 的 ，

Spans:
Span 0-1:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  是 => 是-04

Dependencies:
1	是	_	VC	VC	_	3	rcmod	_	_
2	的	_	DEC	DEC	_	1	cpm	_	_
3	,	_	NN	NN	_	0	root	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),是,是-04,false)),Map(0 -> 是-04),Map(是 -> 是-04))),[Ljava.lang.String;@62b3a2f6,Annotation([Ljava.lang.String;@202898d7,[Ljava.lang.String;@317890ea,[Ljava.lang.String;@2c719bd4),Annotation([Ljava.lang.String;@53aa38be,[Ljava.lang.String;@37a0ec3c,[Ledu.cmu.lti.nlp.amr.Dependency;@422ad5e2),Annotation([Ljava.lang.String;@62a54948,[Ljava.lang.String;@6048e26a,[Ljava.lang.String;@50b93353),Annotation([Ljava.lang.String;@44286963,[Ljava.lang.String;@c8f97a7,[Ledu.cmu.lti.nlp.amr.Entity;@2b736fee))
AMR:


Decoded in 1,255 microseconds
Sentence: 我 对 小 王子 说道 ： “

Spans:
Span 1-2:  对 => 对-02
Span 2-3:  小 => 小
Span 0-1:  我 => 我
Span 3-4:  王子 => 王子
Span 4-5:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  说道 => 说道-01

Incorrect span: 说道 => 说道
Incorrect span: 小 => 小
Extra span: 对 => 对-02
Missing span: 说道 => 说道-01
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	对	_	P	P	_	5	prep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	NN	NN	_	5	dobj	_	_

Oracle:
(x12 / 王子, mod, x13 / 小-01)
(x9 / 说道-01, arg0, x11 / 我)
(x9 / 说道-01, arg2, x12 / 王子)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),说道,说道,false), Span(3,4,List(1),王子,王子,false), Span(2,3,List(2),小,小,false), Span(1,2,List(3),对,对-02,false), Span(0,1,List(4),我,我,false)),Map(2 -> 小, 1 -> 王子, 4 -> 我, 0 -> 说道, 3 -> 对-02),Map(我 -> 我, 王 -> 王子, 小 -> 小, 说 -> 说道, 对 -> 对-02))),[Ljava.lang.String;@3249e278,Annotation([Ljava.lang.String;@35adf623,[Ljava.lang.String;@456f7d9e,[Ljava.lang.String;@75d366c2),Annotation([Ljava.lang.String;@8f40022,[Ljava.lang.String;@5232e3f1,[Ledu.cmu.lti.nlp.amr.Dependency;@6c8fe7a4),Annotation([Ljava.lang.String;@2047981,[Ljava.lang.String;@2ad99cf3,[Ljava.lang.String;@6f31df32),Annotation([Ljava.lang.String;@7c90b7b7,[Ljava.lang.String;@5d7911d5,[Ledu.cmu.lti.nlp.amr.Entity;@3ba1308d))
AMR:
(对 / 对-02, beneficiary, 我 / 我)
(对 / 对-02, direction, 小 / 小)
(王 / 王子, mod, 小 / 小)
(说 / 说道, mod, 王 / 王子)

Decoded in 7,625 microseconds
Sentence: 无论 是 房子 ， 星星 ， 或是 沙漠 ， 使 它们 美丽 的 东西 是 看 不 见 的 ！ ”

Spans:
Span 16-17:  不 => 不
Span 13-14:  东西 => 东西
Span 9-10:  使 => 使-01
Span 10-11:  它们 => 它们
Span 2-3:  房子 => 房子
Span 0-1:  无论 => 无论-01
Span 4-5:  星星 => 星星
Span 14-15:  是 => 是-04
Span 1-2:  是 => 是-04
Span 7-8:  沙漠 => 沙漠
Span 15-16:  看 => 看-10
Span 11-12:  美丽 => 美丽-01
Span 17-18:  见 => 见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  东西 => 东西
Oracle Span 9-10:  使 => 使-01
Oracle Span 2-3:  房子 => 房子
Oracle Span 4-5:  星星 => 星星
Oracle Span 7-8:  沙漠 => 沙漠
Oracle Span 11-12:  美丽 => 美丽-01

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Extra span: 它们 => 它们
Extra span: 是 => 是-04
Extra span: 无论 => 无论-01
Dependencies:
1	无论	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	14	rcmod	_	_
3	房子	_	NN	NN	_	2	attr	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	星星	_	VV	VV	_	2	conj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	或是	_	VV	VV	_	2	conj	_	_
8	沙漠	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	2	punct	_	_
10	使	_	VV	VV	_	2	conj	_	_
11	它们	_	PN	PN	_	10	dobj	_	_
12	美丽	_	VA	VA	_	10	dep	_	_
13	的	_	DEC	DEC	_	2	cpm	_	_
14	东西	_	NN	NN	_	15	top	_	_
15	是	_	VC	VC	_	0	root	_	_
16	看	_	VV	VV	_	18	mmod	_	_
17	不	_	AD	AD	_	18	neg	_	_
18	见	_	VV	VV	_	15	attr	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	！	_	PU	PU	_	15	punct	_	_
21	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x32 / 使-01, arg0, x31 / 东西)
(x32 / 使-01, arg2, x38 / 美丽-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),见,见-01,false), Span(16,17,List(1),不,不,false), Span(15,16,List(2),看,看-10,false), Span(14,15,List(3),是,是-04,false), Span(13,14,List(4),东西,东西,false), Span(11,12,List(5),美丽,美丽-01,false), Span(10,11,List(6),它们,它们,false), Span(9,10,List(7),使,使-01,false), Span(7,8,List(8),沙漠,沙漠,false), Span(4,5,List(9),星星,星星,false), Span(2,3,List(10),房子,房子,false), Span(1,2,List(11),是,是-04,false), Span(0,1,List(12),无论,无论-01,false)),Map(2 -> 看-10, 5 -> 美丽-01, 12 -> 无论-01, 8 -> 沙漠, 7 -> 使-01, 1 -> 不, 4 -> 东西, 11 -> 是-04, 6 -> 它们, 0 -> 见-01, 9 -> 星星, 3 -> 是-04, 10 -> 房子),Map(美 -> 美丽-01, 星 -> 星星, 无 -> 无论-01, 它 -> 它们, 东 -> 东西, 不 -> 不, 看 -> 看-10, 沙 -> 沙漠, 使 -> 使-01, 房 -> 房子, 是 -> 是-04, 是2 -> 是-04, 见 -> 见-01))),[Ljava.lang.String;@5a08b084,Annotation([Ljava.lang.String;@235c997d,[Ljava.lang.String;@36bed37a,[Ljava.lang.String;@4a9a878),Annotation([Ljava.lang.String;@1b3ab4f9,[Ljava.lang.String;@5c6a5192,[Ledu.cmu.lti.nlp.amr.Dependency;@1c8f6c66),Annotation([Ljava.lang.String;@552cede7,[Ljava.lang.String;@1b7f06c7,[Ljava.lang.String;@151732fb),Annotation([Ljava.lang.String;@729c8063,[Ljava.lang.String;@40ed1802,[Ledu.cmu.lti.nlp.amr.Entity;@23c767e6))
AMR:
(东 / 东西, location, 美 / 美丽-01)
(使 / 使-01, prep-for, 它 / 它们)
(使 / 使-01, prep-for, 美 / 美丽-01)
(使 / 使-01, time, 是2 / 是-04)
(使 / 使-01, time, 沙 / 沙漠)
(是 / 是-04, manner, 东 / 东西)
(是2 / 是-04, ARG0, 星 / 星星)
(是2 / 是-04, degree, 房 / 房子)
(是2 / 是-04, manner, 无 / 无论-01)
(看 / 看-10, ARG0, 不 / 不)
(看 / 看-10, manner, 是 / 是-04)
(见 / 见-01, manner, 不 / 不)

Decoded in 44,639 microseconds
Sentence: “ 我 真 高兴 ， 你 和 我 的 狐狸 的 看法 一样 。 ” 小 王子 说 。

Spans:
Span 12-13:  一样 => 一样
Span 5-6:  你 => 你
Span 15-16:  小 => 小
Span 7-8:  我 => 我
Span 1-2:  我 => 我
Span 9-10:  狐狸 => 狐狸
Span 16-17:  王子 => 王子
Span 11-12:  看法 => 看法
Span 2-3:  真 => 真
Span 17-18:  说 => 说-02
Span 3-4:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 12-13:  一样 => 一样-01
Oracle Span 5-6:  你 => 你
Oracle Span 15-16:  小 => 小-01
Oracle Span 9-10:  狐狸 => 狐狸
Oracle Span 16-17:  王子 => 王子
Oracle Span 11-12:  看法 => 看法
Oracle Span 17-18:  说 => 说-01
Oracle Span 3-4:  高兴 => 高兴-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Incorrect span: 一样 => 一样
Extra span: 我 => 我
Incorrect span: 高兴 => 高兴
Extra span: 真 => 真
Extra span: 我 => 我
Missing span: 说 => 说-01
Missing span: 高兴 => 高兴-01
Missing span: 一样 => 一样-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	真	_	AD	AD	_	4	advmod	_	_
4	高兴	_	VA	VA	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	你	_	PN	PN	_	13	nsubj	_	_
7	和	_	P	P	_	13	prep	_	_
8	我	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	狐狸	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	看法	_	NN	NN	_	7	pobj	_	_
13	一样	_	VA	VA	_	4	conj	_	_
14	。	_	PU	PU	_	4	punct	_	_
15	”	_	PU	PU	_	4	punct	_	_
16	小	_	JJ	JJ	_	17	amod	_	_
17	王子	_	NN	NN	_	18	nsubj	_	_
18	说	_	VV	VV	_	4	conj	_	_
19	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 高兴-01)
(x10 / 看法, poss, x11 / 狐狸)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 高兴-01, arg1, x7 / 一样-01)
(x7 / 一样-01, arg1, x10 / 看法)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),说,说-02,false), Span(16,17,List(1),王子,王子,false), Span(15,16,List(2),小,小,false), Span(12,13,List(3),一样,一样,false), Span(11,12,List(4),看法,看法,false), Span(9,10,List(5),狐狸,狐狸,false), Span(7,8,List(6),我,我,false), Span(5,6,List(7),你,你,false), Span(3,4,List(8),高兴,高兴,false), Span(2,3,List(9),真,真,false), Span(1,2,List(10),我,我,false)),Map(2 -> 小, 5 -> 狐狸, 8 -> 高兴, 7 -> 你, 1 -> 王子, 4 -> 看法, 6 -> 我, 9 -> 真, 0 -> 说-02, 10 -> 我, 3 -> 一样),Map(高 -> 高兴, 我 -> 我, 我2 -> 我, 你 -> 你, 王 -> 王子, 小 -> 小, 说 -> 说-02, 看 -> 看法, 狐 -> 狐狸, 一 -> 一样, 真 -> 真))),[Ljava.lang.String;@feb098f,Annotation([Ljava.lang.String;@19e21f89,[Ljava.lang.String;@31e739bf,[Ljava.lang.String;@29079032),Annotation([Ljava.lang.String;@7e7743ec,[Ljava.lang.String;@776015fc,[Ledu.cmu.lti.nlp.amr.Dependency;@7f42e06e),Annotation([Ljava.lang.String;@6ad179b4,[Ljava.lang.String;@2efd2f21,[Ljava.lang.String;@59c500f7),Annotation([Ljava.lang.String;@316cda31,[Ljava.lang.String;@50110971,[Ledu.cmu.lti.nlp.amr.Entity;@17d2b075))
AMR:
(一 / 一样, domain, 高 / 高兴)
(一 / 一样, mod, 看 / 看法)
(看 / 看法, poss, 我 / 我)
(看 / 看法, poss, 狐 / 狐狸)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 一 / 一样)
(说 / 说-02, degree, 小 / 小)
(高 / 高兴, degree, 真 / 真)
(高 / 高兴, poss, 你 / 你)
(高 / 高兴, poss, 我2 / 我)

Decoded in 36,662 microseconds
Sentence: 小 王子 睡觉 了 ， 我 就 把 他 抱 在 怀里 ， 又 重新 上路 了 。

Spans:
Span 15-16:  上路 => 上路-01
Span 8-9:  他 => 他
Span 13-14:  又 => 又
Span 10-11:  在 => 在-01
Span 0-1:  小 => 小
Span 6-7:  就 => 就-01
Span 11-12:  怀里 => 怀里
Span 5-6:  我 => 我
Span 9-10:  抱 => 抱-01
Span 1-2:  王子 => 王子
Span 2-3:  睡觉 => 睡觉-01
Span 14-15:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  上路 => 上路-01
Oracle Span 13-14:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 6-7:  就 => 就
Oracle Span 11-12:  怀里 => 怀里
Oracle Span 5-6:  我 => 我
Oracle Span 9-10:  抱 => 抱-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 2-3:  睡觉 => 睡觉-01
Oracle Span 14-15:  重新 => 重新-01

Extra span: 在 => 在-01
Extra span: 他 => 他
Incorrect span: 就 => 就-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 就 => 就
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	睡觉	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	我	_	PN	PN	_	16	nsubj	_	_
7	就	_	AD	AD	_	16	advmod	_	_
8	把	_	BA	BA	_	16	ba	_	_
9	他	_	PN	PN	_	16	nsubj	_	_
10	抱	_	VV	VV	_	16	mmod	_	_
11	在	_	P	P	_	16	prep	_	_
12	怀里	_	NR	NR	_	11	pobj	_	_
13	,	_	PU	PU	_	16	punct	_	_
14	又	_	AD	AD	_	16	advmod	_	_
15	重新	_	AD	AD	_	16	advmod	_	_
16	上路	_	VV	VV	_	3	conj	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x11 / 上路-01, manner, x13 / 又)
(x11 / 上路-01, manner, x14 / 重新-01)
(x2 / 睡觉-01, arg0, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 抱-01, arg0, x6 / 我)
(x5 / 抱-01, location, x9 / 怀里)
(x5 / 抱-01, manner, x8 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),上路,上路-01,false), Span(14,15,List(1),重新,重新-01,false), Span(13,14,List(2),又,又,false), Span(11,12,List(3),怀里,怀里,false), Span(10,11,List(4),在,在-01,false), Span(9,10,List(5),抱,抱-01,false), Span(8,9,List(6),他,他,false), Span(6,7,List(7),就,就-01,false), Span(5,6,List(8),我,我,false), Span(2,3,List(9),睡觉,睡觉-01,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 又, 5 -> 抱-01, 8 -> 我, 7 -> 就-01, 1 -> 重新-01, 11 -> 小, 4 -> 在-01, 6 -> 他, 9 -> 睡觉-01, 0 -> 上路-01, 10 -> 王子, 3 -> 怀里),Map(就 -> 就-01, 又 -> 又, 在 -> 在-01, 我 -> 我, 怀 -> 怀里, 重 -> 重新-01, 王 -> 王子, 他 -> 他, 小 -> 小, 上 -> 上路-01, 抱 -> 抱-01, 睡 -> 睡觉-01))),[Ljava.lang.String;@6661d8c0,Annotation([Ljava.lang.String;@310b2b6f,[Ljava.lang.String;@6909f6be,[Ljava.lang.String;@6b5ab2f2),Annotation([Ljava.lang.String;@315c081,[Ljava.lang.String;@6b2dd3df,[Ledu.cmu.lti.nlp.amr.Dependency;@4db77402),Annotation([Ljava.lang.String;@73c48264,[Ljava.lang.String;@5ef85555,[Ljava.lang.String;@5bcec67e),Annotation([Ljava.lang.String;@2dafae61,[Ljava.lang.String;@7a2fce12,[Ledu.cmu.lti.nlp.amr.Entity;@66e17eff))
AMR:
(上 / 上路-01, manner, 又 / 又)
(上 / 上路-01, manner, 重 / 重新-01)
(在 / 在-01, ARG1, 怀 / 怀里)
(在 / 在-01, ARG6, 他 / 他)
(在 / 在-01, manner, 又 / 又)
(就 / 就-01, ARG1, 睡 / 睡觉-01)
(抱 / 抱-01, location, 怀 / 怀里)
(抱 / 抱-01, manner, 就 / 就-01)
(抱 / 抱-01, prep-through, 我 / 我)
(王 / 王子, mod, 小 / 小)
(睡 / 睡觉-01, direction, 王 / 王子)

Decoded in 40,642 microseconds
Sentence: 我 很 激动 。

Spans:
Span 1-2:  很 => 很
Span 0-1:  我 => 我
Span 2-3:  激动 => 激动-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  激动 => 激动-01

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	很	_	AD	AD	_	3	advmod	_	_
3	激动	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 激动-01, arg0, x3 / 我)
(x0 / 激动-01, degree, x2 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),激动,激动-01,false), Span(1,2,List(1),很,很,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 很, 0 -> 激动-01),Map(我 -> 我, 很 -> 很, 激 -> 激动-01))),[Ljava.lang.String;@4bb1b96b,Annotation([Ljava.lang.String;@1bbddada,[Ljava.lang.String;@1f66d8e1,[Ljava.lang.String;@721d5b74),Annotation([Ljava.lang.String;@3421debd,[Ljava.lang.String;@41bfa9e9,[Ledu.cmu.lti.nlp.amr.Dependency;@68b7d0ef),Annotation([Ljava.lang.String;@7069f076,[Ljava.lang.String;@4a070cf0,[Ljava.lang.String;@764b14b8),Annotation([Ljava.lang.String;@202d9236,[Ljava.lang.String;@1f782c05,[Ledu.cmu.lti.nlp.amr.Entity;@6d6ac396))
AMR:
(激 / 激动-01, degree, 很 / 很)
(激 / 激动-01, op, 我 / 我)

Decoded in 3,938 microseconds
Sentence: 就 好象 抱 着 一 个 脆弱 的 宝贝 。

Spans:
Span 8-9:  宝贝 => 宝贝
Span 0-1:  就 => 就-01
Span 2-3:  抱 => 抱-01
Span 6-7:  脆弱 => 脆弱-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  宝贝 => 宝贝
Oracle Span 0-1:  就 => 就
Oracle Span 2-3:  抱 => 抱-01
Oracle Span 6-7:  脆弱 => 脆弱-01

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	就	_	P	P	_	3	prep	_	_
2	好象	_	NN	NN	_	1	pobj	_	_
3	抱	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	9	clf	_	_
7	脆弱	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	宝贝	_	NN	NN	_	3	dobj	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 抱-01, arg1, x3 / 宝贝)
(x3 / 宝贝, mod, x4 / 脆弱-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),宝贝,宝贝,false), Span(6,7,List(1),脆弱,脆弱-01,false), Span(2,3,List(2),抱,抱-01,false), Span(0,1,List(3),就,就-01,false)),Map(2 -> 抱-01, 1 -> 脆弱-01, 0 -> 宝贝, 3 -> 就-01),Map(就 -> 就-01, 脆 -> 脆弱-01, 宝 -> 宝贝, 抱 -> 抱-01))),[Ljava.lang.String;@432af457,Annotation([Ljava.lang.String;@f5a7226,[Ljava.lang.String;@519c6fcc,[Ljava.lang.String;@6ad1701a),Annotation([Ljava.lang.String;@7ecda95b,[Ljava.lang.String;@22da2fe6,[Ledu.cmu.lti.nlp.amr.Dependency;@100ad67e),Annotation([Ljava.lang.String;@713a35c5,[Ljava.lang.String;@62aeddc8,[Ljava.lang.String;@11787b64),Annotation([Ljava.lang.String;@5707f613,[Ljava.lang.String;@77b3752b,[Ledu.cmu.lti.nlp.amr.Entity;@6367a688))
AMR:
(宝 / 宝贝, mod, 脆 / 脆弱-01)
(就 / 就-01, degree, 抱 / 抱-01)
(抱 / 抱-01, snt1, 宝 / 宝贝)

Decoded in 7,696 microseconds
Sentence: 就 好象 在 地球 上 没有 比 这 更 脆弱 的 了 。

Spans:
Span 2-3:  在 => 在-01
Span 3-4:  地球 => 地球
Span 0-1:  就 => 就-01
Span 8-9:  更 => 更-01
Span 9-10:  脆弱 => 脆弱-01
Span 7-8:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  地球 => 地球
Oracle Span 0-1:  就 => 就
Oracle Span 8-9:  更 => 更
Oracle Span 9-10:  脆弱 => 脆弱-01
Oracle Span 7-8:  这 => 这

Incorrect span: 更 => 更-01
Extra span: 在 => 在-01
Incorrect span: 就 => 就-01
Missing span: 更 => 更
Missing span: 就 => 就
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	好象	_	VV	VV	_	0	root	_	_
3	在	_	P	P	_	2	prep	_	_
4	地球	_	NN	NN	_	5	lobj	_	_
5	上	_	LC	LC	_	3	plmod	_	_
6	没有	_	VE	VE	_	2	dep	_	_
7	比	_	P	P	_	10	prep	_	_
8	这	_	PN	PN	_	7	pobj	_	_
9	更	_	AD	AD	_	10	advmod	_	_
10	脆弱	_	VA	VA	_	6	dobj	_	_
11	的	_	DEC	DEC	_	10	cpm	_	_
12	了	_	AS	AS	_	2	asp	_	_
13	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 脆弱-01, degree, x13 / 更)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),脆弱,脆弱-01,false), Span(8,9,List(1),更,更-01,false), Span(7,8,List(2),这,这,false), Span(3,4,List(3),地球,地球,false), Span(2,3,List(4),在,在-01,false), Span(0,1,List(5),就,就-01,false)),Map(2 -> 这, 5 -> 就-01, 1 -> 更-01, 4 -> 在-01, 0 -> 脆弱-01, 3 -> 地球),Map(就 -> 就-01, 在 -> 在-01, 这 -> 这, 脆 -> 脆弱-01, 地 -> 地球, 更 -> 更-01))),[Ljava.lang.String;@319642db,Annotation([Ljava.lang.String;@59498d94,[Ljava.lang.String;@35bfa1bb,[Ljava.lang.String;@6b321262),Annotation([Ljava.lang.String;@68b11545,[Ljava.lang.String;@7d0100ea,[Ledu.cmu.lti.nlp.amr.Dependency;@357bc488),Annotation([Ljava.lang.String;@4ea17147,[Ljava.lang.String;@2eda4eeb,[Ljava.lang.String;@5ba90d8a),Annotation([Ljava.lang.String;@309dcdf3,[Ljava.lang.String;@7573b9ee,[Ledu.cmu.lti.nlp.amr.Entity;@9a20cbd))
AMR:
(在 / 在-01, manner, 就 / 就-01)
(在 / 在-01, time, 脆 / 脆弱-01)
(地 / 地球, manner, 在 / 在-01)
(更 / 更-01, ARG0, 这 / 这)
(脆 / 脆弱-01, degree, 更 / 更-01)

Decoded in 13,583 microseconds
Sentence: 我 借 着 月光 看 着 这 惨白 的 面额 ， 这 双 紧闭 的 眼睛 ， 这 随 风 飘动 的 绺绺 头发 ， 这时 我 对 自己 说道 ： “ 我 所 看到 的 仅仅 是 外表 。

Spans:
Span 36-37:  仅仅 => 仅仅
Span 1-2:  借 => 借-01
Span 38-39:  外表 => 外表
Span 23-24:  头发 => 头发
Span 27-28:  对 => 对-02
Span 7-8:  惨白 => 惨白
Span 32-33:  我 => 我
Span 26-27:  我 => 我
Span 0-1:  我 => 我
Span 37-38:  是 => 是-04
Span 3-4:  月光 => 月光
Span 4-5:  看 => 看-10
Span 34-35:  看到 => (thing :arg1-of 看到-01)
Span 15-16:  眼睛 => 眼睛
Span 13-14:  紧闭 => 紧闭-01
Span 22-23:  绺绺 => 绺绺
Span 28-29:  自己 => 自己
Span 29-30:  说道 => 说道
Span 17-18:  这 => 这
Span 11-12:  这 => 这
Span 6-7:  这 => 这
Span 25-26:  这时 => 这时
Span 18-19:  随 => 随-02
Span 9-10:  面额 => 面额
Span 19-20:  风 => 风
Span 20-21:  飘动 => 飘动-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 最 重要 的 是 看 不 见 的 … ”

Spans:
Span 5-6:  不 => 不
Span 3-4:  是 => 是-04
Span 0-1:  最 => 最
Span 4-5:  看 => 看-10
Span 6-7:  见 => 见-01
Span 1-2:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  最 => 最
Oracle Span 1-2:  重要 => 重要-01

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Dependencies:
1	最	_	AD	AD	_	2	advmod	_	_
2	重要	_	VA	VA	_	4	top	_	_
3	的	_	DEC	DEC	_	2	cpm	_	_
4	是	_	VC	VC	_	0	root	_	_
5	看	_	VV	VV	_	4	ccomp	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	见	_	VV	VV	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	…	_	NN	NN	_	5	dobj	_	_
10	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 重要-01, degree, x15 / 最)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),见,见-01,false), Span(5,6,List(1),不,不,false), Span(4,5,List(2),看,看-10,false), Span(3,4,List(3),是,是-04,false), Span(1,2,List(4),重要,重要-01,false), Span(0,1,List(5),最,最,false)),Map(2 -> 看-10, 5 -> 最, 1 -> 不, 4 -> 重要-01, 0 -> 见-01, 3 -> 是-04),Map(重 -> 重要-01, 不 -> 不, 看 -> 看-10, 是 -> 是-04, 见 -> 见-01, 最 -> 最))),[Ljava.lang.String;@445821a6,Annotation([Ljava.lang.String;@2c0c4c0a,[Ljava.lang.String;@35d26ad2,[Ljava.lang.String;@bb25753),Annotation([Ljava.lang.String;@ee21292,[Ljava.lang.String;@40c06358,[Ledu.cmu.lti.nlp.amr.Dependency;@66e21568),Annotation([Ljava.lang.String;@7f73ce28,[Ljava.lang.String;@611b35d6,[Ljava.lang.String;@2282400e),Annotation([Ljava.lang.String;@543d5863,[Ljava.lang.String;@35dece42,[Ledu.cmu.lti.nlp.amr.Entity;@dd3f8aa))
AMR:
(是 / 是-04, manner, 重 / 重要-01)
(看 / 看-10, ARG5, 不 / 不)
(看 / 看-10, manner, 是 / 是-04)
(见 / 见-01, manner, 不 / 不)
(重 / 重要-01, degree, 最 / 最)

Decoded in 10,112 microseconds
Sentence: 由于 看到 他 稍稍 张开 的 嘴唇 露出 一 丝 微笑 ， 我 又 自言自语 地 说 ： “ 在 这 个 熟睡 了 的 小 王子 身上 ， 使 我 非常 感动 的 ， 是 他 对 他 那 朵 花 的 忠诚 ， 是 在 他 心 中 闪烁 的 那 朵 玫瑰花 的 形象 。 这 朵 玫瑰花 ， 即使 在 小 王子 睡着 了 的 时候 ， 也 象 一 盏 灯 的 火焰 一样 在 他 身上 闪耀 着 光辉 … ”

Spans:
Span 78-79:  一样 => 一样
Span 71-72:  也 => 也
Span 80-81:  他 => 他
Span 47-48:  他 => 他
Span 38-39:  他 => 他
Span 36-37:  他 => 他
Span 2-3:  他 => 他
Span 29-30:  使 => 使-01
Span 84-85:  光辉 => 光辉
Span 13-14:  又 => 又
Span 6-7:  嘴唇 => 嘴唇
Span 79-80:  在 => 在-01
Span 63-64:  在 => 在-01
Span 46-47:  在 => 在-01
Span 19-20:  在 => 在-01
Span 15-16:  地 => 地
Span 37-38:  对 => 对-02
Span 64-65:  小 => 小
Span 25-26:  小 => 小
Span 4-5:  张开 => 张开-01
Span 56-57:  形象 => 形象-01
Span 10-11:  微笑 => 微笑
Span 48-49:  心 => 心
Span 43-44:  忠诚 => 忠诚-01
Span 32-33:  感动 => 感动-01
Span 30-31:  我 => 我
Span 12-13:  我 => 我
Span 69-70:  时候 => 时候
Span 45-46:  是 => 是-04
Span 35-36:  是 => 是-04
Span 77-78:  火焰 => 火焰
Span 75-76:  灯 => 灯
Span 22-23:  熟睡 => 熟睡-01
Span 65-66:  王子 => 王子
Span 26-27:  王子 => 王子
Span 60-61:  玫瑰花 => 玫瑰花
Span 54-55:  玫瑰花 => 玫瑰花
Span 1-2:  看到 => (thing :arg1-of 看到-01)
Span 66-67:  睡着 => 睡着-01
Span 3-4:  稍稍 => 稍稍
Span 14-15:  自言自语 => 自言自语
Span 41-42:  花 => 花-01
Span 16-17:  说 => 说-02
Span 81-82:  身上 => 身上
Span 27-28:  身上 => 身上
Span 58-59:  这 => 这
Span 20-21:  这 => 这
Span 52-53:  那 => 那
Span 39-40:  那 => 那
Span 50-51:  闪烁 => 闪烁-01
Span 82-83:  闪耀 => 闪耀-01
Span 7-8:  露出 => 露出-01
Span 31-32:  非常 => 非常

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这时 ， 我 就 感觉 到 他 更加 脆弱 。

Spans:
Span 6-7:  他 => 他
Span 5-6:  到 => 到-01
Span 3-4:  就 => 就-01
Span 4-5:  感觉 => 感觉-01
Span 2-3:  我 => 我
Span 7-8:  更加 => 更加
Span 8-9:  脆弱 => 脆弱-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  他 => 他
Oracle Span 3-4:  就 => 就
Oracle Span 4-5:  感觉 => 感觉-01
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  更加 => 更加
Oracle Span 8-9:  脆弱 => 脆弱-01
Oracle Span 0-1:  这时 => 这时

Extra span: 到 => 到-01
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	感觉	_	VV	VV	_	0	root	_	_
6	到	_	P	P	_	9	prep	_	_
7	他	_	PN	PN	_	6	pobj	_	_
8	更加	_	AD	AD	_	9	advmod	_	_
9	脆弱	_	VA	VA	_	5	ccomp	_	_
10	。	_	PU	PU	_	5	punct	_	_
11	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 感觉-01, arg0, x2 / 我)
(x0 / 感觉-01, arg1, x4 / 脆弱-01)
(x0 / 感觉-01, manner, x3 / 就)
(x0 / 感觉-01, time, x7 / 这时)
(x4 / 脆弱-01, arg0, x5 / 他)
(x4 / 脆弱-01, degree, x6 / 更加)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),脆弱,脆弱-01,false), Span(7,8,List(1),更加,更加,false), Span(6,7,List(2),他,他,false), Span(5,6,List(3),到,到-01,false), Span(4,5,List(4),感觉,感觉-01,false), Span(3,4,List(5),就,就-01,false), Span(2,3,List(6),我,我,false), Span(0,1,List(7),这时,这时,false)),Map(2 -> 他, 5 -> 就-01, 7 -> 这时, 1 -> 更加, 4 -> 感觉-01, 6 -> 我, 0 -> 脆弱-01, 3 -> 到-01),Map(就 -> 就-01, 我 -> 我, 感 -> 感觉-01, 这 -> 这时, 脆 -> 脆弱-01, 他 -> 他, 到 -> 到-01, 更 -> 更加))),[Ljava.lang.String;@3a1f2a1,Annotation([Ljava.lang.String;@40ce9049,[Ljava.lang.String;@52ca2652,[Ljava.lang.String;@65c5bf0e),Annotation([Ljava.lang.String;@697d6ded,[Ljava.lang.String;@5d05f453,[Ledu.cmu.lti.nlp.amr.Dependency;@5efeb117),Annotation([Ljava.lang.String;@160b4809,[Ljava.lang.String;@149b4d20,[Ljava.lang.String;@664e848c),Annotation([Ljava.lang.String;@4d93f75b,[Ljava.lang.String;@114a5e0,[Ledu.cmu.lti.nlp.amr.Entity;@4f281aaf))
AMR:
(到 / 到-01, season, 他 / 他)
(就 / 就-01, manner, 我 / 我)
(感 / 感觉-01, ARG4, 到 / 到-01)
(感 / 感觉-01, manner, 就 / 就-01)
(感 / 感觉-01, time, 这 / 这时)
(脆 / 脆弱-01, degree, 更 / 更加)
(脆 / 脆弱-01, time, 到 / 到-01)

Decoded in 17,215 microseconds
Sentence: 应该 保护 灯焰 ： 一 阵 风 就 可能 把 它 吹灭 …

Spans:
Span 1-2:  保护 => 保护-01
Span 8-9:  可能 => 可能-02
Span 11-12:  吹灭 => 吹灭
Span 10-11:  它 => 它
Span 7-8:  就 => 就-01
Span 0-1:  应该 => 应该-01
Span 2-3:  灯焰 => 灯焰
Span 5-6:  阵 => 阵
Span 6-7:  风 => 风

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  保护 => 保护-01
Oracle Span 8-9:  可能 => 可能-01
Oracle Span 11-12:  吹灭 => 吹灭
Oracle Span 7-8:  就 => 就
Oracle Span 0-1:  应该 => 应该-02
Oracle Span 2-3:  灯焰 => 灯焰
Oracle Span 6-7:  风 => 风

Extra span: 它 => 它
Incorrect span: 可能 => 可能-02
Incorrect span: 就 => 就-01
Extra span: 阵 => 阵
Incorrect span: 应该 => 应该-01
Missing span: 应该 => 应该-02
Missing span: 可能 => 可能-01
Missing span: 就 => 就
Dependencies:
1	应该	_	NN	NN	_	3	nn	_	_
2	保护	_	NN	NN	_	3	nn	_	_
3	灯焰	_	NN	NN	_	12	nsubj	_	_
4	：	_	PU	PU	_	12	punct	_	_
5	一	_	CD	CD	_	7	nummod	_	_
6	阵	_	NN	NN	_	7	nn	_	_
7	风	_	NN	NN	_	12	nsubj	_	_
8	就	_	AD	AD	_	12	advmod	_	_
9	可能	_	VV	VV	_	12	mmod	_	_
10	把	_	BA	BA	_	12	ba	_	_
11	它	_	PN	PN	_	12	nsubj	_	_
12	吹灭	_	VV	VV	_	0	root	_	_
13	…	_	NN	NN	_	12	dobj	_	_

Oracle:
(x0 / 应该-02, arg0, x2 / 保护-01)
(x2 / 保护-01, arg1, x3 / 灯焰)
(x2 / 保护-01, cause, x4 / 可能-01)
(x4 / 可能-01, arg0, x6 / 吹灭)
(x4 / 可能-01, manner, x5 / 就)
(x7 / 风, arg0, x6 / 吹灭)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),吹灭,吹灭,false), Span(10,11,List(1),它,它,false), Span(8,9,List(2),可能,可能-02,false), Span(7,8,List(3),就,就-01,false), Span(6,7,List(4),风,风,false), Span(5,6,List(5),阵,阵,false), Span(2,3,List(6),灯焰,灯焰,false), Span(1,2,List(7),保护,保护-01,false), Span(0,1,List(8),应该,应该-01,false)),Map(2 -> 可能-02, 5 -> 阵, 8 -> 应该-01, 7 -> 保护-01, 1 -> 它, 4 -> 风, 6 -> 灯焰, 0 -> 吹灭, 3 -> 就-01),Map(就 -> 就-01, 灯 -> 灯焰, 它 -> 它, 吹 -> 吹灭, 保 -> 保护-01, 风 -> 风, 应 -> 应该-01, 阵 -> 阵, 可 -> 可能-02))),[Ljava.lang.String;@5d508d22,Annotation([Ljava.lang.String;@f2b90fc,[Ljava.lang.String;@2bb41f5c,[Ljava.lang.String;@24c685e7),Annotation([Ljava.lang.String;@7da635c0,[Ljava.lang.String;@2ed9f6f8,[Ledu.cmu.lti.nlp.amr.Dependency;@251c4280),Annotation([Ljava.lang.String;@35650279,[Ljava.lang.String;@79a13920,[Ljava.lang.String;@182e7eda),Annotation([Ljava.lang.String;@5f61371d,[Ljava.lang.String;@420a8042,[Ledu.cmu.lti.nlp.amr.Entity;@3292d91a))
AMR:
(保 / 保护-01, manner, 应 / 应该-01)
(保 / 保护-01, prep-in, 灯 / 灯焰)
(可 / 可能-02, manner, 就 / 就-01)
(可 / 可能-02, prep-against, 吹 / 吹灭)
(它 / 它, prep-in, 吹 / 吹灭)
(阵 / 阵, domain, 灯 / 灯焰)
(风 / 风, manner, 阵 / 阵)
(风 / 风, season, 就 / 就-01)

Decoded in 22,003 microseconds
Sentence: 于是 ， 就 这样 走 着 ， 我 在 黎明 时 发现 了 水井 。

Spans:
Span 11-12:  发现 => 发现-01
Span 8-9:  在 => 在-01
Span 2-3:  就 => 就-01
Span 7-8:  我 => 我
Span 13-14:  水井 => 水井
Span 4-5:  走 => 走-05
Span 3-4:  这样 => 这样-01
Span 9-10:  黎明 => 黎明

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  发现 => 发现-01
Oracle Span 7-8:  我 => 我
Oracle Span 13-14:  水井 => 水井
Oracle Span 4-5:  走 => 走-01
Oracle Span 3-4:  这样 => 这样
Oracle Span 9-10:  黎明 => 黎明

Extra span: 在 => 在-01
Incorrect span: 走 => 走-05
Incorrect span: 这样 => 这样-01
Extra span: 就 => 就-01
Missing span: 走 => 走-01
Missing span: 这样 => 这样
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	就	_	AD	AD	_	5	advmod	_	_
4	这样	_	AD	AD	_	5	advmod	_	_
5	走	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	我	_	PN	PN	_	12	nsubj	_	_
9	在	_	P	P	_	12	prep	_	_
10	黎明	_	NN	NN	_	11	lobj	_	_
11	时	_	LC	LC	_	9	plmod	_	_
12	发现	_	VV	VV	_	5	dep	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	水井	_	NN	NN	_	12	dobj	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x17 / 走-01, manner, x18 / 这样)
(x20 / 发现-01, arg0, x21 / 我)
(x20 / 发现-01, arg1, x22 / 水井)
(x20 / 发现-01, time, x23 / 黎明)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),水井,水井,false), Span(11,12,List(1),发现,发现-01,false), Span(9,10,List(2),黎明,黎明,false), Span(8,9,List(3),在,在-01,false), Span(7,8,List(4),我,我,false), Span(4,5,List(5),走,走-05,false), Span(3,4,List(6),这样,这样-01,false), Span(2,3,List(7),就,就-01,false)),Map(2 -> 黎明, 5 -> 走-05, 7 -> 就-01, 1 -> 发现-01, 4 -> 我, 6 -> 这样-01, 0 -> 水井, 3 -> 在-01),Map(黎 -> 黎明, 就 -> 就-01, 发 -> 发现-01, 在 -> 在-01, 我 -> 我, 这 -> 这样-01, 水 -> 水井, 走 -> 走-05))),[Ljava.lang.String;@5921b93c,Annotation([Ljava.lang.String;@faea4da,[Ljava.lang.String;@19b02dfd,[Ljava.lang.String;@3dce6dd8),Annotation([Ljava.lang.String;@69f2cb04,[Ljava.lang.String;@13803a94,[Ledu.cmu.lti.nlp.amr.Dependency;@b4732dc),Annotation([Ljava.lang.String;@45292ec1,[Ljava.lang.String;@3a7c678b,[Ljava.lang.String;@28babeca),Annotation([Ljava.lang.String;@1ad9b8d3,[Ljava.lang.String;@168ad26f,[Ledu.cmu.lti.nlp.amr.Entity;@4f93bf0a))
AMR:
(发 / 发现-01, ARG0, 在 / 在-01)
(发 / 发现-01, op, 水 / 水井)
(在 / 在-01, ARG5, 我 / 我)
(在 / 在-01, manner, 走 / 走-05)
(走 / 走-05, manner, 就 / 就-01)
(走 / 走-05, manner, 这 / 这样-01)
(黎 / 黎明, manner, 在 / 在-01)

Decoded in 26,826 microseconds
Sentence: XXV 。

Spans:
Span 0-1:  XXV => XXV

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXV => XXV

Dependencies:
1	XXV	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXV,XXV,false)),Map(0 -> XXV),Map(x -> XXV))),[Ljava.lang.String;@322204dc,Annotation([Ljava.lang.String;@656a3d6b,[Ljava.lang.String;@25b38203,[Ljava.lang.String;@778a1250),Annotation([Ljava.lang.String;@55acec99,[Ljava.lang.String;@61191222,[Ledu.cmu.lti.nlp.amr.Dependency;@58833798),Annotation([Ljava.lang.String;@7f3ca64a,[Ljava.lang.String;@4d464510,[Ljava.lang.String;@64e7d698),Annotation([Ljava.lang.String;@2519026b,[Ljava.lang.String;@3f8dfe74,[Ledu.cmu.lti.nlp.amr.Entity;@401c4250))
AMR:


Decoded in 1,096 microseconds
Sentence: “ 那些 人们 ， 他们 往 快车 里 拥挤 ， 但是 他们 却 不 知道 要 寻找 什么 。

Spans:
Span 13-14:  不 => 不
Span 2-3:  人们 => 人们
Span 17-18:  什么 => 什么
Span 11-12:  他们 => 他们
Span 4-5:  他们 => 他们
Span 16-17:  寻找 => 寻找-01
Span 6-7:  快车 => 快车
Span 8-9:  拥挤 => 拥挤-01
Span 14-15:  知道 => 知道-01
Span 15-16:  要 => 要-02
Span 1-2:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  人们 => 人们
Oracle Span 16-17:  寻找 => 寻找-01
Oracle Span 6-7:  快车 => 快车
Oracle Span 8-9:  拥挤 => 拥挤-01
Oracle Span 14-15:  知道 => 知道-01
Oracle Span 15-16:  要 => 要-03
Oracle Span 1-2:  那些 => 那些

Extra span: 什么 => 什么
Incorrect span: 要 => 要-02
Extra span: 不 => 不
Extra span: 他们 => 他们
Extra span: 他们 => 他们
Missing span: 要 => 要-03
Dependencies:
1	“	_	PU	PU	_	9	punct	_	_
2	那些	_	DT	DT	_	3	det	_	_
3	人们	_	NN	NN	_	9	nsubj	_	_
4	,	_	PU	PU	_	9	punct	_	_
5	他们	_	PN	PN	_	9	nsubj	_	_
6	往	_	P	P	_	9	prep	_	_
7	快车	_	NN	NN	_	8	lobj	_	_
8	里	_	LC	LC	_	6	plmod	_	_
9	拥挤	_	VA	VA	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	但是	_	AD	AD	_	15	advmod	_	_
12	他们	_	PN	PN	_	15	nsubj	_	_
13	却	_	AD	AD	_	15	advmod	_	_
14	不	_	AD	AD	_	15	neg	_	_
15	知道	_	VV	VV	_	9	conj	_	_
16	要	_	VV	VV	_	17	mmod	_	_
17	寻找	_	VV	VV	_	15	ccomp	_	_
18	什么	_	PN	PN	_	17	dobj	_	_
19	。	_	PU	PU	_	9	punct	_	_
20	他们	_	PN	PN	_	17	xsubj	_	_

Oracle:
(x16 / 拥挤-01, arg0, x17 / 人们)
(x16 / 拥挤-01, direction, x19 / 快车)
(x17 / 人们, mod, x18 / 那些)
(x20 / 知道-01, arg1, x23 / 要-03)
(x23 / 要-03, arg0, x24 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),什么,什么,false), Span(16,17,List(1),寻找,寻找-01,false), Span(15,16,List(2),要,要-02,false), Span(14,15,List(3),知道,知道-01,false), Span(13,14,List(4),不,不,false), Span(11,12,List(5),他们,他们,false), Span(8,9,List(6),拥挤,拥挤-01,false), Span(6,7,List(7),快车,快车,false), Span(4,5,List(8),他们,他们,false), Span(2,3,List(9),人们,人们,false), Span(1,2,List(10),那些,那些,false)),Map(2 -> 要-02, 5 -> 他们, 8 -> 他们, 7 -> 快车, 1 -> 寻找-01, 4 -> 不, 6 -> 拥挤-01, 9 -> 人们, 0 -> 什么, 10 -> 那些, 3 -> 知道-01),Map(他2 -> 他们, 快 -> 快车, 要 -> 要-02, 寻 -> 寻找-01, 拥 -> 拥挤-01, 他 -> 他们, 不 -> 不, 那 -> 那些, 知 -> 知道-01, 什 -> 什么, 人 -> 人们))),[Ljava.lang.String;@1a950fdd,Annotation([Ljava.lang.String;@77724cbe,[Ljava.lang.String;@27dc627a,[Ljava.lang.String;@570ba13),Annotation([Ljava.lang.String;@37a9b687,[Ljava.lang.String;@525b1b70,[Ledu.cmu.lti.nlp.amr.Dependency;@16d07cf3),Annotation([Ljava.lang.String;@16f0ec18,[Ljava.lang.String;@6c977dcf,[Ljava.lang.String;@661d6bb6),Annotation([Ljava.lang.String;@733fb462,[Ljava.lang.String;@623e0631,[Ledu.cmu.lti.nlp.amr.Entity;@359066bc))
AMR:
(人 / 人们, mod, 那 / 那些)
(他2 / 他们, instrument, 人 / 人们)
(寻 / 寻找-01, subset, 什 / 什么)
(快 / 快车, domain, 他2 / 他们)
(拥 / 拥挤-01, direction, 他 / 他们)
(拥 / 拥挤-01, direction, 快 / 快车)
(拥 / 拥挤-01, location, 不 / 不)
(知 / 知道-01, time, 不 / 不)
(要 / 要-02, example, 寻 / 寻找-01)
(要 / 要-02, location, 不 / 不)

Decoded in 33,826 microseconds
Sentence: 于是 ， 他们 就 忙忙碌碌 ， 来回 转 圈子 … ”

Spans:
Span 2-3:  他们 => 他们
Span 3-4:  就 => 就-01
Span 4-5:  忙忙碌碌 => 忙忙碌碌
Span 6-7:  来回 => 来回-01
Span 7-8:  转 => 转-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他们 => 他们
Oracle Span 4-5:  忙忙碌碌 => 忙忙碌碌
Oracle Span 6-7:  来回 => 来回-01

Extra span: 转 => 转-04
Extra span: 就 => 就-01
Dependencies:
1	于是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他们	_	PN	PN	_	5	nsubj	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	忙忙碌碌	_	VV	VV	_	8	conj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	来回	_	NR	NR	_	8	nsubj	_	_
8	转	_	VV	VV	_	0	root	_	_
9	圈子	_	NN	NN	_	10	nn	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x11 / 忙忙碌碌, arg0, x13 / 他们)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),转,转-04,false), Span(6,7,List(1),来回,来回-01,false), Span(4,5,List(2),忙忙碌碌,忙忙碌碌,false), Span(3,4,List(3),就,就-01,false), Span(2,3,List(4),他们,他们,false)),Map(2 -> 忙忙碌碌, 1 -> 来回-01, 4 -> 他们, 0 -> 转-04, 3 -> 就-01),Map(就 -> 就-01, 忙 -> 忙忙碌碌, 来 -> 来回-01, 他 -> 他们, 转 -> 转-04))),[Ljava.lang.String;@385dfb63,Annotation([Ljava.lang.String;@364fd4ae,[Ljava.lang.String;@245253d8,[Ljava.lang.String;@12417468),Annotation([Ljava.lang.String;@459003a0,[Ljava.lang.String;@d325518,[Ledu.cmu.lti.nlp.amr.Dependency;@3b481bf5),Annotation([Ljava.lang.String;@2233cac0,[Ljava.lang.String;@67fb5025,[Ljava.lang.String;@787e4357),Annotation([Ljava.lang.String;@392781e,[Ljava.lang.String;@3fcbc766,[Ledu.cmu.lti.nlp.amr.Entity;@28cd2c2))
AMR:
(就 / 就-01, manner, 他 / 他们)
(忙 / 忙忙碌碌, manner, 就 / 就-01)
(转 / 转-04, manner, 就 / 就-01)
(转 / 转-04, manner, 来 / 来回-01)

Decoded in 8,482 microseconds
Sentence: 他 接着 又 说 ： “ 这 没有 必要 … ”

Spans:
Span 0-1:  他 => 他
Span 2-3:  又 => 又
Span 8-9:  必要 => 必要-01
Span 1-2:  接着 => 接着-01
Span 3-4:  说 => 说-02
Span 6-7:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  又 => 又
Oracle Span 8-9:  必要 => 必要-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 6-7:  这 => 这

Incorrect span: 说 => 说-02
Extra span: 接着 => 接着-01
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	接着	_	AD	AD	_	4	advmod	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	这	_	PN	PN	_	8	top	_	_
8	没有	_	VE	VE	_	4	ccomp	_	_
9	必要	_	JJ	JJ	_	10	amod	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x2 / 说-01, arg0, x4 / 他)
(x2 / 说-01, arg1, x9 / 必要-01)
(x2 / 说-01, manner, x3 / 又)
(x9 / 必要-01, arg0, x11 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),必要,必要-01,false), Span(6,7,List(1),这,这,false), Span(3,4,List(2),说,说-02,false), Span(2,3,List(3),又,又,false), Span(1,2,List(4),接着,接着-01,false), Span(0,1,List(5),他,他,false)),Map(2 -> 说-02, 5 -> 他, 1 -> 这, 4 -> 接着-01, 0 -> 必要-01, 3 -> 又),Map(又 -> 又, 接 -> 接着-01, 这 -> 这, 他 -> 他, 说 -> 说-02, 必 -> 必要-01))),[Ljava.lang.String;@8e25d3f,Annotation([Ljava.lang.String;@18a096b5,[Ljava.lang.String;@79b18230,[Ljava.lang.String;@1d4f5506),Annotation([Ljava.lang.String;@7dee835,[Ljava.lang.String;@1b57c345,[Ledu.cmu.lti.nlp.amr.Dependency;@6e02721d),Annotation([Ljava.lang.String;@902fdbe,[Ljava.lang.String;@796d33eb,[Ljava.lang.String;@5c059a68),Annotation([Ljava.lang.String;@21ea996f,[Ljava.lang.String;@3f9b7fe1,[Ledu.cmu.lti.nlp.amr.Entity;@2f79f192))
AMR:
(必 / 必要-01, domain, 这 / 这)
(接 / 接着-01, prep-following, 他 / 他)
(说 / 说-02, ARG3, 必 / 必要-01)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, prep-following, 接 / 接着-01)

Decoded in 11,368 microseconds
Sentence: 我们 终于 找到 的 这 口 井 ， 不同 于 撒哈拉 的 那些 井 。

NER Entity: (country :name (name :op "撒哈拉"))
NER Entity: (country :name (name :op "撒哈拉"))
Spans:
Span 8-9:  不同 => 不同-01
Span 13-14:  井 => 井
Span 6-7:  井 => 井
Span 0-1:  我们 => 我们
Span 2-3:  找到 => 找到-01
Span 10-11:  撒哈拉 => 撒哈拉
Span 1-2:  终于 => 终于
Span 4-5:  这 => 这
Span 12-13:  那些 => 那些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  井 => 井
Oracle Span 13-14:  井 => 井
Oracle Span 0-1:  我们 => 我们
Oracle Span 2-3:  找到 => 找到-01
Oracle Span 10-11:  撒哈拉 => 撒哈拉
Oracle Span 1-2:  终于 => 终于
Oracle Span 4-5:  这 => 这
Oracle Span 12-13:  那些 => 那些

Extra span: 不同 => 不同-01
Dependencies:
1	我们	_	PN	PN	_	3	nsubj	_	_
2	终于	_	AD	AD	_	3	advmod	_	_
3	找到	_	VV	VV	_	6	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	这	_	DT	DT	_	6	det	_	_
6	口	_	NN	NN	_	7	nsubj	_	_
7	井	_	VV	VV	_	0	root	_	_
8	,	_	PU	PU	_	7	punct	_	_
9	不同	_	VA	VA	_	7	dep	_	_
10	于	_	P	P	_	9	prep	_	_
11	撒哈拉	_	NN	NN	_	14	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	那些	_	DT	DT	_	14	det	_	_
14	井	_	NN	NN	_	10	pobj	_	_
15	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x4 / 井, mod, x5 / 这)
(x6 / 找到-01, arg0, x7 / 我们)
(x6 / 找到-01, arg1, x4 / 井)
(x6 / 找到-01, manner, x8 / 终于)
(x9 / 井, location, x11 / 撒哈拉)
(x9 / 井, mod, x10 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),井,井,false), Span(12,13,List(1),那些,那些,false), Span(10,11,List(2),撒哈拉,撒哈拉,false), Span(8,9,List(3),不同,不同-01,false), Span(6,7,List(4),井,井,false), Span(4,5,List(5),这,这,false), Span(2,3,List(6),找到,找到-01,false), Span(1,2,List(7),终于,终于,false), Span(0,1,List(8),我们,我们,false)),Map(2 -> 撒哈拉, 5 -> 这, 8 -> 我们, 7 -> 终于, 1 -> 那些, 4 -> 井, 6 -> 找到-01, 0 -> 井, 3 -> 不同-01),Map(我 -> 我们, 井 -> 井, 终 -> 终于, 这 -> 这, 不 -> 不同-01, 那 -> 那些, 找 -> 找到-01, 撒 -> 撒哈拉, 井2 -> 井))),[Ljava.lang.String;@5fdfe8cf,Annotation([Ljava.lang.String;@2a8b33ba,[Ljava.lang.String;@4e8b357d,[Ljava.lang.String;@2e1eb85f),Annotation([Ljava.lang.String;@ea7a4c3,[Ljava.lang.String;@7d42404e,[Ledu.cmu.lti.nlp.amr.Dependency;@6af5b246),Annotation([Ljava.lang.String;@31723307,[Ljava.lang.String;@2401856,[Ljava.lang.String;@6d6f6860),Annotation([Ljava.lang.String;@2a4f8009,[Ljava.lang.String;@a85644c,[Ledu.cmu.lti.nlp.amr.Entity;@8054fe2))
AMR:
(井 / 井, location, 撒 / 撒哈拉)
(井 / 井, mod, 那 / 那些)
(井2 / 井, ARG3, 不 / 不同-01)
(井2 / 井, mod, 这 / 这)
(找 / 找到-01, ARG0, 井2 / 井)
(找 / 找到-01, ARG6, 我 / 我们)
(找 / 找到-01, manner, 终 / 终于)
(撒 / 撒哈拉, timezone, 不 / 不同-01)

Decoded in 25,066 microseconds
Sentence: 撒哈拉 的 井 只 是 沙漠 中 挖 的 洞 。

NER Entity: (country :name (name :op "撒哈拉"))
NER Entity: (country :name (name :op "撒哈拉"))
Spans:
Span 2-3:  井 => 井
Span 3-4:  只 => 只
Span 7-8:  挖 => 挖-01
Span 0-1:  撒哈拉 => 撒哈拉
Span 4-5:  是 => 是-04
Span 5-6:  沙漠 => 沙漠
Span 9-10:  洞 => 洞

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  井 => 井
Oracle Span 3-4:  只 => 只
Oracle Span 7-8:  挖 => 挖-01
Oracle Span 0-1:  撒哈拉 => 撒哈拉
Oracle Span 5-6:  沙漠 => 沙漠
Oracle Span 9-10:  洞 => 洞

Extra span: 是 => 是-04
Dependencies:
1	撒哈拉	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	井	_	NN	NN	_	5	nsubj	_	_
4	只	_	AD	AD	_	5	advmod	_	_
5	是	_	VC	VC	_	0	root	_	_
6	沙漠	_	NN	NN	_	7	lobj	_	_
7	中	_	LC	LC	_	8	loc	_	_
8	挖	_	VV	VV	_	10	rcmod	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	洞	_	NN	NN	_	5	attr	_	_
11	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 洞, domain, x2 / 井)
(x0 / 洞, mod, x3 / 只)
(x2 / 井, location, x6 / 撒哈拉)
(x4 / 挖-01, arg1, x0 / 洞)
(x4 / 挖-01, location, x5 / 沙漠)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),洞,洞,false), Span(7,8,List(1),挖,挖-01,false), Span(5,6,List(2),沙漠,沙漠,false), Span(4,5,List(3),是,是-04,false), Span(3,4,List(4),只,只,false), Span(2,3,List(5),井,井,false), Span(0,1,List(6),撒哈拉,撒哈拉,false)),Map(2 -> 沙漠, 5 -> 井, 1 -> 挖-01, 4 -> 只, 6 -> 撒哈拉, 0 -> 洞, 3 -> 是-04),Map(挖 -> 挖-01, 井 -> 井, 洞 -> 洞, 只 -> 只, 沙 -> 沙漠, 撒 -> 撒哈拉, 是 -> 是-04))),[Ljava.lang.String;@1e3f0aea,Annotation([Ljava.lang.String;@48268eec,[Ljava.lang.String;@69a024a0,[Ljava.lang.String;@4bf80c29),Annotation([Ljava.lang.String;@2d7637e6,[Ljava.lang.String;@515b9d4a,[Ledu.cmu.lti.nlp.amr.Dependency;@39b626e5),Annotation([Ljava.lang.String;@32a4ecbe,[Ljava.lang.String;@2e71240b,[Ljava.lang.String;@23cd5d42),Annotation([Ljava.lang.String;@2b44d6d0,[Ljava.lang.String;@3e900e1a,[Ledu.cmu.lti.nlp.amr.Entity;@196624bf))
AMR:
(井 / 井, location, 撒 / 撒哈拉)
(挖 / 挖-01, location, 沙 / 沙漠)
(挖 / 挖-01, op, 洞 / 洞)
(是 / 是-04, ARG4, 井 / 井)
(是 / 是-04, manner, 只 / 只)
(洞 / 洞, mod, 只 / 只)

Decoded in 15,668 microseconds
Sentence: 这 口 井 则 很 象 村子 中 的 井 。

Spans:
Span 9-10:  井 => 井
Span 2-3:  井 => 井
Span 4-5:  很 => 很
Span 6-7:  村子 => 村子
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  井 => 井
Oracle Span 9-10:  井 => 井
Oracle Span 4-5:  很 => 很
Oracle Span 6-7:  村子 => 村子
Oracle Span 0-1:  这 => 这

Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	口	_	NN	NN	_	3	nsubj	_	_
3	井	_	VV	VV	_	0	root	_	_
4	则	_	AD	AD	_	6	advmod	_	_
5	很	_	AD	AD	_	6	advmod	_	_
6	象	_	P	P	_	10	assmod	_	_
7	村子	_	NN	NN	_	8	lobj	_	_
8	中	_	LC	LC	_	6	plmod	_	_
9	的	_	DEG	DEG	_	6	assm	_	_
10	井	_	NN	NN	_	3	dobj	_	_
11	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 井, mod, x3 / 这)
(x5 / 井, location, x6 / 村子)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),井,井,false), Span(6,7,List(1),村子,村子,false), Span(4,5,List(2),很,很,false), Span(2,3,List(3),井,井,false), Span(0,1,List(4),这,这,false)),Map(2 -> 很, 1 -> 村子, 4 -> 这, 0 -> 井, 3 -> 井),Map(井 -> 井, 这 -> 这, 很 -> 很, 村 -> 村子, 井2 -> 井))),[Ljava.lang.String;@50085d9c,Annotation([Ljava.lang.String;@5df7e31b,[Ljava.lang.String;@63a9c661,[Ljava.lang.String;@4b425577),Annotation([Ljava.lang.String;@5934153e,[Ljava.lang.String;@3bb9ca38,[Ledu.cmu.lti.nlp.amr.Dependency;@160e99e0),Annotation([Ljava.lang.String;@4f3e9fbb,[Ljava.lang.String;@365afe87,[Ljava.lang.String;@43471a7e),Annotation([Ljava.lang.String;@21e45a6f,[Ljava.lang.String;@1a1ccaaf,[Ledu.cmu.lti.nlp.amr.Entity;@7b53b1ad))
AMR:
(井 / 井, location, 村 / 村子)
(井2 / 井, location, 村 / 村子)
(井2 / 井, mod, 这 / 这)
(很 / 很, age, 井 / 井)

Decoded in 9,941 microseconds
Sentence: 可是 ， 那里 又 没有 任何 村庄 ， 我 还 以为 是 在 做梦 呢 。

Spans:
Span 10-11:  以为 => 以为-02
Span 5-6:  任何 => 任何
Span 13-14:  做梦 => 做梦-01
Span 3-4:  又 => 又
Span 12-13:  在 => 在-01
Span 8-9:  我 => 我
Span 11-12:  是 => 是-04
Span 6-7:  村庄 => 村庄
Span 9-10:  还 => 还
Span 2-3:  那里 => 那里

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  以为 => 以为-01
Oracle Span 5-6:  任何 => 任何
Oracle Span 13-14:  做梦 => 做梦-01
Oracle Span 8-9:  我 => 我
Oracle Span 6-7:  村庄 => 村庄
Oracle Span 9-10:  还 => 还
Oracle Span 2-3:  那里 => 那里

Extra span: 在 => 在-01
Extra span: 是 => 是-04
Incorrect span: 以为 => 以为-02
Extra span: 又 => 又
Missing span: 以为 => 以为-01
Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	那里	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	11	dep	_	_
6	任何	_	DT	DT	_	7	det	_	_
7	村庄	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	11	punct	_	_
9	我	_	PN	PN	_	11	nsubj	_	_
10	还	_	AD	AD	_	11	advmod	_	_
11	以为	_	VV	VV	_	0	root	_	_
12	是	_	VC	VC	_	11	ccomp	_	_
13	在	_	P	P	_	12	prep	_	_
14	做梦	_	NR	NR	_	13	pobj	_	_
15	呢	_	SP	SP	_	11	dep	_	_
16	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x11 / 村庄, mod, x12 / 任何)
(x13 / 以为-01, arg0, x15 / 我)
(x13 / 以为-01, arg1, x16 / 做梦-01)
(x13 / 以为-01, manner, x14 / 还)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),做梦,做梦-01,false), Span(12,13,List(1),在,在-01,false), Span(11,12,List(2),是,是-04,false), Span(10,11,List(3),以为,以为-02,false), Span(9,10,List(4),还,还,false), Span(8,9,List(5),我,我,false), Span(6,7,List(6),村庄,村庄,false), Span(5,6,List(7),任何,任何,false), Span(3,4,List(8),又,又,false), Span(2,3,List(9),那里,那里,false)),Map(2 -> 是-04, 5 -> 我, 8 -> 又, 7 -> 任何, 1 -> 在-01, 4 -> 还, 6 -> 村庄, 9 -> 那里, 0 -> 做梦-01, 3 -> 以为-02),Map(又 -> 又, 任 -> 任何, 在 -> 在-01, 我 -> 我, 以 -> 以为-02, 还 -> 还, 做 -> 做梦-01, 那 -> 那里, 村 -> 村庄, 是 -> 是-04))),[Ljava.lang.String;@3cc053,Annotation([Ljava.lang.String;@388c519,[Ljava.lang.String;@7fbd3e75,[Ljava.lang.String;@198536f6),Annotation([Ljava.lang.String;@7fdd43cd,[Ljava.lang.String;@3a38f122,[Ledu.cmu.lti.nlp.amr.Dependency;@2ce03e86),Annotation([Ljava.lang.String;@1c628f6a,[Ljava.lang.String;@9b47400,[Ljava.lang.String;@747835f5),Annotation([Ljava.lang.String;@594131f2,[Ljava.lang.String;@51d0ec6f,[Ledu.cmu.lti.nlp.amr.Entity;@7bee8621))
AMR:
(以 / 以为-02, ARG1, 是 / 是-04)
(以 / 以为-02, time, 又 / 又)
(做 / 做梦-01, ARG1, 在 / 在-01)
(又 / 又, ARG1, 那 / 那里)
(在 / 在-01, ARG3, 是 / 是-04)
(是 / 是-04, ARG0, 我 / 我)
(是 / 是-04, ARG4, 还 / 还)
(村 / 村庄, location, 又 / 又)
(村 / 村庄, mod, 任 / 任何)

Decoded in 38,848 microseconds
Sentence: “ 真 怪 ， ”

Spans:
Span 2-3:  怪 => 怪-02
Span 1-2:  真 => 真

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  怪 => 怪-02
Oracle Span 1-2:  真 => 真

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	真	_	NN	NN	_	3	nsubj	_	_
3	怪	_	VA	VA	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 怪-02, degree, x6 / 真)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),怪,怪-02,false), Span(1,2,List(1),真,真,false)),Map(1 -> 真, 0 -> 怪-02),Map(怪 -> 怪-02, 真 -> 真))),[Ljava.lang.String;@4e0cc334,Annotation([Ljava.lang.String;@1e12a5a6,[Ljava.lang.String;@4877919f,[Ljava.lang.String;@47a7c93e),Annotation([Ljava.lang.String;@6f9ab79d,[Ljava.lang.String;@64ae105d,[Ledu.cmu.lti.nlp.amr.Dependency;@10a18e3e),Annotation([Ljava.lang.String;@69364b2d,[Ljava.lang.String;@53aa2fc9,[Ljava.lang.String;@4792f119),Annotation([Ljava.lang.String;@5bde57ab,[Ljava.lang.String;@ea00de,[Ledu.cmu.lti.nlp.amr.Entity;@23ca36d))
AMR:
(怪 / 怪-02, degree, 真 / 真)

Decoded in 2,572 microseconds
Sentence: 我 对 小 王子 说 ：

Spans:
Span 1-2:  对 => 对-02
Span 2-3:  小 => 小
Span 0-1:  我 => 我
Span 3-4:  王子 => 王子
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  王子 => 王子
Oracle Span 4-5:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	对	_	P	P	_	5	prep	_	_
3	小	_	JJ	JJ	_	4	amod	_	_
4	王子	_	NN	NN	_	2	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg3, x3 / 王子)
(x3 / 王子, mod, x4 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),说,说-02,false), Span(3,4,List(1),王子,王子,false), Span(2,3,List(2),小,小,false), Span(1,2,List(3),对,对-02,false), Span(0,1,List(4),我,我,false)),Map(2 -> 小, 1 -> 王子, 4 -> 我, 0 -> 说-02, 3 -> 对-02),Map(我 -> 我, 王 -> 王子, 小 -> 小, 说 -> 说-02, 对 -> 对-02))),[Ljava.lang.String;@52f6900a,Annotation([Ljava.lang.String;@7bbcf6f0,[Ljava.lang.String;@2b80e5a9,[Ljava.lang.String;@4cc01c7f),Annotation([Ljava.lang.String;@2a50b32d,[Ljava.lang.String;@36c7cbe1,[Ledu.cmu.lti.nlp.amr.Dependency;@1ac6dd3d),Annotation([Ljava.lang.String;@562919fe,[Ljava.lang.String;@794f11cd,[Ljava.lang.String;@715f45c6),Annotation([Ljava.lang.String;@5d5c41e5,[Ljava.lang.String;@43245559,[Ledu.cmu.lti.nlp.amr.Entity;@42e4e589))
AMR:
(对 / 对-02, beneficiary, 我 / 我)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, prep-following, 对 / 对-02)

Decoded in 7,626 microseconds
Sentence: “ 一切 都 是 现成 的 ： 辘轳 、 水桶 、 绳子 … ”

Spans:
Span 1-2:  一切 => 一切
Span 3-4:  是 => 是-04
Span 9-10:  水桶 => 水桶
Span 4-5:  现成 => 现成
Span 11-12:  绳子 => 绳子
Span 7-8:  辘轳 => 辘轳
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一切 => 一切
Oracle Span 9-10:  水桶 => 水桶
Oracle Span 4-5:  现成 => 现成
Oracle Span 11-12:  绳子 => 绳子
Oracle Span 7-8:  辘轳 => 辘轳
Oracle Span 2-3:  都 => 都

Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	一切	_	CD	CD	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	现成	_	JJ	JJ	_	4	dep	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	：	_	PU	PU	_	4	punct	_	_
8	辘轳	_	AD	AD	_	13	advmod	_	_
9	、	_	PU	PU	_	8	punct	_	_
10	水桶	_	AD	AD	_	8	conj	_	_
11	、	_	PU	PU	_	8	punct	_	_
12	绳子	_	AD	AD	_	8	conj	_	_
13	…	_	VV	VV	_	4	conj	_	_
14	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x15 / 现成, domain, x17 / 一切)
(x15 / 现成, manner, x16 / 都)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),绳子,绳子,false), Span(9,10,List(1),水桶,水桶,false), Span(7,8,List(2),辘轳,辘轳,false), Span(4,5,List(3),现成,现成,false), Span(3,4,List(4),是,是-04,false), Span(2,3,List(5),都,都,false), Span(1,2,List(6),一切,一切,false)),Map(2 -> 辘轳, 5 -> 都, 1 -> 水桶, 4 -> 是-04, 6 -> 一切, 0 -> 绳子, 3 -> 现成),Map(辘 -> 辘轳, 水 -> 水桶, 都 -> 都, 绳 -> 绳子, 一 -> 一切, 是 -> 是-04, 现 -> 现成))),[Ljava.lang.String;@499ee966,Annotation([Ljava.lang.String;@76f2dad9,[Ljava.lang.String;@171dc7c3,[Ljava.lang.String;@72b0a004),Annotation([Ljava.lang.String;@4cdba2ed,[Ljava.lang.String;@2c1f8dbd,[Ledu.cmu.lti.nlp.amr.Dependency;@55c57422),Annotation([Ljava.lang.String;@22825e1e,[Ljava.lang.String;@335f5c69,[Ljava.lang.String;@63fd4dda),Annotation([Ljava.lang.String;@1d6751e3,[Ljava.lang.String;@2d258eff,[Ledu.cmu.lti.nlp.amr.Entity;@64502326))
AMR:
(是 / 是-04, manner, 都 / 都)
(现 / 现成, domain, 一 / 一切)
(现 / 现成, mod, 是 / 是-04)
(绳 / 绳子, degree, 水 / 水桶)
(辘 / 辘轳, location, 水 / 水桶)
(辘 / 辘轳, topic, 是 / 是-04)

Decoded in 17,930 microseconds
Sentence: 他 笑 了 ， 拿 着 绳子 ， 转动 着 辘轳 。

Spans:
Span 0-1:  他 => 他
Span 4-5:  拿 => 拿-02
Span 1-2:  笑 => 笑-01
Span 6-7:  绳子 => 绳子
Span 8-9:  转动 => 转动-01
Span 10-11:  辘轳 => 辘轳

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  拿 => 拿-03
Oracle Span 1-2:  笑 => 笑-01
Oracle Span 6-7:  绳子 => 绳子
Oracle Span 8-9:  转动 => 转动-01
Oracle Span 10-11:  辘轳 => 辘轳

Incorrect span: 拿 => 拿-02
Missing span: 拿 => 拿-03
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	笑	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	拿	_	VV	VV	_	2	conj	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	绳子	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	转动	_	VV	VV	_	2	conj	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	辘轳	_	NN	NN	_	9	dobj	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 笑-01, arg0, x13 / 他)
(x14 / 拿-03, arg1, x16 / 绳子)
(x17 / 转动-01, arg1, x19 / 辘轳)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),辘轳,辘轳,false), Span(8,9,List(1),转动,转动-01,false), Span(6,7,List(2),绳子,绳子,false), Span(4,5,List(3),拿,拿-02,false), Span(1,2,List(4),笑,笑-01,false), Span(0,1,List(5),他,他,false)),Map(2 -> 绳子, 5 -> 他, 1 -> 转动-01, 4 -> 笑-01, 0 -> 辘轳, 3 -> 拿-02),Map(辘 -> 辘轳, 笑 -> 笑-01, 他 -> 他, 拿 -> 拿-02, 绳 -> 绳子, 转 -> 转动-01))),[Ljava.lang.String;@6dca31eb,Annotation([Ljava.lang.String;@4a058df8,[Ljava.lang.String;@4b56b031,[Ljava.lang.String;@2e7af36e),Annotation([Ljava.lang.String;@1283ca23,[Ljava.lang.String;@740fefc6,[Ledu.cmu.lti.nlp.amr.Dependency;@aa61e4e),Annotation([Ljava.lang.String;@733e6df7,[Ljava.lang.String;@7fe07361,[Ljava.lang.String;@741ac284),Annotation([Ljava.lang.String;@4ef4f627,[Ljava.lang.String;@4ea56bdb,[Ledu.cmu.lti.nlp.amr.Entity;@32227215))
AMR:
(拿 / 拿-02, ARG1, 他 / 他)
(拿 / 拿-02, mod, 绳 / 绳子)
(笑 / 笑-01, prep-from, 他 / 他)
(笑 / 笑-01, unit, 转 / 转动-01)
(转 / 转动-01, mod, 辘 / 辘轳)

Decoded in 12,933 microseconds
Sentence: 辘轳 就 象 是 一 个 长期 没有 风 来 吹动 的 旧 风标 一样 ， 吱吱 作响 。

Spans:
Span 14-15:  一样 => 一样
Span 17-18:  作响 => 作响-01
Span 16-17:  吱吱 => 吱吱
Span 10-11:  吹动 => 吹动-01
Span 1-2:  就 => 就-01
Span 12-13:  旧 => 旧-01
Span 3-4:  是 => 是-04
Span 9-10:  来 => 来-06
Span 0-1:  辘轳 => 辘轳
Span 6-7:  长期 => 长期
Span 8-9:  风 => 风
Span 13-14:  风标 => 风标

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 17-18:  作响 => 作响-01
Oracle Span 16-17:  吱吱 => 吱吱
Oracle Span 10-11:  吹动 => 吹动-01
Oracle Span 12-13:  旧 => 旧-01
Oracle Span 0-1:  辘轳 => 辘轳
Oracle Span 6-7:  长期 => 长期
Oracle Span 8-9:  风 => 风
Oracle Span 13-14:  风标 => 风标

Extra span: 一样 => 一样
Extra span: 来 => 来-06
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	辘轳	_	NN	NN	_	15	nsubj	_	_
2	就	_	AD	AD	_	15	advmod	_	_
3	象	_	P	P	_	15	prep	_	_
4	是	_	VC	VC	_	14	rcmod	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	4	attr	_	_
7	长期	_	AD	AD	_	8	advmod	_	_
8	没有	_	VE	VE	_	4	conj	_	_
9	风	_	NN	NN	_	8	dobj	_	_
10	来	_	MSP	MSP	_	11	prtmod	_	_
11	吹动	_	VV	VV	_	4	dep	_	_
12	的	_	DEC	DEC	_	4	cpm	_	_
13	旧	_	JJ	JJ	_	14	amod	_	_
14	风标	_	NN	NN	_	3	pobj	_	_
15	一样	_	VA	VA	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	吱吱	_	VV	VV	_	15	dep	_	_
18	作响	_	NN	NN	_	17	dobj	_	_
19	。	_	PU	PU	_	15	punct	_	_

Oracle:
(x18 / 作响-01, arg1, x19 / 吱吱)
(x4 / 风标, mod, x5 / 旧-01)
(x7 / 吹动-01, arg0, x8 / 风)
(x7 / 吹动-01, arg1, x4 / 风标)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),作响,作响-01,false), Span(16,17,List(1),吱吱,吱吱,false), Span(14,15,List(2),一样,一样,false), Span(13,14,List(3),风标,风标,false), Span(12,13,List(4),旧,旧-01,false), Span(10,11,List(5),吹动,吹动-01,false), Span(9,10,List(6),来,来-06,false), Span(8,9,List(7),风,风,false), Span(6,7,List(8),长期,长期,false), Span(3,4,List(9),是,是-04,false), Span(1,2,List(10),就,就-01,false), Span(0,1,List(11),辘轳,辘轳,false)),Map(2 -> 一样, 5 -> 吹动-01, 8 -> 长期, 7 -> 风, 1 -> 吱吱, 11 -> 辘轳, 4 -> 旧-01, 6 -> 来-06, 9 -> 是-04, 0 -> 作响-01, 10 -> 就-01, 3 -> 风标),Map(辘 -> 辘轳, 吱 -> 吱吱, 就 -> 就-01, 来 -> 来-06, 吹 -> 吹动-01, 风 -> 风标, 作 -> 作响-01, 风2 -> 风, 是 -> 是-04, 长 -> 长期, 旧 -> 旧-01, 一 -> 一样))),[Ljava.lang.String;@108e9837,Annotation([Ljava.lang.String;@79a201cf,[Ljava.lang.String;@1cbc5693,[Ljava.lang.String;@3d2f3dcb),Annotation([Ljava.lang.String;@59845579,[Ljava.lang.String;@30c19bff,[Ledu.cmu.lti.nlp.amr.Dependency;@4e375bba),Annotation([Ljava.lang.String;@ab2e6d2,[Ljava.lang.String;@71664560,[Ljava.lang.String;@4d4436d0),Annotation([Ljava.lang.String;@39da5e49,[Ljava.lang.String;@2443abd6,[Ledu.cmu.lti.nlp.amr.Entity;@674da77b))
AMR:
(一 / 一样, mod, 风 / 风标)
(作 / 作响-01, ARG0, 一 / 一样)
(作 / 作响-01, location, 吱 / 吱吱)
(吹 / 吹动-01, ARG0, 风 / 风标)
(就 / 就-01, ARG3, 辘 / 辘轳)
(就 / 就-01, ARG4, 是 / 是-04)
(是 / 是-04, ARG3, 长 / 长期)
(来 / 来-06, ARG3, 是 / 是-04)
(来 / 来-06, ARG5, 风2 / 风)
(来 / 来-06, prep-through, 吹 / 吹动-01)
(风 / 风标, mod, 旧 / 旧-01)

Decoded in 56,760 microseconds
Sentence: “ 你 听 ， ” 小 王子 说 ：

Spans:
Span 1-2:  你 => 你
Span 2-3:  听 => 听-02
Span 5-6:  小 => 小
Span 6-7:  王子 => 王子
Span 7-8:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  听 => 听-01
Oracle Span 5-6:  小 => 小
Oracle Span 6-7:  王子 => 王子
Oracle Span 7-8:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 听 => 听-02
Missing span: 说 => 说-01
Missing span: 听 => 听-01
Dependencies:
1	“	_	PU	PU	_	8	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	听	_	VV	VV	_	8	dep	_	_
4	,	_	PU	PU	_	8	punct	_	_
5	”	_	PU	PU	_	8	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 听-01)
(x2 / 王子, mod, x3 / 小)
(x4 / 听-01, arg0, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),说,说-02,false), Span(6,7,List(1),王子,王子,false), Span(5,6,List(2),小,小,false), Span(2,3,List(3),听,听-02,false), Span(1,2,List(4),你,你,false)),Map(2 -> 小, 1 -> 王子, 4 -> 你, 0 -> 说-02, 3 -> 听-02),Map(你 -> 你, 王 -> 王子, 小 -> 小, 说 -> 说-02, 听 -> 听-02))),[Ljava.lang.String;@bd3eff4,Annotation([Ljava.lang.String;@6010d0d1,[Ljava.lang.String;@5934ca1e,[Ljava.lang.String;@5348d83c),Annotation([Ljava.lang.String;@477021ee,[Ljava.lang.String;@2180e789,[Ledu.cmu.lti.nlp.amr.Dependency;@5e9bbd9d),Annotation([Ljava.lang.String;@4b87074a,[Ljava.lang.String;@d3e3085,[Ljava.lang.String;@2ba42204),Annotation([Ljava.lang.String;@285005b8,[Ljava.lang.String;@5b1efaaf,[Ledu.cmu.lti.nlp.amr.Entity;@27585351))
AMR:
(听 / 听-02, degree, 你 / 你)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 听 / 听-02)
(说 / 说-02, degree, 小 / 小)

Decoded in 8,318 microseconds
Sentence: “ 我们 唤醒 了 这 口 井 ， 它 现在 唱 起 歌 来 了 … ”

Spans:
Span 6-7:  井 => 井
Span 2-3:  唤醒 => 唤醒-01
Span 8-9:  它 => 它
Span 1-2:  我们 => 我们
Span 13-14:  来 => 来-06
Span 9-10:  现在 => 现在
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  井 => 井
Oracle Span 2-3:  唤醒 => 唤醒-01
Oracle Span 1-2:  我们 => 我们
Oracle Span 9-10:  现在 => 现在
Oracle Span 4-5:  这 => 这

Extra span: 来 => 来-06
Extra span: 它 => 它
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	我们	_	PN	PN	_	3	nsubj	_	_
3	唤醒	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	这	_	DT	DT	_	7	det	_	_
6	口	_	M	M	_	5	clf	_	_
7	井	_	NN	NN	_	3	dobj	_	_
8	,	_	PU	PU	_	3	punct	_	_
9	它	_	PN	PN	_	13	nn	_	_
10	现在	_	NT	NT	_	12	dep	_	_
11	唱	_	CD	CD	_	12	nummod	_	_
12	起	_	M	M	_	13	clf	_	_
13	歌	_	NN	NN	_	14	dep	_	_
14	来	_	VV	VV	_	3	conj	_	_
15	了	_	AS	AS	_	14	asp	_	_
16	…	_	NN	NN	_	14	dobj	_	_
17	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x12 / 唤醒-01, arg0, x13 / 我们)
(x12 / 唤醒-01, arg1, x14 / 井)
(x14 / 井, mod, x15 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),来,来-06,false), Span(9,10,List(1),现在,现在,false), Span(8,9,List(2),它,它,false), Span(6,7,List(3),井,井,false), Span(4,5,List(4),这,这,false), Span(2,3,List(5),唤醒,唤醒-01,false), Span(1,2,List(6),我们,我们,false)),Map(2 -> 它, 5 -> 唤醒-01, 1 -> 现在, 4 -> 这, 6 -> 我们, 0 -> 来-06, 3 -> 井),Map(我 -> 我们, 井 -> 井, 来 -> 来-06, 这 -> 这, 它 -> 它, 唤 -> 唤醒-01, 现 -> 现在))),[Ljava.lang.String;@2de6f1bc,Annotation([Ljava.lang.String;@5b35c7d,[Ljava.lang.String;@29d405e6,[Ljava.lang.String;@4c731956),Annotation([Ljava.lang.String;@56826a75,[Ljava.lang.String;@49cd946c,[Ledu.cmu.lti.nlp.amr.Dependency;@40bf4386),Annotation([Ljava.lang.String;@14d25b6e,[Ljava.lang.String;@51c65a43,[Ljava.lang.String;@740dcae3),Annotation([Ljava.lang.String;@4e140497,[Ljava.lang.String;@481b2f10,[Ledu.cmu.lti.nlp.amr.Entity;@2b6c7012))
AMR:
(井 / 井, mod, 这 / 这)
(唤 / 唤醒-01, direction, 我 / 我们)
(唤 / 唤醒-01, polite, 井 / 井)
(它 / 它, location, 井 / 井)
(它 / 它, location, 现 / 现在)
(来 / 来-06, time, 现 / 现在)

Decoded in 15,689 microseconds
Sentence: 我 不 愿 让 他 费劲 。

Spans:
Span 1-2:  不 => 不
Span 4-5:  他 => 他
Span 2-3:  愿 => 愿-01
Span 0-1:  我 => 我
Span 3-4:  让 => 让-01
Span 5-6:  费劲 => 费劲-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 2-3:  愿 => 愿-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  让 => 让-02
Oracle Span 5-6:  费劲 => 费劲-01

Incorrect span: 让 => 让-01
Extra span: 不 => 不
Missing span: 让 => 让-02
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	愿	_	VV	VV	_	0	root	_	_
4	让	_	VV	VV	_	3	ccomp	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	费劲	_	VV	VV	_	4	dep	_	_
7	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 愿-01, arg0, x3 / 我)
(x0 / 愿-01, arg1, x4 / 让-02)
(x4 / 让-02, arg1, x6 / 他)
(x4 / 让-02, arg2, x7 / 费劲-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),费劲,费劲-01,false), Span(4,5,List(1),他,他,false), Span(3,4,List(2),让,让-01,false), Span(2,3,List(3),愿,愿-01,false), Span(1,2,List(4),不,不,false), Span(0,1,List(5),我,我,false)),Map(2 -> 让-01, 5 -> 我, 1 -> 他, 4 -> 不, 0 -> 费劲-01, 3 -> 愿-01),Map(费 -> 费劲-01, 我 -> 我, 他 -> 他, 愿 -> 愿-01, 不 -> 不, 让 -> 让-01))),[Ljava.lang.String;@31acfd4e,Annotation([Ljava.lang.String;@5f726750,[Ljava.lang.String;@4e80a001,[Ljava.lang.String;@624b523),Annotation([Ljava.lang.String;@50b46e24,[Ljava.lang.String;@1c30cb85,[Ledu.cmu.lti.nlp.amr.Dependency;@577bf0aa),Annotation([Ljava.lang.String;@7455dacb,[Ljava.lang.String;@7634f2b,[Ljava.lang.String;@1d15c0a1),Annotation([Ljava.lang.String;@15639d09,[Ljava.lang.String;@4fba8eec,[Ledu.cmu.lti.nlp.amr.Entity;@52bd9a27))
AMR:
(不 / 不, ARG1, 我 / 我)
(愿 / 愿-01, manner, 不 / 不)
(让 / 让-01, degree, 不 / 不)
(让 / 让-01, prep-on-behalf, 费 / 费劲-01)
(让 / 让-01, purpose, 他 / 他)

Decoded in 10,694 microseconds
Sentence: “ 让 我 来 干 吧 。

Spans:
Span 4-5:  干 => (thing :arg1-of 干-01)
Span 2-3:  我 => 我
Span 3-4:  来 => 来-06
Span 1-2:  让 => 让-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 对 他 说 ：

Spans:
Span 2-3:  他 => 他
Span 1-2:  对 => 对-02
Span 0-1:  我 => 我
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg3, x3 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),说,说-02,false), Span(2,3,List(1),他,他,false), Span(1,2,List(2),对,对-02,false), Span(0,1,List(3),我,我,false)),Map(2 -> 对-02, 1 -> 他, 0 -> 说-02, 3 -> 我),Map(我 -> 我, 他 -> 他, 说 -> 说-02, 对 -> 对-02))),[Ljava.lang.String;@681c0ae6,Annotation([Ljava.lang.String;@73ca34e7,[Ljava.lang.String;@4d98e41b,[Ljava.lang.String;@5ed5b321),Annotation([Ljava.lang.String;@5696c927,[Ljava.lang.String;@7459a21e,[Ledu.cmu.lti.nlp.amr.Dependency;@7eeb38b2),Annotation([Ljava.lang.String;@d54d0f5,[Ljava.lang.String;@6d6bff89,[Ljava.lang.String;@541bf968),Annotation([Ljava.lang.String;@739265f1,[Ljava.lang.String;@58eac00e,[Ledu.cmu.lti.nlp.amr.Entity;@6acffb2d))
AMR:
(对 / 对-02, beneficiary, 我 / 我)
(说 / 说-02, ARG4, 他 / 他)
(说 / 说-02, scale, 对 / 对-02)

Decoded in 5,200 microseconds
Sentence: 这 活 对 你 太 重 了 。 ”

Spans:
Span 3-4:  你 => 你
Span 4-5:  太 => 太
Span 2-3:  对 => 对-02
Span 1-2:  活 => 活-04
Span 0-1:  这 => 这
Span 5-6:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  你 => 你
Oracle Span 4-5:  太 => 太
Oracle Span 1-2:  活 => 活
Oracle Span 0-1:  这 => 这
Oracle Span 5-6:  重 => 重-02

Extra span: 对 => 对-02
Incorrect span: 活 => 活-04
Missing span: 活 => 活
Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	活	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	6	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	太	_	AD	AD	_	6	advmod	_	_
6	重	_	VV	VV	_	2	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	2	punct	_	_
9	”	_	PU	PU	_	2	punct	_	_
10	这	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x12 / 重-02, degree, x13 / 太)
(x9 / 活, mod, x10 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),重,重-02,false), Span(4,5,List(1),太,太,false), Span(3,4,List(2),你,你,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),活,活-04,false), Span(0,1,List(5),这,这,false)),Map(2 -> 你, 5 -> 这, 1 -> 太, 4 -> 活-04, 0 -> 重-02, 3 -> 对-02),Map(重 -> 重-02, 这 -> 这, 你 -> 你, 太 -> 太, 活 -> 活-04, 对 -> 对-02))),[Ljava.lang.String;@61149fa5,Annotation([Ljava.lang.String;@149c39b,[Ljava.lang.String;@f2d890c,[Ljava.lang.String;@1a2e0d57),Annotation([Ljava.lang.String;@5f025000,[Ljava.lang.String;@10980560,[Ledu.cmu.lti.nlp.amr.Dependency;@739e8b96),Annotation([Ljava.lang.String;@19b07407,[Ljava.lang.String;@54ffa561,[Ljava.lang.String;@49c099b),Annotation([Ljava.lang.String;@3d9f0a5,[Ljava.lang.String;@1953bc95,[Ledu.cmu.lti.nlp.amr.Entity;@30aec673))
AMR:
(对 / 对-02, manner, 活 / 活-04)
(对 / 对-02, year, 你 / 你)
(活 / 活-04, mod, 这 / 这)
(重 / 重-02, degree, 太 / 太)
(重 / 重-02, manner, 活 / 活-04)

Decoded in 10,188 microseconds
Sentence: 我 慢慢 地 把 水桶 提到 井栏 上 。 我 把 它 稳稳 地 放在 那里 。

Spans:
Span 6-7:  井栏 => 井栏
Span 13-14:  地 => 地
Span 2-3:  地 => 地
Span 11-12:  它 => 它
Span 1-2:  慢慢 => 慢慢
Span 9-10:  我 => 我
Span 0-1:  我 => 我
Span 5-6:  提到 => 提到-02
Span 14-15:  放在 => 放在-03
Span 4-5:  水桶 => 水桶
Span 12-13:  稳稳 => 稳稳
Span 15-16:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  井栏 => 井栏
Oracle Span 1-2:  慢慢 => 慢慢-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  提到 => 提到-02
Oracle Span 14-15:  放在 => 放在-03
Oracle Span 4-5:  水桶 => 水桶
Oracle Span 12-13:  稳稳 => 稳稳
Oracle Span 15-16:  那里 => 那里

Extra span: 地 => 地
Extra span: 它 => 它
Extra span: 我 => 我
Extra span: 地 => 地
Incorrect span: 慢慢 => 慢慢
Missing span: 慢慢 => 慢慢-01
Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	慢慢	_	AD	AD	_	6	advmod	_	_
3	地	_	NN	NN	_	6	prep	_	_
4	把	_	BA	BA	_	6	ba	_	_
5	水桶	_	NN	NN	_	6	nsubj	_	_
6	提到	_	VV	VV	_	0	root	_	_
7	井栏	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	6	loc	_	_
9	。	_	PU	PU	_	6	punct	_	_
10	我	_	PN	PN	_	15	nsubj	_	_
11	把	_	BA	BA	_	15	ba	_	_
12	它	_	PN	PN	_	15	nsubj	_	_
13	稳稳	_	AD	AD	_	15	advmod	_	_
14	地	_	NN	NN	_	15	prep	_	_
15	放在	_	VV	VV	_	6	conj	_	_
16	那里	_	PN	PN	_	15	dobj	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 提到-02, arg0, x3 / 我)
(x2 / 提到-02, arg1, x5 / 水桶)
(x2 / 提到-02, arg2, x6 / 井栏)
(x2 / 提到-02, manner, x4 / 慢慢-01)
(x7 / 放在-03, arg2, x11 / 那里)
(x7 / 放在-03, manner, x10 / 稳稳)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),那里,那里,false), Span(14,15,List(1),放在,放在-03,false), Span(13,14,List(2),地,地,false), Span(12,13,List(3),稳稳,稳稳,false), Span(11,12,List(4),它,它,false), Span(9,10,List(5),我,我,false), Span(6,7,List(6),井栏,井栏,false), Span(5,6,List(7),提到,提到-02,false), Span(4,5,List(8),水桶,水桶,false), Span(2,3,List(9),地,地,false), Span(1,2,List(10),慢慢,慢慢,false), Span(0,1,List(11),我,我,false)),Map(2 -> 地, 5 -> 我, 8 -> 水桶, 7 -> 提到-02, 1 -> 放在-03, 11 -> 我, 4 -> 它, 6 -> 井栏, 9 -> 地, 0 -> 那里, 10 -> 慢慢, 3 -> 稳稳),Map(地2 -> 地, 井 -> 井栏, 我 -> 我, 我2 -> 我, 放 -> 放在-03, 它 -> 它, 水 -> 水桶, 稳 -> 稳稳, 地 -> 地, 慢 -> 慢慢, 提 -> 提到-02, 那 -> 那里))),[Ljava.lang.String;@549ac12c,Annotation([Ljava.lang.String;@188a5fc2,[Ljava.lang.String;@1cb9ef52,[Ljava.lang.String;@5a622fe8),Annotation([Ljava.lang.String;@58f31629,[Ljava.lang.String;@124d26ba,[Ledu.cmu.lti.nlp.amr.Dependency;@415d88de),Annotation([Ljava.lang.String;@a0bf272,[Ljava.lang.String;@4a89ef44,[Ljava.lang.String;@310a7859),Annotation([Ljava.lang.String;@1cbc1dde,[Ljava.lang.String;@4971f459,[Ledu.cmu.lti.nlp.amr.Entity;@4c07d1fc))
AMR:
(地 / 地, ARG6, 它 / 它)
(地 / 地, age, 我 / 我)
(地 / 地, manner, 稳 / 稳稳)
(地2 / 地, ARG4, 水 / 水桶)
(地2 / 地, ARG6, 我2 / 我)
(地2 / 地, manner, 慢 / 慢慢)
(提 / 提到-02, ARG4, 我 / 我)
(提 / 提到-02, manner, 慢 / 慢慢)
(提 / 提到-02, snt3, 井 / 井栏)
(放 / 放在-03, manner, 稳 / 稳稳)
(放 / 放在-03, purpose, 那 / 那里)

Decoded in 40,643 microseconds
Sentence: 我 的 耳朵 里 还 响 着 辘轳 的 歌声 。 依然 还 在 晃荡 的 水面 上 ， 我 看见 太阳 的 影子 在 跳动 。

Spans:
Span 11-12:  依然 => 依然-01
Span 5-6:  响 => 响-01
Span 24-25:  在 => 在-01
Span 13-14:  在 => 在-01
Span 21-22:  太阳 => 太阳
Span 23-24:  影子 => 影子
Span 19-20:  我 => 我
Span 0-1:  我 => 我
Span 14-15:  晃荡 => 晃荡-01
Span 9-10:  歌声 => 歌声
Span 16-17:  水面 => 水面
Span 20-21:  看见 => 看见-01
Span 2-3:  耳朵 => 耳朵
Span 25-26:  跳动 => 跳动-01
Span 7-8:  辘轳 => 辘轳
Span 12-13:  还 => 还
Span 4-5:  还 => 还

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  依然 => 依然
Oracle Span 5-6:  响 => 响-01
Oracle Span 21-22:  太阳 => 太阳
Oracle Span 23-24:  影子 => 影子
Oracle Span 0-1:  我 => 我
Oracle Span 19-20:  我 => 我
Oracle Span 14-15:  晃荡 => 晃荡-01
Oracle Span 9-10:  歌声 => 歌声
Oracle Span 16-17:  水面 => 水面
Oracle Span 20-21:  看见 => 看见-01
Oracle Span 2-3:  耳朵 => 耳朵
Oracle Span 25-26:  跳动 => 跳动-01
Oracle Span 7-8:  辘轳 => 辘轳
Oracle Span 4-5:  还 => 还

Extra span: 在 => 在-01
Extra span: 在 => 在-01
Extra span: 还 => 还
Incorrect span: 依然 => 依然-01
Missing span: 依然 => 依然
Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	耳朵	_	NN	NN	_	4	lobj	_	_
4	里	_	LC	LC	_	6	loc	_	_
5	还	_	AD	AD	_	6	advmod	_	_
6	响	_	VV	VV	_	0	root	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	辘轳	_	NN	NN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	歌声	_	NN	NN	_	6	dobj	_	_
11	。	_	PU	PU	_	6	punct	_	_
12	依然	_	AD	AD	_	26	advmod	_	_
13	还	_	AD	AD	_	26	advmod	_	_
14	在	_	P	P	_	26	prep	_	_
15	晃荡	_	NN	NN	_	17	assmod	_	_
16	的	_	DEG	DEG	_	15	assm	_	_
17	水面	_	NN	NN	_	18	lobj	_	_
18	上	_	LC	LC	_	14	plmod	_	_
19	,	_	PU	PU	_	26	punct	_	_
20	我	_	PN	PN	_	21	nsubj	_	_
21	看见	_	VV	VV	_	24	rcmod	_	_
22	太阳	_	NN	NN	_	21	dobj	_	_
23	的	_	DEC	DEC	_	21	cpm	_	_
24	影子	_	NN	NN	_	26	dobj	_	_
25	在	_	AD	AD	_	26	advmod	_	_
26	跳动	_	VV	VV	_	6	dep	_	_
27	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 我, part, x9 / 耳朵)
(x2 / 响-01, arg0, x8 / 歌声)
(x2 / 响-01, location, x9 / 耳朵)
(x20 / 看见-01, arg0, x21 / 我)
(x20 / 看见-01, arg1, x22 / 跳动-01)
(x22 / 跳动-01, arg0, x23 / 影子)
(x22 / 跳动-01, location, x27 / 水面)
(x22 / 跳动-01, manner, x31 / 依然)
(x22 / 跳动-01, manner, x32 / 还)
(x23 / 影子, poss, x25 / 太阳)
(x27 / 水面, mod, x28 / 晃荡-01)
(x8 / 歌声, mod, x19 / 辘轳)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),跳动,跳动-01,false), Span(24,25,List(1),在,在-01,false), Span(23,24,List(2),影子,影子,false), Span(21,22,List(3),太阳,太阳,false), Span(20,21,List(4),看见,看见-01,false), Span(19,20,List(5),我,我,false), Span(16,17,List(6),水面,水面,false), Span(14,15,List(7),晃荡,晃荡-01,false), Span(13,14,List(8),在,在-01,false), Span(12,13,List(9),还,还,false), Span(11,12,List(10),依然,依然-01,false), Span(9,10,List(11),歌声,歌声,false), Span(7,8,List(12),辘轳,辘轳,false), Span(5,6,List(13),响,响-01,false), Span(4,5,List(14),还,还,false), Span(2,3,List(15),耳朵,耳朵,false), Span(0,1,List(16),我,我,false)),Map(2 -> 影子, 5 -> 我, 12 -> 辘轳, 15 -> 耳朵, 8 -> 在-01, 7 -> 晃荡-01, 1 -> 在-01, 4 -> 看见-01, 11 -> 歌声, 14 -> 还, 6 -> 水面, 0 -> 跳动-01, 9 -> 还, 16 -> 我, 3 -> 太阳, 10 -> 依然-01, 13 -> 响-01),Map(在2 -> 在-01, 影 -> 影子, 辘 -> 辘轳, 歌 -> 歌声, 在 -> 在-01, 晃 -> 晃荡-01, 我 -> 我, 我2 -> 我, 太 -> 太阳, 水 -> 水面, 还 -> 还, 看 -> 看见-01, 耳 -> 耳朵, 跳 -> 跳动-01, 依 -> 依然-01, 响 -> 响-01, 还2 -> 还))),[Ljava.lang.String;@2eada095,Annotation([Ljava.lang.String;@52831a73,[Ljava.lang.String;@1416ff46,[Ljava.lang.String;@66ec4409),Annotation([Ljava.lang.String;@2506e949,[Ljava.lang.String;@6f1c3f18,[Ledu.cmu.lti.nlp.amr.Dependency;@4c531172),Annotation([Ljava.lang.String;@489bc8fd,[Ljava.lang.String;@5ac53c06,[Ljava.lang.String;@54af3cb9),Annotation([Ljava.lang.String;@236fdf,[Ljava.lang.String;@16e99306,[Ledu.cmu.lti.nlp.amr.Entity;@653fb8d1))
AMR:
(响 / 响-01, location, 耳 / 耳朵)
(响 / 响-01, snt1, 歌 / 歌声)
(在2 / 在-01, ARG4, 依 / 依然-01)
(在2 / 在-01, manner, 响 / 响-01)
(在2 / 在-01, manner, 还 / 还)
(影 / 影子, poss, 太 / 太阳)
(我2 / 我, part, 耳 / 耳朵)
(晃 / 晃荡-01, manner, 在2 / 在-01)
(歌 / 歌声, mod, 辘 / 辘轳)
(水 / 水面, mod, 晃 / 晃荡-01)
(看 / 看见-01, ARG6, 跳 / 跳动-01)
(看 / 看见-01, prep-for, 我 / 我)
(跳 / 跳动-01, location, 水 / 水面)
(跳 / 跳动-01, manner, 在 / 在-01)
(跳 / 跳动-01, manner, 还2 / 还)
(跳 / 跳动-01, op, 影 / 影子)

Decoded in 113,495 microseconds
Sentence: “ 我 正 需要 喝 这 种 水 。 ” 小 王子 说 ：

Spans:
Span 4-5:  喝 => (thing :arg1-of 喝-01)
Span 10-11:  小 => 小
Span 1-2:  我 => 我
Span 2-3:  正 => 正
Span 7-8:  水 => 水
Span 11-12:  王子 => 王子
Span 6-7:  种 => 种
Span 12-13:  说 => 说-02
Span 5-6:  这 => 这
Span 3-4:  需要 => 需要-04

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 给 我 喝 点 … ”

Spans:
Span 3-4:  喝 => (thing :arg1-of 喝-01)
Span 2-3:  我 => 我
Span 4-5:  点 => 点
Span 1-2:  给 => 给-02

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这时 我 才 明白 了 他 所 要 寻找 的 是 什么 ！

Spans:
Span 11-12:  什么 => 什么
Span 5-6:  他 => 他
Span 8-9:  寻找 => 寻找-01
Span 1-2:  我 => 我
Span 2-3:  才 => 才
Span 3-4:  明白 => 明白-01
Span 10-11:  是 => 是-04
Span 7-8:  要 => 要-02
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  什么 => 什么
Oracle Span 5-6:  他 => 他
Oracle Span 8-9:  寻找 => 寻找-01
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  才 => 才
Oracle Span 3-4:  明白 => 明白-01
Oracle Span 0-1:  这时 => 这时

Extra span: 是 => 是-04
Extra span: 要 => 要-02
Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	才	_	AD	AD	_	4	advmod	_	_
4	明白	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	他	_	PN	PN	_	9	nsubj	_	_
7	所	_	MSP	MSP	_	9	prtmod	_	_
8	要	_	VV	VV	_	9	dep	_	_
9	寻找	_	VV	VV	_	11	top	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	是	_	VC	VC	_	4	ccomp	_	_
12	什么	_	PN	PN	_	11	attr	_	_
13	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 明白-01, arg0, x2 / 我)
(x0 / 明白-01, arg1, x5 / 寻找-01)
(x0 / 明白-01, manner, x3 / 才)
(x0 / 明白-01, time, x4 / 这时)
(x5 / 寻找-01, arg0, x6 / 他)
(x5 / 寻找-01, arg1, x7 / 什么)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),什么,什么,false), Span(10,11,List(1),是,是-04,false), Span(8,9,List(2),寻找,寻找-01,false), Span(7,8,List(3),要,要-02,false), Span(5,6,List(4),他,他,false), Span(3,4,List(5),明白,明白-01,false), Span(2,3,List(6),才,才,false), Span(1,2,List(7),我,我,false), Span(0,1,List(8),这时,这时,false)),Map(2 -> 寻找-01, 5 -> 明白-01, 8 -> 这时, 7 -> 我, 1 -> 是-04, 4 -> 他, 6 -> 才, 0 -> 什么, 3 -> 要-02),Map(才 -> 才, 我 -> 我, 这 -> 这时, 要 -> 要-02, 寻 -> 寻找-01, 他 -> 他, 明 -> 明白-01, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@93501be,Annotation([Ljava.lang.String;@11d4d979,[Ljava.lang.String;@195580ba,[Ljava.lang.String;@3c25cfe1),Annotation([Ljava.lang.String;@1d3c112a,[Ljava.lang.String;@2a140ce5,[Ledu.cmu.lti.nlp.amr.Dependency;@1f71194d),Annotation([Ljava.lang.String;@db99785,[Ljava.lang.String;@70716259,[Ljava.lang.String;@7a083b96),Annotation([Ljava.lang.String;@6da4feeb,[Ljava.lang.String;@2c604965,[Ledu.cmu.lti.nlp.amr.Entity;@57f8951a))
AMR:
(什 / 什么, mod, 是 / 是-04)
(明 / 明白-01, manner, 才 / 才)
(明 / 明白-01, time, 我 / 我)
(明 / 明白-01, time, 这 / 这时)
(是 / 是-04, manner, 寻 / 寻找-01)
(要 / 要-02, ARG4, 寻 / 寻找-01)
(要 / 要-02, manner, 明 / 明白-01)
(要 / 要-02, time, 他 / 他)

Decoded in 21,720 microseconds
Sentence: 我 把 水桶 提到 他 的 嘴边 。

Spans:
Span 4-5:  他 => 他
Span 6-7:  嘴边 => 嘴边
Span 0-1:  我 => 我
Span 3-4:  提到 => 提到-02
Span 2-3:  水桶 => 水桶

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 6-7:  嘴边 => 嘴边
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  提到 => 提到-01
Oracle Span 2-3:  水桶 => 水桶

Incorrect span: 提到 => 提到-02
Missing span: 提到 => 提到-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	水桶	_	NN	NN	_	4	nsubj	_	_
4	提到	_	VV	VV	_	0	root	_	_
5	他	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	嘴边	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 提到-01, arg0, x2 / 我)
(x0 / 提到-01, arg1, x3 / 水桶)
(x0 / 提到-01, arg2, x6 / 嘴边)
(x6 / 嘴边, poss, x7 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),嘴边,嘴边,false), Span(4,5,List(1),他,他,false), Span(3,4,List(2),提到,提到-02,false), Span(2,3,List(3),水桶,水桶,false), Span(0,1,List(4),我,我,false)),Map(2 -> 提到-02, 1 -> 他, 4 -> 我, 0 -> 嘴边, 3 -> 水桶),Map(我 -> 我, 水 -> 水桶, 他 -> 他, 嘴 -> 嘴边, 提 -> 提到-02))),[Ljava.lang.String;@6c17c0f8,Annotation([Ljava.lang.String;@260e3837,[Ljava.lang.String;@88b76f2,[Ljava.lang.String;@1b4872bc),Annotation([Ljava.lang.String;@498a612d,[Ljava.lang.String;@1e1237ab,[Ledu.cmu.lti.nlp.amr.Dependency;@4dfdfe7d),Annotation([Ljava.lang.String;@1578b8ec,[Ljava.lang.String;@f613067,[Ljava.lang.String;@c1e14f),Annotation([Ljava.lang.String;@226de93c,[Ljava.lang.String;@72028a45,[Ledu.cmu.lti.nlp.amr.Entity;@74667e6a))
AMR:
(嘴 / 嘴边, poss, 他 / 他)
(提 / 提到-02, op, 我 / 我)
(提 / 提到-02, prep-from, 水 / 水桶)
(提 / 提到-02, snt3, 嘴 / 嘴边)

Decoded in 9,129 microseconds
Sentence: 他 闭 着 眼睛 喝 水 。

Spans:
Span 0-1:  他 => 他
Span 4-5:  喝 => (thing :arg1-of 喝-01)
Span 5-6:  水 => 水
Span 3-4:  眼睛 => 眼睛
Span 1-2:  闭 => 闭-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 就 象 节日 一般 舒适 愉快 。

Spans:
Span 0-1:  就 => 就-01
Span 5-6:  愉快 => 愉快-01
Span 4-5:  舒适 => 舒适-01
Span 2-3:  节日 => 节日

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  就 => 就
Oracle Span 5-6:  愉快 => 愉快-01
Oracle Span 4-5:  舒适 => 舒适-01
Oracle Span 2-3:  节日 => 节日

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	就	_	AD	AD	_	5	advmod	_	_
2	象	_	P	P	_	5	prep	_	_
3	节日	_	NN	NN	_	2	pobj	_	_
4	一般	_	AD	AD	_	5	advmod	_	_
5	舒适	_	VA	VA	_	0	root	_	_
6	愉快	_	VA	VA	_	5	comod	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),愉快,愉快-01,false), Span(4,5,List(1),舒适,舒适-01,false), Span(2,3,List(2),节日,节日,false), Span(0,1,List(3),就,就-01,false)),Map(2 -> 节日, 1 -> 舒适-01, 0 -> 愉快-01, 3 -> 就-01),Map(就 -> 就-01, 节 -> 节日, 愉 -> 愉快-01, 舒 -> 舒适-01))),[Ljava.lang.String;@364b1061,Annotation([Ljava.lang.String;@50fdf44f,[Ljava.lang.String;@172f4514,[Ljava.lang.String;@7df6d663),Annotation([Ljava.lang.String;@13d019a4,[Ljava.lang.String;@2c30c81d,[Ledu.cmu.lti.nlp.amr.Dependency;@415a3f6a),Annotation([Ljava.lang.String;@a54acec,[Ljava.lang.String;@19da993b,[Ljava.lang.String;@3380ca3d),Annotation([Ljava.lang.String;@23310248,[Ljava.lang.String;@c2df90e,[Ledu.cmu.lti.nlp.amr.Entity;@41f3aaf1))
AMR:
(就 / 就-01, ARG3, 愉 / 愉快-01)
(愉 / 愉快-01, ARG3, 舒 / 舒适-01)
(节 / 节日, ARG4, 舒 / 舒适-01)

Decoded in 6,348 microseconds
Sentence: 这 水 远 不 只 是 一 种 饮料 ，

Spans:
Span 3-4:  不 => 不
Span 4-5:  只 => 只
Span 5-6:  是 => 是-04
Span 1-2:  水 => 水
Span 7-8:  种 => 种
Span 0-1:  这 => 这
Span 2-3:  远 => 远
Span 8-9:  饮料 => 饮料

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  只 => 只
Oracle Span 1-2:  水 => 水
Oracle Span 7-8:  种 => 种
Oracle Span 0-1:  这 => 这
Oracle Span 2-3:  远 => 远
Oracle Span 8-9:  饮料 => 饮料

Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	这	_	PN	PN	_	6	nsubj	_	_
2	水	_	NN	NN	_	6	nsubj	_	_
3	远	_	AD	AD	_	6	advmod	_	_
4	不	_	AD	AD	_	6	neg	_	_
5	只	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	种	_	M	M	_	9	clf	_	_
9	饮料	_	NN	NN	_	6	attr	_	_
10	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 饮料, domain, x2 / 水)
(x0 / 饮料, manner, x10 / 只)
(x0 / 饮料, unit, x9 / 种)
(x10 / 只, degree, x12 / 远)
(x2 / 水, mod, x3 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),饮料,饮料,false), Span(7,8,List(1),种,种,false), Span(5,6,List(2),是,是-04,false), Span(4,5,List(3),只,只,false), Span(3,4,List(4),不,不,false), Span(2,3,List(5),远,远,false), Span(1,2,List(6),水,水,false), Span(0,1,List(7),这,这,false)),Map(2 -> 是-04, 5 -> 远, 7 -> 这, 1 -> 种, 4 -> 不, 6 -> 水, 0 -> 饮料, 3 -> 只),Map(饮 -> 饮料, 这 -> 这, 远 -> 远, 水 -> 水, 不 -> 不, 只 -> 只, 种 -> 种, 是 -> 是-04))),[Ljava.lang.String;@741741d0,Annotation([Ljava.lang.String;@5f9f3e58,[Ljava.lang.String;@3c19592c,[Ljava.lang.String;@60e1d87c),Annotation([Ljava.lang.String;@2eb60c71,[Ljava.lang.String;@87d9a01,[Ledu.cmu.lti.nlp.amr.Dependency;@7e5b621b),Annotation([Ljava.lang.String;@10177794,[Ljava.lang.String;@e5c2463,[Ljava.lang.String;@6a950a3b),Annotation([Ljava.lang.String;@4f7be6c8,[Ljava.lang.String;@647b9364,[Ledu.cmu.lti.nlp.amr.Entity;@b6bccb4))
AMR:
(只 / 只, degree, 远 / 远)
(是 / 是-04, ARG4, 不 / 不)
(是 / 是-04, manner, 只 / 只)
(水 / 水, mod, 这 / 这)
(饮 / 饮料, domain, 水 / 水)
(饮 / 饮料, manner, 只 / 只)
(饮 / 饮料, unit, 种 / 种)

Decoded in 20,212 microseconds
Sentence: 它 是 披星戴月 走 了 许多 路 才 找到 的 ， 是 在 辘轳 的 歌声 中 ， 经过 我 双臂 的 努力 得来 的 。

Spans:
Span 22-23:  努力 => 努力-01
Span 12-13:  在 => 在-01
Span 0-1:  它 => 它
Span 23-24:  得来 => 得来-01
Span 19-20:  我 => 我
Span 7-8:  才 => 才
Span 8-9:  找到 => 找到-01
Span 2-3:  披星戴月 => 披星戴月-01
Span 11-12:  是 => 是-04
Span 1-2:  是 => 是-04
Span 15-16:  歌声 => 歌声
Span 18-19:  经过 => 经过-01
Span 5-6:  许多 => 许多
Span 3-4:  走 => 走-05
Span 6-7:  路 => 路
Span 13-14:  辘轳 => 辘轳

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 22-23:  努力 => 努力-01
Oracle Span 0-1:  它 => 它
Oracle Span 23-24:  得来 => 得来-01
Oracle Span 19-20:  我 => 我
Oracle Span 7-8:  才 => 才
Oracle Span 8-9:  找到 => 找到-01
Oracle Span 2-3:  披星戴月 => 披星戴月-01
Oracle Span 15-16:  歌声 => 歌声
Oracle Span 18-19:  经过 => 经过-01
Oracle Span 5-6:  许多 => 许多
Oracle Span 3-4:  走 => 走-01
Oracle Span 6-7:  路 => 路
Oracle Span 13-14:  辘轳 => 辘轳

Extra span: 在 => 在-01
Extra span: 是 => 是-04
Incorrect span: 走 => 走-05
Extra span: 是 => 是-04
Missing span: 走 => 走-01
Dependencies:
1	它	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	披星戴月	_	AD	AD	_	4	advmod	_	_
4	走	_	VV	VV	_	2	attr	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	许多	_	CD	CD	_	7	nummod	_	_
7	路	_	NN	NN	_	4	dobj	_	_
8	才	_	AD	AD	_	9	advmod	_	_
9	找到	_	VV	VV	_	4	dep	_	_
10	的	_	DEC	DEC	_	4	cpm	_	_
11	,	_	PU	PU	_	2	punct	_	_
12	是	_	VC	VC	_	2	conj	_	_
13	在	_	P	P	_	24	prep	_	_
14	辘轳	_	NN	NN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	歌声	_	NN	NN	_	17	lobj	_	_
17	中	_	LC	LC	_	13	plmod	_	_
18	,	_	PU	PU	_	24	punct	_	_
19	经过	_	P	P	_	24	prep	_	_
20	我	_	PN	PN	_	21	nn	_	_
21	双臂	_	NN	NN	_	23	assmod	_	_
22	的	_	DEG	DEG	_	21	assm	_	_
23	努力	_	NN	NN	_	19	pobj	_	_
24	得来	_	VV	VV	_	12	attr	_	_
25	的	_	DEC	DEC	_	24	cpm	_	_
26	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x19 / 找到-01, arg0, x27 / 我)
(x19 / 找到-01, arg0, x30 / 它)
(x19 / 找到-01, manner, x24 / 才)
(x19 / 找到-01, manner, x31 / 走-01)
(x31 / 走-01, arg1, x33 / 路)
(x31 / 走-01, manner, x35 / 披星戴月-01)
(x33 / 路, mod, x34 / 许多)
(x37 / 得来-01, manner, x39 / 经过-01)
(x39 / 经过-01, accompanier, x44 / 歌声)
(x39 / 经过-01, arg1, x40 / 努力-01)
(x44 / 歌声, poss, x45 / 辘轳)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),得来,得来-01,false), Span(22,23,List(1),努力,努力-01,false), Span(19,20,List(2),我,我,false), Span(18,19,List(3),经过,经过-01,false), Span(15,16,List(4),歌声,歌声,false), Span(13,14,List(5),辘轳,辘轳,false), Span(12,13,List(6),在,在-01,false), Span(11,12,List(7),是,是-04,false), Span(8,9,List(8),找到,找到-01,false), Span(7,8,List(9),才,才,false), Span(6,7,List(10),路,路,false), Span(5,6,List(11),许多,许多,false), Span(3,4,List(12),走,走-05,false), Span(2,3,List(13),披星戴月,披星戴月-01,false), Span(1,2,List(14),是,是-04,false), Span(0,1,List(15),它,它,false)),Map(2 -> 我, 5 -> 辘轳, 12 -> 走-05, 15 -> 它, 8 -> 找到-01, 7 -> 是-04, 1 -> 努力-01, 4 -> 歌声, 11 -> 许多, 14 -> 是-04, 6 -> 在-01, 0 -> 得来-01, 9 -> 才, 3 -> 经过-01, 10 -> 路, 13 -> 披星戴月-01),Map(辘 -> 辘轳, 歌 -> 歌声, 在 -> 在-01, 才 -> 才, 路 -> 路, 我 -> 我, 得 -> 得来-01, 它 -> 它, 走 -> 走-05, 努 -> 努力-01, 许 -> 许多, 披 -> 披星戴月-01, 经 -> 经过-01, 找 -> 找到-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@49edcb30,Annotation([Ljava.lang.String;@59303963,[Ljava.lang.String;@61e86192,[Ljava.lang.String;@34330f77),Annotation([Ljava.lang.String;@1320e68a,[Ljava.lang.String;@4b033eac,[Ledu.cmu.lti.nlp.amr.Dependency;@69c532af),Annotation([Ljava.lang.String;@45a1d057,[Ljava.lang.String;@51a16adf,[Ljava.lang.String;@385d819),Annotation([Ljava.lang.String;@4315c28c,[Ljava.lang.String;@8fd91d1,[Ledu.cmu.lti.nlp.amr.Entity;@52d0f583))
AMR:
(得 / 得来-01, manner, 经 / 经过-01)
(我 / 我, ARG0, 努 / 努力-01)
(找 / 找到-01, manner, 才 / 才)
(找 / 找到-01, manner, 走 / 走-05)
(披 / 披星戴月-01, ARG1, 是2 / 是-04)
(是 / 是-04, ARG1, 在 / 在-01)
(是2 / 是-04, ARG3, 它 / 它)
(歌 / 歌声, mod, 辘 / 辘轳)
(经 / 经过-01, ARG3, 努 / 努力-01)
(经 / 经过-01, accompanier, 歌 / 歌声)
(走 / 走-05, manner, 披 / 披星戴月-01)
(走 / 走-05, snt3, 路 / 路)
(走 / 走-05, time, 是 / 是-04)
(路 / 路, mod, 许 / 许多)
(辘 / 辘轳, manner, 在 / 在-01)

Decoded in 97,427 microseconds
Sentence: 它 象 是 一 件 礼品 慰藉 着 心田 。

Spans:
Span 0-1:  它 => 它
Span 8-9:  心田 => 心田
Span 6-7:  慰藉 => 慰藉-01
Span 2-3:  是 => 是-04
Span 5-6:  礼品 => 礼品

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  它 => 它
Oracle Span 8-9:  心田 => 心田
Oracle Span 6-7:  慰藉 => 慰藉-01
Oracle Span 5-6:  礼品 => 礼品

Extra span: 是 => 是-04
Dependencies:
1	它	_	PN	PN	_	7	nsubj	_	_
2	象	_	P	P	_	7	prep	_	_
3	是	_	VC	VC	_	2	pccomp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	件	_	M	M	_	6	clf	_	_
6	礼品	_	NN	NN	_	3	attr	_	_
7	慰藉	_	VV	VV	_	0	root	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	心田	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x7 / 慰藉-01, arg0, x5 / 礼品)
(x7 / 慰藉-01, arg1, x8 / 心田)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),心田,心田,false), Span(6,7,List(1),慰藉,慰藉-01,false), Span(5,6,List(2),礼品,礼品,false), Span(2,3,List(3),是,是-04,false), Span(0,1,List(4),它,它,false)),Map(2 -> 礼品, 1 -> 慰藉-01, 4 -> 它, 0 -> 心田, 3 -> 是-04),Map(礼 -> 礼品, 慰 -> 慰藉-01, 它 -> 它, 心 -> 心田, 是 -> 是-04))),[Ljava.lang.String;@7fb8bad0,Annotation([Ljava.lang.String;@12d40609,[Ljava.lang.String;@76437e9b,[Ljava.lang.String;@236ae13d),Annotation([Ljava.lang.String;@193eb1ba,[Ljava.lang.String;@2be818da,[Ledu.cmu.lti.nlp.amr.Dependency;@46320c9a),Annotation([Ljava.lang.String;@32256e68,[Ljava.lang.String;@5e7abaf7,[Ljava.lang.String;@353f472a),Annotation([Ljava.lang.String;@63bfdbcb,[Ljava.lang.String;@7af0affa,[Ledu.cmu.lti.nlp.amr.Entity;@71560f51))
AMR:
(它 / 它, timezone, 是 / 是-04)
(慰 / 慰藉-01, ARG4, 是 / 是-04)
(慰 / 慰藉-01, mod, 心 / 心田)
(是 / 是-04, ARG0, 礼 / 礼品)

Decoded in 9,746 microseconds
Sentence: 在 我 小 的 时候 ， 圣诞树 的 灯光 ， 午夜 的 弥撒 的 音乐 ， 甜蜜 的 微笑 ， 这 一切 都 使 圣诞节 时 我 收到 的 礼品 辉映 着 幸福 的 光彩 。

Spans:
Span 21-22:  一切 => 一切
Span 23-24:  使 => 使-01
Span 34-35:  光彩 => 光彩
Span 10-11:  午夜 => 午夜
Span 6-7:  圣诞树 => 圣诞树
Span 24-25:  圣诞节 => 圣诞节
Span 0-1:  在 => 在-01
Span 2-3:  小 => 小
Span 32-33:  幸福 => 幸福
Span 12-13:  弥撒 => 弥撒
Span 18-19:  微笑 => 微笑
Span 26-27:  我 => 我
Span 1-2:  我 => 我
Span 27-28:  收到 => 收到-01
Span 4-5:  时候 => 时候
Span 8-9:  灯光 => 灯光
Span 16-17:  甜蜜 => 甜蜜-01
Span 29-30:  礼品 => 礼品
Span 30-31:  辉映 => 辉映-01
Span 20-21:  这 => 这
Span 22-23:  都 => 都
Span 14-15:  音乐 => 音乐

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 23-24:  使 => 使-01
Oracle Span 34-35:  光彩 => 光彩
Oracle Span 10-11:  午夜 => 午夜
Oracle Span 6-7:  圣诞树 => 圣诞树
Oracle Span 24-25:  圣诞节 => 圣诞节
Oracle Span 2-3:  小 => 小-01
Oracle Span 32-33:  幸福 => 幸福-01
Oracle Span 12-13:  弥撒 => 弥撒
Oracle Span 18-19:  微笑 => 微笑
Oracle Span 1-2:  我 => 我
Oracle Span 27-28:  收到 => 收到-01
Oracle Span 8-9:  灯光 => 灯光
Oracle Span 16-17:  甜蜜 => 甜蜜-01
Oracle Span 29-30:  礼品 => 礼品
Oracle Span 30-31:  辉映 => 辉映-01
Oracle Span 22-23:  都 => 都
Oracle Span 14-15:  音乐 => 音乐

Incorrect span: 幸福 => 幸福
Extra span: 我 => 我
Extra span: 一切 => 一切
Extra span: 这 => 这
Extra span: 时候 => 时候
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Missing span: 幸福 => 幸福-01
Dependencies:
1	在	_	P	P	_	24	prep	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	小	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	24	punct	_	_
7	圣诞树	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	灯光	_	NN	NN	_	24	nsubj	_	_
10	,	_	PU	PU	_	24	punct	_	_
11	午夜	_	NT	NT	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	弥撒	_	NN	NN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	音乐	_	NN	NN	_	24	nsubj	_	_
16	,	_	PU	PU	_	24	punct	_	_
17	甜蜜	_	NN	NN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	微笑	_	NN	NN	_	24	nsubj	_	_
20	,	_	PU	PU	_	24	punct	_	_
21	这	_	PN	PN	_	22	dep	_	_
22	一切	_	PN	PN	_	24	nsubj	_	_
23	都	_	AD	AD	_	24	advmod	_	_
24	使	_	VV	VV	_	0	root	_	_
25	圣诞节	_	NN	NN	_	26	lobj	_	_
26	时	_	LC	LC	_	28	loc	_	_
27	我	_	PN	PN	_	28	nsubj	_	_
28	收到	_	VV	VV	_	30	rcmod	_	_
29	的	_	DEC	DEC	_	28	cpm	_	_
30	礼品	_	NN	NN	_	24	dobj	_	_
31	辉映	_	VV	VV	_	24	dep	_	_
32	着	_	AS	AS	_	31	asp	_	_
33	幸福	_	NN	NN	_	35	assmod	_	_
34	的	_	DEG	DEG	_	33	assm	_	_
35	光彩	_	NN	NN	_	31	dobj	_	_
36	。	_	PU	PU	_	24	punct	_	_

Oracle:
(x0 / 使-01, arg1, x18 / 礼品)
(x0 / 使-01, arg2, x15 / 辉映-01)
(x0 / 使-01, manner, x22 / 都)
(x0 / 使-01, time, x23 / 小-01)
(x15 / 辉映-01, arg1, x16 / 光彩)
(x16 / 光彩, mod, x17 / 幸福-01)
(x19 / 收到-01, arg0, x20 / 我)
(x19 / 收到-01, arg1, x18 / 礼品)
(x19 / 收到-01, time, x21 / 圣诞节)
(x3 / 灯光, poss, x4 / 圣诞树)
(x5 / 音乐, mod, x6 / 弥撒)
(x6 / 弥撒, time, x7 / 午夜)
(x8 / 微笑, mod, x9 / 甜蜜-01)

Input(Some(Graph(null,ArrayBuffer(Span(34,35,List(0),光彩,光彩,false), Span(32,33,List(1),幸福,幸福,false), Span(30,31,List(2),辉映,辉映-01,false), Span(29,30,List(3),礼品,礼品,false), Span(27,28,List(4),收到,收到-01,false), Span(26,27,List(5),我,我,false), Span(24,25,List(6),圣诞节,圣诞节,false), Span(23,24,List(7),使,使-01,false), Span(22,23,List(8),都,都,false), Span(21,22,List(9),一切,一切,false), Span(20,21,List(10),这,这,false), Span(18,19,List(11),微笑,微笑,false), Span(16,17,List(12),甜蜜,甜蜜-01,false), Span(14,15,List(13),音乐,音乐,false), Span(12,13,List(14),弥撒,弥撒,false), Span(10,11,List(15),午夜,午夜,false), Span(8,9,List(16),灯光,灯光,false), Span(6,7,List(17),圣诞树,圣诞树,false), Span(4,5,List(18),时候,时候,false), Span(2,3,List(19),小,小,false), Span(1,2,List(20),我,我,false), Span(0,1,List(21),在,在-01,false)),Map(2 -> 辉映-01, 5 -> 我, 12 -> 甜蜜-01, 15 -> 午夜, 8 -> 都, 21 -> 在-01, 18 -> 时候, 7 -> 使-01, 17 -> 圣诞树, 1 -> 幸福, 4 -> 收到-01, 11 -> 微笑, 14 -> 弥撒, 20 -> 我, 6 -> 圣诞节, 0 -> 光彩, 9 -> 一切, 16 -> 灯光, 19 -> 小, 3 -> 礼品, 10 -> 这, 13 -> 音乐),Map(礼 -> 礼品, 甜 -> 甜蜜-01, 辉 -> 辉映-01, 在 -> 在-01, 收 -> 收到-01, 我 -> 我, 这 -> 这, 幸 -> 幸福, 我2 -> 我, 弥 -> 弥撒, 灯 -> 灯光, 小 -> 小, 微 -> 微笑, 圣2 -> 圣诞树, 都 -> 都, 午 -> 午夜, 光 -> 光彩, 使 -> 使-01, 时 -> 时候, 圣 -> 圣诞节, 音 -> 音乐, 一 -> 一切))),[Ljava.lang.String;@3e1f1046,Annotation([Ljava.lang.String;@23e3f5cd,[Ljava.lang.String;@5c931134,[Ljava.lang.String;@1d7eb170),Annotation([Ljava.lang.String;@5b251fb9,[Ljava.lang.String;@67d4c48d,[Ledu.cmu.lti.nlp.amr.Dependency;@230a73f2),Annotation([Ljava.lang.String;@4b97b3d2,[Ljava.lang.String;@383cb5ce,[Ljava.lang.String;@798deee8),Annotation([Ljava.lang.String;@96897c8,[Ljava.lang.String;@7f97bc14,[Ledu.cmu.lti.nlp.amr.Entity;@22d8f4ed))
AMR:
(一 / 一切, domain, 音 / 音乐)
(使 / 使-01, ARG6, 一 / 一切)
(使 / 使-01, manner, 都 / 都)
(使 / 使-01, prep-on-behalf, 辉 / 辉映-01)
(使 / 使-01, snt1, 礼 / 礼品)
(光 / 光彩, mod, 幸 / 幸福)
(在 / 在-01, ARG4, 小 / 小)
(在 / 在-01, ARG5, 我2 / 我)
(在 / 在-01, age, 灯 / 灯光)
(在 / 在-01, age, 音 / 音乐)
(弥 / 弥撒, time, 午 / 午夜)
(微 / 微笑, location, 一 / 一切)
(微 / 微笑, mod, 甜 / 甜蜜-01)
(收 / 收到-01, op, 礼 / 礼品)
(收 / 收到-01, time, 圣 / 圣诞节)
(时 / 时候, mod, 小 / 小)
(灯 / 灯光, poss, 圣2 / 圣诞树)
(礼 / 礼品, location, 我 / 我)
(辉 / 辉映-01, snt1, 光 / 光彩)
(这 / 这, ARG3, 使 / 使-01)
(音 / 音乐, mod, 弥 / 弥撒)

Decoded in 148,616 microseconds
Sentence: “ 你 这里 的 人 在 同 一 个 花园 中 种植 着 五千 朵 玫瑰 。 ” 小 王子 说 ： “ 可是 ， 他们 却 不 能 从 中 找到 自己 所 要 寻找 的 东西 … ”

Spans:
Span 27-28:  不 => 不
Span 37-38:  东西 => 东西
Span 4-5:  人 => 人
Span 25-26:  他们 => 他们
Span 1-2:  你 => 你
Span 6-7:  同 => 同-01
Span 5-6:  在 => 在-01
Span 35-36:  寻找 => 寻找-01
Span 18-19:  小 => 小
Span 31-32:  找到 => 找到-01
Span 19-20:  王子 => 王子
Span 15-16:  玫瑰 => 玫瑰
Span 11-12:  种植 => 种植-01
Span 28-29:  能 => 能
Span 32-33:  自己 => 自己
Span 9-10:  花园 => 花园
Span 34-35:  要 => 要-02
Span 20-21:  说 => 说-02
Span 2-3:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 37-38:  东西 => 东西
Oracle Span 4-5:  人 => 人
Oracle Span 1-2:  你 => 你
Oracle Span 6-7:  同 => 同-01
Oracle Span 35-36:  寻找 => 寻找-01
Oracle Span 18-19:  小 => 小-01
Oracle Span 31-32:  找到 => 找到-01
Oracle Span 19-20:  王子 => 王子
Oracle Span 15-16:  玫瑰 => 玫瑰
Oracle Span 11-12:  种植 => 种植-01
Oracle Span 28-29:  能 => 能-01
Oracle Span 9-10:  花园 => 花园
Oracle Span 34-35:  要 => 要-03
Oracle Span 20-21:  说 => 说-01
Oracle Span 2-3:  这里 => 这里

Incorrect span: 要 => 要-02
Extra span: 自己 => 自己
Incorrect span: 能 => 能
Extra span: 不 => 不
Extra span: 他们 => 他们
Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 说 => 说-01
Missing span: 能 => 能-01
Missing span: 要 => 要-03
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	12	punct	_	_
2	你	_	PN	PN	_	3	dep	_	_
3	这里	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	人	_	NN	NN	_	12	dep	_	_
6	在	_	P	P	_	12	prep	_	_
7	同	_	DT	DT	_	10	det	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	个	_	M	M	_	7	dep	_	_
10	花园	_	NN	NN	_	11	lobj	_	_
11	中	_	LC	LC	_	6	plmod	_	_
12	种植	_	VV	VV	_	21	dep	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	五千	_	CD	CD	_	15	nummod	_	_
15	朵	_	M	M	_	16	clf	_	_
16	玫瑰	_	NN	NN	_	12	dobj	_	_
17	。	_	PU	PU	_	12	punct	_	_
18	”	_	PU	PU	_	12	punct	_	_
19	小	_	JJ	JJ	_	20	amod	_	_
20	王子	_	NN	NN	_	21	nsubj	_	_
21	说	_	VV	VV	_	0	root	_	_
22	：	_	PU	PU	_	21	punct	_	_
23	“	_	PU	PU	_	32	punct	_	_
24	可是	_	AD	AD	_	32	advmod	_	_
25	,	_	PU	PU	_	32	punct	_	_
26	他们	_	PN	PN	_	32	nsubj	_	_
27	却	_	AD	AD	_	32	advmod	_	_
28	不	_	AD	AD	_	32	neg	_	_
29	能	_	VV	VV	_	32	mmod	_	_
30	从	_	P	P	_	32	prep	_	_
31	中	_	NR	NR	_	30	pobj	_	_
32	找到	_	VV	VV	_	21	ccomp	_	_
33	自己	_	PN	PN	_	35	nsubj	_	_
34	所	_	MSP	MSP	_	35	prtmod	_	_
35	要	_	VV	VV	_	39	rcmod	_	_
36	寻找	_	VV	VV	_	35	dep	_	_
37	的	_	DEC	DEC	_	35	cpm	_	_
38	东西	_	NN	NN	_	39	nn	_	_
39	…	_	NN	NN	_	32	dobj	_	_
40	”	_	PU	PU	_	32	punct	_	_

Oracle:
(x25 / 说-01, arg0, x27 / 王子)
(x27 / 王子, mod, x28 / 小-01)
(x30 / 种植-01, arg0, x31 / 人)
(x30 / 种植-01, arg1, x35 / 玫瑰)
(x30 / 种植-01, location, x37 / 花园)
(x31 / 人, location, x33 / 这里)
(x33 / 这里, poss, x34 / 你)
(x37 / 花园, mod, x39 / 同-01)
(x40 / 能-01, arg0, x42 / 找到-01)
(x42 / 找到-01, arg1, x51 / 东西)
(x52 / 寻找-01, arg1, x51 / 东西)
(x54 / 要-03, arg0, x52 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(37,38,List(0),东西,东西,false), Span(35,36,List(1),寻找,寻找-01,false), Span(34,35,List(2),要,要-02,false), Span(32,33,List(3),自己,自己,false), Span(31,32,List(4),找到,找到-01,false), Span(28,29,List(5),能,能,false), Span(27,28,List(6),不,不,false), Span(25,26,List(7),他们,他们,false), Span(20,21,List(8),说,说-02,false), Span(19,20,List(9),王子,王子,false), Span(18,19,List(10),小,小,false), Span(15,16,List(11),玫瑰,玫瑰,false), Span(11,12,List(12),种植,种植-01,false), Span(9,10,List(13),花园,花园,false), Span(6,7,List(14),同,同-01,false), Span(5,6,List(15),在,在-01,false), Span(4,5,List(16),人,人,false), Span(2,3,List(17),这里,这里,false), Span(1,2,List(18),你,你,false)),Map(2 -> 要-02, 5 -> 能, 12 -> 种植-01, 15 -> 在-01, 8 -> 说-02, 18 -> 你, 7 -> 他们, 17 -> 这里, 1 -> 寻找-01, 4 -> 找到-01, 11 -> 玫瑰, 14 -> 同-01, 6 -> 不, 0 -> 东西, 9 -> 王子, 16 -> 人, 3 -> 自己, 10 -> 小, 13 -> 花园),Map(在 -> 在-01, 自 -> 自己, 这 -> 这里, 要 -> 要-02, 寻 -> 寻找-01, 能 -> 能, 王 -> 王子, 你 -> 你, 同 -> 同-01, 他 -> 他们, 玫 -> 玫瑰, 东 -> 东西, 小 -> 小, 花 -> 花园, 不 -> 不, 说 -> 说-02, 种 -> 种植-01, 人 -> 人, 找 -> 找到-01))),[Ljava.lang.String;@3434a4f0,Annotation([Ljava.lang.String;@79afa369,[Ljava.lang.String;@3b9ac754,[Ljava.lang.String;@5e002356),Annotation([Ljava.lang.String;@4f820f42,[Ljava.lang.String;@4b325930,[Ledu.cmu.lti.nlp.amr.Dependency;@267f9765),Annotation([Ljava.lang.String;@79ba0a6f,[Ljava.lang.String;@261de205,[Ljava.lang.String;@7f3fc42f),Annotation([Ljava.lang.String;@25a1a012,[Ljava.lang.String;@ce12fbb,[Ledu.cmu.lti.nlp.amr.Entity;@4525e9e8))
AMR:
(人 / 人, location, 这 / 这里)
(他 / 他们, location, 不 / 不)
(同 / 同-01, degree, 在 / 在-01)
(在 / 在-01, degree, 人 / 人)
(寻 / 寻找-01, prep-through, 东 / 东西)
(找 / 找到-01, manner, 能 / 能)
(找 / 找到-01, prep-through, 自 / 自己)
(种 / 种植-01, location, 花 / 花园)
(种 / 种植-01, purpose, 玫 / 玫瑰)
(能 / 能, mod, 不 / 不)
(花 / 花园, mod, 同 / 同-01)
(要 / 要-02, example, 寻 / 寻找-01)
(要 / 要-02, time, 找 / 找到-01)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, beneficiary, 玫 / 玫瑰)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, location, 不 / 不)
(这 / 这里, poss, 你 / 你)

Decoded in 119,486 microseconds
Sentence: “ 他们 是 找 不 到 的 。 ”

Spans:
Span 4-5:  不 => 不
Span 1-2:  他们 => 他们
Span 5-6:  到 => 到-01
Span 3-4:  找 => 找-01
Span 2-3:  是 => 是-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  他们 => 他们

Extra span: 到 => 到-01
Extra span: 不 => 不
Extra span: 找 => 找-01
Extra span: 是 => 是-04
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	他们	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	找	_	VV	VV	_	3	attr	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	到	_	VV	VV	_	4	dep	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),到,到-01,false), Span(4,5,List(1),不,不,false), Span(3,4,List(2),找,找-01,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),他们,他们,false)),Map(2 -> 找-01, 1 -> 不, 4 -> 他们, 0 -> 到-01, 3 -> 是-04),Map(他 -> 他们, 不 -> 不, 到 -> 到-01, 找 -> 找-01, 是 -> 是-04))),[Ljava.lang.String;@443a53df,Annotation([Ljava.lang.String;@6c33da7a,[Ljava.lang.String;@69aabcb0,[Ljava.lang.String;@32a72c4),Annotation([Ljava.lang.String;@15986dd5,[Ljava.lang.String;@678a9516,[Ledu.cmu.lti.nlp.amr.Dependency;@5bf9ea6b),Annotation([Ljava.lang.String;@b950f82,[Ljava.lang.String;@5d352de0,[Ljava.lang.String;@6e243175),Annotation([Ljava.lang.String;@7a1a3468,[Ljava.lang.String;@59d0cdb6,[Ledu.cmu.lti.nlp.amr.Entity;@2dfeb141))
AMR:
(到 / 到-01, topic, 不 / 不)
(找 / 找-01, location, 不 / 不)
(找 / 找-01, manner, 是 / 是-04)
(是 / 是-04, degree, 他 / 他们)

Decoded in 7,409 microseconds
Sentence: 我 回答 道 。

Spans:
Span 1-2:  回答 => 回答-01
Span 0-1:  我 => 我
Span 2-3:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 0-1:  我 => 我

Extra span: 道 => 道-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),道,道-01,false), Span(1,2,List(1),回答,回答-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 回答-01, 0 -> 道-01),Map(我 -> 我, 道 -> 道-01, 回 -> 回答-01))),[Ljava.lang.String;@629e8212,Annotation([Ljava.lang.String;@498c535d,[Ljava.lang.String;@16ee9aa7,[Ljava.lang.String;@4e424582),Annotation([Ljava.lang.String;@58dad04a,[Ljava.lang.String;@73e776b7,[Ledu.cmu.lti.nlp.amr.Dependency;@113ee1ce),Annotation([Ljava.lang.String;@4d0cc83e,[Ljava.lang.String;@43da0955,[Ljava.lang.String;@bc09d57),Annotation([Ljava.lang.String;@6d963d70,[Ljava.lang.String;@467045c4,[Ledu.cmu.lti.nlp.amr.Entity;@55736cfe))
AMR:
(回 / 回答-01, prep-within, 道 / 道-01)
(回 / 回答-01, value, 我 / 我)

Decoded in 3,800 microseconds
Sentence: “ 然而 ， 他们 所 寻找 的 东西 却 是 可以 从 一 朵 玫瑰花 或 一点儿 水 中 找到 的 … ”

Spans:
Span 16-17:  一点儿 => 一点儿
Span 7-8:  东西 => 东西
Span 3-4:  他们 => 他们
Span 10-11:  可以 => 可以-02
Span 5-6:  寻找 => 寻找-01
Span 19-20:  找到 => 找到-01
Span 9-10:  是 => 是-04
Span 17-18:  水 => 水
Span 14-15:  玫瑰花 => 玫瑰花

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  一点儿 => 一点儿
Oracle Span 7-8:  东西 => 东西
Oracle Span 3-4:  他们 => 他们
Oracle Span 10-11:  可以 => 可以-01
Oracle Span 5-6:  寻找 => 寻找-01
Oracle Span 19-20:  找到 => 找到-01
Oracle Span 17-18:  水 => 水
Oracle Span 14-15:  玫瑰花 => 玫瑰花

Incorrect span: 可以 => 可以-02
Extra span: 是 => 是-04
Missing span: 可以 => 可以-01
Dependencies:
1	“	_	PU	PU	_	11	punct	_	_
2	然而	_	AD	AD	_	11	advmod	_	_
3	,	_	PU	PU	_	11	punct	_	_
4	他们	_	PN	PN	_	6	nsubj	_	_
5	所	_	MSP	MSP	_	6	prtmod	_	_
6	寻找	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	东西	_	NN	NN	_	11	nsubj	_	_
9	却	_	AD	AD	_	11	advmod	_	_
10	是	_	VC	VC	_	11	cop	_	_
11	可以	_	VV	VV	_	22	dep	_	_
12	从	_	P	P	_	20	prep	_	_
13	一	_	CD	CD	_	14	nummod	_	_
14	朵	_	M	M	_	15	clf	_	_
15	玫瑰花	_	NN	NN	_	18	conj	_	_
16	或	_	CC	CC	_	18	cc	_	_
17	一点儿	_	CD	CD	_	18	nummod	_	_
18	水	_	NN	NN	_	19	lobj	_	_
19	中	_	LC	LC	_	12	plmod	_	_
20	找到	_	VV	VV	_	22	nsubj	_	_
21	的	_	DEC	DEC	_	20	cpm	_	_
22	…	_	VA	VA	_	0	root	_	_
23	”	_	PU	PU	_	22	punct	_	_

Oracle:
(x15 / 可以-01, arg0, x16 / 找到-01)
(x16 / 找到-01, arg0, x17 / 他们)
(x16 / 找到-01, arg1, x18 / 东西)
(x19 / 寻找-01, arg1, x18 / 东西)
(x24 / 水, quant, x25 / 一点儿)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),找到,找到-01,false), Span(17,18,List(1),水,水,false), Span(16,17,List(2),一点儿,一点儿,false), Span(14,15,List(3),玫瑰花,玫瑰花,false), Span(10,11,List(4),可以,可以-02,false), Span(9,10,List(5),是,是-04,false), Span(7,8,List(6),东西,东西,false), Span(5,6,List(7),寻找,寻找-01,false), Span(3,4,List(8),他们,他们,false)),Map(2 -> 一点儿, 5 -> 是-04, 8 -> 他们, 7 -> 寻找-01, 1 -> 水, 4 -> 可以-02, 6 -> 东西, 0 -> 找到-01, 3 -> 玫瑰花),Map(寻 -> 寻找-01, 他 -> 他们, 玫 -> 玫瑰花, 水 -> 水, 东 -> 东西, 找 -> 找到-01, 是 -> 是-04, 一 -> 一点儿, 可 -> 可以-02))),[Ljava.lang.String;@5a566922,Annotation([Ljava.lang.String;@6f7a2a5,[Ljava.lang.String;@42ed89da,[Ljava.lang.String;@c3719e5),Annotation([Ljava.lang.String;@65c17e38,[Ljava.lang.String;@5e180aaf,[Ledu.cmu.lti.nlp.amr.Dependency;@7015ebef),Annotation([Ljava.lang.String;@44592c39,[Ljava.lang.String;@2a87ba34,[Ljava.lang.String;@34d480b9),Annotation([Ljava.lang.String;@6b415f5f,[Ljava.lang.String;@66749eea,[Ledu.cmu.lti.nlp.amr.Entity;@7135ce0a))
AMR:
(一 / 一点儿, part, 玫 / 玫瑰花)
(东 / 东西, location, 是 / 是-04)
(可 / 可以-02, degree, 是 / 是-04)
(可 / 可以-02, purpose, 玫 / 玫瑰花)
(寻 / 寻找-01, prep-through, 东 / 东西)
(寻 / 寻找-01, topic, 他 / 他们)
(找 / 找到-01, topic, 水 / 水)
(水 / 水, quant, 一 / 一点儿)

Decoded in 26,195 microseconds
Sentence: “ 一点 不错 。 ”

Spans:
Span 1-2:  一点 => 一点
Span 2-3:  不错 => 不错-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  一点 => 一点

Extra span: 不错 => 不错-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	一点	_	AD	AD	_	3	advmod	_	_
3	不错	_	VA	VA	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),不错,不错-01,false), Span(1,2,List(1),一点,一点,false)),Map(1 -> 一点, 0 -> 不错-01),Map(不 -> 不错-01, 一 -> 一点))),[Ljava.lang.String;@617449dd,Annotation([Ljava.lang.String;@2e590b,[Ljava.lang.String;@42ef042a,[Ljava.lang.String;@1df5c7e3),Annotation([Ljava.lang.String;@5e0c4f21,[Ljava.lang.String;@2c18a3ea,[Ledu.cmu.lti.nlp.amr.Dependency;@166c2c17),Annotation([Ljava.lang.String;@25953be6,[Ljava.lang.String;@19dc0d32,[Ljava.lang.String;@70b2fa10),Annotation([Ljava.lang.String;@7c96c85,[Ljava.lang.String;@b0f2d91,[Ledu.cmu.lti.nlp.amr.Entity;@7243145f))
AMR:
(不 / 不错-01, degree, 一 / 一点)

Decoded in 2,279 microseconds
Sentence: 我 回答 道 。

Spans:
Span 1-2:  回答 => 回答-01
Span 0-1:  我 => 我
Span 2-3:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  回答 => 回答-01
Oracle Span 0-1:  我 => 我

Extra span: 道 => 道-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	回答	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 回答-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),道,道-01,false), Span(1,2,List(1),回答,回答-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 回答-01, 0 -> 道-01),Map(我 -> 我, 道 -> 道-01, 回 -> 回答-01))),[Ljava.lang.String;@15c6027d,Annotation([Ljava.lang.String;@5927f904,[Ljava.lang.String;@2bb62414,[Ljava.lang.String;@413d2cd1),Annotation([Ljava.lang.String;@644d1b61,[Ljava.lang.String;@2443135,[Ledu.cmu.lti.nlp.amr.Dependency;@184823ed),Annotation([Ljava.lang.String;@30bbcf91,[Ljava.lang.String;@3ca14cf4,[Ljava.lang.String;@1f4f0fcc),Annotation([Ljava.lang.String;@46c10083,[Ljava.lang.String;@28e8888d,[Ledu.cmu.lti.nlp.amr.Entity;@1e98b788))
AMR:
(回 / 回答-01, prep-within, 道 / 道-01)
(回 / 回答-01, value, 我 / 我)

Decoded in 3,827 microseconds
Sentence: 小 王子 又 加 了 一 句 ： “ 眼睛 是 什么 也 看 不 见 的 。

Spans:
Span 14-15:  不 => 不
Span 12-13:  也 => 也
Span 11-12:  什么 => 什么
Span 3-4:  加 => 加-02
Span 2-3:  又 => 又
Span 6-7:  句 => 句
Span 0-1:  小 => 小
Span 10-11:  是 => 是-04
Span 1-2:  王子 => 王子
Span 13-14:  看 => 看-10
Span 9-10:  眼睛 => 眼睛
Span 15-16:  见 => 见-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  也 => 也
Oracle Span 11-12:  什么 => 什么
Oracle Span 3-4:  加 => 加-01
Oracle Span 2-3:  又 => 又
Oracle Span 6-7:  句 => 句
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 9-10:  眼睛 => 眼睛

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Incorrect span: 加 => 加-02
Incorrect span: 小 => 小
Missing span: 加 => 加-01
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	加	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	句	_	NN	NN	_	4	dobj	_	_
8	：	_	PU	PU	_	4	punct	_	_
9	“	_	PU	PU	_	11	punct	_	_
10	眼睛	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	4	conj	_	_
12	什么	_	PN	PN	_	16	nsubj	_	_
13	也	_	AD	AD	_	16	advmod	_	_
14	看	_	VV	VV	_	16	mmod	_	_
15	不	_	AD	AD	_	16	neg	_	_
16	见	_	VV	VV	_	11	attr	_	_
17	的	_	DEC	DEC	_	16	cpm	_	_
18	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 加-01, arg0, x2 / 王子)
(x0 / 加-01, arg1, x11 / 句)
(x0 / 加-01, manner, x4 / 又)
(x2 / 王子, mod, x3 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),见,见-01,false), Span(14,15,List(1),不,不,false), Span(13,14,List(2),看,看-10,false), Span(12,13,List(3),也,也,false), Span(11,12,List(4),什么,什么,false), Span(10,11,List(5),是,是-04,false), Span(9,10,List(6),眼睛,眼睛,false), Span(6,7,List(7),句,句,false), Span(3,4,List(8),加,加-02,false), Span(2,3,List(9),又,又,false), Span(1,2,List(10),王子,王子,false), Span(0,1,List(11),小,小,false)),Map(2 -> 看-10, 5 -> 是-04, 8 -> 加-02, 7 -> 句, 1 -> 不, 11 -> 小, 4 -> 什么, 6 -> 眼睛, 9 -> 又, 0 -> 见-01, 10 -> 王子, 3 -> 也),Map(又 -> 又, 加 -> 加-02, 眼 -> 眼睛, 也 -> 也, 王 -> 王子, 句 -> 句, 小 -> 小, 不 -> 不, 看 -> 看-10, 什 -> 什么, 是 -> 是-04, 见 -> 见-01))),[Ljava.lang.String;@794eeaf8,Annotation([Ljava.lang.String;@37c5284a,[Ljava.lang.String;@5b8572df,[Ljava.lang.String;@7aaad0),Annotation([Ljava.lang.String;@eed890d,[Ljava.lang.String;@10f477e2,[Ledu.cmu.lti.nlp.amr.Dependency;@6097fca9),Annotation([Ljava.lang.String;@35eee641,[Ljava.lang.String;@5729b410,[Ljava.lang.String;@64518270),Annotation([Ljava.lang.String;@3b7c58e7,[Ljava.lang.String;@79627d27,[Ledu.cmu.lti.nlp.amr.Entity;@6371cf2f))
AMR:
(不 / 不, mod, 看 / 看-10)
(什 / 什么, mod, 是 / 是-04)
(加 / 加-02, manner, 又 / 又)
(句 / 句, mod, 加 / 加-02)
(小 / 小, value, 加 / 加-02)
(是 / 是-04, manner, 眼 / 眼睛)
(是 / 是-04, time, 句 / 句)
(王 / 王子, mod, 小 / 小)
(看 / 看-10, manner, 也 / 也)
(看 / 看-10, manner, 是 / 是-04)
(见 / 见-01, manner, 不 / 不)

Decoded in 42,050 microseconds
Sentence: 应该 用 心 去 寻找 。 ”

Spans:
Span 3-4:  去 => 去-02
Span 4-5:  寻找 => 寻找-01
Span 0-1:  应该 => 应该-01
Span 2-3:  心 => 心
Span 1-2:  用 => 用

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  去 => 去-01
Oracle Span 4-5:  寻找 => 寻找-01
Oracle Span 0-1:  应该 => 应该-02

Incorrect span: 去 => 去-02
Extra span: 心 => 心
Extra span: 用 => 用
Incorrect span: 应该 => 应该-01
Missing span: 应该 => 应该-02
Missing span: 去 => 去-01
Dependencies:
1	应该	_	VV	VV	_	2	mmod	_	_
2	用	_	VV	VV	_	0	root	_	_
3	心	_	NN	NN	_	2	dobj	_	_
4	去	_	MSP	MSP	_	5	prtmod	_	_
5	寻找	_	VV	VV	_	2	dep	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 去-01, arg1, x12 / 寻找-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),寻找,寻找-01,false), Span(3,4,List(1),去,去-02,false), Span(2,3,List(2),心,心,false), Span(1,2,List(3),用,用,false), Span(0,1,List(4),应该,应该-01,false)),Map(2 -> 心, 1 -> 去-02, 4 -> 应该-01, 0 -> 寻找-01, 3 -> 用),Map(用 -> 用, 寻 -> 寻找-01, 去 -> 去-02, 心 -> 心, 应 -> 应该-01))),[Ljava.lang.String;@b5b9333,Annotation([Ljava.lang.String;@52b959df,[Ljava.lang.String;@38588dea,[Ljava.lang.String;@553d2579),Annotation([Ljava.lang.String;@2a8f6e6,[Ljava.lang.String;@1ac730cd,[Ledu.cmu.lti.nlp.amr.Dependency;@668cc9a2),Annotation([Ljava.lang.String;@5aa62ee7,[Ljava.lang.String;@1f7cec93,[Ljava.lang.String;@3c9ef6e9),Annotation([Ljava.lang.String;@3cdff901,[Ljava.lang.String;@57e5396b,[Ledu.cmu.lti.nlp.amr.Entity;@2f054f70))
AMR:
(去 / 去-02, location, 心 / 心)
(寻 / 寻找-01, ARG3, 去 / 去-02)
(应 / 应该-01, ord, 用 / 用)
(应 / 应该-01, prep-on-behalf, 去 / 去-02)

Decoded in 7,738 microseconds
Sentence: 我 喝 了 水 。

Spans:
Span 1-2:  喝 => (thing :arg1-of 喝-01)
Span 0-1:  我 => 我
Span 3-4:  水 => 水

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 痛快 地 呼吸 着 空气 。

Spans:
Span 3-4:  呼吸 => 呼吸-01
Span 2-3:  地 => 地
Span 0-1:  我 => 我
Span 1-2:  痛快 => 痛快-01
Span 5-6:  空气 => 空气

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  呼吸 => 呼吸-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  痛快 => 痛快-01
Oracle Span 5-6:  空气 => 空气

Extra span: 地 => 地
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	痛快	_	VA	VA	_	5	dep	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	呼吸	_	NN	NN	_	5	prep	_	_
5	着	_	VV	VV	_	0	root	_	_
6	空气	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 呼吸-01, arg0, x1 / 我)
(x0 / 呼吸-01, arg1, x4 / 空气)
(x0 / 呼吸-01, manner, x3 / 痛快-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),空气,空气,false), Span(3,4,List(1),呼吸,呼吸-01,false), Span(2,3,List(2),地,地,false), Span(1,2,List(3),痛快,痛快-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 地, 1 -> 呼吸-01, 4 -> 我, 0 -> 空气, 3 -> 痛快-01),Map(我 -> 我, 痛 -> 痛快-01, 地 -> 地, 空 -> 空气, 呼 -> 呼吸-01))),[Ljava.lang.String;@27b337bb,Annotation([Ljava.lang.String;@59636c47,[Ljava.lang.String;@5c18d6d4,[Ljava.lang.String;@6cbb175),Annotation([Ljava.lang.String;@38fb50f8,[Ljava.lang.String;@7ab802f4,[Ledu.cmu.lti.nlp.amr.Dependency;@608cd501),Annotation([Ljava.lang.String;@3b97907c,[Ljava.lang.String;@59096b66,[Ljava.lang.String;@631c6d11),Annotation([Ljava.lang.String;@65be88ae,[Ljava.lang.String;@62ade015,[Ledu.cmu.lti.nlp.amr.Entity;@70ede57d))
AMR:
(呼 / 呼吸-01, ARG3, 空 / 空气)
(呼 / 呼吸-01, ARG5, 我 / 我)
(呼 / 呼吸-01, manner, 痛 / 痛快-01)
(痛 / 痛快-01, ARG1, 地 / 地)

Decoded in 21,204 microseconds
Sentence: 沙漠 在 晨曦 中 泛出 蜂蜜 的 光泽 。

Spans:
Span 7-8:  光泽 => 光泽
Span 1-2:  在 => 在-01
Span 2-3:  晨曦 => 晨曦
Span 0-1:  沙漠 => 沙漠
Span 4-5:  泛出 => 泛出
Span 5-6:  蜂蜜 => 蜂蜜

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  光泽 => 光泽
Oracle Span 2-3:  晨曦 => 晨曦
Oracle Span 0-1:  沙漠 => 沙漠
Oracle Span 4-5:  泛出 => 泛出
Oracle Span 5-6:  蜂蜜 => 蜂蜜

Extra span: 在 => 在-01
Dependencies:
1	沙漠	_	NN	NN	_	5	nsubj	_	_
2	在	_	P	P	_	5	prep	_	_
3	晨曦	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	2	plmod	_	_
5	泛出	_	VV	VV	_	0	root	_	_
6	蜂蜜	_	NN	NN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	光泽	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x4 / 泛出, arg0, x6 / 沙漠)
(x4 / 泛出, arg1, x7 / 光泽)
(x4 / 泛出, time, x9 / 晨曦)
(x7 / 光泽, mod, x8 / 蜂蜜)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),光泽,光泽,false), Span(5,6,List(1),蜂蜜,蜂蜜,false), Span(4,5,List(2),泛出,泛出,false), Span(2,3,List(3),晨曦,晨曦,false), Span(1,2,List(4),在,在-01,false), Span(0,1,List(5),沙漠,沙漠,false)),Map(2 -> 泛出, 5 -> 沙漠, 1 -> 蜂蜜, 4 -> 在-01, 0 -> 光泽, 3 -> 晨曦),Map(蜂 -> 蜂蜜, 在 -> 在-01, 沙 -> 沙漠, 晨 -> 晨曦, 泛 -> 泛出, 光 -> 光泽))),[Ljava.lang.String;@70997a94,Annotation([Ljava.lang.String;@61f377d1,[Ljava.lang.String;@6c538eb2,[Ljava.lang.String;@738a5848),Annotation([Ljava.lang.String;@487cd177,[Ljava.lang.String;@324b6a56,[Ledu.cmu.lti.nlp.amr.Dependency;@421d54b3),Annotation([Ljava.lang.String;@63f40ca0,[Ljava.lang.String;@4dad8ec0,[Ljava.lang.String;@24dd44f9),Annotation([Ljava.lang.String;@ccd341d,[Ljava.lang.String;@4f1fb828,[Ledu.cmu.lti.nlp.amr.Entity;@6ee5f485))
AMR:
(光 / 光泽, mod, 蜂 / 蜂蜜)
(在 / 在-01, ARG4, 沙 / 沙漠)
(在 / 在-01, degree, 泛 / 泛出)
(晨 / 晨曦, manner, 在 / 在-01)
(泛 / 泛出, mod, 光 / 光泽)

Decoded in 22,158 microseconds
Sentence: 这 蜂蜜 般 的 光泽 也 使 我 感到 幸福 。

Spans:
Span 5-6:  也 => 也
Span 6-7:  使 => 使-01
Span 4-5:  光泽 => 光泽
Span 9-10:  幸福 => 幸福
Span 8-9:  感到 => 感到-01
Span 7-8:  我 => 我
Span 1-2:  蜂蜜 => 蜂蜜
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  也 => 也
Oracle Span 6-7:  使 => 使-01
Oracle Span 4-5:  光泽 => 光泽
Oracle Span 9-10:  幸福 => 幸福-01
Oracle Span 8-9:  感到 => 感到-01
Oracle Span 7-8:  我 => 我
Oracle Span 0-1:  这 => 这

Incorrect span: 幸福 => 幸福
Extra span: 蜂蜜 => 蜂蜜
Missing span: 幸福 => 幸福-01
Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	蜂蜜	_	NN	NN	_	3	nsubj	_	_
3	般	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	光泽	_	NN	NN	_	7	nsubj	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	使	_	VV	VV	_	0	root	_	_
8	我	_	PN	PN	_	7	dobj	_	_
9	感到	_	VV	VV	_	7	dep	_	_
10	幸福	_	NN	NN	_	9	dobj	_	_
11	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 使-01, arg0, x2 / 光泽)
(x0 / 使-01, arg1, x5 / 我)
(x0 / 使-01, arg2, x8 / 感到-01)
(x0 / 使-01, manner, x7 / 也)
(x2 / 光泽, mod, x4 / 这)
(x8 / 感到-01, arg1, x10 / 幸福-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),幸福,幸福,false), Span(8,9,List(1),感到,感到-01,false), Span(7,8,List(2),我,我,false), Span(6,7,List(3),使,使-01,false), Span(5,6,List(4),也,也,false), Span(4,5,List(5),光泽,光泽,false), Span(1,2,List(6),蜂蜜,蜂蜜,false), Span(0,1,List(7),这,这,false)),Map(2 -> 我, 5 -> 光泽, 7 -> 这, 1 -> 感到-01, 4 -> 也, 6 -> 蜂蜜, 0 -> 幸福, 3 -> 使-01),Map(蜂 -> 蜂蜜, 也 -> 也, 我 -> 我, 感 -> 感到-01, 这 -> 这, 幸 -> 幸福, 光 -> 光泽, 使 -> 使-01))),[Ljava.lang.String;@20d19f2c,Annotation([Ljava.lang.String;@45592af7,[Ljava.lang.String;@77b5148c,[Ljava.lang.String;@36359723),Annotation([Ljava.lang.String;@1ab14636,[Ljava.lang.String;@16b3c905,[Ledu.cmu.lti.nlp.amr.Dependency;@49fdbe2b),Annotation([Ljava.lang.String;@53eba4b8,[Ljava.lang.String;@437bd805,[Ljava.lang.String;@4b88ca8e),Annotation([Ljava.lang.String;@6fa02932,[Ljava.lang.String;@61608e1a,[Ledu.cmu.lti.nlp.amr.Entity;@7c46c9c3))
AMR:
(使 / 使-01, manner, 也 / 也)
(使 / 使-01, mode, 光 / 光泽)
(使 / 使-01, prep-on-behalf, 感 / 感到-01)
(使 / 使-01, value, 我 / 我)
(感 / 感到-01, quant, 幸 / 幸福)
(蜂 / 蜂蜜, location, 光 / 光泽)
(蜂 / 蜂蜜, mod, 这 / 这)

Decoded in 31,769 microseconds
Sentence: 为什么 我 要 难过 …

Spans:
Span 1-2:  我 => 我
Span 2-3:  要 => 要-02
Span 3-4:  难过 => 难过-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 3-4:  难过 => 难过-01

Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	为什么	_	NR	NR	_	3	nsubj	_	_
2	我	_	PN	PN	_	3	dep	_	_
3	要	_	VV	VV	_	0	root	_	_
4	难过	_	PU	PU	_	3	punct	_	_
5	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 要-03, arg0, x2 / 难过-01)
(x2 / 难过-01, arg0, x3 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),难过,难过-01,false), Span(2,3,List(1),要,要-02,false), Span(1,2,List(2),我,我,false)),Map(2 -> 我, 1 -> 要-02, 0 -> 难过-01),Map(我 -> 我, 难 -> 难过-01, 要 -> 要-02))),[Ljava.lang.String;@7197b07f,Annotation([Ljava.lang.String;@1f10fec6,[Ljava.lang.String;@7a65a360,[Ljava.lang.String;@30a7653e),Annotation([Ljava.lang.String;@7cff3f1d,[Ljava.lang.String;@6401188a,[Ledu.cmu.lti.nlp.amr.Dependency;@33a8c9c9),Annotation([Ljava.lang.String;@382dc417,[Ljava.lang.String;@3daf03d8,[Ljava.lang.String;@510689af),Annotation([Ljava.lang.String;@2415e4c7,[Ljava.lang.String;@72ce812e,[Ledu.cmu.lti.nlp.amr.Entity;@373afd6c))
AMR:
(要 / 要-02, ARG1, 难 / 难过-01)
(要 / 要-02, weekday, 我 / 我)

Decoded in 7,584 microseconds
Sentence: 小 王子 又 重新 在 我 的 身边 坐下 。 他 温柔 地 对 我 说 ： “ 你 应该 实践 你 的 诺言 。 ”

Spans:
Span 10-11:  他 => 他
Span 21-22:  你 => 你
Span 18-19:  你 => 你
Span 2-3:  又 => 又
Span 4-5:  在 => 在-01
Span 12-13:  地 => 地
Span 8-9:  坐下 => 坐下-01
Span 20-21:  实践 => 实践-01
Span 13-14:  对 => 对-02
Span 0-1:  小 => 小
Span 19-20:  应该 => 应该-01
Span 14-15:  我 => 我
Span 5-6:  我 => 我
Span 11-12:  温柔 => 温柔-01
Span 1-2:  王子 => 王子
Span 15-16:  说 => 说-02
Span 23-24:  诺言 => 诺言
Span 7-8:  身边 => 身边
Span 3-4:  重新 => 重新-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  又 => 又
Oracle Span 8-9:  坐下 => 坐下-01
Oracle Span 20-21:  实践 => 实践-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 19-20:  应该 => 应该-02
Oracle Span 5-6:  我 => 我
Oracle Span 11-12:  温柔 => 温柔-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 15-16:  说 => 说-01
Oracle Span 23-24:  诺言 => 诺言
Oracle Span 7-8:  身边 => 身边
Oracle Span 3-4:  重新 => 重新-01

Extra span: 你 => 你
Incorrect span: 应该 => 应该-01
Extra span: 你 => 你
Incorrect span: 说 => 说-02
Extra span: 我 => 我
Extra span: 对 => 对-02
Extra span: 地 => 地
Extra span: 他 => 他
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 说 => 说-01
Missing span: 应该 => 应该-02
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	9	nsubj	_	_
3	又	_	AD	AD	_	9	advmod	_	_
4	重新	_	AD	AD	_	9	advmod	_	_
5	在	_	P	P	_	9	prep	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	身边	_	NN	NN	_	5	pobj	_	_
9	坐下	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_
11	他	_	PN	PN	_	16	nsubj	_	_
12	温柔	_	NR	NR	_	13	nn	_	_
13	地	_	NN	NN	_	16	nsubj	_	_
14	对	_	P	P	_	16	prep	_	_
15	我	_	PN	PN	_	14	pobj	_	_
16	说	_	VV	VV	_	9	conj	_	_
17	：	_	PU	PU	_	16	punct	_	_
18	“	_	PU	PU	_	20	punct	_	_
19	你	_	PN	PN	_	20	nsubj	_	_
20	应该	_	VV	VV	_	16	ccomp	_	_
21	实践	_	NN	NN	_	24	nn	_	_
22	你	_	PN	PN	_	24	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	诺言	_	NN	NN	_	20	dobj	_	_
25	。	_	PU	PU	_	9	punct	_	_
26	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x11 / 应该-02, arg0, x12 / 实践-01)
(x12 / 实践-01, arg1, x15 / 诺言)
(x2 / 坐下-01, arg0, x3 / 王子)
(x2 / 坐下-01, location, x5 / 身边)
(x2 / 坐下-01, manner, x7 / 重新-01)
(x2 / 坐下-01, manner, x8 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x5 / 身边, location, x6 / 我)
(x9 / 说-01, arg1, x11 / 应该-02)
(x9 / 说-01, manner, x16 / 温柔-01)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),诺言,诺言,false), Span(21,22,List(1),你,你,false), Span(20,21,List(2),实践,实践-01,false), Span(19,20,List(3),应该,应该-01,false), Span(18,19,List(4),你,你,false), Span(15,16,List(5),说,说-02,false), Span(14,15,List(6),我,我,false), Span(13,14,List(7),对,对-02,false), Span(12,13,List(8),地,地,false), Span(11,12,List(9),温柔,温柔-01,false), Span(10,11,List(10),他,他,false), Span(8,9,List(11),坐下,坐下-01,false), Span(7,8,List(12),身边,身边,false), Span(5,6,List(13),我,我,false), Span(4,5,List(14),在,在-01,false), Span(3,4,List(15),重新,重新-01,false), Span(2,3,List(16),又,又,false), Span(1,2,List(17),王子,王子,false), Span(0,1,List(18),小,小,false)),Map(2 -> 实践-01, 5 -> 说-02, 12 -> 身边, 15 -> 重新-01, 8 -> 地, 18 -> 小, 7 -> 对-02, 17 -> 王子, 1 -> 你, 4 -> 你, 11 -> 坐下-01, 14 -> 在-01, 6 -> 我, 0 -> 诺言, 9 -> 温柔-01, 16 -> 又, 3 -> 应该-01, 10 -> 他, 13 -> 我),Map(温 -> 温柔-01, 又 -> 又, 在 -> 在-01, 重 -> 重新-01, 我 -> 我, 王 -> 王子, 身 -> 身边, 我2 -> 我, 你 -> 你, 实 -> 实践-01, 他 -> 他, 小 -> 小, 地 -> 地, 说 -> 说-02, 你2 -> 你, 诺 -> 诺言, 对 -> 对-02, 坐 -> 坐下-01, 应 -> 应该-01))),[Ljava.lang.String;@521441d5,Annotation([Ljava.lang.String;@592ca48c,[Ljava.lang.String;@5fed9976,[Ljava.lang.String;@3fdcde7a),Annotation([Ljava.lang.String;@4f363abd,[Ljava.lang.String;@7302ff13,[Ledu.cmu.lti.nlp.amr.Dependency;@4017fe2c),Annotation([Ljava.lang.String;@1961d75a,[Ljava.lang.String;@677ce519,[Ljava.lang.String;@3e26482),Annotation([Ljava.lang.String;@7cfb0c4c,[Ljava.lang.String;@6b37df8e,[Ledu.cmu.lti.nlp.amr.Entity;@6b63abdc))
AMR:
(在 / 在-01, ARG6, 我2 / 我)
(在 / 在-01, manner, 又 / 又)
(在 / 在-01, manner, 重 / 重新-01)
(在 / 在-01, value, 王 / 王子)
(地 / 地, mod, 坐 / 坐下-01)
(地 / 地, mod, 温 / 温柔-01)
(地 / 地, poss, 他 / 他)
(坐 / 坐下-01, location, 身 / 身边)
(坐 / 坐下-01, manner, 重 / 重新-01)
(实 / 实践-01, ARG6, 你 / 你)
(实 / 实践-01, degree, 诺 / 诺言)
(实 / 实践-01, manner, 应 / 应该-01)
(对 / 对-02, location, 地 / 地)
(应 / 应该-01, poss, 你2 / 你)
(王 / 王子, mod, 小 / 小)
(说 / 说-02, poss, 我 / 我)
(说 / 说-02, purpose, 对 / 对-02)
(说 / 说-02, purpose, 应 / 应该-01)

Decoded in 112,138 microseconds
Sentence: “ 什么 诺言 ？ ”

Spans:
Span 1-2:  什么 => 什么
Span 2-3:  诺言 => 诺言

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  诺言 => 诺言

Extra span: 什么 => 什么
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	什么	_	PN	PN	_	3	nsubj	_	_
3	诺言	_	VV	VV	_	0	root	_	_
4	？	_	PU	PU	_	3	punct	_	_
5	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),诺言,诺言,false), Span(1,2,List(1),什么,什么,false)),Map(1 -> 什么, 0 -> 诺言),Map(什 -> 什么, 诺 -> 诺言))),[Ljava.lang.String;@7b351446,Annotation([Ljava.lang.String;@5f08fe00,[Ljava.lang.String;@a1691c0,[Ljava.lang.String;@7c5df615),Annotation([Ljava.lang.String;@2f995afc,[Ljava.lang.String;@377949f1,[Ledu.cmu.lti.nlp.amr.Dependency;@9df564f),Annotation([Ljava.lang.String;@1a21f43f,[Ljava.lang.String;@7f0a133d,[Ljava.lang.String;@241fbec),Annotation([Ljava.lang.String;@715fa8c5,[Ljava.lang.String;@644a3add,[Ledu.cmu.lti.nlp.amr.Entity;@4b765e92))
AMR:
(诺 / 诺言, mod, 什 / 什么)

Decoded in 2,838 microseconds
Sentence: “ 你 知道 … 给 我 的 小 羊 一 个 嘴套子 …

Spans:
Span 1-2:  你 => 你
Span 11-12:  嘴套子 => 嘴套子
Span 7-8:  小 => 小
Span 5-6:  我 => 我
Span 2-3:  知道 => 知道-01
Span 4-5:  给 => 给-02
Span 8-9:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 11-12:  嘴套子 => 嘴套子
Oracle Span 7-8:  小 => 小-01
Oracle Span 5-6:  我 => 我
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 4-5:  给 => 给-01
Oracle Span 8-9:  羊 => 羊

Incorrect span: 小 => 小
Incorrect span: 给 => 给-02
Missing span: 给 => 给-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	…	_	PU	PU	_	3	punct	_	_
5	给	_	P	P	_	9	assmod	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	的	_	DEG	DEG	_	5	assm	_	_
8	小	_	JJ	JJ	_	9	amod	_	_
9	羊	_	NN	NN	_	11	nsubj	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	个	_	M	M	_	3	conj	_	_
12	嘴套子	_	PU	PU	_	3	punct	_	_
13	…	_	PU	PU	_	3	punct	_	_

Oracle:
(x13 / 知道-01, arg0, x14 / 你)
(x13 / 知道-01, arg1, x15 / 给-01)
(x15 / 给-01, arg1, x16 / 嘴套子)
(x15 / 给-01, arg2, x18 / 羊)
(x18 / 羊, mod, x19 / 小-01)
(x18 / 羊, poss, x20 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),嘴套子,嘴套子,false), Span(8,9,List(1),羊,羊,false), Span(7,8,List(2),小,小,false), Span(5,6,List(3),我,我,false), Span(4,5,List(4),给,给-02,false), Span(2,3,List(5),知道,知道-01,false), Span(1,2,List(6),你,你,false)),Map(2 -> 小, 5 -> 知道-01, 1 -> 羊, 4 -> 给-02, 6 -> 你, 0 -> 嘴套子, 3 -> 我),Map(我 -> 我, 你 -> 你, 羊 -> 羊, 给 -> 给-02, 小 -> 小, 嘴 -> 嘴套子, 知 -> 知道-01))),[Ljava.lang.String;@4665428b,Annotation([Ljava.lang.String;@4a70d302,[Ljava.lang.String;@7fd99443,[Ljava.lang.String;@622d7e4),Annotation([Ljava.lang.String;@6a3fbcb1,[Ljava.lang.String;@261b9a37,[Ledu.cmu.lti.nlp.amr.Dependency;@15d3793b),Annotation([Ljava.lang.String;@55e1192,[Ljava.lang.String;@1213ffbc,[Ljava.lang.String;@68a305eb),Annotation([Ljava.lang.String;@6637a365,[Ljava.lang.String;@1310fcb0,[Ledu.cmu.lti.nlp.amr.Entity;@1ef31f71))
AMR:
(小 / 小, location, 给 / 给-02)
(小 / 小, prep-for, 羊 / 羊)
(知 / 知道-01, direction, 你 / 你)
(知 / 知道-01, prep-through, 给 / 给-02)
(给 / 给-02, subset, 我 / 我)
(羊 / 羊, location, 嘴 / 嘴套子)

Decoded in 15,485 microseconds
Sentence: 我 要 对 我 的 花 负责 的 呀 ！ ”

Spans:
Span 2-3:  对 => 对-02
Span 3-4:  我 => 我
Span 0-1:  我 => 我
Span 5-6:  花 => 花-01
Span 1-2:  要 => 要-02
Span 6-7:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  我 => 我
Oracle Span 5-6:  花 => 花
Oracle Span 1-2:  要 => 要-03
Oracle Span 6-7:  负责 => 负责-01

Incorrect span: 花 => 花-01
Extra span: 对 => 对-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 花 => 花
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	要	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	7	prep	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	花	_	NN	NN	_	3	pobj	_	_
7	负责	_	VV	VV	_	2	dobj	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	呀	_	SP	SP	_	2	dep	_	_
10	！	_	PU	PU	_	2	punct	_	_
11	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 花, poss, x12 / 我)
(x8 / 要-03, arg0, x9 / 负责-01)
(x9 / 负责-01, arg0, x10 / 我)
(x9 / 负责-01, arg1, x11 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),负责,负责-01,false), Span(5,6,List(1),花,花-01,false), Span(3,4,List(2),我,我,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),要,要-02,false), Span(0,1,List(5),我,我,false)),Map(2 -> 我, 5 -> 我, 1 -> 花-01, 4 -> 要-02, 0 -> 负责-01, 3 -> 对-02),Map(我 -> 我, 要 -> 要-02, 我2 -> 我, 花 -> 花-01, 负 -> 负责-01, 对 -> 对-02))),[Ljava.lang.String;@6e8fdd19,Annotation([Ljava.lang.String;@35787726,[Ljava.lang.String;@2199e845,[Ljava.lang.String;@27976390),Annotation([Ljava.lang.String;@37e0056e,[Ljava.lang.String;@415795f3,[Ledu.cmu.lti.nlp.amr.Dependency;@2fe2965c),Annotation([Ljava.lang.String;@3375ebd3,[Ljava.lang.String;@40943a6,[Ljava.lang.String;@798cb6d9),Annotation([Ljava.lang.String;@42679fc2,[Ljava.lang.String;@5e50df2e,[Ledu.cmu.lti.nlp.amr.Entity;@100aa331))
AMR:
(对 / 对-02, snt11, 我 / 我)
(要 / 要-02, manner, 我2 / 我)
(要 / 要-02, mode, 花 / 花-01)
(要 / 要-02, snt11, 对 / 对-02)
(负 / 负责-01, manner, 花 / 花-01)

Decoded in 11,040 microseconds
Sentence: 我 从 口袋 中 拿出 我 的 画稿 。

Spans:
Span 2-3:  口袋 => 口袋
Span 5-6:  我 => 我
Span 0-1:  我 => 我
Span 4-5:  拿出 => 拿出-01
Span 7-8:  画稿 => 画稿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  口袋 => 口袋
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  拿出 => 拿出-01
Oracle Span 7-8:  画稿 => 画稿

Extra span: 我 => 我
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	从	_	P	P	_	5	prep	_	_
3	口袋	_	NN	NN	_	4	lobj	_	_
4	中	_	LC	LC	_	2	plmod	_	_
5	拿出	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	8	assmod	_	_
7	的	_	DEG	DEG	_	6	assm	_	_
8	画稿	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 拿出-01, arg0, x2 / 我)
(x0 / 拿出-01, arg1, x3 / 画稿)
(x3 / 画稿, location, x5 / 口袋)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),画稿,画稿,false), Span(5,6,List(1),我,我,false), Span(4,5,List(2),拿出,拿出-01,false), Span(2,3,List(3),口袋,口袋,false), Span(0,1,List(4),我,我,false)),Map(2 -> 拿出-01, 1 -> 我, 4 -> 我, 0 -> 画稿, 3 -> 口袋),Map(口 -> 口袋, 我 -> 我, 我2 -> 我, 拿 -> 拿出-01, 画 -> 画稿))),[Ljava.lang.String;@c2cf597,Annotation([Ljava.lang.String;@724bf25f,[Ljava.lang.String;@2abafa97,[Ljava.lang.String;@6f6cc7da),Annotation([Ljava.lang.String;@40717ed,[Ljava.lang.String;@29f3c438,[Ledu.cmu.lti.nlp.amr.Dependency;@5460edd3),Annotation([Ljava.lang.String;@5dbbb292,[Ljava.lang.String;@613f7eb7,[Ljava.lang.String;@565aa4ac),Annotation([Ljava.lang.String;@587c5c1,[Ljava.lang.String;@528c8c1,[Ledu.cmu.lti.nlp.amr.Entity;@1f78d415))
AMR:
(拿 / 拿出-01, prep-through, 我2 / 我)
(拿 / 拿出-01, snt3, 画 / 画稿)
(画 / 画稿, location, 口 / 口袋)
(画 / 画稿, poss, 我 / 我)

Decoded in 9,346 microseconds
Sentence: 小 王子 瞅见 了 ， 笑 着 说 ： “ 你 画 的 猴面包树 ， 有点 象 白菜 … ”

Spans:
Span 10-11:  你 => 你
Span 0-1:  小 => 小
Span 15-16:  有点 => 有点-01
Span 13-14:  猴面包树 => 猴面包树
Span 1-2:  王子 => 王子
Span 11-12:  画 => (thing :arg1-of 画-01)
Span 17-18:  白菜 => 白菜
Span 2-3:  瞅见 => 瞅见-01
Span 5-6:  笑 => 笑-01
Span 7-8:  说 => 说-02

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ！ ”

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@27960b1e,Annotation([Ljava.lang.String;@643ba1ed,[Ljava.lang.String;@3d3a1903,[Ljava.lang.String;@26582ca),Annotation([Ljava.lang.String;@153cb763,[Ljava.lang.String;@2c3158e0,[Ledu.cmu.lti.nlp.amr.Dependency;@412ebe64),Annotation([Ljava.lang.String;@6f731759,[Ljava.lang.String;@1f84327b,[Ljava.lang.String;@39549f33),Annotation([Ljava.lang.String;@dbddbe3,[Ljava.lang.String;@7a83ccd2,[Ledu.cmu.lti.nlp.amr.Entity;@44aa2e13))
AMR:


Decoded in 1,252 microseconds
Sentence: 我 还 为 我 画 的 猴面包树 感到 骄傲 呢 ！

Spans:
Span 7-8:  感到 => 感到-01
Span 3-4:  我 => 我
Span 0-1:  我 => 我
Span 6-7:  猴面包树 => 猴面包树
Span 4-5:  画 => (thing :arg1-of 画-01)
Span 1-2:  还 => 还
Span 8-9:  骄傲 => 骄傲

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 你 画 的 狐狸 … 它 那 双 耳朵 … 有点 象 犄角 … 而且 又 太 长 了 ！ ”

Spans:
Span 1-2:  你 => 你
Span 16-17:  又 => 又
Span 17-18:  太 => 太
Span 6-7:  它 => 它
Span 11-12:  有点 => 有点-01
Span 13-14:  犄角 => 犄角
Span 4-5:  狐狸 => 狐狸
Span 2-3:  画 => (thing :arg1-of 画-01)
Span 9-10:  耳朵 => 耳朵
Span 7-8:  那 => 那
Span 18-19:  长 => 长-04

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这时 ， 他 又 笑 了 。

Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(3,4,List(1),又,又,false), Span(2,3,List(2),他,他,false), Span(0,1,List(3),这时,这时,false)),Map(2 -> 他, 1 -> 又, 0 -> 笑-01, 3 -> 这时),Map(又 -> 又, 这 -> 这时, 笑 -> 笑-01, 他 -> 他))),[Ljava.lang.String;@5e1a986c,Annotation([Ljava.lang.String;@4b55ff0a,[Ljava.lang.String;@46a795de,[Ljava.lang.String;@256a0d95),Annotation([Ljava.lang.String;@2f3928ac,[Ljava.lang.String;@4bf03fee,[Ledu.cmu.lti.nlp.amr.Dependency;@31834a2b),Annotation([Ljava.lang.String;@44f0ff2b,[Ljava.lang.String;@22ead351,[Ljava.lang.String;@68af87ad),Annotation([Ljava.lang.String;@43d65a81,[Ljava.lang.String;@9cfc77,[Ledu.cmu.lti.nlp.amr.Entity;@7418d76e))
AMR:
(笑 / 笑-01, ARG6, 他 / 他)
(笑 / 笑-01, manner, 又 / 又)
(笑 / 笑-01, time, 这 / 这时)

Decoded in 6,404 microseconds
Sentence: “ 小家伙 ， 你 太 不 公正 了 。

Spans:
Span 5-6:  不 => 不
Span 3-4:  你 => 你
Span 6-7:  公正 => 公正-01
Span 4-5:  太 => 太

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  公正 => 公正-01
Oracle Span 4-5:  太 => 太

Extra span: 不 => 不
Extra span: 你 => 你
Dependencies:
1	“	_	PU	PU	_	7	punct	_	_
2	小家伙	_	NN	NN	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	你	_	PN	PN	_	7	nsubj	_	_
5	太	_	AD	AD	_	7	advmod	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	公正	_	VA	VA	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x8 / 公正-01, degree, x11 / 太)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),公正,公正-01,false), Span(5,6,List(1),不,不,false), Span(4,5,List(2),太,太,false), Span(3,4,List(3),你,你,false)),Map(2 -> 太, 1 -> 不, 0 -> 公正-01, 3 -> 你),Map(公 -> 公正-01, 你 -> 你, 太 -> 太, 不 -> 不))),[Ljava.lang.String;@601eb4af,Annotation([Ljava.lang.String;@11ede87f,[Ljava.lang.String;@7675c171,[Ljava.lang.String;@44e4cb76),Annotation([Ljava.lang.String;@51cab489,[Ljava.lang.String;@2f9a10df,[Ledu.cmu.lti.nlp.amr.Dependency;@773c2214),Annotation([Ljava.lang.String;@15e1f8fe,[Ljava.lang.String;@110b7837,[Ljava.lang.String;@6ee88e21),Annotation([Ljava.lang.String;@78d23d6a,[Ljava.lang.String;@626e0c86,[Ledu.cmu.lti.nlp.amr.Entity;@28ee0a3c))
AMR:
(不 / 不, poss, 你 / 你)
(公 / 公正-01, degree, 太 / 太)
(公 / 公正-01, manner, 不 / 不)

Decoded in 6,040 microseconds
Sentence: 我 说

Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),说,说-02,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-02),Map(我 -> 我, 说 -> 说-02))),[Ljava.lang.String;@2dd1086,Annotation([Ljava.lang.String;@6b8d54da,[Ljava.lang.String;@79957f11,[Ljava.lang.String;@217235f5),Annotation([Ljava.lang.String;@4b41587d,[Ljava.lang.String;@4aebee4b,[Ledu.cmu.lti.nlp.amr.Dependency;@18d47df0),Annotation([Ljava.lang.String;@28393e82,[Ljava.lang.String;@697a0948,[Ljava.lang.String;@7cf63b9a),Annotation([Ljava.lang.String;@4776e209,[Ljava.lang.String;@265a094b,[Ledu.cmu.lti.nlp.amr.Entity;@1f536481))
AMR:
(说 / 说-02, value, 我 / 我)

Decoded in 2,199 microseconds
Sentence: 我 过去 只 会 画 开着 肚皮 和 闭着 肚皮 的 巨蟒 。 ”

Spans:
Span 3-4:  会 => 会-03
Span 2-3:  只 => 只
Span 11-12:  巨蟒 => 巨蟒
Span 0-1:  我 => 我
Span 4-5:  画 => (thing :arg1-of 画-01)
Span 9-10:  肚皮 => 肚皮
Span 6-7:  肚皮 => 肚皮
Span 1-2:  过去 => 过去-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 啊 ！ 这 就 行 了 。 ” 他 说 ： “ 孩子们 认 得 出来 。 ”

Spans:
Span 9-10:  他 => 他
Span 16-17:  出来 => 出来
Span 1-2:  啊 => 啊
Span 13-14:  孩子们 => 孩子们
Span 4-5:  就 => 就-01
Span 15-16:  得 => 得-06
Span 5-6:  行 => 行-04
Span 14-15:  认 => 认-01
Span 10-11:  说 => 说-02
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 13-14:  孩子们 => 孩子们
Oracle Span 4-5:  就 => 就
Oracle Span 5-6:  行 => 行-04
Oracle Span 14-15:  认 => 认-01
Oracle Span 10-11:  说 => 说-01
Oracle Span 3-4:  这 => 这

Extra span: 出来 => 出来
Extra span: 得 => 得-06
Incorrect span: 说 => 说-02
Incorrect span: 就 => 就-01
Extra span: 啊 => 啊
Missing span: 说 => 说-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	啊	_	AD	AD	_	3	advmod	_	_
3	！	_	VV	VV	_	11	dep	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	行	_	VV	VV	_	3	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	3	punct	_	_
9	”	_	PU	PU	_	3	punct	_	_
10	他	_	PN	PN	_	11	nsubj	_	_
11	说	_	VV	VV	_	0	root	_	_
12	：	_	PU	PU	_	11	punct	_	_
13	“	_	PU	PU	_	11	punct	_	_
14	孩子们	_	NN	NN	_	17	nsubj	_	_
15	认	_	VV	VV	_	17	dep	_	_
16	得	_	DER	DER	_	17	dep	_	_
17	出来	_	VV	VV	_	11	ccomp	_	_
18	。	_	PU	PU	_	11	punct	_	_
19	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x16 / 说-01, arg0, x18 / 他)
(x20 / 行-04, arg0, x22 / 这)
(x20 / 行-04, manner, x21 / 就)
(x24 / 认-01, arg0, x25 / 孩子们)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),出来,出来,false), Span(15,16,List(1),得,得-06,false), Span(14,15,List(2),认,认-01,false), Span(13,14,List(3),孩子们,孩子们,false), Span(10,11,List(4),说,说-02,false), Span(9,10,List(5),他,他,false), Span(5,6,List(6),行,行-04,false), Span(4,5,List(7),就,就-01,false), Span(3,4,List(8),这,这,false), Span(1,2,List(9),啊,啊,false)),Map(2 -> 认-01, 5 -> 他, 8 -> 这, 7 -> 就-01, 1 -> 得-06, 4 -> 说-02, 6 -> 行-04, 9 -> 啊, 0 -> 出来, 3 -> 孩子们),Map(孩 -> 孩子们, 啊 -> 啊, 就 -> 就-01, 这 -> 这, 得 -> 得-06, 他 -> 他, 认 -> 认-01, 出 -> 出来, 说 -> 说-02, 行 -> 行-04))),[Ljava.lang.String;@22a260ff,Annotation([Ljava.lang.String;@54c425b1,[Ljava.lang.String;@50b734c4,[Ljava.lang.String;@2744dcae),Annotation([Ljava.lang.String;@16d0e521,[Ljava.lang.String;@634ca3e7,[Ledu.cmu.lti.nlp.amr.Dependency;@ab4aa5e),Annotation([Ljava.lang.String;@b14b60a,[Ljava.lang.String;@1a7cb3a4,[Ljava.lang.String;@1c297897),Annotation([Ljava.lang.String;@33e0c716,[Ljava.lang.String;@1d6a8386,[Ledu.cmu.lti.nlp.amr.Entity;@6274f21c))
AMR:
(就 / 就-01, mod, 这 / 这)
(得 / 得-06, degree, 认 / 认-01)
(得 / 得-06, location, 出 / 出来)
(行 / 行-04, manner, 就 / 就-01)
(行 / 行-04, topic, 啊 / 啊)
(认 / 认-01, direction, 孩 / 孩子们)
(说 / 说-02, degree, 行 / 行-04)
(说 / 说-02, direction, 他 / 他)
(说 / 说-02, purpose, 认 / 认-01)

Decoded in 37,073 microseconds
Sentence: 我 就 用 铅笔 勾画 了 一 个 嘴套 。

Spans:
Span 4-5:  勾画 => 勾画-01
Span 8-9:  嘴套 => 嘴套
Span 1-2:  就 => 就-01
Span 0-1:  我 => 我
Span 2-3:  用 => 用
Span 3-4:  铅笔 => 铅笔

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  勾画 => 勾画-01
Oracle Span 8-9:  嘴套 => 嘴套
Oracle Span 1-2:  就 => 就
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  用 => 用-01
Oracle Span 3-4:  铅笔 => 铅笔

Incorrect span: 用 => 用
Incorrect span: 就 => 就-01
Missing span: 用 => 用-01
Missing span: 就 => 就
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	就	_	AD	AD	_	5	advmod	_	_
3	用	_	P	P	_	5	prep	_	_
4	铅笔	_	NN	NN	_	3	pobj	_	_
5	勾画	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	个	_	M	M	_	9	clf	_	_
9	嘴套	_	NN	NN	_	5	dobj	_	_
10	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 用-01, arg0, x2 / 我)
(x0 / 用-01, arg1, x4 / 铅笔)
(x0 / 用-01, arg2, x5 / 勾画-01)
(x0 / 用-01, manner, x3 / 就)
(x5 / 勾画-01, arg1, x7 / 嘴套)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),嘴套,嘴套,false), Span(4,5,List(1),勾画,勾画-01,false), Span(3,4,List(2),铅笔,铅笔,false), Span(2,3,List(3),用,用,false), Span(1,2,List(4),就,就-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 铅笔, 5 -> 我, 1 -> 勾画-01, 4 -> 就-01, 0 -> 嘴套, 3 -> 用),Map(就 -> 就-01, 用 -> 用, 我 -> 我, 勾 -> 勾画-01, 嘴 -> 嘴套, 铅 -> 铅笔))),[Ljava.lang.String;@35cec305,Annotation([Ljava.lang.String;@237add,[Ljava.lang.String;@491cafec,[Ljava.lang.String;@cbd40c1),Annotation([Ljava.lang.String;@4fa86cb8,[Ljava.lang.String;@54c60202,[Ledu.cmu.lti.nlp.amr.Dependency;@7889b4b9),Annotation([Ljava.lang.String;@1e545821,[Ljava.lang.String;@12952aff,[Ljava.lang.String;@76a7fcbd),Annotation([Ljava.lang.String;@433ea2ac,[Ljava.lang.String;@7f977fba,[Ledu.cmu.lti.nlp.amr.Entity;@446e7065))
AMR:
(勾 / 勾画-01, prep-for, 嘴 / 嘴套)
(用 / 用, manner, 就 / 就-01)
(用 / 用, mod, 我 / 我)
(用 / 用, prep-by, 勾 / 勾画-01)
(用 / 用, quant, 铅 / 铅笔)

Decoded in 13,651 microseconds
Sentence: 当 我 把 它 递给 小 王子 时 ， 我 心里 很 难受 ：

Spans:
Span 3-4:  它 => 它
Span 5-6:  小 => 小
Span 0-1:  当 => 当-04
Span 11-12:  很 => 很
Span 10-11:  心里 => 心里
Span 9-10:  我 => 我
Span 1-2:  我 => 我
Span 6-7:  王子 => 王子
Span 4-5:  递给 => 递给-01
Span 12-13:  难受 => 难受-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  它 => 它
Oracle Span 5-6:  小 => 小-01
Oracle Span 11-12:  很 => 很
Oracle Span 10-11:  心里 => 心里
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  王子 => 王子
Oracle Span 4-5:  递给 => 递给-01
Oracle Span 12-13:  难受 => 难受-01

Extra span: 我 => 我
Incorrect span: 小 => 小
Extra span: 当 => 当-04
Missing span: 小 => 小-01
Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	它	_	PN	PN	_	5	nsubj	_	_
5	递给	_	VV	VV	_	8	lccomp	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	5	dobj	_	_
8	时	_	LC	LC	_	1	plmod	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	心里	_	NN	NN	_	13	nsubj	_	_
12	很	_	AD	AD	_	13	advmod	_	_
13	难受	_	VV	VV	_	0	root	_	_
14	：	_	PU	PU	_	13	punct	_	_

Oracle:
(x13 / 王子, mod, x14 / 小-01)
(x15 / 心里, poss, x16 / 我)
(x2 / 难受-01, arg0, x15 / 心里)
(x2 / 难受-01, degree, x7 / 很)
(x2 / 难受-01, time, x8 / 递给-01)
(x8 / 递给-01, arg1, x12 / 它)
(x8 / 递给-01, arg2, x13 / 王子)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),难受,难受-01,false), Span(11,12,List(1),很,很,false), Span(10,11,List(2),心里,心里,false), Span(9,10,List(3),我,我,false), Span(6,7,List(4),王子,王子,false), Span(5,6,List(5),小,小,false), Span(4,5,List(6),递给,递给-01,false), Span(3,4,List(7),它,它,false), Span(1,2,List(8),我,我,false), Span(0,1,List(9),当,当-04,false)),Map(2 -> 心里, 5 -> 小, 8 -> 我, 7 -> 它, 1 -> 很, 4 -> 王子, 6 -> 递给-01, 9 -> 当-04, 0 -> 难受-01, 3 -> 我),Map(我 -> 我, 难 -> 难受-01, 我2 -> 我, 递 -> 递给-01, 王 -> 王子, 很 -> 很, 它 -> 它, 心 -> 心里, 小 -> 小, 当 -> 当-04))),[Ljava.lang.String;@d653e41,Annotation([Ljava.lang.String;@3b78c683,[Ljava.lang.String;@7f5614f9,[Ljava.lang.String;@480cbe2e),Annotation([Ljava.lang.String;@6c3f1658,[Ljava.lang.String;@110e9982,[Ledu.cmu.lti.nlp.amr.Dependency;@5eb0a686),Annotation([Ljava.lang.String;@73608eb0,[Ljava.lang.String;@67f9cb52,[Ljava.lang.String;@2de9ca6),Annotation([Ljava.lang.String;@59018eed,[Ljava.lang.String;@2ee39e73,[Ledu.cmu.lti.nlp.amr.Entity;@76973a6))
AMR:
(小 / 小, time, 递 / 递给-01)
(当 / 当-04, manner, 我2 / 我)
(心 / 心里, poss, 我 / 我)
(王 / 王子, mod, 小 / 小)
(递 / 递给-01, time, 它 / 它)
(递 / 递给-01, time, 当 / 当-04)
(难 / 难受-01, degree, 很 / 很)
(难 / 难受-01, degree, 心 / 心里)
(难 / 难受-01, time, 递 / 递给-01)

Decoded in 27,735 microseconds
Sentence: “ 你 的 打算 ， 我 一点 也 不 知道 … ”

Spans:
Span 6-7:  一点 => 一点
Span 8-9:  不 => 不
Span 7-8:  也 => 也
Span 1-2:  你 => 你
Span 5-6:  我 => 我
Span 3-4:  打算 => 打算-01
Span 9-10:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一点 => 一点
Oracle Span 7-8:  也 => 也
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  打算 => 打算-01
Oracle Span 9-10:  知道 => 知道-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	打算	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	我	_	PN	PN	_	10	nsubj	_	_
7	一点	_	AD	AD	_	10	advmod	_	_
8	也	_	AD	AD	_	10	advmod	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	知道	_	VV	VV	_	4	ccomp	_	_
11	…	_	NN	NN	_	10	dobj	_	_
12	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 知道-01, arg0, x13 / 我)
(x11 / 知道-01, arg1, x14 / 打算-01)
(x11 / 知道-01, degree, x15 / 一点)
(x11 / 知道-01, manner, x16 / 也)
(x14 / 打算-01, arg0, x17 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),知道,知道-01,false), Span(8,9,List(1),不,不,false), Span(7,8,List(2),也,也,false), Span(6,7,List(3),一点,一点,false), Span(5,6,List(4),我,我,false), Span(3,4,List(5),打算,打算-01,false), Span(1,2,List(6),你,你,false)),Map(2 -> 也, 5 -> 打算-01, 1 -> 不, 4 -> 我, 6 -> 你, 0 -> 知道-01, 3 -> 一点),Map(我 -> 我, 也 -> 也, 打 -> 打算-01, 你 -> 你, 不 -> 不, 知 -> 知道-01, 一 -> 一点))),[Ljava.lang.String;@71a4f441,Annotation([Ljava.lang.String;@24876a7e,[Ljava.lang.String;@1625789b,[Ljava.lang.String;@5a1dddba),Annotation([Ljava.lang.String;@c4d2c44,[Ljava.lang.String;@13866329,[Ledu.cmu.lti.nlp.amr.Dependency;@2eda2062),Annotation([Ljava.lang.String;@1a9ec80e,[Ljava.lang.String;@7fd4e815,[Ljava.lang.String;@5f6b53ed),Annotation([Ljava.lang.String;@20cdb152,[Ljava.lang.String;@4cffd3fd,[Ledu.cmu.lti.nlp.amr.Entity;@14b31e37))
AMR:
(一 / 一点, location, 不 / 不)
(不 / 不, manner, 也 / 也)
(不 / 不, mod, 打 / 打算-01)
(你 / 你, location, 打 / 打算-01)
(我 / 我, location, 打 / 打算-01)
(知 / 知道-01, time, 不 / 不)

Decoded in 16,257 microseconds
Sentence: 我 说

Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),说,说-02,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-02),Map(我 -> 我, 说 -> 说-02))),[Ljava.lang.String;@1142d377,Annotation([Ljava.lang.String;@5c48b72c,[Ljava.lang.String;@6e1ae763,[Ljava.lang.String;@62d40e31),Annotation([Ljava.lang.String;@650aa077,[Ljava.lang.String;@7ce29a2d,[Ledu.cmu.lti.nlp.amr.Dependency;@457a5b2d),Annotation([Ljava.lang.String;@79d7035,[Ljava.lang.String;@372461a9,[Ljava.lang.String;@5fffb692),Annotation([Ljava.lang.String;@48cb2d73,[Ljava.lang.String;@243bf087,[Ledu.cmu.lti.nlp.amr.Entity;@3086f480))
AMR:
(说 / 说-02, value, 我 / 我)

Decoded in 2,241 microseconds
Sentence: 但是 ， 他 不 回答 我 ，

Spans:
Span 3-4:  不 => 不
Span 2-3:  他 => 他
Span 4-5:  回答 => 回答-01
Span 5-6:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 5-6:  我 => 我

Extra span: 不 => 不
Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	不	_	NN	NN	_	5	nsubj	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	我	_	PN	PN	_	5	dep	_	_
7	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x5 / 他)
(x2 / 回答-01, arg3, x6 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),我,我,false), Span(4,5,List(1),回答,回答-01,false), Span(3,4,List(2),不,不,false), Span(2,3,List(3),他,他,false)),Map(2 -> 不, 1 -> 回答-01, 0 -> 我, 3 -> 他),Map(我 -> 我, 他 -> 他, 不 -> 不, 回 -> 回答-01))),[Ljava.lang.String;@126f8f24,Annotation([Ljava.lang.String;@35e98af,[Ljava.lang.String;@781aff8b,[Ljava.lang.String;@7fbf26fc),Annotation([Ljava.lang.String;@11c78080,[Ljava.lang.String;@662be9f7,[Ledu.cmu.lti.nlp.amr.Dependency;@4962b41e),Annotation([Ljava.lang.String;@4fecf308,[Ljava.lang.String;@6282b9f5,[Ljava.lang.String;@5b5f9003),Annotation([Ljava.lang.String;@7c11d32,[Ljava.lang.String;@2f9dda71,[Ledu.cmu.lti.nlp.amr.Entity;@58278366))
AMR:
(不 / 不, mod, 他 / 他)
(回 / 回答-01, ARG3, 我 / 我)
(回 / 回答-01, degree, 他 / 他)

Decoded in 6,383 microseconds
Sentence: 他 对 我 说 ： “ 你 知道 ， 我 落 在 地球 上 …

Spans:
Span 0-1:  他 => 他
Span 6-7:  你 => 你
Span 11-12:  在 => 在-01
Span 12-13:  地球 => 地球
Span 1-2:  对 => 对-02
Span 9-10:  我 => 我
Span 2-3:  我 => 我
Span 7-8:  知道 => 知道-01
Span 10-11:  落 => 落-02
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 12-13:  地球 => 地球
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  我 => 我
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 3-4:  说 => 说-01

Extra span: 在 => 在-01
Extra span: 落 => 落-02
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	知道	_	VV	VV	_	4	ccomp	_	_
9	,	_	PU	PU	_	8	punct	_	_
10	我	_	PN	PN	_	15	nsubj	_	_
11	落	_	AD	AD	_	15	advmod	_	_
12	在	_	P	P	_	15	prep	_	_
13	地球	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	12	plmod	_	_
15	…	_	VV	VV	_	8	ccomp	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg1, x6 / 知道-01)
(x0 / 说-01, arg3, x3 / 我)
(x6 / 知道-01, arg0, x7 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),地球,地球,false), Span(11,12,List(1),在,在-01,false), Span(10,11,List(2),落,落-02,false), Span(9,10,List(3),我,我,false), Span(7,8,List(4),知道,知道-01,false), Span(6,7,List(5),你,你,false), Span(3,4,List(6),说,说-02,false), Span(2,3,List(7),我,我,false), Span(1,2,List(8),对,对-02,false), Span(0,1,List(9),他,他,false)),Map(2 -> 落-02, 5 -> 你, 8 -> 对-02, 7 -> 我, 1 -> 在-01, 4 -> 知道-01, 6 -> 说-02, 9 -> 他, 0 -> 地球, 3 -> 我),Map(落 -> 落-02, 在 -> 在-01, 我 -> 我, 我2 -> 我, 你 -> 你, 他 -> 他, 地 -> 地球, 说 -> 说-02, 知 -> 知道-01, 对 -> 对-02))),[Ljava.lang.String;@7f5fcfe9,Annotation([Ljava.lang.String;@707865bd,[Ljava.lang.String;@31f77791,[Ljava.lang.String;@552fee7a),Annotation([Ljava.lang.String;@548e43b1,[Ljava.lang.String;@67688110,[Ledu.cmu.lti.nlp.amr.Dependency;@6d293993),Annotation([Ljava.lang.String;@475f5672,[Ljava.lang.String;@616a06e3,[Ljava.lang.String;@42297bdf),Annotation([Ljava.lang.String;@66e827a8,[Ljava.lang.String;@5bb911c1,[Ledu.cmu.lti.nlp.amr.Entity;@6a55594b))
AMR:
(在 / 在-01, manner, 落 / 落-02)
(地 / 地球, mod, 在 / 在-01)
(对 / 对-02, prep-following, 他 / 他)
(知 / 知道-01, quant, 你 / 你)
(知 / 知道-01, subevent, 落 / 落-02)
(落 / 落-02, manner, 我 / 我)
(说 / 说-02, location, 落 / 落-02)
(说 / 说-02, prep-following, 对 / 对-02)
(说 / 说-02, prep-following, 我2 / 我)

Decoded in 26,533 microseconds
Sentence: 到 明天 就 一 周年 了 … ”

Spans:
Span 0-1:  到 => 到-01
Span 4-5:  周年 => 周年
Span 2-3:  就 => 就-01
Span 1-2:  明天 => 明天

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  到 => 到-01
Oracle Span 4-5:  周年 => 周年
Oracle Span 2-3:  就 => 就
Oracle Span 1-2:  明天 => 明天

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	到	_	P	P	_	5	prep	_	_
2	明天	_	NT	NT	_	1	pobj	_	_
3	就	_	P	P	_	5	prep	_	_
4	一	_	NT	NT	_	3	pobj	_	_
5	周年	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	…	_	NN	NN	_	5	dobj	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x13 / 周年, domain, x15 / 到-01)
(x13 / 周年, manner, x17 / 就)
(x15 / 到-01, arg1, x16 / 明天)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),周年,周年,false), Span(2,3,List(1),就,就-01,false), Span(1,2,List(2),明天,明天,false), Span(0,1,List(3),到,到-01,false)),Map(2 -> 明天, 1 -> 就-01, 0 -> 周年, 3 -> 到-01),Map(就 -> 就-01, 到 -> 到-01, 周 -> 周年, 明 -> 明天))),[Ljava.lang.String;@632b305d,Annotation([Ljava.lang.String;@44598ef7,[Ljava.lang.String;@57fdb8a4,[Ljava.lang.String;@17222c11),Annotation([Ljava.lang.String;@2db15f70,[Ljava.lang.String;@25974207,[Ledu.cmu.lti.nlp.amr.Dependency;@1f15e689),Annotation([Ljava.lang.String;@195113de,[Ljava.lang.String;@3ebc955b,[Ljava.lang.String;@21a46ff1),Annotation([Ljava.lang.String;@11b5f4e2,[Ljava.lang.String;@6bcae9,[Ledu.cmu.lti.nlp.amr.Entity;@5aa781f2))
AMR:
(到 / 到-01, degree, 明 / 明天)
(周 / 周年, domain, 到 / 到-01)
(就 / 就-01, degree, 明 / 明天)

Decoded in 6,065 microseconds
Sentence: 接着 ， 沉默 了 一会儿 ， 他 又 说道 ： “ 我 就 落 在 这 附近 … ”

Spans:
Span 4-5:  一会儿 => 一会儿
Span 6-7:  他 => 他
Span 7-8:  又 => 又
Span 14-15:  在 => 在-01
Span 12-13:  就 => 就-01
Span 11-12:  我 => 我
Span 0-1:  接着 => 接着-01
Span 2-3:  沉默 => 沉默-01
Span 13-14:  落 => 落-02
Span 8-9:  说道 => 说道
Span 15-16:  这 => 这
Span 16-17:  附近 => 附近

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会儿 => 一会儿
Oracle Span 6-7:  他 => 他
Oracle Span 7-8:  又 => 又
Oracle Span 12-13:  就 => 就
Oracle Span 2-3:  沉默 => 沉默-01
Oracle Span 8-9:  说道 => 说道-01
Oracle Span 15-16:  这 => 这
Oracle Span 16-17:  附近 => 附近-01

Incorrect span: 附近 => 附近
Extra span: 在 => 在-01
Extra span: 落 => 落-02
Incorrect span: 就 => 就-01
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 接着 => 接着-01
Missing span: 说道 => 说道-01
Missing span: 附近 => 附近-01
Missing span: 就 => 就
Dependencies:
1	接着	_	NR	NR	_	3	nsubj	_	_
2	,	_	PU	PU	_	3	punct	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一会儿	_	CD	CD	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	他	_	PN	PN	_	9	nsubj	_	_
8	又	_	AD	AD	_	9	advmod	_	_
9	说道	_	VV	VV	_	3	conj	_	_
10	：	_	PU	PU	_	9	punct	_	_
11	“	_	PU	PU	_	14	punct	_	_
12	我	_	PN	PN	_	14	nsubj	_	_
13	就	_	AD	AD	_	14	advmod	_	_
14	落	_	VV	VV	_	9	ccomp	_	_
15	在	_	P	P	_	18	prep	_	_
16	这	_	DT	DT	_	17	det	_	_
17	附近	_	NN	NN	_	15	pobj	_	_
18	…	_	NN	NN	_	14	dobj	_	_
19	”	_	PU	PU	_	14	punct	_	_

Oracle:
(x10 / 附近-01, arg0, x11 / 这)
(x2 / 沉默-01, arg0, x3 / 他)
(x2 / 沉默-01, duration, x4 / 一会儿)
(x5 / 说道-01, manner, x7 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),附近,附近,false), Span(15,16,List(1),这,这,false), Span(14,15,List(2),在,在-01,false), Span(13,14,List(3),落,落-02,false), Span(12,13,List(4),就,就-01,false), Span(11,12,List(5),我,我,false), Span(8,9,List(6),说道,说道,false), Span(7,8,List(7),又,又,false), Span(6,7,List(8),他,他,false), Span(4,5,List(9),一会儿,一会儿,false), Span(2,3,List(10),沉默,沉默-01,false), Span(0,1,List(11),接着,接着-01,false)),Map(2 -> 在-01, 5 -> 我, 8 -> 他, 7 -> 又, 1 -> 这, 11 -> 接着-01, 4 -> 就-01, 6 -> 说道, 9 -> 一会儿, 0 -> 附近, 10 -> 沉默-01, 3 -> 落-02),Map(落 -> 落-02, 又 -> 又, 就 -> 就-01, 沉 -> 沉默-01, 在 -> 在-01, 接 -> 接着-01, 我 -> 我, 这 -> 这, 他 -> 他, 说 -> 说道, 一 -> 一会儿, 附 -> 附近))),[Ljava.lang.String;@58feb6b0,Annotation([Ljava.lang.String;@66d25ba9,[Ljava.lang.String;@3830f918,[Ljava.lang.String;@5efe47fd),Annotation([Ljava.lang.String;@739831a4,[Ljava.lang.String;@7e3236d,[Ledu.cmu.lti.nlp.amr.Dependency;@38a4e2b0),Annotation([Ljava.lang.String;@14c99bf6,[Ljava.lang.String;@266e9dda,[Ljava.lang.String;@38883a31),Annotation([Ljava.lang.String;@27a6fef2,[Ljava.lang.String;@7fe8c7db,[Ledu.cmu.lti.nlp.amr.Entity;@2dba05b1))
AMR:
(在 / 在-01, day, 这 / 这)
(就 / 就-01, day, 落 / 落-02)
(沉 / 沉默-01, duration, 一 / 一会儿)
(沉 / 沉默-01, duration, 说 / 说道)
(沉 / 沉默-01, prep-on-behalf, 接 / 接着-01)
(落 / 落-02, day, 在 / 在-01)
(落 / 落-02, prep-on-behalf, 我 / 我)
(说 / 说道, manner, 又 / 又)
(说 / 说道, prep-on-behalf, 他 / 他)
(说 / 说道, prep-within, 落 / 落-02)
(附 / 附近, prep-on-behalf, 在 / 在-01)

Decoded in 40,772 microseconds
Sentence: 此时 ， 他 的 面颊 绯红 。

Spans:
Span 2-3:  他 => 他
Span 0-1:  此时 => 此时
Span 5-6:  绯红 => 绯红
Span 4-5:  面颊 => 面颊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  此时 => 此时
Oracle Span 5-6:  绯红 => 绯红
Oracle Span 4-5:  面颊 => 面颊

Dependencies:
1	此时	_	NT	NT	_	6	tmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	面颊	_	NN	NN	_	6	nsubj	_	_
6	绯红	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 绯红, arg0, x2 / 面颊)
(x0 / 绯红, time, x4 / 此时)
(x3 / 他, part, x2 / 面颊)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),绯红,绯红,false), Span(4,5,List(1),面颊,面颊,false), Span(2,3,List(2),他,他,false), Span(0,1,List(3),此时,此时,false)),Map(2 -> 他, 1 -> 面颊, 0 -> 绯红, 3 -> 此时),Map(此 -> 此时, 绯 -> 绯红, 面 -> 面颊, 他 -> 他))),[Ljava.lang.String;@541afb85,Annotation([Ljava.lang.String;@445bce9a,[Ljava.lang.String;@7db40fd5,[Ljava.lang.String;@5e1a5f),Annotation([Ljava.lang.String;@31b0f02,[Ljava.lang.String;@19ae2ee5,[Ledu.cmu.lti.nlp.amr.Dependency;@44b940a2),Annotation([Ljava.lang.String;@34c53688,[Ljava.lang.String;@6ffd4c0d,[Ljava.lang.String;@74c9e11),Annotation([Ljava.lang.String;@9fe720a,[Ljava.lang.String;@149274cb,[Ledu.cmu.lti.nlp.amr.Entity;@118acf70))
AMR:
(他 / 他, part, 面 / 面颊)
(绯 / 绯红, mod, 面 / 面颊)
(绯 / 绯红, time, 此 / 此时)

Decoded in 6,469 microseconds
Sentence: 我 不 知 为什么 ， 又 感到 一 阵 莫名其妙 的 心酸 。

Spans:
Span 1-2:  不 => 不
Span 5-6:  又 => 又
Span 11-12:  心酸 => 心酸-01
Span 6-7:  感到 => 感到-01
Span 0-1:  我 => 我
Span 2-3:  知 => 知-01
Span 9-10:  莫名其妙 => 莫名其妙-01
Span 8-9:  阵 => 阵

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  又 => 又
Oracle Span 11-12:  心酸 => 心酸-01
Oracle Span 6-7:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  知 => 知-01
Oracle Span 9-10:  莫名其妙 => 莫名其妙-01
Oracle Span 8-9:  阵 => 阵

Extra span: 不 => 不
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	知	_	VV	VV	_	0	root	_	_
4	为什么	_	AD	AD	_	7	advmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	感到	_	VV	VV	_	3	ccomp	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	阵	_	NN	NN	_	10	nn	_	_
10	莫名其妙	_	NN	NN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	心酸	_	NN	NN	_	7	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_
14	我	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x12 / 知-01, arg0, x15 / 我)
(x12 / 知-01, arg1, x16 / 感到-01)
(x16 / 感到-01, arg1, x19 / 心酸-01)
(x16 / 感到-01, manner, x18 / 又)
(x19 / 心酸-01, mod, x20 / 莫名其妙-01)
(x19 / 心酸-01, unit, x26 / 阵)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),心酸,心酸-01,false), Span(9,10,List(1),莫名其妙,莫名其妙-01,false), Span(8,9,List(2),阵,阵,false), Span(6,7,List(3),感到,感到-01,false), Span(5,6,List(4),又,又,false), Span(2,3,List(5),知,知-01,false), Span(1,2,List(6),不,不,false), Span(0,1,List(7),我,我,false)),Map(2 -> 阵, 5 -> 知-01, 7 -> 我, 1 -> 莫名其妙-01, 4 -> 又, 6 -> 不, 0 -> 心酸-01, 3 -> 感到-01),Map(又 -> 又, 我 -> 我, 感 -> 感到-01, 心 -> 心酸-01, 不 -> 不, 知 -> 知-01, 阵 -> 阵, 莫 -> 莫名其妙-01))),[Ljava.lang.String;@72557746,Annotation([Ljava.lang.String;@8c12524,[Ljava.lang.String;@f723cdb,[Ljava.lang.String;@4844930a),Annotation([Ljava.lang.String;@11f23203,[Ljava.lang.String;@101bdd1c,[Ledu.cmu.lti.nlp.amr.Dependency;@e91af20),Annotation([Ljava.lang.String;@6221b13b,[Ljava.lang.String;@62c3f556,[Ljava.lang.String;@2cfe272f),Annotation([Ljava.lang.String;@2f95653f,[Ljava.lang.String;@4052b19f,[Ledu.cmu.lti.nlp.amr.Entity;@3dc68586))
AMR:
(不 / 不, poss, 我 / 我)
(心 / 心酸-01, mod, 莫 / 莫名其妙-01)
(心 / 心酸-01, unit, 阵 / 阵)
(感 / 感到-01, manner, 又 / 又)
(感 / 感到-01, prep-along-with, 阵 / 阵)
(知 / 知-01, manner, 不 / 不)
(知 / 知-01, mode, 感 / 感到-01)

Decoded in 21,758 microseconds
Sentence: 这时 ， 我 产生 了 一 个 问题 ： “ 一 星期 以前 ， 我 认识 你 的 那 天 早上 ， 你 单独 一 个 人 在 这 旷无人烟 的 地方 走 着 ； 这么 说 ， 这 并不 是 偶然 的 了 ？

Spans:
Span 34-35:  ; => and
Span 3-4:  产生 => 产生-02
Span 26-27:  人 => 人
Span 12-13:  以前 => 以前
Span 22-23:  你 => 你
Span 16-17:  你 => 你
Span 41-42:  偶然 => 偶然
Span 23-24:  单独 => 单独
Span 27-28:  在 => 在-01
Span 31-32:  地方 => 地方
Span 19-20:  天 => (temporal-quantity :unit 天)
Span 14-15:  我 => 我
Span 2-3:  我 => 我
Span 20-21:  早上 => 早上
Span 29-30:  旷无人烟 => 旷无人烟
Span 11-12:  星期 => (temporal-quantity :unit 星期)
Span 40-41:  是 => 是-04
Span 15-16:  认识 => 认识-01
Span 36-37:  说 => 说-02
Span 32-33:  走 => 走-05
Span 38-39:  这 => 这
Span 28-29:  这 => 这
Span 35-36:  这么 => 这么
Span 0-1:  这时 => 这时
Span 18-19:  那 => 那
Span 7-8:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  产生 => 产生-02
Oracle Span 26-27:  人 => 人
Oracle Span 12-13:  以前 => 以前
Oracle Span 16-17:  你 => 你
Oracle Span 41-42:  偶然 => 偶然
Oracle Span 23-24:  单独 => 单独
Oracle Span 31-32:  地方 => 地方
Oracle Span 2-3:  我 => 我
Oracle Span 20-21:  早上 => 早上
Oracle Span 29-30:  旷无人烟 => 旷无人烟
Oracle Span 11-12:  星期 => (temporal-quantity :unit 星期)
Oracle Span 15-16:  认识 => 认识-01
Oracle Span 32-33:  走 => 走-01
Oracle Span 28-29:  这 => 这
Oracle Span 38-39:  这 => 这
Oracle Span 0-1:  这时 => 这时
Oracle Span 7-8:  问题 => 问题

Extra span: 是 => 是-04
Extra span: 说 => 说-02
Extra span: 这么 => 这么
Extra span: ; => and
Incorrect span: 走 => 走-05
Extra span: 在 => 在-01
Extra span: 你 => 你
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 那 => 那
Extra span: 我 => 我
Missing span: 走 => 走-01
Dependencies:
1	这时	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	产生	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	一	_	CD	CD	_	7	nummod	_	_
7	个	_	M	M	_	8	clf	_	_
8	问题	_	NN	NN	_	4	dobj	_	_
9	：	_	PU	PU	_	4	punct	_	_
10	“	_	PU	PU	_	16	punct	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	星期	_	NN	NN	_	13	lobj	_	_
13	以前	_	LC	LC	_	16	dep	_	_
14	,	_	PU	PU	_	16	punct	_	_
15	我	_	PN	PN	_	16	nsubj	_	_
16	认识	_	VV	VV	_	4	conj	_	_
17	你	_	PN	PN	_	32	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	那	_	DT	DT	_	32	det	_	_
20	天	_	M	M	_	19	clf	_	_
21	早上	_	NT	NT	_	30	dep	_	_
22	,	_	PU	PU	_	30	punct	_	_
23	你	_	PN	PN	_	30	nsubj	_	_
24	单独	_	AD	AD	_	30	advmod	_	_
25	一	_	CD	CD	_	26	nummod	_	_
26	个	_	M	M	_	27	clf	_	_
27	人	_	NN	NN	_	30	dobj	_	_
28	在	_	P	P	_	30	prep	_	_
29	这	_	PN	PN	_	28	pobj	_	_
30	旷无人烟	_	VV	VV	_	32	rcmod	_	_
31	的	_	DEC	DEC	_	30	cpm	_	_
32	地方	_	NN	NN	_	16	dobj	_	_
33	走	_	VV	VV	_	16	conj	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	；	_	PU	PU	_	4	punct	_	_
36	这么	_	AD	AD	_	37	advmod	_	_
37	说	_	VV	VV	_	4	conj	_	_
38	,	_	PU	PU	_	37	punct	_	_
39	这	_	DT	DT	_	40	det	_	_
40	并不	_	NN	NN	_	41	top	_	_
41	是	_	VC	VC	_	37	ccomp	_	_
42	偶然	_	VA	VA	_	41	attr	_	_
43	的	_	DEC	DEC	_	42	cpm	_	_
44	了	_	SP	SP	_	41	dep	_	_
45	？	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 产生-02, arg0, x2 / 我)
(x0 / 产生-02, arg1, x3 / 问题)
(x0 / 产生-02, time, x5 / 这时)
(x15 / 走-01, arg0, x16 / 你)
(x15 / 走-01, location, x21 / 地方)
(x15 / 走-01, manner, x17 / 单独)
(x15 / 走-01, manner, x18 / 人)
(x15 / 走-01, time, x24 / 早上)
(x15 / 走-01, time, x30 / 以前)
(x21 / 地方, mod, x22 / 这)
(x21 / 地方, mod, x23 / 旷无人烟)
(x26 / 认识-01, time, x24 / 早上)
(x30 / 以前, quant, x34 / temporal-quantity)
(x34 / temporal-quantity, unit, x42 / 星期)
(x38 / 偶然, domain, x40 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(41,42,List(0),偶然,偶然,false), Span(40,41,List(1),是,是-04,false), Span(38,39,List(2),这,这,false), Span(36,37,List(3),说,说-02,false), Span(35,36,List(4),这么,这么,false), Span(34,35,List(5),;,and,false), Span(32,33,List(6),走,走-05,false), Span(31,32,List(7),地方,地方,false), Span(29,30,List(8),旷无人烟,旷无人烟,false), Span(28,29,List(9),这,这,false), Span(27,28,List(10),在,在-01,false), Span(26,27,List(11),人,人,false), Span(23,24,List(12),单独,单独,false), Span(22,23,List(13),你,你,false), Span(20,21,List(14),早上,早上,false), Span(19,20,List(16, 15),天,(temporal-quantity :unit 天),false), Span(18,19,List(17),那,那,false), Span(16,17,List(18),你,你,false), Span(15,16,List(19),认识,认识-01,false), Span(14,15,List(20),我,我,false), Span(12,13,List(21),以前,以前,false), Span(11,12,List(23, 22),星期,(temporal-quantity :unit 星期),false), Span(7,8,List(24),问题,问题,false), Span(3,4,List(25),产生,产生-02,false), Span(2,3,List(26),我,我,false), Span(0,1,List(27),这时,这时,false)),Map(2 -> 这, 5 -> and, 27 -> 这时, 12 -> 单独, 8 -> 旷无人烟, 15 -> temporal-quantity, 21 -> 以前, 18 -> 你, 24 -> 问题, 7 -> 地方, 1 -> 是-04, 17 -> 那, 23 -> 星期, 26 -> 我, 4 -> 这么, 11 -> 人, 14 -> 早上, 20 -> 我, 6 -> 走-05, 9 -> 这, 0 -> 偶然, 22 -> temporal-quantity, 16 -> 天, 19 -> 认识-01, 10 -> 在-01, 3 -> 说-02, 25 -> 产生-02, 13 -> 你),Map(星 -> 星期, 在 -> 在-01, 早 -> 早上, t -> temporal-quantity, 产 -> 产生-02, 我 -> 我, 这 -> 这, 这3 -> 这, 偶 -> 偶然, 我2 -> 我, 你 -> 你, 以 -> 以前, 认 -> 认识-01, 旷 -> 旷无人烟, a -> and, 单 -> 单独, 地 -> 地方, 天 -> 天, 说 -> 说-02, 这2 -> 这么, 你2 -> 你, t2 -> temporal-quantity, 走 -> 走-05, 那 -> 那, 问 -> 问题, 人 -> 人, 是 -> 是-04, 这4 -> 这时))),[Ljava.lang.String;@60dc1a4e,Annotation([Ljava.lang.String;@646427f7,[Ljava.lang.String;@31efacad,[Ljava.lang.String;@380ce5a3),Annotation([Ljava.lang.String;@38029686,[Ljava.lang.String;@7d9c45ee,[Ledu.cmu.lti.nlp.amr.Dependency;@31da0434),Annotation([Ljava.lang.String;@6e24ce51,[Ljava.lang.String;@423ed3b5,[Ljava.lang.String;@5d124d29),Annotation([Ljava.lang.String;@3c88191b,[Ljava.lang.String;@74960e9d,[Ledu.cmu.lti.nlp.amr.Entity;@4001d8c1))
AMR:
(a / and, mod, 这2 / 这么)
(a / and, time, 走 / 走-05)
(t / temporal-quantity, unit, 天 / 天)
(t2 / temporal-quantity, unit, 星 / 星期)
(产 / 产生-02, time, 我2 / 我)
(产 / 产生-02, time, 这4 / 这时)
(人 / 人, mod, 在 / 在-01)
(以 / 以前, quant, t2 / temporal-quantity)
(你 / 你, time, 早 / 早上)
(偶 / 偶然, manner, 是 / 是-04)
(在 / 在-01, manner, 单 / 单独)
(在 / 在-01, mod, 旷 / 旷无人烟)
(在 / 在-01, mod, 这3 / 这)
(在 / 在-01, time, 早 / 早上)
(地 / 地方, mod, 旷 / 旷无人烟)
(地 / 地方, mod, 走 / 走-05)
(天 / 天, mod, 早 / 早上)
(天 / 天, mod, 那 / 那)
(认 / 认识-01, direction, 你2 / 你)
(认 / 认识-01, manner, 我 / 我)
(认 / 认识-01, time, 以 / 以前)
(认 / 认识-01, time, 早 / 早上)
(说 / 说-02, ARG4, 是 / 是-04)
(说 / 说-02, mod, 这 / 这)
(说 / 说-02, mod, 这2 / 这么)
(问 / 问题, mod, 以 / 以前)
(问 / 问题, time, 产 / 产生-02)

Decoded in 259,485 microseconds
Sentence: 你 是 要 回到 你 降落 的 地方 去 是 吗 ！ ”

Spans:
Span 4-5:  你 => 你
Span 0-1:  你 => 你
Span 8-9:  去 => 去-02
Span 3-4:  回到 => 回到-01
Span 7-8:  地方 => 地方
Span 9-10:  是 => 是-04
Span 1-2:  是 => 是-04
Span 2-3:  要 => 要-02
Span 5-6:  降落 => 降落-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  回到 => 回到-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 2-3:  要 => 要-03
Oracle Span 5-6:  降落 => 降落-01

Extra span: 是 => 是-04
Extra span: 去 => 去-02
Extra span: 你 => 你
Incorrect span: 要 => 要-02
Extra span: 是 => 是-04
Missing span: 要 => 要-03
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	是	_	VC	VC	_	0	root	_	_
3	要	_	VV	VV	_	4	mmod	_	_
4	回到	_	VV	VV	_	8	rcmod	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	降落	_	VV	VV	_	4	dep	_	_
7	的	_	DEC	DEC	_	4	cpm	_	_
8	地方	_	NN	NN	_	2	attr	_	_
9	去	_	VV	VV	_	2	conj	_	_
10	是	_	VC	VC	_	9	cop	_	_
11	吗	_	SP	SP	_	2	dep	_	_
12	！	_	PU	PU	_	2	punct	_	_
13	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 要-03, arg0, x15 / 回到-01)
(x15 / 回到-01, arg0, x16 / 你)
(x15 / 回到-01, arg1, x17 / 地方)
(x19 / 降落-01, arg1, x17 / 地方)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),是,是-04,false), Span(8,9,List(1),去,去-02,false), Span(7,8,List(2),地方,地方,false), Span(5,6,List(3),降落,降落-01,false), Span(4,5,List(4),你,你,false), Span(3,4,List(5),回到,回到-01,false), Span(2,3,List(6),要,要-02,false), Span(1,2,List(7),是,是-04,false), Span(0,1,List(8),你,你,false)),Map(2 -> 地方, 5 -> 回到-01, 8 -> 你, 7 -> 是-04, 1 -> 去-02, 4 -> 你, 6 -> 要-02, 0 -> 是-04, 3 -> 降落-01),Map(要 -> 要-02, 你 -> 你, 去 -> 去-02, 地 -> 地方, 你2 -> 你, 是2 -> 是-04, 回 -> 回到-01, 降 -> 降落-01, 是 -> 是-04))),[Ljava.lang.String;@fb5aeed,Annotation([Ljava.lang.String;@73893ec1,[Ljava.lang.String;@37af24cb,[Ljava.lang.String;@7926352f),Annotation([Ljava.lang.String;@5bc63e20,[Ljava.lang.String;@61037caf,[Ledu.cmu.lti.nlp.amr.Dependency;@2fc49538),Annotation([Ljava.lang.String;@670342a2,[Ljava.lang.String;@d5e575c,[Ljava.lang.String;@7742a45c),Annotation([Ljava.lang.String;@7ca492d9,[Ljava.lang.String;@14fc9bd,[Ledu.cmu.lti.nlp.amr.Entity;@7ed49a7f))
AMR:
(回 / 回到-01, accompanier, 你 / 你)
(回 / 回到-01, manner, 要 / 要-02)
(地 / 地方, accompanier, 去 / 去-02)
(是 / 是-04, manner, 去 / 去-02)
(是2 / 是-04, manner, 你2 / 你)
(要 / 要-02, manner, 是2 / 是-04)
(降 / 降落-01, manner, 回 / 回到-01)
(降 / 降落-01, year, 去 / 去-02)

Decoded in 22,820 microseconds
Sentence: 小 王子 的 脸 又 红 了 。

Spans:
Span 4-5:  又 => 又
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 5-6:  红 => 红-01
Span 3-4:  脸 => 脸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子

Extra span: 红 => 红-01
Extra span: 脸 => 脸
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脸	_	NN	NN	_	6	nsubj	_	_
5	又	_	AD	AD	_	6	advmod	_	_
6	红	_	VA	VA	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 王子, mod, x10 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),红,红-01,false), Span(4,5,List(1),又,又,false), Span(3,4,List(2),脸,脸,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小,false)),Map(2 -> 脸, 1 -> 又, 4 -> 小, 0 -> 红-01, 3 -> 王子),Map(红 -> 红-01, 又 -> 又, 王 -> 王子, 小 -> 小, 脸 -> 脸))),[Ljava.lang.String;@1cd6b1bd,Annotation([Ljava.lang.String;@443cdaa4,[Ljava.lang.String;@3b41e1bf,[Ljava.lang.String;@619c93ca),Annotation([Ljava.lang.String;@486e9d1d,[Ljava.lang.String;@6aa5974e,[Ledu.cmu.lti.nlp.amr.Dependency;@5e5ddfbc),Annotation([Ljava.lang.String;@5bda157e,[Ljava.lang.String;@67e0fd6d,[Ljava.lang.String;@21390938),Annotation([Ljava.lang.String;@1129829c,[Ljava.lang.String;@1a531422,[Ledu.cmu.lti.nlp.amr.Entity;@7a388990))
AMR:
(王 / 王子, mod, 小 / 小)
(王 / 王子, part, 脸 / 脸)
(红 / 红-01, manner, 又 / 又)
(红 / 红-01, op, 脸 / 脸)

Decoded in 9,235 microseconds
Sentence: 我 犹豫不定 地 又 说 了 一 句 ： “ 可能 是 因为 周年 纪念 吧 ？ … ”

Spans:
Span 3-4:  又 => 又
Span 7-8:  句 => 句
Span 10-11:  可能 => 可能-02
Span 13-14:  周年 => 周年
Span 2-3:  地 => 地
Span 0-1:  我 => 我
Span 11-12:  是 => 是-04
Span 1-2:  犹豫不定 => 犹豫不定
Span 14-15:  纪念 => 纪念-01
Span 4-5:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 10-11:  可能 => 可能-01
Oracle Span 13-14:  周年 => 周年
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  犹豫不定 => 犹豫不定
Oracle Span 14-15:  纪念 => 纪念-01
Oracle Span 4-5:  说 => 说-01

Extra span: 是 => 是-04
Incorrect span: 可能 => 可能-02
Extra span: 句 => 句
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Missing span: 说 => 说-01
Missing span: 可能 => 可能-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	犹豫不定	_	VA	VA	_	5	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	说	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	一	_	NT	NT	_	8	dep	_	_
8	句	_	VV	VV	_	5	ccomp	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	“	_	PU	PU	_	15	punct	_	_
11	可能	_	NN	NN	_	15	top	_	_
12	是	_	VC	VC	_	15	cop	_	_
13	因为	_	P	P	_	15	prep	_	_
14	周年	_	NN	NN	_	13	pobj	_	_
15	纪念	_	VV	VV	_	8	dep	_	_
16	吧	_	SP	SP	_	15	dep	_	_
17	？	_	PU	PU	_	5	punct	_	_
18	…	_	PU	PU	_	5	punct	_	_
19	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x9 / 可能-01)
(x0 / 说-01, manner, x3 / 犹豫不定)
(x0 / 说-01, manner, x4 / 又)
(x16 / 纪念-01, mod, x17 / 周年)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),纪念,纪念-01,false), Span(13,14,List(1),周年,周年,false), Span(11,12,List(2),是,是-04,false), Span(10,11,List(3),可能,可能-02,false), Span(7,8,List(4),句,句,false), Span(4,5,List(5),说,说-02,false), Span(3,4,List(6),又,又,false), Span(2,3,List(7),地,地,false), Span(1,2,List(8),犹豫不定,犹豫不定,false), Span(0,1,List(9),我,我,false)),Map(2 -> 是-04, 5 -> 说-02, 8 -> 犹豫不定, 7 -> 地, 1 -> 周年, 4 -> 句, 6 -> 又, 9 -> 我, 0 -> 纪念-01, 3 -> 可能-02),Map(又 -> 又, 我 -> 我, 纪 -> 纪念-01, 句 -> 句, 犹 -> 犹豫不定, 地 -> 地, 说 -> 说-02, 周 -> 周年, 是 -> 是-04, 可 -> 可能-02))),[Ljava.lang.String;@13213f26,Annotation([Ljava.lang.String;@4e4162bc,[Ljava.lang.String;@4c319d52,[Ljava.lang.String;@72fbf94d),Annotation([Ljava.lang.String;@6839203b,[Ljava.lang.String;@2d28fb02,[Ledu.cmu.lti.nlp.amr.Dependency;@6db328f8),Annotation([Ljava.lang.String;@402f8592,[Ljava.lang.String;@61b65d54,[Ljava.lang.String;@b2c4a8b),Annotation([Ljava.lang.String;@7f2c57fe,[Ljava.lang.String;@43935e9c,[Ledu.cmu.lti.nlp.amr.Entity;@101cf747))
AMR:
(可 / 可能-02, manner, 句 / 句)
(可 / 可能-02, snt11, 是 / 是-04)
(地 / 地, mod, 犹 / 犹豫不定)
(地 / 地, poss, 我 / 我)
(纪 / 纪念-01, manner, 是 / 是-04)
(纪 / 纪念-01, mod, 周 / 周年)
(说 / 说-02, location, 地 / 地)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, snt1, 句 / 句)

Decoded in 34,381 microseconds
Sentence: 小 王子 脸 又 红 了 。

Spans:
Span 3-4:  又 => 又
Span 0-1:  小 => 小
Span 1-2:  王子 => 王子
Span 4-5:  红 => 红-01
Span 2-3:  脸 => 脸

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 4-5:  红 => 红-01
Oracle Span 2-3:  脸 => 脸

Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nn	_	_
3	脸	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	红	_	VA	VA	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 红-01, arg0, x2 / 脸)
(x0 / 红-01, manner, x6 / 又)
(x3 / 王子, mod, x5 / 小-01)
(x3 / 王子, part, x2 / 脸)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),红,红-01,false), Span(3,4,List(1),又,又,false), Span(2,3,List(2),脸,脸,false), Span(1,2,List(3),王子,王子,false), Span(0,1,List(4),小,小,false)),Map(2 -> 脸, 1 -> 又, 4 -> 小, 0 -> 红-01, 3 -> 王子),Map(红 -> 红-01, 又 -> 又, 王 -> 王子, 小 -> 小, 脸 -> 脸))),[Ljava.lang.String;@790d8fdd,Annotation([Ljava.lang.String;@6403a4a5,[Ljava.lang.String;@3dbd7107,[Ljava.lang.String;@4a6c0f38),Annotation([Ljava.lang.String;@5f8a02cf,[Ljava.lang.String;@26d5a317,[Ledu.cmu.lti.nlp.amr.Dependency;@70b6db83),Annotation([Ljava.lang.String;@5a090f62,[Ljava.lang.String;@559af296,[Ljava.lang.String;@5edc3e29),Annotation([Ljava.lang.String;@18709cb2,[Ljava.lang.String;@a90e2c1,[Ledu.cmu.lti.nlp.amr.Entity;@89caf47))
AMR:
(王 / 王子, mod, 小 / 小)
(王 / 王子, part, 脸 / 脸)
(红 / 红-01, manner, 又 / 又)
(红 / 红-01, op, 脸 / 脸)

Decoded in 9,471 microseconds
Sentence: 他 从来 也 不 回答 这些 问题 ， 但是 ， 脸 红 ， 就 等于 说 “ 是 的 ” ， 是 吧 ？

Spans:
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 1-2:  从来 => 从来
Span 0-1:  他 => 他
Span 4-5:  回答 => 回答-01
Span 13-14:  就 => 就-01
Span 21-22:  是 => 是-04
Span 17-18:  是 => 是-04
Span 14-15:  等于 => 等于-01
Span 11-12:  红 => 红-01
Span 10-11:  脸 => 脸
Span 15-16:  说 => 说-02
Span 5-6:  这些 => 这些
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  也 => 也
Oracle Span 1-2:  从来 => 从来
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 13-14:  就 => 就
Oracle Span 17-18:  是 => 是
Oracle Span 14-15:  等于 => 等于-01
Oracle Span 5-6:  这些 => 这些
Oracle Span 6-7:  问题 => 问题

Extra span: 是 => 是-04
Incorrect span: 是 => 是-04
Extra span: 说 => 说-02
Incorrect span: 就 => 就-01
Extra span: 红 => 红-01
Extra span: 脸 => 脸
Extra span: 不 => 不
Missing span: 是 => 是
Missing span: 就 => 就
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	从来	_	AD	AD	_	5	advmod	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	不	_	AD	AD	_	5	neg	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	这些	_	DT	DT	_	7	det	_	_
7	问题	_	NN	NN	_	5	dobj	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	但是	_	AD	AD	_	12	advmod	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	脸	_	NN	NN	_	12	nsubj	_	_
12	红	_	VA	VA	_	5	conj	_	_
13	,	_	PU	PU	_	12	punct	_	_
14	就	_	AD	AD	_	16	advmod	_	_
15	等于	_	VV	VV	_	16	mmod	_	_
16	说	_	VV	VV	_	22	dep	_	_
17	“	_	PU	PU	_	18	punct	_	_
18	是	_	VC	VC	_	16	dobj	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	”	_	PU	PU	_	18	punct	_	_
21	,	_	PU	PU	_	22	punct	_	_
22	是	_	VC	VC	_	12	conj	_	_
23	吧	_	SP	SP	_	5	dep	_	_
24	？	_	PU	PU	_	5	punct	_	_

Oracle:
(x16 / 等于-01, arg1, x20 / 是)
(x16 / 等于-01, manner, x19 / 就)
(x2 / 回答-01, arg0, x6 / 他)
(x2 / 回答-01, arg1, x7 / 问题)
(x2 / 回答-01, manner, x4 / 也)
(x2 / 回答-01, mod, x5 / 从来)
(x7 / 问题, mod, x8 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),是,是-04,false), Span(17,18,List(1),是,是-04,false), Span(15,16,List(2),说,说-02,false), Span(14,15,List(3),等于,等于-01,false), Span(13,14,List(4),就,就-01,false), Span(11,12,List(5),红,红-01,false), Span(10,11,List(6),脸,脸,false), Span(6,7,List(7),问题,问题,false), Span(5,6,List(8),这些,这些,false), Span(4,5,List(9),回答,回答-01,false), Span(3,4,List(10),不,不,false), Span(2,3,List(11),也,也,false), Span(1,2,List(12),从来,从来,false), Span(0,1,List(13),他,他,false)),Map(2 -> 说-02, 5 -> 红-01, 12 -> 从来, 8 -> 这些, 7 -> 问题, 1 -> 是-04, 4 -> 就-01, 11 -> 也, 6 -> 脸, 0 -> 是-04, 9 -> 回答-01, 3 -> 等于-01, 10 -> 不, 13 -> 他),Map(红 -> 红-01, 就 -> 就-01, 从 -> 从来, 也 -> 也, 这 -> 这些, 他 -> 他, 等 -> 等于-01, 脸 -> 脸, 不 -> 不, 说 -> 说-02, 问 -> 问题, 是 -> 是-04, 是2 -> 是-04, 回 -> 回答-01))),[Ljava.lang.String;@370ef50b,Annotation([Ljava.lang.String;@2b877a54,[Ljava.lang.String;@268c030f,[Ljava.lang.String;@4b87760e),Annotation([Ljava.lang.String;@be164d8,[Ljava.lang.String;@1b24ea2a,[Ledu.cmu.lti.nlp.amr.Dependency;@5df6163a),Annotation([Ljava.lang.String;@2d313c8c,[Ljava.lang.String;@2df65a56,[Ljava.lang.String;@113f9078),Annotation([Ljava.lang.String;@7c1503a3,[Ljava.lang.String;@586495f1,[Ledu.cmu.lti.nlp.amr.Entity;@47df5041))
AMR:
(不 / 不, mod, 从 / 从来)
(不 / 不, quant, 他 / 他)
(回 / 回答-01, manner, 不 / 不)
(回 / 回答-01, manner, 也 / 也)
(就 / 就-01, time, 红 / 红-01)
(是 / 是-04, manner, 是2 / 是-04)
(等 / 等于-01, manner, 就 / 就-01)
(红 / 红-01, manner, 脸 / 脸)
(说 / 说-02, manner, 等 / 等于-01)
(说 / 说-02, prep-following, 是2 / 是-04)
(问 / 问题, mod, 不 / 不)
(问 / 问题, mod, 这 / 这些)
(问 / 问题, part, 脸 / 脸)

Decoded in 61,260 microseconds
Sentence: “ 啊 ！ ”

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	啊	_	CD	CD	_	0	root	_	_
3	！	_	PU	PU	_	2	punct	_	_
4	”	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@2a0ea492,Annotation([Ljava.lang.String;@7e52a26b,[Ljava.lang.String;@2e56b4d,[Ljava.lang.String;@3f857e08),Annotation([Ljava.lang.String;@6070775e,[Ljava.lang.String;@b5ac0c1,[Ledu.cmu.lti.nlp.amr.Dependency;@224c7de4),Annotation([Ljava.lang.String;@36ad229b,[Ljava.lang.String;@55846997,[Ljava.lang.String;@805e72e),Annotation([Ljava.lang.String;@49671897,[Ljava.lang.String;@168142da,[Ledu.cmu.lti.nlp.amr.Entity;@60bf494c))
AMR:


Decoded in 1,186 microseconds
Sentence: 我 对 他 说 ： “ 我 有点 怕 … ”

Spans:
Span 2-3:  他 => 他
Span 1-2:  对 => 对-02
Span 8-9:  怕 => 怕-01
Span 6-7:  我 => 我
Span 0-1:  我 => 我
Span 7-8:  有点 => 有点-01
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 8-9:  怕 => 怕-01
Oracle Span 0-1:  我 => 我
Oracle Span 7-8:  有点 => 有点-01
Oracle Span 3-4:  说 => 说-01

Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	9	nsubj	_	_
8	有点	_	AD	AD	_	9	advmod	_	_
9	怕	_	VV	VV	_	4	ccomp	_	_
10	…	_	NN	NN	_	9	dobj	_	_
11	”	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x3 / 怕-01)
(x0 / 说-01, arg3, x6 / 他)
(x3 / 怕-01, degree, x5 / 有点-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),怕,怕-01,false), Span(7,8,List(1),有点,有点-01,false), Span(6,7,List(2),我,我,false), Span(3,4,List(3),说,说-02,false), Span(2,3,List(4),他,他,false), Span(1,2,List(5),对,对-02,false), Span(0,1,List(6),我,我,false)),Map(2 -> 我, 5 -> 对-02, 1 -> 有点-01, 4 -> 他, 6 -> 我, 0 -> 怕-01, 3 -> 说-02),Map(怕 -> 怕-01, 我 -> 我, 我2 -> 我, 他 -> 他, 说 -> 说-02, 对 -> 对-02, 有 -> 有点-01))),[Ljava.lang.String;@47a4eee2,Annotation([Ljava.lang.String;@36f6e521,[Ljava.lang.String;@2afdf6b7,[Ljava.lang.String;@30922f8d),Annotation([Ljava.lang.String;@50211483,[Ljava.lang.String;@51ff3c4b,[Ledu.cmu.lti.nlp.amr.Dependency;@1472208d),Annotation([Ljava.lang.String;@35bd8bc9,[Ljava.lang.String;@6de004f1,[Ljava.lang.String;@45d56062),Annotation([Ljava.lang.String;@4026461d,[Ljava.lang.String;@191c6e13,[Ledu.cmu.lti.nlp.amr.Entity;@7436364d))
AMR:
(对 / 对-02, beneficiary, 我2 / 我)
(怕 / 怕-01, degree, 有 / 有点-01)
(怕 / 怕-01, manner, 我 / 我)
(说 / 说-02, ARG4, 他 / 他)
(说 / 说-02, scale, 对 / 对-02)
(说 / 说-02, scale, 怕 / 怕-01)

Decoded in 13,894 microseconds
Sentence: 但 他 却 回答 我 说 ：

Spans:
Span 1-2:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我
Span 5-6:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我

Extra span: 说 => 说-02
Dependencies:
1	但	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	回答	_	VV	VV	_	6	dep	_	_
5	我	_	PN	PN	_	6	nsubj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 他)
(x2 / 回答-01, arg3, x4 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),说,说-02,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),回答,回答-01,false), Span(1,2,List(3),他,他,false)),Map(2 -> 回答-01, 1 -> 我, 0 -> 说-02, 3 -> 他),Map(我 -> 我, 他 -> 他, 说 -> 说-02, 回 -> 回答-01))),[Ljava.lang.String;@1a8e9ed9,Annotation([Ljava.lang.String;@68ea253b,[Ljava.lang.String;@12fcb2c3,[Ljava.lang.String;@57bd6a8f),Annotation([Ljava.lang.String;@39ab5ef7,[Ljava.lang.String;@517704,[Ledu.cmu.lti.nlp.amr.Dependency;@77cca767),Annotation([Ljava.lang.String;@4b195203,[Ljava.lang.String;@28a6e171,[Ljava.lang.String;@23444a36),Annotation([Ljava.lang.String;@31a136a6,[Ljava.lang.String;@30a9e3db,[Ledu.cmu.lti.nlp.amr.Entity;@2f9b21d6))
AMR:
(回 / 回答-01, prep-on-behalf, 他 / 他)
(说 / 说-02, poss, 我 / 我)
(说 / 说-02, prep-on-behalf, 回 / 回答-01)

Decoded in 5,634 microseconds
Sentence: “ 你 现在 该 工作 了 。

Spans:
Span 1-2:  你 => 你
Span 4-5:  工作 => 工作-01
Span 2-3:  现在 => 现在
Span 3-4:  该 => 该-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 4-5:  工作 => 工作-01
Oracle Span 2-3:  现在 => 现在
Oracle Span 3-4:  该 => 该-01

Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	5	nsubj	_	_
3	现在	_	NT	NT	_	5	tmod	_	_
4	该	_	VV	VV	_	5	mmod	_	_
5	工作	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 该-01, arg0, x8 / 工作-01)
(x7 / 该-01, time, x10 / 现在)
(x8 / 工作-01, arg0, x9 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),工作,工作-01,false), Span(3,4,List(1),该,该-01,false), Span(2,3,List(2),现在,现在,false), Span(1,2,List(3),你,你,false)),Map(2 -> 现在, 1 -> 该-01, 0 -> 工作-01, 3 -> 你),Map(你 -> 你, 工 -> 工作-01, 该 -> 该-01, 现 -> 现在))),[Ljava.lang.String;@2e0fdbe9,Annotation([Ljava.lang.String;@16a3cc88,[Ljava.lang.String;@696b52bc,[Ljava.lang.String;@1f884bd6),Annotation([Ljava.lang.String;@4f081b5d,[Ljava.lang.String;@474749b8,[Ledu.cmu.lti.nlp.amr.Dependency;@740a0d5e),Annotation([Ljava.lang.String;@29013ef2,[Ljava.lang.String;@265c1a7c,[Ljava.lang.String;@5b2b8d86),Annotation([Ljava.lang.String;@7fef0b40,[Ljava.lang.String;@5f395ce1,[Ledu.cmu.lti.nlp.amr.Entity;@19f02280))
AMR:
(该 / 该-01, example, 工 / 工作-01)
(该 / 该-01, location, 你 / 你)
(该 / 该-01, time, 现 / 现在)

Decoded in 5,763 microseconds
Sentence: 你 应该 回到 你 的 机器 那里 去 。

Spans:
Span 3-4:  你 => 你
Span 0-1:  你 => 你
Span 7-8:  去 => 去-02
Span 2-3:  回到 => 回到-01
Span 1-2:  应该 => 应该-01
Span 5-6:  机器 => 机器
Span 6-7:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  回到 => 回到-01
Oracle Span 1-2:  应该 => 应该-01
Oracle Span 5-6:  机器 => 机器

Extra span: 去 => 去-02
Extra span: 那里 => 那里
Extra span: 你 => 你
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	应该	_	VV	VV	_	3	mmod	_	_
3	回到	_	VV	VV	_	0	root	_	_
4	你	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	机器	_	NN	NN	_	3	dobj	_	_
7	那里	_	PN	PN	_	8	nsubj	_	_
8	去	_	VV	VV	_	3	conj	_	_
9	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 应该-01, arg0, x2 / 回到-01)
(x2 / 回到-01, arg0, x3 / 你)
(x2 / 回到-01, arg1, x7 / 机器)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),去,去-02,false), Span(6,7,List(1),那里,那里,false), Span(5,6,List(2),机器,机器,false), Span(3,4,List(3),你,你,false), Span(2,3,List(4),回到,回到-01,false), Span(1,2,List(5),应该,应该-01,false), Span(0,1,List(6),你,你,false)),Map(2 -> 机器, 5 -> 应该-01, 1 -> 那里, 4 -> 回到-01, 6 -> 你, 0 -> 去-02, 3 -> 你),Map(你 -> 你, 去 -> 去-02, 机 -> 机器, 你2 -> 你, 那 -> 那里, 应 -> 应该-01, 回 -> 回到-01))),[Ljava.lang.String;@1e30db85,Annotation([Ljava.lang.String;@19827608,[Ljava.lang.String;@cc9ef8d,[Ljava.lang.String;@14b528b6),Annotation([Ljava.lang.String;@c412556,[Ljava.lang.String;@6f930e0,[Ledu.cmu.lti.nlp.amr.Dependency;@450f0235),Annotation([Ljava.lang.String;@78c262ba,[Ljava.lang.String;@7d2c9361,[Ljava.lang.String;@329dc214),Annotation([Ljava.lang.String;@fbe70d8,[Ljava.lang.String;@64021427,[Ledu.cmu.lti.nlp.amr.Entity;@7d2c345d))
AMR:
(回 / 回到-01, prep-on, 你2 / 你)
(回 / 回到-01, snt3, 机 / 机器)
(应 / 应该-01, ARG1, 去 / 去-02)
(应 / 应该-01, op, 回 / 回到-01)
(机 / 机器, poss, 你 / 你)
(那 / 那里, mod, 机 / 机器)

Decoded in 17,295 microseconds
Sentence: 我 在 这里 等 你 。

Spans:
Span 4-5:  你 => 你
Span 1-2:  在 => 在-01
Span 0-1:  我 => 我
Span 3-4:  等 => 等-01
Span 2-3:  这里 => 这里

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  等 => 等-01
Oracle Span 2-3:  这里 => 这里

Extra span: 在 => 在-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	这里	_	PN	PN	_	2	pobj	_	_
4	等	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	ccomp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 等-01, arg0, x2 / 我)
(x0 / 等-01, arg1, x3 / 你)
(x0 / 等-01, location, x4 / 这里)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),等,等-01,false), Span(2,3,List(2),这里,这里,false), Span(1,2,List(3),在,在-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 这里, 1 -> 等-01, 4 -> 我, 0 -> 你, 3 -> 在-01),Map(在 -> 在-01, 我 -> 我, 这 -> 这里, 你 -> 你, 等 -> 等-01))),[Ljava.lang.String;@217dc48e,Annotation([Ljava.lang.String;@5db948c9,[Ljava.lang.String;@296edc75,[Ljava.lang.String;@357c9bd9),Annotation([Ljava.lang.String;@7aea704c,[Ljava.lang.String;@6d0290d8,[Ledu.cmu.lti.nlp.amr.Dependency;@32507479),Annotation([Ljava.lang.String;@632383b9,[Ljava.lang.String;@4ae2e781,[Ljava.lang.String;@339f3a55),Annotation([Ljava.lang.String;@2dd63e3,[Ljava.lang.String;@7d1c164a,[Ledu.cmu.lti.nlp.amr.Entity;@209f3887))
AMR:
(在 / 在-01, ARG0, 这 / 这里)
(在 / 在-01, ARG5, 我 / 我)
(在 / 在-01, degree, 等 / 等-01)
(等 / 等-01, ARG3, 你 / 你)

Decoded in 11,467 microseconds
Sentence: 你 明天 晚上 再 来 … ”

Spans:
Span 0-1:  你 => 你
Span 3-4:  再 => 再
Span 1-2:  明天 => 明天
Span 2-3:  晚上 => 晚上
Span 4-5:  来 => 来-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  再 => 再
Oracle Span 1-2:  明天 => 明天
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 4-5:  来 => 来-01

Incorrect span: 来 => 来-06
Missing span: 来 => 来-01
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	明天	_	NT	NT	_	3	nn	_	_
3	晚上	_	NT	NT	_	5	tmod	_	_
4	再	_	AD	AD	_	5	advmod	_	_
5	来	_	VV	VV	_	0	root	_	_
6	…	_	PU	PU	_	5	punct	_	_
7	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 晚上, time, x13 / 明天)
(x8 / 来-01, arg0, x12 / 你)
(x8 / 来-01, manner, x9 / 再)
(x8 / 来-01, time, x10 / 晚上)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),来,来-06,false), Span(3,4,List(1),再,再,false), Span(2,3,List(2),晚上,晚上,false), Span(1,2,List(3),明天,明天,false), Span(0,1,List(4),你,你,false)),Map(2 -> 晚上, 1 -> 再, 4 -> 你, 0 -> 来-06, 3 -> 明天),Map(来 -> 来-06, 你 -> 你, 晚 -> 晚上, 明 -> 明天, 再 -> 再))),[Ljava.lang.String;@6a98f353,Annotation([Ljava.lang.String;@3b35798,[Ljava.lang.String;@1e00bfe2,[Ljava.lang.String;@4702e7a5),Annotation([Ljava.lang.String;@6a2d867d,[Ljava.lang.String;@73bb1337,[Ledu.cmu.lti.nlp.amr.Dependency;@685f5d0d),Annotation([Ljava.lang.String;@3830b06c,[Ljava.lang.String;@3e28d779,[Ljava.lang.String;@15214920),Annotation([Ljava.lang.String;@784d9bc,[Ljava.lang.String;@3a0aaaf0,[Ledu.cmu.lti.nlp.amr.Entity;@426131d7))
AMR:
(明 / 明天, mod, 你 / 你)
(晚 / 晚上, time, 明 / 明天)
(来 / 来-06, manner, 再 / 再)
(来 / 来-06, time, 晚 / 晚上)

Decoded in 8,912 microseconds
Sentence: 但是 ， 我 放心 不 下 。

Spans:
Span 5-6:  下 => 下-07
Span 4-5:  不 => 不
Span 2-3:  我 => 我
Span 3-4:  放心 => 放心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  放心 => 放心-01

Extra span: 下 => 下-07
Extra span: 不 => 不
Dependencies:
1	但是	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	我	_	PN	PN	_	6	nsubj	_	_
4	放心	_	VV	VV	_	6	mmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	下	_	VV	VV	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x2 / 放心-01, arg0, x3 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),下,下-07,false), Span(4,5,List(1),不,不,false), Span(3,4,List(2),放心,放心-01,false), Span(2,3,List(3),我,我,false)),Map(2 -> 放心-01, 1 -> 不, 0 -> 下-07, 3 -> 我),Map(我 -> 我, 放 -> 放心-01, 下 -> 下-07, 不 -> 不))),[Ljava.lang.String;@5d9618f2,Annotation([Ljava.lang.String;@7c7e73c5,[Ljava.lang.String;@13cc0b90,[Ljava.lang.String;@58687fb7),Annotation([Ljava.lang.String;@3554bdc0,[Ljava.lang.String;@3a3b10f4,[Ledu.cmu.lti.nlp.amr.Dependency;@49580ca8),Annotation([Ljava.lang.String;@525647f3,[Ljava.lang.String;@42fc4ac4,[Ljava.lang.String;@20a24edf),Annotation([Ljava.lang.String;@29962b2f,[Ljava.lang.String;@491f8831,[Ledu.cmu.lti.nlp.amr.Entity;@691541bc))
AMR:
(下 / 下-07, beneficiary, 我 / 我)
(下 / 下-07, manner, 不 / 不)
(放 / 放心-01, ARG0, 不 / 不)

Decoded in 6,244 microseconds
Sentence: 我 想起 了 狐狸 的 话 。

Spans:
Span 1-2:  想起 => 想起-01
Span 0-1:  我 => 我
Span 3-4:  狐狸 => 狐狸
Span 5-6:  话 => 话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  想起 => 想起-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  狐狸 => 狐狸
Oracle Span 5-6:  话 => 话-01

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	想起	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	狐狸	_	NN	NN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	话	_	NN	NN	_	2	dobj	_	_
7	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 想起-01, arg0, x2 / 我)
(x0 / 想起-01, arg1, x3 / 话-01)
(x3 / 话-01, arg0, x5 / 狐狸)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),话,话-01,false), Span(3,4,List(1),狐狸,狐狸,false), Span(1,2,List(2),想起,想起-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 想起-01, 1 -> 狐狸, 0 -> 话-01, 3 -> 我),Map(我 -> 我, 话 -> 话-01, 狐 -> 狐狸, 想 -> 想起-01))),[Ljava.lang.String;@5b733ef7,Annotation([Ljava.lang.String;@43a4a9e5,[Ljava.lang.String;@764fffa0,[Ljava.lang.String;@35145874),Annotation([Ljava.lang.String;@77524ca7,[Ljava.lang.String;@11df2829,[Ledu.cmu.lti.nlp.amr.Dependency;@18e4674d),Annotation([Ljava.lang.String;@f245bdd,[Ljava.lang.String;@6af609ea,[Ljava.lang.String;@280fafd),Annotation([Ljava.lang.String;@39e53bef,[Ljava.lang.String;@14b275bd,[Ledu.cmu.lti.nlp.amr.Entity;@4ed18798))
AMR:
(想 / 想起-01, ARG4, 话 / 话-01)
(想 / 想起-01, value, 我 / 我)
(话 / 话-01, time, 狐 / 狐狸)

Decoded in 6,856 microseconds
Sentence: 如果 被 人 驯服 了 ， 就 可能 会 要 哭 的 …

Spans:
Span 2-3:  人 => 人
Span 8-9:  会 => 会-03
Span 7-8:  可能 => 可能-02
Span 10-11:  哭 => 哭-01
Span 6-7:  就 => 就-01
Span 9-10:  要 => 要-02
Span 3-4:  驯服 => 驯服

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  人 => 人
Oracle Span 8-9:  会 => 会-02
Oracle Span 7-8:  可能 => 可能-01
Oracle Span 10-11:  哭 => 哭-01
Oracle Span 3-4:  驯服 => 驯服-01

Extra span: 要 => 要-02
Incorrect span: 会 => 会-03
Incorrect span: 可能 => 可能-02
Extra span: 就 => 就-01
Incorrect span: 驯服 => 驯服
Missing span: 驯服 => 驯服-01
Missing span: 可能 => 可能-01
Missing span: 会 => 会-02
Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	被	_	LB	LB	_	4	pass	_	_
3	人	_	NN	NN	_	4	nsubj	_	_
4	驯服	_	VA	VA	_	8	dep	_	_
5	了	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	可能	_	VV	VV	_	0	root	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	要	_	VV	VV	_	13	rcmod	_	_
11	哭	_	NN	NN	_	10	dobj	_	_
12	的	_	DEC	DEC	_	10	cpm	_	_
13	…	_	NN	NN	_	8	dobj	_	_

Oracle:
(x10 / 会-02, arg0, x11 / 哭-01)
(x2 / 驯服-01, arg0, x3 / 人)
(x9 / 可能-01, arg0, x10 / 会-02)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),哭,哭-01,false), Span(9,10,List(1),要,要-02,false), Span(8,9,List(2),会,会-03,false), Span(7,8,List(3),可能,可能-02,false), Span(6,7,List(4),就,就-01,false), Span(3,4,List(5),驯服,驯服,false), Span(2,3,List(6),人,人,false)),Map(2 -> 会-03, 5 -> 驯服, 1 -> 要-02, 4 -> 就-01, 6 -> 人, 0 -> 哭-01, 3 -> 可能-02),Map(哭 -> 哭-01, 驯 -> 驯服, 就 -> 就-01, 要 -> 要-02, 会 -> 会-03, 人 -> 人, 可 -> 可能-02))),[Ljava.lang.String;@4b03cbad,Annotation([Ljava.lang.String;@5b29ab61,[Ljava.lang.String;@5c313224,[Ljava.lang.String;@1e1e837d),Annotation([Ljava.lang.String;@4b957db0,[Ljava.lang.String;@5d71b500,[Ledu.cmu.lti.nlp.amr.Dependency;@8840c98),Annotation([Ljava.lang.String;@626b639e,[Ljava.lang.String;@273fa9e,[Ljava.lang.String;@527a8665),Annotation([Ljava.lang.String;@7ab2a07e,[Ljava.lang.String;@437c4b25,[Ledu.cmu.lti.nlp.amr.Entity;@5ec6fede))
AMR:
(可 / 可能-02, snt2, 会 / 会-03)
(可 / 可能-02, time, 就 / 就-01)
(要 / 要-02, snt2, 哭 / 哭-01)
(要 / 要-02, time, 会 / 会-03)
(驯 / 驯服, mod, 人 / 人)
(驯 / 驯服, prep-on-behalf, 就 / 就-01)

Decoded in 17,033 microseconds
Sentence: XXVI 。

Spans:
Span 0-1:  XXVI => XXVI

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXVI => XXVI

Dependencies:
1	XXVI	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXVI,XXVI,false)),Map(0 -> XXVI),Map(x -> XXVI))),[Ljava.lang.String;@580902cd,Annotation([Ljava.lang.String;@3757e8e2,[Ljava.lang.String;@1653b84e,[Ljava.lang.String;@7f8a9454),Annotation([Ljava.lang.String;@6f85ee02,[Ljava.lang.String;@679d0be8,[Ledu.cmu.lti.nlp.amr.Dependency;@6c075e9d),Annotation([Ljava.lang.String;@47044f7d,[Ljava.lang.String;@7b14c61,[Ljava.lang.String;@8fcc534),Annotation([Ljava.lang.String;@5e599100,[Ljava.lang.String;@3b435211,[Ledu.cmu.lti.nlp.amr.Entity;@361cd35c))
AMR:


Decoded in 1,399 microseconds
Sentence: 在 井 旁边 有 一 堵 残缺 的 石墙 。

Spans:
Span 1-2:  井 => 井
Span 0-1:  在 => 在-01
Span 2-3:  旁边 => 旁边
Span 3-4:  有 => 有-06
Span 6-7:  残缺 => 残缺-01
Span 8-9:  石墙 => 石墙

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  井 => 井
Oracle Span 2-3:  旁边 => 旁边
Oracle Span 3-4:  有 => 有-01
Oracle Span 6-7:  残缺 => 残缺-01
Oracle Span 8-9:  石墙 => 石墙

Incorrect span: 有 => 有-06
Extra span: 在 => 在-01
Missing span: 有 => 有-01
Dependencies:
1	在	_	P	P	_	4	prep	_	_
2	井	_	NR	NR	_	1	pobj	_	_
3	旁边	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	堵	_	NN	NN	_	7	nn	_	_
7	残缺	_	NN	NN	_	9	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	石墙	_	NN	NN	_	4	dobj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 有-01, arg0, x2 / 旁边)
(x0 / 有-01, arg1, x4 / 石墙)
(x2 / 旁边, arg0, x7 / 井)
(x4 / 石墙, mod, x5 / 残缺-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),石墙,石墙,false), Span(6,7,List(1),残缺,残缺-01,false), Span(3,4,List(2),有,有-06,false), Span(2,3,List(3),旁边,旁边,false), Span(1,2,List(4),井,井,false), Span(0,1,List(5),在,在-01,false)),Map(2 -> 有-06, 5 -> 在-01, 1 -> 残缺-01, 4 -> 井, 0 -> 石墙, 3 -> 旁边),Map(残 -> 残缺-01, 石 -> 石墙, 在 -> 在-01, 井 -> 井, 旁 -> 旁边, 有 -> 有-06))),[Ljava.lang.String;@58a765ce,Annotation([Ljava.lang.String;@4a642e4b,[Ljava.lang.String;@6b162ecc,[Ljava.lang.String;@3b4086c1),Annotation([Ljava.lang.String;@58aa1d72,[Ljava.lang.String;@33d7765a,[Ledu.cmu.lti.nlp.amr.Dependency;@69ed5ea2),Annotation([Ljava.lang.String;@56a4abd0,[Ljava.lang.String;@5eed6dfb,[Ljava.lang.String;@5600a5da),Annotation([Ljava.lang.String;@551be9f6,[Ljava.lang.String;@269222ae,[Ledu.cmu.lti.nlp.amr.Entity;@13250132))
AMR:
(在 / 在-01, ARG1, 井 / 井)
(旁 / 旁边, ARG6, 井 / 井)
(有 / 有-06, ARG0, 旁 / 旁边)
(有 / 有-06, prep-as, 石 / 石墙)
(石 / 石墙, mod, 残 / 残缺-01)

Decoded in 12,969 microseconds
Sentence: 第二 天 晚上 我 工作 回来 的 时候 ， 我 远远 地 看见 了 小 王子 耷拉 着 双腿 坐 在 墙 上 。

Spans:
Span 5-6:  回来 => 回来-02
Span 20-21:  在 => 在-01
Span 11-12:  地 => 地
Span 19-20:  坐 => 坐-03
Span 21-22:  墙 => 墙
Span 1-2:  天 => (temporal-quantity :unit 天)
Span 14-15:  小 => 小
Span 4-5:  工作 => 工作-01
Span 9-10:  我 => 我
Span 3-4:  我 => 我
Span 7-8:  时候 => 时候
Span 2-3:  晚上 => 晚上
Span 15-16:  王子 => 王子
Span 12-13:  看见 => 看见-01
Span 16-17:  耷拉 => 耷拉-01
Span 10-11:  远远 => 远远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  回来 => 回来-01
Oracle Span 19-20:  坐 => 坐-01
Oracle Span 1-2:  天 => 天
Oracle Span 14-15:  小 => 小-01
Oracle Span 4-5:  工作 => 工作-01
Oracle Span 3-4:  我 => 我
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 15-16:  王子 => 王子
Oracle Span 12-13:  看见 => 看见-01
Oracle Span 16-17:  耷拉 => 耷拉-01
Oracle Span 10-11:  远远 => 远远-01

Extra span: 墙 => 墙
Extra span: 在 => 在-01
Incorrect span: 坐 => 坐-03
Incorrect span: 小 => 小
Extra span: 地 => 地
Extra span: 我 => 我
Extra span: 时候 => 时候
Incorrect span: 回来 => 回来-02
Incorrect span: 天 => (temporal-quantity :unit 天)
Missing span: 回来 => 回来-01
Missing span: 天 => 天
Missing span: 坐 => 坐-01
Missing span: 小 => 小-01
Dependencies:
1	第二	_	OD	OD	_	2	ordmod	_	_
2	天	_	M	M	_	8	clf	_	_
3	晚上	_	NT	NT	_	6	tmod	_	_
4	我	_	PN	PN	_	6	nsubj	_	_
5	工作	_	NN	NN	_	6	dep	_	_
6	回来	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	时候	_	NN	NN	_	13	nsubj	_	_
9	,	_	PU	PU	_	13	punct	_	_
10	我	_	PN	PN	_	13	nsubj	_	_
11	远远	_	VA	VA	_	13	dvpmod	_	_
12	地	_	DEV	DEV	_	11	dvpm	_	_
13	看见	_	VV	VV	_	0	root	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	小	_	JJ	JJ	_	16	amod	_	_
16	王子	_	NN	NN	_	13	dobj	_	_
17	耷拉	_	VV	VV	_	13	conj	_	_
18	着	_	AS	AS	_	17	asp	_	_
19	双腿	_	NN	NN	_	17	dobj	_	_
20	坐	_	VV	VV	_	17	conj	_	_
21	在	_	P	P	_	20	prep	_	_
22	墙	_	NN	NN	_	23	lobj	_	_
23	上	_	LC	LC	_	21	plmod	_	_
24	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 看见-01, arg0, x2 / 我)
(x0 / 看见-01, arg1, x4 / 坐-01)
(x0 / 看见-01, manner, x3 / 远远-01)
(x0 / 看见-01, time, x12 / 回来-01)
(x12 / 回来-01, arg1, x14 / 工作-01)
(x12 / 回来-01, time, x15 / 晚上)
(x15 / 晚上, time, x21 / 天)
(x4 / 坐-01, arg0, x5 / 王子)
(x4 / 坐-01, manner, x8 / 耷拉-01)
(x5 / 王子, mod, x6 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),墙,墙,false), Span(20,21,List(1),在,在-01,false), Span(19,20,List(2),坐,坐-03,false), Span(16,17,List(3),耷拉,耷拉-01,false), Span(15,16,List(4),王子,王子,false), Span(14,15,List(5),小,小,false), Span(12,13,List(6),看见,看见-01,false), Span(11,12,List(7),地,地,false), Span(10,11,List(8),远远,远远-01,false), Span(9,10,List(9),我,我,false), Span(7,8,List(10),时候,时候,false), Span(5,6,List(11),回来,回来-02,false), Span(4,5,List(12),工作,工作-01,false), Span(3,4,List(13),我,我,false), Span(2,3,List(14),晚上,晚上,false), Span(1,2,List(16, 15),天,(temporal-quantity :unit 天),false)),Map(2 -> 坐-03, 5 -> 小, 12 -> 工作-01, 15 -> temporal-quantity, 8 -> 远远-01, 7 -> 地, 1 -> 在-01, 4 -> 王子, 11 -> 回来-02, 14 -> 晚上, 6 -> 看见-01, 0 -> 墙, 9 -> 我, 16 -> 天, 3 -> 耷拉-01, 10 -> 时候, 13 -> 我),Map(在 -> 在-01, t -> temporal-quantity, 我 -> 我, 王 -> 王子, 我2 -> 我, 远 -> 远远-01, 工 -> 工作-01, 耷 -> 耷拉-01, 晚 -> 晚上, 小 -> 小, 地 -> 地, 天 -> 天, 看 -> 看见-01, 墙 -> 墙, 坐 -> 坐-03, 时 -> 时候, 回 -> 回来-02))),[Ljava.lang.String;@40d848f9,Annotation([Ljava.lang.String;@4a864d4d,[Ljava.lang.String;@7d3691e1,[Ljava.lang.String;@46a123e4),Annotation([Ljava.lang.String;@44bc2449,[Ljava.lang.String;@3c28e5b6,[Ledu.cmu.lti.nlp.amr.Dependency;@7558c24b),Annotation([Ljava.lang.String;@3a296107,[Ljava.lang.String;@1f129467,[Ljava.lang.String;@646cd766),Annotation([Ljava.lang.String;@57151b3a,[Ljava.lang.String;@26457986,[Ledu.cmu.lti.nlp.amr.Entity;@2dff7085))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(回 / 回来-02, ARG0, 工 / 工作-01)
(回 / 回来-02, op, 时 / 时候)
(回 / 回来-02, time, 晚 / 晚上)
(在 / 在-01, ARG5, 坐 / 坐-03)
(坐 / 坐-03, manner, 耷 / 耷拉-01)
(坐 / 坐-03, time, 王 / 王子)
(墙 / 墙, manner, 在 / 在-01)
(晚 / 晚上, time, 天 / 天)
(王 / 王子, mod, 小 / 小)
(看 / 看见-01, ARG1, 地 / 地)
(看 / 看见-01, manner, 远 / 远远-01)
(看 / 看见-01, op, 我 / 我)
(看 / 看见-01, time, 回 / 回来-02)
(看 / 看见-01, time, 坐 / 坐-03)
(看 / 看见-01, time, 我2 / 我)

Decoded in 96,473 microseconds
Sentence: 我 听见 他 在 说话 ： “ 你 怎么 不 记得 了 呢 ？ ”

Spans:
Span 9-10:  不 => 不
Span 2-3:  他 => 他
Span 7-8:  你 => 你
Span 1-2:  听见 => 听见-01
Span 3-4:  在 => 在-01
Span 8-9:  怎么 => 怎么
Span 0-1:  我 => 我
Span 10-11:  记得 => 记得-01
Span 4-5:  说话 => 说话-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 7-8:  你 => 你
Oracle Span 1-2:  听见 => 听见-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  记得 => 记得-01
Oracle Span 4-5:  说话 => 说话-01

Extra span: 不 => 不
Extra span: 怎么 => 怎么
Extra span: 在 => 在-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	听见	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	在	_	AD	AD	_	5	advmod	_	_
5	说话	_	VV	VV	_	2	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	11	punct	_	_
8	你	_	PN	PN	_	11	nsubj	_	_
9	怎么	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	记得	_	VV	VV	_	5	conj	_	_
12	了	_	AS	AS	_	11	asp	_	_
13	呢	_	SP	SP	_	2	dep	_	_
14	？	_	PU	PU	_	2	punct	_	_
15	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 听见-01, arg0, x2 / 我)
(x0 / 听见-01, arg1, x17 / 说话-01)
(x17 / 说话-01, arg0, x18 / 他)
(x17 / 说话-01, arg1, x19 / 记得-01)
(x19 / 记得-01, arg0, x21 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),记得,记得-01,false), Span(9,10,List(1),不,不,false), Span(8,9,List(2),怎么,怎么,false), Span(7,8,List(3),你,你,false), Span(4,5,List(4),说话,说话-01,false), Span(3,4,List(5),在,在-01,false), Span(2,3,List(6),他,他,false), Span(1,2,List(7),听见,听见-01,false), Span(0,1,List(8),我,我,false)),Map(2 -> 怎么, 5 -> 在-01, 8 -> 我, 7 -> 听见-01, 1 -> 不, 4 -> 说话-01, 6 -> 他, 0 -> 记得-01, 3 -> 你),Map(在 -> 在-01, 我 -> 我, 你 -> 你, 他 -> 他, 怎 -> 怎么, 记 -> 记得-01, 不 -> 不, 说 -> 说话-01, 听 -> 听见-01))),[Ljava.lang.String;@2faa55bb,Annotation([Ljava.lang.String;@501957bf,[Ljava.lang.String;@5d1d9d73,[Ljava.lang.String;@b30a50d),Annotation([Ljava.lang.String;@764a3e5d,[Ljava.lang.String;@6c742b84,[Ledu.cmu.lti.nlp.amr.Dependency;@5db3d57c),Annotation([Ljava.lang.String;@53a50b0a,[Ljava.lang.String;@74ba6ff5,[Ljava.lang.String;@395f52ed),Annotation([Ljava.lang.String;@7a84788f,[Ljava.lang.String;@102c18e,[Ledu.cmu.lti.nlp.amr.Entity;@26e0d39c))
AMR:
(不 / 不, mod, 怎 / 怎么)
(不 / 不, poss, 你 / 你)
(听 / 听见-01, beneficiary, 我 / 我)
(听 / 听见-01, mode, 在 / 在-01)
(在 / 在-01, ARG4, 他 / 他)
(记 / 记得-01, manner, 不 / 不)
(记 / 记得-01, polite, 说 / 说话-01)
(说 / 说话-01, manner, 在 / 在-01)

Decoded in 25,117 microseconds
Sentence: 绝 不 是 在 这儿 。 ”

Spans:
Span 1-2:  不 => 不
Span 3-4:  在 => 在-01
Span 2-3:  是 => 是-04
Span 0-1:  绝 => 绝
Span 4-5:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  绝 => 绝
Oracle Span 4-5:  这儿 => 这儿

Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 不 => 不
Dependencies:
1	绝	_	AD	AD	_	3	advmod	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	是	_	VC	VC	_	0	root	_	_
4	在	_	P	P	_	3	prep	_	_
5	这儿	_	PN	PN	_	4	pobj	_	_
6	。	_	PU	PU	_	3	punct	_	_
7	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x6 / 这儿, manner, x8 / 绝)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),这儿,这儿,false), Span(3,4,List(1),在,在-01,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),不,不,false), Span(0,1,List(4),绝,绝,false)),Map(2 -> 是-04, 1 -> 在-01, 4 -> 绝, 0 -> 这儿, 3 -> 不),Map(绝 -> 绝, 在 -> 在-01, 这 -> 这儿, 不 -> 不, 是 -> 是-04))),[Ljava.lang.String;@65eb3597,Annotation([Ljava.lang.String;@3c7279a5,[Ljava.lang.String;@2bebd114,[Ljava.lang.String;@b379bc6),Annotation([Ljava.lang.String;@374c40ba,[Ljava.lang.String;@18dcb8a7,[Ledu.cmu.lti.nlp.amr.Dependency;@6dcab9d9),Annotation([Ljava.lang.String;@5a14e60d,[Ljava.lang.String;@f882465,[Ljava.lang.String;@72ecbcb3),Annotation([Ljava.lang.String;@4a50c746,[Ljava.lang.String;@3709748f,[Ledu.cmu.lti.nlp.amr.Entity;@79ecc507))
AMR:
(在 / 在-01, manner, 是 / 是-04)
(是 / 是-04, manner, 不 / 不)
(是 / 是-04, manner, 绝 / 绝)
(这 / 这儿, manner, 在 / 在-01)

Decoded in 8,007 microseconds
Sentence: 大概 还 有 另 一 个 声音 在 回答 他 ， 因为 他 答 着 腔 说道 ： “ 没错 ， 没错 ，

Spans:
Span 12-13:  他 => 他
Span 9-10:  他 => 他
Span 3-4:  另 => 另
Span 8-9:  回答 => 回答-01
Span 7-8:  在 => 在-01
Span 6-7:  声音 => 声音
Span 0-1:  大概 => 大概
Span 2-3:  有 => 有-06
Span 21-22:  没错 => 没错-01
Span 19-20:  没错 => 没错-01
Span 13-14:  答 => 答-02
Span 16-17:  说道 => 说道
Span 1-2:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  他 => 他
Oracle Span 3-4:  另 => 另
Oracle Span 8-9:  回答 => 回答-01
Oracle Span 6-7:  声音 => 声音
Oracle Span 0-1:  大概 => 大概
Oracle Span 19-20:  没错 => 没错-01
Oracle Span 21-22:  没错 => 没错-01
Oracle Span 13-14:  答 => 答-02

Extra span: 说道 => 说道
Extra span: 他 => 他
Extra span: 在 => 在-01
Extra span: 有 => 有-06
Extra span: 还 => 还
Dependencies:
1	大概	_	AD	AD	_	3	advmod	_	_
2	还	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	另	_	DT	DT	_	7	det	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	4	dep	_	_
7	声音	_	NN	NN	_	9	nsubj	_	_
8	在	_	AD	AD	_	9	advmod	_	_
9	回答	_	VV	VV	_	3	dep	_	_
10	他	_	PN	PN	_	17	nsubj	_	_
11	,	_	PU	PU	_	17	punct	_	_
12	因为	_	P	P	_	17	prep	_	_
13	他	_	PN	PN	_	14	nsubj	_	_
14	答	_	VV	VV	_	12	pccomp	_	_
15	着	_	AS	AS	_	14	asp	_	_
16	腔	_	M	M	_	14	dobj	_	_
17	说道	_	VV	VV	_	3	dep	_	_
18	：	_	PU	PU	_	17	punct	_	_
19	“	_	PU	PU	_	22	punct	_	_
20	没错	_	NN	NN	_	22	nsubj	_	_
21	,	_	PU	PU	_	22	punct	_	_
22	没错	_	VV	VV	_	17	ccomp	_	_
23	,	_	PU	PU	_	17	punct	_	_

Oracle:
(x19 / 答-02, arg0, x20 / 他)
(x24 / 回答-01, arg0, x25 / 声音)
(x24 / 回答-01, manner, x30 / 大概)
(x25 / 声音, mod, x27 / 另)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),没错,没错-01,false), Span(19,20,List(1),没错,没错-01,false), Span(16,17,List(2),说道,说道,false), Span(13,14,List(3),答,答-02,false), Span(12,13,List(4),他,他,false), Span(9,10,List(5),他,他,false), Span(8,9,List(6),回答,回答-01,false), Span(7,8,List(7),在,在-01,false), Span(6,7,List(8),声音,声音,false), Span(3,4,List(9),另,另,false), Span(2,3,List(10),有,有-06,false), Span(1,2,List(11),还,还,false), Span(0,1,List(12),大概,大概,false)),Map(2 -> 说道, 5 -> 他, 12 -> 大概, 8 -> 声音, 7 -> 在-01, 1 -> 没错-01, 4 -> 他, 11 -> 还, 6 -> 回答-01, 0 -> 没错-01, 9 -> 另, 3 -> 答-02, 10 -> 有-06),Map(没 -> 没错-01, 他2 -> 他, 在 -> 在-01, 另 -> 另, 没2 -> 没错-01, 大 -> 大概, 他 -> 他, 说 -> 说道, 还 -> 还, 声 -> 声音, 答 -> 答-02, 回 -> 回答-01, 有 -> 有-06))),[Ljava.lang.String;@6ef2f7ad,Annotation([Ljava.lang.String;@22d477c2,[Ljava.lang.String;@5e85c21b,[Ljava.lang.String;@41def031),Annotation([Ljava.lang.String;@38e83838,[Ljava.lang.String;@39832280,[Ledu.cmu.lti.nlp.amr.Dependency;@4966bab1),Annotation([Ljava.lang.String;@7f0f84d4,[Ljava.lang.String;@6df4af5,[Ljava.lang.String;@26e8ff8c),Annotation([Ljava.lang.String;@5aa76ad2,[Ljava.lang.String;@590d6c76,[Ledu.cmu.lti.nlp.amr.Entity;@25791d40))
AMR:
(回 / 回答-01, manner, 在 / 在-01)
(回 / 回答-01, season, 他2 / 他)
(在 / 在-01, manner, 声 / 声音)
(声 / 声音, mod, 另 / 另)
(有 / 有-06, manner, 大 / 大概)
(有 / 有-06, manner, 还 / 还)
(有 / 有-06, mod, 另 / 另)
(没 / 没错-01, degree, 没2 / 没错-01)
(答 / 答-02, manner, 在 / 在-01)
(答 / 答-02, prep-on-behalf, 他 / 他)
(说 / 说道, manner, 答 / 答-02)
(说 / 说道, snt1, 没2 / 没错-01)

Decoded in 50,665 microseconds
Sentence: 日子 是 对 的 ； 但 地点 不 是 这里 … ”

Spans:
Span 4-5:  ; => and
Span 7-8:  不 => 不
Span 6-7:  地点 => 地点
Span 2-3:  对 => 对-02
Span 0-1:  日子 => (temporal-quantity :unit 日子)
Span 8-9:  是 => 是-04
Span 1-2:  是 => 是-04
Span 9-10:  这里 => 这里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  地点 => 地点
Oracle Span 2-3:  对 => 对-02
Oracle Span 0-1:  日子 => 日子
Oracle Span 9-10:  这里 => 这里

Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: ; => and
Extra span: 是 => 是-04
Incorrect span: 日子 => (temporal-quantity :unit 日子)
Missing span: 日子 => 日子
Dependencies:
1	日子	_	NN	NN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	对	_	VA	VA	_	2	attr	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	；	_	PU	PU	_	2	punct	_	_
6	但	_	AD	AD	_	9	advmod	_	_
7	地点	_	NN	NN	_	9	nsubj	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	2	conj	_	_
10	这里	_	PN	PN	_	9	attr	_	_
11	…	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x10 / 对-02, arg0, x11 / 日子)
(x12 / 这里, domain, x14 / 地点)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),这里,这里,false), Span(8,9,List(1),是,是-04,false), Span(7,8,List(2),不,不,false), Span(6,7,List(3),地点,地点,false), Span(4,5,List(4),;,and,false), Span(2,3,List(5),对,对-02,false), Span(1,2,List(6),是,是-04,false), Span(0,1,List(8, 7),日子,(temporal-quantity :unit 日子),false)),Map(2 -> 不, 5 -> 对-02, 8 -> 日子, 7 -> temporal-quantity, 1 -> 是-04, 4 -> and, 6 -> 是-04, 0 -> 这里, 3 -> 地点),Map(t -> temporal-quantity, 这 -> 这里, a -> and, 地 -> 地点, 不 -> 不, 日 -> 日子, 对 -> 对-02, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@448c92fc,Annotation([Ljava.lang.String;@251c8145,[Ljava.lang.String;@17c0274c,[Ljava.lang.String;@7abeabe9),Annotation([Ljava.lang.String;@5a05dd30,[Ljava.lang.String;@1b52699c,[Ledu.cmu.lti.nlp.amr.Dependency;@dbed7fd),Annotation([Ljava.lang.String;@250d440,[Ljava.lang.String;@76c86567,[Ljava.lang.String;@7e5efcab),Annotation([Ljava.lang.String;@5a4dda2,[Ljava.lang.String;@1d2fb82,[Ledu.cmu.lti.nlp.amr.Entity;@34045582))
AMR:
(a / and, domain, 是2 / 是-04)
(a / and, op, 不 / 不)
(t / temporal-quantity, unit, 日 / 日子)
(不 / 不, domain, 地 / 地点)
(对 / 对-02, manner, 是2 / 是-04)
(日 / 日子, manner, 是2 / 是-04)
(是 / 是-04, domain, 这 / 这里)
(是 / 是-04, manner, 不 / 不)

Decoded in 22,616 microseconds
Sentence: 我 继续 朝 墙 走去 。

Spans:
Span 3-4:  墙 => 墙
Span 0-1:  我 => 我
Span 1-2:  继续 => 继续-01
Span 4-5:  走去 => 走去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  墙 => 墙
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  继续 => 继续-01

Extra span: 走去 => 走去-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	继续	_	VV	VV	_	5	mmod	_	_
3	朝	_	P	P	_	5	prep	_	_
4	墙	_	NN	NN	_	3	pobj	_	_
5	走去	_	VV	VV	_	0	root	_	_
6	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x5 / 继续-01, arg0, x7 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),走去,走去-01,false), Span(3,4,List(1),墙,墙,false), Span(1,2,List(2),继续,继续-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 继续-01, 1 -> 墙, 0 -> 走去-01, 3 -> 我),Map(我 -> 我, 走 -> 走去-01, 墙 -> 墙, 继 -> 继续-01))),[Ljava.lang.String;@3db65c0d,Annotation([Ljava.lang.String;@1edccfd4,[Ljava.lang.String;@8c43966,[Ljava.lang.String;@1efac5b9),Annotation([Ljava.lang.String;@11a3a45f,[Ljava.lang.String;@69796bd0,[Ledu.cmu.lti.nlp.amr.Dependency;@40df6090),Annotation([Ljava.lang.String;@8c0a23f,[Ljava.lang.String;@44d7e24,[Ljava.lang.String;@26c8b296),Annotation([Ljava.lang.String;@1d289d3f,[Ljava.lang.String;@10f405ff,[Ledu.cmu.lti.nlp.amr.Entity;@7f27f59b))
AMR:
(继 / 继续-01, ARG3, 走 / 走去-01)
(继 / 继续-01, medium, 我 / 我)
(走 / 走去-01, instrument, 墙 / 墙)

Decoded in 6,251 microseconds
Sentence: 我 还是 看 不 到 ， 也 听 不 见 任何 别人 。

Spans:
Span 8-9:  不 => 不
Span 3-4:  不 => 不
Span 6-7:  也 => 也
Span 10-11:  任何 => 任何
Span 11-12:  别人 => 别人
Span 4-5:  到 => 到-01
Span 7-8:  听 => 听-02
Span 0-1:  我 => 我
Span 2-3:  看 => 看-10
Span 9-10:  见 => 见-01
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  也 => 也
Oracle Span 10-11:  任何 => 任何
Oracle Span 11-12:  别人 => 别人
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  还是 => 还是

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 听 => 听-02
Extra span: 到 => 到-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	看	_	VV	VV	_	0	root	_	_
4	不	_	AD	AD	_	3	dep	_	_
5	到	_	VV	VV	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	也	_	AD	AD	_	8	advmod	_	_
8	听	_	VV	VV	_	3	dep	_	_
9	不	_	AD	AD	_	10	neg	_	_
10	见	_	VV	VV	_	8	dep	_	_
11	任何	_	DT	DT	_	12	det	_	_
12	别人	_	NN	NN	_	10	dobj	_	_
13	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 别人, mod, x8 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),别人,别人,false), Span(10,11,List(1),任何,任何,false), Span(9,10,List(2),见,见-01,false), Span(8,9,List(3),不,不,false), Span(7,8,List(4),听,听-02,false), Span(6,7,List(5),也,也,false), Span(4,5,List(6),到,到-01,false), Span(3,4,List(7),不,不,false), Span(2,3,List(8),看,看-10,false), Span(1,2,List(9),还是,还是,false), Span(0,1,List(10),我,我,false)),Map(2 -> 见-01, 5 -> 也, 8 -> 看-10, 7 -> 不, 1 -> 任何, 4 -> 听-02, 6 -> 到-01, 9 -> 还是, 0 -> 别人, 10 -> 我, 3 -> 不),Map(任 -> 任何, 我 -> 我, 也 -> 也, 别 -> 别人, 不2 -> 不, 到 -> 到-01, 不 -> 不, 还 -> 还是, 看 -> 看-10, 听 -> 听-02, 见 -> 见-01))),[Ljava.lang.String;@1c98b4eb,Annotation([Ljava.lang.String;@45801322,[Ljava.lang.String;@756b2d90,[Ljava.lang.String;@3520958b),Annotation([Ljava.lang.String;@6cc64028,[Ljava.lang.String;@291a4791,[Ledu.cmu.lti.nlp.amr.Dependency;@5b1e88f),Annotation([Ljava.lang.String;@340cb97f,[Ljava.lang.String;@6a1568d6,[Ljava.lang.String;@11c88cca),Annotation([Ljava.lang.String;@1b37fbec,[Ljava.lang.String;@4a216eb4,[Ledu.cmu.lti.nlp.amr.Entity;@bb3ecfe))
AMR:
(不2 / 不, ARG4, 看 / 看-10)
(不2 / 不, location, 我 / 我)
(别 / 别人, mod, 任 / 任何)
(到 / 到-01, ARG0, 听 / 听-02)
(到 / 到-01, manner, 不2 / 不)
(听 / 听-02, ARG0, 不 / 不)
(听 / 听-02, manner, 也 / 也)
(见 / 见-01, manner, 不 / 不)
(见 / 见-01, op, 别 / 别人)
(还 / 还是, ARG4, 不2 / 不)

Decoded in 34,424 microseconds
Sentence: 可是 小 王子 又 回答 道 ： “ … 那 当然 。

Spans:
Span 3-4:  又 => 又
Span 4-5:  回答 => 回答-01
Span 1-2:  小 => 小
Span 10-11:  当然 => 当然
Span 2-3:  王子 => 王子
Span 5-6:  道 => 道-01
Span 9-10:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  回答 => 回答-01
Oracle Span 1-2:  小 => 小-01
Oracle Span 10-11:  当然 => 当然
Oracle Span 2-3:  王子 => 王子
Oracle Span 9-10:  那 => 那

Extra span: 道 => 道-01
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	可是	_	AD	AD	_	5	advmod	_	_
2	小	_	JJ	JJ	_	3	amod	_	_
3	王子	_	NN	NN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	回答	_	VV	VV	_	0	root	_	_
6	道	_	NN	NN	_	5	dobj	_	_
7	：	_	PU	PU	_	5	punct	_	_
8	“	_	PU	PU	_	5	punct	_	_
9	…	_	PU	PU	_	11	dep	_	_
10	那	_	PN	PN	_	11	advmod	_	_
11	当然	_	AD	AD	_	5	conj	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 王子)
(x2 / 回答-01, arg2, x6 / 当然)
(x2 / 回答-01, manner, x5 / 又)
(x3 / 王子, mod, x4 / 小-01)
(x6 / 当然, mod, x7 / 那)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),当然,当然,false), Span(9,10,List(1),那,那,false), Span(5,6,List(2),道,道-01,false), Span(4,5,List(3),回答,回答-01,false), Span(3,4,List(4),又,又,false), Span(2,3,List(5),王子,王子,false), Span(1,2,List(6),小,小,false)),Map(2 -> 道-01, 5 -> 王子, 1 -> 那, 4 -> 又, 6 -> 小, 0 -> 当然, 3 -> 回答-01),Map(又 -> 又, 王 -> 王子, 小 -> 小, 道 -> 道-01, 那 -> 那, 回 -> 回答-01, 当 -> 当然))),[Ljava.lang.String;@5ec88f9e,Annotation([Ljava.lang.String;@7a04f730,[Ljava.lang.String;@3b11620a,[Ljava.lang.String;@2fd1ad8a),Annotation([Ljava.lang.String;@357f6391,[Ljava.lang.String;@689faf79,[Ledu.cmu.lti.nlp.amr.Dependency;@582e9152),Annotation([Ljava.lang.String;@7a31ca20,[Ljava.lang.String;@349c4d1c,[Ljava.lang.String;@21edd891),Annotation([Ljava.lang.String;@de579ff,[Ljava.lang.String;@7971c2a9,[Ledu.cmu.lti.nlp.amr.Entity;@2fd39436))
AMR:
(回 / 回答-01, manner, 又 / 又)
(当 / 当然, mod, 那 / 那)
(王 / 王子, mod, 小 / 小)
(道 / 道-01, manner, 回 / 回答-01)
(道 / 道-01, op, 当 / 当然)
(道 / 道-01, prep-on-behalf, 王 / 王子)

Decoded in 16,666 microseconds
Sentence: 你 会 在 沙 上 看到 我 的 脚印 是 从 什么 地方 开始 的 。

Spans:
Span 11-12:  什么 => 什么
Span 1-2:  会 => 会-03
Span 0-1:  你 => 你
Span 2-3:  在 => 在-01
Span 12-13:  地方 => 地方
Span 13-14:  开始 => 开始
Span 6-7:  我 => 我
Span 9-10:  是 => 是-04
Span 3-4:  沙 => 沙
Span 5-6:  看到 => (thing :arg1-of 看到-01)
Span 8-9:  脚印 => 脚印

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 你 在 那里 等 着 我 就 行 了 。

Spans:
Span 0-1:  你 => 你
Span 1-2:  在 => 在-01
Span 6-7:  就 => 就-01
Span 5-6:  我 => 我
Span 3-4:  等 => 等-01
Span 7-8:  行 => 行-04
Span 2-3:  那里 => 那里

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  就 => 就
Oracle Span 5-6:  我 => 我
Oracle Span 3-4:  等 => 等-01
Oracle Span 7-8:  行 => 行-04
Oracle Span 2-3:  那里 => 那里

Incorrect span: 就 => 就-01
Extra span: 在 => 在-01
Missing span: 就 => 就
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	那里	_	PN	PN	_	2	pobj	_	_
4	等	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	8	nsubj	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	行	_	VV	VV	_	4	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x5 / 行-04, arg0, x8 / 等-01)
(x5 / 行-04, manner, x7 / 就)
(x8 / 等-01, arg0, x9 / 你)
(x8 / 等-01, arg1, x10 / 我)
(x8 / 等-01, location, x11 / 那里)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),行,行-04,false), Span(6,7,List(1),就,就-01,false), Span(5,6,List(2),我,我,false), Span(3,4,List(3),等,等-01,false), Span(2,3,List(4),那里,那里,false), Span(1,2,List(5),在,在-01,false), Span(0,1,List(6),你,你,false)),Map(2 -> 我, 5 -> 在-01, 1 -> 就-01, 4 -> 那里, 6 -> 你, 0 -> 行-04, 3 -> 等-01),Map(就 -> 就-01, 在 -> 在-01, 我 -> 我, 你 -> 你, 等 -> 等-01, 那 -> 那里, 行 -> 行-04))),[Ljava.lang.String;@46394f65,Annotation([Ljava.lang.String;@31aab981,[Ljava.lang.String;@26be9a6,[Ljava.lang.String;@4d518c66),Annotation([Ljava.lang.String;@411fa0ce,[Ljava.lang.String;@251d7fdd,[Ledu.cmu.lti.nlp.amr.Dependency;@78e68401),Annotation([Ljava.lang.String;@391515c7,[Ljava.lang.String;@5b0dbfb,[Ljava.lang.String;@4b9dbf07),Annotation([Ljava.lang.String;@797fcf9,[Ljava.lang.String;@16bd7ae1,[Ledu.cmu.lti.nlp.amr.Entity;@15d114ce))
AMR:
(在 / 在-01, ARG0, 那 / 那里)
(在 / 在-01, ARG4, 你 / 你)
(在 / 在-01, degree, 等 / 等-01)
(等 / 等-01, op, 我 / 我)
(行 / 行-04, ARG3, 等 / 等-01)
(行 / 行-04, manner, 就 / 就-01)

Decoded in 19,542 microseconds
Sentence: 今天 夜里 我 去 那里 。 ”

Spans:
Span 0-1:  今天 => 今天
Span 3-4:  去 => 去-02
Span 1-2:  夜里 => 夜里
Span 2-3:  我 => 我
Span 4-5:  那里 => 那里

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  今天 => 今天
Oracle Span 3-4:  去 => 去-01
Oracle Span 1-2:  夜里 => 夜里
Oracle Span 2-3:  我 => 我
Oracle Span 4-5:  那里 => 那里

Incorrect span: 去 => 去-02
Missing span: 去 => 去-01
Dependencies:
1	今天	_	NT	NT	_	2	tmod	_	_
2	夜里	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	2	dobj	_	_
4	去	_	VV	VV	_	2	dep	_	_
5	那里	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	2	punct	_	_
7	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 夜里, time, x13 / 今天)
(x8 / 去-01, arg0, x9 / 我)
(x8 / 去-01, arg1, x10 / 那里)
(x8 / 去-01, time, x11 / 夜里)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),那里,那里,false), Span(3,4,List(1),去,去-02,false), Span(2,3,List(2),我,我,false), Span(1,2,List(3),夜里,夜里,false), Span(0,1,List(4),今天,今天,false)),Map(2 -> 我, 1 -> 去-02, 4 -> 今天, 0 -> 那里, 3 -> 夜里),Map(夜 -> 夜里, 我 -> 我, 今 -> 今天, 去 -> 去-02, 那 -> 那里))),[Ljava.lang.String;@3312f4f4,Annotation([Ljava.lang.String;@b5aa65b,[Ljava.lang.String;@76cdafa3,[Ljava.lang.String;@6b27b2d0),Annotation([Ljava.lang.String;@4fb64e14,[Ljava.lang.String;@118041c7,[Ledu.cmu.lti.nlp.amr.Dependency;@a2b54e3),Annotation([Ljava.lang.String;@5c4cc644,[Ljava.lang.String;@21f7e537,[Ljava.lang.String;@32ea16b7),Annotation([Ljava.lang.String;@62b6c045,[Ljava.lang.String;@58f254b1,[Ledu.cmu.lti.nlp.amr.Entity;@46b2dcc5))
AMR:
(去 / 去-02, time, 夜 / 夜里)
(去 / 去-02, time, 我 / 我)
(夜 / 夜里, time, 今 / 今天)
(那 / 那里, time, 去 / 去-02)

Decoded in 8,725 microseconds
Sentence: 我 离 墙 约 有 二十 米 远 ， 可 我 依然 什么 也 没有 看见 。

Spans:
Span 13-14:  也 => 也
Span 12-13:  什么 => 什么
Span 11-12:  依然 => 依然-01
Span 9-10:  可 => 可-01
Span 2-3:  墙 => 墙
Span 10-11:  我 => 我
Span 0-1:  我 => 我
Span 4-5:  有 => 有-06
Span 15-16:  看见 => 看见-01
Span 1-2:  离 => 离-02
Span 6-7:  米 => (distance-quantity :unit 米)
Span 3-4:  约 => 约
Span 7-8:  远 => 远

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  也 => 也
Oracle Span 12-13:  什么 => 什么
Oracle Span 11-12:  依然 => 依然
Oracle Span 2-3:  墙 => 墙
Oracle Span 0-1:  我 => 我
Oracle Span 15-16:  看见 => 看见-01
Oracle Span 1-2:  离 => 离-02
Oracle Span 6-7:  米 => (distance-quantity :unit 米)
Oracle Span 3-4:  约 => 约

Incorrect span: 依然 => 依然-01
Extra span: 我 => 我
Extra span: 可 => 可-01
Extra span: 远 => 远
Extra span: 有 => 有-06
Missing span: 依然 => 依然
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	离	_	P	P	_	5	prep	_	_
3	墙	_	NN	NN	_	2	pobj	_	_
4	约	_	AD	AD	_	5	advmod	_	_
5	有	_	VE	VE	_	0	root	_	_
6	二十	_	CD	CD	_	7	nummod	_	_
7	米	_	M	M	_	8	clf	_	_
8	远	_	NN	NN	_	5	dobj	_	_
9	,	_	PU	PU	_	5	punct	_	_
10	可	_	VV	VV	_	16	dep	_	_
11	我	_	PN	PN	_	16	nsubj	_	_
12	依然	_	AD	AD	_	16	advmod	_	_
13	什么	_	PN	PN	_	16	nsubj	_	_
14	也	_	AD	AD	_	16	advmod	_	_
15	没有	_	VV	VV	_	16	dep	_	_
16	看见	_	VV	VV	_	5	conj	_	_
17	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x15 / 约, op, x16 / distance-quantity)
(x16 / distance-quantity, unit, x18 / 米)
(x2 / 离-02, arg0, x3 / 我)
(x2 / 离-02, arg1, x4 / 墙)
(x2 / 离-02, arg2, x15 / 约)
(x8 / 看见-01, arg1, x13 / 什么)
(x8 / 看见-01, manner, x11 / 也)
(x8 / 看见-01, manner, x12 / 依然)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),看见,看见-01,false), Span(13,14,List(1),也,也,false), Span(12,13,List(2),什么,什么,false), Span(11,12,List(3),依然,依然-01,false), Span(10,11,List(4),我,我,false), Span(9,10,List(5),可,可-01,false), Span(7,8,List(6),远,远,false), Span(6,7,List(8, 7),米,(distance-quantity :unit 米),false), Span(4,5,List(9),有,有-06,false), Span(3,4,List(10),约,约,false), Span(2,3,List(11),墙,墙,false), Span(1,2,List(12),离,离-02,false), Span(0,1,List(13),我,我,false)),Map(2 -> 什么, 5 -> 可-01, 12 -> 离-02, 8 -> 米, 7 -> distance-quantity, 1 -> 也, 4 -> 我, 11 -> 墙, 6 -> 远, 0 -> 看见-01, 9 -> 有-06, 3 -> 依然-01, 10 -> 约, 13 -> 我),Map(也 -> 也, 我 -> 我, 我2 -> 我, 远 -> 远, d -> distance-quantity, 约 -> 约, 离 -> 离-02, 看 -> 看见-01, 墙 -> 墙, 什 -> 什么, 米 -> 米, 依 -> 依然-01, 可 -> 可-01, 有 -> 有-06))),[Ljava.lang.String;@240f350a,Annotation([Ljava.lang.String;@706f6d26,[Ljava.lang.String;@3af2f846,[Ljava.lang.String;@6af65f29),Annotation([Ljava.lang.String;@370c9018,[Ljava.lang.String;@3c81cd82,[Ledu.cmu.lti.nlp.amr.Dependency;@111c229c),Annotation([Ljava.lang.String;@49cb3881,[Ljava.lang.String;@1a14fdf0,[Ljava.lang.String;@284bdeed),Annotation([Ljava.lang.String;@58b311ba,[Ljava.lang.String;@482c351d,[Ledu.cmu.lti.nlp.amr.Entity;@75eaba95))
AMR:
(d / distance-quantity, unit, 米 / 米)
(可 / 可-01, ARG3, 依 / 依然-01)
(可 / 可-01, ARG6, 我 / 我)
(有 / 有-06, ARG0, 墙 / 墙)
(有 / 有-06, ARG3, 可 / 可-01)
(有 / 有-06, manner, 约 / 约)
(看 / 看见-01, manner, 也 / 也)
(看 / 看见-01, manner, 依 / 依然-01)
(看 / 看见-01, season, 什 / 什么)
(离 / 离-02, ARG0, 我2 / 我)
(离 / 离-02, instrument, 墙 / 墙)
(约 / 约, op, d / distance-quantity)
(远 / 远, ARG4, d / distance-quantity)

Decoded in 73,684 microseconds
Sentence: 小 王子 沉默 了 一会 又 说 ： “ 你 的 毒液 管用 吗 ？

Spans:
Span 4-5:  一会 => 一会
Span 9-10:  你 => 你
Span 5-6:  又 => 又
Span 0-1:  小 => 小
Span 11-12:  毒液 => 毒液
Span 2-3:  沉默 => 沉默-01
Span 1-2:  王子 => 王子
Span 12-13:  管用 => 管用-01
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一会 => 一会
Oracle Span 9-10:  你 => 你
Oracle Span 5-6:  又 => 又
Oracle Span 0-1:  小 => 小-01
Oracle Span 11-12:  毒液 => 毒液
Oracle Span 2-3:  沉默 => 沉默-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 12-13:  管用 => 管用-01
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Missing span: 说 => 说-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	3	nsubj	_	_
3	沉默	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一会	_	CD	CD	_	3	dep	_	_
6	又	_	AD	AD	_	7	advmod	_	_
7	说	_	VV	VV	_	3	conj	_	_
8	：	_	PU	PU	_	7	punct	_	_
9	“	_	PU	PU	_	7	punct	_	_
10	你	_	PN	PN	_	12	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	毒液	_	NN	NN	_	13	nsubj	_	_
13	管用	_	VV	VV	_	7	ccomp	_	_
14	吗	_	SP	SP	_	3	dep	_	_
15	？	_	PU	PU	_	3	punct	_	_

Oracle:
(x14 / 沉默-01, arg0, x15 / 王子)
(x14 / 沉默-01, duration, x17 / 一会)
(x15 / 王子, mod, x16 / 小-01)
(x18 / 说-01, arg1, x20 / 管用-01)
(x18 / 说-01, manner, x24 / 又)
(x20 / 管用-01, arg0, x21 / 毒液)
(x21 / 毒液, poss, x22 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),管用,管用-01,false), Span(11,12,List(1),毒液,毒液,false), Span(9,10,List(2),你,你,false), Span(6,7,List(3),说,说-02,false), Span(5,6,List(4),又,又,false), Span(4,5,List(5),一会,一会,false), Span(2,3,List(6),沉默,沉默-01,false), Span(1,2,List(7),王子,王子,false), Span(0,1,List(8),小,小,false)),Map(2 -> 你, 5 -> 一会, 8 -> 小, 7 -> 王子, 1 -> 毒液, 4 -> 又, 6 -> 沉默-01, 0 -> 管用-01, 3 -> 说-02),Map(又 -> 又, 管 -> 管用-01, 沉 -> 沉默-01, 毒 -> 毒液, 王 -> 王子, 你 -> 你, 小 -> 小, 说 -> 说-02, 一 -> 一会))),[Ljava.lang.String;@320be73,Annotation([Ljava.lang.String;@435e416c,[Ljava.lang.String;@6af310c7,[Ljava.lang.String;@4aed311e),Annotation([Ljava.lang.String;@4c38cd16,[Ljava.lang.String;@7ddcb0dc,[Ledu.cmu.lti.nlp.amr.Dependency;@f5bf288),Annotation([Ljava.lang.String;@2c1d57bc,[Ljava.lang.String;@26c77f54,[Ljava.lang.String;@3e856100),Annotation([Ljava.lang.String;@6e9a0bea,[Ljava.lang.String;@28fc1132,[Ledu.cmu.lti.nlp.amr.Entity;@355ce6a6))
AMR:
(毒 / 毒液, poss, 你 / 你)
(沉 / 沉默-01, duration, 一 / 一会)
(沉 / 沉默-01, value, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(管 / 管用-01, mod, 毒 / 毒液)
(说 / 说-02, manner, 又 / 又)
(说 / 说-02, poss, 一 / 一会)
(说 / 说-02, purpose, 管 / 管用-01)

Decoded in 35,693 microseconds
Sentence: 你 保证 不 会 使 我 长时间 地 痛苦 吗 ？ ”

Spans:
Span 2-3:  不 => 不
Span 3-4:  会 => 会-03
Span 0-1:  你 => 你
Span 4-5:  使 => 使-01
Span 1-2:  保证 => 保证-01
Span 7-8:  地 => 地
Span 5-6:  我 => 我
Span 8-9:  痛苦 => 痛苦-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  会 => 会-01
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  使 => 使-01
Oracle Span 1-2:  保证 => 保证-01
Oracle Span 5-6:  我 => 我
Oracle Span 8-9:  痛苦 => 痛苦-01

Extra span: 地 => 地
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Missing span: 会 => 会-01
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	保证	_	VV	VV	_	0	root	_	_
3	不	_	AD	AD	_	5	neg	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	使	_	VV	VV	_	2	ccomp	_	_
6	我	_	PN	PN	_	5	dobj	_	_
7	长时间	_	VA	VA	_	9	dvpmod	_	_
8	地	_	DEV	DEV	_	7	dvpm	_	_
9	痛苦	_	VA	VA	_	5	dep	_	_
10	吗	_	SP	SP	_	2	dep	_	_
11	？	_	PU	PU	_	2	punct	_	_
12	”	_	PU	PU	_	2	punct	_	_
13	你	_	PN	PN	_	5	xsubj	_	_

Oracle:
(x13 / 保证-01, arg0, x14 / 你)
(x13 / 保证-01, arg1, x15 / 会-01)
(x15 / 会-01, arg0, x17 / 使-01)
(x17 / 使-01, arg1, x18 / 我)
(x17 / 使-01, arg2, x19 / 痛苦-01)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),痛苦,痛苦-01,false), Span(7,8,List(1),地,地,false), Span(5,6,List(2),我,我,false), Span(4,5,List(3),使,使-01,false), Span(3,4,List(4),会,会-03,false), Span(2,3,List(5),不,不,false), Span(1,2,List(6),保证,保证-01,false), Span(0,1,List(7),你,你,false)),Map(2 -> 我, 5 -> 不, 7 -> 你, 1 -> 地, 4 -> 会-03, 6 -> 保证-01, 0 -> 痛苦-01, 3 -> 使-01),Map(我 -> 我, 你 -> 你, 痛 -> 痛苦-01, 保 -> 保证-01, 地 -> 地, 不 -> 不, 会 -> 会-03, 使 -> 使-01))),[Ljava.lang.String;@20440c6c,Annotation([Ljava.lang.String;@1e3f86d5,[Ljava.lang.String;@560271a1,[Ljava.lang.String;@4b9c411),Annotation([Ljava.lang.String;@41e9f86,[Ljava.lang.String;@66f5b8fe,[Ledu.cmu.lti.nlp.amr.Dependency;@233f52f8),Annotation([Ljava.lang.String;@69ec93c2,[Ljava.lang.String;@19fec3d6,[Ljava.lang.String;@5287ba5f),Annotation([Ljava.lang.String;@b768a65,[Ljava.lang.String;@6897a4a,[Ledu.cmu.lti.nlp.amr.Entity;@6986f93e))
AMR:
(会 / 会-03, manner, 不 / 不)
(使 / 使-01, accompanier, 我 / 我)
(使 / 使-01, manner, 会 / 会-03)
(保 / 保证-01, location, 不 / 不)
(保 / 保证-01, manner, 你 / 你)
(地 / 地, accompanier, 痛 / 痛苦-01)
(地 / 地, quant, 使 / 使-01)

Decoded in 24,664 microseconds
Sentence: 我 焦虑 地 赶上 前 去 ， 但 我 仍然 不 明白 是 怎么 回 事 。

Spans:
Span 10-11:  不 => 不
Span 15-16:  事 => 事
Span 9-10:  仍然 => 仍然
Span 4-5:  前 => 前
Span 5-6:  去 => 去-02
Span 14-15:  回 => 回
Span 2-3:  地 => 地
Span 13-14:  怎么 => 怎么
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 11-12:  明白 => 明白-01
Span 12-13:  是 => 是-04
Span 1-2:  焦虑 => 焦虑-01
Span 3-4:  赶上 => 赶上-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 15-16:  事 => 事
Oracle Span 9-10:  仍然 => 仍然
Oracle Span 4-5:  前 => 前
Oracle Span 0-1:  我 => 我
Oracle Span 11-12:  明白 => 明白-01
Oracle Span 1-2:  焦虑 => 焦虑-01

Extra span: 回 => 回
Extra span: 怎么 => 怎么
Extra span: 是 => 是-04
Extra span: 不 => 不
Extra span: 我 => 我
Extra span: 去 => 去-02
Extra span: 赶上 => 赶上-01
Extra span: 地 => 地
Dependencies:
1	我	_	PN	PN	_	6	nsubj	_	_
2	焦虑	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	赶上	_	VV	VV	_	5	lccomp	_	_
5	前	_	LC	LC	_	6	loc	_	_
6	去	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	但	_	AD	AD	_	12	advmod	_	_
9	我	_	PN	PN	_	12	nsubj	_	_
10	仍然	_	AD	AD	_	12	advmod	_	_
11	不	_	AD	AD	_	12	neg	_	_
12	明白	_	VV	VV	_	6	conj	_	_
13	是	_	VC	VC	_	15	cop	_	_
14	怎么	_	AD	AD	_	15	advmod	_	_
15	回	_	VV	VV	_	12	ccomp	_	_
16	事	_	NN	NN	_	15	dobj	_	_
17	。	_	PU	PU	_	6	punct	_	_
18	我	_	PN	PN	_	15	xsubj	_	_

Oracle:
(x6 / 明白-01, arg1, x9 / 事)
(x6 / 明白-01, manner, x11 / 仍然)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),事,事,false), Span(14,15,List(1),回,回,false), Span(13,14,List(2),怎么,怎么,false), Span(12,13,List(3),是,是-04,false), Span(11,12,List(4),明白,明白-01,false), Span(10,11,List(5),不,不,false), Span(9,10,List(6),仍然,仍然,false), Span(8,9,List(7),我,我,false), Span(5,6,List(8),去,去-02,false), Span(4,5,List(9),前,前,false), Span(3,4,List(10),赶上,赶上-01,false), Span(2,3,List(11),地,地,false), Span(1,2,List(12),焦虑,焦虑-01,false), Span(0,1,List(13),我,我,false)),Map(2 -> 怎么, 5 -> 不, 12 -> 焦虑-01, 8 -> 去-02, 7 -> 我, 1 -> 回, 4 -> 明白-01, 11 -> 地, 6 -> 仍然, 0 -> 事, 9 -> 前, 3 -> 是-04, 10 -> 赶上-01, 13 -> 我),Map(我 -> 我, 焦 -> 焦虑-01, 我2 -> 我, 去 -> 去-02, 仍 -> 仍然, 怎 -> 怎么, 地 -> 地, 事 -> 事, 不 -> 不, 赶 -> 赶上-01, 明 -> 明白-01, 前 -> 前, 回 -> 回, 是 -> 是-04))),[Ljava.lang.String;@6bce313,Annotation([Ljava.lang.String;@39266403,[Ljava.lang.String;@74b00247,[Ljava.lang.String;@2aa14ae6),Annotation([Ljava.lang.String;@4be490da,[Ljava.lang.String;@4168f3d9,[Ledu.cmu.lti.nlp.amr.Dependency;@353e6389),Annotation([Ljava.lang.String;@15e8f9b2,[Ljava.lang.String;@7a65c995,[Ljava.lang.String;@7c950b3b),Annotation([Ljava.lang.String;@3af10d0b,[Ljava.lang.String;@6806468e,[Ledu.cmu.lti.nlp.amr.Entity;@3c7b137a))
AMR:
(不 / 不, poss, 我 / 我)
(事 / 事, mod, 回 / 回)
(前 / 前, mode, 去 / 去-02)
(回 / 回, mod, 是 / 是-04)
(地 / 地, mod, 焦 / 焦虑-01)
(地 / 地, mode, 赶 / 赶上-01)
(怎 / 怎么, mod, 是 / 是-04)
(明 / 明白-01, manner, 不 / 不)
(明 / 明白-01, manner, 仍 / 仍然)
(明 / 明白-01, manner, 去 / 去-02)
(明 / 明白-01, mode, 是 / 是-04)
(焦 / 焦虑-01, manner, 我2 / 我)
(赶 / 赶上-01, mode, 去 / 去-02)

Decoded in 61,986 microseconds
Sentence: “ 现在 你 去 吧 ， 小 王子 说 。

Spans:
Span 2-3:  你 => 你
Span 3-4:  去 => 去-02
Span 6-7:  小 => 小
Span 7-8:  王子 => 王子
Span 1-2:  现在 => 现在
Span 8-9:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  你 => 你
Oracle Span 3-4:  去 => 去-02
Oracle Span 6-7:  小 => 小-01
Oracle Span 7-8:  王子 => 王子
Oracle Span 1-2:  现在 => 现在
Oracle Span 8-9:  说 => 说-01

Incorrect span: 说 => 说-02
Incorrect span: 小 => 小
Missing span: 说 => 说-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	现在	_	NT	NT	_	4	tmod	_	_
3	你	_	PN	PN	_	4	dep	_	_
4	去	_	VV	VV	_	0	root	_	_
5	吧	_	SP	SP	_	4	dep	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	小	_	JJ	JJ	_	8	amod	_	_
8	王子	_	NN	NN	_	9	nsubj	_	_
9	说	_	VV	VV	_	4	conj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 王子)
(x0 / 说-01, arg1, x4 / 去-02)
(x2 / 王子, mod, x3 / 小-01)
(x4 / 去-02, arg0, x5 / 你)
(x4 / 去-02, time, x6 / 现在)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说,说-02,false), Span(7,8,List(1),王子,王子,false), Span(6,7,List(2),小,小,false), Span(3,4,List(3),去,去-02,false), Span(2,3,List(4),你,你,false), Span(1,2,List(5),现在,现在,false)),Map(2 -> 小, 5 -> 现在, 1 -> 王子, 4 -> 你, 0 -> 说-02, 3 -> 去-02),Map(你 -> 你, 王 -> 王子, 去 -> 去-02, 小 -> 小, 说 -> 说-02, 现 -> 现在))),[Ljava.lang.String;@68631b1d,Annotation([Ljava.lang.String;@5a48da4f,[Ljava.lang.String;@a0c5be,[Ljava.lang.String;@6424e613),Annotation([Ljava.lang.String;@14efa279,[Ljava.lang.String;@8e99809,[Ledu.cmu.lti.nlp.amr.Dependency;@e62319f),Annotation([Ljava.lang.String;@4d354a3e,[Ljava.lang.String;@24a0c58b,[Ljava.lang.String;@604d28c6),Annotation([Ljava.lang.String;@7f3c0399,[Ljava.lang.String;@183fc2fa,[Ledu.cmu.lti.nlp.amr.Entity;@3a11c0eb))
AMR:
(去 / 去-02, location, 你 / 你)
(去 / 去-02, time, 现 / 现在)
(说 / 说-02, beneficiary, 王 / 王子)
(说 / 说-02, degree, 小 / 小)
(说 / 说-02, purpose, 去 / 去-02)

Decoded in 12,208 microseconds
Sentence: 我 要 下来 了 ！ … ”

Spans:
Span 2-3:  下来 => 下来-02
Span 0-1:  我 => 我
Span 1-2:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  下来 => 下来-02
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  要 => 要-03

Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	要	_	VV	VV	_	3	mmod	_	_
3	下来	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	！	_	PU	PU	_	6	punct	_	_
6	…	_	NN	NN	_	3	dobj	_	_
7	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 下来-02)
(x12 / 下来-02, arg0, x13 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),下来,下来-02,false), Span(1,2,List(1),要,要-02,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 要-02, 0 -> 下来-02),Map(我 -> 我, 要 -> 要-02, 下 -> 下来-02))),[Ljava.lang.String;@3313d477,Annotation([Ljava.lang.String;@2c2c3947,[Ljava.lang.String;@4a62062a,[Ljava.lang.String;@7ec08115),Annotation([Ljava.lang.String;@53dd42d6,[Ljava.lang.String;@1e76afeb,[Ledu.cmu.lti.nlp.amr.Dependency;@447fa959),Annotation([Ljava.lang.String;@3e4d40ea,[Ljava.lang.String;@73f6e07,[Ljava.lang.String;@2c9d90fc),Annotation([Ljava.lang.String;@1511d157,[Ljava.lang.String;@418f890f,[Ledu.cmu.lti.nlp.amr.Entity;@3d3c886f))
AMR:
(要 / 要-02, manner, 我 / 我)
(要 / 要-02, snt11, 下 / 下来-02)

Decoded in 4,546 microseconds
Sentence: 于是 ， 我 也 朝 墙脚 下 看 去 ， 我 吓 了 一 跳 。

Spans:
Span 6-7:  下 => 下-07
Span 3-4:  也 => 也
Span 8-9:  去 => 去-02
Span 5-6:  墙脚 => 墙脚
Span 10-11:  我 => 我
Span 2-3:  我 => 我
Span 7-8:  看 => 看-10

Langrangian relaxation converged after 3 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  墙脚 => 墙脚
Oracle Span 2-3:  我 => 我
Oracle Span 7-8:  看 => 看-02

Extra span: 我 => 我
Extra span: 去 => 去-02
Incorrect span: 看 => 看-10
Extra span: 下 => 下-07
Extra span: 也 => 也
Missing span: 看 => 看-02
Dependencies:
1	于是	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	我	_	PN	PN	_	9	nsubj	_	_
4	也	_	AD	AD	_	9	advmod	_	_
5	朝	_	P	P	_	9	prep	_	_
6	墙脚	_	NN	NN	_	7	lobj	_	_
7	下	_	LC	LC	_	5	plmod	_	_
8	看	_	VV	VV	_	9	dep	_	_
9	去	_	VV	VV	_	0	root	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	吓	_	VV	VV	_	9	conj	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	跳	_	NN	NN	_	12	dobj	_	_
16	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x20 / 看-02, arg0, x21 / 我)
(x20 / 看-02, direction, x22 / 墙脚)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),我,我,false), Span(8,9,List(1),去,去-02,false), Span(7,8,List(2),看,看-10,false), Span(6,7,List(3),下,下-07,false), Span(5,6,List(4),墙脚,墙脚,false), Span(3,4,List(5),也,也,false), Span(2,3,List(6),我,我,false)),Map(2 -> 看-10, 5 -> 也, 1 -> 去-02, 4 -> 墙脚, 6 -> 我, 0 -> 我, 3 -> 下-07),Map(也 -> 也, 我 -> 我, 我2 -> 我, 下 -> 下-07, 去 -> 去-02, 看 -> 看-10, 墙 -> 墙脚))),[Ljava.lang.String;@7d66e544,Annotation([Ljava.lang.String;@666618d6,[Ljava.lang.String;@5b1c32e4,[Ljava.lang.String;@2bab618),Annotation([Ljava.lang.String;@48bc2fce,[Ljava.lang.String;@1eca3ea7,[Ledu.cmu.lti.nlp.amr.Dependency;@24fba488),Annotation([Ljava.lang.String;@73a6cc79,[Ljava.lang.String;@5a4d4f9c,[Ljava.lang.String;@153d6d74),Annotation([Ljava.lang.String;@6c9b44bf,[Ljava.lang.String;@299b9851,[Ledu.cmu.lti.nlp.amr.Entity;@191a0351))
AMR:
(下 / 下-07, ARG0, 墙 / 墙脚)
(去 / 去-02, ARG0, 下 / 下-07)
(去 / 去-02, ARG4, 我 / 我)
(去 / 去-02, manner, 也 / 也)
(看 / 看-10, ARG4, 下 / 下-07)
(看 / 看-10, op, 我2 / 我)

Decoded in 35,906 microseconds
Sentence: 就 在 那里 ， 一 条 黄 蛇 直起 身子 冲 着 小 王子 。 这 种 黄 蛇 半 分钟 就 能 结果 你 的 性命 。

Spans:
Span 24-25:  你 => 你
Span 10-11:  冲 => 冲-02
Span 20-21:  分钟 => 分钟
Span 19-20:  半 => 半
Span 1-2:  在 => 在-01
Span 12-13:  小 => 小
Span 21-22:  就 => 就-01
Span 0-1:  就 => 就-01
Span 26-27:  性命 => 性命
Span 13-14:  王子 => 王子
Span 16-17:  种 => 种
Span 23-24:  结果 => 结果-01
Span 22-23:  能 => 能
Span 18-19:  蛇 => 蛇
Span 7-8:  蛇 => 蛇
Span 9-10:  身子 => 身子
Span 15-16:  这 => 这
Span 2-3:  那里 => 那里
Span 17-18:  黄 => 黄-02
Span 6-7:  黄 => 黄-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 24-25:  你 => 你
Oracle Span 10-11:  冲 => 冲-02
Oracle Span 20-21:  分钟 => 分钟
Oracle Span 19-20:  半 => 半
Oracle Span 12-13:  小 => 小-01
Oracle Span 0-1:  就 => 就-01
Oracle Span 21-22:  就 => 就-01
Oracle Span 26-27:  性命 => 性命
Oracle Span 13-14:  王子 => 王子
Oracle Span 23-24:  结果 => 结果
Oracle Span 22-23:  能 => 能
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 9-10:  身子 => 身子
Oracle Span 15-16:  这 => 这
Oracle Span 2-3:  那里 => 那里
Oracle Span 6-7:  黄 => 黄-02

Incorrect span: 结果 => 结果-01
Extra span: 蛇 => 蛇
Extra span: 黄 => 黄-02
Extra span: 种 => 种
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Missing span: 小 => 小-01
Missing span: 结果 => 结果
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	在	_	P	P	_	11	prep	_	_
3	那里	_	PN	PN	_	2	pobj	_	_
4	,	_	PU	PU	_	11	punct	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	条	_	M	M	_	8	clf	_	_
7	黄	_	JJ	JJ	_	8	amod	_	_
8	蛇	_	NN	NN	_	9	nn	_	_
9	直起	_	NN	NN	_	11	nsubj	_	_
10	身子	_	AD	AD	_	11	advmod	_	_
11	冲	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	11	dobj	_	_
15	。	_	PU	PU	_	11	punct	_	_
16	这	_	DT	DT	_	19	det	_	_
17	种	_	M	M	_	16	clf	_	_
18	黄	_	JJ	JJ	_	19	amod	_	_
19	蛇	_	NN	NN	_	23	nsubj	_	_
20	半	_	CD	CD	_	21	nummod	_	_
21	分钟	_	M	M	_	23	dep	_	_
22	就	_	AD	AD	_	23	advmod	_	_
23	能	_	VV	VV	_	11	conj	_	_
24	结果	_	NN	NN	_	27	nn	_	_
25	你	_	PN	PN	_	27	assmod	_	_
26	的	_	DEG	DEG	_	25	assm	_	_
27	性命	_	NN	NN	_	23	dobj	_	_
28	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x12 / 那里, manner, x13 / 就-01)
(x14 / 能, arg0, x18 / 结果)
(x14 / 能, manner, x17 / 就-01)
(x18 / 结果, arg1, x21 / 性命)
(x18 / 结果, time, x23 / 分钟)
(x21 / 性命, poss, x22 / 你)
(x23 / 分钟, quant, x24 / 半)
(x3 / 冲-02, arg0, x4 / 蛇)
(x3 / 冲-02, arg1, x7 / 王子)
(x3 / 冲-02, location, x12 / 那里)
(x4 / 蛇, mod, x5 / 黄-02)
(x7 / 王子, mod, x8 / 小-01)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),性命,性命,false), Span(24,25,List(1),你,你,false), Span(23,24,List(2),结果,结果-01,false), Span(22,23,List(3),能,能,false), Span(21,22,List(4),就,就-01,false), Span(20,21,List(5),分钟,分钟,false), Span(19,20,List(6),半,半,false), Span(18,19,List(7),蛇,蛇,false), Span(17,18,List(8),黄,黄-02,false), Span(16,17,List(9),种,种,false), Span(15,16,List(10),这,这,false), Span(13,14,List(11),王子,王子,false), Span(12,13,List(12),小,小,false), Span(10,11,List(13),冲,冲-02,false), Span(9,10,List(14),身子,身子,false), Span(7,8,List(15),蛇,蛇,false), Span(6,7,List(16),黄,黄-02,false), Span(2,3,List(17),那里,那里,false), Span(1,2,List(18),在,在-01,false), Span(0,1,List(19),就,就-01,false)),Map(2 -> 结果-01, 5 -> 分钟, 12 -> 小, 15 -> 蛇, 8 -> 黄-02, 18 -> 在-01, 7 -> 蛇, 17 -> 那里, 1 -> 你, 4 -> 就-01, 11 -> 王子, 14 -> 身子, 6 -> 半, 0 -> 性命, 9 -> 种, 16 -> 黄-02, 19 -> 就-01, 3 -> 能, 10 -> 这, 13 -> 冲-02),Map(就 -> 就-01, 性 -> 性命, 在 -> 在-01, 这 -> 这, 能 -> 能, 半 -> 半, 身 -> 身子, 王 -> 王子, 你 -> 你, 黄 -> 黄-02, 结 -> 结果-01, 小 -> 小, 就2 -> 就-01, 冲 -> 冲-02, 种 -> 种, 分 -> 分钟, 蛇 -> 蛇, 那 -> 那里, 黄2 -> 黄-02, 蛇2 -> 蛇))),[Ljava.lang.String;@67328bcb,Annotation([Ljava.lang.String;@51ba952e,[Ljava.lang.String;@2416c658,[Ljava.lang.String;@6d5f4900),Annotation([Ljava.lang.String;@1e40fbb3,[Ljava.lang.String;@1b560eb0,[Ledu.cmu.lti.nlp.amr.Dependency;@9e02f84),Annotation([Ljava.lang.String;@1e6060f1,[Ljava.lang.String;@7e49ded,[Ljava.lang.String;@2c6c302f),Annotation([Ljava.lang.String;@2478b629,[Ljava.lang.String;@39023dbf,[Ledu.cmu.lti.nlp.amr.Entity;@1a2ac487))
AMR:
(冲 / 冲-02, location, 那 / 那里)
(冲 / 冲-02, manner, 蛇2 / 蛇)
(冲 / 冲-02, snt3, 王 / 王子)
(分 / 分钟, quant, 半 / 半)
(半 / 半, ARG6, 蛇 / 蛇)
(就2 / 就-01, ARG1, 在 / 在-01)
(性 / 性命, poss, 你 / 你)
(王 / 王子, mod, 小 / 小)
(王 / 王子, prep-out, 黄 / 黄-02)
(种 / 种, mod, 这 / 这)
(结 / 结果-01, ARG3, 性 / 性命)
(结 / 结果-01, time, 分 / 分钟)
(能 / 能, manner, 就 / 就-01)
(能 / 能, snt3, 结 / 结果-01)
(蛇 / 蛇, mod, 这 / 这)
(蛇 / 蛇, mod, 黄 / 黄-02)
(蛇2 / 蛇, mod, 黄2 / 黄-02)
(身 / 身子, direction, 冲 / 冲-02)
(那 / 那里, manner, 就2 / 就-01)

Decoded in 120,597 microseconds
Sentence: 我 一面 赶紧 掏 口袋 ， 拔 出 手枪 ， 一面 跑 过去 。

Spans:
Span 7-8:  出 => 出-04
Span 4-5:  口袋 => 口袋
Span 0-1:  我 => 我
Span 8-9:  手枪 => 手枪
Span 6-7:  拔 => 拔-01
Span 3-4:  掏 => 掏-01
Span 2-3:  赶紧 => 赶紧
Span 11-12:  跑 => 跑-01
Span 12-13:  过去 => 过去-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
Oracle Span 7-8:  出 => 出
Oracle Span 4-5:  口袋 => 口袋
Oracle Span 0-1:  我 => 我
Oracle Span 8-9:  手枪 => 手枪
Oracle Span 6-7:  拔 => 拔-01
Oracle Span 3-4:  掏 => 掏-01
Oracle Span 2-3:  赶紧 => 赶紧
Oracle Span 11-12:  跑 => 跑-01
Oracle Span 12-13:  过去 => 过去

Incorrect span: 过去 => 过去-01
Incorrect span: 出 => 出-04
Missing span: 出 => 出
Missing span: 过去 => 过去
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	一面	_	CD	CD	_	4	dep	_	_
3	赶紧	_	AD	AD	_	4	advmod	_	_
4	掏	_	VV	VV	_	0	root	_	_
5	口袋	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	拔	_	AD	AD	_	8	advmod	_	_
8	出	_	VV	VV	_	4	dep	_	_
9	手枪	_	NN	NN	_	8	dobj	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	一面	_	CD	CD	_	12	nsubj	_	_
12	跑	_	VV	VV	_	4	conj	_	_
13	过去	_	NT	NT	_	12	dobj	_	_
14	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 跑-01, arg3, x13 / 过去)
(x2 / 掏-01, arg0, x3 / 我)
(x2 / 掏-01, location, x5 / 口袋)
(x2 / 掏-01, manner, x4 / 赶紧)
(x6 / 拔-01, arg1, x9 / 手枪)
(x6 / 拔-01, direction, x7 / 出)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),过去,过去-01,false), Span(11,12,List(1),跑,跑-01,false), Span(8,9,List(2),手枪,手枪,false), Span(7,8,List(3),出,出-04,false), Span(6,7,List(4),拔,拔-01,false), Span(4,5,List(5),口袋,口袋,false), Span(3,4,List(6),掏,掏-01,false), Span(2,3,List(7),赶紧,赶紧,false), Span(0,1,List(8),我,我,false)),Map(2 -> 手枪, 5 -> 口袋, 8 -> 我, 7 -> 赶紧, 1 -> 跑-01, 4 -> 拔-01, 6 -> 掏-01, 0 -> 过去-01, 3 -> 出-04),Map(口 -> 口袋, 拔 -> 拔-01, 我 -> 我, 跑 -> 跑-01, 过 -> 过去-01, 掏 -> 掏-01, 出 -> 出-04, 赶 -> 赶紧, 手 -> 手枪))),[Ljava.lang.String;@570a62a5,Annotation([Ljava.lang.String;@36224f93,[Ljava.lang.String;@1ee5632d,[Ljava.lang.String;@52a7928a),Annotation([Ljava.lang.String;@563ccd31,[Ljava.lang.String;@72465eb2,[Ledu.cmu.lti.nlp.amr.Dependency;@478fb7dc),Annotation([Ljava.lang.String;@29d25e65,[Ljava.lang.String;@19b75b2b,[Ljava.lang.String;@59c43561),Annotation([Ljava.lang.String;@634f58d2,[Ljava.lang.String;@585513a8,[Ledu.cmu.lti.nlp.amr.Entity;@7b18658a))
AMR:
(出 / 出-04, ARG4, 跑 / 跑-01)
(口 / 口袋, ARG5, 出 / 出-04)
(手 / 手枪, mod, 出 / 出-04)
(拔 / 拔-01, direction, 出 / 出-04)
(掏 / 掏-01, li, 我 / 我)
(掏 / 掏-01, location, 口 / 口袋)
(掏 / 掏-01, manner, 赶 / 赶紧)
(跑 / 跑-01, ARG5, 过 / 过去-01)

Decoded in 27,115 microseconds
Sentence: 可是 一 听到 我 的 脚步声 ， 蛇 却 象 一 股 干涸 了 的 水柱 一样 ， 慢慢 钻进 沙 里 去 。 它 不慌不忙 地 在 石头 的 缝隙 中 钻动 着 ， 发出 轻轻 的 金属 般 的 响声 。

Spans:
Span 16-17:  一样 => 一样
Span 25-26:  不慌不忙 => 不慌不忙
Span 22-23:  去 => 去-02
Span 35-36:  发出 => 发出-01
Span 2-3:  听到 => 听到-01
Span 41-42:  响声 => 响声
Span 27-28:  在 => 在-01
Span 26-27:  地 => 地
Span 24-25:  它 => 它
Span 12-13:  干涸 => 干涸-01
Span 18-19:  慢慢 => 慢慢
Span 3-4:  我 => 我
Span 15-16:  水柱 => 水柱
Span 20-21:  沙 => 沙
Span 28-29:  石头 => 石头
Span 30-31:  缝隙 => 缝隙
Span 5-6:  脚步声 => 脚步声
Span 7-8:  蛇 => 蛇
Span 36-37:  轻轻 => 轻轻-01
Span 32-33:  钻动 => 钻动
Span 19-20:  钻进 => 钻进-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  一样 => 一样-01
Oracle Span 25-26:  不慌不忙 => 不慌不忙
Oracle Span 35-36:  发出 => 发出-01
Oracle Span 2-3:  听到 => 听到-01
Oracle Span 41-42:  响声 => 响声
Oracle Span 12-13:  干涸 => 干涸-01
Oracle Span 18-19:  慢慢 => 慢慢-01
Oracle Span 3-4:  我 => 我
Oracle Span 15-16:  水柱 => 水柱
Oracle Span 20-21:  沙 => 沙
Oracle Span 28-29:  石头 => 石头
Oracle Span 30-31:  缝隙 => 缝隙
Oracle Span 7-8:  蛇 => 蛇
Oracle Span 36-37:  轻轻 => 轻轻-01
Oracle Span 32-33:  钻动 => 钻动
Oracle Span 19-20:  钻进 => 钻进-01

Extra span: 在 => 在-01
Extra span: 地 => 地
Extra span: 它 => 它
Extra span: 去 => 去-02
Incorrect span: 慢慢 => 慢慢
Incorrect span: 一样 => 一样
Extra span: 脚步声 => 脚步声
Missing span: 一样 => 一样-01
Missing span: 慢慢 => 慢慢-01
Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	一	_	AD	AD	_	3	advmod	_	_
3	听到	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	脚步声	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	蛇	_	NN	NN	_	17	nsubj	_	_
9	却	_	AD	AD	_	17	advmod	_	_
10	象	_	P	P	_	17	prep	_	_
11	一	_	CD	CD	_	12	nummod	_	_
12	股	_	M	M	_	16	clf	_	_
13	干涸	_	VV	VV	_	16	rcmod	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	的	_	DEC	DEC	_	13	cpm	_	_
16	水柱	_	NN	NN	_	10	pobj	_	_
17	一样	_	VA	VA	_	3	conj	_	_
18	,	_	PU	PU	_	3	punct	_	_
19	慢慢	_	AD	AD	_	20	advmod	_	_
20	钻进	_	VV	VV	_	3	conj	_	_
21	沙	_	NN	NN	_	22	lobj	_	_
22	里	_	LC	LC	_	20	loc	_	_
23	去	_	VV	VV	_	20	conj	_	_
24	。	_	PU	PU	_	3	punct	_	_
25	它	_	PN	PN	_	33	nsubj	_	_
26	不慌不忙	_	VA	VA	_	33	dep	_	_
27	地	_	DEV	DEV	_	26	dvpm	_	_
28	在	_	P	P	_	33	prep	_	_
29	石头	_	NN	NN	_	31	assmod	_	_
30	的	_	DEG	DEG	_	29	assm	_	_
31	缝隙	_	NN	NN	_	32	lobj	_	_
32	中	_	LC	LC	_	28	plmod	_	_
33	钻动	_	VV	VV	_	3	conj	_	_
34	着	_	AS	AS	_	33	asp	_	_
35	,	_	PU	PU	_	3	punct	_	_
36	发出	_	VV	VV	_	3	conj	_	_
37	轻轻	_	NN	NN	_	39	assmod	_	_
38	的	_	DEG	DEG	_	37	assm	_	_
39	金属	_	NN	NN	_	40	nsubj	_	_
40	般	_	VA	VA	_	42	rcmod	_	_
41	的	_	DEC	DEC	_	40	cpm	_	_
42	响声	_	NN	NN	_	36	dobj	_	_
43	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x20 / 钻动, location, x22 / 缝隙)
(x20 / 钻动, manner, x24 / 不慌不忙)
(x22 / 缝隙, poss, x23 / 石头)
(x25 / 发出-01, arg1, x27 / 响声)
(x27 / 响声, mod, x28 / 轻轻-01)
(x3 / 钻进-01, arg0, x4 / 蛇)
(x3 / 钻进-01, arg1, x5 / 沙)
(x3 / 钻进-01, manner, x6 / 慢慢-01)
(x3 / 钻进-01, time, x13 / 听到-01)
(x9 / 水柱, mod, x11 / 干涸-01)

Input(Some(Graph(null,ArrayBuffer(Span(41,42,List(0),响声,响声,false), Span(36,37,List(1),轻轻,轻轻-01,false), Span(35,36,List(2),发出,发出-01,false), Span(32,33,List(3),钻动,钻动,false), Span(30,31,List(4),缝隙,缝隙,false), Span(28,29,List(5),石头,石头,false), Span(27,28,List(6),在,在-01,false), Span(26,27,List(7),地,地,false), Span(25,26,List(8),不慌不忙,不慌不忙,false), Span(24,25,List(9),它,它,false), Span(22,23,List(10),去,去-02,false), Span(20,21,List(11),沙,沙,false), Span(19,20,List(12),钻进,钻进-01,false), Span(18,19,List(13),慢慢,慢慢,false), Span(16,17,List(14),一样,一样,false), Span(15,16,List(15),水柱,水柱,false), Span(12,13,List(16),干涸,干涸-01,false), Span(7,8,List(17),蛇,蛇,false), Span(5,6,List(18),脚步声,脚步声,false), Span(3,4,List(19),我,我,false), Span(2,3,List(20),听到,听到-01,false)),Map(2 -> 发出-01, 5 -> 石头, 12 -> 钻进-01, 15 -> 水柱, 8 -> 不慌不忙, 18 -> 脚步声, 7 -> 地, 17 -> 蛇, 1 -> 轻轻-01, 4 -> 缝隙, 11 -> 沙, 14 -> 一样, 20 -> 听到-01, 6 -> 在-01, 0 -> 响声, 9 -> 它, 16 -> 干涸-01, 19 -> 我, 3 -> 钻动, 10 -> 去-02, 13 -> 慢慢),Map(发 -> 发出-01, 石 -> 石头, 在 -> 在-01, 干 -> 干涸-01, 我 -> 我, 钻2 -> 钻进-01, 钻 -> 钻动, 它 -> 它, 去 -> 去-02, 水 -> 水柱, 脚 -> 脚步声, 地 -> 地, 不 -> 不慌不忙, 慢 -> 慢慢, 听 -> 听到-01, 蛇 -> 蛇, 沙 -> 沙, 轻 -> 轻轻-01, 缝 -> 缝隙, 一 -> 一样, 响 -> 响声))),[Ljava.lang.String;@30f28b5,Annotation([Ljava.lang.String;@1a1f79ce,[Ljava.lang.String;@6aa7e176,[Ljava.lang.String;@52abed9d),Annotation([Ljava.lang.String;@281b2dfd,[Ljava.lang.String;@492be039,[Ledu.cmu.lti.nlp.amr.Dependency;@1cd2143b),Annotation([Ljava.lang.String;@1118d539,[Ljava.lang.String;@601d6622,[Ljava.lang.String;@76216830),Annotation([Ljava.lang.String;@7aded903,[Ljava.lang.String;@2db86a7c,[Ledu.cmu.lti.nlp.amr.Entity;@261f359f))
AMR:
(一 / 一样, domain, 脚 / 脚步声)
(一 / 一样, mod, 水 / 水柱)
(不 / 不慌不忙, ARG3, 地 / 地)
(发 / 发出-01, snt1, 响 / 响声)
(听 / 听到-01, snt3, 脚 / 脚步声)
(响 / 响声, mod, 轻 / 轻轻-01)
(在 / 在-01, manner, 不 / 不慌不忙)
(在 / 在-01, manner, 发 / 发出-01)
(在 / 在-01, time, 它 / 它)
(它 / 它, timezone, 去 / 去-02)
(水 / 水柱, mod, 干 / 干涸-01)
(石 / 石头, manner, 在 / 在-01)
(缝 / 缝隙, poss, 石 / 石头)
(脚 / 脚步声, poss, 我 / 我)
(钻 / 钻动, location, 缝 / 缝隙)
(钻2 / 钻进-01, ARG2, 去 / 去-02)
(钻2 / 钻进-01, manner, 慢 / 慢慢)
(钻2 / 钻进-01, snt3, 沙 / 沙)
(钻2 / 钻进-01, time, 听 / 听到-01)
(钻2 / 钻进-01, unit, 蛇 / 蛇)

Decoded in 164,806 microseconds
Sentence: 我 到达 墙边 的 时候 ， 正好 把 我 的 这 位 小 王子 接 在 我 的 怀抱 中 。 他 的 脸色 雪 一样 惨白 。

Spans:
Span 25-26:  一样 => 一样
Span 21-22:  他 => 他
Span 1-2:  到达 => 到达-01
Span 15-16:  在 => 在-01
Span 2-3:  墙边 => 墙边
Span 12-13:  小 => 小
Span 18-19:  怀抱 => 怀抱
Span 26-27:  惨白 => 惨白
Span 16-17:  我 => 我
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 14-15:  接 => 接-01
Span 4-5:  时候 => 时候
Span 6-7:  正好 => 正好
Span 13-14:  王子 => 王子
Span 23-24:  脸色 => 脸色
Span 10-11:  这 => 这
Span 24-25:  雪 => 雪

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 25-26:  一样 => 一样-02
Oracle Span 1-2:  到达 => 到达-01
Oracle Span 2-3:  墙边 => 墙边
Oracle Span 12-13:  小 => 小-01
Oracle Span 18-19:  怀抱 => 怀抱
Oracle Span 26-27:  惨白 => 惨白
Oracle Span 0-1:  我 => 我
Oracle Span 14-15:  接 => 接-01
Oracle Span 6-7:  正好 => 正好
Oracle Span 13-14:  王子 => 王子
Oracle Span 23-24:  脸色 => 脸色
Oracle Span 10-11:  这 => 这
Oracle Span 24-25:  雪 => 雪

Incorrect span: 一样 => 一样
Extra span: 他 => 他
Extra span: 我 => 我
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Extra span: 我 => 我
Extra span: 时候 => 时候
Missing span: 小 => 小-01
Missing span: 一样 => 一样-02
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	到达	_	VV	VV	_	0	root	_	_
3	墙边	_	VA	VA	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	时候	_	NN	NN	_	2	dobj	_	_
6	,	_	PU	PU	_	2	punct	_	_
7	正好	_	AD	AD	_	15	advmod	_	_
8	把	_	BA	BA	_	15	ba	_	_
9	我	_	PN	PN	_	14	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	这	_	DT	DT	_	14	det	_	_
12	位	_	M	M	_	11	clf	_	_
13	小	_	JJ	JJ	_	14	amod	_	_
14	王子	_	NN	NN	_	15	nsubj	_	_
15	接	_	VV	VV	_	2	conj	_	_
16	在	_	P	P	_	15	prep	_	_
17	我	_	PN	PN	_	19	assmod	_	_
18	的	_	DEG	DEG	_	17	assm	_	_
19	怀抱	_	NN	NN	_	20	lobj	_	_
20	中	_	LC	LC	_	16	plmod	_	_
21	。	_	PU	PU	_	2	punct	_	_
22	他	_	PN	PN	_	25	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	脸色	_	NN	NN	_	25	nn	_	_
25	雪	_	NN	NN	_	26	nsubj	_	_
26	一样	_	VA	VA	_	2	conj	_	_
27	惨白	_	VA	VA	_	26	comod	_	_
28	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 到达-01, arg1, x13 / 墙边)
(x14 / 惨白, degree, x15 / 一样-02)
(x15 / 一样-02, arg0, x16 / 脸色)
(x15 / 一样-02, arg1, x18 / 雪)
(x2 / 接-01, arg0, x3 / 我)
(x2 / 接-01, arg1, x4 / 王子)
(x2 / 接-01, location, x8 / 怀抱)
(x2 / 接-01, manner, x10 / 正好)
(x2 / 接-01, time, x11 / 到达-01)
(x4 / 王子, mod, x5 / 小-01)
(x4 / 王子, mod, x7 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),惨白,惨白,false), Span(25,26,List(1),一样,一样,false), Span(24,25,List(2),雪,雪,false), Span(23,24,List(3),脸色,脸色,false), Span(21,22,List(4),他,他,false), Span(18,19,List(5),怀抱,怀抱,false), Span(16,17,List(6),我,我,false), Span(15,16,List(7),在,在-01,false), Span(14,15,List(8),接,接-01,false), Span(13,14,List(9),王子,王子,false), Span(12,13,List(10),小,小,false), Span(10,11,List(11),这,这,false), Span(8,9,List(12),我,我,false), Span(6,7,List(13),正好,正好,false), Span(4,5,List(14),时候,时候,false), Span(2,3,List(15),墙边,墙边,false), Span(1,2,List(16),到达,到达-01,false), Span(0,1,List(17),我,我,false)),Map(2 -> 雪, 5 -> 怀抱, 12 -> 我, 15 -> 墙边, 8 -> 接-01, 7 -> 在-01, 17 -> 我, 1 -> 一样, 4 -> 他, 11 -> 这, 14 -> 时候, 6 -> 我, 0 -> 惨白, 9 -> 王子, 16 -> 到达-01, 3 -> 脸色, 10 -> 小, 13 -> 正好),Map(我3 -> 我, 在 -> 在-01, 怀 -> 怀抱, 我 -> 我, 接 -> 接-01, 这 -> 这, 王 -> 王子, 我2 -> 我, 正 -> 正好, 雪 -> 雪, 他 -> 他, 小 -> 小, 惨 -> 惨白, 脸 -> 脸色, 到 -> 到达-01, 墙 -> 墙边, 时 -> 时候, 一 -> 一样))),[Ljava.lang.String;@5b02a984,Annotation([Ljava.lang.String;@57186526,[Ljava.lang.String;@391d1e33,[Ljava.lang.String;@66f16742),Annotation([Ljava.lang.String;@2871ac91,[Ljava.lang.String;@3c54ddec,[Ledu.cmu.lti.nlp.amr.Dependency;@6d69a0d3),Annotation([Ljava.lang.String;@4f114b,[Ljava.lang.String;@257f30f7,[Ljava.lang.String;@3fde2209),Annotation([Ljava.lang.String;@1f916219,[Ljava.lang.String;@67acfde9,[Ledu.cmu.lti.nlp.amr.Entity;@3b088163))
AMR:
(一 / 一样, ARG3, 脸 / 脸色)
(一 / 一样, quant, 雪 / 雪)
(他 / 他, part, 怀 / 怀抱)
(他 / 他, part, 脸 / 脸色)
(到 / 到达-01, ARG6, 墙 / 墙边)
(在 / 在-01, ARG0, 怀 / 怀抱)
(在 / 在-01, ARG5, 接 / 接-01)
(怀 / 怀抱, poss, 我 / 我)
(惨 / 惨白, degree, 一 / 一样)
(接 / 接-01, direction, 王 / 王子)
(接 / 接-01, domain, 我3 / 我)
(接 / 接-01, manner, 正 / 正好)
(接 / 接-01, time, 到 / 到达-01)
(时 / 时候, mod, 墙 / 墙边)
(王 / 王子, mod, 小 / 小)
(王 / 王子, mod, 这 / 这)
(王 / 王子, poss, 我2 / 我)

Decoded in 144,354 microseconds
Sentence: “ 这 是 搞 的 什么 名堂 ！

Spans:
Span 5-6:  什么 => 什么
Span 6-7:  名堂 => 名堂
Span 3-4:  搞 => 搞-04
Span 2-3:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  名堂 => 名堂
Oracle Span 3-4:  搞 => 搞-01
Oracle Span 1-2:  这 => 这

Extra span: 什么 => 什么
Incorrect span: 搞 => 搞-04
Extra span: 是 => 是-04
Missing span: 搞 => 搞-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	这	_	PN	PN	_	3	top	_	_
3	是	_	VC	VC	_	0	root	_	_
4	搞	_	VV	VV	_	7	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	名堂	_	NN	NN	_	3	attr	_	_
8	！	_	PU	PU	_	3	punct	_	_

Oracle:
(x9 / 搞-01, arg0, x10 / 这)
(x9 / 搞-01, arg1, x11 / 名堂)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),名堂,名堂,false), Span(5,6,List(1),什么,什么,false), Span(3,4,List(2),搞,搞-04,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),这,这,false)),Map(2 -> 搞-04, 1 -> 什么, 4 -> 这, 0 -> 名堂, 3 -> 是-04),Map(名 -> 名堂, 这 -> 这, 搞 -> 搞-04, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@75882261,Annotation([Ljava.lang.String;@611d0763,[Ljava.lang.String;@615efd1c,[Ljava.lang.String;@1e226bcd),Annotation([Ljava.lang.String;@2a8dd942,[Ljava.lang.String;@2322e56f,[Ledu.cmu.lti.nlp.amr.Dependency;@35025a0a),Annotation([Ljava.lang.String;@38732364,[Ljava.lang.String;@7c70aae1,[Ljava.lang.String;@48cd319d),Annotation([Ljava.lang.String;@6f38f084,[Ljava.lang.String;@4ef18604,[Ledu.cmu.lti.nlp.amr.Entity;@372f0a99))
AMR:
(名 / 名堂, mod, 什 / 什么)
(搞 / 搞-04, location, 名 / 名堂)
(搞 / 搞-04, manner, 是 / 是-04)
(是 / 是-04, mod, 这 / 这)

Decoded in 14,946 microseconds
Sentence: 我 埋怨 道 。

Spans:
Span 1-2:  埋怨 => 埋怨-01
Span 0-1:  我 => 我
Span 2-3:  道 => 道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  埋怨 => 埋怨-01
Oracle Span 0-1:  我 => 我

Extra span: 道 => 道-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	埋怨	_	VV	VV	_	0	root	_	_
3	道	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 埋怨-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),道,道-01,false), Span(1,2,List(1),埋怨,埋怨-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 埋怨-01, 0 -> 道-01),Map(我 -> 我, 道 -> 道-01, 埋 -> 埋怨-01))),[Ljava.lang.String;@16cf8438,Annotation([Ljava.lang.String;@3e5beab5,[Ljava.lang.String;@7c588adc,[Ljava.lang.String;@33ec2c0c),Annotation([Ljava.lang.String;@5968800d,[Ljava.lang.String;@3887c7d7,[Ledu.cmu.lti.nlp.amr.Dependency;@b1b471),Annotation([Ljava.lang.String;@526f6427,[Ljava.lang.String;@4f1afe8f,[Ljava.lang.String;@492521c4),Annotation([Ljava.lang.String;@443a06ad,[Ljava.lang.String;@6ddd1c51,[Ledu.cmu.lti.nlp.amr.Entity;@752b69e3))
AMR:
(埋 / 埋怨-01, prep-within, 道 / 道-01)
(埋 / 埋怨-01, value, 我 / 我)

Decoded in 6,673 microseconds
Sentence: 你 怎么 竟然 和 蛇 也 谈起 心 来 了 ！ ”

Spans:
Span 5-6:  也 => 也
Span 0-1:  你 => 你
Span 7-8:  心 => 心
Span 1-2:  怎么 => 怎么
Span 8-9:  来 => 来-06
Span 2-3:  竟然 => 竟然-01
Span 4-5:  蛇 => 蛇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  怎么 => 怎么
Oracle Span 2-3:  竟然 => 竟然-01
Oracle Span 4-5:  蛇 => 蛇

Extra span: 来 => 来-06
Extra span: 心 => 心
Extra span: 也 => 也
Dependencies:
1	你	_	PN	PN	_	7	nsubj	_	_
2	怎么	_	AD	AD	_	7	advmod	_	_
3	竟然	_	AD	AD	_	7	advmod	_	_
4	和	_	CC	CC	_	3	cc	_	_
5	蛇	_	AD	AD	_	3	dep	_	_
6	也	_	AD	AD	_	7	advmod	_	_
7	谈起	_	VV	VV	_	0	root	_	_
8	心	_	NN	NN	_	9	lobj	_	_
9	来	_	LC	LC	_	7	loc	_	_
10	了	_	SP	SP	_	7	dep	_	_
11	！	_	PU	PU	_	7	punct	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x10 / 你, accompanier, x11 / 蛇)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),来,来-06,false), Span(7,8,List(1),心,心,false), Span(5,6,List(2),也,也,false), Span(4,5,List(3),蛇,蛇,false), Span(2,3,List(4),竟然,竟然-01,false), Span(1,2,List(5),怎么,怎么,false), Span(0,1,List(6),你,你,false)),Map(2 -> 也, 5 -> 怎么, 1 -> 心, 4 -> 竟然-01, 6 -> 你, 0 -> 来-06, 3 -> 蛇),Map(也 -> 也, 来 -> 来-06, 你 -> 你, 心 -> 心, 怎 -> 怎么, 蛇 -> 蛇, 竟 -> 竟然-01))),[Ljava.lang.String;@15605d83,Annotation([Ljava.lang.String;@1fb2eec,[Ljava.lang.String;@4c18516,[Ljava.lang.String;@2a0b901c),Annotation([Ljava.lang.String;@3d104c9b,[Ljava.lang.String;@6544899b,[Ledu.cmu.lti.nlp.amr.Dependency;@6da54910),Annotation([Ljava.lang.String;@1bd8afc8,[Ljava.lang.String;@24134cbc,[Ljava.lang.String;@65da01f4),Annotation([Ljava.lang.String;@22f02996,[Ljava.lang.String;@7c8874ef,[Ledu.cmu.lti.nlp.amr.Entity;@42c0a16e))
AMR:
(怎 / 怎么, accompanier, 竟 / 竟然-01)
(怎 / 怎么, mod, 你 / 你)
(来 / 来-06, manner, 也 / 也)
(来 / 来-06, manner, 心 / 心)
(竟 / 竟然-01, accompanier, 蛇 / 蛇)
(蛇 / 蛇, manner, 也 / 也)

Decoded in 26,040 microseconds
Sentence: 我 解开 了 他 一直 带 着 的 金黄色 的 围脖 。

Spans:
Span 4-5:  一直 => 一直
Span 3-4:  他 => 他
Span 10-11:  围脖 => 围脖
Span 5-6:  带 => 带-05
Span 0-1:  我 => 我
Span 1-2:  解开 => 解开-01
Span 8-9:  金黄色 => 金黄色

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  一直 => 一直
Oracle Span 3-4:  他 => 他
Oracle Span 10-11:  围脖 => 围脖
Oracle Span 5-6:  带 => 带-05
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  解开 => 解开-01
Oracle Span 8-9:  金黄色 => 金黄色

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	解开	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	一直	_	AD	AD	_	6	advmod	_	_
6	带	_	VV	VV	_	11	rcmod	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	的	_	DEC	DEC	_	6	cpm	_	_
9	金黄色	_	JJ	JJ	_	11	assmod	_	_
10	的	_	DEG	DEG	_	9	assm	_	_
11	围脖	_	NN	NN	_	2	dobj	_	_
12	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 解开-01, arg0, x2 / 我)
(x0 / 解开-01, arg1, x3 / 围脖)
(x3 / 围脖, mod, x12 / 金黄色)
(x9 / 带-05, arg1, x10 / 他)
(x9 / 带-05, arg1, x3 / 围脖)
(x9 / 带-05, duration, x11 / 一直)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),围脖,围脖,false), Span(8,9,List(1),金黄色,金黄色,false), Span(5,6,List(2),带,带-05,false), Span(4,5,List(3),一直,一直,false), Span(3,4,List(4),他,他,false), Span(1,2,List(5),解开,解开-01,false), Span(0,1,List(6),我,我,false)),Map(2 -> 带-05, 5 -> 解开-01, 1 -> 金黄色, 4 -> 他, 6 -> 我, 0 -> 围脖, 3 -> 一直),Map(我 -> 我, 他 -> 他, 围 -> 围脖, 解 -> 解开-01, 带 -> 带-05, 一 -> 一直, 金 -> 金黄色))),[Ljava.lang.String;@77a0dd63,Annotation([Ljava.lang.String;@543fe698,[Ljava.lang.String;@6b2fdffc,[Ljava.lang.String;@2ca3d826),Annotation([Ljava.lang.String;@5d194314,[Ljava.lang.String;@76396509,[Ledu.cmu.lti.nlp.amr.Dependency;@637c840d),Annotation([Ljava.lang.String;@51ac12ac,[Ljava.lang.String;@463afa6e,[Ljava.lang.String;@7b96de8d),Annotation([Ljava.lang.String;@7ccd611e,[Ljava.lang.String;@4dc52559,[Ledu.cmu.lti.nlp.amr.Entity;@5c3d4f05))
AMR:
(围 / 围脖, mod, 金 / 金黄色)
(带 / 带-05, ARG6, 他 / 他)
(带 / 带-05, duration, 一 / 一直)
(带 / 带-05, value, 围 / 围脖)
(解 / 解开-01, frequency, 围 / 围脖)
(解 / 解开-01, value, 我 / 我)

Decoded in 32,932 microseconds
Sentence: 我 用 水 浸湿 了 他 的 太阳穴 ， 让 他 喝 了 点 水 。

Spans:
Span 10-11:  他 => 他
Span 5-6:  他 => 他
Span 11-12:  喝 => (thing :arg1-of 喝-01)
Span 7-8:  太阳穴 => 太阳穴
Span 0-1:  我 => 我
Span 14-15:  水 => 水
Span 2-3:  水 => 水
Span 3-4:  浸湿 => 浸湿-01
Span 13-14:  点 => 点
Span 1-2:  用 => 用
Span 9-10:  让 => 让-01

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这时 ， 我 什么 也 不 敢 再 问 他 。

Spans:
Span 5-6:  不 => 不
Span 4-5:  也 => 也
Span 3-4:  什么 => 什么
Span 9-10:  他 => 他
Span 7-8:  再 => 再
Span 2-3:  我 => 我
Span 6-7:  敢 => 敢-02
Span 0-1:  这时 => 这时
Span 8-9:  问 => 问-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  也 => 也
Oracle Span 3-4:  什么 => 什么
Oracle Span 9-10:  他 => 他
Oracle Span 7-8:  再 => 再
Oracle Span 2-3:  我 => 我
Oracle Span 6-7:  敢 => 敢-02
Oracle Span 0-1:  这时 => 这时
Oracle Span 8-9:  问 => 问-01

Extra span: 不 => 不
Dependencies:
1	这时	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	我	_	PN	PN	_	4	dep	_	_
4	什么	_	PN	PN	_	9	nsubj	_	_
5	也	_	AD	AD	_	9	advmod	_	_
6	不	_	AD	AD	_	9	neg	_	_
7	敢	_	AD	AD	_	9	advmod	_	_
8	再	_	AD	AD	_	9	advmod	_	_
9	问	_	VV	VV	_	0	root	_	_
10	他	_	PN	PN	_	9	ccomp	_	_
11	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 敢-02, arg0, x2 / 我)
(x0 / 敢-02, arg1, x3 / 问-01)
(x0 / 敢-02, manner, x5 / 也)
(x3 / 问-01, arg1, x9 / 什么)
(x3 / 问-01, arg2, x8 / 他)
(x3 / 问-01, manner, x6 / 再)
(x3 / 问-01, time, x10 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),他,他,false), Span(8,9,List(1),问,问-01,false), Span(7,8,List(2),再,再,false), Span(6,7,List(3),敢,敢-02,false), Span(5,6,List(4),不,不,false), Span(4,5,List(5),也,也,false), Span(3,4,List(6),什么,什么,false), Span(2,3,List(7),我,我,false), Span(0,1,List(8),这时,这时,false)),Map(2 -> 再, 5 -> 也, 8 -> 这时, 7 -> 我, 1 -> 问-01, 4 -> 不, 6 -> 什么, 0 -> 他, 3 -> 敢-02),Map(我 -> 我, 也 -> 也, 这 -> 这时, 敢 -> 敢-02, 他 -> 他, 不 -> 不, 什 -> 什么, 问 -> 问-01, 再 -> 再))),[Ljava.lang.String;@640d604,Annotation([Ljava.lang.String;@62cbc478,[Ljava.lang.String;@5438fa43,[Ljava.lang.String;@512abf25),Annotation([Ljava.lang.String;@515ab3f2,[Ljava.lang.String;@6d0e45a5,[Ledu.cmu.lti.nlp.amr.Dependency;@7e7740a5),Annotation([Ljava.lang.String;@7aa01bd9,[Ljava.lang.String;@7e61e25c,[Ljava.lang.String;@615db358),Annotation([Ljava.lang.String;@256bb5be,[Ljava.lang.String;@5fef0c19,[Ledu.cmu.lti.nlp.amr.Entity;@2e6d76ba))
AMR:
(敢 / 敢-02, manner, 也 / 也)
(敢 / 敢-02, manner, 问 / 问-01)
(敢 / 敢-02, time, 我 / 我)
(问 / 问-01, location, 他 / 他)
(问 / 问-01, manner, 不 / 不)
(问 / 问-01, manner, 再 / 再)
(问 / 问-01, op, 什 / 什么)
(问 / 问-01, time, 这 / 这时)

Decoded in 21,997 microseconds
Sentence: 他 严肃 地 看 着 我 ， 用 双 臂 搂 着 我 的 脖子 。

Spans:
Span 1-2:  严肃 => 严肃
Span 0-1:  他 => 他
Span 2-3:  地 => 地
Span 12-13:  我 => 我
Span 5-6:  我 => 我
Span 10-11:  搂 => 搂-01
Span 7-8:  用 => 用
Span 3-4:  看 => 看-10
Span 14-15:  脖子 => 脖子
Span 9-10:  臂 => 臂

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  严肃 => 严肃-01
Oracle Span 0-1:  他 => 他
Oracle Span 5-6:  我 => 我
Oracle Span 10-11:  搂 => 搂-01
Oracle Span 3-4:  看 => 看-02
Oracle Span 14-15:  脖子 => 脖子
Oracle Span 9-10:  臂 => 臂

Extra span: 我 => 我
Extra span: 用 => 用
Incorrect span: 看 => 看-10
Extra span: 地 => 地
Incorrect span: 严肃 => 严肃
Missing span: 看 => 看-02
Missing span: 严肃 => 严肃-01
Dependencies:
1	他	_	PN	PN	_	3	nn	_	_
2	严肃	_	JJ	JJ	_	3	amod	_	_
3	地	_	NN	NN	_	4	nsubj	_	_
4	看	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	我	_	PN	PN	_	4	dobj	_	_
7	,	_	PU	PU	_	4	punct	_	_
8	用	_	P	P	_	11	prep	_	_
9	双	_	CD	CD	_	10	nummod	_	_
10	臂	_	NN	NN	_	8	pobj	_	_
11	搂	_	VV	VV	_	4	conj	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	我	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	脖子	_	NN	NN	_	11	dobj	_	_
16	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x14 / 搂-01, arg1, x16 / 脖子)
(x14 / 搂-01, instrument, x19 / 臂)
(x2 / 看-02, arg0, x3 / 他)
(x2 / 看-02, arg1, x4 / 我)
(x2 / 看-02, manner, x5 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),脖子,脖子,false), Span(12,13,List(1),我,我,false), Span(10,11,List(2),搂,搂-01,false), Span(9,10,List(3),臂,臂,false), Span(7,8,List(4),用,用,false), Span(5,6,List(5),我,我,false), Span(3,4,List(6),看,看-10,false), Span(2,3,List(7),地,地,false), Span(1,2,List(8),严肃,严肃,false), Span(0,1,List(9),他,他,false)),Map(2 -> 搂-01, 5 -> 我, 8 -> 严肃, 7 -> 地, 1 -> 我, 4 -> 用, 6 -> 看-10, 9 -> 他, 0 -> 脖子, 3 -> 臂),Map(脖 -> 脖子, 搂 -> 搂-01, 用 -> 用, 我 -> 我, 我2 -> 我, 他 -> 他, 臂 -> 臂, 严 -> 严肃, 地 -> 地, 看 -> 看-10))),[Ljava.lang.String;@22a6d75c,Annotation([Ljava.lang.String;@5a9840f3,[Ljava.lang.String;@7d30007d,[Ljava.lang.String;@382d71c7),Annotation([Ljava.lang.String;@2ca54da9,[Ljava.lang.String;@34a20f16,[Ledu.cmu.lti.nlp.amr.Dependency;@496cc217),Annotation([Ljava.lang.String;@1a1c21b4,[Ljava.lang.String;@1cd2ff5b,[Ljava.lang.String;@38ac8968),Annotation([Ljava.lang.String;@17ff8810,[Ljava.lang.String;@6c951ada,[Ledu.cmu.lti.nlp.amr.Entity;@67b61834))
AMR:
(地 / 地, mod, 严 / 严肃)
(地 / 地, poss, 他 / 他)
(搂 / 搂-01, instrument, 臂 / 臂)
(搂 / 搂-01, snt1, 脖 / 脖子)
(用 / 用, ARG3, 看 / 看-10)
(用 / 用, part, 臂 / 臂)
(看 / 看-10, ARG0, 他 / 他)
(看 / 看-10, condition, 我2 / 我)
(脖 / 脖子, poss, 我 / 我)

Decoded in 33,420 microseconds
Sentence: 我 感到 他 的 心 就 象 一 只 被 枪弹 击中 而 濒于 死亡 的 鸟 的 心脏 一样 在 跳动 着 。

Spans:
Span 19-20:  一样 => 一样
Span 2-3:  他 => 他
Span 11-12:  击中 => 击中-01
Span 8-9:  只 => 只
Span 20-21:  在 => 在-01
Span 5-6:  就 => 就-01
Span 4-5:  心 => 心
Span 18-19:  心脏 => 心脏
Span 1-2:  感到 => 感到-01
Span 0-1:  我 => 我
Span 10-11:  枪弹 => 枪弹
Span 14-15:  死亡 => 死亡-01
Span 13-14:  濒于 => 濒于-01
Span 21-22:  跳动 => 跳动-01
Span 16-17:  鸟 => 鸟

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 11-12:  击中 => 击中-01
Oracle Span 5-6:  就 => 就
Oracle Span 4-5:  心 => 心
Oracle Span 18-19:  心脏 => 心脏
Oracle Span 1-2:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  枪弹 => 枪弹
Oracle Span 14-15:  死亡 => 死亡-01
Oracle Span 13-14:  濒于 => 濒于-01
Oracle Span 21-22:  跳动 => 跳动-01
Oracle Span 16-17:  鸟 => 鸟

Extra span: 在 => 在-01
Extra span: 一样 => 一样
Extra span: 只 => 只
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	感到	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	心	_	NN	NN	_	22	nsubj	_	_
6	就	_	AD	AD	_	20	advmod	_	_
7	象	_	P	P	_	20	prep	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	只	_	M	M	_	19	clf	_	_
10	被	_	SB	SB	_	11	pass	_	_
11	枪弹	_	VV	VV	_	19	rcmod	_	_
12	击中	_	VV	VV	_	11	comod	_	_
13	而	_	MSP	MSP	_	14	prtmod	_	_
14	濒于	_	VV	VV	_	11	dep	_	_
15	死亡	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	鸟	_	NN	NN	_	14	dobj	_	_
18	的	_	DEC	DEC	_	11	cpm	_	_
19	心脏	_	NN	NN	_	7	pobj	_	_
20	一样	_	VA	VA	_	22	dep	_	_
21	在	_	AD	AD	_	22	advmod	_	_
22	跳动	_	VV	VV	_	2	ccomp	_	_
23	着	_	AS	AS	_	22	asp	_	_
24	。	_	PU	PU	_	2	punct	_	_
25	心	_	NN	NN	_	20	xsubj	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 我)
(x22 / 他, part, x21 / 心)
(x25 / 鸟, part, x24 / 心脏)
(x27 / 濒于-01, arg0, x25 / 鸟)
(x27 / 濒于-01, arg1, x28 / 死亡-01)
(x27 / 濒于-01, cause, x29 / 击中-01)
(x29 / 击中-01, arg2, x30 / 枪弹)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),跳动,跳动-01,false), Span(20,21,List(1),在,在-01,false), Span(19,20,List(2),一样,一样,false), Span(18,19,List(3),心脏,心脏,false), Span(16,17,List(4),鸟,鸟,false), Span(14,15,List(5),死亡,死亡-01,false), Span(13,14,List(6),濒于,濒于-01,false), Span(11,12,List(7),击中,击中-01,false), Span(10,11,List(8),枪弹,枪弹,false), Span(8,9,List(9),只,只,false), Span(5,6,List(10),就,就-01,false), Span(4,5,List(11),心,心,false), Span(2,3,List(12),他,他,false), Span(1,2,List(13),感到,感到-01,false), Span(0,1,List(14),我,我,false)),Map(2 -> 一样, 5 -> 死亡-01, 12 -> 他, 8 -> 枪弹, 7 -> 击中-01, 1 -> 在-01, 4 -> 鸟, 11 -> 心, 14 -> 我, 6 -> 濒于-01, 0 -> 跳动-01, 9 -> 只, 3 -> 心脏, 10 -> 就-01, 13 -> 感到-01),Map(就 -> 就-01, 在 -> 在-01, 枪 -> 枪弹, 我 -> 我, 感 -> 感到-01, 击 -> 击中-01, 心2 -> 心, 死 -> 死亡-01, 心 -> 心脏, 他 -> 他, 鸟 -> 鸟, 只 -> 只, 跳 -> 跳动-01, 一 -> 一样, 濒 -> 濒于-01))),[Ljava.lang.String;@3b0d3a63,Annotation([Ljava.lang.String;@50598a1a,[Ljava.lang.String;@14de1901,[Ljava.lang.String;@437ed416),Annotation([Ljava.lang.String;@11f23038,[Ljava.lang.String;@de77146,[Ledu.cmu.lti.nlp.amr.Dependency;@691567ea),Annotation([Ljava.lang.String;@5cfed0ba,[Ljava.lang.String;@5c8d58ed,[Ljava.lang.String;@6a567f7b),Annotation([Ljava.lang.String;@28be7fec,[Ljava.lang.String;@26f0141,[Ledu.cmu.lti.nlp.amr.Entity;@34136bd1))
AMR:
(一 / 一样, mod, 心 / 心脏)
(击 / 击中-01, beneficiary, 枪 / 枪弹)
(击 / 击中-01, manner, 只 / 只)
(在 / 在-01, manner, 一 / 一样)
(就 / 就-01, manner, 只 / 只)
(就 / 就-01, manner, 心2 / 心)
(感 / 感到-01, decade, 我 / 我)
(感 / 感到-01, extent, 就 / 就-01)
(感 / 感到-01, prep-along-with, 他 / 他)
(濒 / 濒于-01, snt11, 死 / 死亡-01)
(濒 / 濒于-01, time, 击 / 击中-01)
(跳 / 跳动-01, manner, 在 / 在-01)
(鸟 / 鸟, mod, 死 / 死亡-01)
(鸟 / 鸟, part, 心 / 心脏)

Decoded in 66,385 microseconds
Sentence: 他 对 我 说 ： “ 我 很 高兴 ， 你 找到 了 你 的 机器 所 缺少 的 东西 。

Spans:
Span 19-20:  东西 => 东西
Span 0-1:  他 => 他
Span 13-14:  你 => 你
Span 10-11:  你 => 你
Span 1-2:  对 => 对-02
Span 7-8:  很 => 很
Span 6-7:  我 => 我
Span 2-3:  我 => 我
Span 11-12:  找到 => 找到-01
Span 15-16:  机器 => 机器
Span 17-18:  缺少 => 缺少-01
Span 3-4:  说 => 说-02
Span 8-9:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 19-20:  东西 => 东西
Oracle Span 0-1:  他 => 他
Oracle Span 7-8:  很 => 很
Oracle Span 2-3:  我 => 我
Oracle Span 11-12:  找到 => 找到-01
Oracle Span 15-16:  机器 => 机器
Oracle Span 17-18:  缺少 => 缺少-01
Oracle Span 3-4:  说 => 说-01
Oracle Span 8-9:  高兴 => 高兴-01

Extra span: 你 => 你
Extra span: 你 => 你
Incorrect span: 高兴 => 高兴
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Missing span: 高兴 => 高兴-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	9	punct	_	_
7	我	_	PN	PN	_	9	nsubj	_	_
8	很	_	AD	AD	_	9	advmod	_	_
9	高兴	_	VA	VA	_	4	ccomp	_	_
10	,	_	PU	PU	_	9	punct	_	_
11	你	_	PN	PN	_	12	nsubj	_	_
12	找到	_	VV	VV	_	9	conj	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	你	_	PN	PN	_	16	assmod	_	_
15	的	_	DEG	DEG	_	14	assm	_	_
16	机器	_	NN	NN	_	18	nsubj	_	_
17	所	_	MSP	MSP	_	18	prtmod	_	_
18	缺少	_	VV	VV	_	20	rcmod	_	_
19	的	_	DEC	DEC	_	18	cpm	_	_
20	东西	_	NN	NN	_	12	dobj	_	_
21	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg3, x3 / 我)
(x11 / 高兴-01, degree, x12 / 很)
(x5 / 找到-01, arg1, x7 / 缺少-01)
(x7 / 缺少-01, arg0, x8 / 机器)
(x8 / 机器, arg1, x10 / 东西)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),东西,东西,false), Span(17,18,List(1),缺少,缺少-01,false), Span(15,16,List(2),机器,机器,false), Span(13,14,List(3),你,你,false), Span(11,12,List(4),找到,找到-01,false), Span(10,11,List(5),你,你,false), Span(8,9,List(6),高兴,高兴,false), Span(7,8,List(7),很,很,false), Span(6,7,List(8),我,我,false), Span(3,4,List(9),说,说-02,false), Span(2,3,List(10),我,我,false), Span(1,2,List(11),对,对-02,false), Span(0,1,List(12),他,他,false)),Map(2 -> 机器, 5 -> 你, 12 -> 他, 8 -> 我, 7 -> 很, 1 -> 缺少-01, 4 -> 找到-01, 11 -> 对-02, 6 -> 高兴, 0 -> 东西, 9 -> 说-02, 3 -> 你, 10 -> 我),Map(高 -> 高兴, 缺 -> 缺少-01, 我 -> 我, 你 -> 你, 很 -> 很, 我2 -> 我, 他 -> 他, 机 -> 机器, 东 -> 东西, 说 -> 说-02, 你2 -> 你, 找 -> 找到-01, 对 -> 对-02))),[Ljava.lang.String;@6de7778f,Annotation([Ljava.lang.String;@367d34c0,[Ljava.lang.String;@4ce25e47,[Ljava.lang.String;@6380e9e9),Annotation([Ljava.lang.String;@350da119,[Ljava.lang.String;@6a09484c,[Ledu.cmu.lti.nlp.amr.Dependency;@34c7232c),Annotation([Ljava.lang.String;@50ec4bfc,[Ljava.lang.String;@8b13d91,[Ljava.lang.String;@285a4fe3),Annotation([Ljava.lang.String;@2589d787,[Ljava.lang.String;@1788cb61,[Ledu.cmu.lti.nlp.amr.Entity;@16d431b4))
AMR:
(对 / 对-02, prep-following, 他 / 他)
(找 / 找到-01, manner, 高 / 高兴)
(找 / 找到-01, prep-following, 你 / 你)
(找 / 找到-01, prep-following, 你2 / 你)
(找 / 找到-01, topic, 机 / 机器)
(缺 / 缺少-01, time, 机 / 机器)
(缺 / 缺少-01, topic, 东 / 东西)
(说 / 说-02, location, 高 / 高兴)
(说 / 说-02, prep-following, 对 / 对-02)
(说 / 说-02, prep-following, 我2 / 我)
(高 / 高兴, degree, 很 / 很)
(高 / 高兴, poss, 我 / 我)

Decoded in 49,160 microseconds
Sentence: 你 不久 就 可以 回家 去 了 … ”

Spans:
Span 1-2:  不久 => 不久
Span 0-1:  你 => 你
Span 5-6:  去 => 去-02
Span 3-4:  可以 => 可以-02
Span 4-5:  回家 => 回家-01
Span 2-3:  就 => 就-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不久 => 不久
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  可以 => 可以-01
Oracle Span 4-5:  回家 => 回家-01
Oracle Span 2-3:  就 => 就

Extra span: 去 => 去-02
Incorrect span: 可以 => 可以-02
Incorrect span: 就 => 就-01
Missing span: 可以 => 可以-01
Missing span: 就 => 就
Dependencies:
1	你	_	PN	PN	_	6	nsubj	_	_
2	不久	_	NT	NT	_	6	tmod	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	可以	_	VV	VV	_	6	mmod	_	_
5	回家	_	PU	PU	_	6	punct	_	_
6	去	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	…	_	NN	NN	_	6	dobj	_	_
9	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x11 / 可以-01, arg0, x12 / 回家-01)
(x11 / 可以-01, manner, x14 / 就)
(x11 / 可以-01, time, x15 / 不久)
(x12 / 回家-01, arg0, x13 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),去,去-02,false), Span(4,5,List(1),回家,回家-01,false), Span(3,4,List(2),可以,可以-02,false), Span(2,3,List(3),就,就-01,false), Span(1,2,List(4),不久,不久,false), Span(0,1,List(5),你,你,false)),Map(2 -> 可以-02, 5 -> 你, 1 -> 回家-01, 4 -> 不久, 0 -> 去-02, 3 -> 就-01),Map(就 -> 就-01, 你 -> 你, 去 -> 去-02, 不 -> 不久, 回 -> 回家-01, 可 -> 可以-02))),[Ljava.lang.String;@6c0b51da,Annotation([Ljava.lang.String;@7558633,[Ljava.lang.String;@5657967b,[Ljava.lang.String;@61394494),Annotation([Ljava.lang.String;@578a5ce8,[Ljava.lang.String;@7c453c34,[Ledu.cmu.lti.nlp.amr.Dependency;@16cb9989),Annotation([Ljava.lang.String;@3dfd6220,[Ljava.lang.String;@3815146b,[Ljava.lang.String;@6de43bc1),Annotation([Ljava.lang.String;@27a9f025,[Ljava.lang.String;@71936a92,[Ledu.cmu.lti.nlp.amr.Entity;@61359e87))
AMR:
(你 / 你, location, 不 / 不久)
(去 / 去-02, manner, 回 / 回家-01)
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, year, 回 / 回家-01)
(就 / 就-01, time, 不 / 不久)

Decoded in 13,350 microseconds
Sentence: “ 你 怎么 知道 的 ？ ”

Spans:
Span 1-2:  你 => 你
Span 2-3:  怎么 => 怎么
Span 3-4:  知道 => 知道-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  知道 => 知道-01

Extra span: 怎么 => 怎么
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	怎么	_	AD	AD	_	4	advmod	_	_
4	知道	_	VV	VV	_	0	root	_	_
5	的	_	SP	SP	_	4	dep	_	_
6	？	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 知道-01, arg0, x9 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),知道,知道-01,false), Span(2,3,List(1),怎么,怎么,false), Span(1,2,List(2),你,你,false)),Map(2 -> 你, 1 -> 怎么, 0 -> 知道-01),Map(你 -> 你, 怎 -> 怎么, 知 -> 知道-01))),[Ljava.lang.String;@2dc39b53,Annotation([Ljava.lang.String;@45037e16,[Ljava.lang.String;@2f2e4bde,[Ljava.lang.String;@6222391a),Annotation([Ljava.lang.String;@538a2f0e,[Ljava.lang.String;@d2708a7,[Ledu.cmu.lti.nlp.amr.Dependency;@508ad266),Annotation([Ljava.lang.String;@2313db84,[Ljava.lang.String;@216372b7,[Ljava.lang.String;@14b4340c),Annotation([Ljava.lang.String;@12abcd1e,[Ljava.lang.String;@2fd9fb34,[Ledu.cmu.lti.nlp.amr.Entity;@1595d2b2))
AMR:
(怎 / 怎么, mod, 你 / 你)
(知 / 知道-01, direction, 怎 / 怎么)

Decoded in 4,306 microseconds
Sentence: 我 正 是 来 告诉 他 ， 在 没有 任何 希望 的 情况 下 ， 我 成功 地 完成 了 修理 工作 。

Spans:
Span 13-14:  下 => 下-07
Span 5-6:  他 => 他
Span 9-10:  任何 => 任何
Span 20-21:  修理 => 修理-01
Span 4-5:  告诉 => 告诉-01
Span 7-8:  在 => 在-01
Span 17-18:  地 => 地
Span 18-19:  完成 => 完成-01
Span 21-22:  工作 => 工作-01
Span 10-11:  希望 => 希望
Span 12-13:  情况 => 情况
Span 16-17:  成功 => 成功-01
Span 15-16:  我 => 我
Span 0-1:  我 => 我
Span 2-3:  是 => 是-04
Span 3-4:  来 => 来-06
Span 1-2:  正 => 正

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 9-10:  任何 => 任何
Oracle Span 20-21:  修理 => 修理-01
Oracle Span 4-5:  告诉 => 告诉-01
Oracle Span 18-19:  完成 => 完成-01
Oracle Span 21-22:  工作 => 工作
Oracle Span 10-11:  希望 => 希望
Oracle Span 16-17:  成功 => 成功-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  来 => 来-05

Incorrect span: 工作 => 工作-01
Extra span: 地 => 地
Extra span: 我 => 我
Extra span: 下 => 下-07
Extra span: 情况 => 情况
Extra span: 在 => 在-01
Incorrect span: 来 => 来-06
Extra span: 是 => 是-04
Extra span: 正 => 正
Missing span: 来 => 来-05
Missing span: 工作 => 工作
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	正	_	AD	AD	_	5	advmod	_	_
3	是	_	VC	VC	_	5	cop	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	告诉	_	VV	VV	_	0	root	_	_
6	他	_	PN	PN	_	5	dobj	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	在	_	P	P	_	19	prep	_	_
9	没有	_	VE	VE	_	13	rcmod	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	希望	_	NN	NN	_	9	dobj	_	_
12	的	_	DEC	DEC	_	9	cpm	_	_
13	情况	_	NN	NN	_	14	lobj	_	_
14	下	_	LC	LC	_	8	plmod	_	_
15	,	_	PU	PU	_	19	punct	_	_
16	我	_	PN	PN	_	19	nsubj	_	_
17	成功	_	VA	VA	_	19	dvpmod	_	_
18	地	_	DEV	DEV	_	17	dvpm	_	_
19	完成	_	VV	VV	_	5	conj	_	_
20	了	_	AS	AS	_	19	asp	_	_
21	修理	_	NN	NN	_	22	nn	_	_
22	工作	_	NN	NN	_	19	dobj	_	_
23	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x30 / 来-05, arg0, x33 / 我)
(x30 / 来-05, arg1, x34 / 告诉-01)
(x34 / 告诉-01, arg1, x36 / 完成-01)
(x34 / 告诉-01, arg2, x45 / 他)
(x36 / 完成-01, arg1, x39 / 工作)
(x36 / 完成-01, manner, x37 / 成功-01)
(x39 / 工作, mod, x40 / 修理-01)
(x43 / 希望, mod, x44 / 任何)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),工作,工作-01,false), Span(20,21,List(1),修理,修理-01,false), Span(18,19,List(2),完成,完成-01,false), Span(17,18,List(3),地,地,false), Span(16,17,List(4),成功,成功-01,false), Span(15,16,List(5),我,我,false), Span(13,14,List(6),下,下-07,false), Span(12,13,List(7),情况,情况,false), Span(10,11,List(8),希望,希望,false), Span(9,10,List(9),任何,任何,false), Span(7,8,List(10),在,在-01,false), Span(5,6,List(11),他,他,false), Span(4,5,List(12),告诉,告诉-01,false), Span(3,4,List(13),来,来-06,false), Span(2,3,List(14),是,是-04,false), Span(1,2,List(15),正,正,false), Span(0,1,List(16),我,我,false)),Map(2 -> 完成-01, 5 -> 我, 12 -> 告诉-01, 15 -> 正, 8 -> 希望, 7 -> 情况, 1 -> 修理-01, 4 -> 成功-01, 11 -> 他, 14 -> 是-04, 6 -> 下-07, 0 -> 工作-01, 9 -> 任何, 16 -> 我, 3 -> 地, 10 -> 在-01, 13 -> 来-06),Map(任 -> 任何, 在 -> 在-01, 来 -> 来-06, 我 -> 我, 情 -> 情况, 希 -> 希望, 我2 -> 我, 下 -> 下-07, 工 -> 工作-01, 完 -> 完成-01, 正 -> 正, 他 -> 他, 地 -> 地, 成 -> 成功-01, 告 -> 告诉-01, 修 -> 修理-01, 是 -> 是-04))),[Ljava.lang.String;@20349058,Annotation([Ljava.lang.String;@6cbb7a7d,[Ljava.lang.String;@cdb3c85,[Ljava.lang.String;@37606fee),Annotation([Ljava.lang.String;@33d28f0a,[Ljava.lang.String;@48d739f,[Ledu.cmu.lti.nlp.amr.Dependency;@51e7589f),Annotation([Ljava.lang.String;@65cc5252,[Ljava.lang.String;@42c12b3e,[Ljava.lang.String;@2dbfa972),Annotation([Ljava.lang.String;@46f73ffa,[Ljava.lang.String;@41aebbb4,[Ledu.cmu.lti.nlp.amr.Entity;@afde064))
AMR:
(下 / 下-07, ARG4, 情 / 情况)
(告 / 告诉-01, purpose, 他 / 他)
(在 / 在-01, ARG0, 告 / 告诉-01)
(完 / 完成-01, ARG1, 地 / 地)
(完 / 完成-01, ARG3, 下 / 下-07)
(完 / 完成-01, manner, 成 / 成功-01)
(完 / 完成-01, op, 我 / 我)
(完 / 完成-01, snt3, 工 / 工作-01)
(工 / 工作-01, mod, 修 / 修理-01)
(希 / 希望, mod, 任 / 任何)
(情 / 情况, manner, 在 / 在-01)
(情 / 情况, mod, 希 / 希望)
(是 / 是-04, ARG3, 正 / 正)
(是 / 是-04, ARG4, 我2 / 我)
(来 / 来-06, ARG1, 是 / 是-04)
(来 / 来-06, prep-through, 告 / 告诉-01)

Decoded in 90,571 microseconds
Sentence: 他 不 回答 我 的 问题 ， 却 接着 说道 ： “ 我 也 一样 ， 今天 ， 要 回家 去 了 … ”

Spans:
Span 14-15:  一样 => 一样
Span 1-2:  不 => 不
Span 13-14:  也 => 也
Span 16-17:  今天 => 今天
Span 0-1:  他 => 他
Span 20-21:  去 => 去-02
Span 19-20:  回家 => 回家-01
Span 2-3:  回答 => 回答-01
Span 12-13:  我 => 我
Span 3-4:  我 => 我
Span 8-9:  接着 => 接着-01
Span 18-19:  要 => 要-02
Span 9-10:  说道 => 说道
Span 5-6:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  一样 => 一样-01
Oracle Span 13-14:  也 => 也
Oracle Span 16-17:  今天 => 今天
Oracle Span 0-1:  他 => 他
Oracle Span 19-20:  回家 => 回家-01
Oracle Span 2-3:  回答 => 回答-01
Oracle Span 3-4:  我 => 我
Oracle Span 8-9:  接着 => 接着-01
Oracle Span 18-19:  要 => 要-03
Oracle Span 9-10:  说道 => 说道-01
Oracle Span 5-6:  问题 => 问题

Extra span: 去 => 去-02
Incorrect span: 要 => 要-02
Incorrect span: 一样 => 一样
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Extra span: 不 => 不
Missing span: 说道 => 说道-01
Missing span: 一样 => 一样-01
Missing span: 要 => 要-03
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	不	_	AD	AD	_	3	neg	_	_
3	回答	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	6	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	问题	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	却	_	AD	AD	_	10	advmod	_	_
9	接着	_	AD	AD	_	10	advmod	_	_
10	说道	_	VV	VV	_	3	conj	_	_
11	：	_	PU	PU	_	10	punct	_	_
12	“	_	PU	PU	_	15	punct	_	_
13	我	_	PN	PN	_	15	nsubj	_	_
14	也	_	AD	AD	_	15	advmod	_	_
15	一样	_	VA	VA	_	10	ccomp	_	_
16	,	_	PU	PU	_	15	punct	_	_
17	今天	_	NT	NT	_	21	tmod	_	_
18	,	_	PU	PU	_	21	punct	_	_
19	要	_	VV	VV	_	21	mmod	_	_
20	回家	_	VV	VV	_	21	mmod	_	_
21	去	_	VV	VV	_	15	conj	_	_
22	了	_	AS	AS	_	21	asp	_	_
23	…	_	NN	NN	_	21	dobj	_	_
24	”	_	PU	PU	_	15	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x5 / 他)
(x2 / 回答-01, arg1, x6 / 问题)
(x22 / 说道-01, manner, x32 / 接着-01)
(x25 / 一样-01, manner, x27 / 也)
(x28 / 要-03, arg0, x29 / 回家-01)
(x28 / 要-03, time, x31 / 今天)
(x6 / 问题, poss, x7 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),去,去-02,false), Span(19,20,List(1),回家,回家-01,false), Span(18,19,List(2),要,要-02,false), Span(16,17,List(3),今天,今天,false), Span(14,15,List(4),一样,一样,false), Span(13,14,List(5),也,也,false), Span(12,13,List(6),我,我,false), Span(9,10,List(7),说道,说道,false), Span(8,9,List(8),接着,接着-01,false), Span(5,6,List(9),问题,问题,false), Span(3,4,List(10),我,我,false), Span(2,3,List(11),回答,回答-01,false), Span(1,2,List(12),不,不,false), Span(0,1,List(13),他,他,false)),Map(2 -> 要-02, 5 -> 也, 12 -> 不, 8 -> 接着-01, 7 -> 说道, 1 -> 回家-01, 4 -> 一样, 11 -> 回答-01, 6 -> 我, 0 -> 去-02, 9 -> 问题, 3 -> 今天, 10 -> 我, 13 -> 他),Map(回2 -> 回答-01, 也 -> 也, 我 -> 我, 接 -> 接着-01, 要 -> 要-02, 我2 -> 我, 今 -> 今天, 去 -> 去-02, 他 -> 他, 不 -> 不, 说 -> 说道, 问 -> 问题, 回 -> 回家-01, 一 -> 一样))),[Ljava.lang.String;@5a592c70,Annotation([Ljava.lang.String;@252ec02e,[Ljava.lang.String;@11e9ac24,[Ljava.lang.String;@74f280bd),Annotation([Ljava.lang.String;@675b18ff,[Ljava.lang.String;@34279b8a,[Ledu.cmu.lti.nlp.amr.Dependency;@687389a6),Annotation([Ljava.lang.String;@8641b7d,[Ljava.lang.String;@37c7766e,[Ljava.lang.String;@3fb450d7),Annotation([Ljava.lang.String;@4b7ed03e,[Ljava.lang.String;@636985df,[Ledu.cmu.lti.nlp.amr.Entity;@6f91fbda))
AMR:
(一 / 一样, manner, 也 / 也)
(一 / 一样, mod, 说 / 说道)
(一 / 一样, poss, 我 / 我)
(一 / 一样, time, 今 / 今天)
(他 / 他, part, 不 / 不)
(去 / 去-02, manner, 回 / 回家-01)
(回2 / 回答-01, manner, 不 / 不)
(回2 / 回答-01, prep-following, 我2 / 我)
(接 / 接着-01, prep-following, 问 / 问题)
(要 / 要-02, ARG3, 回 / 回家-01)
(要 / 要-02, time, 今 / 今天)
(说 / 说道, mod, 接 / 接着-01)
(问 / 问题, mod, 不 / 不)

Decoded in 56,820 microseconds
Sentence: 然后 ， 他 忧伤 地 说 ： “ 我 回家 要 远 得 多 … 要 难 得 多 … ”

Spans:
Span 2-3:  他 => 他
Span 9-10:  回家 => 回家-01
Span 4-5:  地 => 地
Span 18-19:  多 => 多
Span 13-14:  多 => 多
Span 17-18:  得 => 得-06
Span 12-13:  得 => 得-06
Span 3-4:  忧伤 => 忧伤-01
Span 8-9:  我 => 我
Span 15-16:  要 => 要-02
Span 10-11:  要 => 要-02
Span 5-6:  说 => 说-02
Span 11-12:  远 => 远
Span 16-17:  难 => 难-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 9-10:  回家 => 回家-01
Oracle Span 13-14:  多 => 多-03
Oracle Span 18-19:  多 => 多-03
Oracle Span 3-4:  忧伤 => 忧伤
Oracle Span 5-6:  说 => 说-01
Oracle Span 11-12:  远 => 远-01
Oracle Span 16-17:  难 => 难-01

Incorrect span: 多 => 多
Extra span: 得 => 得-06
Extra span: 要 => 要-02
Incorrect span: 多 => 多
Extra span: 得 => 得-06
Incorrect span: 远 => 远
Extra span: 要 => 要-02
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Extra span: 地 => 地
Incorrect span: 忧伤 => 忧伤-01
Missing span: 说 => 说-01
Missing span: 远 => 远-01
Missing span: 多 => 多-03
Missing span: 多 => 多-03
Missing span: 忧伤 => 忧伤
Dependencies:
1	然后	_	AD	AD	_	6	advmod	_	_
2	,	_	PU	PU	_	6	punct	_	_
3	他	_	PN	PN	_	6	dep	_	_
4	忧伤	_	VA	VA	_	6	dvpmod	_	_
5	地	_	DEV	DEV	_	4	dvpm	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	10	punct	_	_
9	我	_	PN	PN	_	10	nsubj	_	_
10	回家	_	VV	VV	_	6	ccomp	_	_
11	要	_	VV	VV	_	13	mmod	_	_
12	远	_	AD	AD	_	13	advmod	_	_
13	得	_	VV	VV	_	14	rcmod	_	_
14	多	_	NN	NN	_	10	dobj	_	_
15	…	_	PU	PU	_	19	punct	_	_
16	要	_	JJ	JJ	_	19	amod	_	_
17	难	_	AD	AD	_	18	advmod	_	_
18	得	_	VV	VV	_	19	rcmod	_	_
19	多	_	NN	NN	_	14	prnmod	_	_
20	…	_	PU	PU	_	19	punct	_	_
21	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x2 / 说-01, arg0, x3 / 他)
(x2 / 说-01, manner, x4 / 忧伤)
(x20 / 远-01, arg0, x21 / 回家-01)
(x20 / 远-01, degree, x23 / 多-03)
(x24 / 难-01, degree, x26 / 多-03)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),多,多,false), Span(17,18,List(1),得,得-06,false), Span(16,17,List(2),难,难-01,false), Span(15,16,List(3),要,要-02,false), Span(13,14,List(4),多,多,false), Span(12,13,List(5),得,得-06,false), Span(11,12,List(6),远,远,false), Span(10,11,List(7),要,要-02,false), Span(9,10,List(8),回家,回家-01,false), Span(8,9,List(9),我,我,false), Span(5,6,List(10),说,说-02,false), Span(4,5,List(11),地,地,false), Span(3,4,List(12),忧伤,忧伤-01,false), Span(2,3,List(13),他,他,false)),Map(2 -> 难-01, 5 -> 得-06, 12 -> 忧伤-01, 8 -> 回家-01, 7 -> 要-02, 1 -> 得-06, 4 -> 多, 11 -> 地, 6 -> 远, 0 -> 多, 9 -> 我, 3 -> 要-02, 10 -> 说-02, 13 -> 他),Map(难 -> 难-01, 我 -> 我, 得 -> 得-06, 要 -> 要-02, 远 -> 远, 得2 -> 得-06, 他 -> 他, 忧 -> 忧伤-01, 地 -> 地, 要2 -> 要-02, 多 -> 多, 说 -> 说-02, 回 -> 回家-01, 多2 -> 多))),[Ljava.lang.String;@723e3c17,Annotation([Ljava.lang.String;@4ffced4e,[Ljava.lang.String;@6094de13,[Ljava.lang.String;@bbb6f0),Annotation([Ljava.lang.String;@3e6ec74,[Ljava.lang.String;@2bd8f7db,[Ledu.cmu.lti.nlp.amr.Dependency;@6d7ad0f5),Annotation([Ljava.lang.String;@30abf79c,[Ljava.lang.String;@49a38b1,[Ljava.lang.String;@681061d6),Annotation([Ljava.lang.String;@53d6e959,[Ljava.lang.String;@3caee3a8,[Ledu.cmu.lti.nlp.amr.Entity;@69a40b3c))
AMR:
(回 / 回家-01, poss, 我 / 我)
(地 / 地, mod, 忧 / 忧伤-01)
(得 / 得-06, degree, 多 / 多)
(得2 / 得-06, degree, 多2 / 多)
(得2 / 得-06, degree, 远 / 远)
(忧 / 忧伤-01, prep-on-behalf, 他 / 他)
(要 / 要-02, ARG5, 难 / 难-01)
(要2 / 要-02, ARG5, 远 / 远)
(要2 / 要-02, manner, 回 / 回家-01)
(说 / 说-02, prep-on-behalf, 忧 / 忧伤-01)
(说 / 说-02, snt3, 回 / 回家-01)
(难 / 难-01, ARG5, 得 / 得-06)
(难 / 难-01, degree, 多2 / 多)

Decoded in 57,020 microseconds
Sentence: 我 清楚 地 感到 发生 了 某 种 不 寻常 的 事 。

Spans:
Span 8-9:  不 => 不
Span 11-12:  事 => 事
Span 4-5:  发生 => 发生-01
Span 2-3:  地 => 地
Span 9-10:  寻常 => 寻常-01
Span 3-4:  感到 => 感到-01
Span 0-1:  我 => 我
Span 6-7:  某 => 某
Span 1-2:  清楚 => 清楚-01
Span 7-8:  种 => 种

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 11-12:  事 => 事
Oracle Span 4-5:  发生 => 发生-01
Oracle Span 9-10:  寻常 => 寻常-01
Oracle Span 3-4:  感到 => 感到-01
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  清楚 => 清楚-01

Extra span: 不 => 不
Extra span: 种 => 种
Extra span: 某 => 某
Extra span: 地 => 地
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	清楚	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	感到	_	VV	VV	_	0	root	_	_
5	发生	_	VV	VV	_	12	rcmod	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	某	_	DT	DT	_	9	det	_	_
8	种	_	M	M	_	7	clf	_	_
9	不	_	NN	NN	_	10	nn	_	_
10	寻常	_	NN	NN	_	5	dobj	_	_
11	的	_	DEC	DEC	_	5	cpm	_	_
12	事	_	NN	NN	_	4	dobj	_	_
13	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 感到-01, arg0, x2 / 我)
(x0 / 感到-01, arg1, x4 / 发生-01)
(x0 / 感到-01, manner, x3 / 清楚-01)
(x4 / 发生-01, arg0, x5 / 事)
(x5 / 事, mod, x6 / 寻常-01)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),事,事,false), Span(9,10,List(1),寻常,寻常-01,false), Span(8,9,List(2),不,不,false), Span(7,8,List(3),种,种,false), Span(6,7,List(4),某,某,false), Span(4,5,List(5),发生,发生-01,false), Span(3,4,List(6),感到,感到-01,false), Span(2,3,List(7),地,地,false), Span(1,2,List(8),清楚,清楚-01,false), Span(0,1,List(9),我,我,false)),Map(2 -> 不, 5 -> 发生-01, 8 -> 清楚-01, 7 -> 地, 1 -> 寻常-01, 4 -> 某, 6 -> 感到-01, 9 -> 我, 0 -> 事, 3 -> 种),Map(清 -> 清楚-01, 发 -> 发生-01, 我 -> 我, 感 -> 感到-01, 寻 -> 寻常-01, 某 -> 某, 地 -> 地, 不 -> 不, 事 -> 事, 种 -> 种))),[Ljava.lang.String;@251c90f,Annotation([Ljava.lang.String;@6629643d,[Ljava.lang.String;@2dd178f3,[Ljava.lang.String;@64656b9e),Annotation([Ljava.lang.String;@6870cfac,[Ljava.lang.String;@45554613,[Ledu.cmu.lti.nlp.amr.Dependency;@63e5b8aa),Annotation([Ljava.lang.String;@2c9306d3,[Ljava.lang.String;@4270b142,[Ljava.lang.String;@2dfa02c1),Annotation([Ljava.lang.String;@6314df3c,[Ljava.lang.String;@5785e813,[Ledu.cmu.lti.nlp.amr.Entity;@10b8b900))
AMR:
(不 / 不, frequency, 种 / 种)
(事 / 事, mod, 寻 / 寻常-01)
(发 / 发生-01, value, 事 / 事)
(寻 / 寻常-01, ARG0, 某 / 某)
(感 / 感到-01, ARG1, 发 / 发生-01)
(感 / 感到-01, manner, 清 / 清楚-01)
(感 / 感到-01, season, 我 / 我)
(清 / 清楚-01, ARG1, 地 / 地)
(种 / 种, mod, 某 / 某)

Decoded in 31,414 microseconds
Sentence: 我 把 他 当作 小孩 一样 紧紧 抱在 怀里 ， 可是 我 感觉 到 他 径直 地 向 着 一 个 无底 深渊 沉陷 下去 ， 我 想 法 拉 住 他 ， 却 怎么 也 办 不 到 …

Spans:
Span 5-6:  一样 => 一样
Span 37-38:  不 => 不
Span 35-36:  也 => 也
Span 31-32:  他 => 他
Span 14-15:  他 => 他
Span 2-3:  他 => 他
Span 30-31:  住 => 住-01
Span 38-39:  到 => 到-01
Span 13-14:  到 => 到-01
Span 36-37:  办 => 办-01
Span 16-17:  地 => 地
Span 4-5:  小孩 => 小孩
Span 3-4:  当作 => 当作-01
Span 15-16:  径直 => 径直
Span 8-9:  怀里 => 怀里
Span 34-35:  怎么 => 怎么
Span 27-28:  想 => 想-05
Span 12-13:  感觉 => 感觉-01
Span 26-27:  我 => 我
Span 11-12:  我 => 我
Span 0-1:  我 => 我
Span 29-30:  拉 => 拉-01
Span 21-22:  无底 => 无底
Span 23-24:  沉陷 => 沉陷-01
Span 28-29:  法 => 法
Span 22-23:  深渊 => 深渊
Span 6-7:  紧紧 => 紧紧

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 35-36:  也 => 也
Oracle Span 2-3:  他 => 他
Oracle Span 4-5:  小孩 => 小孩
Oracle Span 3-4:  当作 => 当作-01
Oracle Span 15-16:  径直 => 径直
Oracle Span 8-9:  怀里 => 怀里
Oracle Span 34-35:  怎么 => 怎么
Oracle Span 27-28:  想 => 想-04
Oracle Span 12-13:  感觉 => 感觉-01
Oracle Span 0-1:  我 => 我
Oracle Span 21-22:  无底 => 无底
Oracle Span 23-24:  沉陷 => 沉陷-01
Oracle Span 28-29:  法 => 法
Oracle Span 22-23:  深渊 => 深渊
Oracle Span 6-7:  紧紧 => 紧紧

Extra span: 到 => 到-01
Extra span: 不 => 不
Extra span: 办 => 办-01
Extra span: 他 => 他
Extra span: 住 => 住-01
Extra span: 拉 => 拉-01
Incorrect span: 想 => 想-05
Extra span: 我 => 我
Extra span: 地 => 地
Extra span: 他 => 他
Extra span: 到 => 到-01
Extra span: 我 => 我
Extra span: 一样 => 一样
Missing span: 想 => 想-04
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	把	_	BA	BA	_	4	ba	_	_
3	他	_	PN	PN	_	4	nsubj	_	_
4	当作	_	VV	VV	_	0	root	_	_
5	小孩	_	NR	NR	_	9	nn	_	_
6	一样	_	CD	CD	_	9	nummod	_	_
7	紧紧	_	JJ	JJ	_	9	amod	_	_
8	抱在	_	NN	NN	_	9	nn	_	_
9	怀里	_	NN	NN	_	4	dobj	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	可是	_	AD	AD	_	18	advmod	_	_
12	我	_	PN	PN	_	18	nsubj	_	_
13	感觉	_	VV	VV	_	18	mmod	_	_
14	到	_	P	P	_	18	prep	_	_
15	他	_	PN	PN	_	14	pobj	_	_
16	径直	_	VA	VA	_	18	dvpmod	_	_
17	地	_	DEV	DEV	_	16	dvpm	_	_
18	向	_	VV	VV	_	4	conj	_	_
19	着	_	AS	AS	_	18	asp	_	_
20	一	_	CD	CD	_	21	nummod	_	_
21	个	_	M	M	_	24	clf	_	_
22	无底	_	NN	NN	_	24	nn	_	_
23	深渊	_	NN	NN	_	24	nn	_	_
24	沉陷	_	NN	NN	_	18	dobj	_	_
25	下去	_	VV	VV	_	18	dep	_	_
26	,	_	PU	PU	_	4	punct	_	_
27	我	_	PN	PN	_	28	nsubj	_	_
28	想	_	VV	VV	_	4	conj	_	_
29	法	_	NN	NN	_	30	nn	_	_
30	拉	_	NN	NN	_	28	dobj	_	_
31	住	_	VV	VV	_	28	dep	_	_
32	他	_	PN	PN	_	31	dobj	_	_
33	,	_	PU	PU	_	31	punct	_	_
34	却	_	AD	AD	_	39	advmod	_	_
35	怎么	_	AD	AD	_	39	advmod	_	_
36	也	_	AD	AD	_	39	advmod	_	_
37	办	_	VV	VV	_	39	mmod	_	_
38	不	_	AD	AD	_	39	neg	_	_
39	到	_	VV	VV	_	31	conj	_	_
40	…	_	NN	NN	_	39	dobj	_	_

Oracle:
(x77 / 当作-01, arg2, x80 / 小孩)
(x82 / 感觉-01, arg1, x84 / 沉陷-01)
(x84 / 沉陷-01, direction, x86 / 深渊)
(x84 / 沉陷-01, manner, x89 / 径直)
(x86 / 深渊, mod, x87 / 无底)
(x91 / 想-04, arg1, x93 / 法)

Input(Some(Graph(null,ArrayBuffer(Span(38,39,List(0),到,到-01,false), Span(37,38,List(1),不,不,false), Span(36,37,List(2),办,办-01,false), Span(35,36,List(3),也,也,false), Span(34,35,List(4),怎么,怎么,false), Span(31,32,List(5),他,他,false), Span(30,31,List(6),住,住-01,false), Span(29,30,List(7),拉,拉-01,false), Span(28,29,List(8),法,法,false), Span(27,28,List(9),想,想-05,false), Span(26,27,List(10),我,我,false), Span(23,24,List(11),沉陷,沉陷-01,false), Span(22,23,List(12),深渊,深渊,false), Span(21,22,List(13),无底,无底,false), Span(16,17,List(14),地,地,false), Span(15,16,List(15),径直,径直,false), Span(14,15,List(16),他,他,false), Span(13,14,List(17),到,到-01,false), Span(12,13,List(18),感觉,感觉-01,false), Span(11,12,List(19),我,我,false), Span(8,9,List(20),怀里,怀里,false), Span(6,7,List(21),紧紧,紧紧,false), Span(5,6,List(22),一样,一样,false), Span(4,5,List(23),小孩,小孩,false), Span(3,4,List(24),当作,当作-01,false), Span(2,3,List(25),他,他,false), Span(0,1,List(26),我,我,false)),Map(2 -> 办-01, 5 -> 他, 12 -> 深渊, 8 -> 法, 15 -> 径直, 21 -> 紧紧, 18 -> 感觉-01, 24 -> 当作-01, 7 -> 拉-01, 1 -> 不, 17 -> 到-01, 23 -> 小孩, 26 -> 我, 4 -> 怎么, 11 -> 沉陷-01, 14 -> 地, 20 -> 怀里, 6 -> 住-01, 9 -> 想-05, 0 -> 到-01, 22 -> 一样, 16 -> 他, 19 -> 我, 10 -> 我, 3 -> 也, 25 -> 他, 13 -> 无底),Map(他2 -> 他, 我3 -> 我, 沉 -> 沉陷-01, 我 -> 我, 感 -> 感觉-01, 也 -> 也, 到2 -> 到-01, 怀 -> 怀里, 无 -> 无底, 我2 -> 我, 他 -> 他, 小 -> 小孩, 地 -> 地, 怎 -> 怎么, 不 -> 不, 紧 -> 紧紧, 到 -> 到-01, 法 -> 法, 办 -> 办-01, 径 -> 径直, 拉 -> 拉-01, 他3 -> 他, 深 -> 深渊, 想 -> 想-05, 一 -> 一样, 当 -> 当作-01, 住 -> 住-01))),[Ljava.lang.String;@6d294ddc,Annotation([Ljava.lang.String;@2801827a,[Ljava.lang.String;@50bc3219,[Ljava.lang.String;@599f1b7),Annotation([Ljava.lang.String;@22791b75,[Ljava.lang.String;@64f4f12,[Ledu.cmu.lti.nlp.amr.Dependency;@37d28938),Annotation([Ljava.lang.String;@7d0cd23c,[Ljava.lang.String;@17c4dc5b,[Ljava.lang.String;@6b0f266e),Annotation([Ljava.lang.String;@4837f97e,[Ljava.lang.String;@53314f76,[Ledu.cmu.lti.nlp.amr.Entity;@62a6674f))
AMR:
(一 / 一样, mod, 小 / 小孩)
(不 / 不, mod, 办 / 办-01)
(他3 / 他, part, 当 / 当作-01)
(住 / 住-01, manner, 拉 / 拉-01)
(住 / 住-01, snt11, 他 / 他)
(到 / 到-01, manner, 不 / 不)
(到2 / 到-01, prep-along-with, 他2 / 他)
(办 / 办-01, manner, 也 / 也)
(地 / 地, manner, 径 / 径直)
(小 / 小孩, manner, 当 / 当作-01)
(当 / 当作-01, poss, 我3 / 我)
(径 / 径直, time, 到2 / 到-01)
(怀 / 怀里, domain, 一 / 一样)
(怎 / 怎么, mode, 办 / 办-01)
(想 / 想-05, manner, 我 / 我)
(想 / 想-05, manner, 沉 / 沉陷-01)
(感 / 感觉-01, beneficiary, 我2 / 我)
(感 / 感觉-01, snt11, 到2 / 到-01)
(感 / 感觉-01, time, 怀 / 怀里)
(拉 / 拉-01, manner, 想 / 想-05)
(拉 / 拉-01, manner, 法 / 法)
(拉 / 拉-01, polite, 办 / 办-01)
(沉 / 沉陷-01, direction, 深 / 深渊)
(沉 / 沉陷-01, manner, 径 / 径直)
(深 / 深渊, mod, 无 / 无底)
(紧 / 紧紧, mod, 一 / 一样)

Decoded in 225,084 microseconds
Sentence: 他 的 眼神 很 严肃 ， 望 着 遥远 的 地方 。

Spans:
Span 4-5:  严肃 => 严肃
Span 0-1:  他 => 他
Span 10-11:  地方 => 地方
Span 3-4:  很 => 很
Span 6-7:  望 => 望-01
Span 2-3:  眼神 => 眼神
Span 8-9:  遥远 => 遥远-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  严肃 => 严肃-01
Oracle Span 0-1:  他 => 他
Oracle Span 10-11:  地方 => 地方
Oracle Span 3-4:  很 => 很
Oracle Span 6-7:  望 => 望-01
Oracle Span 2-3:  眼神 => 眼神
Oracle Span 8-9:  遥远 => 遥远-01

Incorrect span: 严肃 => 严肃
Missing span: 严肃 => 严肃-01
Dependencies:
1	他	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	眼神	_	NN	NN	_	7	nsubj	_	_
4	很	_	AD	AD	_	7	advmod	_	_
5	严肃	_	AD	AD	_	7	advmod	_	_
6	,	_	PU	PU	_	7	punct	_	_
7	望	_	VV	VV	_	0	root	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	遥远	_	VA	VA	_	11	rcmod	_	_
10	的	_	DEC	DEC	_	9	cpm	_	_
11	地方	_	NN	NN	_	7	dobj	_	_
12	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x2 / 望-01, arg0, x4 / 他)
(x2 / 望-01, arg1, x5 / 地方)
(x2 / 望-01, manner, x7 / 严肃-01)
(x5 / 地方, mod, x6 / 遥远-01)
(x7 / 严肃-01, degree, x8 / 很)
(x9 / 眼神, arg0, x7 / 严肃-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),地方,地方,false), Span(8,9,List(1),遥远,遥远-01,false), Span(6,7,List(2),望,望-01,false), Span(4,5,List(3),严肃,严肃,false), Span(3,4,List(4),很,很,false), Span(2,3,List(5),眼神,眼神,false), Span(0,1,List(6),他,他,false)),Map(2 -> 望-01, 5 -> 眼神, 1 -> 遥远-01, 4 -> 很, 6 -> 他, 0 -> 地方, 3 -> 严肃),Map(眼 -> 眼神, 很 -> 很, 他 -> 他, 严 -> 严肃, 地 -> 地方, 遥 -> 遥远-01, 望 -> 望-01))),[Ljava.lang.String;@70881123,Annotation([Ljava.lang.String;@703fa45,[Ljava.lang.String;@5e905f2c,[Ljava.lang.String;@fddd7ae),Annotation([Ljava.lang.String;@3f6cce7f,[Ljava.lang.String;@2725ca05,[Ledu.cmu.lti.nlp.amr.Dependency;@7b9088f2),Annotation([Ljava.lang.String;@1a914089,[Ljava.lang.String;@43d76a92,[Ljava.lang.String;@4a2bf50f),Annotation([Ljava.lang.String;@350323a0,[Ljava.lang.String;@2506b881,[Ledu.cmu.lti.nlp.amr.Entity;@5d7dd549))
AMR:
(严 / 严肃, degree, 很 / 很)
(地 / 地方, mod, 遥 / 遥远-01)
(望 / 望-01, degree, 他 / 他)
(望 / 望-01, manner, 严 / 严肃)
(望 / 望-01, snt1, 地 / 地方)
(眼 / 眼神, part, 严 / 严肃)

Decoded in 16,370 microseconds
Sentence: “ 我 有 你 画 的 羊 ，

Spans:
Span 3-4:  你 => 你
Span 1-2:  我 => 我
Span 2-3:  有 => 有-06
Span 4-5:  画 => (thing :arg1-of 画-01)
Span 6-7:  羊 => 羊

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 羊 的 箱子

Spans:
Span 2-3:  箱子 => 箱子
Span 0-1:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  箱子 => 箱子
Oracle Span 0-1:  羊 => 羊

Dependencies:
1	羊	_	NN	NN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	箱子	_	NN	NN	_	0	root	_	_

Oracle:
(x0 / 箱子, poss, x2 / 羊)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),箱子,箱子,false), Span(0,1,List(1),羊,羊,false)),Map(1 -> 羊, 0 -> 箱子),Map(羊 -> 羊, 箱 -> 箱子))),[Ljava.lang.String;@6459f4ea,Annotation([Ljava.lang.String;@740b9a50,[Ljava.lang.String;@476fde05,[Ljava.lang.String;@5111de7c),Annotation([Ljava.lang.String;@7ac48e10,[Ljava.lang.String;@52354202,[Ledu.cmu.lti.nlp.amr.Dependency;@6b1321b7),Annotation([Ljava.lang.String;@342ee097,[Ljava.lang.String;@6ac45c0c,[Ljava.lang.String;@12192604),Annotation([Ljava.lang.String;@6075b369,[Ljava.lang.String;@231cdda8,[Ledu.cmu.lti.nlp.amr.Entity;@6b70d1fb))
AMR:
(箱 / 箱子, poss, 羊 / 羊)

Decoded in 2,397 microseconds
Sentence: 和 羊 的 嘴套子 …

Spans:
Span 3-4:  嘴套子 => 嘴套子
Span 1-2:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  嘴套子 => 嘴套子
Oracle Span 1-2:  羊 => 羊

Dependencies:
1	和	_	P	P	_	4	assmod	_	_
2	羊	_	NN	NN	_	1	pobj	_	_
3	的	_	DEG	DEG	_	1	assm	_	_
4	嘴套子	_	NN	NN	_	5	nsubj	_	_
5	…	_	VA	VA	_	0	root	_	_

Oracle:
(x5 / 嘴套子, poss, x6 / 羊)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),嘴套子,嘴套子,false), Span(1,2,List(1),羊,羊,false)),Map(1 -> 羊, 0 -> 嘴套子),Map(羊 -> 羊, 嘴 -> 嘴套子))),[Ljava.lang.String;@3002e397,Annotation([Ljava.lang.String;@7da1e005,[Ljava.lang.String;@38159384,[Ljava.lang.String;@55877274),Annotation([Ljava.lang.String;@723e2d08,[Ljava.lang.String;@6d4a82,[Ledu.cmu.lti.nlp.amr.Dependency;@14f060b8),Annotation([Ljava.lang.String;@7a0ab480,[Ljava.lang.String;@79df80a4,[Ljava.lang.String;@130cfc47),Annotation([Ljava.lang.String;@4eeab3e,[Ljava.lang.String;@2b6fb197,[Ledu.cmu.lti.nlp.amr.Entity;@2eb0cefe))
AMR:
(嘴 / 嘴套子, poss, 羊 / 羊)

Decoded in 2,449 microseconds
Sentence: 他 带 着 忧伤 的 神情 微笑 了 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  带 => 带-05
Span 6-7:  微笑 => 微笑
Span 3-4:  忧伤 => 忧伤-01
Span 5-6:  神情 => 神情

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  微笑 => 微笑-01
Oracle Span 3-4:  忧伤 => 忧伤
Oracle Span 5-6:  神情 => 神情

Incorrect span: 微笑 => 微笑
Incorrect span: 忧伤 => 忧伤-01
Extra span: 带 => 带-05
Missing span: 微笑 => 微笑-01
Missing span: 忧伤 => 忧伤
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	带	_	VV	VV	_	0	root	_	_
3	着	_	AS	AS	_	2	asp	_	_
4	忧伤	_	NN	NN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	神情	_	NN	NN	_	7	nn	_	_
7	微笑	_	NN	NN	_	2	dobj	_	_
8	了	_	SP	SP	_	2	dep	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 微笑-01, arg0, x2 / 他)
(x5 / 神情, mod, x6 / 忧伤)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),微笑,微笑,false), Span(5,6,List(1),神情,神情,false), Span(3,4,List(2),忧伤,忧伤-01,false), Span(1,2,List(3),带,带-05,false), Span(0,1,List(4),他,他,false)),Map(2 -> 忧伤-01, 1 -> 神情, 4 -> 他, 0 -> 微笑, 3 -> 带-05),Map(他 -> 他, 忧 -> 忧伤-01, 微 -> 微笑, 带 -> 带-05, 神 -> 神情))),[Ljava.lang.String;@5a2ae1ab,Annotation([Ljava.lang.String;@2bec068b,[Ljava.lang.String;@7d59e968,[Ljava.lang.String;@55361f03),Annotation([Ljava.lang.String;@581c9bb7,[Ljava.lang.String;@138f0661,[Ledu.cmu.lti.nlp.amr.Dependency;@212fafd1),Annotation([Ljava.lang.String;@448462f0,[Ljava.lang.String;@787988f4,[Ljava.lang.String;@132e3594),Annotation([Ljava.lang.String;@4f235107,[Ljava.lang.String;@28d739f1,[Ledu.cmu.lti.nlp.amr.Entity;@1c5d3a37))
AMR:
(带 / 带-05, prep-from, 他 / 他)
(带 / 带-05, subset, 微 / 微笑)
(忧 / 忧伤-01, ARG4, 带 / 带-05)
(神 / 神情, mod, 忧 / 忧伤-01)

Decoded in 9,342 microseconds
Sentence: 我 等 了 很 长 时间 ，

Spans:
Span 3-4:  很 => 很
Span 0-1:  我 => 我
Span 5-6:  时间 => 时间
Span 1-2:  等 => 等-01
Span 4-5:  长 => 长-04

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  很 => 很
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  时间 => 时间
Oracle Span 1-2:  等 => 等-01
Oracle Span 4-5:  长 => 长-04

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	等	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	长	_	JJ	JJ	_	6	amod	_	_
6	时间	_	NN	NN	_	2	dep	_	_
7	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x1 / 等-01, arg0, x2 / 我)
(x1 / 等-01, duration, x3 / 时间)
(x3 / 时间, mod, x4 / 长-04)
(x4 / 长-04, degree, x5 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),时间,时间,false), Span(4,5,List(1),长,长-04,false), Span(3,4,List(2),很,很,false), Span(1,2,List(3),等,等-01,false), Span(0,1,List(4),我,我,false)),Map(2 -> 很, 1 -> 长-04, 4 -> 我, 0 -> 时间, 3 -> 等-01),Map(我 -> 我, 很 -> 很, 等 -> 等-01, 时 -> 时间, 长 -> 长-04))),[Ljava.lang.String;@7e3d2ebd,Annotation([Ljava.lang.String;@2b43f314,[Ljava.lang.String;@3a4a5f3c,[Ljava.lang.String;@4f3356c0),Annotation([Ljava.lang.String;@586cc15d,[Ljava.lang.String;@6c835217,[Ledu.cmu.lti.nlp.amr.Dependency;@4584304),Annotation([Ljava.lang.String;@51888019,[Ljava.lang.String;@6f50d55c,[Ljava.lang.String;@19b5214b),Annotation([Ljava.lang.String;@5fb3111a,[Ljava.lang.String;@4aaecabd,[Ledu.cmu.lti.nlp.amr.Entity;@23bd0c81))
AMR:
(时 / 时间, mod, 长 / 长-04)
(等 / 等-01, duration, 时 / 时间)
(等 / 等-01, value, 我 / 我)
(长 / 长-04, degree, 很 / 很)

Decoded in 8,974 microseconds
Sentence: 才 觉得 他 身子 渐渐 暖和 起来 。

Spans:
Span 2-3:  他 => 他
Span 0-1:  才 => 才
Span 5-6:  暖和 => 暖和-01
Span 4-5:  渐渐 => 渐渐
Span 1-2:  觉得 => 觉得-01
Span 3-4:  身子 => 身子

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 0-1:  才 => 才
Oracle Span 5-6:  暖和 => 暖和-01
Oracle Span 4-5:  渐渐 => 渐渐
Oracle Span 1-2:  觉得 => 觉得-01
Oracle Span 3-4:  身子 => 身子

Dependencies:
1	才	_	AD	AD	_	2	advmod	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	他	_	PN	PN	_	6	nsubj	_	_
4	身子	_	AD	AD	_	6	advmod	_	_
5	渐渐	_	AD	AD	_	6	advmod	_	_
6	暖和	_	VV	VV	_	2	ccomp	_	_
7	起来	_	VV	VV	_	6	comod	_	_
8	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 觉得-01, arg1, x2 / 暖和-01)
(x0 / 觉得-01, manner, x6 / 才)
(x2 / 暖和-01, arg0, x3 / 身子)
(x2 / 暖和-01, manner, x5 / 渐渐)
(x3 / 身子, poss, x4 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),暖和,暖和-01,false), Span(4,5,List(1),渐渐,渐渐,false), Span(3,4,List(2),身子,身子,false), Span(2,3,List(3),他,他,false), Span(1,2,List(4),觉得,觉得-01,false), Span(0,1,List(5),才,才,false)),Map(2 -> 身子, 5 -> 才, 1 -> 渐渐, 4 -> 觉得-01, 0 -> 暖和-01, 3 -> 他),Map(才 -> 才, 觉 -> 觉得-01, 身 -> 身子, 暖 -> 暖和-01, 他 -> 他, 渐 -> 渐渐))),[Ljava.lang.String;@1332dec4,Annotation([Ljava.lang.String;@544e3679,[Ljava.lang.String;@6889f56f,[Ljava.lang.String;@231b35fb),Annotation([Ljava.lang.String;@26da1ba2,[Ljava.lang.String;@3820cfe,[Ledu.cmu.lti.nlp.amr.Dependency;@2407a36c),Annotation([Ljava.lang.String;@5ec9eefa,[Ljava.lang.String;@28b8f98a,[Ljava.lang.String;@3b4ef59f),Annotation([Ljava.lang.String;@22cb3d59,[Ljava.lang.String;@33e4b9c4,[Ledu.cmu.lti.nlp.amr.Entity;@5cff729b))
AMR:
(暖 / 暖和-01, degree, 身 / 身子)
(暖 / 暖和-01, manner, 渐 / 渐渐)
(觉 / 觉得-01, extent, 暖 / 暖和-01)
(觉 / 觉得-01, manner, 才 / 才)
(身 / 身子, poss, 他 / 他)

Decoded in 11,499 microseconds
Sentence: “ 小家伙 ，

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@10d18696,Annotation([Ljava.lang.String;@6b8b5020,[Ljava.lang.String;@7d37ee0c,[Ljava.lang.String;@5a7b309b),Annotation([Ljava.lang.String;@4602f874,[Ljava.lang.String;@7739aac4,[Ledu.cmu.lti.nlp.amr.Dependency;@353c6da1),Annotation([Ljava.lang.String;@36c07c75,[Ljava.lang.String;@6750e381,[Ljava.lang.String;@5d850a25),Annotation([Ljava.lang.String;@b022551,[Ljava.lang.String;@3e14d390,[Ledu.cmu.lti.nlp.amr.Entity;@5eb87338))
AMR:


Decoded in 1,054 microseconds
Sentence: 我 对 他 说 ： “ 你 受惊 了 … ”

Spans:
Span 2-3:  他 => 他
Span 6-7:  你 => 你
Span 7-8:  受惊 => 受惊-01
Span 1-2:  对 => 对-02
Span 0-1:  我 => 我
Span 3-4:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 7-8:  受惊 => 受惊-01
Oracle Span 0-1:  我 => 我
Oracle Span 3-4:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	他	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	8	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	受惊	_	VV	VV	_	4	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	NN	NN	_	8	dobj	_	_
11	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x4 / 受惊-01)
(x0 / 说-01, arg3, x3 / 他)
(x4 / 受惊-01, arg0, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),受惊,受惊-01,false), Span(6,7,List(1),你,你,false), Span(3,4,List(2),说,说-02,false), Span(2,3,List(3),他,他,false), Span(1,2,List(4),对,对-02,false), Span(0,1,List(5),我,我,false)),Map(2 -> 说-02, 5 -> 我, 1 -> 你, 4 -> 对-02, 0 -> 受惊-01, 3 -> 他),Map(受 -> 受惊-01, 我 -> 我, 你 -> 你, 他 -> 他, 说 -> 说-02, 对 -> 对-02))),[Ljava.lang.String;@2b999ee8,Annotation([Ljava.lang.String;@31ab1e67,[Ljava.lang.String;@29bbc391,[Ljava.lang.String;@3487442d),Annotation([Ljava.lang.String;@530ee28b,[Ljava.lang.String;@3a3f96ab,[Ledu.cmu.lti.nlp.amr.Dependency;@4def7d36),Annotation([Ljava.lang.String;@43c7fe8a,[Ljava.lang.String;@67f946c3,[Ljava.lang.String;@21b51e59),Annotation([Ljava.lang.String;@1785d194,[Ljava.lang.String;@6b4a4e40,[Ledu.cmu.lti.nlp.amr.Entity;@46a8c2b4))
AMR:
(受 / 受惊-01, prep-following, 你 / 你)
(对 / 对-02, beneficiary, 我 / 我)
(说 / 说-02, ARG4, 他 / 他)
(说 / 说-02, mode, 受 / 受惊-01)
(说 / 说-02, scale, 对 / 对-02)

Decoded in 13,558 microseconds
Sentence: 他 害怕 了 ， 这 是 无疑 的 ！

Spans:
Span 0-1:  他 => 他
Span 1-2:  害怕 => 害怕-01
Span 6-7:  无疑 => 无疑-01
Span 5-6:  是 => 是-04
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  害怕 => 害怕-01
Oracle Span 6-7:  无疑 => 无疑-01

Extra span: 是 => 是-04
Extra span: 这 => 这
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	害怕	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	,	_	PU	PU	_	2	punct	_	_
5	这	_	PN	PN	_	6	nsubj	_	_
6	是	_	VC	VC	_	2	conj	_	_
7	无疑	_	AD	AD	_	6	advmod	_	_
8	的	_	SP	SP	_	2	dep	_	_
9	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x3 / 无疑-01, arg0, x8 / 害怕-01)
(x8 / 害怕-01, arg0, x9 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),无疑,无疑-01,false), Span(5,6,List(1),是,是-04,false), Span(4,5,List(2),这,这,false), Span(1,2,List(3),害怕,害怕-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 这, 1 -> 是-04, 4 -> 他, 0 -> 无疑-01, 3 -> 害怕-01),Map(害 -> 害怕-01, 这 -> 这, 无 -> 无疑-01, 他 -> 他, 是 -> 是-04))),[Ljava.lang.String;@4f664bee,Annotation([Ljava.lang.String;@76563ae7,[Ljava.lang.String;@4fd74223,[Ljava.lang.String;@4fea840f),Annotation([Ljava.lang.String;@32ae8f27,[Ljava.lang.String;@75e80a97,[Ledu.cmu.lti.nlp.amr.Dependency;@5b8853),Annotation([Ljava.lang.String;@1b8aaeab,[Ljava.lang.String;@5d1bdd4a,[Ljava.lang.String;@6812c8cc),Annotation([Ljava.lang.String;@3457cc8d,[Ljava.lang.String;@7a66c35a,[Ledu.cmu.lti.nlp.amr.Entity;@7994a0d1))
AMR:
(害 / 害怕-01, prep-following, 他 / 他)
(无 / 无疑-01, manner, 是 / 是-04)
(是 / 是-04, manner, 害 / 害怕-01)
(是 / 是-04, mod, 这 / 这)

Decoded in 8,636 microseconds
Sentence: 他 却 温柔 地 笑 着 说 ：

Spans:
Span 0-1:  他 => 他
Span 3-4:  地 => 地
Span 2-3:  温柔 => 温柔-01
Span 4-5:  笑 => 笑-01
Span 6-7:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  温柔 => 温柔-01
Oracle Span 6-7:  说 => 说-01

Incorrect span: 说 => 说-02
Extra span: 笑 => 笑-01
Extra span: 地 => 地
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	却	_	AD	AD	_	5	advmod	_	_
3	温柔	_	VA	VA	_	5	dvpmod	_	_
4	地	_	DEV	DEV	_	3	dvpm	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	着	_	AS	AS	_	5	asp	_	_
7	说	_	VV	VV	_	5	dep	_	_
8	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 说-01, arg0, x8 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),说,说-02,false), Span(4,5,List(1),笑,笑-01,false), Span(3,4,List(2),地,地,false), Span(2,3,List(3),温柔,温柔-01,false), Span(0,1,List(4),他,他,false)),Map(2 -> 地, 1 -> 笑-01, 4 -> 他, 0 -> 说-02, 3 -> 温柔-01),Map(温 -> 温柔-01, 笑 -> 笑-01, 他 -> 他, 地 -> 地, 说 -> 说-02))),[Ljava.lang.String;@73e4387,Annotation([Ljava.lang.String;@d87d449,[Ljava.lang.String;@4137aab0,[Ljava.lang.String;@1df9186f),Annotation([Ljava.lang.String;@682e422c,[Ljava.lang.String;@5bb8e6fc,[Ledu.cmu.lti.nlp.amr.Dependency;@2726a511),Annotation([Ljava.lang.String;@72c9ebfa,[Ljava.lang.String;@686cf8ad,[Ljava.lang.String;@747f6c5a),Annotation([Ljava.lang.String;@66e341e9,[Ljava.lang.String;@5b48f0f4,[Ledu.cmu.lti.nlp.amr.Entity;@546ed2a0))
AMR:
(地 / 地, mod, 温 / 温柔-01)
(地 / 地, quant, 他 / 他)
(笑 / 笑-01, manner, 地 / 地)
(说 / 说-02, manner, 笑 / 笑-01)

Decoded in 7,901 microseconds
Sentence: “ 今天 晚上 ， 我 会 怕 得 更 厉害 … ”

Spans:
Span 1-2:  今天 => 今天
Span 5-6:  会 => 会-03
Span 9-10:  厉害 => 厉害
Span 7-8:  得 => 得-06
Span 6-7:  怕 => 怕-01
Span 4-5:  我 => 我
Span 2-3:  晚上 => 晚上
Span 8-9:  更 => 更-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  今天 => 今天
Oracle Span 5-6:  会 => 会-02
Oracle Span 9-10:  厉害 => 厉害-01
Oracle Span 6-7:  怕 => 怕-01
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  晚上 => 晚上
Oracle Span 8-9:  更 => 更

Incorrect span: 厉害 => 厉害
Incorrect span: 更 => 更-01
Extra span: 得 => 得-06
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 厉害 => 厉害-01
Missing span: 更 => 更
Dependencies:
1	“	_	PU	PU	_	10	punct	_	_
2	今天	_	NT	NT	_	3	nn	_	_
3	晚上	_	NT	NT	_	10	tmod	_	_
4	,	_	PU	PU	_	10	punct	_	_
5	我	_	PN	PN	_	10	nsubj	_	_
6	会	_	VV	VV	_	10	mmod	_	_
7	怕	_	VV	VV	_	10	dep	_	_
8	得	_	DER	DER	_	10	dep	_	_
9	更	_	AD	AD	_	10	advmod	_	_
10	厉害	_	VV	VV	_	0	root	_	_
11	…	_	NN	NN	_	10	dobj	_	_
12	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x10 / 会-02, arg0, x11 / 怕-01)
(x10 / 会-02, time, x15 / 晚上)
(x11 / 怕-01, arg0, x12 / 我)
(x11 / 怕-01, degree, x13 / 厉害-01)
(x13 / 厉害-01, degree, x14 / 更)
(x15 / 晚上, time, x16 / 今天)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),厉害,厉害,false), Span(8,9,List(1),更,更-01,false), Span(7,8,List(2),得,得-06,false), Span(6,7,List(3),怕,怕-01,false), Span(5,6,List(4),会,会-03,false), Span(4,5,List(5),我,我,false), Span(2,3,List(6),晚上,晚上,false), Span(1,2,List(7),今天,今天,false)),Map(2 -> 得-06, 5 -> 我, 7 -> 今天, 1 -> 更-01, 4 -> 会-03, 6 -> 晚上, 0 -> 厉害, 3 -> 怕-01),Map(怕 -> 怕-01, 厉 -> 厉害, 我 -> 我, 得 -> 得-06, 今 -> 今天, 晚 -> 晚上, 会 -> 会-03, 更 -> 更-01))),[Ljava.lang.String;@5bfc79cb,Annotation([Ljava.lang.String;@27ec8754,[Ljava.lang.String;@3bbf1c0d,[Ljava.lang.String;@19662208),Annotation([Ljava.lang.String;@216c22ce,[Ljava.lang.String;@62f9c790,[Ledu.cmu.lti.nlp.amr.Dependency;@21e5f0b6),Annotation([Ljava.lang.String;@93bf0e0,[Ljava.lang.String;@4981d95b,[Ljava.lang.String;@656842bc),Annotation([Ljava.lang.String;@6b867ee7,[Ljava.lang.String;@3dec3f87,[Ledu.cmu.lti.nlp.amr.Entity;@7a606260))
AMR:
(会 / 会-03, beneficiary, 我 / 我)
(会 / 会-03, time, 晚 / 晚上)
(得 / 得-06, degree, 怕 / 怕-01)
(得 / 得-06, degree, 更 / 更-01)
(怕 / 怕-01, manner, 会 / 会-03)
(晚 / 晚上, time, 今 / 今天)
(更 / 更-01, location, 厉 / 厉害)

Decoded in 17,905 microseconds
Sentence: 我 再度 意识 到 要 发生 一 件 不 可 弥补 的 事 。

Spans:
Span 8-9:  不 => 不
Span 12-13:  事 => 事
Span 1-2:  再度 => 再度
Span 3-4:  到 => 到-01
Span 5-6:  发生 => 发生-01
Span 9-10:  可 => 可-01
Span 2-3:  意识 => 意识-01
Span 0-1:  我 => 我
Span 4-5:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 12-13:  事 => 事
Oracle Span 1-2:  再度 => 再度
Oracle Span 5-6:  发生 => 发生-01
Oracle Span 2-3:  意识 => 意识-01
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  要 => 要-03

Extra span: 可 => 可-01
Extra span: 不 => 不
Incorrect span: 要 => 要-02
Extra span: 到 => 到-01
Missing span: 要 => 要-03
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	再度	_	AD	AD	_	3	advmod	_	_
3	意识	_	VV	VV	_	0	root	_	_
4	到	_	VV	VV	_	3	comod	_	_
5	要	_	VV	VV	_	6	mmod	_	_
6	发生	_	VV	VV	_	3	dep	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	件	_	M	M	_	13	clf	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	可	_	VV	VV	_	11	dep	_	_
11	弥补	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	事	_	NN	NN	_	6	dobj	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 意识-01, arg0, x2 / 我)
(x0 / 意识-01, arg1, x9 / 要-03)
(x0 / 意识-01, mod, x3 / 再度)
(x10 / 发生-01, arg0, x11 / 事)
(x9 / 要-03, arg0, x10 / 发生-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),事,事,false), Span(9,10,List(1),可,可-01,false), Span(8,9,List(2),不,不,false), Span(5,6,List(3),发生,发生-01,false), Span(4,5,List(4),要,要-02,false), Span(3,4,List(5),到,到-01,false), Span(2,3,List(6),意识,意识-01,false), Span(1,2,List(7),再度,再度,false), Span(0,1,List(8),我,我,false)),Map(2 -> 不, 5 -> 到-01, 8 -> 我, 7 -> 再度, 1 -> 可-01, 4 -> 要-02, 6 -> 意识-01, 0 -> 事, 3 -> 发生-01),Map(发 -> 发生-01, 我 -> 我, 要 -> 要-02, 意 -> 意识-01, 到 -> 到-01, 不 -> 不, 事 -> 事, 再 -> 再度, 可 -> 可-01))),[Ljava.lang.String;@5dbab232,Annotation([Ljava.lang.String;@5939e24,[Ljava.lang.String;@595f9916,[Ljava.lang.String;@2055833f),Annotation([Ljava.lang.String;@28768e25,[Ljava.lang.String;@310d57b1,[Ledu.cmu.lti.nlp.amr.Dependency;@143fefaf),Annotation([Ljava.lang.String;@18ffca6c,[Ljava.lang.String;@46468f0,[Ljava.lang.String;@5f8f1712),Annotation([Ljava.lang.String;@34a6d9db,[Ljava.lang.String;@52ecc989,[Ledu.cmu.lti.nlp.amr.Entity;@756808cc))
AMR:
(到 / 到-01, ARG0, 我 / 我)
(到 / 到-01, ARG3, 发 / 发生-01)
(发 / 发生-01, prep-from, 事 / 事)
(可 / 可-01, ARG0, 事 / 事)
(可 / 可-01, manner, 不 / 不)
(意 / 意识-01, ARG3, 要 / 要-02)
(意 / 意识-01, direction, 到 / 到-01)
(意 / 意识-01, mod, 再 / 再度)

Decoded in 24,004 microseconds
Sentence: 我 觉得 我 的 心 一下子 就 凉 了 。 这时 我 才 明白 ： 一 想到 再 也 不 能 听到 这 笑声 ， 我 就 不 能 忍受 。

Spans:
Span 5-6:  一下子 => 一下子
Span 27-28:  不 => 不
Span 19-20:  不 => 不
Span 18-19:  也 => 也
Span 17-18:  再 => 再
Span 7-8:  凉 => 凉-03
Span 21-22:  听到 => 听到-01
Span 26-27:  就 => 就-01
Span 6-7:  就 => 就-01
Span 4-5:  心 => 心
Span 29-30:  忍受 => 忍受-01
Span 16-17:  想到 => 想到-01
Span 25-26:  我 => 我
Span 11-12:  我 => 我
Span 2-3:  我 => 我
Span 0-1:  我 => 我
Span 12-13:  才 => 才
Span 13-14:  明白 => 明白-01
Span 23-24:  笑声 => 笑声
Span 28-29:  能 => 能
Span 20-21:  能 => 能
Span 1-2:  觉得 => 觉得-01
Span 22-23:  这 => 这
Span 10-11:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  一下子 => 一下子
Oracle Span 17-18:  再 => 再-01
Oracle Span 7-8:  凉 => 凉-03
Oracle Span 21-22:  听到 => 听到-01
Oracle Span 6-7:  就 => 就
Oracle Span 26-27:  就 => 就-01
Oracle Span 4-5:  心 => 心
Oracle Span 29-30:  忍受 => 忍受-01
Oracle Span 16-17:  想到 => 想到-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  才 => 才
Oracle Span 13-14:  明白 => 明白-01
Oracle Span 23-24:  笑声 => 笑声
Oracle Span 20-21:  能 => 能-01
Oracle Span 28-29:  能 => 能-01
Oracle Span 1-2:  觉得 => 觉得-01
Oracle Span 22-23:  这 => 这
Oracle Span 10-11:  这时 => 这时

Incorrect span: 能 => 能
Extra span: 不 => 不
Extra span: 我 => 我
Incorrect span: 能 => 能
Extra span: 不 => 不
Extra span: 也 => 也
Incorrect span: 再 => 再
Extra span: 我 => 我
Incorrect span: 就 => 就-01
Extra span: 我 => 我
Missing span: 就 => 就
Missing span: 能 => 能-01
Missing span: 再 => 再-01
Missing span: 能 => 能-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	觉得	_	VV	VV	_	0	root	_	_
3	我	_	PN	PN	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	心	_	NN	NN	_	8	nsubj	_	_
6	一下子	_	AD	AD	_	8	advmod	_	_
7	就	_	AD	AD	_	8	advmod	_	_
8	凉	_	VV	VV	_	2	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	8	punct	_	_
11	这时	_	AD	AD	_	14	advmod	_	_
12	我	_	PN	PN	_	14	nsubj	_	_
13	才	_	AD	AD	_	14	advmod	_	_
14	明白	_	VV	VV	_	8	conj	_	_
15	：	_	PU	PU	_	14	punct	_	_
16	一	_	NT	NT	_	17	tmod	_	_
17	想到	_	VV	VV	_	14	ccomp	_	_
18	再	_	AD	AD	_	22	advmod	_	_
19	也	_	AD	AD	_	22	advmod	_	_
20	不	_	AD	AD	_	22	neg	_	_
21	能	_	VV	VV	_	22	mmod	_	_
22	听到	_	VV	VV	_	17	ccomp	_	_
23	这	_	DT	DT	_	24	det	_	_
24	笑声	_	NN	NN	_	22	dobj	_	_
25	,	_	PU	PU	_	8	punct	_	_
26	我	_	PN	PN	_	30	nsubj	_	_
27	就	_	AD	AD	_	30	advmod	_	_
28	不	_	AD	AD	_	30	neg	_	_
29	能	_	VV	VV	_	30	dep	_	_
30	忍受	_	VV	VV	_	8	conj	_	_
31	。	_	PU	PU	_	2	punct	_	_
32	一	_	NT	NT	_	22	xsubj	_	_

Oracle:
(x2 / 觉得-01, arg0, x3 / 我)
(x2 / 觉得-01, arg1, x4 / 凉-03)
(x25 / 想到-01, arg1, x27 / 能-01)
(x27 / 能-01, arg0, x30 / 听到-01)
(x27 / 能-01, manner, x29 / 再-01)
(x30 / 听到-01, arg1, x32 / 笑声)
(x32 / 笑声, mod, x33 / 这)
(x34 / 能-01, arg0, x36 / 忍受-01)
(x34 / 能-01, manner, x38 / 就-01)
(x4 / 凉-03, arg1, x5 / 心)
(x4 / 凉-03, manner, x7 / 就)
(x4 / 凉-03, manner, x8 / 一下子)
(x9 / 明白-01, manner, x11 / 才)
(x9 / 明白-01, time, x12 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(29,30,List(0),忍受,忍受-01,false), Span(28,29,List(1),能,能,false), Span(27,28,List(2),不,不,false), Span(26,27,List(3),就,就-01,false), Span(25,26,List(4),我,我,false), Span(23,24,List(5),笑声,笑声,false), Span(22,23,List(6),这,这,false), Span(21,22,List(7),听到,听到-01,false), Span(20,21,List(8),能,能,false), Span(19,20,List(9),不,不,false), Span(18,19,List(10),也,也,false), Span(17,18,List(11),再,再,false), Span(16,17,List(12),想到,想到-01,false), Span(13,14,List(13),明白,明白-01,false), Span(12,13,List(14),才,才,false), Span(11,12,List(15),我,我,false), Span(10,11,List(16),这时,这时,false), Span(7,8,List(17),凉,凉-03,false), Span(6,7,List(18),就,就-01,false), Span(5,6,List(19),一下子,一下子,false), Span(4,5,List(20),心,心,false), Span(2,3,List(21),我,我,false), Span(1,2,List(22),觉得,觉得-01,false), Span(0,1,List(23),我,我,false)),Map(2 -> 不, 5 -> 笑声, 12 -> 想到-01, 15 -> 我, 8 -> 能, 21 -> 我, 18 -> 就-01, 7 -> 听到-01, 17 -> 凉-03, 1 -> 能, 23 -> 我, 4 -> 我, 11 -> 再, 14 -> 才, 20 -> 心, 6 -> 这, 22 -> 觉得-01, 0 -> 忍受-01, 9 -> 不, 16 -> 这时, 19 -> 一下子, 3 -> 就-01, 10 -> 也, 13 -> 明白-01),Map(就 -> 就-01, 我3 -> 我, 才 -> 才, 我 -> 我, 也 -> 也, 忍 -> 忍受-01, 笑 -> 笑声, 这 -> 这, 觉 -> 觉得-01, 能 -> 能, 我2 -> 我, 心 -> 心, 就2 -> 就-01, 不 -> 不, 不2 -> 不, 这2 -> 这时, 听 -> 听到-01, 我4 -> 我, 明 -> 明白-01, 想 -> 想到-01, 凉 -> 凉-03, 能2 -> 能, 一 -> 一下子, 再 -> 再))),[Ljava.lang.String;@52f8a6f4,Annotation([Ljava.lang.String;@5012c571,[Ljava.lang.String;@6486fe7b,[Ljava.lang.String;@511da44f),Annotation([Ljava.lang.String;@4645679e,[Ljava.lang.String;@3a0b6a,[Ledu.cmu.lti.nlp.amr.Dependency;@539c4830),Annotation([Ljava.lang.String;@6f1fa1d0,[Ljava.lang.String;@28b523a,[Ljava.lang.String;@52ba685a),Annotation([Ljava.lang.String;@63d677f5,[Ljava.lang.String;@71d55b7e,[Ledu.cmu.lti.nlp.amr.Entity;@2997ddfc))
AMR:
(不 / 不, manner, 就 / 就-01)
(不2 / 不, manner, 也 / 也)
(再 / 再, part, 不2 / 不)
(再 / 再, prep-following, 想 / 想到-01)
(凉 / 凉-03, manner, 一 / 一下子)
(凉 / 凉-03, manner, 就2 / 就-01)
(凉 / 凉-03, manner, 心 / 心)
(就 / 就-01, beneficiary, 我 / 我)
(就 / 就-01, time, 笑 / 笑声)
(明 / 明白-01, manner, 凉 / 凉-03)
(明 / 明白-01, manner, 才 / 才)
(明 / 明白-01, mode, 想 / 想到-01)
(明 / 明白-01, polite, 我2 / 我)
(明 / 明白-01, time, 这2 / 这时)
(笑 / 笑声, mod, 这 / 这)
(笑 / 笑声, poss, 听 / 听到-01)
(能 / 能, mod, 不 / 不)
(能 / 能, mode, 忍 / 忍受-01)
(能2 / 能, mod, 不2 / 不)
(能2 / 能, mode, 听 / 听到-01)
(觉 / 觉得-01, beneficiary, 我4 / 我)
(觉 / 觉得-01, polite, 凉 / 凉-03)
(觉 / 觉得-01, snt11, 我3 / 我)

Decoded in 164,900 microseconds
Sentence: 这 笑声 对 我 来说 ， 就 好象 是 沙漠 中 的 甘泉 一样 。

Spans:
Span 13-14:  一样 => 一样
Span 2-3:  对 => 对-02
Span 6-7:  就 => 就-01
Span 3-4:  我 => 我
Span 8-9:  是 => 是-04
Span 4-5:  来说 => 来说-01
Span 9-10:  沙漠 => 沙漠
Span 12-13:  甘泉 => 甘泉
Span 1-2:  笑声 => 笑声
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  来说 => 来说-01
Oracle Span 9-10:  沙漠 => 沙漠
Oracle Span 12-13:  甘泉 => 甘泉
Oracle Span 1-2:  笑声 => 笑声
Oracle Span 0-1:  这 => 这

Extra span: 一样 => 一样
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 对 => 对-02
Dependencies:
1	这	_	PN	PN	_	2	nsubj	_	_
2	笑声	_	VV	VV	_	0	root	_	_
3	对	_	P	P	_	14	prep	_	_
4	我	_	PN	PN	_	5	nsubj	_	_
5	来说	_	VV	VV	_	3	pccomp	_	_
6	,	_	PU	PU	_	5	punct	_	_
7	就	_	AD	AD	_	9	advmod	_	_
8	好象	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	5	ccomp	_	_
10	沙漠	_	NN	NN	_	11	lobj	_	_
11	中	_	LC	LC	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	甘泉	_	NN	NN	_	9	attr	_	_
14	一样	_	VA	VA	_	2	ccomp	_	_
15	。	_	PU	PU	_	2	punct	_	_
16	这	_	PN	PN	_	14	xsubj	_	_
17	我	_	PN	PN	_	9	xsubj	_	_

Oracle:
(x0 / 来说-01, arg0, x2 / 笑声)
(x0 / 来说-01, arg1, x4 / 我)
(x2 / 笑声, mod, x3 / 这)
(x7 / 甘泉, location, x8 / 沙漠)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),一样,一样,false), Span(12,13,List(1),甘泉,甘泉,false), Span(9,10,List(2),沙漠,沙漠,false), Span(8,9,List(3),是,是-04,false), Span(6,7,List(4),就,就-01,false), Span(4,5,List(5),来说,来说-01,false), Span(3,4,List(6),我,我,false), Span(2,3,List(7),对,对-02,false), Span(1,2,List(8),笑声,笑声,false), Span(0,1,List(9),这,这,false)),Map(2 -> 沙漠, 5 -> 来说-01, 8 -> 笑声, 7 -> 对-02, 1 -> 甘泉, 4 -> 就-01, 6 -> 我, 9 -> 这, 0 -> 一样, 3 -> 是-04),Map(就 -> 就-01, 我 -> 我, 来 -> 来说-01, 这 -> 这, 笑 -> 笑声, 甘 -> 甘泉, 沙 -> 沙漠, 对 -> 对-02, 是 -> 是-04, 一 -> 一样))),[Ljava.lang.String;@28ee882c,Annotation([Ljava.lang.String;@78d73b1b,[Ljava.lang.String;@238291d4,[Ljava.lang.String;@34edd065),Annotation([Ljava.lang.String;@681e913c,[Ljava.lang.String;@29d070c7,[Ledu.cmu.lti.nlp.amr.Dependency;@1eeb5818),Annotation([Ljava.lang.String;@44dfdd58,[Ljava.lang.String;@58d4238e,[Ljava.lang.String;@72a8361b),Annotation([Ljava.lang.String;@36478bce,[Ljava.lang.String;@c48b543,[Ledu.cmu.lti.nlp.amr.Entity;@75793f17))
AMR:
(对 / 对-02, location, 笑 / 笑声)
(对 / 对-02, topic, 就 / 就-01)
(对 / 对-02, year, 我 / 我)
(是 / 是-04, location, 沙 / 沙漠)
(是 / 是-04, manner, 就 / 就-01)
(来 / 来说-01, prep-without, 就 / 就-01)
(甘 / 甘泉, location, 一 / 一样)
(甘 / 甘泉, source, 是 / 是-04)
(笑 / 笑声, mod, 这 / 这)

Decoded in 26,953 microseconds
Sentence: “ 小家伙 ，

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@4652c74d,Annotation([Ljava.lang.String;@4cc12db2,[Ljava.lang.String;@5ea7bc4,[Ljava.lang.String;@39d77de9),Annotation([Ljava.lang.String;@696fad31,[Ljava.lang.String;@2c06b113,[Ledu.cmu.lti.nlp.amr.Dependency;@7a64cb0c),Annotation([Ljava.lang.String;@785ed99c,[Ljava.lang.String;@6c4ce583,[Ljava.lang.String;@755b5f30),Annotation([Ljava.lang.String;@29bbc63c,[Ljava.lang.String;@272778ae,[Ledu.cmu.lti.nlp.amr.Entity;@2cccf134))
AMR:


Decoded in 998 microseconds
Sentence: 我 说 ： “ 我 还 想 听 你 笑 … ”

Spans:
Span 8-9:  你 => 你
Span 7-8:  听 => 听-02
Span 6-7:  想 => 想-05
Span 4-5:  我 => 我
Span 0-1:  我 => 我
Span 9-10:  笑 => 笑-01
Span 1-2:  说 => 说-02
Span 5-6:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  你 => 你
Oracle Span 7-8:  听 => 听-01
Oracle Span 6-7:  想 => 想-02
Oracle Span 0-1:  我 => 我
Oracle Span 9-10:  笑 => 笑-01
Oracle Span 1-2:  说 => 说-01
Oracle Span 5-6:  还 => 还

Incorrect span: 听 => 听-02
Incorrect span: 想 => 想-05
Extra span: 我 => 我
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Missing span: 想 => 想-02
Missing span: 听 => 听-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	7	punct	_	_
5	我	_	PN	PN	_	7	nsubj	_	_
6	还	_	AD	AD	_	7	advmod	_	_
7	想	_	VV	VV	_	2	ccomp	_	_
8	听	_	VV	VV	_	7	ccomp	_	_
9	你	_	PN	PN	_	11	nn	_	_
10	笑	_	NN	NN	_	11	nn	_	_
11	…	_	NN	NN	_	8	dobj	_	_
12	”	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x3 / 想-02)
(x3 / 想-02, arg1, x5 / 听-01)
(x3 / 想-02, manner, x9 / 还)
(x5 / 听-01, arg1, x7 / 笑-01)
(x7 / 笑-01, arg0, x8 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),笑,笑-01,false), Span(8,9,List(1),你,你,false), Span(7,8,List(2),听,听-02,false), Span(6,7,List(3),想,想-05,false), Span(5,6,List(4),还,还,false), Span(4,5,List(5),我,我,false), Span(1,2,List(6),说,说-02,false), Span(0,1,List(7),我,我,false)),Map(2 -> 听-02, 5 -> 我, 7 -> 我, 1 -> 你, 4 -> 还, 6 -> 说-02, 0 -> 笑-01, 3 -> 想-05),Map(我 -> 我, 笑 -> 笑-01, 我2 -> 我, 你 -> 你, 说 -> 说-02, 还 -> 还, 听 -> 听-02, 想 -> 想-05))),[Ljava.lang.String;@3c18942,Annotation([Ljava.lang.String;@743c3520,[Ljava.lang.String;@6842c101,[Ljava.lang.String;@234cd86c),Annotation([Ljava.lang.String;@2c48cede,[Ljava.lang.String;@39c87b42,[Ledu.cmu.lti.nlp.amr.Dependency;@47fcefb3),Annotation([Ljava.lang.String;@236c098,[Ljava.lang.String;@68e2d03e,[Ljava.lang.String;@120aa40b),Annotation([Ljava.lang.String;@32ab408e,[Ljava.lang.String;@6ad6443,[Ledu.cmu.lti.nlp.amr.Entity;@78b03788))
AMR:
(听 / 听-02, snt11, 你 / 你)
(想 / 想-05, manner, 我 / 我)
(想 / 想-05, manner, 还 / 还)
(想 / 想-05, snt11, 听 / 听-02)
(笑 / 笑-01, manner, 听 / 听-02)
(说 / 说-02, poss, 我2 / 我)
(说 / 说-02, scale, 想 / 想-05)

Decoded in 19,476 microseconds
Sentence: 但 他 对 我 说 ： “ 到 今天 夜里 ， 正好 是 一 年 了 。 我 的 星球 将 正好 处于 我 去年 降落 的 那个 地方 的 上空 … ”

Spans:
Span 30-31:  上空 => 上空
Span 8-9:  今天 => 今天
Span 1-2:  他 => 他
Span 7-8:  到 => 到-01
Span 24-25:  去年 => 去年
Span 28-29:  地方 => 地方
Span 22-23:  处于 => 处于-01
Span 9-10:  夜里 => 夜里
Span 2-3:  对 => 对-02
Span 20-21:  将 => 将-01
Span 14-15:  年 => 年
Span 23-24:  我 => 我
Span 17-18:  我 => 我
Span 3-4:  我 => 我
Span 19-20:  星球 => 星球
Span 12-13:  是 => 是-04
Span 21-22:  正好 => 正好
Span 11-12:  正好 => 正好
Span 4-5:  说 => 说-02
Span 27-28:  那个 => 那个
Span 25-26:  降落 => 降落-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 30-31:  上空 => 上空
Oracle Span 8-9:  今天 => 今天
Oracle Span 1-2:  他 => 他
Oracle Span 7-8:  到 => 到-01
Oracle Span 24-25:  去年 => 去年
Oracle Span 28-29:  地方 => 地方
Oracle Span 22-23:  处于 => 处于-01
Oracle Span 9-10:  夜里 => 夜里
Oracle Span 20-21:  将 => 将-01
Oracle Span 14-15:  年 => 年
Oracle Span 3-4:  我 => 我
Oracle Span 19-20:  星球 => 星球
Oracle Span 12-13:  是 => 是-01
Oracle Span 11-12:  正好 => 正好
Oracle Span 4-5:  说 => 说-01
Oracle Span 25-26:  降落 => 降落-01

Extra span: 那个 => 那个
Extra span: 我 => 我
Extra span: 正好 => 正好
Extra span: 我 => 我
Incorrect span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Missing span: 是 => 是-01
Dependencies:
1	但	_	AD	AD	_	32	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	31	rcmod	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	13	punct	_	_
8	到	_	P	P	_	13	prep	_	_
9	今天	_	NT	NT	_	10	nn	_	_
10	夜里	_	NT	NT	_	8	pobj	_	_
11	,	_	PU	PU	_	13	punct	_	_
12	正好	_	NR	NR	_	13	top	_	_
13	是	_	VC	VC	_	5	ccomp	_	_
14	一	_	CD	CD	_	15	nummod	_	_
15	年	_	M	M	_	13	attr	_	_
16	了	_	SP	SP	_	13	dep	_	_
17	。	_	PU	PU	_	13	punct	_	_
18	我	_	PN	PN	_	20	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	星球	_	NN	NN	_	23	nsubj	_	_
21	将	_	AD	AD	_	23	advmod	_	_
22	正好	_	AD	AD	_	23	advmod	_	_
23	处于	_	VV	VV	_	13	conj	_	_
24	我	_	PN	PN	_	26	nsubj	_	_
25	去年	_	NT	NT	_	26	tmod	_	_
26	降落	_	VV	VV	_	29	rcmod	_	_
27	的	_	DEC	DEC	_	26	cpm	_	_
28	那个	_	NN	NN	_	29	nn	_	_
29	地方	_	NN	NN	_	23	dobj	_	_
30	的	_	DEC	DEC	_	5	cpm	_	_
31	上空	_	NN	NN	_	32	nsubj	_	_
32	…	_	VA	VA	_	0	root	_	_
33	”	_	PU	PU	_	32	punct	_	_

Oracle:
(x10 / 到-01, arg1, x11 / 夜里)
(x11 / 夜里, time, x12 / 今天)
(x16 / 处于-01, arg0, x17 / 星球)
(x16 / 处于-01, arg1, x22 / 上空)
(x16 / 处于-01, time, x19 / 将-01)
(x2 / 说-01, arg0, x3 / 他)
(x2 / 说-01, arg3, x4 / 我)
(x22 / 上空, poss, x23 / 地方)
(x25 / 降落-01, arg1, x23 / 地方)
(x25 / 降落-01, time, x27 / 去年)
(x9 / 是-01, arg0, x10 / 到-01)
(x9 / 是-01, arg1, x13 / 年)
(x9 / 是-01, manner, x15 / 正好)

Input(Some(Graph(null,ArrayBuffer(Span(30,31,List(0),上空,上空,false), Span(28,29,List(1),地方,地方,false), Span(27,28,List(2),那个,那个,false), Span(25,26,List(3),降落,降落-01,false), Span(24,25,List(4),去年,去年,false), Span(23,24,List(5),我,我,false), Span(22,23,List(6),处于,处于-01,false), Span(21,22,List(7),正好,正好,false), Span(20,21,List(8),将,将-01,false), Span(19,20,List(9),星球,星球,false), Span(17,18,List(10),我,我,false), Span(14,15,List(11),年,年,false), Span(12,13,List(12),是,是-04,false), Span(11,12,List(13),正好,正好,false), Span(9,10,List(14),夜里,夜里,false), Span(8,9,List(15),今天,今天,false), Span(7,8,List(16),到,到-01,false), Span(4,5,List(17),说,说-02,false), Span(3,4,List(18),我,我,false), Span(2,3,List(19),对,对-02,false), Span(1,2,List(20),他,他,false)),Map(2 -> 那个, 5 -> 我, 12 -> 是-04, 15 -> 今天, 8 -> 将-01, 18 -> 我, 7 -> 正好, 17 -> 说-02, 1 -> 地方, 4 -> 去年, 11 -> 年, 14 -> 夜里, 20 -> 他, 6 -> 处于-01, 0 -> 上空, 9 -> 星球, 16 -> 到-01, 19 -> 对-02, 3 -> 降落-01, 10 -> 我, 13 -> 正好),Map(夜 -> 夜里, 我3 -> 我, 星 -> 星球, 我 -> 我, 我2 -> 我, 今 -> 今天, 去 -> 去年, 正 -> 正好, 他 -> 他, 地 -> 地方, 将 -> 将-01, 年 -> 年, 到 -> 到-01, 说 -> 说-02, 上 -> 上空, 那 -> 那个, 正2 -> 正好, 对 -> 对-02, 降 -> 降落-01, 是 -> 是-04, 处 -> 处于-01))),[Ljava.lang.String;@3f5dfe69,Annotation([Ljava.lang.String;@571a663c,[Ljava.lang.String;@3a788fe0,[Ljava.lang.String;@430df350),Annotation([Ljava.lang.String;@1373e3ee,[Ljava.lang.String;@175c5c3a,[Ledu.cmu.lti.nlp.amr.Dependency;@69a5c6be),Annotation([Ljava.lang.String;@451e2fa9,[Ljava.lang.String;@497ed877,[Ljava.lang.String;@3cb6e0ee),Annotation([Ljava.lang.String;@7b6141f0,[Ljava.lang.String;@4fb64a52,[Ledu.cmu.lti.nlp.amr.Entity;@70b48eb3))
AMR:
(上 / 上空, poss, 地 / 地方)
(地 / 地方, mod, 那 / 那个)
(处 / 处于-01, manner, 正 / 正好)
(处 / 处于-01, poss, 我 / 我)
(处 / 处于-01, time, 将 / 将-01)
(处 / 处于-01, time, 是 / 是-04)
(夜 / 夜里, time, 今 / 今天)
(夜 / 夜里, time, 到 / 到-01)
(对 / 对-02, prep-on-behalf, 他 / 他)
(年 / 年, prep-on-behalf, 是 / 是-04)
(星 / 星球, mod, 将 / 将-01)
(星 / 星球, poss, 我2 / 我)
(是 / 是-04, manner, 正2 / 正好)
(是 / 是-04, time, 夜 / 夜里)
(说 / 说-02, poss, 我3 / 我)
(说 / 说-02, prep-on-behalf, 到 / 到-01)
(说 / 说-02, prep-on-behalf, 对 / 对-02)
(降 / 降落-01, ARG2, 那 / 那个)
(降 / 降落-01, prep-on-behalf, 处 / 处于-01)
(降 / 降落-01, time, 去 / 去年)

Decoded in 131,114 microseconds
Sentence: “ 小家伙 ，

Spans:
Span 0-1:   => amr-empty

Langrangian relaxation converged after 1 iterations. Delta = 0.0

Extra span:  => amr-empty
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	小家伙	_	NR	NR	_	3	dep	_	_
3	,	_	CD	CD	_	0	root	_	_

Oracle:


Input(Some(Graph(amr-empty,ArrayBuffer(Span(0,1,List(0),,amr-empty,false)),Map(0 -> amr-empty),Map(a -> amr-empty))),[Ljava.lang.String;@7b8ea1db,Annotation([Ljava.lang.String;@a91119b,[Ljava.lang.String;@77083e41,[Ljava.lang.String;@231df705),Annotation([Ljava.lang.String;@2d130ac4,[Ljava.lang.String;@2f0ccb34,[Ledu.cmu.lti.nlp.amr.Dependency;@194012a2),Annotation([Ljava.lang.String;@55296b50,[Ljava.lang.String;@60591e1b,[Ljava.lang.String;@29c53c4f),Annotation([Ljava.lang.String;@3009eed7,[Ljava.lang.String;@2ee4706d,[Ledu.cmu.lti.nlp.amr.Entity;@6650a6c))
AMR:


Decoded in 1,097 microseconds
Sentence: 这 蛇 的 事 ， 约会 的 事 ， 还 有 星星 ， 这 全 是 一 场 噩梦 吧 ？ ”

Spans:
Span 7-8:  事 => 事
Span 3-4:  事 => 事
Span 14-15:  全 => 全
Span 18-19:  噩梦 => 噩梦
Span 11-12:  星星 => 星星
Span 15-16:  是 => 是-04
Span 10-11:  有 => 有-06
Span 5-6:  约会 => 约会-01
Span 1-2:  蛇 => 蛇
Span 9-10:  还 => 还
Span 13-14:  这 => 这
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  事 => 事
Oracle Span 7-8:  事 => 事
Oracle Span 14-15:  全 => 全
Oracle Span 18-19:  噩梦 => 噩梦
Oracle Span 11-12:  星星 => 星星
Oracle Span 5-6:  约会 => 约会-01
Oracle Span 1-2:  蛇 => 蛇

Extra span: 是 => 是-04
Extra span: 这 => 这
Extra span: 有 => 有-06
Extra span: 还 => 还
Extra span: 这 => 这
Dependencies:
1	这	_	DT	DT	_	2	det	_	_
2	蛇	_	NN	NN	_	4	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	事	_	NN	NN	_	11	nsubj	_	_
5	,	_	PU	PU	_	11	punct	_	_
6	约会	_	VA	VA	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	事	_	NN	NN	_	11	nsubj	_	_
9	,	_	PU	PU	_	11	punct	_	_
10	还	_	AD	AD	_	11	advmod	_	_
11	有	_	VE	VE	_	0	root	_	_
12	星星	_	NN	NN	_	11	dobj	_	_
13	,	_	PU	PU	_	11	punct	_	_
14	这	_	PN	PN	_	16	nsubj	_	_
15	全	_	AD	AD	_	16	advmod	_	_
16	是	_	VC	VC	_	11	dep	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	场	_	M	M	_	19	clf	_	_
19	噩梦	_	NN	NN	_	16	attr	_	_
20	吧	_	SP	SP	_	16	dep	_	_
21	？	_	PU	PU	_	11	punct	_	_
22	”	_	PU	PU	_	11	punct	_	_

Oracle:
(x15 / 噩梦, manner, x17 / 全)
(x19 / 事, topic, x20 / 蛇)
(x21 / 事, topic, x22 / 约会-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),噩梦,噩梦,false), Span(15,16,List(1),是,是-04,false), Span(14,15,List(2),全,全,false), Span(13,14,List(3),这,这,false), Span(11,12,List(4),星星,星星,false), Span(10,11,List(5),有,有-06,false), Span(9,10,List(6),还,还,false), Span(7,8,List(7),事,事,false), Span(5,6,List(8),约会,约会-01,false), Span(3,4,List(9),事,事,false), Span(1,2,List(10),蛇,蛇,false), Span(0,1,List(11),这,这,false)),Map(2 -> 全, 5 -> 有-06, 8 -> 约会-01, 7 -> 事, 1 -> 是-04, 11 -> 这, 4 -> 星星, 6 -> 还, 9 -> 事, 0 -> 噩梦, 10 -> 蛇, 3 -> 这),Map(噩 -> 噩梦, 星 -> 星星, 这 -> 这, 全 -> 全, 约 -> 约会-01, 事 -> 事, 这2 -> 这, 事2 -> 事, 还 -> 还, 蛇 -> 蛇, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@64279ab,Annotation([Ljava.lang.String;@794240e2,[Ljava.lang.String;@74a820bf,[Ljava.lang.String;@5a30722c),Annotation([Ljava.lang.String;@4f2ac7e0,[Ljava.lang.String;@2484dbb7,[Ledu.cmu.lti.nlp.amr.Dependency;@111cba40),Annotation([Ljava.lang.String;@48e41b5d,[Ljava.lang.String;@51e8d066,[Ljava.lang.String;@5333f08f),Annotation([Ljava.lang.String;@27898e13,[Ljava.lang.String;@4f5f474c,[Ledu.cmu.lti.nlp.amr.Entity;@58a3d521))
AMR:
(事 / 事, manner, 还 / 还)
(事 / 事, topic, 约 / 约会-01)
(事2 / 事, topic, 蛇 / 蛇)
(噩 / 噩梦, manner, 是 / 是-04)
(星 / 星星, mod, 有 / 有-06)
(星 / 星星, mod, 这 / 这)
(是 / 是-04, manner, 全 / 全)
(有 / 有-06, manner, 全 / 全)
(有 / 有-06, manner, 还 / 还)
(约 / 约会-01, degree, 事2 / 事)
(蛇 / 蛇, mod, 这2 / 这)

Decoded in 40,700 microseconds
Sentence: 但 他 并不 回答 我 的 问题 。

Spans:
Span 1-2:  他 => 他
Span 3-4:  回答 => 回答-01
Span 4-5:  我 => 我
Span 6-7:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  回答 => 回答-01
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  问题 => 问题

Dependencies:
1	但	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	并不	_	VV	VV	_	0	root	_	_
4	回答	_	VV	VV	_	3	ccomp	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	问题	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 回答-01, arg0, x3 / 他)
(x2 / 回答-01, arg1, x4 / 问题)
(x4 / 问题, poss, x5 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),问题,问题,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),回答,回答-01,false), Span(1,2,List(3),他,他,false)),Map(2 -> 回答-01, 1 -> 我, 0 -> 问题, 3 -> 他),Map(我 -> 我, 他 -> 他, 问 -> 问题, 回 -> 回答-01))),[Ljava.lang.String;@14d8e132,Annotation([Ljava.lang.String;@7f4a1cac,[Ljava.lang.String;@4a1a412e,[Ljava.lang.String;@c568f91),Annotation([Ljava.lang.String;@5fd43e58,[Ljava.lang.String;@70d4f672,[Ledu.cmu.lti.nlp.amr.Dependency;@68dfda77),Annotation([Ljava.lang.String;@50cdfafa,[Ljava.lang.String;@2e952845,[Ljava.lang.String;@79252c83),Annotation([Ljava.lang.String;@6fbf5db2,[Ljava.lang.String;@509a6095,[Ledu.cmu.lti.nlp.amr.Entity;@57cabdc3))
AMR:
(回 / 回答-01, ARG0, 问 / 问题)
(回 / 回答-01, prep-through, 他 / 他)
(问 / 问题, poss, 我 / 我)

Decoded in 7,137 microseconds
Sentence: 他 对 我 说 ： “ 重要 的 事 ， 是 看 不 见 的 … ”

Spans:
Span 12-13:  不 => 不
Span 8-9:  事 => 事
Span 0-1:  他 => 他
Span 1-2:  对 => 对-02
Span 2-3:  我 => 我
Span 10-11:  是 => 是-04
Span 11-12:  看 => 看-10
Span 13-14:  见 => 见-01
Span 3-4:  说 => 说-02
Span 6-7:  重要 => 重要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  事 => 事
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  我 => 我
Oracle Span 3-4:  说 => 说-01
Oracle Span 6-7:  重要 => 重要-01

Extra span: 见 => 见-01
Extra span: 不 => 不
Extra span: 看 => 看-10
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	对	_	P	P	_	4	prep	_	_
3	我	_	PN	PN	_	2	pobj	_	_
4	说	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	12	punct	_	_
7	重要	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	事	_	NN	NN	_	12	dep	_	_
10	,	_	PU	PU	_	12	punct	_	_
11	是	_	VC	VC	_	12	cop	_	_
12	看	_	VV	VV	_	4	ccomp	_	_
13	不	_	AD	AD	_	14	neg	_	_
14	见	_	VV	VV	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	…	_	NN	NN	_	12	dobj	_	_
17	”	_	PU	PU	_	12	punct	_	_
18	是	_	VC	VC	_	12	conj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 他)
(x0 / 说-01, arg3, x7 / 我)
(x5 / 事, mod, x6 / 重要-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),见,见-01,false), Span(12,13,List(1),不,不,false), Span(11,12,List(2),看,看-10,false), Span(10,11,List(3),是,是-04,false), Span(8,9,List(4),事,事,false), Span(6,7,List(5),重要,重要-01,false), Span(3,4,List(6),说,说-02,false), Span(2,3,List(7),我,我,false), Span(1,2,List(8),对,对-02,false), Span(0,1,List(9),他,他,false)),Map(2 -> 看-10, 5 -> 重要-01, 8 -> 对-02, 7 -> 我, 1 -> 不, 4 -> 事, 6 -> 说-02, 9 -> 他, 0 -> 见-01, 3 -> 是-04),Map(我 -> 我, 重 -> 重要-01, 他 -> 他, 事 -> 事, 不 -> 不, 说 -> 说-02, 看 -> 看-10, 对 -> 对-02, 是 -> 是-04, 见 -> 见-01))),[Ljava.lang.String;@75bd28d,Annotation([Ljava.lang.String;@129c4d19,[Ljava.lang.String;@11810917,[Ljava.lang.String;@13278a41),Annotation([Ljava.lang.String;@4a31ed12,[Ljava.lang.String;@3ab595c8,[Ledu.cmu.lti.nlp.amr.Dependency;@2365ea38),Annotation([Ljava.lang.String;@cbf1997,[Ljava.lang.String;@49232c6f,[Ljava.lang.String;@5faeeb56),Annotation([Ljava.lang.String;@5396eeb1,[Ljava.lang.String;@279126f5,[Ledu.cmu.lti.nlp.amr.Entity;@7781263c))
AMR:
(事 / 事, mod, 重 / 重要-01)
(事 / 事, topic, 是 / 是-04)
(对 / 对-02, prep-following, 他 / 他)
(看 / 看-10, location, 不 / 不)
(看 / 看-10, manner, 是 / 是-04)
(见 / 见-01, manner, 不 / 不)
(说 / 说-02, prep-following, 对 / 对-02)
(说 / 说-02, prep-following, 我 / 我)
(重 / 重要-01, manner, 说 / 说-02)

Decoded in 28,259 microseconds
Sentence: “ 当然 … ”

Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(当 -> 当然))),[Ljava.lang.String;@5fdd97c1,Annotation([Ljava.lang.String;@3b5a19ed,[Ljava.lang.String;@15d236fd,[Ljava.lang.String;@6b9c42bd),Annotation([Ljava.lang.String;@584ca390,[Ljava.lang.String;@33324c05,[Ledu.cmu.lti.nlp.amr.Dependency;@37d3e140),Annotation([Ljava.lang.String;@3e53c4ad,[Ljava.lang.String;@33eb0d4,[Ljava.lang.String;@224d86d2),Annotation([Ljava.lang.String;@a3cba3a,[Ljava.lang.String;@2aea717c,[Ledu.cmu.lti.nlp.amr.Entity;@5ca4dce5))
AMR:


Decoded in 1,332 microseconds
Sentence: “ 这 就 象 花 一样 。

Spans:
Span 5-6:  一样 => 一样
Span 2-3:  就 => 就-01
Span 4-5:  花 => 花-01
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  花 => 花
Oracle Span 1-2:  这 => 这

Extra span: 一样 => 一样
Incorrect span: 花 => 花-01
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 花 => 花
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	这	_	PN	PN	_	6	nsubj	_	_
3	就	_	AD	AD	_	6	advmod	_	_
4	象	_	P	P	_	6	prep	_	_
5	花	_	NN	NN	_	4	pobj	_	_
6	一样	_	VA	VA	_	0	root	_	_
7	。	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),一样,一样,false), Span(4,5,List(1),花,花-01,false), Span(2,3,List(2),就,就-01,false), Span(1,2,List(3),这,这,false)),Map(2 -> 就-01, 1 -> 花-01, 0 -> 一样, 3 -> 这),Map(就 -> 就-01, 这 -> 这, 花 -> 花-01, 一 -> 一样))),[Ljava.lang.String;@1291aab5,Annotation([Ljava.lang.String;@7d133fb7,[Ljava.lang.String;@40bd0f8,[Ljava.lang.String;@7eb27768),Annotation([Ljava.lang.String;@6169be09,[Ljava.lang.String;@5e3db14,[Ledu.cmu.lti.nlp.amr.Dependency;@5fb54740),Annotation([Ljava.lang.String;@325162e9,[Ljava.lang.String;@1ee40b5c,[Ljava.lang.String;@5c448ef),Annotation([Ljava.lang.String;@703e8050,[Ljava.lang.String;@49c1e294,[Ledu.cmu.lti.nlp.amr.Entity;@7741ae1b))
AMR:
(一 / 一样, location, 花 / 花-01)
(就 / 就-01, mod, 这 / 这)
(就 / 就-01, purpose, 花 / 花-01)

Decoded in 5,595 microseconds
Sentence: 如果 你 爱上 了 一 朵 生长 在 一 颗 星星 上 的 花 ， 那么 夜间 ， 你 看 着 天空 就 感到 甜蜜 愉快 。

Spans:
Span 18-19:  你 => 你
Span 1-2:  你 => 你
Span 7-8:  在 => 在-01
Span 16-17:  夜间 => 夜间
Span 21-22:  天空 => 天空
Span 22-23:  就 => 就-01
Span 25-26:  愉快 => 愉快-01
Span 23-24:  感到 => 感到-01
Span 10-11:  星星 => 星星
Span 2-3:  爱上 => 爱上-01
Span 24-25:  甜蜜 => 甜蜜-01
Span 6-7:  生长 => 生长-01
Span 19-20:  看 => 看-10
Span 13-14:  花 => 花-01
Span 15-16:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 16-17:  夜间 => 夜间
Oracle Span 21-22:  天空 => 天空
Oracle Span 22-23:  就 => 就
Oracle Span 25-26:  愉快 => 愉快-01
Oracle Span 23-24:  感到 => 感到-01
Oracle Span 10-11:  星星 => 星星
Oracle Span 2-3:  爱上 => 爱上-01
Oracle Span 24-25:  甜蜜 => 甜蜜-01
Oracle Span 6-7:  生长 => 生长-01
Oracle Span 19-20:  看 => 看-02
Oracle Span 13-14:  花 => 花

Incorrect span: 就 => 就-01
Incorrect span: 看 => 看-10
Extra span: 你 => 你
Extra span: 那么 => 那么
Incorrect span: 花 => 花-01
Extra span: 在 => 在-01
Missing span: 花 => 花
Missing span: 就 => 就
Missing span: 看 => 看-02
Dependencies:
1	如果	_	CS	CS	_	3	advmod	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	爱上	_	VV	VV	_	20	pccomp	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	朵	_	M	M	_	7	clf	_	_
7	生长	_	NN	NN	_	14	nn	_	_
8	在	_	P	P	_	14	assmod	_	_
9	一	_	CD	CD	_	10	nummod	_	_
10	颗	_	M	M	_	11	clf	_	_
11	星星	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	8	plmod	_	_
13	的	_	DEG	DEG	_	8	assm	_	_
14	花	_	NN	NN	_	3	dobj	_	_
15	,	_	PU	PU	_	20	punct	_	_
16	那么	_	AD	AD	_	20	advmod	_	_
17	夜间	_	NN	NN	_	20	nsubj	_	_
18	,	_	PU	PU	_	20	punct	_	_
19	你	_	PN	PN	_	20	nsubj	_	_
20	看	_	VV	VV	_	0	root	_	_
21	着	_	AS	AS	_	20	asp	_	_
22	天空	_	NN	NN	_	20	dobj	_	_
23	就	_	AD	AD	_	24	advmod	_	_
24	感到	_	VV	VV	_	20	conj	_	_
25	甜蜜	_	NN	NN	_	26	nn	_	_
26	愉快	_	NN	NN	_	24	dobj	_	_
27	。	_	PU	PU	_	20	punct	_	_

Oracle:
(x14 / 感到-01, manner, x23 / 就)
(x14 / 感到-01, time, x20 / 看-02)
(x20 / 看-02, arg1, x22 / 天空)
(x20 / 看-02, time, x24 / 夜间)
(x3 / 爱上-01, arg0, x4 / 你)
(x3 / 爱上-01, arg1, x5 / 花)
(x8 / 生长-01, arg0, x5 / 花)
(x8 / 生长-01, location, x9 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),愉快,愉快-01,false), Span(24,25,List(1),甜蜜,甜蜜-01,false), Span(23,24,List(2),感到,感到-01,false), Span(22,23,List(3),就,就-01,false), Span(21,22,List(4),天空,天空,false), Span(19,20,List(5),看,看-10,false), Span(18,19,List(6),你,你,false), Span(16,17,List(7),夜间,夜间,false), Span(15,16,List(8),那么,那么,false), Span(13,14,List(9),花,花-01,false), Span(10,11,List(10),星星,星星,false), Span(7,8,List(11),在,在-01,false), Span(6,7,List(12),生长,生长-01,false), Span(2,3,List(13),爱上,爱上-01,false), Span(1,2,List(14),你,你,false)),Map(2 -> 感到-01, 5 -> 看-10, 12 -> 生长-01, 8 -> 那么, 7 -> 夜间, 1 -> 甜蜜-01, 4 -> 天空, 11 -> 在-01, 14 -> 你, 6 -> 你, 0 -> 愉快-01, 9 -> 花-01, 3 -> 就-01, 10 -> 星星, 13 -> 爱上-01),Map(爱 -> 爱上-01, 甜 -> 甜蜜-01, 就 -> 就-01, 夜 -> 夜间, 星 -> 星星, 在 -> 在-01, 生 -> 生长-01, 感 -> 感到-01, 你 -> 你, 愉 -> 愉快-01, 花 -> 花-01, 天 -> 天空, 你2 -> 你, 看 -> 看-10, 那 -> 那么))),[Ljava.lang.String;@50e5032c,Annotation([Ljava.lang.String;@545d2560,[Ljava.lang.String;@124eb83d,[Ljava.lang.String;@6885ed19),Annotation([Ljava.lang.String;@10817f46,[Ljava.lang.String;@2d4a3e13,[Ledu.cmu.lti.nlp.amr.Dependency;@4a22e4d7),Annotation([Ljava.lang.String;@d8835af,[Ljava.lang.String;@16681017,[Ljava.lang.String;@6aae0e6f),Annotation([Ljava.lang.String;@37775bb1,[Ljava.lang.String;@7b9e25bd,[Ledu.cmu.lti.nlp.amr.Entity;@2d206a71))
AMR:
(在 / 在-01, ARG1, 生 / 生长-01)
(夜 / 夜间, ARG2, 那 / 那么)
(天 / 天空, quant, 你 / 你)
(愉 / 愉快-01, destination, 甜 / 甜蜜-01)
(感 / 感到-01, example, 甜 / 甜蜜-01)
(感 / 感到-01, manner, 就 / 就-01)
(感 / 感到-01, time, 看 / 看-10)
(爱 / 爱上-01, ARG3, 在 / 在-01)
(爱 / 爱上-01, compared-to, 你2 / 你)
(生 / 生长-01, location, 星 / 星星)
(生 / 生长-01, time, 花 / 花-01)
(看 / 看-10, mod, 天 / 天空)
(看 / 看-10, time, 夜 / 夜间)
(那 / 那么, age, 爱 / 爱上-01)

Decoded in 76,777 microseconds
Sentence: 所有 的 星星 上 都 好象 开 着 花 。 ”

Spans:
Span 6-7:  开 => 开-03
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 8-9:  花 => 花-01
Span 4-5:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  开 => 开-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 2-3:  星星 => 星星
Oracle Span 8-9:  花 => 花
Oracle Span 4-5:  都 => 都

Incorrect span: 花 => 花-01
Incorrect span: 开 => 开-03
Missing span: 开 => 开-01
Missing span: 花 => 花
Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	星星	_	NN	NN	_	4	lobj	_	_
4	上	_	LC	LC	_	6	loc	_	_
5	都	_	AD	AD	_	6	advmod	_	_
6	好象	_	VV	VV	_	0	root	_	_
7	开	_	VV	VV	_	6	ccomp	_	_
8	着	_	AS	AS	_	7	asp	_	_
9	花	_	NN	NN	_	7	dobj	_	_
10	。	_	PU	PU	_	6	punct	_	_
11	”	_	PU	PU	_	6	punct	_	_

Oracle:
(x10 / 开-01, arg1, x11 / 花)
(x10 / 开-01, location, x13 / 星星)
(x13 / 星星, mod, x14 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),花,花-01,false), Span(6,7,List(1),开,开-03,false), Span(4,5,List(2),都,都,false), Span(2,3,List(3),星星,星星,false), Span(0,1,List(4),所有,所有,false)),Map(2 -> 都, 1 -> 开-03, 4 -> 所有, 0 -> 花-01, 3 -> 星星),Map(星 -> 星星, 所 -> 所有, 花 -> 花-01, 开 -> 开-03, 都 -> 都))),[Ljava.lang.String;@37e7c4cc,Annotation([Ljava.lang.String;@3a40bb52,[Ljava.lang.String;@3079c26a,[Ljava.lang.String;@1e2445f6),Annotation([Ljava.lang.String;@17ec335a,[Ljava.lang.String;@284990de,[Ledu.cmu.lti.nlp.amr.Dependency;@565d7d2f),Annotation([Ljava.lang.String;@6aea99e7,[Ljava.lang.String;@1c6a0103,[Ljava.lang.String;@7841bd30),Annotation([Ljava.lang.String;@45c80312,[Ljava.lang.String;@7bd38fed,[Ledu.cmu.lti.nlp.amr.Entity;@377dfb8d))
AMR:
(开 / 开-03, manner, 都 / 都)
(开 / 开-03, prep-as, 星 / 星星)
(开 / 开-03, value, 花 / 花-01)
(星 / 星星, mod, 所 / 所有)

Decoded in 8,652 microseconds
Sentence: “ 当然 … ”

Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(当 -> 当然))),[Ljava.lang.String;@42a0786f,Annotation([Ljava.lang.String;@477523ba,[Ljava.lang.String;@203e705e,[Ljava.lang.String;@78c74647),Annotation([Ljava.lang.String;@39652a30,[Ljava.lang.String;@5763a655,[Ledu.cmu.lti.nlp.amr.Dependency;@40c8067),Annotation([Ljava.lang.String;@46bb0bdf,[Ljava.lang.String;@561f9d92,[Ljava.lang.String;@1c84d80a),Annotation([Ljava.lang.String;@7ceb6c45,[Ljava.lang.String;@629075f4,[Ledu.cmu.lti.nlp.amr.Entity;@48499739))
AMR:


Decoded in 1,165 microseconds
Sentence: “ 这 也 就 象 水 一样 ，

Spans:
Span 6-7:  一样 => 一样
Span 2-3:  也 => 也
Span 3-4:  就 => 就-01
Span 5-6:  水 => 水
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  也 => 也
Oracle Span 3-4:  就 => 就
Oracle Span 5-6:  水 => 水
Oracle Span 1-2:  这 => 这

Extra span: 一样 => 一样
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	这	_	PN	PN	_	5	nsubj	_	_
3	也	_	AD	AD	_	5	advmod	_	_
4	就	_	AD	AD	_	5	advmod	_	_
5	象	_	VA	VA	_	0	root	_	_
6	水	_	NN	NN	_	7	dep	_	_
7	一样	_	VA	VA	_	5	conj	_	_
8	,	_	PU	PU	_	7	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),一样,一样,false), Span(5,6,List(1),水,水,false), Span(3,4,List(2),就,就-01,false), Span(2,3,List(3),也,也,false), Span(1,2,List(4),这,这,false)),Map(2 -> 就-01, 1 -> 水, 4 -> 这, 0 -> 一样, 3 -> 也),Map(就 -> 就-01, 也 -> 也, 这 -> 这, 水 -> 水, 一 -> 一样))),[Ljava.lang.String;@723742b2,Annotation([Ljava.lang.String;@559991f5,[Ljava.lang.String;@34c76167,[Ljava.lang.String;@30b3d899),Annotation([Ljava.lang.String;@78d92eef,[Ljava.lang.String;@61d60e38,[Ledu.cmu.lti.nlp.amr.Dependency;@6e95973c),Annotation([Ljava.lang.String;@404ced67,[Ljava.lang.String;@71531dd7,[Ljava.lang.String;@20256a0b),Annotation([Ljava.lang.String;@624b3544,[Ljava.lang.String;@454bcbbf,[Ledu.cmu.lti.nlp.amr.Entity;@2c9fdb64))
AMR:
(一 / 一样, domain, 水 / 水)
(一 / 一样, manner, 就 / 就-01)
(就 / 就-01, manner, 也 / 也)
(就 / 就-01, mod, 这 / 这)

Decoded in 7,306 microseconds
Sentence: 由于 那 辘轳 和 绳子 的 缘故 ， 你 给 我 喝 的 井水 好象 音乐 一样 …

Spans:
Span 16-17:  一样 => 一样
Span 13-14:  井水 => 井水
Span 8-9:  你 => 你
Span 11-12:  喝 => (thing :arg1-of 喝-01)
Span 10-11:  我 => 我
Span 9-10:  给 => 给-02
Span 4-5:  绳子 => 绳子
Span 6-7:  缘故 => 缘故
Span 2-3:  辘轳 => 辘轳
Span 1-2:  那 => 那
Span 15-16:  音乐 => 音乐

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 你 记得 吗 ？ … 这 水 非常 好 喝 … ”

Spans:
Span 0-1:  你 => 你
Span 9-10:  喝 => (thing :arg1-of 喝-01)
Span 8-9:  好 => 好-04
Span 6-7:  水 => 水
Span 1-2:  记得 => 记得-01
Span 5-6:  这 => 这
Span 7-8:  非常 => 非常

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: “ 当然 … ”

Spans:
Span 1-2:  当然 => 当然

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  当然 => 当然

Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	当然	_	AD	AD	_	3	advmod	_	_
3	…	_	VV	VV	_	0	root	_	_
4	”	_	PU	PU	_	3	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),当然,当然,false)),Map(0 -> 当然),Map(当 -> 当然))),[Ljava.lang.String;@7364f68,Annotation([Ljava.lang.String;@55a0f011,[Ljava.lang.String;@7ea42c82,[Ljava.lang.String;@39133244),Annotation([Ljava.lang.String;@ceb7701,[Ljava.lang.String;@5e193ef5,[Ledu.cmu.lti.nlp.amr.Dependency;@106c988),Annotation([Ljava.lang.String;@21274afe,[Ljava.lang.String;@76a362a4,[Ljava.lang.String;@61da0413),Annotation([Ljava.lang.String;@5627cb29,[Ljava.lang.String;@4d4c1ba9,[Ledu.cmu.lti.nlp.amr.Entity;@2017f6e6))
AMR:


Decoded in 1,313 microseconds
Sentence: “ 夜晚 ， 你 抬头 望 着 星星 ，

Spans:
Span 3-4:  你 => 你
Span 1-2:  夜晚 => 夜晚
Span 4-5:  抬头 => 抬头-01
Span 7-8:  星星 => 星星
Span 5-6:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  夜晚 => 夜晚
Oracle Span 4-5:  抬头 => 抬头-01
Oracle Span 7-8:  星星 => 星星
Oracle Span 5-6:  望 => 望-01

Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	夜晚	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	6	nsubj	_	_
5	抬头	_	VV	VV	_	6	mmod	_	_
6	望	_	VV	VV	_	2	ccomp	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	星星	_	NN	NN	_	6	dobj	_	_
9	,	_	PU	PU	_	6	punct	_	_

Oracle:
(x9 / 望-01, arg0, x10 / 你)
(x9 / 望-01, arg1, x11 / 星星)
(x9 / 望-01, manner, x12 / 抬头-01)
(x9 / 望-01, time, x14 / 夜晚)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),星星,星星,false), Span(5,6,List(1),望,望-01,false), Span(4,5,List(2),抬头,抬头-01,false), Span(3,4,List(3),你,你,false), Span(1,2,List(4),夜晚,夜晚,false)),Map(2 -> 抬头-01, 1 -> 望-01, 4 -> 夜晚, 0 -> 星星, 3 -> 你),Map(夜 -> 夜晚, 星 -> 星星, 你 -> 你, 抬 -> 抬头-01, 望 -> 望-01))),[Ljava.lang.String;@115c946b,Annotation([Ljava.lang.String;@79ca7bea,[Ljava.lang.String;@54f6b629,[Ljava.lang.String;@4bc9ca97),Annotation([Ljava.lang.String;@3e43f049,[Ljava.lang.String;@147cc940,[Ledu.cmu.lti.nlp.amr.Dependency;@755a7218),Annotation([Ljava.lang.String;@70c29356,[Ljava.lang.String;@5122e4bf,[Ljava.lang.String;@23e61112),Annotation([Ljava.lang.String;@58a7dc4,[Ljava.lang.String;@61b60600,[Ledu.cmu.lti.nlp.amr.Entity;@27f71195))
AMR:
(你 / 你, location, 抬 / 抬头-01)
(望 / 望-01, location, 星 / 星星)
(望 / 望-01, manner, 抬 / 抬头-01)
(望 / 望-01, time, 夜 / 夜晚)

Decoded in 8,723 microseconds
Sentence: 我 的 那 颗 太 小 了 ， 我 无法 给 你 指出 我 的 那 颗 星星 是 在 哪里 。

Spans:
Span 11-12:  你 => 你
Span 19-20:  在 => 在-01
Span 4-5:  太 => 太
Span 5-6:  小 => 小
Span 13-14:  我 => 我
Span 8-9:  我 => 我
Span 0-1:  我 => 我
Span 12-13:  指出 => 指出-01
Span 17-18:  星星 => 星星
Span 18-19:  是 => 是-04
Span 10-11:  给 => 给-02
Span 15-16:  那 => 那
Span 2-3:  那 => 那

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 11-12:  你 => 你
Oracle Span 4-5:  太 => 太
Oracle Span 5-6:  小 => 小-01
Oracle Span 0-1:  我 => 我
Oracle Span 12-13:  指出 => 指出-01
Oracle Span 17-18:  星星 => 星星
Oracle Span 10-11:  给 => 给-02
Oracle Span 2-3:  那 => 那
Oracle Span 15-16:  那 => 那

Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 我 => 我
Extra span: 我 => 我
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	我	_	PN	PN	_	18	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	那	_	DT	DT	_	18	det	_	_
4	颗	_	M	M	_	3	clf	_	_
5	太	_	AD	AD	_	6	advmod	_	_
6	小	_	VA	VA	_	18	rcmod	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	,	_	PU	PU	_	6	punct	_	_
9	我	_	PN	PN	_	13	nsubj	_	_
10	无法	_	AD	AD	_	13	advmod	_	_
11	给	_	P	P	_	13	prep	_	_
12	你	_	PN	PN	_	11	pobj	_	_
13	指出	_	VV	VV	_	6	dep	_	_
14	我	_	PN	PN	_	13	dobj	_	_
15	的	_	DEC	DEC	_	6	cpm	_	_
16	那	_	DT	DT	_	18	det	_	_
17	颗	_	M	M	_	16	clf	_	_
18	星星	_	NN	NN	_	19	top	_	_
19	是	_	VC	VC	_	0	root	_	_
20	在	_	P	P	_	19	prep	_	_
21	哪里	_	NR	NR	_	20	pobj	_	_
22	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x10 / 指出-01, arg1, x12 / 星星)
(x12 / 星星, mod, x13 / 那)
(x2 / 小-01, arg0, x4 / 那)
(x2 / 小-01, degree, x3 / 太)
(x4 / 那, poss, x6 / 我)
(x7 / 给-02, arg1, x9 / 你)
(x7 / 给-02, arg2, x10 / 指出-01)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),在,在-01,false), Span(18,19,List(1),是,是-04,false), Span(17,18,List(2),星星,星星,false), Span(15,16,List(3),那,那,false), Span(13,14,List(4),我,我,false), Span(12,13,List(5),指出,指出-01,false), Span(11,12,List(6),你,你,false), Span(10,11,List(7),给,给-02,false), Span(8,9,List(8),我,我,false), Span(5,6,List(9),小,小,false), Span(4,5,List(10),太,太,false), Span(2,3,List(11),那,那,false), Span(0,1,List(12),我,我,false)),Map(2 -> 星星, 5 -> 指出-01, 12 -> 我, 8 -> 我, 7 -> 给-02, 1 -> 是-04, 4 -> 我, 11 -> 那, 6 -> 你, 0 -> 在-01, 9 -> 小, 3 -> 那, 10 -> 太),Map(指 -> 指出-01, 在 -> 在-01, 星 -> 星星, 我3 -> 我, 我 -> 我, 你 -> 你, 我2 -> 我, 太 -> 太, 给 -> 给-02, 小 -> 小, 那2 -> 那, 那 -> 那, 是 -> 是-04))),[Ljava.lang.String;@340afaf8,Annotation([Ljava.lang.String;@6238d5e0,[Ljava.lang.String;@336f49a1,[Ljava.lang.String;@2c8b8de0),Annotation([Ljava.lang.String;@4fb57fb3,[Ljava.lang.String;@6b063470,[Ledu.cmu.lti.nlp.amr.Dependency;@226d5af0),Annotation([Ljava.lang.String;@527937d0,[Ljava.lang.String;@36d582cb,[Ljava.lang.String;@6c2a95d5),Annotation([Ljava.lang.String;@24d8f87a,[Ljava.lang.String;@3f048c86,[Ledu.cmu.lti.nlp.amr.Entity;@255d9277))
AMR:
(在 / 在-01, ARG1, 是 / 是-04)
(小 / 小, degree, 太 / 太)
(小 / 小, location, 我2 / 我)
(小 / 小, location, 那2 / 那)
(指 / 指出-01, ARG3, 星 / 星星)
(指 / 指出-01, value, 我 / 我)
(星 / 星星, mod, 那 / 那)
(是 / 是-04, ARG3, 星 / 星星)
(给 / 给-02, ARG0, 你 / 你)
(给 / 给-02, ARG5, 我2 / 我)
(给 / 给-02, degree, 指 / 指出-01)
(那2 / 那, poss, 我3 / 我)

Decoded in 60,235 microseconds
Sentence: 这样 倒 更 好 。

Spans:
Span 1-2:  倒 => 倒-02
Span 3-4:  好 => 好-04
Span 2-3:  更 => 更-01
Span 0-1:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  倒 => 倒
Oracle Span 3-4:  好 => 好-01
Oracle Span 2-3:  更 => 更-01
Oracle Span 0-1:  这样 => 这样

Incorrect span: 好 => 好-04
Incorrect span: 倒 => 倒-02
Incorrect span: 这样 => 这样-01
Missing span: 好 => 好-01
Missing span: 这样 => 这样
Missing span: 倒 => 倒
Dependencies:
1	这样	_	AD	AD	_	4	advmod	_	_
2	倒	_	AD	AD	_	4	advmod	_	_
3	更	_	AD	AD	_	4	advmod	_	_
4	好	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 好-01, arg0, x4 / 这样)
(x0 / 好-01, degree, x2 / 更-01)
(x0 / 好-01, manner, x3 / 倒)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),好,好-04,false), Span(2,3,List(1),更,更-01,false), Span(1,2,List(2),倒,倒-02,false), Span(0,1,List(3),这样,这样-01,false)),Map(2 -> 倒-02, 1 -> 更-01, 0 -> 好-04, 3 -> 这样-01),Map(这 -> 这样-01, 好 -> 好-04, 倒 -> 倒-02, 更 -> 更-01))),[Ljava.lang.String;@1de13f34,Annotation([Ljava.lang.String;@7e191fda,[Ljava.lang.String;@6562cc23,[Ljava.lang.String;@2ce524d2),Annotation([Ljava.lang.String;@3869a6e5,[Ljava.lang.String;@e3899fd,[Ledu.cmu.lti.nlp.amr.Dependency;@7d484fcd),Annotation([Ljava.lang.String;@788e3702,[Ljava.lang.String;@d25e878,[Ljava.lang.String;@47187f50),Annotation([Ljava.lang.String;@78116659,[Ljava.lang.String;@712e787e,[Ledu.cmu.lti.nlp.amr.Entity;@53ea380b))
AMR:
(好 / 好-04, ARG3, 这 / 这样-01)
(好 / 好-04, degree, 更 / 更-01)
(好 / 好-04, manner, 倒 / 倒-02)

Decoded in 5,803 microseconds
Sentence: 你 可以 认为 我 的 那 颗 星星 就 在 这些 星星 之中 。

Spans:
Span 0-1:  你 => 你
Span 1-2:  可以 => 可以-02
Span 9-10:  在 => 在-01
Span 8-9:  就 => 就-01
Span 3-4:  我 => 我
Span 11-12:  星星 => 星星
Span 7-8:  星星 => 星星
Span 2-3:  认为 => 认为-02
Span 10-11:  这些 => 这些
Span 5-6:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  可以 => 可以-03
Oracle Span 9-10:  在 => 在-01
Oracle Span 8-9:  就 => 就
Oracle Span 3-4:  我 => 我
Oracle Span 7-8:  星星 => 星星
Oracle Span 11-12:  星星 => 星星
Oracle Span 2-3:  认为 => 认为-01
Oracle Span 10-11:  这些 => 这些
Oracle Span 5-6:  那 => 那

Incorrect span: 就 => 就-01
Incorrect span: 认为 => 认为-02
Incorrect span: 可以 => 可以-02
Missing span: 可以 => 可以-03
Missing span: 认为 => 认为-01
Missing span: 就 => 就
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	可以	_	VV	VV	_	3	mmod	_	_
3	认为	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	8	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那	_	DT	DT	_	8	det	_	_
7	颗	_	M	M	_	6	clf	_	_
8	星星	_	NN	NN	_	10	nsubj	_	_
9	就	_	AD	AD	_	10	advmod	_	_
10	在	_	VV	VV	_	3	ccomp	_	_
11	这些	_	DT	DT	_	12	det	_	_
12	星星	_	NN	NN	_	13	lobj	_	_
13	之中	_	LC	LC	_	10	loc	_	_
14	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 可以-03, arg0, x2 / 你)
(x0 / 可以-03, arg1, x3 / 认为-01)
(x11 / 星星, mod, x12 / 这些)
(x3 / 认为-01, arg1, x5 / 星星)
(x5 / 星星, mod, x6 / 那)
(x5 / 星星, poss, x7 / 我)
(x9 / 在-01, arg0, x5 / 星星)
(x9 / 在-01, manner, x13 / 就)
(x9 / 在-01, prep-amid, x11 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),星星,星星,false), Span(10,11,List(1),这些,这些,false), Span(9,10,List(2),在,在-01,false), Span(8,9,List(3),就,就-01,false), Span(7,8,List(4),星星,星星,false), Span(5,6,List(5),那,那,false), Span(3,4,List(6),我,我,false), Span(2,3,List(7),认为,认为-02,false), Span(1,2,List(8),可以,可以-02,false), Span(0,1,List(9),你,你,false)),Map(2 -> 在-01, 5 -> 那, 8 -> 可以-02, 7 -> 认为-02, 1 -> 这些, 4 -> 星星, 6 -> 我, 9 -> 你, 0 -> 星星, 3 -> 就-01),Map(就 -> 就-01, 在 -> 在-01, 星 -> 星星, 我 -> 我, 这 -> 这些, 你 -> 你, 认 -> 认为-02, 那 -> 那, 星2 -> 星星, 可 -> 可以-02))),[Ljava.lang.String;@578c3fd9,Annotation([Ljava.lang.String;@245cb8df,[Ljava.lang.String;@26b3c9a2,[Ljava.lang.String;@241b971f),Annotation([Ljava.lang.String;@125f16b2,[Ljava.lang.String;@5384ce66,[Ledu.cmu.lti.nlp.amr.Dependency;@6b42e36d),Annotation([Ljava.lang.String;@13192275,[Ljava.lang.String;@79195c22,[Ljava.lang.String;@c9b5a99),Annotation([Ljava.lang.String;@70be89ec,[Ljava.lang.String;@2aee0704,[Ledu.cmu.lti.nlp.amr.Entity;@19a5b637))
AMR:
(可 / 可以-02, op, 认 / 认为-02)
(在 / 在-01, manner, 就 / 就-01)
(在 / 在-01, mode, 星2 / 星星)
(在 / 在-01, prep-amid, 星 / 星星)
(星 / 星星, mod, 这 / 这些)
(星2 / 星星, mod, 那 / 那)
(星2 / 星星, poss, 我 / 我)
(认 / 认为-02, prep-on, 你 / 你)
(认 / 认为-02, unit, 星2 / 星星)

Decoded in 32,525 microseconds
Sentence: 那么 ， 所有 的 星星 ， 你 都 会 喜欢 看 的 … 这些 星星 都 将 成为 你 的 朋友 。

Spans:
Span 8-9:  会 => 会-03
Span 18-19:  你 => 你
Span 6-7:  你 => 你
Span 9-10:  喜欢 => 喜欢-01
Span 16-17:  将 => 将-01
Span 17-18:  成为 => 成为-01
Span 2-3:  所有 => 所有
Span 14-15:  星星 => 星星
Span 4-5:  星星 => 星星
Span 20-21:  朋友 => 朋友
Span 10-11:  看 => 看-10
Span 13-14:  这些 => 这些
Span 0-1:  那么 => 那么
Span 15-16:  都 => 都
Span 7-8:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  会 => 会-02
Oracle Span 6-7:  你 => 你
Oracle Span 9-10:  喜欢 => 喜欢-01
Oracle Span 16-17:  将 => 将
Oracle Span 17-18:  成为 => 成为-01
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 20-21:  朋友 => 朋友
Oracle Span 10-11:  看 => 看-02
Oracle Span 13-14:  这些 => 这些
Oracle Span 7-8:  都 => 都

Extra span: 你 => 你
Incorrect span: 将 => 将-01
Extra span: 都 => 都
Extra span: 星星 => 星星
Incorrect span: 看 => 看-10
Incorrect span: 会 => 会-03
Extra span: 那么 => 那么
Missing span: 会 => 会-02
Missing span: 看 => 看-02
Missing span: 将 => 将
Dependencies:
1	那么	_	AD	AD	_	10	advmod	_	_
2	,	_	PU	PU	_	10	punct	_	_
3	所有	_	DT	DT	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星星	_	NN	NN	_	10	nsubj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	你	_	PN	PN	_	10	nsubj	_	_
8	都	_	AD	AD	_	10	advmod	_	_
9	会	_	VV	VV	_	10	mmod	_	_
10	喜欢	_	VV	VV	_	0	root	_	_
11	看	_	VV	VV	_	15	dep	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	…	_	PU	PU	_	15	punct	_	_
14	这些	_	DT	DT	_	15	det	_	_
15	星星	_	NN	NN	_	10	dobj	_	_
16	都	_	AD	AD	_	18	advmod	_	_
17	将	_	AD	AD	_	18	advmod	_	_
18	成为	_	VV	VV	_	10	dep	_	_
19	你	_	PN	PN	_	21	assmod	_	_
20	的	_	DEG	DEG	_	19	assm	_	_
21	朋友	_	NN	NN	_	18	dobj	_	_
22	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x13 / 会-02, arg0, x14 / 喜欢-01)
(x14 / 喜欢-01, arg0, x15 / 你)
(x14 / 喜欢-01, arg1, x16 / 看-02)
(x16 / 看-02, arg1, x18 / 星星)
(x18 / 星星, mod, x19 / 所有)
(x20 / 成为-01, arg1, x25 / 朋友)
(x20 / 成为-01, manner, x23 / 都)
(x20 / 成为-01, time, x24 / 将)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),朋友,朋友,false), Span(18,19,List(1),你,你,false), Span(17,18,List(2),成为,成为-01,false), Span(16,17,List(3),将,将-01,false), Span(15,16,List(4),都,都,false), Span(14,15,List(5),星星,星星,false), Span(13,14,List(6),这些,这些,false), Span(10,11,List(7),看,看-10,false), Span(9,10,List(8),喜欢,喜欢-01,false), Span(8,9,List(9),会,会-03,false), Span(7,8,List(10),都,都,false), Span(6,7,List(11),你,你,false), Span(4,5,List(12),星星,星星,false), Span(2,3,List(13),所有,所有,false), Span(0,1,List(14),那么,那么,false)),Map(2 -> 成为-01, 5 -> 星星, 12 -> 星星, 8 -> 喜欢-01, 7 -> 看-10, 1 -> 你, 4 -> 都, 11 -> 你, 14 -> 那么, 6 -> 这些, 0 -> 朋友, 9 -> 会-03, 3 -> 将-01, 10 -> 都, 13 -> 所有),Map(星 -> 星星, 朋 -> 朋友, 这 -> 这些, 你 -> 你, 所 -> 所有, 喜 -> 喜欢-01, 将 -> 将-01, 成 -> 成为-01, 会 -> 会-03, 你2 -> 你, 看 -> 看-10, 那 -> 那么, 都 -> 都, 都2 -> 都, 星2 -> 星星))),[Ljava.lang.String;@4f3c7808,Annotation([Ljava.lang.String;@4b4969ea,[Ljava.lang.String;@11c581a0,[Ljava.lang.String;@256589a1),Annotation([Ljava.lang.String;@935493d,[Ljava.lang.String;@9b367c8,[Ledu.cmu.lti.nlp.amr.Dependency;@34c62fdf),Annotation([Ljava.lang.String;@3de79067,[Ljava.lang.String;@1eb85a47,[Ljava.lang.String;@ca7e37f),Annotation([Ljava.lang.String;@99a8de3,[Ljava.lang.String;@87f501f,[Ledu.cmu.lti.nlp.amr.Entity;@54495935))
AMR:
(会 / 会-03, domain, 星2 / 星星)
(会 / 会-03, manner, 都2 / 都)
(会 / 会-03, poss, 你2 / 你)
(喜 / 喜欢-01, season, 看 / 看-10)
(喜 / 喜欢-01, time, 会 / 会-03)
(成 / 成为-01, ARG5, 你 / 你)
(成 / 成为-01, domain, 星 / 星星)
(成 / 成为-01, instrument, 朋 / 朋友)
(成 / 成为-01, manner, 看 / 看-10)
(成 / 成为-01, manner, 都 / 都)
(成 / 成为-01, time, 将 / 将-01)
(星 / 星星, mod, 这 / 这些)
(星2 / 星星, mod, 所 / 所有)
(那 / 那么, mod, 所 / 所有)

Decoded in 63,838 microseconds
Sentence: 而且 ， 我 还 要 给 你 一 件 礼物 … ”

Spans:
Span 6-7:  你 => 你
Span 2-3:  我 => 我
Span 9-10:  礼物 => 礼物
Span 5-6:  给 => 给-02
Span 4-5:  要 => 要-02
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  礼物 => 礼物
Oracle Span 5-6:  给 => 给-01
Oracle Span 4-5:  要 => 要-03
Oracle Span 3-4:  还 => 还

Incorrect span: 给 => 给-02
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 给 => 给-01
Dependencies:
1	而且	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	要	_	VV	VV	_	0	root	_	_
6	给	_	P	P	_	10	prep	_	_
7	你	_	PN	PN	_	6	pobj	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	件	_	M	M	_	10	clf	_	_
10	礼物	_	NN	NN	_	5	dobj	_	_
11	…	_	PU	PU	_	5	punct	_	_
12	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x19 / 要-03, arg0, x21 / 给-01)
(x19 / 要-03, manner, x20 / 还)
(x21 / 给-01, arg0, x22 / 我)
(x21 / 给-01, arg1, x23 / 礼物)
(x21 / 给-01, arg2, x25 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),礼物,礼物,false), Span(6,7,List(1),你,你,false), Span(5,6,List(2),给,给-02,false), Span(4,5,List(3),要,要-02,false), Span(3,4,List(4),还,还,false), Span(2,3,List(5),我,我,false)),Map(2 -> 给-02, 5 -> 我, 1 -> 你, 4 -> 还, 0 -> 礼物, 3 -> 要-02),Map(礼 -> 礼物, 我 -> 我, 要 -> 要-02, 你 -> 你, 给 -> 给-02, 还 -> 还))),[Ljava.lang.String;@67c6f4d8,Annotation([Ljava.lang.String;@3a6e9856,[Ljava.lang.String;@4863c8ac,[Ljava.lang.String;@56fda064),Annotation([Ljava.lang.String;@6cdee57,[Ljava.lang.String;@482f7af0,[Ledu.cmu.lti.nlp.amr.Dependency;@1edfedf1),Annotation([Ljava.lang.String;@251a90ce,[Ljava.lang.String;@4c4c7d6c,[Ljava.lang.String;@7f0766ef),Annotation([Ljava.lang.String;@1e56bc9b,[Ljava.lang.String;@6f3bd37f,[Ledu.cmu.lti.nlp.amr.Entity;@403364e9))
AMR:
(礼 / 礼物, manner, 给 / 给-02)
(给 / 给-02, ARG5, 你 / 你)
(要 / 要-02, ARG5, 给 / 给-02)
(要 / 要-02, manner, 还 / 还)
(要 / 要-02, prep-on-behalf, 我 / 我)

Decoded in 14,711 microseconds
Sentence: 他 又 笑 了 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  又 => 又
Span 2-3:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  又 => 又
Oracle Span 2-3:  笑 => 笑-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	笑	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 笑-01, arg1, x2 / 他)
(x0 / 笑-01, manner, x3 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),笑,笑-01,false), Span(1,2,List(1),又,又,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 又, 0 -> 笑-01),Map(又 -> 又, 笑 -> 笑-01, 他 -> 他))),[Ljava.lang.String;@447521e,Annotation([Ljava.lang.String;@2fde9469,[Ljava.lang.String;@1ecf0ac6,[Ljava.lang.String;@458031da),Annotation([Ljava.lang.String;@7be94cd6,[Ljava.lang.String;@20cff21e,[Ledu.cmu.lti.nlp.amr.Dependency;@463045fb),Annotation([Ljava.lang.String;@27ab206,[Ljava.lang.String;@3344d163,[Ljava.lang.String;@6cc48a17),Annotation([Ljava.lang.String;@289f15e9,[Ljava.lang.String;@7f22687e,[Ledu.cmu.lti.nlp.amr.Entity;@6af87130))
AMR:
(笑 / 笑-01, ARG6, 他 / 他)
(笑 / 笑-01, manner, 又 / 又)

Decoded in 4,293 microseconds
Sentence: “ 啊 ！ 小家伙 ， 小家伙 ，

Spans:
Span 1-2:  啊 => 啊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  啊 => 啊

Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	啊	_	AD	AD	_	4	advmod	_	_
3	！	_	AD	AD	_	4	advmod	_	_
4	小家伙	_	VV	VV	_	0	root	_	_
5	,	_	PU	PU	_	4	punct	_	_
6	小家伙	_	CD	CD	_	4	dep	_	_
7	,	_	PU	PU	_	6	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),啊,啊,false)),Map(0 -> 啊),Map(啊 -> 啊))),[Ljava.lang.String;@22a4ca4a,Annotation([Ljava.lang.String;@72c4a3aa,[Ljava.lang.String;@1e495414,[Ljava.lang.String;@3711c71c),Annotation([Ljava.lang.String;@33e3bd2e,[Ljava.lang.String;@646d810b,[Ledu.cmu.lti.nlp.amr.Dependency;@30508066),Annotation([Ljava.lang.String;@9408857,[Ljava.lang.String;@27e44e9c,[Ljava.lang.String;@2f09e6b2),Annotation([Ljava.lang.String;@1bee0085,[Ljava.lang.String;@16e1219f,[Ledu.cmu.lti.nlp.amr.Entity;@13f40d71))
AMR:


Decoded in 1,687 microseconds
Sentence: 我 喜欢 听 你 这 笑声 ！ ”

Spans:
Span 3-4:  你 => 你
Span 2-3:  听 => 听-02
Span 1-2:  喜欢 => 喜欢-01
Span 0-1:  我 => 我
Span 5-6:  笑声 => 笑声
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  你 => 你
Oracle Span 2-3:  听 => 听-01
Oracle Span 1-2:  喜欢 => 喜欢-01
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  笑声 => 笑声
Oracle Span 4-5:  这 => 这

Incorrect span: 听 => 听-02
Missing span: 听 => 听-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	喜欢	_	VV	VV	_	0	root	_	_
3	听	_	VV	VV	_	2	ccomp	_	_
4	你	_	PN	PN	_	6	nn	_	_
5	这	_	DT	DT	_	6	det	_	_
6	笑声	_	NN	NN	_	3	dobj	_	_
7	！	_	PU	PU	_	2	punct	_	_
8	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x12 / 喜欢-01, arg0, x13 / 我)
(x12 / 喜欢-01, arg1, x14 / 听-01)
(x14 / 听-01, arg1, x16 / 笑声)
(x16 / 笑声, mod, x17 / 这)
(x16 / 笑声, poss, x18 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),笑声,笑声,false), Span(4,5,List(1),这,这,false), Span(3,4,List(2),你,你,false), Span(2,3,List(3),听,听-02,false), Span(1,2,List(4),喜欢,喜欢-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 你, 5 -> 我, 1 -> 这, 4 -> 喜欢-01, 0 -> 笑声, 3 -> 听-02),Map(我 -> 我, 这 -> 这, 笑 -> 笑声, 你 -> 你, 喜 -> 喜欢-01, 听 -> 听-02))),[Ljava.lang.String;@73a845cb,Annotation([Ljava.lang.String;@18a98913,[Ljava.lang.String;@7dbae40,[Ljava.lang.String;@34f7b44f),Annotation([Ljava.lang.String;@5403907,[Ljava.lang.String;@5175d9ad,[Ledu.cmu.lti.nlp.amr.Dependency;@b06d46d),Annotation([Ljava.lang.String;@25a5c8e,[Ljava.lang.String;@656c5c3,[Ljava.lang.String;@7911cc15),Annotation([Ljava.lang.String;@4409cae6,[Ljava.lang.String;@14e750c5,[Ledu.cmu.lti.nlp.amr.Entity;@242ff747))
AMR:
(听 / 听-02, snt11, 你 / 你)
(喜 / 喜欢-01, decade, 我 / 我)
(喜 / 喜欢-01, snt11, 听 / 听-02)
(笑 / 笑声, mod, 这 / 这)
(笑 / 笑声, poss, 听 / 听-02)

Decoded in 10,494 microseconds
Sentence: “ 这 正好 是 我 给 你 的 礼物 ，

Spans:
Span 6-7:  你 => 你
Span 4-5:  我 => 我
Span 3-4:  是 => 是-04
Span 2-3:  正好 => 正好
Span 8-9:  礼物 => 礼物
Span 5-6:  给 => 给-02
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  你 => 你
Oracle Span 4-5:  我 => 我
Oracle Span 2-3:  正好 => 正好
Oracle Span 8-9:  礼物 => 礼物
Oracle Span 5-6:  给 => 给-01
Oracle Span 1-2:  这 => 这

Incorrect span: 给 => 给-02
Extra span: 是 => 是-04
Missing span: 给 => 给-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	正好	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	我	_	PN	PN	_	9	nsubj	_	_
6	给	_	P	P	_	9	assmod	_	_
7	你	_	PN	PN	_	6	pobj	_	_
8	的	_	DEG	DEG	_	6	assm	_	_
9	礼物	_	NN	NN	_	4	conj	_	_
10	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x10 / 给-01, arg0, x11 / 我)
(x10 / 给-01, arg1, x9 / 礼物)
(x10 / 给-01, arg2, x12 / 你)
(x9 / 礼物, domain, x14 / 这)
(x9 / 礼物, manner, x13 / 正好)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),礼物,礼物,false), Span(6,7,List(1),你,你,false), Span(5,6,List(2),给,给-02,false), Span(4,5,List(3),我,我,false), Span(3,4,List(4),是,是-04,false), Span(2,3,List(5),正好,正好,false), Span(1,2,List(6),这,这,false)),Map(2 -> 给-02, 5 -> 正好, 1 -> 你, 4 -> 是-04, 6 -> 这, 0 -> 礼物, 3 -> 我),Map(礼 -> 礼物, 我 -> 我, 这 -> 这, 你 -> 你, 正 -> 正好, 给 -> 给-02, 是 -> 是-04))),[Ljava.lang.String;@5329f6b3,Annotation([Ljava.lang.String;@597d48ca,[Ljava.lang.String;@77324a58,[Ljava.lang.String;@2c7c0e36),Annotation([Ljava.lang.String;@307cf964,[Ljava.lang.String;@374ccb9,[Ledu.cmu.lti.nlp.amr.Dependency;@66713605),Annotation([Ljava.lang.String;@2ab09943,[Ljava.lang.String;@7d50f2a8,[Ljava.lang.String;@5864e8bf),Annotation([Ljava.lang.String;@37ca3ca8,[Ljava.lang.String;@191ec193,[Ledu.cmu.lti.nlp.amr.Entity;@6321a5aa))
AMR:
(是 / 是-04, manner, 正 / 正好)
(是 / 是-04, mod, 这 / 这)
(礼 / 礼物, manner, 给 / 给-02)
(给 / 给-02, beneficiary, 我 / 我)
(给 / 给-02, degree, 是 / 是-04)
(给 / 给-02, prep-through, 你 / 你)

Decoded in 13,849 microseconds
Sentence: 这 正好 是

Spans:
Span 2-3:  是 => 是-04
Span 1-2:  正好 => 正好
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  是 => 是-01
Oracle Span 1-2:  正好 => 正好
Oracle Span 0-1:  这 => 这

Incorrect span: 是 => 是-04
Missing span: 是 => 是-01
Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	正好	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_

Oracle:
(x0 / 是-01, arg0, x2 / 这)
(x0 / 是-01, manner, x3 / 正好)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),是,是-04,false), Span(1,2,List(1),正好,正好,false), Span(0,1,List(2),这,这,false)),Map(2 -> 这, 1 -> 正好, 0 -> 是-04),Map(这 -> 这, 正 -> 正好, 是 -> 是-04))),[Ljava.lang.String;@1c7f9861,Annotation([Ljava.lang.String;@7a36c83a,[Ljava.lang.String;@154b8cb6,[Ljava.lang.String;@7b297740),Annotation([Ljava.lang.String;@1b7554d4,[Ljava.lang.String;@57ce2898,[Ledu.cmu.lti.nlp.amr.Dependency;@1ea930eb),Annotation([Ljava.lang.String;@2e0ad709,[Ljava.lang.String;@1fe8f5e8,[Ljava.lang.String;@39449465),Annotation([Ljava.lang.String;@6e3dd5ce,[Ljava.lang.String;@16f7f59f,[Ledu.cmu.lti.nlp.amr.Entity;@4ee8051c))
AMR:
(是 / 是-04, ARG4, 这 / 这)
(是 / 是-04, manner, 正 / 正好)

Decoded in 3,636 microseconds
Sentence: … 这 就 好象 水 那样 。 ”

Spans:
Span 2-3:  就 => 就-01
Span 4-5:  水 => 水
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  水 => 水
Oracle Span 1-2:  这 => 这

Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	…	_	PU	PU	_	4	dep	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	好象	_	VV	VV	_	0	root	_	_
5	水	_	NN	NN	_	4	dobj	_	_
6	那样	_	AD	AD	_	4	advmod	_	_
7	。	_	PU	PU	_	4	punct	_	_
8	”	_	PU	PU	_	4	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),水,水,false), Span(2,3,List(1),就,就-01,false), Span(1,2,List(2),这,这,false)),Map(2 -> 这, 1 -> 就-01, 0 -> 水),Map(就 -> 就-01, 这 -> 这, 水 -> 水))),[Ljava.lang.String;@53125718,Annotation([Ljava.lang.String;@53016b11,[Ljava.lang.String;@7af327e3,[Ljava.lang.String;@743d0d44),Annotation([Ljava.lang.String;@35563e4c,[Ljava.lang.String;@6dd79214,[Ledu.cmu.lti.nlp.amr.Dependency;@ef86c72),Annotation([Ljava.lang.String;@123307c4,[Ljava.lang.String;@1693ff90,[Ljava.lang.String;@47058864),Annotation([Ljava.lang.String;@ad3f70a,[Ljava.lang.String;@54ccb3,[Ledu.cmu.lti.nlp.amr.Entity;@9b2dc56))
AMR:
(就 / 就-01, ARG5, 这 / 这)
(就 / 就-01, prep-through, 水 / 水)

Decoded in 4,020 microseconds
Sentence: “ 你 说 的 是 什么 ？ ”

Spans:
Span 5-6:  什么 => 什么
Span 1-2:  你 => 你
Span 4-5:  是 => 是-04
Span 2-3:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  说 => 说-01

Extra span: 什么 => 什么
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	说	_	VV	VV	_	5	top	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	是	_	VC	VC	_	0	root	_	_
6	什么	_	PN	PN	_	5	attr	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 说-01, arg0, x11 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),什么,什么,false), Span(4,5,List(1),是,是-04,false), Span(2,3,List(2),说,说-02,false), Span(1,2,List(3),你,你,false)),Map(2 -> 说-02, 1 -> 是-04, 0 -> 什么, 3 -> 你),Map(你 -> 你, 说 -> 说-02, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@621f23ac,Annotation([Ljava.lang.String;@7761e342,[Ljava.lang.String;@51f68849,[Ljava.lang.String;@4eb9ae4d),Annotation([Ljava.lang.String;@5520f675,[Ljava.lang.String;@2d237460,[Ledu.cmu.lti.nlp.amr.Dependency;@48f2054d),Annotation([Ljava.lang.String;@4b3a01d8,[Ljava.lang.String;@19fbc594,[Ljava.lang.String;@2f4d32bf),Annotation([Ljava.lang.String;@774d8276,[Ljava.lang.String;@6ce26986,[Ledu.cmu.lti.nlp.amr.Entity;@2bf2d6eb))
AMR:
(什 / 什么, mod, 是 / 是-04)
(说 / 说-02, direction, 你 / 你)
(说 / 说-02, purpose, 是 / 是-04)

Decoded in 5,562 microseconds
Sentence: “ 人们 都 有 星星 ， 但是 他们 在 不同 人 眼 里 并不 都 一样 。 ” 他 回答 。

Spans:
Span 15-16:  一样 => 一样
Span 9-10:  不同 => 不同-01
Span 10-11:  人 => 人
Span 1-2:  人们 => 人们
Span 18-19:  他 => 他
Span 7-8:  他们 => 他们
Span 19-20:  回答 => 回答-01
Span 8-9:  在 => 在-01
Span 4-5:  星星 => 星星
Span 3-4:  有 => 有-06
Span 11-12:  眼 => 眼
Span 14-15:  都 => 都
Span 2-3:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 15-16:  一样 => 一样-01
Oracle Span 9-10:  不同 => 不同
Oracle Span 10-11:  人 => 人
Oracle Span 1-2:  人们 => 人们
Oracle Span 18-19:  他 => 他
Oracle Span 19-20:  回答 => 回答-01
Oracle Span 4-5:  星星 => 星星
Oracle Span 3-4:  有 => 有-01
Oracle Span 2-3:  都 => 都
Oracle Span 14-15:  都 => 都

Incorrect span: 一样 => 一样
Extra span: 眼 => 眼
Incorrect span: 不同 => 不同-01
Extra span: 在 => 在-01
Extra span: 他们 => 他们
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 一样 => 一样-01
Missing span: 不同 => 不同
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	人们	_	NN	NN	_	4	nsubj	_	_
3	都	_	AD	AD	_	4	advmod	_	_
4	有	_	VE	VE	_	0	root	_	_
5	星星	_	NN	NN	_	4	dobj	_	_
6	,	_	PU	PU	_	4	punct	_	_
7	但是	_	AD	AD	_	14	advmod	_	_
8	他们	_	PN	PN	_	14	nsubj	_	_
9	在	_	P	P	_	14	prep	_	_
10	不同	_	JJ	JJ	_	11	amod	_	_
11	人	_	NN	NN	_	12	nn	_	_
12	眼	_	NN	NN	_	13	lobj	_	_
13	里	_	LC	LC	_	9	plmod	_	_
14	并不	_	VV	VV	_	4	conj	_	_
15	都	_	AD	AD	_	16	advmod	_	_
16	一样	_	VA	VA	_	14	ccomp	_	_
17	。	_	PU	PU	_	4	punct	_	_
18	”	_	PU	PU	_	4	punct	_	_
19	他	_	PN	PN	_	20	nsubj	_	_
20	回答	_	VV	VV	_	4	conj	_	_
21	。	_	PU	PU	_	4	punct	_	_
22	他们	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x20 / 有-01, arg0, x21 / 人们)
(x20 / 有-01, arg1, x23 / 星星)
(x20 / 有-01, manner, x22 / 都)
(x24 / 一样-01, manner, x27 / 都)
(x29 / 人, mod, x30 / 不同)
(x31 / 回答-01, arg0, x32 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),回答,回答-01,false), Span(18,19,List(1),他,他,false), Span(15,16,List(2),一样,一样,false), Span(14,15,List(3),都,都,false), Span(11,12,List(4),眼,眼,false), Span(10,11,List(5),人,人,false), Span(9,10,List(6),不同,不同-01,false), Span(8,9,List(7),在,在-01,false), Span(7,8,List(8),他们,他们,false), Span(4,5,List(9),星星,星星,false), Span(3,4,List(10),有,有-06,false), Span(2,3,List(11),都,都,false), Span(1,2,List(12),人们,人们,false)),Map(2 -> 一样, 5 -> 人, 12 -> 人们, 8 -> 他们, 7 -> 在-01, 1 -> 他, 4 -> 眼, 11 -> 都, 6 -> 不同-01, 0 -> 回答-01, 9 -> 星星, 3 -> 都, 10 -> 有-06),Map(他2 -> 他们, 在 -> 在-01, 星 -> 星星, 眼 -> 眼, 人2 -> 人们, 他 -> 他, 不 -> 不同-01, 都 -> 都, 都2 -> 都, 人 -> 人, 回 -> 回答-01, 一 -> 一样, 有 -> 有-06))),[Ljava.lang.String;@6d6cd1e0,Annotation([Ljava.lang.String;@76a9a009,[Ljava.lang.String;@9785903,[Ljava.lang.String;@34009349),Annotation([Ljava.lang.String;@3f68a7f8,[Ljava.lang.String;@4faf1f4,[Ledu.cmu.lti.nlp.amr.Dependency;@4f811029),Annotation([Ljava.lang.String;@7f2b584b,[Ljava.lang.String;@5866731,[Ljava.lang.String;@56a05324),Annotation([Ljava.lang.String;@11e71181,[Ljava.lang.String;@342beaf6,[Ledu.cmu.lti.nlp.amr.Entity;@222acad))
AMR:
(一 / 一样, location, 眼 / 眼)
(一 / 一样, manner, 都 / 都)
(不 / 不同-01, location, 眼 / 眼)
(不 / 不同-01, manner, 在 / 在-01)
(不 / 不同-01, manner, 有 / 有-06)
(不 / 不同-01, prep-through, 人 / 人)
(回 / 回答-01, example, 他 / 他)
(回 / 回答-01, manner, 一 / 一样)
(在 / 在-01, degree, 他2 / 他们)
(星 / 星星, mod, 有 / 有-06)
(有 / 有-06, degree, 人2 / 人们)
(有 / 有-06, manner, 都2 / 都)

Decoded in 58,506 microseconds
Sentence: 对 旅行 的 人 来说 ， 星星 是 向导 。

Spans:
Span 3-4:  人 => 人
Span 8-9:  向导 => 向导
Span 0-1:  对 => 对-02
Span 1-2:  旅行 => 旅行-01
Span 6-7:  星星 => 星星
Span 7-8:  是 => 是-04
Span 4-5:  来说 => 来说-01

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 8-9:  向导 => 向导
Oracle Span 1-2:  旅行 => 旅行-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 4-5:  来说 => 来说-01

Extra span: 是 => 是-04
Extra span: 对 => 对-02
Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	旅行	_	NN	NN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	人	_	NN	NN	_	5	nn	_	_
5	来说	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	8	punct	_	_
7	星星	_	NN	NN	_	8	top	_	_
8	是	_	VC	VC	_	0	root	_	_
9	向导	_	NN	NN	_	8	attr	_	_
10	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x8 / 向导)
(x0 / 来说-01, arg1, x4 / 人)
(x4 / 人, mod, x5 / 旅行-01)
(x8 / 向导, domain, x9 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),向导,向导,false), Span(7,8,List(1),是,是-04,false), Span(6,7,List(2),星星,星星,false), Span(4,5,List(3),来说,来说-01,false), Span(3,4,List(4),人,人,false), Span(1,2,List(5),旅行,旅行-01,false), Span(0,1,List(6),对,对-02,false)),Map(2 -> 星星, 5 -> 旅行-01, 1 -> 是-04, 4 -> 人, 6 -> 对-02, 0 -> 向导, 3 -> 来说-01),Map(星 -> 星星, 来 -> 来说-01, 旅 -> 旅行-01, 向 -> 向导, 对 -> 对-02, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@56cfe6be,Annotation([Ljava.lang.String;@7f0d8eff,[Ljava.lang.String;@149aa7b2,[Ljava.lang.String;@3ca3648),Annotation([Ljava.lang.String;@2a99ca99,[Ljava.lang.String;@39f0c343,[Ledu.cmu.lti.nlp.amr.Dependency;@781654f8),Annotation([Ljava.lang.String;@2abc55c4,[Ljava.lang.String;@4e958f08,[Ljava.lang.String;@71c0b742),Annotation([Ljava.lang.String;@3bbb8c16,[Ljava.lang.String;@73e1ecd0,[Ledu.cmu.lti.nlp.amr.Entity;@11eec06b))
AMR:
(人 / 人, mod, 旅 / 旅行-01)
(向 / 向导, ARG3, 是 / 是-04)
(对 / 对-02, ARG3, 来 / 来说-01)
(旅 / 旅行-01, ARG1, 对 / 对-02)
(星 / 星星, ARG3, 是 / 是-04)
(来 / 来说-01, ARG0, 是 / 是-04)

Decoded in 48,650 microseconds
Sentence: 对 别的 人 来说 ， 星星 只 是 些 小 亮光 。

Spans:
Span 8-9:  些 => 些
Span 10-11:  亮光 => 亮光
Span 2-3:  人 => 人
Span 1-2:  别的 => 别的
Span 6-7:  只 => 只
Span 0-1:  对 => 对-02
Span 9-10:  小 => 小
Span 5-6:  星星 => 星星
Span 7-8:  是 => 是-04
Span 3-4:  来说 => 来说-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 8-9:  些 => 些
Oracle Span 10-11:  亮光 => 亮光
Oracle Span 2-3:  人 => 人
Oracle Span 1-2:  别的 => 别的
Oracle Span 6-7:  只 => 只
Oracle Span 9-10:  小 => 小-01
Oracle Span 5-6:  星星 => 星星
Oracle Span 3-4:  来说 => 来说-01

Incorrect span: 小 => 小
Extra span: 是 => 是-04
Extra span: 对 => 对-02
Missing span: 小 => 小-01
Dependencies:
1	对	_	P	P	_	8	prep	_	_
2	别的	_	NN	NN	_	4	nn	_	_
3	人	_	NN	NN	_	4	nn	_	_
4	来说	_	NN	NN	_	1	pobj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	星星	_	NN	NN	_	8	nsubj	_	_
7	只	_	AD	AD	_	8	advmod	_	_
8	是	_	VC	VC	_	0	root	_	_
9	些	_	M	M	_	11	dep	_	_
10	小	_	JJ	JJ	_	11	amod	_	_
11	亮光	_	NN	NN	_	8	attr	_	_
12	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x9 / 亮光)
(x0 / 来说-01, arg1, x7 / 人)
(x7 / 人, mod, x8 / 别的)
(x9 / 亮光, domain, x12 / 星星)
(x9 / 亮光, manner, x13 / 只)
(x9 / 亮光, mod, x10 / 小-01)
(x9 / 亮光, mod, x11 / 些)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),亮光,亮光,false), Span(9,10,List(1),小,小,false), Span(8,9,List(2),些,些,false), Span(7,8,List(3),是,是-04,false), Span(6,7,List(4),只,只,false), Span(5,6,List(5),星星,星星,false), Span(3,4,List(6),来说,来说-01,false), Span(2,3,List(7),人,人,false), Span(1,2,List(8),别的,别的,false), Span(0,1,List(9),对,对-02,false)),Map(2 -> 些, 5 -> 星星, 8 -> 别的, 7 -> 人, 1 -> 小, 4 -> 只, 6 -> 来说-01, 9 -> 对-02, 0 -> 亮光, 3 -> 是-04),Map(星 -> 星星, 些 -> 些, 来 -> 来说-01, 别 -> 别的, 小 -> 小, 只 -> 只, 亮 -> 亮光, 对 -> 对-02, 人 -> 人, 是 -> 是-04))),[Ljava.lang.String;@65600fb3,Annotation([Ljava.lang.String;@25ce435,[Ljava.lang.String;@7ea71fc2,[Ljava.lang.String;@19ad75e5),Annotation([Ljava.lang.String;@7cd5fcf4,[Ljava.lang.String;@19cdc217,[Ledu.cmu.lti.nlp.amr.Dependency;@5f5297e3),Annotation([Ljava.lang.String;@2d22d3b1,[Ljava.lang.String;@7ec3a8bd,[Ljava.lang.String;@9690008),Annotation([Ljava.lang.String;@42cf6349,[Ljava.lang.String;@79cb8ffa,[Ledu.cmu.lti.nlp.amr.Entity;@1a2e563e))
AMR:
(亮 / 亮光, domain, 星 / 星星)
(亮 / 亮光, manner, 只 / 只)
(亮 / 亮光, mod, 些 / 些)
(亮 / 亮光, mod, 小 / 小)
(人 / 人, mod, 别 / 别的)
(别 / 别的, ARG3, 对 / 对-02)
(对 / 对-02, ARG3, 来 / 来说-01)
(是 / 是-04, ARG4, 来 / 来说-01)
(是 / 是-04, manner, 只 / 只)

Decoded in 27,273 microseconds
Sentence: 对 另外 一些 学者 来说 ， 星星 就 是 他们 探讨 的 学问 。

Spans:
Span 2-3:  一些 => 一些
Span 9-10:  他们 => 他们
Span 1-2:  另外 => 另外
Span 3-4:  学者 => 学者
Span 12-13:  学问 => 学问
Span 0-1:  对 => 对-02
Span 7-8:  就 => 就-01
Span 10-11:  探讨 => 探讨-01
Span 6-7:  星星 => 星星
Span 8-9:  是 => 是-04
Span 4-5:  来说 => 来说-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  一些 => 一些
Oracle Span 1-2:  另外 => 另外
Oracle Span 3-4:  学者 => 学者
Oracle Span 12-13:  学问 => 学问
Oracle Span 10-11:  探讨 => 探讨-01
Oracle Span 6-7:  星星 => 星星
Oracle Span 4-5:  来说 => 来说-01

Extra span: 他们 => 他们
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Extra span: 对 => 对-02
Dependencies:
1	对	_	P	P	_	9	prep	_	_
2	另外	_	JJ	JJ	_	4	amod	_	_
3	一些	_	CD	CD	_	4	nummod	_	_
4	学者	_	NN	NN	_	5	nn	_	_
5	来说	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	9	punct	_	_
7	星星	_	NN	NN	_	9	nsubj	_	_
8	就	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	0	root	_	_
10	他们	_	PN	PN	_	11	nsubj	_	_
11	探讨	_	VV	VV	_	13	rcmod	_	_
12	的	_	DEC	DEC	_	11	cpm	_	_
13	学问	_	NN	NN	_	9	attr	_	_
14	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x10 / 学问)
(x0 / 来说-01, arg1, x6 / 学者)
(x10 / 学问, domain, x13 / 星星)
(x11 / 探讨-01, arg1, x10 / 学问)
(x6 / 学者, mod, x7 / 一些)
(x6 / 学者, mod, x8 / 另外)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),学问,学问,false), Span(10,11,List(1),探讨,探讨-01,false), Span(9,10,List(2),他们,他们,false), Span(8,9,List(3),是,是-04,false), Span(7,8,List(4),就,就-01,false), Span(6,7,List(5),星星,星星,false), Span(4,5,List(6),来说,来说-01,false), Span(3,4,List(7),学者,学者,false), Span(2,3,List(8),一些,一些,false), Span(1,2,List(9),另外,另外,false), Span(0,1,List(10),对,对-02,false)),Map(2 -> 他们, 5 -> 星星, 8 -> 一些, 7 -> 学者, 1 -> 探讨-01, 4 -> 就-01, 6 -> 来说-01, 9 -> 另外, 0 -> 学问, 10 -> 对-02, 3 -> 是-04),Map(就 -> 就-01, 另 -> 另外, 星 -> 星星, 探 -> 探讨-01, 来 -> 来说-01, 他 -> 他们, 学2 -> 学者, 对 -> 对-02, 一 -> 一些, 是 -> 是-04, 学 -> 学问))),[Ljava.lang.String;@5b066c33,Annotation([Ljava.lang.String;@62ea8931,[Ljava.lang.String;@47fb7ec9,[Ljava.lang.String;@2f8c4fae),Annotation([Ljava.lang.String;@4703c998,[Ljava.lang.String;@71166348,[Ledu.cmu.lti.nlp.amr.Dependency;@6d874695),Annotation([Ljava.lang.String;@20bb85b4,[Ljava.lang.String;@79add732,[Ljava.lang.String;@3be3e76c),Annotation([Ljava.lang.String;@6c07ad6b,[Ljava.lang.String;@10ed037a,[Ledu.cmu.lti.nlp.amr.Entity;@76e4212))
AMR:
(学 / 学问, domain, 星 / 星星)
(学2 / 学者, mod, 一 / 一些)
(学2 / 学者, mod, 另 / 另外)
(对 / 对-02, ARG4, 另 / 另外)
(探 / 探讨-01, ARG4, 是 / 是-04)
(探 / 探讨-01, op, 学 / 学问)
(是 / 是-04, ARG6, 他 / 他们)
(是 / 是-04, manner, 就 / 就-01)
(来 / 来说-01, ARG4, 是 / 是-04)
(来 / 来说-01, location, 学2 / 学者)

Decoded in 38,148 microseconds
Sentence: 对 我 所 遇见 的 那个 实业家 来说 ， 星星 是 金钱 。

Spans:
Span 6-7:  实业家 => 实业家
Span 0-1:  对 => 对-02
Span 1-2:  我 => 我
Span 9-10:  星星 => 星星
Span 10-11:  是 => 是-04
Span 7-8:  来说 => 来说-01
Span 3-4:  遇见 => 遇见-01
Span 5-6:  那个 => 那个
Span 11-12:  金钱 => 金钱

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  实业家 => 实业家
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  星星 => 星星
Oracle Span 7-8:  来说 => 来说-01
Oracle Span 3-4:  遇见 => 遇见-01
Oracle Span 11-12:  金钱 => 金钱

Extra span: 是 => 是-04
Extra span: 那个 => 那个
Extra span: 对 => 对-02
Dependencies:
1	对	_	P	P	_	11	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	所	_	MSP	MSP	_	4	prtmod	_	_
4	遇见	_	VV	VV	_	8	rcmod	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	那个	_	NN	NN	_	8	nn	_	_
7	实业家	_	NN	NN	_	8	nn	_	_
8	来说	_	NN	NN	_	1	pobj	_	_
9	,	_	PU	PU	_	11	punct	_	_
10	星星	_	NN	NN	_	11	top	_	_
11	是	_	VC	VC	_	0	root	_	_
12	金钱	_	NN	NN	_	11	attr	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 来说-01, arg0, x11 / 星星)
(x0 / 来说-01, arg1, x3 / 实业家)
(x0 / 来说-01, arg2, x10 / 金钱)
(x5 / 遇见-01, arg0, x6 / 我)
(x5 / 遇见-01, arg1, x3 / 实业家)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),金钱,金钱,false), Span(10,11,List(1),是,是-04,false), Span(9,10,List(2),星星,星星,false), Span(7,8,List(3),来说,来说-01,false), Span(6,7,List(4),实业家,实业家,false), Span(5,6,List(5),那个,那个,false), Span(3,4,List(6),遇见,遇见-01,false), Span(1,2,List(7),我,我,false), Span(0,1,List(8),对,对-02,false)),Map(2 -> 星星, 5 -> 那个, 8 -> 对-02, 7 -> 我, 1 -> 是-04, 4 -> 实业家, 6 -> 遇见-01, 0 -> 金钱, 3 -> 来说-01),Map(星 -> 星星, 我 -> 我, 来 -> 来说-01, 实 -> 实业家, 遇 -> 遇见-01, 那 -> 那个, 对 -> 对-02, 是 -> 是-04, 金 -> 金钱))),[Ljava.lang.String;@23121d14,Annotation([Ljava.lang.String;@72af90e8,[Ljava.lang.String;@aa1bb14,[Ljava.lang.String;@7faa0680),Annotation([Ljava.lang.String;@4c635edc,[Ljava.lang.String;@4245bf68,[Ledu.cmu.lti.nlp.amr.Dependency;@45bbc52f),Annotation([Ljava.lang.String;@6a8a551e,[Ljava.lang.String;@3cc9632d,[Ljava.lang.String;@53982523),Annotation([Ljava.lang.String;@489110c2,[Ljava.lang.String;@700b9e6b,[Ledu.cmu.lti.nlp.amr.Entity;@7ac5b4c))
AMR:
(实 / 实业家, mod, 那 / 那个)
(对 / 对-02, ARG0, 遇 / 遇见-01)
(星 / 星星, ARG3, 是 / 是-04)
(来 / 来说-01, ARG0, 是 / 是-04)
(来 / 来说-01, location, 实 / 实业家)
(遇 / 遇见-01, ARG3, 实 / 实业家)
(遇 / 遇见-01, ARG6, 我 / 我)
(金 / 金钱, ARG3, 是 / 是-04)

Decoded in 70,308 microseconds
Sentence: 但是 ， 所有 这些 星星 都 不 会 说话 。

Spans:
Span 6-7:  不 => 不
Span 7-8:  会 => 会-03
Span 2-3:  所有 => 所有
Span 4-5:  星星 => 星星
Span 8-9:  说话 => 说话-01
Span 3-4:  这些 => 这些
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  会 => 会-01
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 8-9:  说话 => 说话-01
Oracle Span 3-4:  这些 => 这些
Oracle Span 5-6:  都 => 都

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Missing span: 会 => 会-01
Dependencies:
1	但是	_	AD	AD	_	9	advmod	_	_
2	,	_	PU	PU	_	9	punct	_	_
3	所有	_	DT	DT	_	5	det	_	_
4	这些	_	DT	DT	_	5	det	_	_
5	星星	_	NN	NN	_	9	nsubj	_	_
6	都	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	dep	_	_
9	说话	_	VV	VV	_	0	root	_	_
10	。	_	PU	PU	_	9	punct	_	_

Oracle:
(x2 / 会-01, arg0, x5 / 星星)
(x2 / 会-01, arg1, x8 / 说话-01)
(x2 / 会-01, manner, x4 / 都)
(x5 / 星星, mod, x6 / 这些)
(x5 / 星星, mod, x7 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),说话,说话-01,false), Span(7,8,List(1),会,会-03,false), Span(6,7,List(2),不,不,false), Span(5,6,List(3),都,都,false), Span(4,5,List(4),星星,星星,false), Span(3,4,List(5),这些,这些,false), Span(2,3,List(6),所有,所有,false)),Map(2 -> 不, 5 -> 这些, 1 -> 会-03, 4 -> 星星, 6 -> 所有, 0 -> 说话-01, 3 -> 都),Map(星 -> 星星, 这 -> 这些, 所 -> 所有, 不 -> 不, 会 -> 会-03, 说 -> 说话-01, 都 -> 都))),[Ljava.lang.String;@150fc7a7,Annotation([Ljava.lang.String;@55d8c2c4,[Ljava.lang.String;@798cf6d2,[Ljava.lang.String;@1c1fa494),Annotation([Ljava.lang.String;@77c66a4f,[Ljava.lang.String;@649b5891,[Ledu.cmu.lti.nlp.amr.Dependency;@7a3f08b6),Annotation([Ljava.lang.String;@1be52861,[Ljava.lang.String;@5fb5ad40,[Ljava.lang.String;@615439f7),Annotation([Ljava.lang.String;@632cf7d3,[Ljava.lang.String;@51b87df7,[Ledu.cmu.lti.nlp.amr.Entity;@2315052d))
AMR:
(会 / 会-03, compared-to, 说 / 说话-01)
(会 / 会-03, manner, 不 / 不)
(会 / 会-03, manner, 都 / 都)
(会 / 会-03, op, 星 / 星星)
(星 / 星星, mod, 所 / 所有)
(星 / 星星, mod, 这 / 这些)

Decoded in 19,445 microseconds
Sentence: 你 呢 ， 你 的 那些 星星 将 是 任何 人 都 不 曾 有 过 的 … ”

Spans:
Span 12-13:  不 => 不
Span 10-11:  人 => 人
Span 9-10:  任何 => 任何
Span 3-4:  你 => 你
Span 0-1:  你 => 你
Span 7-8:  将 => 将-01
Span 6-7:  星星 => 星星
Span 8-9:  是 => 是-04
Span 13-14:  曾 => 曾
Span 14-15:  有 => 有-06
Span 15-16:  过 => 过-01
Span 5-6:  那些 => 那些
Span 11-12:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  人 => 人
Oracle Span 9-10:  任何 => 任何
Oracle Span 0-1:  你 => 你
Oracle Span 6-7:  星星 => 星星
Oracle Span 14-15:  有 => 有-01
Oracle Span 5-6:  那些 => 那些

Extra span: 过 => 过-01
Incorrect span: 有 => 有-06
Extra span: 曾 => 曾
Extra span: 不 => 不
Extra span: 都 => 都
Extra span: 是 => 是-04
Extra span: 将 => 将-01
Extra span: 你 => 你
Missing span: 有 => 有-01
Dependencies:
1	你	_	PN	PN	_	2	nsubj	_	_
2	呢	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	你	_	PN	PN	_	7	assmod	_	_
5	的	_	DEG	DEG	_	4	assm	_	_
6	那些	_	DT	DT	_	7	det	_	_
7	星星	_	NN	NN	_	9	nsubj	_	_
8	将	_	AD	AD	_	9	advmod	_	_
9	是	_	VC	VC	_	2	ccomp	_	_
10	任何	_	DT	DT	_	11	det	_	_
11	人	_	NN	NN	_	15	nsubj	_	_
12	都	_	AD	AD	_	15	advmod	_	_
13	不	_	AD	AD	_	15	neg	_	_
14	曾	_	AD	AD	_	15	advmod	_	_
15	有	_	VE	VE	_	18	rcmod	_	_
16	过	_	AS	AS	_	15	asp	_	_
17	的	_	DEC	DEC	_	15	cpm	_	_
18	…	_	NN	NN	_	9	attr	_	_
19	”	_	PU	PU	_	2	punct	_	_

Oracle:
(x21 / 有-01, arg0, x23 / 人)
(x21 / 有-01, arg1, x25 / 星星)
(x23 / 人, mod, x24 / 任何)
(x25 / 星星, mod, x26 / 那些)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),过,过-01,false), Span(14,15,List(1),有,有-06,false), Span(13,14,List(2),曾,曾,false), Span(12,13,List(3),不,不,false), Span(11,12,List(4),都,都,false), Span(10,11,List(5),人,人,false), Span(9,10,List(6),任何,任何,false), Span(8,9,List(7),是,是-04,false), Span(7,8,List(8),将,将-01,false), Span(6,7,List(9),星星,星星,false), Span(5,6,List(10),那些,那些,false), Span(3,4,List(11),你,你,false), Span(0,1,List(12),你,你,false)),Map(2 -> 曾, 5 -> 人, 12 -> 你, 8 -> 将-01, 7 -> 是-04, 1 -> 有-06, 4 -> 都, 11 -> 你, 6 -> 任何, 0 -> 过-01, 9 -> 星星, 3 -> 不, 10 -> 那些),Map(任 -> 任何, 星 -> 星星, 过 -> 过-01, 你 -> 你, 曾 -> 曾, 将 -> 将-01, 不 -> 不, 你2 -> 你, 都 -> 都, 那 -> 那些, 人 -> 人, 是 -> 是-04, 有 -> 有-06))),[Ljava.lang.String;@634e1b39,Annotation([Ljava.lang.String;@67d8faec,[Ljava.lang.String;@751d7425,[Ljava.lang.String;@7eaa2bc6),Annotation([Ljava.lang.String;@6dae70f9,[Ljava.lang.String;@4d81e83a,[Ledu.cmu.lti.nlp.amr.Dependency;@53a301f3),Annotation([Ljava.lang.String;@7cf8f45a,[Ljava.lang.String;@62cf6a84,[Ljava.lang.String;@204d9edf),Annotation([Ljava.lang.String;@6b2aafbc,[Ljava.lang.String;@50cbcca7,[Ledu.cmu.lti.nlp.amr.Entity;@49491770))
AMR:
(不 / 不, manner, 都 / 都)
(人 / 人, location, 不 / 不)
(人 / 人, mod, 任 / 任何)
(任 / 任何, manner, 是 / 是-04)
(星 / 星星, accompanier, 将 / 将-01)
(星 / 星星, mod, 那 / 那些)
(是 / 是-04, domain, 你2 / 你)
(是 / 是-04, time, 将 / 将-01)
(有 / 有-06, manner, 不 / 不)
(有 / 有-06, time, 曾 / 曾)
(过 / 过-01, manner, 有 / 有-06)
(那 / 那些, mod, 你 / 你)

Decoded in 44,639 microseconds
Sentence: “ 你 说 的 是 什么 ？ ”

Spans:
Span 5-6:  什么 => 什么
Span 1-2:  你 => 你
Span 4-5:  是 => 是-04
Span 2-3:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 2-3:  说 => 说-01

Extra span: 什么 => 什么
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	说	_	VV	VV	_	5	top	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	是	_	VC	VC	_	0	root	_	_
6	什么	_	PN	PN	_	5	attr	_	_
7	？	_	PU	PU	_	5	punct	_	_
8	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x10 / 说-01, arg0, x11 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),什么,什么,false), Span(4,5,List(1),是,是-04,false), Span(2,3,List(2),说,说-02,false), Span(1,2,List(3),你,你,false)),Map(2 -> 说-02, 1 -> 是-04, 0 -> 什么, 3 -> 你),Map(你 -> 你, 说 -> 说-02, 什 -> 什么, 是 -> 是-04))),[Ljava.lang.String;@5bec3e0,Annotation([Ljava.lang.String;@3b57dba4,[Ljava.lang.String;@35f7969d,[Ljava.lang.String;@3404e5c4),Annotation([Ljava.lang.String;@47569167,[Ljava.lang.String;@42d9e8d2,[Ledu.cmu.lti.nlp.amr.Dependency;@4b93dd6a),Annotation([Ljava.lang.String;@582a3b19,[Ljava.lang.String;@2b0454d2,[Ljava.lang.String;@2616b618),Annotation([Ljava.lang.String;@73bb573d,[Ljava.lang.String;@7ac058a0,[Ledu.cmu.lti.nlp.amr.Entity;@736b21ee))
AMR:
(什 / 什么, mod, 是 / 是-04)
(说 / 说-02, direction, 你 / 你)
(说 / 说-02, purpose, 是 / 是-04)

Decoded in 7,884 microseconds
Sentence: “ 夜晚 ， 当 你 望 着 天空 的 时候 ， 既然 我 就 住在 其中 一 颗 星星 上 ，

Spans:
Span 4-5:  你 => 你
Span 1-2:  夜晚 => 夜晚
Span 7-8:  天空 => 天空
Span 13-14:  就 => 就-01
Span 3-4:  当 => 当-04
Span 12-13:  我 => 我
Span 9-10:  时候 => 时候
Span 18-19:  星星 => 星星
Span 5-6:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  夜晚 => 夜晚
Oracle Span 7-8:  天空 => 天空
Oracle Span 12-13:  我 => 我
Oracle Span 18-19:  星星 => 星星
Oracle Span 5-6:  望 => 望-01

Extra span: 就 => 就-01
Extra span: 时候 => 时候
Extra span: 当 => 当-04
Dependencies:
1	“	_	PU	PU	_	2	punct	_	_
2	夜晚	_	VV	VV	_	0	root	_	_
3	,	_	PU	PU	_	2	punct	_	_
4	当	_	P	P	_	15	prep	_	_
5	你	_	PN	PN	_	6	nsubj	_	_
6	望	_	VV	VV	_	10	rcmod	_	_
7	着	_	AS	AS	_	6	asp	_	_
8	天空	_	NN	NN	_	6	dobj	_	_
9	的	_	DEC	DEC	_	6	cpm	_	_
10	时候	_	NN	NN	_	4	pobj	_	_
11	,	_	PU	PU	_	15	punct	_	_
12	既然	_	CS	CS	_	15	advmod	_	_
13	我	_	PN	PN	_	15	prep	_	_
14	就	_	AD	AD	_	15	advmod	_	_
15	住在	_	VV	VV	_	2	ccomp	_	_
16	其中	_	NN	NN	_	19	nn	_	_
17	一	_	CD	CD	_	18	nummod	_	_
18	颗	_	M	M	_	19	clf	_	_
19	星星	_	NN	NN	_	20	lobj	_	_
20	上	_	LC	LC	_	15	loc	_	_
21	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x38 / 望-01, arg0, x39 / 你)
(x38 / 望-01, arg1, x40 / 天空)
(x38 / 望-01, time, x41 / 夜晚)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),星星,星星,false), Span(13,14,List(1),就,就-01,false), Span(12,13,List(2),我,我,false), Span(9,10,List(3),时候,时候,false), Span(7,8,List(4),天空,天空,false), Span(5,6,List(5),望,望-01,false), Span(4,5,List(6),你,你,false), Span(3,4,List(7),当,当-04,false), Span(1,2,List(8),夜晚,夜晚,false)),Map(2 -> 我, 5 -> 望-01, 8 -> 夜晚, 7 -> 当-04, 1 -> 就-01, 4 -> 天空, 6 -> 你, 0 -> 星星, 3 -> 时候),Map(夜 -> 夜晚, 就 -> 就-01, 星 -> 星星, 我 -> 我, 你 -> 你, 天 -> 天空, 时 -> 时候, 当 -> 当-04, 望 -> 望-01))),[Ljava.lang.String;@60deefed,Annotation([Ljava.lang.String;@49754e74,[Ljava.lang.String;@31881aa2,[Ljava.lang.String;@1b46392c),Annotation([Ljava.lang.String;@cf01c2e,[Ljava.lang.String;@6f15f52a,[Ledu.cmu.lti.nlp.amr.Dependency;@1eb9bf60),Annotation([Ljava.lang.String;@341c6ac2,[Ljava.lang.String;@38811103,[Ljava.lang.String;@787d1f9c),Annotation([Ljava.lang.String;@2becfd4c,[Ljava.lang.String;@7c71c889,[Ledu.cmu.lti.nlp.amr.Entity;@4cc8d70d))
AMR:
(就 / 就-01, beneficiary, 我 / 我)
(就 / 就-01, time, 时 / 时候)
(星 / 星星, mod, 就 / 就-01)
(望 / 望-01, location, 天 / 天空)
(望 / 望-01, manner, 你 / 你)
(望 / 望-01, manner, 当 / 当-04)
(望 / 望-01, time, 夜 / 夜晚)
(望 / 望-01, time, 时 / 时候)

Decoded in 27,619 microseconds
Sentence: 既然 我 在 其中 一 颗 星星 上 笑 着 ，

Spans:
Span 2-3:  在 => 在-01
Span 1-2:  我 => 我
Span 6-7:  星星 => 星星
Span 8-9:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 6-7:  星星 => 星星
Oracle Span 8-9:  笑 => 笑-01

Extra span: 在 => 在-01
Dependencies:
1	既然	_	CS	CS	_	9	advmod	_	_
2	我	_	PN	PN	_	9	nsubj	_	_
3	在	_	P	P	_	9	prep	_	_
4	其中	_	NN	NN	_	7	nn	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	颗	_	M	M	_	7	clf	_	_
7	星星	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	3	plmod	_	_
9	笑	_	VV	VV	_	0	root	_	_
10	着	_	AS	AS	_	9	asp	_	_
11	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x8 / 笑-01, arg0, x10 / 我)
(x8 / 笑-01, location, x11 / 星星)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),笑,笑-01,false), Span(6,7,List(1),星星,星星,false), Span(2,3,List(2),在,在-01,false), Span(1,2,List(3),我,我,false)),Map(2 -> 在-01, 1 -> 星星, 0 -> 笑-01, 3 -> 我),Map(在 -> 在-01, 星 -> 星星, 我 -> 我, 笑 -> 笑-01))),[Ljava.lang.String;@5c59a0f7,Annotation([Ljava.lang.String;@101330ad,[Ljava.lang.String;@625487a6,[Ljava.lang.String;@682e445e),Annotation([Ljava.lang.String;@79e10fb4,[Ljava.lang.String;@70fede7d,[Ledu.cmu.lti.nlp.amr.Dependency;@36510e73),Annotation([Ljava.lang.String;@2c47a053,[Ljava.lang.String;@5d2a86c0,[Ljava.lang.String;@5ba1b62e),Annotation([Ljava.lang.String;@65bd19bf,[Ljava.lang.String;@74697863,[Ledu.cmu.lti.nlp.amr.Entity;@7d7ceca8))
AMR:
(在 / 在-01, ARG5, 我 / 我)
(星 / 星星, manner, 在 / 在-01)
(笑 / 笑-01, location, 星 / 星星)

Decoded in 8,901 microseconds
Sentence: 那么 对 你 来说 ， 就 好象 所有 的 星星 都 在 笑 ， 那么 你 将 看到 的 星星 就 是 会 笑 的 星星 ！ ”

Spans:
Span 22-23:  会 => 会-03
Span 15-16:  你 => 你
Span 2-3:  你 => 你
Span 11-12:  在 => 在-01
Span 1-2:  对 => 对-02
Span 16-17:  将 => 将-01
Span 20-21:  就 => 就-01
Span 5-6:  就 => 就-01
Span 7-8:  所有 => 所有
Span 25-26:  星星 => 星星
Span 19-20:  星星 => 星星
Span 9-10:  星星 => 星星
Span 21-22:  是 => 是-04
Span 3-4:  来说 => 来说-01
Span 17-18:  看到 => (thing :arg1-of 看到-01)
Span 23-24:  笑 => 笑-01
Span 12-13:  笑 => 笑-01
Span 14-15:  那么 => 那么
Span 0-1:  那么 => 那么
Span 10-11:  都 => 都

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 这时 ， 他 又 笑 了 。

Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(3,4,List(1),又,又,false), Span(2,3,List(2),他,他,false), Span(0,1,List(3),这时,这时,false)),Map(2 -> 他, 1 -> 又, 0 -> 笑-01, 3 -> 这时),Map(又 -> 又, 这 -> 这时, 笑 -> 笑-01, 他 -> 他))),[Ljava.lang.String;@26c7b1c6,Annotation([Ljava.lang.String;@19526f1d,[Ljava.lang.String;@3d1c933,[Ljava.lang.String;@79be91eb),Annotation([Ljava.lang.String;@626c569b,[Ljava.lang.String;@684ce74c,[Ledu.cmu.lti.nlp.amr.Dependency;@65593327),Annotation([Ljava.lang.String;@68e5c7ae,[Ljava.lang.String;@68bd8ca7,[Ljava.lang.String;@6744707b),Annotation([Ljava.lang.String;@4b28a7bf,[Ljava.lang.String;@d36c1c3,[Ledu.cmu.lti.nlp.amr.Entity;@96abc76))
AMR:
(笑 / 笑-01, ARG6, 他 / 他)
(笑 / 笑-01, manner, 又 / 又)
(笑 / 笑-01, time, 这 / 这时)

Decoded in 7,588 microseconds
Sentence: “ 那么 ， 在 你 得到 了 安慰 之后 （ 人们 总是 会 自我 安慰 的 ） 你 就 会 因为 认识 了 我 而 感到 高兴 。

Spans:
Span 8-9:  之后 => 之后-01
Span 10-11:  人们 => 人们
Span 19-20:  会 => 会-03
Span 12-13:  会 => 会-03
Span 17-18:  你 => 你
Span 4-5:  你 => 你
Span 3-4:  在 => 在-01
Span 14-15:  安慰 => 安慰
Span 7-8:  安慰 => 安慰
Span 18-19:  就 => 就-01
Span 5-6:  得到 => 得到-01
Span 11-12:  总是 => 总是
Span 25-26:  感到 => 感到-01
Span 23-24:  我 => 我
Span 21-22:  认识 => 认识-01
Span 1-2:  那么 => 那么
Span 26-27:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 10-11:  人们 => 人们
Oracle Span 12-13:  会 => 会-02
Oracle Span 19-20:  会 => 会-02
Oracle Span 4-5:  你 => 你
Oracle Span 7-8:  安慰 => 安慰-01
Oracle Span 14-15:  安慰 => 安慰-01
Oracle Span 18-19:  就 => 就
Oracle Span 5-6:  得到 => 得到-01
Oracle Span 11-12:  总是 => 总是
Oracle Span 25-26:  感到 => 感到-01
Oracle Span 23-24:  我 => 我
Oracle Span 21-22:  认识 => 认识-01
Oracle Span 26-27:  高兴 => 高兴-01

Incorrect span: 高兴 => 高兴
Incorrect span: 会 => 会-03
Incorrect span: 就 => 就-01
Extra span: 你 => 你
Incorrect span: 安慰 => 安慰
Incorrect span: 会 => 会-03
Extra span: 之后 => 之后-01
Incorrect span: 安慰 => 安慰
Extra span: 在 => 在-01
Extra span: 那么 => 那么
Missing span: 会 => 会-02
Missing span: 安慰 => 安慰-01
Missing span: 安慰 => 安慰-01
Missing span: 会 => 会-02
Missing span: 就 => 就
Missing span: 高兴 => 高兴-01
Dependencies:
1	“	_	PU	PU	_	26	punct	_	_
2	那么	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	在	_	P	P	_	6	prep	_	_
5	你	_	PN	PN	_	4	pobj	_	_
6	得到	_	VV	VV	_	26	dep	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	安慰	_	NN	NN	_	9	lobj	_	_
9	之后	_	LC	LC	_	6	loc	_	_
10	（	_	PU	PU	_	13	punct	_	_
11	人们	_	NN	NN	_	13	nsubj	_	_
12	总是	_	AD	AD	_	13	advmod	_	_
13	会	_	VV	VV	_	6	dep	_	_
14	自我	_	AD	AD	_	15	advmod	_	_
15	安慰	_	VV	VV	_	13	dobj	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	）	_	PU	PU	_	13	punct	_	_
18	你	_	PN	PN	_	26	nsubj	_	_
19	就	_	P	P	_	26	prep	_	_
20	会	_	VV	VV	_	19	pccomp	_	_
21	因为	_	P	P	_	26	prep	_	_
22	认识	_	VV	VV	_	21	pccomp	_	_
23	了	_	AS	AS	_	22	asp	_	_
24	我	_	PN	PN	_	22	dobj	_	_
25	而	_	MSP	MSP	_	26	prtmod	_	_
26	感到	_	VV	VV	_	0	root	_	_
27	高兴	_	VA	VA	_	26	ccomp	_	_
28	。	_	PU	PU	_	26	punct	_	_

Oracle:
(x40 / 得到-01, arg0, x41 / 你)
(x40 / 得到-01, arg1, x42 / 安慰-01)
(x44 / 会-02, arg0, x46 / 安慰-01)
(x44 / 会-02, manner, x45 / 总是)
(x46 / 安慰-01, arg0, x47 / 人们)
(x49 / 会-02, arg0, x50 / 感到-01)
(x49 / 会-02, manner, x51 / 就)
(x50 / 感到-01, arg1, x53 / 高兴-01)
(x50 / 感到-01, cause, x54 / 认识-01)
(x54 / 认识-01, arg1, x56 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(26,27,List(0),高兴,高兴,false), Span(25,26,List(1),感到,感到-01,false), Span(23,24,List(2),我,我,false), Span(21,22,List(3),认识,认识-01,false), Span(19,20,List(4),会,会-03,false), Span(18,19,List(5),就,就-01,false), Span(17,18,List(6),你,你,false), Span(14,15,List(7),安慰,安慰,false), Span(12,13,List(8),会,会-03,false), Span(11,12,List(9),总是,总是,false), Span(10,11,List(10),人们,人们,false), Span(8,9,List(11),之后,之后-01,false), Span(7,8,List(12),安慰,安慰,false), Span(5,6,List(13),得到,得到-01,false), Span(4,5,List(14),你,你,false), Span(3,4,List(15),在,在-01,false), Span(1,2,List(16),那么,那么,false)),Map(2 -> 我, 5 -> 就-01, 12 -> 安慰, 15 -> 在-01, 8 -> 会-03, 7 -> 安慰, 1 -> 感到-01, 4 -> 会-03, 11 -> 之后-01, 14 -> 你, 6 -> 你, 0 -> 高兴, 9 -> 总是, 16 -> 那么, 3 -> 认识-01, 10 -> 人们, 13 -> 得到-01),Map(高 -> 高兴, 就 -> 就-01, 安2 -> 安慰, 在 -> 在-01, 感 -> 感到-01, 我 -> 我, 得 -> 得到-01, 会2 -> 会-03, 你 -> 你, 安 -> 安慰, 总 -> 总是, 认 -> 认识-01, 会 -> 会-03, 你2 -> 你, 那 -> 那么, 人 -> 人们, 之 -> 之后-01))),[Ljava.lang.String;@4d69d288,Annotation([Ljava.lang.String;@437281c5,[Ljava.lang.String;@787178b1,[Ljava.lang.String;@24a4e2c5),Annotation([Ljava.lang.String;@27da994b,[Ljava.lang.String;@70f148dc,[Ledu.cmu.lti.nlp.amr.Dependency;@3360283),Annotation([Ljava.lang.String;@77aea,[Ljava.lang.String;@73e4bb60,[Ljava.lang.String;@9a9aa68),Annotation([Ljava.lang.String;@3a3883c4,[Ljava.lang.String;@1537e43,[Ledu.cmu.lti.nlp.amr.Entity;@573aeab2))
AMR:
(之 / 之后-01, degree, 安2 / 安慰)
(会 / 会-03, degree, 安 / 安慰)
(会 / 会-03, manner, 就 / 就-01)
(会 / 会-03, prep-through, 认 / 认识-01)
(会2 / 会-03, degree, 之 / 之后-01)
(会2 / 会-03, degree, 人 / 人们)
(会2 / 会-03, location, 安 / 安慰)
(会2 / 会-03, manner, 总 / 总是)
(在 / 在-01, degree, 那 / 那么)
(就 / 就-01, degree, 你 / 你)
(得 / 得到-01, direction, 你2 / 你)
(得 / 得到-01, manner, 在 / 在-01)
(得 / 得到-01, purpose, 之 / 之后-01)
(感 / 感到-01, extent, 我 / 我)
(感 / 感到-01, location, 高 / 高兴)
(感 / 感到-01, time, 认 / 认识-01)

Decoded in 92,223 microseconds
Sentence: 你 将 永远 是 我 的 朋友 。

Spans:
Span 0-1:  你 => 你
Span 1-2:  将 => 将-01
Span 4-5:  我 => 我
Span 3-4:  是 => 是-04
Span 6-7:  朋友 => 朋友
Span 2-3:  永远 => 永远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  将 => 将
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  朋友 => 朋友
Oracle Span 2-3:  永远 => 永远

Extra span: 是 => 是-04
Incorrect span: 将 => 将-01
Missing span: 将 => 将
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	将	_	AD	AD	_	4	advmod	_	_
3	永远	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	朋友	_	NN	NN	_	4	attr	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 朋友, domain, x6 / 你)
(x0 / 朋友, poss, x5 / 我)
(x0 / 朋友, time, x7 / 永远)
(x0 / 朋友, time, x8 / 将)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),朋友,朋友,false), Span(4,5,List(1),我,我,false), Span(3,4,List(2),是,是-04,false), Span(2,3,List(3),永远,永远,false), Span(1,2,List(4),将,将-01,false), Span(0,1,List(5),你,你,false)),Map(2 -> 是-04, 5 -> 你, 1 -> 我, 4 -> 将-01, 0 -> 朋友, 3 -> 永远),Map(永 -> 永远, 我 -> 我, 朋 -> 朋友, 你 -> 你, 将 -> 将-01, 是 -> 是-04))),[Ljava.lang.String;@1304e0d7,Annotation([Ljava.lang.String;@6ddc67d0,[Ljava.lang.String;@7767bd4e,[Ljava.lang.String;@7708b66a),Annotation([Ljava.lang.String;@433ef204,[Ljava.lang.String;@4dd2ef54,[Ledu.cmu.lti.nlp.amr.Dependency;@795b66d),Annotation([Ljava.lang.String;@359ceb13,[Ljava.lang.String;@1068176,[Ljava.lang.String;@5bf4764d),Annotation([Ljava.lang.String;@71789580,[Ljava.lang.String;@23ee2ccf,[Ledu.cmu.lti.nlp.amr.Entity;@165614f5))
AMR:
(是 / 是-04, ARG1, 我 / 我)
(是 / 是-04, manner, 永 / 永远)
(朋 / 朋友, domain, 你 / 你)
(朋 / 朋友, time, 将 / 将-01)
(朋 / 朋友, time, 永 / 永远)

Decoded in 11,096 microseconds
Sentence: 你 就 会 想要 同 我 一起 笑 。

Spans:
Span 6-7:  一起 => 一起
Span 2-3:  会 => 会-03
Span 0-1:  你 => 你
Span 4-5:  同 => 同-01
Span 1-2:  就 => 就-01
Span 3-4:  想要 => 想要-02
Span 5-6:  我 => 我
Span 7-8:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  一起 => 一起
Oracle Span 2-3:  会 => 会-02
Oracle Span 0-1:  你 => 你
Oracle Span 4-5:  同 => 同-01
Oracle Span 3-4:  想要 => 想要-01
Oracle Span 5-6:  我 => 我
Oracle Span 7-8:  笑 => 笑-01

Incorrect span: 想要 => 想要-02
Incorrect span: 会 => 会-03
Extra span: 就 => 就-01
Missing span: 会 => 会-02
Missing span: 想要 => 想要-01
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	会	_	VV	VV	_	4	mmod	_	_
4	想要	_	VV	VV	_	0	root	_	_
5	同	_	P	P	_	8	prep	_	_
6	我	_	PN	PN	_	5	pobj	_	_
7	一起	_	AD	AD	_	8	advmod	_	_
8	笑	_	VV	VV	_	4	ccomp	_	_
9	。	_	PU	PU	_	4	punct	_	_
10	你	_	PN	PN	_	8	xsubj	_	_

Oracle:
(x0 / 会-02, arg0, x2 / 你)
(x0 / 会-02, arg1, x3 / 想要-01)
(x10 / 笑-01, manner, x11 / 同-01)
(x10 / 笑-01, manner, x13 / 一起)
(x11 / 同-01, arg0, x12 / 我)
(x3 / 想要-01, arg1, x10 / 笑-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),笑,笑-01,false), Span(6,7,List(1),一起,一起,false), Span(5,6,List(2),我,我,false), Span(4,5,List(3),同,同-01,false), Span(3,4,List(4),想要,想要-02,false), Span(2,3,List(5),会,会-03,false), Span(1,2,List(6),就,就-01,false), Span(0,1,List(7),你,你,false)),Map(2 -> 我, 5 -> 会-03, 7 -> 你, 1 -> 一起, 4 -> 想要-02, 6 -> 就-01, 0 -> 笑-01, 3 -> 同-01),Map(就 -> 就-01, 我 -> 我, 笑 -> 笑-01, 你 -> 你, 同 -> 同-01, 会 -> 会-03, 想 -> 想要-02, 一 -> 一起))),[Ljava.lang.String;@6e685e6c,Annotation([Ljava.lang.String;@5b0902b4,[Ljava.lang.String;@9d3d54e,[Ljava.lang.String;@2f04993d),Annotation([Ljava.lang.String;@333398f,[Ljava.lang.String;@103c97ff,[Ledu.cmu.lti.nlp.amr.Dependency;@7d25913),Annotation([Ljava.lang.String;@c14e5a5,[Ljava.lang.String;@16f15ae9,[Ljava.lang.String;@6206b4a7),Annotation([Ljava.lang.String;@77896335,[Ljava.lang.String;@5c1b89ac,[Ledu.cmu.lti.nlp.amr.Entity;@40a1b6d4))
AMR:
(会 / 会-03, manner, 就 / 就-01)
(同 / 同-01, condition, 我 / 我)
(同 / 同-01, manner, 想 / 想要-02)
(就 / 就-01, quant, 你 / 你)
(想 / 想要-02, manner, 会 / 会-03)
(笑 / 笑-01, manner, 一 / 一起)
(笑 / 笑-01, manner, 同 / 同-01)

Decoded in 17,052 microseconds
Sentence: 有时 ， 你 会 为了 快乐 而 不知不觉 地 打开 窗户 。 你 的 朋友们 会 奇怪 地 看 着 你 笑 着 仰望 天空 。

Spans:
Span 7-8:  不知不觉 => 不知不觉
Span 4-5:  为了 => 为了-01
Span 23-24:  仰望 => 仰望-01
Span 15-16:  会 => 会-03
Span 3-4:  会 => 会-03
Span 20-21:  你 => 你
Span 12-13:  你 => 你
Span 2-3:  你 => 你
Span 17-18:  地 => 地
Span 8-9:  地 => 地
Span 24-25:  天空 => 天空
Span 16-17:  奇怪 => 奇怪-02
Span 5-6:  快乐 => 快乐
Span 9-10:  打开 => 打开-01
Span 0-1:  有时 => 有时
Span 14-15:  朋友们 => 朋友们
Span 18-19:  看 => 看-10
Span 10-11:  窗户 => 窗户
Span 21-22:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  不知不觉 => 不知不觉
Oracle Span 23-24:  仰望 => 仰望-01
Oracle Span 3-4:  会 => 会-02
Oracle Span 15-16:  会 => 会-02
Oracle Span 2-3:  你 => 你
Oracle Span 24-25:  天空 => 天空
Oracle Span 16-17:  奇怪 => 奇怪-02
Oracle Span 5-6:  快乐 => 快乐
Oracle Span 9-10:  打开 => 打开-01
Oracle Span 0-1:  有时 => 有时
Oracle Span 14-15:  朋友们 => 朋友们
Oracle Span 18-19:  看 => 看-02
Oracle Span 10-11:  窗户 => 窗户
Oracle Span 21-22:  笑 => 笑-01

Extra span: 你 => 你
Incorrect span: 看 => 看-10
Extra span: 地 => 地
Incorrect span: 会 => 会-03
Extra span: 你 => 你
Extra span: 地 => 地
Extra span: 为了 => 为了-01
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 会 => 会-02
Missing span: 看 => 看-02
Dependencies:
1	有时	_	AD	AD	_	19	advmod	_	_
2	,	_	PU	PU	_	19	punct	_	_
3	你	_	PN	PN	_	4	nsubj	_	_
4	会	_	VV	VV	_	19	dep	_	_
5	为了	_	P	P	_	4	prep	_	_
6	快乐	_	VA	VA	_	10	dvpmod	_	_
7	而	_	CC	CC	_	6	cc	_	_
8	不知不觉	_	VA	VA	_	6	dep	_	_
9	地	_	DEV	DEV	_	6	dvpm	_	_
10	打开	_	VV	VV	_	5	pccomp	_	_
11	窗户	_	NN	NN	_	10	dobj	_	_
12	。	_	PU	PU	_	4	punct	_	_
13	你	_	PN	PN	_	15	assmod	_	_
14	的	_	DEG	DEG	_	13	assm	_	_
15	朋友们	_	NN	NN	_	19	nsubj	_	_
16	会	_	VV	VV	_	19	mmod	_	_
17	奇怪	_	VA	VA	_	19	dvpmod	_	_
18	地	_	DEV	DEV	_	17	dvpm	_	_
19	看	_	VV	VV	_	0	root	_	_
20	着	_	AS	AS	_	19	asp	_	_
21	你	_	PN	PN	_	19	dobj	_	_
22	笑	_	VV	VV	_	19	dep	_	_
23	着	_	AS	AS	_	22	asp	_	_
24	仰望	_	VV	VV	_	22	dep	_	_
25	天空	_	NN	NN	_	24	dobj	_	_
26	。	_	PU	PU	_	19	punct	_	_

Oracle:
(x25 / 会-02, arg0, x28 / 打开-01)
(x25 / 会-02, time, x34 / 有时)
(x28 / 打开-01, arg0, x29 / 你)
(x28 / 打开-01, arg1, x30 / 窗户)
(x28 / 打开-01, manner, x31 / 不知不觉)
(x28 / 打开-01, purpose, x32 / 快乐)
(x35 / 会-02, arg0, x36 / 看-02)
(x36 / 看-02, arg0, x37 / 朋友们)
(x36 / 看-02, arg1, x40 / 仰望-01)
(x36 / 看-02, manner, x39 / 奇怪-02)
(x40 / 仰望-01, arg1, x43 / 天空)
(x40 / 仰望-01, manner, x44 / 笑-01)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),天空,天空,false), Span(23,24,List(1),仰望,仰望-01,false), Span(21,22,List(2),笑,笑-01,false), Span(20,21,List(3),你,你,false), Span(18,19,List(4),看,看-10,false), Span(17,18,List(5),地,地,false), Span(16,17,List(6),奇怪,奇怪-02,false), Span(15,16,List(7),会,会-03,false), Span(14,15,List(8),朋友们,朋友们,false), Span(12,13,List(9),你,你,false), Span(10,11,List(10),窗户,窗户,false), Span(9,10,List(11),打开,打开-01,false), Span(8,9,List(12),地,地,false), Span(7,8,List(13),不知不觉,不知不觉,false), Span(5,6,List(14),快乐,快乐,false), Span(4,5,List(15),为了,为了-01,false), Span(3,4,List(16),会,会-03,false), Span(2,3,List(17),你,你,false), Span(0,1,List(18),有时,有时,false)),Map(2 -> 笑-01, 5 -> 地, 12 -> 地, 15 -> 为了-01, 8 -> 朋友们, 18 -> 有时, 7 -> 会-03, 17 -> 你, 1 -> 仰望-01, 4 -> 看-10, 11 -> 打开-01, 14 -> 快乐, 6 -> 奇怪-02, 0 -> 天空, 9 -> 你, 16 -> 会-03, 3 -> 你, 10 -> 窗户, 13 -> 不知不觉),Map(地2 -> 地, 快 -> 快乐, 朋 -> 朋友们, 你3 -> 你, 笑 -> 笑-01, 打 -> 打开-01, 会2 -> 会-03, 你 -> 你, 地 -> 地, 为 -> 为了-01, 不 -> 不知不觉, 天 -> 天空, 会 -> 会-03, 奇 -> 奇怪-02, 仰 -> 仰望-01, 你2 -> 你, 看 -> 看-10, 窗 -> 窗户, 有 -> 有时))),[Ljava.lang.String;@175581eb,Annotation([Ljava.lang.String;@2b79c8ff,[Ljava.lang.String;@2baf72d5,[Ljava.lang.String;@66756662),Annotation([Ljava.lang.String;@5d14e99e,[Ljava.lang.String;@38cfecf3,[Ledu.cmu.lti.nlp.amr.Dependency;@682618e5),Annotation([Ljava.lang.String;@25ad25f5,[Ljava.lang.String;@5f0f70c7,[Ljava.lang.String;@1860a7a1),Annotation([Ljava.lang.String;@40d96578,[Ljava.lang.String;@c97721b,[Ledu.cmu.lti.nlp.amr.Entity;@283ab206))
AMR:
(不 / 不知不觉, ARG3, 地2 / 地)
(为 / 为了-01, ARG1, 快 / 快乐)
(为 / 为了-01, ARG5, 会2 / 会-03)
(为 / 为了-01, ARG6, 你3 / 你)
(为 / 为了-01, manner, 看 / 看-10)
(仰 / 仰望-01, manner, 笑 / 笑-01)
(仰 / 仰望-01, quant, 天 / 天空)
(会 / 会-03, prep-through, 看 / 看-10)
(会2 / 会-03, degree, 有 / 有时)
(打 / 打开-01, ARG1, 地2 / 地)
(打 / 打开-01, purpose, 快 / 快乐)
(打 / 打开-01, quant, 窗 / 窗户)
(朋 / 朋友们, poss, 你2 / 你)
(看 / 看-10, ARG1, 地 / 地)
(看 / 看-10, ARG2, 仰 / 仰望-01)
(看 / 看-10, beneficiary, 朋 / 朋友们)
(看 / 看-10, manner, 奇 / 奇怪-02)
(笑 / 笑-01, beneficiary, 你 / 你)

Decoded in 107,955 microseconds
Sentence: 那时 ， 你 就 可以 对 他们 说 ： ‘ 是 的 ， 星星 总是 引 我 欢笑 ！ ’ 他们 会 以为 你 发疯 了 。

Spans:
Span 20-21:  他们 => 他们
Span 6-7:  他们 => 他们
Span 22-23:  以为 => 以为-02
Span 21-22:  会 => 会-03
Span 23-24:  你 => 你
Span 2-3:  你 => 你
Span 24-25:  发疯 => 发疯-01
Span 4-5:  可以 => 可以-02
Span 5-6:  对 => 对-02
Span 3-4:  就 => 就-01
Span 15-16:  引 => 引-01
Span 14-15:  总是 => 总是
Span 16-17:  我 => 我
Span 13-14:  星星 => 星星
Span 10-11:  是 => 是-04
Span 17-18:  欢笑 => 欢笑-01
Span 7-8:  说 => 说-02
Span 0-1:  那时 => 那时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  他们 => 他们
Oracle Span 20-21:  他们 => 他们
Oracle Span 22-23:  以为 => 以为-02
Oracle Span 21-22:  会 => 会-02
Oracle Span 2-3:  你 => 你
Oracle Span 24-25:  发疯 => 发疯-01
Oracle Span 4-5:  可以 => 可以-03
Oracle Span 15-16:  引 => 引-01
Oracle Span 14-15:  总是 => 总是
Oracle Span 13-14:  星星 => 星星
Oracle Span 17-18:  欢笑 => 欢笑-01
Oracle Span 7-8:  说 => 说-01
Oracle Span 0-1:  那时 => 那时

Extra span: 你 => 你
Incorrect span: 会 => 会-03
Extra span: 我 => 我
Extra span: 是 => 是-04
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Incorrect span: 可以 => 可以-02
Extra span: 就 => 就-01
Missing span: 可以 => 可以-03
Missing span: 说 => 说-01
Missing span: 会 => 会-02
Dependencies:
1	那时	_	NT	NT	_	8	dep	_	_
2	,	_	PU	PU	_	8	punct	_	_
3	你	_	PN	PN	_	8	nsubj	_	_
4	就	_	AD	AD	_	8	advmod	_	_
5	可以	_	VV	VV	_	8	mmod	_	_
6	对	_	P	P	_	8	prep	_	_
7	他们	_	PN	PN	_	6	pobj	_	_
8	说	_	VV	VV	_	0	root	_	_
9	：	_	PU	PU	_	8	punct	_	_
10	‘	_	PU	PU	_	11	punct	_	_
11	是	_	VC	VC	_	8	ccomp	_	_
12	的	_	SP	SP	_	8	dep	_	_
13	,	_	PU	PU	_	8	punct	_	_
14	星星	_	NR	NR	_	16	nsubj	_	_
15	总是	_	AD	AD	_	16	advmod	_	_
16	引	_	VV	VV	_	8	conj	_	_
17	我	_	PN	PN	_	16	dobj	_	_
18	欢笑	_	VV	VV	_	16	dep	_	_
19	！	_	PU	PU	_	8	punct	_	_
20	’	_	PU	PU	_	8	punct	_	_
21	他们	_	PN	PN	_	23	nsubj	_	_
22	会	_	VV	VV	_	23	mmod	_	_
23	以为	_	VV	VV	_	8	conj	_	_
24	你	_	PN	PN	_	23	dobj	_	_
25	发疯	_	VV	VV	_	23	dep	_	_
26	了	_	AS	AS	_	25	asp	_	_
27	。	_	PU	PU	_	8	punct	_	_

Oracle:
(x27 / 可以-03, arg0, x50 / 你)
(x27 / 可以-03, arg1, x51 / 说-01)
(x27 / 可以-03, arg3, x61 / 他们)
(x27 / 可以-03, time, x48 / 那时)
(x42 / 会-02, arg0, x43 / 以为-02)
(x43 / 以为-02, arg0, x44 / 他们)
(x43 / 以为-02, arg2, x46 / 发疯-01)
(x56 / 引-01, arg0, x57 / 星星)
(x56 / 引-01, arg2, x59 / 欢笑-01)
(x56 / 引-01, manner, x60 / 总是)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),发疯,发疯-01,false), Span(23,24,List(1),你,你,false), Span(22,23,List(2),以为,以为-02,false), Span(21,22,List(3),会,会-03,false), Span(20,21,List(4),他们,他们,false), Span(17,18,List(5),欢笑,欢笑-01,false), Span(16,17,List(6),我,我,false), Span(15,16,List(7),引,引-01,false), Span(14,15,List(8),总是,总是,false), Span(13,14,List(9),星星,星星,false), Span(10,11,List(10),是,是-04,false), Span(7,8,List(11),说,说-02,false), Span(6,7,List(12),他们,他们,false), Span(5,6,List(13),对,对-02,false), Span(4,5,List(14),可以,可以-02,false), Span(3,4,List(15),就,就-01,false), Span(2,3,List(16),你,你,false), Span(0,1,List(17),那时,那时,false)),Map(2 -> 以为-02, 5 -> 欢笑-01, 12 -> 他们, 15 -> 就-01, 8 -> 总是, 7 -> 引-01, 17 -> 那时, 1 -> 你, 4 -> 他们, 11 -> 说-02, 14 -> 可以-02, 6 -> 我, 0 -> 发疯-01, 9 -> 星星, 16 -> 你, 3 -> 会-03, 10 -> 是-04, 13 -> 对-02),Map(就 -> 就-01, 发 -> 发疯-01, 他2 -> 他们, 欢 -> 欢笑-01, 星 -> 星星, 我 -> 我, 你 -> 你, 总 -> 总是, 以 -> 以为-02, 他 -> 他们, 会 -> 会-03, 说 -> 说-02, 你2 -> 你, 那 -> 那时, 引 -> 引-01, 对 -> 对-02, 是 -> 是-04, 可 -> 可以-02))),[Ljava.lang.String;@35fa450f,Annotation([Ljava.lang.String;@3e03046d,[Ljava.lang.String;@9b3be1c,[Ljava.lang.String;@74e497ae),Annotation([Ljava.lang.String;@13516600,[Ljava.lang.String;@35d7386b,[Ledu.cmu.lti.nlp.amr.Dependency;@21002393),Annotation([Ljava.lang.String;@718989fa,[Ljava.lang.String;@69f080ad,[Ljava.lang.String;@6568f998),Annotation([Ljava.lang.String;@45d4421d,[Ljava.lang.String;@782fd504,[Ledu.cmu.lti.nlp.amr.Entity;@1537c744))
AMR:
(以 / 以为-02, year, 你 / 你)
(以 / 以为-02, year, 发 / 发疯-01)
(会 / 会-03, prep-through, 欢 / 欢笑-01)
(会 / 会-03, year, 他 / 他们)
(会 / 会-03, year, 以 / 以为-02)
(可 / 可以-02, manner, 就 / 就-01)
(可 / 可以-02, prep-through, 你2 / 你)
(可 / 可以-02, time, 那 / 那时)
(对 / 对-02, prep-through, 可 / 可以-02)
(引 / 引-01, beneficiary, 我 / 我)
(引 / 引-01, manner, 总 / 总是)
(引 / 引-01, prep-through, 星 / 星星)
(引 / 引-01, year, 欢 / 欢笑-01)
(星 / 星星, mod, 是 / 是-04)
(说 / 说-02, year, 他2 / 他们)
(说 / 说-02, year, 可 / 可以-02)
(说 / 说-02, year, 是 / 是-04)

Decoded in 92,935 microseconds
Sentence: 我 的 恶作剧 将 使 你 难堪 … ”

Spans:
Span 5-6:  你 => 你
Span 4-5:  使 => 使-01
Span 3-4:  将 => 将-01
Span 2-3:  恶作剧 => 恶作剧-01
Span 0-1:  我 => 我
Span 6-7:  难堪 => 难堪-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 4-5:  使 => 使-01
Oracle Span 2-3:  恶作剧 => 恶作剧-01
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  难堪 => 难堪-01

Extra span: 将 => 将-01
Dependencies:
1	我	_	PN	PN	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	恶作剧	_	NN	NN	_	5	nsubj	_	_
4	将	_	AD	AD	_	5	advmod	_	_
5	使	_	VV	VV	_	0	root	_	_
6	你	_	PN	PN	_	8	nsubj	_	_
7	难堪	_	NR	NR	_	8	nsubj	_	_
8	…	_	VA	VA	_	5	ccomp	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x14 / 使-01, arg0, x15 / 恶作剧-01)
(x14 / 使-01, arg1, x17 / 你)
(x14 / 使-01, arg2, x18 / 难堪-01)
(x15 / 恶作剧-01, poss, x16 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),难堪,难堪-01,false), Span(5,6,List(1),你,你,false), Span(4,5,List(2),使,使-01,false), Span(3,4,List(3),将,将-01,false), Span(2,3,List(4),恶作剧,恶作剧-01,false), Span(0,1,List(5),我,我,false)),Map(2 -> 使-01, 5 -> 我, 1 -> 你, 4 -> 恶作剧-01, 0 -> 难堪-01, 3 -> 将-01),Map(我 -> 我, 难 -> 难堪-01, 你 -> 你, 将 -> 将-01, 恶 -> 恶作剧-01, 使 -> 使-01))),[Ljava.lang.String;@37314843,Annotation([Ljava.lang.String;@50122012,[Ljava.lang.String;@569348e1,[Ljava.lang.String;@7db5b890),Annotation([Ljava.lang.String;@407b8435,[Ljava.lang.String;@1282e98,[Ledu.cmu.lti.nlp.amr.Dependency;@4db0ba1c),Annotation([Ljava.lang.String;@1d91fa02,[Ljava.lang.String;@1578fa9,[Ljava.lang.String;@414b2df5),Annotation([Ljava.lang.String;@9e30f9a,[Ljava.lang.String;@1b30a54e,[Ledu.cmu.lti.nlp.amr.Entity;@26275b46))
AMR:
(使 / 使-01, prep-along-with, 你 / 你)
(使 / 使-01, prep-along-with, 难 / 难堪-01)
(使 / 使-01, time, 将 / 将-01)
(将 / 将-01, manner, 恶 / 恶作剧-01)
(恶 / 恶作剧-01, poss, 我 / 我)

Decoded in 10,719 microseconds
Sentence: 这时 ， 他 又 笑 了 。

Spans:
Span 2-3:  他 => 他
Span 3-4:  又 => 又
Span 4-5:  笑 => 笑-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  又 => 又
Oracle Span 4-5:  笑 => 笑-01
Oracle Span 0-1:  这时 => 这时

Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	又	_	AD	AD	_	5	advmod	_	_
5	笑	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x5 / 又)
(x0 / 笑-01, time, x4 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),笑,笑-01,false), Span(3,4,List(1),又,又,false), Span(2,3,List(2),他,他,false), Span(0,1,List(3),这时,这时,false)),Map(2 -> 他, 1 -> 又, 0 -> 笑-01, 3 -> 这时),Map(又 -> 又, 这 -> 这时, 笑 -> 笑-01, 他 -> 他))),[Ljava.lang.String;@3e9beef2,Annotation([Ljava.lang.String;@2f15a964,[Ljava.lang.String;@3111631d,[Ljava.lang.String;@2d70f312),Annotation([Ljava.lang.String;@4c7d7430,[Ljava.lang.String;@4ea1aa52,[Ledu.cmu.lti.nlp.amr.Dependency;@74123110),Annotation([Ljava.lang.String;@5ed0b4e3,[Ljava.lang.String;@79ab97fd,[Ljava.lang.String;@3a9b41a0),Annotation([Ljava.lang.String;@5fe46d52,[Ljava.lang.String;@448ade1,[Ledu.cmu.lti.nlp.amr.Entity;@21f9c6ea))
AMR:
(笑 / 笑-01, ARG6, 他 / 他)
(笑 / 笑-01, manner, 又 / 又)
(笑 / 笑-01, time, 这 / 这时)

Decoded in 9,175 microseconds
Sentence: “ 这 就 好象 我 并 没有 给 你 星星 ， 而 是 给 你 一 大 堆 会 笑 出 声 来 的 小 铃铛 … ”

Spans:
Span 18-19:  会 => 会-03
Span 14-15:  你 => 你
Span 8-9:  你 => 你
Span 20-21:  出 => 出-04
Span 17-18:  堆 => 堆
Span 16-17:  大 => 大
Span 24-25:  小 => 小
Span 2-3:  就 => 就-01
Span 5-6:  并 => 并
Span 4-5:  我 => 我
Span 9-10:  星星 => 星星
Span 12-13:  是 => 是-04
Span 22-23:  来 => 来-06
Span 19-20:  笑 => 笑-01
Span 13-14:  给 => 给-02
Span 7-8:  给 => 给-02
Span 1-2:  这 => 这
Span 25-26:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 18-19:  会 => 会-01
Oracle Span 8-9:  你 => 你
Oracle Span 17-18:  堆 => 堆
Oracle Span 16-17:  大 => 大
Oracle Span 24-25:  小 => 小-01
Oracle Span 2-3:  就 => 就
Oracle Span 4-5:  我 => 我
Oracle Span 9-10:  星星 => 星星
Oracle Span 19-20:  笑 => 笑-01
Oracle Span 7-8:  给 => 给-01
Oracle Span 13-14:  给 => 给-01
Oracle Span 1-2:  这 => 这
Oracle Span 25-26:  铃铛 => 铃铛

Incorrect span: 小 => 小
Extra span: 来 => 来-06
Extra span: 出 => 出-04
Incorrect span: 会 => 会-03
Extra span: 你 => 你
Incorrect span: 给 => 给-02
Extra span: 是 => 是-04
Incorrect span: 给 => 给-02
Extra span: 并 => 并
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Missing span: 给 => 给-01
Missing span: 给 => 给-01
Missing span: 会 => 会-01
Missing span: 小 => 小-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	就	_	AD	AD	_	4	advmod	_	_
4	好象	_	VV	VV	_	0	root	_	_
5	我	_	PN	PN	_	4	dobj	_	_
6	并	_	CC	CC	_	4	cc	_	_
7	没有	_	VE	VE	_	4	conj	_	_
8	给	_	P	P	_	10	prep	_	_
9	你	_	PN	PN	_	8	pobj	_	_
10	星星	_	NN	NN	_	7	dobj	_	_
11	,	_	PU	PU	_	4	punct	_	_
12	而	_	MSP	MSP	_	13	prtmod	_	_
13	是	_	VC	VC	_	4	conj	_	_
14	给	_	P	P	_	27	assmod	_	_
15	你	_	PN	PN	_	18	nn	_	_
16	一	_	CD	CD	_	18	nummod	_	_
17	大	_	JJ	JJ	_	18	amod	_	_
18	堆	_	NN	NN	_	21	nsubj	_	_
19	会	_	VV	VV	_	21	mmod	_	_
20	笑	_	VV	VV	_	21	mmod	_	_
21	出	_	VV	VV	_	23	lccomp	_	_
22	声	_	NN	NN	_	21	dobj	_	_
23	来	_	LC	LC	_	14	plmod	_	_
24	的	_	DEG	DEG	_	14	assm	_	_
25	小	_	JJ	JJ	_	27	amod	_	_
26	铃铛	_	NN	NN	_	27	nn	_	_
27	…	_	NN	NN	_	13	attr	_	_
28	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x65 / 给-01, arg0, x67 / 我)
(x65 / 给-01, arg1, x68 / 星星)
(x65 / 给-01, arg2, x69 / 你)
(x70 / 给-01, arg1, x71 / 铃铛)
(x71 / 铃铛, mod, x72 / 小-01)
(x71 / 铃铛, unit, x82 / 堆)
(x73 / 笑-01, arg0, x71 / 铃铛)
(x76 / 会-01, arg0, x73 / 笑-01)
(x82 / 堆, mod, x83 / 大)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),铃铛,铃铛,false), Span(24,25,List(1),小,小,false), Span(22,23,List(2),来,来-06,false), Span(20,21,List(3),出,出-04,false), Span(19,20,List(4),笑,笑-01,false), Span(18,19,List(5),会,会-03,false), Span(17,18,List(6),堆,堆,false), Span(16,17,List(7),大,大,false), Span(14,15,List(8),你,你,false), Span(13,14,List(9),给,给-02,false), Span(12,13,List(10),是,是-04,false), Span(9,10,List(11),星星,星星,false), Span(8,9,List(12),你,你,false), Span(7,8,List(13),给,给-02,false), Span(5,6,List(14),并,并,false), Span(4,5,List(15),我,我,false), Span(2,3,List(16),就,就-01,false), Span(1,2,List(17),这,这,false)),Map(2 -> 来-06, 5 -> 会-03, 12 -> 你, 15 -> 我, 8 -> 你, 7 -> 大, 17 -> 这, 1 -> 小, 4 -> 笑-01, 11 -> 星星, 14 -> 并, 6 -> 堆, 0 -> 铃铛, 9 -> 给-02, 16 -> 就-01, 3 -> 出-04, 10 -> 是-04, 13 -> 给-02),Map(就 -> 就-01, 星 -> 星星, 我 -> 我, 来 -> 来-06, 这 -> 这, 笑 -> 笑-01, 大 -> 大, 你 -> 你, 给2 -> 给-02, 给 -> 给-02, 小 -> 小, 出 -> 出-04, 会 -> 会-03, 你2 -> 你, 铃 -> 铃铛, 并 -> 并, 是 -> 是-04, 堆 -> 堆))),[Ljava.lang.String;@418f0534,Annotation([Ljava.lang.String;@3dfd7eaa,[Ljava.lang.String;@7c9beb51,[Ljava.lang.String;@133aacbe),Annotation([Ljava.lang.String;@2aa5bd48,[Ljava.lang.String;@7cfb8e98,[Ledu.cmu.lti.nlp.amr.Dependency;@5f193335),Annotation([Ljava.lang.String;@19002b34,[Ljava.lang.String;@1ec88aa1,[Ljava.lang.String;@3e6748ae),Annotation([Ljava.lang.String;@28f154cc,[Ljava.lang.String;@3030836d,[Ledu.cmu.lti.nlp.amr.Entity;@6af78a48))
AMR:
(会 / 会-03, degree, 给 / 给-02)
(会 / 会-03, unit, 堆 / 堆)
(出 / 出-04, manner, 笑 / 笑-01)
(堆 / 堆, mod, 大 / 大)
(就 / 就-01, mod, 这 / 这)
(并 / 并, domain, 我 / 我)
(星 / 星星, mod, 给2 / 给-02)
(是 / 是-04, degree, 给2 / 给-02)
(来 / 来-06, manner, 出 / 出-04)
(笑 / 笑-01, manner, 会 / 会-03)
(给 / 给-02, degree, 是 / 是-04)
(给 / 给-02, prep-through, 你 / 你)
(给2 / 给-02, manner, 就 / 就-01)
(给2 / 给-02, manner, 并 / 并)
(给2 / 给-02, prep-through, 你2 / 你)
(铃 / 铃铛, mod, 小 / 小)
(铃 / 铃铛, unit, 来 / 来-06)

Decoded in 103,027 microseconds
Sentence: 他 仍然 笑 着 。

Spans:
Span 1-2:  仍然 => 仍然
Span 0-1:  他 => 他
Span 2-3:  笑 => 笑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  仍然 => 仍然
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  笑 => 笑-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	仍然	_	AD	AD	_	3	advmod	_	_
3	笑	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 他)
(x0 / 笑-01, manner, x4 / 仍然)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),笑,笑-01,false), Span(1,2,List(1),仍然,仍然,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 仍然, 0 -> 笑-01),Map(笑 -> 笑-01, 他 -> 他, 仍 -> 仍然))),[Ljava.lang.String;@6ed18d80,Annotation([Ljava.lang.String;@4c24f3a2,[Ljava.lang.String;@783b3aa0,[Ljava.lang.String;@2ec85a25),Annotation([Ljava.lang.String;@4c176ff1,[Ljava.lang.String;@27c53c32,[Ledu.cmu.lti.nlp.amr.Dependency;@68aec50),Annotation([Ljava.lang.String;@6aff97d6,[Ljava.lang.String;@1d60059f,[Ljava.lang.String;@134a8ead),Annotation([Ljava.lang.String;@427308f8,[Ljava.lang.String;@54247647,[Ledu.cmu.lti.nlp.amr.Entity;@4975dda1))
AMR:
(笑 / 笑-01, ARG6, 他 / 他)
(笑 / 笑-01, manner, 仍 / 仍然)

Decoded in 4,530 microseconds
Sentence: 随后 他 变得 严肃 起来 ： “ 今天 夜里 … 你 知道 … 不 要 来 了 。 ”

Spans:
Span 13-14:  不 => 不
Span 3-4:  严肃 => 严肃
Span 7-8:  今天 => 今天
Span 1-2:  他 => 他
Span 10-11:  你 => 你
Span 2-3:  变得 => 变得-01
Span 8-9:  夜里 => 夜里
Span 15-16:  来 => 来-06
Span 11-12:  知道 => 知道-01
Span 14-15:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  严肃 => 严肃-01
Oracle Span 7-8:  今天 => 今天
Oracle Span 1-2:  他 => 他
Oracle Span 10-11:  你 => 你
Oracle Span 2-3:  变得 => 变得-01
Oracle Span 8-9:  夜里 => 夜里
Oracle Span 15-16:  来 => 来-01
Oracle Span 11-12:  知道 => 知道-01
Oracle Span 14-15:  要 => 要-03

Incorrect span: 来 => 来-06
Incorrect span: 要 => 要-02
Extra span: 不 => 不
Incorrect span: 严肃 => 严肃
Missing span: 严肃 => 严肃-01
Missing span: 要 => 要-03
Missing span: 来 => 来-01
Dependencies:
1	随后	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	变得	_	VV	VV	_	5	mmod	_	_
4	严肃	_	AD	AD	_	5	advmod	_	_
5	起来	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	9	punct	_	_
8	今天	_	NT	NT	_	9	tmod	_	_
9	夜里	_	VV	VV	_	5	conj	_	_
10	…	_	PU	PU	_	5	punct	_	_
11	你	_	PN	PN	_	12	nsubj	_	_
12	知道	_	VV	VV	_	5	conj	_	_
13	…	_	PU	PU	_	16	dep	_	_
14	不	_	AD	AD	_	16	neg	_	_
15	要	_	VV	VV	_	16	mmod	_	_
16	来	_	VV	VV	_	12	ccomp	_	_
17	了	_	AS	AS	_	16	asp	_	_
18	。	_	PU	PU	_	5	punct	_	_
19	”	_	PU	PU	_	5	punct	_	_
20	你	_	PN	PN	_	16	xsubj	_	_

Oracle:
(x20 / 变得-01, arg0, x21 / 他)
(x20 / 变得-01, arg1, x22 / 严肃-01)
(x25 / 知道-01, arg0, x26 / 你)
(x25 / 知道-01, arg1, x27 / 要-03)
(x25 / 知道-01, time, x31 / 夜里)
(x27 / 要-03, arg0, x29 / 来-01)
(x31 / 夜里, time, x32 / 今天)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),来,来-06,false), Span(14,15,List(1),要,要-02,false), Span(13,14,List(2),不,不,false), Span(11,12,List(3),知道,知道-01,false), Span(10,11,List(4),你,你,false), Span(8,9,List(5),夜里,夜里,false), Span(7,8,List(6),今天,今天,false), Span(3,4,List(7),严肃,严肃,false), Span(2,3,List(8),变得,变得-01,false), Span(1,2,List(9),他,他,false)),Map(2 -> 不, 5 -> 夜里, 8 -> 变得-01, 7 -> 严肃, 1 -> 要-02, 4 -> 你, 6 -> 今天, 9 -> 他, 0 -> 来-06, 3 -> 知道-01),Map(夜 -> 夜里, 来 -> 来-06, 要 -> 要-02, 你 -> 你, 今 -> 今天, 他 -> 他, 严 -> 严肃, 不 -> 不, 变 -> 变得-01, 知 -> 知道-01))),[Ljava.lang.String;@e0d1dc4,Annotation([Ljava.lang.String;@5463f035,[Ljava.lang.String;@230232b0,[Ljava.lang.String;@44fd7ba4),Annotation([Ljava.lang.String;@22f8adc2,[Ljava.lang.String;@69d103f0,[Ledu.cmu.lti.nlp.amr.Dependency;@5b742bc8),Annotation([Ljava.lang.String;@74fb5b59,[Ljava.lang.String;@130a6eb9,[Ljava.lang.String;@722531ab),Annotation([Ljava.lang.String;@8f57e4c,[Ljava.lang.String;@26fadd98,[Ledu.cmu.lti.nlp.amr.Entity;@66451058))
AMR:
(严 / 严肃, manner, 变 / 变得-01)
(变 / 变得-01, prep-on-behalf, 他 / 他)
(夜 / 夜里, domain, 严 / 严肃)
(夜 / 夜里, time, 今 / 今天)
(知 / 知道-01, op, 不 / 不)
(知 / 知道-01, prep-on-behalf, 你 / 你)
(知 / 知道-01, time, 夜 / 夜里)
(要 / 要-02, ARG5, 来 / 来-06)
(要 / 要-02, manner, 不 / 不)

Decoded in 32,052 microseconds
Sentence: “ 我 不 离开 你 。 ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),离开,离开-01,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),我,我,false)),Map(2 -> 不, 1 -> 离开-01, 0 -> 你, 3 -> 我),Map(我 -> 我, 你 -> 你, 不 -> 不, 离 -> 离开-01))),[Ljava.lang.String;@3db6dd52,Annotation([Ljava.lang.String;@1e92c3b6,[Ljava.lang.String;@6ef4cbe1,[Ljava.lang.String;@207dd1b7),Annotation([Ljava.lang.String;@2baac4a7,[Ljava.lang.String;@23ad2d17,[Ledu.cmu.lti.nlp.amr.Dependency;@6bce4140),Annotation([Ljava.lang.String;@25f0c5e7,[Ljava.lang.String;@5882b202,[Ljava.lang.String;@120df990),Annotation([Ljava.lang.String;@b506ed0,[Ljava.lang.String;@282c4da0,[Ledu.cmu.lti.nlp.amr.Entity;@65f3e805))
AMR:
(不 / 不, poss, 我 / 我)
(离 / 离开-01, location, 不 / 不)
(离 / 离开-01, subset, 你 / 你)

Decoded in 6,167 microseconds
Sentence: 我 说 。

Spans:
Span 0-1:  我 => 我
Span 1-2:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  说 => 说-01

Incorrect span: 说 => 说-02
Missing span: 说 => 说-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	说	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),说,说-02,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 说-02),Map(我 -> 我, 说 -> 说-02))),[Ljava.lang.String;@18cf5c52,Annotation([Ljava.lang.String;@10618775,[Ljava.lang.String;@5aea8994,[Ljava.lang.String;@20a3e10c),Annotation([Ljava.lang.String;@426c0486,[Ljava.lang.String;@5e2a6991,[Ledu.cmu.lti.nlp.amr.Dependency;@5002fde9),Annotation([Ljava.lang.String;@6f96dd64,[Ljava.lang.String;@4d7cac24,[Ljava.lang.String;@409732fb),Annotation([Ljava.lang.String;@73d62b5,[Ljava.lang.String;@5e99e2cb,[Ledu.cmu.lti.nlp.amr.Entity;@76ac68b0))
AMR:
(说 / 说-02, value, 我 / 我)

Decoded in 2,547 microseconds
Sentence: “ 我 将 会 象 是 很 痛苦 的 样子 …

Spans:
Span 3-4:  会 => 会-03
Span 2-3:  将 => 将-01
Span 6-7:  很 => 很
Span 1-2:  我 => 我
Span 5-6:  是 => 是-04
Span 9-10:  样子 => 样子
Span 7-8:  痛苦 => 痛苦-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 3-4:  会 => 会-02
Oracle Span 2-3:  将 => 将
Oracle Span 6-7:  很 => 很
Oracle Span 1-2:  我 => 我
Oracle Span 7-8:  痛苦 => 痛苦-01

Extra span: 样子 => 样子
Extra span: 是 => 是-04
Incorrect span: 会 => 会-03
Incorrect span: 将 => 将-01
Missing span: 会 => 会-02
Missing span: 将 => 将
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	将	_	AD	AD	_	4	advmod	_	_
4	会	_	VV	VV	_	0	root	_	_
5	象	_	P	P	_	4	prep	_	_
6	是	_	VC	VC	_	5	pccomp	_	_
7	很	_	AD	AD	_	8	advmod	_	_
8	痛苦	_	VA	VA	_	6	attr	_	_
9	的	_	DEC	DEC	_	8	cpm	_	_
10	样子	_	PU	PU	_	4	punct	_	_
11	…	_	PU	PU	_	4	punct	_	_

Oracle:
(x23 / 会-02, time, x32 / 将)
(x29 / 痛苦-01, degree, x30 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),样子,样子,false), Span(7,8,List(1),痛苦,痛苦-01,false), Span(6,7,List(2),很,很,false), Span(5,6,List(3),是,是-04,false), Span(3,4,List(4),会,会-03,false), Span(2,3,List(5),将,将-01,false), Span(1,2,List(6),我,我,false)),Map(2 -> 很, 5 -> 将-01, 1 -> 痛苦-01, 4 -> 会-03, 6 -> 我, 0 -> 样子, 3 -> 是-04),Map(我 -> 我, 很 -> 很, 痛 -> 痛苦-01, 将 -> 将-01, 会 -> 会-03, 是 -> 是-04, 样 -> 样子))),[Ljava.lang.String;@f559c74,Annotation([Ljava.lang.String;@63917fe1,[Ljava.lang.String;@720f56e2,[Ljava.lang.String;@677349fb),Annotation([Ljava.lang.String;@4466cf5d,[Ljava.lang.String;@2c60ce47,[Ledu.cmu.lti.nlp.amr.Dependency;@2450256f),Annotation([Ljava.lang.String;@59918c8f,[Ljava.lang.String;@2b7facc7,[Ljava.lang.String;@1c74d19),Annotation([Ljava.lang.String;@24197b13,[Ljava.lang.String;@71b97eeb,[Ledu.cmu.lti.nlp.amr.Entity;@2776fd8f))
AMR:
(会 / 会-03, prep-through, 是 / 是-04)
(会 / 会-03, time, 将 / 将-01)
(将 / 将-01, beneficiary, 我 / 我)
(是 / 是-04, degree, 很 / 很)
(样 / 样子, mod, 痛 / 痛苦-01)
(痛 / 痛苦-01, degree, 很 / 很)

Decoded in 17,049 microseconds
Sentence: 我 有点 象 要 死去 似的 。

Spans:
Span 0-1:  我 => 我
Span 1-2:  有点 => 有点-01
Span 4-5:  死去 => 死去
Span 3-4:  要 => 要-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  有点 => 有点-01
Oracle Span 4-5:  死去 => 死去-01
Oracle Span 3-4:  要 => 要-03

Incorrect span: 死去 => 死去
Incorrect span: 要 => 要-02
Missing span: 要 => 要-03
Missing span: 死去 => 死去-01
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	有点	_	AD	AD	_	5	advmod	_	_
3	象	_	P	P	_	5	prep	_	_
4	要	_	VV	VV	_	3	pccomp	_	_
5	死去	_	VV	VV	_	0	root	_	_
6	似的	_	NN	NN	_	5	dobj	_	_
7	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 死去-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),死去,死去,false), Span(3,4,List(1),要,要-02,false), Span(1,2,List(2),有点,有点-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 有点-01, 1 -> 要-02, 0 -> 死去, 3 -> 我),Map(我 -> 我, 要 -> 要-02, 死 -> 死去, 有 -> 有点-01))),[Ljava.lang.String;@1c62c3fd,Annotation([Ljava.lang.String;@734ce281,[Ljava.lang.String;@49b89425,[Ljava.lang.String;@59328218),Annotation([Ljava.lang.String;@5345dfe8,[Ljava.lang.String;@478967eb,[Ledu.cmu.lti.nlp.amr.Dependency;@4a1dda83),Annotation([Ljava.lang.String;@7f2b39a,[Ljava.lang.String;@7a358613,[Ljava.lang.String;@760f1081),Annotation([Ljava.lang.String;@52621501,[Ljava.lang.String;@401e02b4,[Ledu.cmu.lti.nlp.amr.Entity;@164d01ba))
AMR:
(我 / 我, accompanier, 要 / 要-02)
(有 / 有点-01, ARG0, 要 / 要-02)
(要 / 要-02, degree, 死 / 死去)

Decoded in 6,880 microseconds
Sentence: 就 是 这么 回 事 ，

Spans:
Span 4-5:  事 => 事
Span 3-4:  回 => 回
Span 0-1:  就 => 就-01
Span 1-2:  是 => 是-04
Span 2-3:  这么 => 这么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  事 => 事
Oracle Span 3-4:  回 => 回

Extra span: 这么 => 这么
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	这么	_	AD	AD	_	4	advmod	_	_
4	回	_	VV	VV	_	5	rcmod	_	_
5	事	_	NN	NN	_	2	attr	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 事, unit, x2 / 回)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),事,事,false), Span(3,4,List(1),回,回,false), Span(2,3,List(2),这么,这么,false), Span(1,2,List(3),是,是-04,false), Span(0,1,List(4),就,就-01,false)),Map(2 -> 这么, 1 -> 回, 4 -> 就-01, 0 -> 事, 3 -> 是-04),Map(就 -> 就-01, 这 -> 这么, 事 -> 事, 是 -> 是-04, 回 -> 回))),[Ljava.lang.String;@18c880ea,Annotation([Ljava.lang.String;@5ac044ef,[Ljava.lang.String;@6afbe6a1,[Ljava.lang.String;@14457a95),Annotation([Ljava.lang.String;@48567727,[Ljava.lang.String;@10e9a5fe,[Ledu.cmu.lti.nlp.amr.Dependency;@259287ac),Annotation([Ljava.lang.String;@1abcd059,[Ljava.lang.String;@61a87366,[Ljava.lang.String;@3c33fcf8),Annotation([Ljava.lang.String;@dada335,[Ljava.lang.String;@716f94c1,[Ledu.cmu.lti.nlp.amr.Entity;@53feeac9))
AMR:
(事 / 事, time, 就 / 就-01)
(事 / 事, unit, 回 / 回)
(是 / 是-04, ARG4, 这 / 这么)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 7,455 microseconds
Sentence: 你 就 别 来 看 这些 了 ，

Spans:
Span 0-1:  你 => 你
Span 1-2:  就 => 就-01
Span 3-4:  来 => 来-06
Span 4-5:  看 => 看-10
Span 5-6:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 3-4:  来 => 来-05
Oracle Span 4-5:  看 => 看-02
Oracle Span 5-6:  这些 => 这些

Incorrect span: 看 => 看-10
Incorrect span: 来 => 来-06
Extra span: 就 => 就-01
Missing span: 来 => 来-05
Missing span: 看 => 看-02
Dependencies:
1	你	_	PN	PN	_	5	nsubj	_	_
2	就	_	AD	AD	_	5	advmod	_	_
3	别	_	DT	DT	_	5	nsubj	_	_
4	来	_	MSP	MSP	_	5	prtmod	_	_
5	看	_	VV	VV	_	0	root	_	_
6	这些	_	PN	PN	_	5	dobj	_	_
7	了	_	VV	VV	_	5	dep	_	_
8	,	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 来-05, arg0, x3 / 你)
(x0 / 来-05, arg1, x4 / 看-02)
(x4 / 看-02, arg1, x5 / 这些)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),这些,这些,false), Span(4,5,List(1),看,看-10,false), Span(3,4,List(2),来,来-06,false), Span(1,2,List(3),就,就-01,false), Span(0,1,List(4),你,你,false)),Map(2 -> 来-06, 1 -> 看-10, 4 -> 你, 0 -> 这些, 3 -> 就-01),Map(就 -> 就-01, 来 -> 来-06, 这 -> 这些, 你 -> 你, 看 -> 看-10))),[Ljava.lang.String;@70091872,Annotation([Ljava.lang.String;@105db94d,[Ljava.lang.String;@1d99ee1b,[Ljava.lang.String;@3915e7c3),Annotation([Ljava.lang.String;@167a21b,[Ljava.lang.String;@7c0df4ab,[Ledu.cmu.lti.nlp.amr.Dependency;@2e362407),Annotation([Ljava.lang.String;@388be5fd,[Ljava.lang.String;@440ef8d,[Ljava.lang.String;@17fbfb02),Annotation([Ljava.lang.String;@8f2e3e6,[Ljava.lang.String;@6f315b08,[Ledu.cmu.lti.nlp.amr.Entity;@6c8efde4))
AMR:
(就 / 就-01, ARG4, 来 / 来-06)
(来 / 来-06, prep-through, 看 / 看-10)
(来 / 来-06, time, 你 / 你)
(看 / 看-10, dayperiod, 这 / 这些)

Decoded in 9,540 microseconds
Sentence: 没有 必要 。 ”

Spans:
Span 1-2:  必要 => 必要-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  必要 => 必要-01

Dependencies:
1	没有	_	VE	VE	_	0	root	_	_
2	必要	_	NN	NN	_	1	dep	_	_
3	。	_	PU	PU	_	1	punct	_	_
4	”	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),必要,必要-01,false)),Map(0 -> 必要-01),Map(必 -> 必要-01))),[Ljava.lang.String;@24e5389c,Annotation([Ljava.lang.String;@3b170235,[Ljava.lang.String;@5e9bf744,[Ljava.lang.String;@45e140ae),Annotation([Ljava.lang.String;@48cdb156,[Ljava.lang.String;@4b4814d0,[Ledu.cmu.lti.nlp.amr.Dependency;@4ae8fb2a),Annotation([Ljava.lang.String;@54326e9,[Ljava.lang.String;@20216016,[Ljava.lang.String;@2b441e56),Annotation([Ljava.lang.String;@267891bf,[Ljava.lang.String;@3a109ff7,[Ledu.cmu.lti.nlp.amr.Entity;@111a7973))
AMR:


Decoded in 2,145 microseconds
Sentence: “ 我 不 离开 你 。 ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),离开,离开-01,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),我,我,false)),Map(2 -> 不, 1 -> 离开-01, 0 -> 你, 3 -> 我),Map(我 -> 我, 你 -> 你, 不 -> 不, 离 -> 离开-01))),[Ljava.lang.String;@1a2773a8,Annotation([Ljava.lang.String;@78b0ec3a,[Ljava.lang.String;@46612bfc,[Ljava.lang.String;@4f213a2),Annotation([Ljava.lang.String;@25699aa7,[Ljava.lang.String;@5a47730c,[Ledu.cmu.lti.nlp.amr.Dependency;@15369d73),Annotation([Ljava.lang.String;@1cde374,[Ljava.lang.String;@6818fd48,[Ljava.lang.String;@9263c54),Annotation([Ljava.lang.String;@28daf506,[Ljava.lang.String;@4662752a,[Ledu.cmu.lti.nlp.amr.Entity;@693f2213))
AMR:
(不 / 不, poss, 我 / 我)
(离 / 离开-01, location, 不 / 不)
(离 / 离开-01, subset, 你 / 你)

Decoded in 6,787 microseconds
Sentence: 可是 他 担心 起来 。

Spans:
Span 1-2:  他 => 他
Span 2-3:  担心 => 担心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 2-3:  担心 => 担心-01

Dependencies:
1	可是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	担心	_	VV	VV	_	0	root	_	_
4	起来	_	VV	VV	_	3	ccomp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 担心-01, arg0, x3 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),担心,担心-01,false), Span(1,2,List(1),他,他,false)),Map(1 -> 他, 0 -> 担心-01),Map(担 -> 担心-01, 他 -> 他))),[Ljava.lang.String;@514377fc,Annotation([Ljava.lang.String;@2e4eda17,[Ljava.lang.String;@7b5021d1,[Ljava.lang.String;@6befbb12),Annotation([Ljava.lang.String;@21d9cd04,[Ljava.lang.String;@799f354a,[Ledu.cmu.lti.nlp.amr.Dependency;@33bdd01),Annotation([Ljava.lang.String;@159ac15f,[Ljava.lang.String;@7ac48f05,[Ljava.lang.String;@7af1d072),Annotation([Ljava.lang.String;@27ffd9f8,[Ljava.lang.String;@642c6461,[Ledu.cmu.lti.nlp.amr.Entity;@3ace6346))
AMR:
(担 / 担心-01, prep-from, 他 / 他)

Decoded in 3,420 microseconds
Sentence: “ 我 对 你 说 这些 … 这 也 是 因为 蛇 的 缘故 。

Spans:
Span 8-9:  也 => 也
Span 3-4:  你 => 你
Span 2-3:  对 => 对-02
Span 1-2:  我 => 我
Span 9-10:  是 => 是-04
Span 13-14:  缘故 => 缘故
Span 11-12:  蛇 => 蛇
Span 4-5:  说 => 说-02
Span 7-8:  这 => 这
Span 5-6:  这些 => 这些

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  也 => 也
Oracle Span 3-4:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 11-12:  蛇 => 蛇
Oracle Span 4-5:  说 => 说-01
Oracle Span 5-6:  这些 => 这些

Extra span: 缘故 => 缘故
Extra span: 是 => 是-04
Extra span: 这 => 这
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	“	_	PU	PU	_	5	punct	_	_
2	我	_	PN	PN	_	5	nsubj	_	_
3	对	_	P	P	_	5	prep	_	_
4	你	_	PN	PN	_	3	pobj	_	_
5	说	_	VV	VV	_	0	root	_	_
6	这些	_	PN	PN	_	10	nsubj	_	_
7	…	_	PU	PU	_	10	dep	_	_
8	这	_	PN	PN	_	10	nsubj	_	_
9	也	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	5	ccomp	_	_
11	因为	_	P	P	_	10	prep	_	_
12	蛇	_	NN	NN	_	14	assmod	_	_
13	的	_	DEG	DEG	_	12	assm	_	_
14	缘故	_	NN	NN	_	11	pobj	_	_
15	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x12 / 说-01, arg0, x13 / 我)
(x12 / 说-01, arg1, x14 / 这些)
(x12 / 说-01, arg3, x16 / 你)
(x12 / 说-01, cause, x17 / 蛇)
(x17 / 蛇, manner, x18 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),缘故,缘故,false), Span(11,12,List(1),蛇,蛇,false), Span(9,10,List(2),是,是-04,false), Span(8,9,List(3),也,也,false), Span(7,8,List(4),这,这,false), Span(5,6,List(5),这些,这些,false), Span(4,5,List(6),说,说-02,false), Span(3,4,List(7),你,你,false), Span(2,3,List(8),对,对-02,false), Span(1,2,List(9),我,我,false)),Map(2 -> 是-04, 5 -> 这些, 8 -> 对-02, 7 -> 你, 1 -> 蛇, 4 -> 这, 6 -> 说-02, 9 -> 我, 0 -> 缘故, 3 -> 也),Map(我 -> 我, 也 -> 也, 这 -> 这, 你 -> 你, 缘 -> 缘故, 说 -> 说-02, 这2 -> 这些, 蛇 -> 蛇, 对 -> 对-02, 是 -> 是-04))),[Ljava.lang.String;@4e48462d,Annotation([Ljava.lang.String;@17216605,[Ljava.lang.String;@10a907ec,[Ljava.lang.String;@59b492ec),Annotation([Ljava.lang.String;@55c1ced9,[Ljava.lang.String;@49cc9b2a,[Ledu.cmu.lti.nlp.amr.Dependency;@11826398),Annotation([Ljava.lang.String;@6c5ca0b6,[Ljava.lang.String;@37b01ce2,[Ljava.lang.String;@1a88c4f5),Annotation([Ljava.lang.String;@1894fa9f,[Ljava.lang.String;@1144a02b,[Ledu.cmu.lti.nlp.amr.Entity;@26a4f9ed))
AMR:
(对 / 对-02, beneficiary, 我 / 我)
(是 / 是-04, manner, 也 / 也)
(是 / 是-04, mod, 这 / 这)
(缘 / 缘故, mod, 是 / 是-04)
(蛇 / 蛇, conj-as-if, 是 / 是-04)
(说 / 说-02, degree, 对 / 对-02)
(说 / 说-02, direction, 你 / 你)
(说 / 说-02, mod, 这2 / 这些)
(说 / 说-02, purpose, 是 / 是-04)

Decoded in 28,934 microseconds
Sentence: 别 让 它 咬 了 你 …

Spans:
Span 5-6:  你 => 你
Span 3-4:  咬 => 咬-01
Span 2-3:  它 => 它
Span 1-2:  让 => 让-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  你 => 你
Oracle Span 3-4:  咬 => 咬-01
Oracle Span 2-3:  它 => 它
Oracle Span 1-2:  让 => 让-01

Dependencies:
1	别	_	NR	NR	_	2	nsubj	_	_
2	让	_	VV	VV	_	0	root	_	_
3	它	_	PN	PN	_	4	nsubj	_	_
4	咬	_	VV	VV	_	2	ccomp	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	你	_	PN	PN	_	7	nn	_	_
7	…	_	NN	NN	_	4	dobj	_	_

Oracle:
(x0 / 让-01, arg1, x3 / 咬-01)
(x3 / 咬-01, arg0, x4 / 它)
(x3 / 咬-01, arg1, x5 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),你,你,false), Span(3,4,List(1),咬,咬-01,false), Span(2,3,List(2),它,它,false), Span(1,2,List(3),让,让-01,false)),Map(2 -> 它, 1 -> 咬-01, 0 -> 你, 3 -> 让-01),Map(你 -> 你, 它 -> 它, 让 -> 让-01, 咬 -> 咬-01))),[Ljava.lang.String;@7a572ea0,Annotation([Ljava.lang.String;@45287377,[Ljava.lang.String;@7159d601,[Ljava.lang.String;@70b33256),Annotation([Ljava.lang.String;@33d230ce,[Ljava.lang.String;@35e74e08,[Ledu.cmu.lti.nlp.amr.Dependency;@a316f6b),Annotation([Ljava.lang.String;@63f9ddf9,[Ljava.lang.String;@410fc508,[Ljava.lang.String;@4e17442f),Annotation([Ljava.lang.String;@4f5c30b1,[Ljava.lang.String;@62e73ab6,[Ledu.cmu.lti.nlp.amr.Entity;@5d7f8467))
AMR:
(咬 / 咬-01, destination, 你 / 你)
(咬 / 咬-01, prep-on-behalf, 让 / 让-01)
(咬 / 咬-01, weekday, 它 / 它)

Decoded in 5,742 microseconds
Sentence: 蛇 是 很 坏 的 ，

Spans:
Span 3-4:  坏 => 坏-01
Span 2-3:  很 => 很
Span 1-2:  是 => 是-04
Span 0-1:  蛇 => 蛇

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  坏 => 坏-01
Oracle Span 2-3:  很 => 很
Oracle Span 0-1:  蛇 => 蛇

Extra span: 是 => 是-04
Dependencies:
1	蛇	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	坏	_	VA	VA	_	2	attr	_	_
5	的	_	DEC	DEC	_	4	cpm	_	_
6	,	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 坏-01, arg0, x2 / 蛇)
(x0 / 坏-01, degree, x3 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),坏,坏-01,false), Span(2,3,List(1),很,很,false), Span(1,2,List(2),是,是-04,false), Span(0,1,List(3),蛇,蛇,false)),Map(2 -> 是-04, 1 -> 很, 0 -> 坏-01, 3 -> 蛇),Map(坏 -> 坏-01, 很 -> 很, 蛇 -> 蛇, 是 -> 是-04))),[Ljava.lang.String;@29bd85db,Annotation([Ljava.lang.String;@7caf1e5,[Ljava.lang.String;@5c234920,[Ljava.lang.String;@7ddeb27f),Annotation([Ljava.lang.String;@38087342,[Ljava.lang.String;@681de87f,[Ledu.cmu.lti.nlp.amr.Dependency;@2eb1c615),Annotation([Ljava.lang.String;@2674d4f6,[Ljava.lang.String;@5d9d2119,[Ljava.lang.String;@5a4464c5),Annotation([Ljava.lang.String;@7ae590f6,[Ljava.lang.String;@7ab63838,[Ledu.cmu.lti.nlp.amr.Entity;@4e974b9e))
AMR:
(坏 / 坏-01, degree, 很 / 很)
(是 / 是-04, ARG1, 很 / 很)
(是 / 是-04, manner, 蛇 / 蛇)

Decoded in 5,732 microseconds
Sentence: 它 随意 咬 人 … ”

Spans:
Span 3-4:  人 => 人
Span 2-3:  咬 => 咬-01
Span 0-1:  它 => 它
Span 1-2:  随意 => 随意-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  人 => 人
Oracle Span 2-3:  咬 => 咬-01
Oracle Span 0-1:  它 => 它
Oracle Span 1-2:  随意 => 随意-01

Dependencies:
1	它	_	PN	PN	_	2	nsubj	_	_
2	随意	_	VV	VV	_	0	root	_	_
3	咬	_	NN	NN	_	5	nn	_	_
4	人	_	NN	NN	_	5	nn	_	_
5	…	_	NN	NN	_	2	dobj	_	_
6	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x7 / 咬-01, arg0, x9 / 它)
(x7 / 咬-01, arg1, x10 / 人)
(x7 / 咬-01, manner, x8 / 随意-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),人,人,false), Span(2,3,List(1),咬,咬-01,false), Span(1,2,List(2),随意,随意-01,false), Span(0,1,List(3),它,它,false)),Map(2 -> 随意-01, 1 -> 咬-01, 0 -> 人, 3 -> 它),Map(它 -> 它, 咬 -> 咬-01, 人 -> 人, 随 -> 随意-01))),[Ljava.lang.String;@370c7cc5,Annotation([Ljava.lang.String;@61b838f2,[Ljava.lang.String;@2a04ab05,[Ljava.lang.String;@5ebbde60),Annotation([Ljava.lang.String;@a056b26,[Ljava.lang.String;@2a5abd3c,[Ledu.cmu.lti.nlp.amr.Dependency;@250967f1),Annotation([Ljava.lang.String;@25c1f5ee,[Ljava.lang.String;@4bce62b,[Ljava.lang.String;@7bf018dd),Annotation([Ljava.lang.String;@15a8cebd,[Ljava.lang.String;@3f6c2763,[Ledu.cmu.lti.nlp.amr.Entity;@5c82031b))
AMR:
(人 / 人, manner, 咬 / 咬-01)
(咬 / 咬-01, manner, 随 / 随意-01)
(它 / 它, mode, 随 / 随意-01)

Decoded in 5,642 microseconds
Sentence: “ 我 不 离开 你 。 ”

Spans:
Span 2-3:  不 => 不
Span 4-5:  你 => 你
Span 1-2:  我 => 我
Span 3-4:  离开 => 离开-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  你 => 你
Oracle Span 1-2:  我 => 我
Oracle Span 3-4:  离开 => 离开-01

Extra span: 不 => 不
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	离开	_	VV	VV	_	0	root	_	_
5	你	_	PN	PN	_	4	dobj	_	_
6	。	_	PU	PU	_	4	punct	_	_
7	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 离开-01, arg0, x10 / 我)
(x8 / 离开-01, arg1, x11 / 你)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),你,你,false), Span(3,4,List(1),离开,离开-01,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),我,我,false)),Map(2 -> 不, 1 -> 离开-01, 0 -> 你, 3 -> 我),Map(我 -> 我, 你 -> 你, 不 -> 不, 离 -> 离开-01))),[Ljava.lang.String;@274fdea6,Annotation([Ljava.lang.String;@74c121d4,[Ljava.lang.String;@2a484710,[Ljava.lang.String;@661e1399),Annotation([Ljava.lang.String;@3ffd4b12,[Ljava.lang.String;@424f02b8,[Ledu.cmu.lti.nlp.amr.Dependency;@2ad7bd26),Annotation([Ljava.lang.String;@3cc3f13e,[Ljava.lang.String;@69b3886f,[Ljava.lang.String;@53d30d23),Annotation([Ljava.lang.String;@44faa4f2,[Ljava.lang.String;@6793f752,[Ledu.cmu.lti.nlp.amr.Entity;@1216eb3f))
AMR:
(不 / 不, poss, 我 / 我)
(离 / 离开-01, location, 不 / 不)
(离 / 离开-01, subset, 你 / 你)

Decoded in 5,621 microseconds
Sentence: 这时 ， 他 似乎 有点 放心 了 ： “ 对 了 ， 它 咬 第二 口 的 时候 就 没有 毒液 了 … ”

Spans:
Span 2-3:  他 => 他
Span 3-4:  似乎 => 似乎-01
Span 13-14:  咬 => 咬-01
Span 12-13:  它 => 它
Span 9-10:  对 => 对-02
Span 18-19:  就 => 就-01
Span 5-6:  放心 => 放心-01
Span 17-18:  时候 => 时候
Span 4-5:  有点 => 有点-01
Span 20-21:  毒液 => 毒液
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 3-4:  似乎 => 似乎-01
Oracle Span 13-14:  咬 => 咬-01
Oracle Span 12-13:  它 => 它
Oracle Span 9-10:  对 => 对-02
Oracle Span 5-6:  放心 => 放心-01
Oracle Span 4-5:  有点 => 有点-01
Oracle Span 20-21:  毒液 => 毒液
Oracle Span 0-1:  这时 => 这时

Extra span: 就 => 就-01
Extra span: 时候 => 时候
Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	似乎	_	AD	AD	_	5	advmod	_	_
5	有点	_	VV	VV	_	0	root	_	_
6	放心	_	VV	VV	_	5	rcomp	_	_
7	了	_	AS	AS	_	5	asp	_	_
8	：	_	PU	PU	_	5	punct	_	_
9	“	_	PU	PU	_	10	punct	_	_
10	对	_	VV	VV	_	5	conj	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	,	_	PU	PU	_	10	punct	_	_
13	它	_	PN	PN	_	14	nsubj	_	_
14	咬	_	VV	VV	_	18	rcmod	_	_
15	第二	_	OD	OD	_	16	ordmod	_	_
16	口	_	M	M	_	14	range	_	_
17	的	_	DEC	DEC	_	14	cpm	_	_
18	时候	_	NN	NN	_	21	dep	_	_
19	就	_	AD	AD	_	21	advmod	_	_
20	没有	_	VV	VV	_	21	neg	_	_
21	毒液	_	VV	VV	_	10	dep	_	_
22	了	_	AS	AS	_	21	asp	_	_
23	…	_	NN	NN	_	21	dobj	_	_
24	”	_	PU	PU	_	10	punct	_	_

Oracle:
(x21 / 似乎-01, arg0, x22 / 放心-01)
(x22 / 放心-01, arg0, x23 / 他)
(x22 / 放心-01, degree, x24 / 有点-01)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),毒液,毒液,false), Span(18,19,List(1),就,就-01,false), Span(17,18,List(2),时候,时候,false), Span(13,14,List(3),咬,咬-01,false), Span(12,13,List(4),它,它,false), Span(9,10,List(5),对,对-02,false), Span(5,6,List(6),放心,放心-01,false), Span(4,5,List(7),有点,有点-01,false), Span(3,4,List(8),似乎,似乎-01,false), Span(2,3,List(9),他,他,false), Span(0,1,List(10),这时,这时,false)),Map(2 -> 时候, 5 -> 对-02, 8 -> 似乎-01, 7 -> 有点-01, 1 -> 就-01, 4 -> 它, 6 -> 放心-01, 9 -> 他, 0 -> 毒液, 10 -> 这时, 3 -> 咬-01),Map(就 -> 就-01, 这 -> 这时, 毒 -> 毒液, 似 -> 似乎-01, 放 -> 放心-01, 它 -> 它, 他 -> 他, 咬 -> 咬-01, 对 -> 对-02, 时 -> 时候, 有 -> 有点-01))),[Ljava.lang.String;@59e7564b,Annotation([Ljava.lang.String;@482ba4b1,[Ljava.lang.String;@307af381,[Ljava.lang.String;@1510b9a2),Annotation([Ljava.lang.String;@76a6f045,[Ljava.lang.String;@633ddc0c,[Ledu.cmu.lti.nlp.amr.Dependency;@4bcdd11),Annotation([Ljava.lang.String;@1471b98d,[Ljava.lang.String;@5514579e,[Ljava.lang.String;@58c42c8c),Annotation([Ljava.lang.String;@3af236d0,[Ljava.lang.String;@23564dd2,[Ledu.cmu.lti.nlp.amr.Entity;@54895681))
AMR:
(似 / 似乎-01, manner, 他 / 他)
(咬 / 咬-01, manner, 它 / 它)
(咬 / 咬-01, time, 对 / 对-02)
(就 / 就-01, time, 时 / 时候)
(放 / 放心-01, degree, 对 / 对-02)
(放 / 放心-01, degree, 有 / 有点-01)
(放 / 放心-01, manner, 似 / 似乎-01)
(放 / 放心-01, time, 这 / 这时)
(时 / 时候, time, 咬 / 咬-01)
(毒 / 毒液, manner, 就 / 就-01)

Decoded in 41,289 microseconds
Sentence: 这 天 夜里 ， 我 没有 看到 他 起程 。

Spans:
Span 7-8:  他 => 他
Span 2-3:  夜里 => 夜里
Span 1-2:  天 => (temporal-quantity :unit 天)
Span 4-5:  我 => 我
Span 6-7:  看到 => (thing :arg1-of 看到-01)
Span 8-9:  起程 => 起程-01
Span 0-1:  这 => 这

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 不声不响 地 跑 了 。

Spans:
Span 1-2:  不声不响 => 不声不响-01
Span 0-1:  他 => 他
Span 2-3:  地 => 地
Span 3-4:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  不声不响 => 不声不响-01
Oracle Span 0-1:  他 => 他
Oracle Span 3-4:  跑 => 跑-01

Extra span: 地 => 地
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	不声不响	_	VA	VA	_	4	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	跑	_	VV	VV	_	0	root	_	_
5	了	_	AS	AS	_	4	asp	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 跑-01, arg0, x3 / 他)
(x0 / 跑-01, manner, x2 / 不声不响-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),跑,跑-01,false), Span(2,3,List(1),地,地,false), Span(1,2,List(2),不声不响,不声不响-01,false), Span(0,1,List(3),他,他,false)),Map(2 -> 不声不响-01, 1 -> 地, 0 -> 跑-01, 3 -> 他),Map(跑 -> 跑-01, 他 -> 他, 地 -> 地, 不 -> 不声不响-01))),[Ljava.lang.String;@6bf570c,Annotation([Ljava.lang.String;@1796b2d4,[Ljava.lang.String;@935d3f9,[Ljava.lang.String;@214b342f),Annotation([Ljava.lang.String;@5db0003d,[Ljava.lang.String;@7f12094d,[Ledu.cmu.lti.nlp.amr.Dependency;@589fb74d),Annotation([Ljava.lang.String;@200d1a3d,[Ljava.lang.String;@7de147e9,[Ljava.lang.String;@12567179),Annotation([Ljava.lang.String;@37d699a1,[Ljava.lang.String;@7f42b194,[Ledu.cmu.lti.nlp.amr.Entity;@8eb6f9a))
AMR:
(跑 / 跑-01, ARG1, 地 / 地)
(跑 / 跑-01, manner, 不 / 不声不响-01)
(跑 / 跑-01, season, 他 / 他)

Decoded in 6,084 microseconds
Sentence: 当 我 终于 赶上 他 的 时候 ， 他 坚定 地 快步 走 着 。

Spans:
Span 8-9:  他 => 他
Span 4-5:  他 => 他
Span 10-11:  地 => 地
Span 9-10:  坚定 => 坚定-01
Span 0-1:  当 => 当-04
Span 11-12:  快步 => 快步
Span 1-2:  我 => 我
Span 6-7:  时候 => 时候
Span 2-3:  终于 => 终于
Span 12-13:  走 => 走-05
Span 3-4:  赶上 => 赶上-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  他 => 他
Oracle Span 9-10:  坚定 => 坚定-01
Oracle Span 11-12:  快步 => 快步
Oracle Span 1-2:  我 => 我
Oracle Span 2-3:  终于 => 终于
Oracle Span 12-13:  走 => 走-02
Oracle Span 3-4:  赶上 => 赶上-01

Incorrect span: 走 => 走-05
Extra span: 地 => 地
Extra span: 他 => 他
Extra span: 时候 => 时候
Extra span: 当 => 当-04
Missing span: 走 => 走-02
Dependencies:
1	当	_	P	P	_	13	prep	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	终于	_	AD	AD	_	4	advmod	_	_
4	赶上	_	VV	VV	_	7	rcmod	_	_
5	他	_	PN	PN	_	4	dobj	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	时候	_	NN	NN	_	1	pobj	_	_
8	,	_	PU	PU	_	13	punct	_	_
9	他	_	PN	PN	_	13	nsubj	_	_
10	坚定	_	VA	VA	_	13	dvpmod	_	_
11	地	_	DEV	DEV	_	10	dvpm	_	_
12	快步	_	AD	AD	_	13	advmod	_	_
13	走	_	VV	VV	_	0	root	_	_
14	着	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	13	punct	_	_

Oracle:
(x0 / 走-02, arg0, x5 / 他)
(x0 / 走-02, manner, x15 / 坚定-01)
(x0 / 走-02, manner, x16 / 快步)
(x0 / 走-02, time, x17 / 赶上-01)
(x17 / 赶上-01, arg0, x18 / 我)
(x17 / 赶上-01, time, x20 / 终于)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),走,走-05,false), Span(11,12,List(1),快步,快步,false), Span(10,11,List(2),地,地,false), Span(9,10,List(3),坚定,坚定-01,false), Span(8,9,List(4),他,他,false), Span(6,7,List(5),时候,时候,false), Span(4,5,List(6),他,他,false), Span(3,4,List(7),赶上,赶上-01,false), Span(2,3,List(8),终于,终于,false), Span(1,2,List(9),我,我,false), Span(0,1,List(10),当,当-04,false)),Map(2 -> 地, 5 -> 时候, 8 -> 终于, 7 -> 赶上-01, 1 -> 快步, 4 -> 他, 6 -> 他, 9 -> 我, 0 -> 走-05, 10 -> 当-04, 3 -> 坚定-01),Map(他2 -> 他, 快 -> 快步, 我 -> 我, 终 -> 终于, 他 -> 他, 坚 -> 坚定-01, 地 -> 地, 赶 -> 赶上-01, 走 -> 走-05, 时 -> 时候, 当 -> 当-04))),[Ljava.lang.String;@29170a47,Annotation([Ljava.lang.String;@2a8f8555,[Ljava.lang.String;@402b4f81,[Ljava.lang.String;@13ef7fa1),Annotation([Ljava.lang.String;@23b1aa9,[Ljava.lang.String;@54489296,[Ledu.cmu.lti.nlp.amr.Dependency;@4e8598d9),Annotation([Ljava.lang.String;@267ff4df,[Ljava.lang.String;@7c4b5ceb,[Ljava.lang.String;@6c07add6),Annotation([Ljava.lang.String;@e26a3df,[Ljava.lang.String;@57a667c8,[Ledu.cmu.lti.nlp.amr.Entity;@712cd5d3))
AMR:
(坚 / 坚定-01, ARG1, 地 / 地)
(当 / 当-04, ARG0, 赶 / 赶上-01)
(当 / 当-04, ARG5, 我 / 我)
(时 / 时候, ARG4, 他2 / 他)
(走 / 走-05, manner, 坚 / 坚定-01)
(走 / 走-05, manner, 快 / 快步)
(走 / 走-05, subevent, 他 / 他)
(走 / 走-05, time, 赶 / 赶上-01)
(赶 / 赶上-01, time, 终 / 终于)
(赶 / 赶上-01, value, 时 / 时候)

Decoded in 33,089 microseconds
Sentence: 他 只是 对 我 说道 ： “ 啊 ，

Spans:
Span 0-1:  他 => 他
Span 1-2:  只是 => 只是
Span 7-8:  啊 => 啊
Span 2-3:  对 => 对-02
Span 3-4:  我 => 我
Span 4-5:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  只是 => 只是
Oracle Span 7-8:  啊 => 啊
Oracle Span 3-4:  我 => 我
Oracle Span 4-5:  说道 => 说道-01

Incorrect span: 说道 => 说道
Extra span: 对 => 对-02
Missing span: 说道 => 说道-01
Dependencies:
1	他	_	PN	PN	_	5	nsubj	_	_
2	只是	_	AD	AD	_	5	advmod	_	_
3	对	_	P	P	_	5	prep	_	_
4	我	_	PN	PN	_	3	pobj	_	_
5	说道	_	VV	VV	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	5	punct	_	_
8	啊	_	NR	NR	_	9	nsubj	_	_
9	,	_	VA	VA	_	5	ccomp	_	_

Oracle:
(x0 / 说道-01, arg0, x4 / 他)
(x0 / 说道-01, arg1, x8 / 啊)
(x0 / 说道-01, arg2, x9 / 我)
(x0 / 说道-01, manner, x10 / 只是)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),啊,啊,false), Span(4,5,List(1),说道,说道,false), Span(3,4,List(2),我,我,false), Span(2,3,List(3),对,对-02,false), Span(1,2,List(4),只是,只是,false), Span(0,1,List(5),他,他,false)),Map(2 -> 我, 5 -> 他, 1 -> 说道, 4 -> 只是, 0 -> 啊, 3 -> 对-02),Map(啊 -> 啊, 我 -> 我, 他 -> 他, 只 -> 只是, 说 -> 说道, 对 -> 对-02))),[Ljava.lang.String;@2094bf3d,Annotation([Ljava.lang.String;@1b17d8ab,[Ljava.lang.String;@7f6b7426,[Ljava.lang.String;@687eb455),Annotation([Ljava.lang.String;@6d969330,[Ljava.lang.String;@4861cca9,[Ledu.cmu.lti.nlp.amr.Dependency;@6c8f4bc7),Annotation([Ljava.lang.String;@714e861f,[Ljava.lang.String;@28989415,[Ljava.lang.String;@6eda012b),Annotation([Ljava.lang.String;@781dbe44,[Ljava.lang.String;@7d66a126,[Ledu.cmu.lti.nlp.amr.Entity;@1132baa3))
AMR:
(只 / 只是, quant, 他 / 他)
(啊 / 啊, quant, 说 / 说道)
(对 / 对-02, manner, 只 / 只是)
(说 / 说道, manner, 只 / 只是)
(说 / 说道, manner, 我 / 我)

Decoded in 10,815 microseconds
Sentence: 你 在 这儿 … ”

Spans:
Span 0-1:  你 => 你
Span 1-2:  在 => 在-01
Span 2-3:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  这儿 => 这儿

Extra span: 在 => 在-01
Dependencies:
1	你	_	PN	PN	_	4	nsubj	_	_
2	在	_	P	P	_	4	prep	_	_
3	这儿	_	PN	PN	_	2	pobj	_	_
4	…	_	VV	VV	_	0	root	_	_
5	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 你, location, x11 / 这儿)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),这儿,这儿,false), Span(1,2,List(1),在,在-01,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 在-01, 0 -> 这儿),Map(在 -> 在-01, 这 -> 这儿, 你 -> 你))),[Ljava.lang.String;@2fdf22f7,Annotation([Ljava.lang.String;@3a2546d6,[Ljava.lang.String;@7282af25,[Ljava.lang.String;@7661e474),Annotation([Ljava.lang.String;@20ffb8d5,[Ljava.lang.String;@307c59ea,[Ledu.cmu.lti.nlp.amr.Dependency;@57e03347),Annotation([Ljava.lang.String;@2edb2f8b,[Ljava.lang.String;@733f1395,[Ljava.lang.String;@21dea711),Annotation([Ljava.lang.String;@7772d266,[Ljava.lang.String;@a21c74,[Ledu.cmu.lti.nlp.amr.Entity;@b8a144e))
AMR:
(在 / 在-01, location, 这 / 这儿)
(在 / 在-01, manner, 你 / 你)

Decoded in 3,582 microseconds
Sentence: 于是 他 拉 着 我 的 手 。

Spans:
Span 1-2:  他 => 他
Span 4-5:  我 => 我
Span 6-7:  手 => 手
Span 2-3:  拉 => 拉-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 4-5:  我 => 我
Oracle Span 6-7:  手 => 手
Oracle Span 2-3:  拉 => 拉-01

Dependencies:
1	于是	_	AD	AD	_	3	advmod	_	_
2	他	_	PN	PN	_	3	nsubj	_	_
3	拉	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	我	_	PN	PN	_	7	assmod	_	_
6	的	_	DEG	DEG	_	5	assm	_	_
7	手	_	NN	NN	_	3	dobj	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 我, part, x9 / 手)
(x7 / 拉-01, arg0, x8 / 他)
(x7 / 拉-01, arg1, x9 / 手)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),手,手,false), Span(4,5,List(1),我,我,false), Span(2,3,List(2),拉,拉-01,false), Span(1,2,List(3),他,他,false)),Map(2 -> 拉-01, 1 -> 我, 0 -> 手, 3 -> 他),Map(我 -> 我, 他 -> 他, 拉 -> 拉-01, 手 -> 手))),[Ljava.lang.String;@5fb8dc01,Annotation([Ljava.lang.String;@3e38c472,[Ljava.lang.String;@2ee92e7d,[Ljava.lang.String;@759a678a),Annotation([Ljava.lang.String;@6cdbe5ec,[Ljava.lang.String;@14b8a751,[Ledu.cmu.lti.nlp.amr.Dependency;@7345f97d),Annotation([Ljava.lang.String;@554566a8,[Ljava.lang.String;@66020d69,[Ljava.lang.String;@3751acd7),Annotation([Ljava.lang.String;@6b832551,[Ljava.lang.String;@150d6eaf,[Ledu.cmu.lti.nlp.amr.Entity;@63124022))
AMR:
(我 / 我, part, 手 / 手)
(拉 / 拉-01, prep-from, 他 / 他)
(拉 / 拉-01, snt1, 手 / 手)

Decoded in 7,076 microseconds
Sentence: 但是 他 仍然 很 担心 ：

Spans:
Span 2-3:  仍然 => 仍然
Span 1-2:  他 => 他
Span 3-4:  很 => 很
Span 4-5:  担心 => 担心-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  很 => 很
Oracle Span 4-5:  担心 => 担心-01

Dependencies:
1	但是	_	AD	AD	_	5	advmod	_	_
2	他	_	PN	PN	_	5	nsubj	_	_
3	仍然	_	AD	AD	_	5	dep	_	_
4	很	_	AD	AD	_	5	advmod	_	_
5	担心	_	NN	NN	_	0	root	_	_
6	：	_	PU	PU	_	5	punct	_	_

Oracle:
(x2 / 担心-01, arg0, x4 / 他)
(x2 / 担心-01, degree, x3 / 很)
(x2 / 担心-01, manner, x5 / 仍然)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),担心,担心-01,false), Span(3,4,List(1),很,很,false), Span(2,3,List(2),仍然,仍然,false), Span(1,2,List(3),他,他,false)),Map(2 -> 仍然, 1 -> 很, 0 -> 担心-01, 3 -> 他),Map(担 -> 担心-01, 很 -> 很, 他 -> 他, 仍 -> 仍然))),[Ljava.lang.String;@591f6f83,Annotation([Ljava.lang.String;@2b44605c,[Ljava.lang.String;@55421b8d,[Ljava.lang.String;@24a04257),Annotation([Ljava.lang.String;@6615237,[Ljava.lang.String;@eaf8427,[Ledu.cmu.lti.nlp.amr.Dependency;@4bf4680c),Annotation([Ljava.lang.String;@6d6039df,[Ljava.lang.String;@611c3eae,[Ljava.lang.String;@13e00016),Annotation([Ljava.lang.String;@7b3cbe6e,[Ljava.lang.String;@177ede17,[Ledu.cmu.lti.nlp.amr.Entity;@17176b18))
AMR:
(担 / 担心-01, degree, 很 / 很)
(担 / 担心-01, manner, 仍 / 仍然)
(担 / 担心-01, snt5, 他 / 他)

Decoded in 5,524 microseconds
Sentence: “ 你 不 该 这样 。

Spans:
Span 2-3:  不 => 不
Span 1-2:  你 => 你
Span 3-4:  该 => 该-01
Span 4-5:  这样 => 这样-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 3-4:  该 => 该-01
Oracle Span 4-5:  这样 => 这样

Incorrect span: 这样 => 这样-01
Extra span: 不 => 不
Missing span: 这样 => 这样
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	你	_	PN	PN	_	4	nsubj	_	_
3	不	_	AD	AD	_	4	neg	_	_
4	该	_	VV	VV	_	0	root	_	_
5	这样	_	AD	AD	_	4	advmod	_	_
6	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 这样, arg0, x11 / 你)
(x8 / 该-01, arg0, x10 / 这样)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),这样,这样-01,false), Span(3,4,List(1),该,该-01,false), Span(2,3,List(2),不,不,false), Span(1,2,List(3),你,你,false)),Map(2 -> 不, 1 -> 该-01, 0 -> 这样-01, 3 -> 你),Map(这 -> 这样-01, 你 -> 你, 不 -> 不, 该 -> 该-01))),[Ljava.lang.String;@4e4395c,Annotation([Ljava.lang.String;@1ab53860,[Ljava.lang.String;@7b5ac347,[Ljava.lang.String;@57b9389f),Annotation([Ljava.lang.String;@72b2c5ed,[Ljava.lang.String;@41f785e3,[Ledu.cmu.lti.nlp.amr.Dependency;@6c9a3661),Annotation([Ljava.lang.String;@727986ad,[Ljava.lang.String;@1600a8a2,[Ljava.lang.String;@6b25ef1c),Annotation([Ljava.lang.String;@56b1e527,[Ljava.lang.String;@68c34db2,[Ledu.cmu.lti.nlp.amr.Entity;@7b95bdb0))
AMR:
(不 / 不, mod, 你 / 你)
(该 / 该-01, location, 不 / 不)
(该 / 该-01, subset, 这 / 这样-01)

Decoded in 6,994 microseconds
Sentence: 你 会 难受 的 。

Spans:
Span 1-2:  会 => 会-03
Span 0-1:  你 => 你
Span 2-3:  难受 => 难受-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-01
Oracle Span 0-1:  你 => 你
Oracle Span 2-3:  难受 => 难受-01

Incorrect span: 会 => 会-03
Missing span: 会 => 会-01
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	会	_	VV	VV	_	3	dep	_	_
3	难受	_	VV	VV	_	0	root	_	_
4	的	_	SP	SP	_	3	dep	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 会-01, arg0, x2 / 你)
(x0 / 会-01, arg1, x3 / 难受-01)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),难受,难受-01,false), Span(1,2,List(1),会,会-03,false), Span(0,1,List(2),你,你,false)),Map(2 -> 你, 1 -> 会-03, 0 -> 难受-01),Map(难 -> 难受-01, 你 -> 你, 会 -> 会-03))),[Ljava.lang.String;@3f0ce0d1,Annotation([Ljava.lang.String;@664db2ca,[Ljava.lang.String;@1491cd6c,[Ljava.lang.String;@423f8a73),Annotation([Ljava.lang.String;@1aedf08d,[Ljava.lang.String;@113dcaf8,[Ledu.cmu.lti.nlp.amr.Dependency;@b5d9f1e),Annotation([Ljava.lang.String;@350ff014,[Ljava.lang.String;@401317a0,[Ljava.lang.String;@3f866f50),Annotation([Ljava.lang.String;@5844a2d1,[Ljava.lang.String;@1201769d,[Ledu.cmu.lti.nlp.amr.Entity;@4af7dd6a))
AMR:
(会 / 会-03, ARG6, 你 / 你)
(会 / 会-03, compared-to, 难 / 难受-01)

Decoded in 5,124 microseconds
Sentence: 我 会 象 是 死去 的 样子 ， 但 这 不 会 是 真的 … ”

Spans:
Span 10-11:  不 => 不
Span 11-12:  会 => 会-03
Span 1-2:  会 => 会-03
Span 0-1:  我 => 我
Span 12-13:  是 => 是-04
Span 3-4:  是 => 是-04
Span 6-7:  样子 => 样子
Span 4-5:  死去 => 死去
Span 13-14:  真的 => 真的
Span 9-10:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  会 => 会-02
Oracle Span 11-12:  会 => 会-02
Oracle Span 0-1:  我 => 我
Oracle Span 4-5:  死去 => 死去-01
Oracle Span 13-14:  真的 => 真的-01
Oracle Span 9-10:  这 => 这

Incorrect span: 真的 => 真的
Extra span: 是 => 是-04
Incorrect span: 会 => 会-03
Extra span: 不 => 不
Extra span: 样子 => 样子
Incorrect span: 死去 => 死去
Extra span: 是 => 是-04
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 死去 => 死去-01
Missing span: 会 => 会-02
Missing span: 真的 => 真的-01
Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	会	_	VV	VV	_	0	root	_	_
3	象	_	P	P	_	2	prep	_	_
4	是	_	VC	VC	_	7	rcmod	_	_
5	死去	_	NN	NN	_	4	attr	_	_
6	的	_	DEC	DEC	_	4	cpm	_	_
7	样子	_	NN	NN	_	3	pobj	_	_
8	,	_	PU	PU	_	2	punct	_	_
9	但	_	AD	AD	_	13	advmod	_	_
10	这	_	PN	PN	_	13	nsubj	_	_
11	不	_	AD	AD	_	13	neg	_	_
12	会	_	VV	VV	_	13	mmod	_	_
13	是	_	VC	VC	_	2	conj	_	_
14	真的	_	NN	NN	_	15	nn	_	_
15	…	_	NN	NN	_	13	attr	_	_
16	”	_	PU	PU	_	13	punct	_	_

Oracle:
(x47 / 会-02, arg0, x49 / 真的-01)
(x49 / 真的-01, arg0, x50 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),真的,真的,false), Span(12,13,List(1),是,是-04,false), Span(11,12,List(2),会,会-03,false), Span(10,11,List(3),不,不,false), Span(9,10,List(4),这,这,false), Span(6,7,List(5),样子,样子,false), Span(4,5,List(6),死去,死去,false), Span(3,4,List(7),是,是-04,false), Span(1,2,List(8),会,会-03,false), Span(0,1,List(9),我,我,false)),Map(2 -> 会-03, 5 -> 样子, 8 -> 会-03, 7 -> 是-04, 1 -> 是-04, 4 -> 这, 6 -> 死去, 9 -> 我, 0 -> 真的, 3 -> 不),Map(我 -> 我, 会2 -> 会-03, 这 -> 这, 死 -> 死去, 不 -> 不, 会 -> 会-03, 是2 -> 是-04, 样 -> 样子, 是 -> 是-04, 真 -> 真的))),[Ljava.lang.String;@4607d78b,Annotation([Ljava.lang.String;@3b28b7b0,[Ljava.lang.String;@22048bd6,[Ljava.lang.String;@566c1e71),Annotation([Ljava.lang.String;@2e2f20b8,[Ljava.lang.String;@504497fa,[Ledu.cmu.lti.nlp.amr.Dependency;@5618fc1f),Annotation([Ljava.lang.String;@60b1ff3b,[Ljava.lang.String;@374c3975,[Ljava.lang.String;@43c39321),Annotation([Ljava.lang.String;@52aa7742,[Ljava.lang.String;@3d0d120b,[Ledu.cmu.lti.nlp.amr.Entity;@6b5c134e))
AMR:
(不 / 不, mod, 这 / 这)
(会 / 会-03, manner, 不 / 不)
(会2 / 会-03, beneficiary, 我 / 我)
(会2 / 会-03, mode, 是2 / 是-04)
(是 / 是-04, manner, 会 / 会-03)
(是 / 是-04, manner, 真 / 真的)
(是2 / 是-04, snt11, 死 / 死去)
(样 / 样子, mod, 死 / 死去)
(样 / 样子, part, 不 / 不)

Decoded in 30,426 microseconds
Sentence: 我 默默无言 。

Spans:
Span 0-1:  我 => 我
Span 1-2:  默默无言 => 默默无言

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 1-2:  默默无言 => 默默无言

Dependencies:
1	我	_	PN	PN	_	2	nsubj	_	_
2	默默无言	_	VV	VV	_	0	root	_	_
3	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 默默无言, arg0, x2 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),默默无言,默默无言,false), Span(0,1,List(1),我,我,false)),Map(1 -> 我, 0 -> 默默无言),Map(我 -> 我, 默 -> 默默无言))),[Ljava.lang.String;@34d9df9f,Annotation([Ljava.lang.String;@35c8be21,[Ljava.lang.String;@60807fd9,[Ljava.lang.String;@6bcdd6e4),Annotation([Ljava.lang.String;@1192c925,[Ljava.lang.String;@615b5480,[Ledu.cmu.lti.nlp.amr.Dependency;@24691c5),Annotation([Ljava.lang.String;@7b91d9f,[Ljava.lang.String;@6537ac,[Ljava.lang.String;@3b218c74),Annotation([Ljava.lang.String;@ddffa6c,[Ljava.lang.String;@42c54bad,[Ledu.cmu.lti.nlp.amr.Entity;@6bb4cc0e))
AMR:
(默 / 默默无言, value, 我 / 我)

Decoded in 2,470 microseconds
Sentence: “ 你 明白 ， 路 很 远 。

Spans:
Span 1-2:  你 => 你
Span 5-6:  很 => 很
Span 2-3:  明白 => 明白-01
Span 4-5:  路 => 路
Span 6-7:  远 => 远

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  你 => 你
Oracle Span 5-6:  很 => 很
Oracle Span 2-3:  明白 => 明白-01
Oracle Span 4-5:  路 => 路
Oracle Span 6-7:  远 => 远-01

Incorrect span: 远 => 远
Missing span: 远 => 远-01
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	你	_	PN	PN	_	3	nsubj	_	_
3	明白	_	VV	VV	_	0	root	_	_
4	,	_	PU	PU	_	3	punct	_	_
5	路	_	NN	NN	_	7	nsubj	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	远	_	VA	VA	_	3	ccomp	_	_
8	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 远-01, arg0, x12 / 路)
(x10 / 远-01, degree, x11 / 很)
(x8 / 明白-01, arg0, x9 / 你)
(x8 / 明白-01, arg2, x10 / 远-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),远,远,false), Span(5,6,List(1),很,很,false), Span(4,5,List(2),路,路,false), Span(2,3,List(3),明白,明白-01,false), Span(1,2,List(4),你,你,false)),Map(2 -> 路, 1 -> 很, 4 -> 你, 0 -> 远, 3 -> 明白-01),Map(路 -> 路, 你 -> 你, 很 -> 很, 远 -> 远, 明 -> 明白-01))),[Ljava.lang.String;@5cc1bf20,Annotation([Ljava.lang.String;@2e3f324e,[Ljava.lang.String;@46cf8c07,[Ljava.lang.String;@b56ec6c),Annotation([Ljava.lang.String;@5abf6a99,[Ljava.lang.String;@dc59ec2,[Ledu.cmu.lti.nlp.amr.Dependency;@375084c9),Annotation([Ljava.lang.String;@bd93bc3,[Ljava.lang.String;@2a136383,[Ljava.lang.String;@b01cb8d),Annotation([Ljava.lang.String;@38c460e8,[Ljava.lang.String;@7a814310,[Ledu.cmu.lti.nlp.amr.Entity;@4bbf38b8))
AMR:
(明 / 明白-01, manner, 你 / 你)
(明 / 明白-01, prep-through, 路 / 路)
(远 / 远, degree, 很 / 很)
(远 / 远, mod, 路 / 路)

Decoded in 8,167 microseconds
Sentence: 我 不 能 带 着 这 付 身躯 走 。

Spans:
Span 1-2:  不 => 不
Span 3-4:  带 => 带-05
Span 0-1:  我 => 我
Span 2-3:  能 => 能
Span 8-9:  走 => 走-05
Span 7-8:  身躯 => 身躯
Span 5-6:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  带 => 带-02
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  能 => 能-01
Oracle Span 8-9:  走 => 走-02
Oracle Span 7-8:  身躯 => 身躯
Oracle Span 5-6:  这 => 这

Incorrect span: 走 => 走-05
Incorrect span: 带 => 带-05
Incorrect span: 能 => 能
Extra span: 不 => 不
Missing span: 能 => 能-01
Missing span: 走 => 走-02
Missing span: 带 => 带-02
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	不	_	AD	AD	_	4	neg	_	_
3	能	_	VV	VV	_	4	mmod	_	_
4	带	_	VV	VV	_	0	root	_	_
5	着	_	AS	AS	_	4	asp	_	_
6	这	_	PN	PN	_	4	dobj	_	_
7	付	_	VV	VV	_	4	conj	_	_
8	身躯	_	NN	NN	_	7	dobj	_	_
9	走	_	VV	VV	_	4	conj	_	_
10	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 能-01, arg0, x18 / 走-02)
(x18 / 走-02, arg0, x19 / 我)
(x18 / 走-02, manner, x21 / 带-02)
(x21 / 带-02, arg1, x23 / 身躯)
(x23 / 身躯, mod, x24 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),走,走-05,false), Span(7,8,List(1),身躯,身躯,false), Span(5,6,List(2),这,这,false), Span(3,4,List(3),带,带-05,false), Span(2,3,List(4),能,能,false), Span(1,2,List(5),不,不,false), Span(0,1,List(6),我,我,false)),Map(2 -> 这, 5 -> 不, 1 -> 身躯, 4 -> 能, 6 -> 我, 0 -> 走-05, 3 -> 带-05),Map(我 -> 我, 能 -> 能, 这 -> 这, 身 -> 身躯, 不 -> 不, 带 -> 带-05, 走 -> 走-05))),[Ljava.lang.String;@4e67cfe1,Annotation([Ljava.lang.String;@55bf35e5,[Ljava.lang.String;@25567581,[Ljava.lang.String;@179ee36b),Annotation([Ljava.lang.String;@67763ebe,[Ljava.lang.String;@4b4a2fa8,[Ledu.cmu.lti.nlp.amr.Dependency;@5da6b13d),Annotation([Ljava.lang.String;@3dc39459,[Ljava.lang.String;@6b16de91,[Ljava.lang.String;@71bb8b34),Annotation([Ljava.lang.String;@197ce367,[Ljava.lang.String;@383cdd4d,[Ledu.cmu.lti.nlp.amr.Entity;@65036e8d))
AMR:
(不 / 不, ARG1, 我 / 我)
(带 / 带-05, ARG3, 身 / 身躯)
(带 / 带-05, degree, 不 / 不)
(能 / 能, manner, 不 / 不)
(走 / 走-05, manner, 带 / 带-05)
(身 / 身躯, mod, 这 / 这)

Decoded in 17,319 microseconds
Sentence: 它 太 重 了 。 ”

Spans:
Span 1-2:  太 => 太
Span 0-1:  它 => 它
Span 2-3:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  太 => 太
Oracle Span 0-1:  它 => 它
Oracle Span 2-3:  重 => 重-02

Dependencies:
1	它	_	PN	PN	_	3	nsubj	_	_
2	太	_	AD	AD	_	3	advmod	_	_
3	重	_	VA	VA	_	0	root	_	_
4	了	_	SP	SP	_	3	dep	_	_
5	。	_	PU	PU	_	3	punct	_	_
6	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x7 / 重-02, arg0, x9 / 它)
(x7 / 重-02, degree, x8 / 太)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),重,重-02,false), Span(1,2,List(1),太,太,false), Span(0,1,List(2),它,它,false)),Map(2 -> 它, 1 -> 太, 0 -> 重-02),Map(重 -> 重-02, 它 -> 它, 太 -> 太))),[Ljava.lang.String;@48ccbb32,Annotation([Ljava.lang.String;@36551e97,[Ljava.lang.String;@685d7ba5,[Ljava.lang.String;@16d41725),Annotation([Ljava.lang.String;@3b6c2be6,[Ljava.lang.String;@25533bba,[Ledu.cmu.lti.nlp.amr.Dependency;@26d0ece6),Annotation([Ljava.lang.String;@100bba26,[Ljava.lang.String;@4ae280da,[Ljava.lang.String;@76d0ecd7),Annotation([Ljava.lang.String;@57c69937,[Ljava.lang.String;@1ad1c363,[Ledu.cmu.lti.nlp.amr.Entity;@446b64b3))
AMR:
(它 / 它, location, 太 / 太)
(重 / 重-02, degree, 太 / 太)

Decoded in 4,553 microseconds
Sentence: 我 依然 沉默不语 。

Spans:
Span 1-2:  依然 => 依然-01
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  依然 => 依然-01
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	依然	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 沉默不语, arg0, x2 / 我)
(x0 / 沉默不语, manner, x4 / 依然-01)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),依然,依然-01,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 依然-01, 0 -> 沉默不语),Map(沉 -> 沉默不语, 我 -> 我, 依 -> 依然-01))),[Ljava.lang.String;@35ac9ebd,Annotation([Ljava.lang.String;@56c0a61e,[Ljava.lang.String;@421ead7e,[Ljava.lang.String;@5dcf0772),Annotation([Ljava.lang.String;@c472300,[Ljava.lang.String;@5f6494c0,[Ledu.cmu.lti.nlp.amr.Dependency;@6826b70f),Annotation([Ljava.lang.String;@4df7d9ee,[Ljava.lang.String;@781dac73,[Ljava.lang.String;@3a4e524),Annotation([Ljava.lang.String;@5e67a490,[Ljava.lang.String;@2dac2e1b,[Ledu.cmu.lti.nlp.amr.Entity;@38c761e9))
AMR:
(沉 / 沉默不语, manner, 依 / 依然-01)
(沉 / 沉默不语, month, 我 / 我)

Decoded in 4,375 microseconds
Sentence: “ 但是 ， 这 就 好象 剥落 的 旧 树皮 一样 。

Spans:
Span 10-11:  一样 => 一样
Span 6-7:  剥落 => 剥落-01
Span 4-5:  就 => 就-01
Span 8-9:  旧 => 旧-01
Span 9-10:  树皮 => 树皮
Span 3-4:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  剥落 => 剥落-01
Oracle Span 8-9:  旧 => 旧-01
Oracle Span 9-10:  树皮 => 树皮
Oracle Span 3-4:  这 => 这

Extra span: 一样 => 一样
Extra span: 就 => 就-01
Dependencies:
1	“	_	PU	PU	_	6	punct	_	_
2	但是	_	AD	AD	_	6	advmod	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	这	_	PN	PN	_	6	nsubj	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	好象	_	VV	VV	_	0	root	_	_
7	剥落	_	NN	NN	_	10	assmod	_	_
8	的	_	DEG	DEG	_	7	assm	_	_
9	旧	_	JJ	JJ	_	10	amod	_	_
10	树皮	_	NN	NN	_	11	nsubj	_	_
11	一样	_	VA	VA	_	6	ccomp	_	_
12	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x13 / 树皮, mod, x14 / 旧-01)
(x15 / 剥落-01, arg1, x13 / 树皮)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),一样,一样,false), Span(9,10,List(1),树皮,树皮,false), Span(8,9,List(2),旧,旧-01,false), Span(6,7,List(3),剥落,剥落-01,false), Span(4,5,List(4),就,就-01,false), Span(3,4,List(5),这,这,false)),Map(2 -> 旧-01, 5 -> 这, 1 -> 树皮, 4 -> 就-01, 0 -> 一样, 3 -> 剥落-01),Map(就 -> 就-01, 这 -> 这, 树 -> 树皮, 剥 -> 剥落-01, 旧 -> 旧-01, 一 -> 一样))),[Ljava.lang.String;@1cee2e10,Annotation([Ljava.lang.String;@7f4e5a39,[Ljava.lang.String;@33de7f3d,[Ljava.lang.String;@30159886),Annotation([Ljava.lang.String;@5d66ae3a,[Ljava.lang.String;@50f4b83d,[Ledu.cmu.lti.nlp.amr.Dependency;@10131289),Annotation([Ljava.lang.String;@c5e69a5,[Ljava.lang.String;@64a1116a,[Ljava.lang.String;@11e17893),Annotation([Ljava.lang.String;@19eea77c,[Ljava.lang.String;@6682e6a5,[Ledu.cmu.lti.nlp.amr.Entity;@ac4915e))
AMR:
(一 / 一样, mod, 树 / 树皮)
(剥 / 剥落-01, manner, 就 / 就-01)
(剥 / 剥落-01, purpose, 旧 / 旧-01)
(就 / 就-01, mod, 这 / 这)
(树 / 树皮, mod, 旧 / 旧-01)

Decoded in 11,029 microseconds
Sentence: 旧 树皮 ， 并 没有 什么 可悲 的 。 ”

Spans:
Span 5-6:  什么 => 什么
Span 6-7:  可悲 => 可悲-01
Span 3-4:  并 => 并
Span 0-1:  旧 => 旧-01
Span 1-2:  树皮 => 树皮

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  可悲 => 可悲-01
Oracle Span 0-1:  旧 => 旧-01
Oracle Span 1-2:  树皮 => 树皮

Extra span: 什么 => 什么
Extra span: 并 => 并
Dependencies:
1	旧	_	JJ	JJ	_	2	amod	_	_
2	树皮	_	NN	NN	_	5	nsubj	_	_
3	,	_	PU	PU	_	5	punct	_	_
4	并	_	AD	AD	_	5	advmod	_	_
5	没有	_	VE	VE	_	0	root	_	_
6	什么	_	DT	DT	_	7	det	_	_
7	可悲	_	NN	NN	_	5	dobj	_	_
8	的	_	SP	SP	_	5	dep	_	_
9	。	_	PU	PU	_	5	punct	_	_
10	”	_	PU	PU	_	5	punct	_	_

Oracle:
(x14 / 可悲-01, arg0, x17 / 树皮)
(x17 / 树皮, mod, x18 / 旧-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),可悲,可悲-01,false), Span(5,6,List(1),什么,什么,false), Span(3,4,List(2),并,并,false), Span(1,2,List(3),树皮,树皮,false), Span(0,1,List(4),旧,旧-01,false)),Map(2 -> 并, 1 -> 什么, 4 -> 旧-01, 0 -> 可悲-01, 3 -> 树皮),Map(树 -> 树皮, 什 -> 什么, 并 -> 并, 旧 -> 旧-01, 可 -> 可悲-01))),[Ljava.lang.String;@10fb4575,Annotation([Ljava.lang.String;@7cc2c551,[Ljava.lang.String;@d84b3a2,[Ljava.lang.String;@23648d2d),Annotation([Ljava.lang.String;@69feb4d9,[Ljava.lang.String;@37c1cfa,[Ledu.cmu.lti.nlp.amr.Dependency;@2bcda694),Annotation([Ljava.lang.String;@2cc75b25,[Ljava.lang.String;@30036a18,[Ljava.lang.String;@537b3b2e),Annotation([Ljava.lang.String;@1544ded3,[Ljava.lang.String;@3ccb12d,[Ledu.cmu.lti.nlp.amr.Entity;@28b458e6))
AMR:
(可 / 可悲-01, manner, 并 / 并)
(可 / 可悲-01, mod, 什 / 什么)
(并 / 并, mod, 树 / 树皮)
(树 / 树皮, mod, 旧 / 旧-01)

Decoded in 8,078 microseconds
Sentence: 我 还是 沉默不语 。

Spans:
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语
Oracle Span 1-2:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 沉默不语, arg0, x2 / 我)
(x0 / 沉默不语, manner, x3 / 还是)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),还是,还是,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 还是, 0 -> 沉默不语),Map(沉 -> 沉默不语, 我 -> 我, 还 -> 还是))),[Ljava.lang.String;@221ca495,Annotation([Ljava.lang.String;@119d4443,[Ljava.lang.String;@773eca84,[Ljava.lang.String;@7d47dfed),Annotation([Ljava.lang.String;@3a38e4dc,[Ljava.lang.String;@41fc0084,[Ledu.cmu.lti.nlp.amr.Dependency;@401788d5),Annotation([Ljava.lang.String;@3ec9f8d,[Ljava.lang.String;@7e0f9528,[Ljava.lang.String;@5f56424d),Annotation([Ljava.lang.String;@237b2852,[Ljava.lang.String;@448cdb47,[Ledu.cmu.lti.nlp.amr.Entity;@4628a02b))
AMR:
(沉 / 沉默不语, manner, 还 / 还是)
(沉 / 沉默不语, month, 我 / 我)

Decoded in 4,062 microseconds
Sentence: 他 有些 泄气 了 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  有些 => 有些
Span 2-3:  泄气 => 泄气-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  有些 => 有些
Oracle Span 2-3:  泄气 => 泄气-01

Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	有些	_	AD	AD	_	3	advmod	_	_
3	泄气	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 泄气-01, arg0, x2 / 他)
(x0 / 泄气-01, manner, x4 / 有些)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),泄气,泄气-01,false), Span(1,2,List(1),有些,有些,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 有些, 0 -> 泄气-01),Map(他 -> 他, 泄 -> 泄气-01, 有 -> 有些))),[Ljava.lang.String;@2b01c689,Annotation([Ljava.lang.String;@51424203,[Ljava.lang.String;@7336fd8f,[Ljava.lang.String;@701c223a),Annotation([Ljava.lang.String;@550c973e,[Ljava.lang.String;@161d95c6,[Ledu.cmu.lti.nlp.amr.Dependency;@5203c80f),Annotation([Ljava.lang.String;@439f2d87,[Ljava.lang.String;@721bf7ad,[Ljava.lang.String;@852ef8d),Annotation([Ljava.lang.String;@44dd0d38,[Ljava.lang.String;@7e94e331,[Ledu.cmu.lti.nlp.amr.Entity;@539fc5d1))
AMR:
(泄 / 泄气-01, ARG6, 他 / 他)
(泄 / 泄气-01, manner, 有 / 有些)

Decoded in 6,663 microseconds
Sentence: 但是 他 又 振作 起来 ： “ 这 将 是 蛮 好 的 ， 你 知道 。

Spans:
Span 1-2:  他 => 他
Span 14-15:  你 => 你
Span 2-3:  又 => 又
Span 11-12:  好 => 好-04
Span 8-9:  将 => 将-01
Span 3-4:  振作 => 振作-01
Span 9-10:  是 => 是-04
Span 15-16:  知道 => 知道-01
Span 10-11:  蛮 => 蛮
Span 7-8:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 14-15:  你 => 你
Oracle Span 2-3:  又 => 又
Oracle Span 11-12:  好 => 好-01
Oracle Span 8-9:  将 => 将
Oracle Span 3-4:  振作 => 振作-01
Oracle Span 15-16:  知道 => 知道-01
Oracle Span 10-11:  蛮 => 蛮
Oracle Span 7-8:  这 => 这

Incorrect span: 好 => 好-04
Extra span: 是 => 是-04
Incorrect span: 将 => 将-01
Missing span: 好 => 好-01
Missing span: 将 => 将
Dependencies:
1	但是	_	AD	AD	_	4	advmod	_	_
2	他	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	振作	_	VV	VV	_	0	root	_	_
5	起来	_	VV	VV	_	4	ccomp	_	_
6	：	_	PU	PU	_	4	punct	_	_
7	“	_	PU	PU	_	10	punct	_	_
8	这	_	PN	PN	_	10	nsubj	_	_
9	将	_	AD	AD	_	10	advmod	_	_
10	是	_	VC	VC	_	4	conj	_	_
11	蛮	_	AD	AD	_	12	advmod	_	_
12	好	_	VA	VA	_	10	attr	_	_
13	的	_	DEC	DEC	_	12	cpm	_	_
14	,	_	PU	PU	_	4	punct	_	_
15	你	_	PN	PN	_	16	nsubj	_	_
16	知道	_	VV	VV	_	4	conj	_	_
17	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x10 / 振作-01, arg0, x11 / 他)
(x10 / 振作-01, manner, x12 / 又)
(x15 / 知道-01, arg0, x16 / 你)
(x15 / 知道-01, arg1, x20 / 好-01)
(x20 / 好-01, degree, x21 / 蛮)
(x20 / 好-01, domain, x22 / 这)
(x20 / 好-01, time, x23 / 将)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),知道,知道-01,false), Span(14,15,List(1),你,你,false), Span(11,12,List(2),好,好-04,false), Span(10,11,List(3),蛮,蛮,false), Span(9,10,List(4),是,是-04,false), Span(8,9,List(5),将,将-01,false), Span(7,8,List(6),这,这,false), Span(3,4,List(7),振作,振作-01,false), Span(2,3,List(8),又,又,false), Span(1,2,List(9),他,他,false)),Map(2 -> 好-04, 5 -> 将-01, 8 -> 又, 7 -> 振作-01, 1 -> 你, 4 -> 是-04, 6 -> 这, 9 -> 他, 0 -> 知道-01, 3 -> 蛮),Map(又 -> 又, 这 -> 这, 你 -> 你, 他 -> 他, 将 -> 将-01, 振 -> 振作-01, 好 -> 好-04, 蛮 -> 蛮, 知 -> 知道-01, 是 -> 是-04))),[Ljava.lang.String;@4cae66a8,Annotation([Ljava.lang.String;@60b616c8,[Ljava.lang.String;@3962ec84,[Ljava.lang.String;@147e0734),Annotation([Ljava.lang.String;@2bdab835,[Ljava.lang.String;@7b8aebd0,[Ledu.cmu.lti.nlp.amr.Dependency;@55222ee9),Annotation([Ljava.lang.String;@3181d4de,[Ljava.lang.String;@4f64d9cb,[Ljava.lang.String;@639c7f9c),Annotation([Ljava.lang.String;@270d5060,[Ljava.lang.String;@1815577b,[Ledu.cmu.lti.nlp.amr.Entity;@71567f33))
AMR:
(好 / 好-04, manner, 蛮 / 蛮)
(将 / 将-01, domain, 这 / 这)
(振 / 振作-01, manner, 又 / 又)
(振 / 振作-01, prep-into, 他 / 他)
(是 / 是-04, degree, 蛮 / 蛮)
(是 / 是-04, manner, 振 / 振作-01)
(是 / 是-04, time, 将 / 将-01)
(知 / 知道-01, snt5, 你 / 你)
(知 / 知道-01, time, 好 / 好-04)

Decoded in 28,681 microseconds
Sentence: 我 也 一定 会 看 星星 的 。

Spans:
Span 2-3:  一定 => 一定
Span 1-2:  也 => 也
Span 3-4:  会 => 会-03
Span 0-1:  我 => 我
Span 5-6:  星星 => 星星
Span 4-5:  看 => 看-10

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  一定 => 一定
Oracle Span 1-2:  也 => 也
Oracle Span 3-4:  会 => 会-02
Oracle Span 0-1:  我 => 我
Oracle Span 5-6:  星星 => 星星
Oracle Span 4-5:  看 => 看-02

Incorrect span: 看 => 看-10
Incorrect span: 会 => 会-03
Missing span: 会 => 会-02
Missing span: 看 => 看-02
Dependencies:
1	我	_	PN	PN	_	5	nsubj	_	_
2	也	_	AD	AD	_	5	advmod	_	_
3	一定	_	AD	AD	_	5	advmod	_	_
4	会	_	VV	VV	_	5	mmod	_	_
5	看	_	VV	VV	_	0	root	_	_
6	星星	_	NN	NN	_	5	dobj	_	_
7	的	_	SP	SP	_	5	dep	_	_
8	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x11 / 看-02, arg0, x12 / 我)
(x11 / 看-02, arg1, x13 / 星星)
(x5 / 一定, arg1, x7 / 会-02)
(x7 / 会-02, arg0, x11 / 看-02)
(x7 / 会-02, manner, x14 / 也)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),星星,星星,false), Span(4,5,List(1),看,看-10,false), Span(3,4,List(2),会,会-03,false), Span(2,3,List(3),一定,一定,false), Span(1,2,List(4),也,也,false), Span(0,1,List(5),我,我,false)),Map(2 -> 会-03, 5 -> 我, 1 -> 看-10, 4 -> 也, 0 -> 星星, 3 -> 一定),Map(星 -> 星星, 我 -> 我, 也 -> 也, 会 -> 会-03, 看 -> 看-10, 一 -> 一定))),[Ljava.lang.String;@71369e1a,Annotation([Ljava.lang.String;@3cf55e0c,[Ljava.lang.String;@ee96866,[Ljava.lang.String;@4c04216f),Annotation([Ljava.lang.String;@987a0bb,[Ljava.lang.String;@1f949ab9,[Ledu.cmu.lti.nlp.amr.Dependency;@5a7b6b75),Annotation([Ljava.lang.String;@3719360c,[Ljava.lang.String;@3afca2c,[Ljava.lang.String;@3855d9b2),Annotation([Ljava.lang.String;@39f42d0e,[Ljava.lang.String;@47a3d56a,[Ledu.cmu.lti.nlp.amr.Entity;@3a209918))
AMR:
(一 / 一定, degree, 会 / 会-03)
(会 / 会-03, manner, 也 / 也)
(会 / 会-03, op, 看 / 看-10)
(看 / 看-10, location, 我 / 我)
(看 / 看-10, quant, 星 / 星星)

Decoded in 13,805 microseconds
Sentence: 所有 的 星星 都 将 是 带有 生 了 锈 的 辘轳 的 井 。

Spans:
Span 13-14:  井 => 井
Span 4-5:  将 => 将-01
Span 6-7:  带有 => 带有-01
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 5-6:  是 => 是-04
Span 7-8:  生 => 生-02
Span 11-12:  辘轳 => 辘轳
Span 3-4:  都 => 都
Span 9-10:  锈 => 锈

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 13-14:  井 => 井
Oracle Span 4-5:  将 => 将
Oracle Span 6-7:  带有 => 带有-01
Oracle Span 0-1:  所有 => 所有
Oracle Span 2-3:  星星 => 星星
Oracle Span 7-8:  生 => 生-02
Oracle Span 11-12:  辘轳 => 辘轳
Oracle Span 9-10:  锈 => 锈

Extra span: 是 => 是-04
Incorrect span: 将 => 将-01
Extra span: 都 => 都
Missing span: 将 => 将
Dependencies:
1	所有	_	DT	DT	_	3	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	星星	_	NN	NN	_	6	nsubj	_	_
4	都	_	AD	AD	_	6	advmod	_	_
5	将	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	0	root	_	_
7	带有	_	VV	VV	_	14	rcmod	_	_
8	生	_	VV	VV	_	12	rcmod	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	锈	_	NN	NN	_	8	dobj	_	_
11	的	_	DEC	DEC	_	8	cpm	_	_
12	辘轳	_	NN	NN	_	7	dobj	_	_
13	的	_	DEC	DEC	_	7	cpm	_	_
14	井	_	NN	NN	_	6	attr	_	_
15	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x0 / 井, domain, x8 / 星星)
(x0 / 井, time, x10 / 将)
(x4 / 带有-01, arg0, x0 / 井)
(x4 / 带有-01, arg1, x5 / 辘轳)
(x6 / 生-02, arg0, x5 / 辘轳)
(x6 / 生-02, arg1, x7 / 锈)
(x8 / 星星, mod, x9 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),井,井,false), Span(11,12,List(1),辘轳,辘轳,false), Span(9,10,List(2),锈,锈,false), Span(7,8,List(3),生,生-02,false), Span(6,7,List(4),带有,带有-01,false), Span(5,6,List(5),是,是-04,false), Span(4,5,List(6),将,将-01,false), Span(3,4,List(7),都,都,false), Span(2,3,List(8),星星,星星,false), Span(0,1,List(9),所有,所有,false)),Map(2 -> 锈, 5 -> 是-04, 8 -> 星星, 7 -> 都, 1 -> 辘轳, 4 -> 带有-01, 6 -> 将-01, 9 -> 所有, 0 -> 井, 3 -> 生-02),Map(辘 -> 辘轳, 星 -> 星星, 生 -> 生-02, 井 -> 井, 所 -> 所有, 将 -> 将-01, 带 -> 带有-01, 锈 -> 锈, 都 -> 都, 是 -> 是-04))),[Ljava.lang.String;@2cae5fa7,Annotation([Ljava.lang.String;@34aa8b61,[Ljava.lang.String;@6d7b001b,[Ljava.lang.String;@532dacf5),Annotation([Ljava.lang.String;@da09250,[Ljava.lang.String;@6d31f106,[Ledu.cmu.lti.nlp.amr.Dependency;@587f4f63),Annotation([Ljava.lang.String;@660b1a9d,[Ljava.lang.String;@6fb0261e,[Ljava.lang.String;@d6b532f),Annotation([Ljava.lang.String;@2f4d01b6,[Ljava.lang.String;@112c2930,[Ledu.cmu.lti.nlp.amr.Entity;@7f426ddd))
AMR:
(井 / 井, domain, 星 / 星星)
(井 / 井, time, 将 / 将-01)
(井 / 井, time, 都 / 都)
(带 / 带有-01, ARG1, 是 / 是-04)
(带 / 带有-01, subset, 辘 / 辘轳)
(星 / 星星, mod, 所 / 所有)
(是 / 是-04, manner, 将 / 将-01)
(生 / 生-02, mod, 锈 / 锈)
(生 / 生-02, snt11, 辘 / 辘轳)

Decoded in 30,297 microseconds
Sentence: 所有 的 星星 都 会 倒 水 给 我 喝 … ”

Spans:
Span 4-5:  会 => 会-03
Span 5-6:  倒 => 倒-02
Span 9-10:  喝 => (thing :arg1-of 喝-01)
Span 8-9:  我 => 我
Span 0-1:  所有 => 所有
Span 2-3:  星星 => 星星
Span 6-7:  水 => 水
Span 7-8:  给 => 给-02
Span 3-4:  都 => 都

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 我 还是 沉默不语 。

Spans:
Span 0-1:  我 => 我
Span 2-3:  沉默不语 => 沉默不语
Span 1-2:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  沉默不语 => 沉默不语
Oracle Span 1-2:  还是 => 还是

Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	还是	_	AD	AD	_	3	advmod	_	_
3	沉默不语	_	VV	VV	_	0	root	_	_
4	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x2 / 沉默不语, arg0, x4 / 我)
(x2 / 沉默不语, manner, x5 / 还是)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),沉默不语,沉默不语,false), Span(1,2,List(1),还是,还是,false), Span(0,1,List(2),我,我,false)),Map(2 -> 我, 1 -> 还是, 0 -> 沉默不语),Map(沉 -> 沉默不语, 我 -> 我, 还 -> 还是))),[Ljava.lang.String;@6fe04f2a,Annotation([Ljava.lang.String;@1f758e4f,[Ljava.lang.String;@733534f9,[Ljava.lang.String;@661e279d),Annotation([Ljava.lang.String;@beabd6b,[Ljava.lang.String;@38de5daf,[Ledu.cmu.lti.nlp.amr.Dependency;@621624b1),Annotation([Ljava.lang.String;@7523d5a1,[Ljava.lang.String;@2bfc2f8b,[Ljava.lang.String;@61853c7e),Annotation([Ljava.lang.String;@32e5af53,[Ljava.lang.String;@5980fa73,[Ledu.cmu.lti.nlp.amr.Entity;@13ca16bf))
AMR:
(沉 / 沉默不语, manner, 还 / 还是)
(沉 / 沉默不语, month, 我 / 我)

Decoded in 4,525 microseconds
Sentence: “ 这 将 是 多么 好玩 啊 ！

Spans:
Span 6-7:  啊 => 啊
Span 4-5:  多么 => 多么
Span 5-6:  好玩 => 好玩-01
Span 2-3:  将 => 将-01
Span 3-4:  是 => 是-04
Span 1-2:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  多么 => 多么
Oracle Span 5-6:  好玩 => 好玩-01
Oracle Span 1-2:  这 => 这

Extra span: 啊 => 啊
Extra span: 是 => 是-04
Extra span: 将 => 将-01
Dependencies:
1	“	_	PU	PU	_	4	punct	_	_
2	这	_	PN	PN	_	4	nsubj	_	_
3	将	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	多么	_	NN	NN	_	6	nn	_	_
6	好玩	_	NN	NN	_	4	attr	_	_
7	啊	_	SP	SP	_	4	dep	_	_
8	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 好玩-01, arg0, x10 / 这)
(x8 / 好玩-01, degree, x9 / 多么)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),啊,啊,false), Span(5,6,List(1),好玩,好玩-01,false), Span(4,5,List(2),多么,多么,false), Span(3,4,List(3),是,是-04,false), Span(2,3,List(4),将,将-01,false), Span(1,2,List(5),这,这,false)),Map(2 -> 多么, 5 -> 这, 1 -> 好玩-01, 4 -> 将-01, 0 -> 啊, 3 -> 是-04),Map(啊 -> 啊, 这 -> 这, 将 -> 将-01, 多 -> 多么, 好 -> 好玩-01, 是 -> 是-04))),[Ljava.lang.String;@5be4be74,Annotation([Ljava.lang.String;@44641d6c,[Ljava.lang.String;@1ae924f1,[Ljava.lang.String;@59d5a6fd),Annotation([Ljava.lang.String;@27bcb4ad,[Ljava.lang.String;@4357524b,[Ledu.cmu.lti.nlp.amr.Dependency;@104a287c),Annotation([Ljava.lang.String;@64dc86c6,[Ljava.lang.String;@26874f2c,[Ljava.lang.String;@5f3b84bd),Annotation([Ljava.lang.String;@1e734eee,[Ljava.lang.String;@1e191150,[Ledu.cmu.lti.nlp.amr.Entity;@2fbd390))
AMR:
(啊 / 啊, degree, 好 / 好玩-01)
(好 / 好玩-01, degree, 多 / 多么)
(将 / 将-01, mod, 这 / 这)
(是 / 是-04, degree, 多 / 多么)
(是 / 是-04, time, 将 / 将-01)

Decoded in 12,917 microseconds
Sentence: 你 将 有 五亿 个 铃铛 ， 我 将 有 五亿 口 水井 … ”

Spans:
Span 0-1:  你 => 你
Span 8-9:  将 => 将-01
Span 1-2:  将 => 将-01
Span 7-8:  我 => 我
Span 9-10:  有 => 有-06
Span 2-3:  有 => 有-06
Span 12-13:  水井 => 水井
Span 5-6:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你 => 你
Oracle Span 1-2:  将 => 将
Oracle Span 8-9:  将 => 将
Oracle Span 7-8:  我 => 我
Oracle Span 2-3:  有 => 有-01
Oracle Span 9-10:  有 => 有-01
Oracle Span 12-13:  水井 => 水井
Oracle Span 5-6:  铃铛 => 铃铛

Incorrect span: 有 => 有-06
Incorrect span: 将 => 将-01
Incorrect span: 有 => 有-06
Incorrect span: 将 => 将-01
Missing span: 有 => 有-01
Missing span: 将 => 将
Missing span: 有 => 有-01
Missing span: 将 => 将
Dependencies:
1	你	_	PN	PN	_	3	nsubj	_	_
2	将	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	五亿	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	6	clf	_	_
6	铃铛	_	NN	NN	_	3	dobj	_	_
7	,	_	PU	PU	_	3	punct	_	_
8	我	_	PN	PN	_	10	nsubj	_	_
9	将	_	AD	AD	_	10	advmod	_	_
10	有	_	VE	VE	_	3	conj	_	_
11	五亿	_	CD	CD	_	12	nummod	_	_
12	口	_	M	M	_	13	clf	_	_
13	水井	_	NN	NN	_	10	dobj	_	_
14	…	_	PU	PU	_	3	punct	_	_
15	”	_	PU	PU	_	3	punct	_	_

Oracle:
(x15 / 有-01, arg0, x16 / 你)
(x15 / 有-01, arg1, x17 / 铃铛)
(x15 / 有-01, time, x23 / 将)
(x19 / 有-01, arg0, x20 / 我)
(x19 / 有-01, arg1, x21 / 水井)
(x19 / 有-01, time, x24 / 将)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),水井,水井,false), Span(9,10,List(1),有,有-06,false), Span(8,9,List(2),将,将-01,false), Span(7,8,List(3),我,我,false), Span(5,6,List(4),铃铛,铃铛,false), Span(2,3,List(5),有,有-06,false), Span(1,2,List(6),将,将-01,false), Span(0,1,List(7),你,你,false)),Map(2 -> 将-01, 5 -> 有-06, 7 -> 你, 1 -> 有-06, 4 -> 铃铛, 6 -> 将-01, 0 -> 水井, 3 -> 我),Map(有2 -> 有-06, 我 -> 我, 将2 -> 将-01, 你 -> 你, 水 -> 水井, 将 -> 将-01, 铃 -> 铃铛, 有 -> 有-06))),[Ljava.lang.String;@166b11e,Annotation([Ljava.lang.String;@5e68be2,[Ljava.lang.String;@5323999f,[Ljava.lang.String;@f18b738),Annotation([Ljava.lang.String;@3bc20984,[Ljava.lang.String;@aca3c85,[Ledu.cmu.lti.nlp.amr.Dependency;@45eab322),Annotation([Ljava.lang.String;@f017dd0,[Ljava.lang.String;@2424cb9d,[Ljava.lang.String;@7f51f588),Annotation([Ljava.lang.String;@6fb22ae3,[Ljava.lang.String;@6bd92538,[Ledu.cmu.lti.nlp.amr.Entity;@69a373fd))
AMR:
(将 / 将-01, quant, 我 / 我)
(将2 / 将-01, quant, 你 / 你)
(有 / 有-06, location, 水 / 水井)
(有 / 有-06, manner, 铃 / 铃铛)
(有 / 有-06, time, 将 / 将-01)
(有2 / 有-06, time, 将2 / 将-01)
(铃 / 铃铛, quant, 有2 / 有-06)

Decoded in 20,003 microseconds
Sentence: 这时 ， 他 也 沉默 了 ， 因为 他 在 哭 。

Spans:
Span 3-4:  也 => 也
Span 8-9:  他 => 他
Span 2-3:  他 => 他
Span 10-11:  哭 => 哭-01
Span 9-10:  在 => 在-01
Span 4-5:  沉默 => 沉默-01
Span 0-1:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  也 => 也
Oracle Span 2-3:  他 => 他
Oracle Span 10-11:  哭 => 哭-01
Oracle Span 4-5:  沉默 => 沉默-01
Oracle Span 0-1:  这时 => 这时

Extra span: 在 => 在-01
Extra span: 他 => 他
Dependencies:
1	这时	_	AD	AD	_	5	advmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	他	_	PN	PN	_	5	nsubj	_	_
4	也	_	AD	AD	_	5	advmod	_	_
5	沉默	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	,	_	PU	PU	_	5	punct	_	_
8	因为	_	P	P	_	5	prep	_	_
9	他	_	PN	PN	_	11	nsubj	_	_
10	在	_	AD	AD	_	11	advmod	_	_
11	哭	_	VV	VV	_	8	pccomp	_	_
12	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 沉默-01, arg0, x2 / 他)
(x0 / 沉默-01, cause, x3 / 哭-01)
(x0 / 沉默-01, manner, x6 / 也)
(x0 / 沉默-01, time, x5 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),哭,哭-01,false), Span(9,10,List(1),在,在-01,false), Span(8,9,List(2),他,他,false), Span(4,5,List(3),沉默,沉默-01,false), Span(3,4,List(4),也,也,false), Span(2,3,List(5),他,他,false), Span(0,1,List(6),这时,这时,false)),Map(2 -> 他, 5 -> 他, 1 -> 在-01, 4 -> 也, 6 -> 这时, 0 -> 哭-01, 3 -> 沉默-01),Map(哭 -> 哭-01, 他2 -> 他, 沉 -> 沉默-01, 在 -> 在-01, 也 -> 也, 这 -> 这时, 他 -> 他))),[Ljava.lang.String;@19ae36f4,Annotation([Ljava.lang.String;@6735f210,[Ljava.lang.String;@4567fb2b,[Ljava.lang.String;@372954e1),Annotation([Ljava.lang.String;@5fd8dd66,[Ljava.lang.String;@173511ff,[Ledu.cmu.lti.nlp.amr.Dependency;@6df11e91),Annotation([Ljava.lang.String;@1002d192,[Ljava.lang.String;@9281d19,[Ljava.lang.String;@36ad5f2a),Annotation([Ljava.lang.String;@53cddaf8,[Ljava.lang.String;@55c50f52,[Ledu.cmu.lti.nlp.amr.Entity;@1ccc1026))
AMR:
(哭 / 哭-01, ARG6, 他 / 他)
(哭 / 哭-01, manner, 在 / 在-01)
(沉 / 沉默-01, ARG6, 他2 / 他)
(沉 / 沉默-01, direction, 哭 / 哭-01)
(沉 / 沉默-01, manner, 也 / 也)
(沉 / 沉默-01, time, 这 / 这时)

Decoded in 18,837 microseconds
Sentence: “ 就 是 这儿 。

Spans:
Span 1-2:  就 => 就-01
Span 2-3:  是 => 是-04
Span 3-4:  这儿 => 这儿

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  就 => 就
Oracle Span 3-4:  这儿 => 这儿

Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Missing span: 就 => 就
Dependencies:
1	“	_	PU	PU	_	3	punct	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	这儿	_	PN	PN	_	3	attr	_	_
5	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x5 / 这儿, manner, x6 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),这儿,这儿,false), Span(2,3,List(1),是,是-04,false), Span(1,2,List(2),就,就-01,false)),Map(2 -> 就-01, 1 -> 是-04, 0 -> 这儿),Map(就 -> 就-01, 这 -> 这儿, 是 -> 是-04))),[Ljava.lang.String;@4044589a,Annotation([Ljava.lang.String;@7de35070,[Ljava.lang.String;@216f01,[Ljava.lang.String;@7c901203),Annotation([Ljava.lang.String;@1e721583,[Ljava.lang.String;@79f5a6ed,[Ledu.cmu.lti.nlp.amr.Dependency;@722787b5),Annotation([Ljava.lang.String;@edb83f8,[Ljava.lang.String;@8b41ad,[Ljava.lang.String;@541d4d9f),Annotation([Ljava.lang.String;@1a497286,[Ljava.lang.String;@48dff674,[Ledu.cmu.lti.nlp.amr.Entity;@120350eb))
AMR:
(是 / 是-04, location, 这 / 这儿)
(是 / 是-04, manner, 就 / 就-01)

Decoded in 3,917 microseconds
Sentence: 让 我 自个儿 走 一 步 吧 。 ”

Spans:
Span 1-2:  我 => 我
Span 5-6:  步 => 步
Span 0-1:  让 => 让-01
Span 3-4:  走 => 走-05

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  让 => 让-02
Oracle Span 3-4:  走 => 走-01

Extra span: 步 => 步
Incorrect span: 走 => 走-05
Incorrect span: 让 => 让-01
Missing span: 让 => 让-02
Missing span: 走 => 走-01
Dependencies:
1	让	_	VV	VV	_	0	root	_	_
2	我	_	PN	PN	_	1	dobj	_	_
3	自个儿	_	AD	AD	_	4	advmod	_	_
4	走	_	VV	VV	_	1	dep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	步	_	M	M	_	4	range	_	_
7	吧	_	SP	SP	_	1	dep	_	_
8	。	_	PU	PU	_	1	punct	_	_
9	”	_	PU	PU	_	1	punct	_	_

Oracle:
(x17 / 让-02, arg2, x18 / 我)
(x17 / 让-02, arg2, x19 / 走-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),步,步,false), Span(3,4,List(1),走,走-05,false), Span(1,2,List(2),我,我,false), Span(0,1,List(3),让,让-01,false)),Map(2 -> 我, 1 -> 走-05, 0 -> 步, 3 -> 让-01),Map(我 -> 我, 走 -> 走-05, 让 -> 让-01, 步 -> 步))),[Ljava.lang.String;@2ccc9681,Annotation([Ljava.lang.String;@7d401cdc,[Ljava.lang.String;@4a9b3956,[Ljava.lang.String;@4217bce6),Annotation([Ljava.lang.String;@aa752bb,[Ljava.lang.String;@77fc19cf,[Ledu.cmu.lti.nlp.amr.Dependency;@643ecfef),Annotation([Ljava.lang.String;@1b31af02,[Ljava.lang.String;@2bb31455,[Ljava.lang.String;@3c16528d),Annotation([Ljava.lang.String;@2e45a357,[Ljava.lang.String;@389a5022,[Ledu.cmu.lti.nlp.amr.Entity;@bb8ead8))
AMR:
(步 / 步, mod, 走 / 走-05)
(让 / 让-01, prep-through, 我 / 我)
(让 / 让-01, prep-through, 走 / 走-05)

Decoded in 6,166 microseconds
Sentence: 他 这时 坐 下来 ， 因为 他 害怕 了 。

Spans:
Span 3-4:  下来 => 下来-02
Span 6-7:  他 => 他
Span 0-1:  他 => 他
Span 2-3:  坐 => 坐-03
Span 7-8:  害怕 => 害怕-01
Span 1-2:  这时 => 这时

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 7-8:  害怕 => 害怕-01
Oracle Span 1-2:  这时 => 这时

Extra span: 他 => 他
Extra span: 下来 => 下来-02
Incorrect span: 坐 => 坐-03
Missing span: 坐 => 坐-01
Dependencies:
1	他	_	PN	PN	_	3	nsubj	_	_
2	这时	_	AD	AD	_	3	advmod	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	下来	_	VV	VV	_	3	comod	_	_
5	,	_	PU	PU	_	3	punct	_	_
6	因为	_	P	P	_	8	prep	_	_
7	他	_	PN	PN	_	6	pobj	_	_
8	害怕	_	VV	VV	_	3	conj	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x2 / 他)
(x0 / 坐-01, cause, x3 / 害怕-01)
(x0 / 坐-01, time, x6 / 这时)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),害怕,害怕-01,false), Span(6,7,List(1),他,他,false), Span(3,4,List(2),下来,下来-02,false), Span(2,3,List(3),坐,坐-03,false), Span(1,2,List(4),这时,这时,false), Span(0,1,List(5),他,他,false)),Map(2 -> 下来-02, 5 -> 他, 1 -> 他, 4 -> 这时, 0 -> 害怕-01, 3 -> 坐-03),Map(他2 -> 他, 这 -> 这时, 害 -> 害怕-01, 下 -> 下来-02, 他 -> 他, 坐 -> 坐-03))),[Ljava.lang.String;@5b44318,Annotation([Ljava.lang.String;@6e807e2,[Ljava.lang.String;@6c995c5d,[Ljava.lang.String;@203b953c),Annotation([Ljava.lang.String;@730bea0,[Ljava.lang.String;@41a16eb3,[Ledu.cmu.lti.nlp.amr.Dependency;@677cb96e),Annotation([Ljava.lang.String;@1b1252c8,[Ljava.lang.String;@19d53ab4,[Ljava.lang.String;@53cb0bcb),Annotation([Ljava.lang.String;@51fe7f15,[Ljava.lang.String;@5873f3f0,[Ledu.cmu.lti.nlp.amr.Entity;@684372d0))
AMR:
(下 / 下来-02, ARG4, 害 / 害怕-01)
(他2 / 他, ARG3, 下 / 下来-02)
(坐 / 坐-03, direction, 下 / 下来-02)
(坐 / 坐-03, time, 这 / 这时)
(害 / 害怕-01, location, 他 / 他)

Decoded in 14,020 microseconds
Sentence: 他 却 仍然 说道 ： “ 你 知道 … 我 的 花 …

Spans:
Span 2-3:  仍然 => 仍然
Span 0-1:  他 => 他
Span 6-7:  你 => 你
Span 9-10:  我 => 我
Span 7-8:  知道 => 知道-01
Span 11-12:  花 => 花-01
Span 3-4:  说道 => 说道

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  仍然 => 仍然
Oracle Span 0-1:  他 => 他
Oracle Span 6-7:  你 => 你
Oracle Span 7-8:  知道 => 知道-01
Oracle Span 11-12:  花 => 花
Oracle Span 3-4:  说道 => 说道-01

Incorrect span: 花 => 花-01
Extra span: 我 => 我
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 花 => 花
Dependencies:
1	他	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	仍然	_	AD	AD	_	4	advmod	_	_
4	说道	_	VV	VV	_	0	root	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	“	_	PU	PU	_	4	punct	_	_
7	你	_	PN	PN	_	8	nsubj	_	_
8	知道	_	VV	VV	_	4	ccomp	_	_
9	…	_	VV	VV	_	8	ccomp	_	_
10	我	_	PN	PN	_	13	assmod	_	_
11	的	_	DEG	DEG	_	10	assm	_	_
12	花	_	NN	NN	_	13	nn	_	_
13	…	_	NN	NN	_	9	dobj	_	_

Oracle:
(x10 / 说道-01, arg0, x11 / 他)
(x10 / 说道-01, arg1, x13 / 知道-01)
(x10 / 说道-01, manner, x12 / 仍然)
(x13 / 知道-01, arg0, x14 / 你)
(x13 / 知道-01, arg1, x15 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),花,花-01,false), Span(9,10,List(1),我,我,false), Span(7,8,List(2),知道,知道-01,false), Span(6,7,List(3),你,你,false), Span(3,4,List(4),说道,说道,false), Span(2,3,List(5),仍然,仍然,false), Span(0,1,List(6),他,他,false)),Map(2 -> 知道-01, 5 -> 仍然, 1 -> 我, 4 -> 说道, 6 -> 他, 0 -> 花-01, 3 -> 你),Map(我 -> 我, 你 -> 你, 他 -> 他, 仍 -> 仍然, 花 -> 花-01, 说 -> 说道, 知 -> 知道-01))),[Ljava.lang.String;@63dda940,Annotation([Ljava.lang.String;@41f964f9,[Ljava.lang.String;@652e345,[Ljava.lang.String;@7574d4ad),Annotation([Ljava.lang.String;@7bede4ea,[Ljava.lang.String;@713999c2,[Ledu.cmu.lti.nlp.amr.Dependency;@6060146b),Annotation([Ljava.lang.String;@33627576,[Ljava.lang.String;@27bc1d44,[Ljava.lang.String;@1af677f8),Annotation([Ljava.lang.String;@7a55fb81,[Ljava.lang.String;@5a3cf878,[Ledu.cmu.lti.nlp.amr.Entity;@1d2d8846))
AMR:
(仍 / 仍然, location, 他 / 他)
(我 / 我, location, 花 / 花-01)
(知 / 知道-01, quant, 你 / 你)
(知 / 知道-01, time, 说 / 说道)
(知 / 知道-01, topic, 花 / 花-01)
(说 / 说道, manner, 仍 / 仍然)

Decoded in 15,937 microseconds
Sentence: 我 是 要 对 她 负责 的 ！

Spans:
Span 4-5:  她 => 她
Span 3-4:  对 => 对-02
Span 0-1:  我 => 我
Span 1-2:  是 => 是-04
Span 2-3:  要 => 要-02
Span 5-6:  负责 => 负责-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  她 => 她
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  要 => 要-03
Oracle Span 5-6:  负责 => 负责-01

Extra span: 对 => 对-02
Incorrect span: 要 => 要-02
Extra span: 是 => 是-04
Missing span: 要 => 要-03
Dependencies:
1	我	_	PN	PN	_	2	top	_	_
2	是	_	VC	VC	_	0	root	_	_
3	要	_	VV	VV	_	6	mmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	她	_	PN	PN	_	4	pobj	_	_
6	负责	_	VV	VV	_	2	attr	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	！	_	PU	PU	_	2	punct	_	_

Oracle:
(x4 / 要-03, arg0, x6 / 负责-01)
(x6 / 负责-01, arg0, x7 / 我)
(x6 / 负责-01, arg1, x8 / 她)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),负责,负责-01,false), Span(4,5,List(1),她,她,false), Span(3,4,List(2),对,对-02,false), Span(2,3,List(3),要,要-02,false), Span(1,2,List(4),是,是-04,false), Span(0,1,List(5),我,我,false)),Map(2 -> 对-02, 5 -> 我, 1 -> 她, 4 -> 是-04, 0 -> 负责-01, 3 -> 要-02),Map(我 -> 我, 要 -> 要-02, 负 -> 负责-01, 对 -> 对-02, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@34cd65ac,Annotation([Ljava.lang.String;@61911947,[Ljava.lang.String;@5c53c235,[Ljava.lang.String;@2dcd0e41),Annotation([Ljava.lang.String;@7272ee51,[Ljava.lang.String;@1b409a79,[Ledu.cmu.lti.nlp.amr.Dependency;@5940b14e),Annotation([Ljava.lang.String;@1cba0321,[Ljava.lang.String;@795f6681,[Ljava.lang.String;@66d3b881),Annotation([Ljava.lang.String;@3a45afd4,[Ljava.lang.String;@762a10b6,[Ledu.cmu.lti.nlp.amr.Entity;@74431b9c))
AMR:
(对 / 对-02, prep-along-with, 负 / 负责-01)
(是 / 是-04, manner, 我 / 我)
(要 / 要-02, manner, 是 / 是-04)
(要 / 要-02, snt11, 对 / 对-02)
(负 / 负责-01, beneficiary, 她 / 她)

Decoded in 10,066 microseconds
Sentence: 而 她 又 是 那么 弱小 ！

Spans:
Span 2-3:  又 => 又
Span 1-2:  她 => 她
Span 5-6:  弱小 => 弱小-01
Span 3-4:  是 => 是-04
Span 4-5:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  她 => 她
Oracle Span 5-6:  弱小 => 弱小
Oracle Span 4-5:  那么 => 那么

Incorrect span: 弱小 => 弱小-01
Extra span: 是 => 是-04
Missing span: 弱小 => 弱小
Dependencies:
1	而	_	AD	AD	_	4	advmod	_	_
2	她	_	PN	PN	_	4	nsubj	_	_
3	又	_	AD	AD	_	4	advmod	_	_
4	是	_	VC	VC	_	0	root	_	_
5	那么	_	AD	AD	_	6	advmod	_	_
6	弱小	_	VA	VA	_	4	ccomp	_	_
7	！	_	PU	PU	_	4	punct	_	_

Oracle:
(x8 / 弱小, degree, x12 / 那么)
(x8 / 弱小, domain, x9 / 她)
(x8 / 弱小, manner, x10 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),弱小,弱小-01,false), Span(4,5,List(1),那么,那么,false), Span(3,4,List(2),是,是-04,false), Span(2,3,List(3),又,又,false), Span(1,2,List(4),她,她,false)),Map(2 -> 是-04, 1 -> 那么, 4 -> 她, 0 -> 弱小-01, 3 -> 又),Map(又 -> 又, 弱 -> 弱小-01, 那 -> 那么, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@f2fb225,Annotation([Ljava.lang.String;@1883871b,[Ljava.lang.String;@3e0a9b1d,[Ljava.lang.String;@52f9e8bb),Annotation([Ljava.lang.String;@2035d65b,[Ljava.lang.String;@240a2619,[Ledu.cmu.lti.nlp.amr.Dependency;@4e3283f6),Annotation([Ljava.lang.String;@539316bb,[Ljava.lang.String;@5d1a859c,[Ljava.lang.String;@28554ac8),Annotation([Ljava.lang.String;@72224107,[Ljava.lang.String;@394fb736,[Ledu.cmu.lti.nlp.amr.Entity;@3070f3e6))
AMR:
(弱 / 弱小-01, degree, 那 / 那么)
(是 / 是-04, degree, 她 / 她)
(是 / 是-04, degree, 那 / 那么)
(是 / 是-04, manner, 又 / 又)

Decoded in 7,427 microseconds
Sentence: 她 又 是 那么 天真 。

Spans:
Span 1-2:  又 => 又
Span 4-5:  天真 => 天真-01
Span 0-1:  她 => 她
Span 2-3:  是 => 是-04
Span 3-4:  那么 => 那么

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  又 => 又
Oracle Span 4-5:  天真 => 天真-01
Oracle Span 0-1:  她 => 她
Oracle Span 3-4:  那么 => 那么

Extra span: 是 => 是-04
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	又	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	那么	_	AD	AD	_	5	advmod	_	_
5	天真	_	VA	VA	_	3	ccomp	_	_
6	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 天真-01, degree, x5 / 那么)
(x0 / 天真-01, domain, x3 / 她)
(x0 / 天真-01, manner, x4 / 又)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),天真,天真-01,false), Span(3,4,List(1),那么,那么,false), Span(2,3,List(2),是,是-04,false), Span(1,2,List(3),又,又,false), Span(0,1,List(4),她,她,false)),Map(2 -> 是-04, 1 -> 那么, 4 -> 她, 0 -> 天真-01, 3 -> 又),Map(又 -> 又, 天 -> 天真-01, 那 -> 那么, 是 -> 是-04, 她 -> 她))),[Ljava.lang.String;@3271ec2a,Annotation([Ljava.lang.String;@52bba91a,[Ljava.lang.String;@1689527c,[Ljava.lang.String;@21516c88),Annotation([Ljava.lang.String;@1c7cd434,[Ljava.lang.String;@13004dd8,[Ledu.cmu.lti.nlp.amr.Dependency;@4fc6e776),Annotation([Ljava.lang.String;@65d9e72a,[Ljava.lang.String;@1f7e52d1,[Ljava.lang.String;@e01a26b),Annotation([Ljava.lang.String;@7604198a,[Ljava.lang.String;@5cce40d7,[Ledu.cmu.lti.nlp.amr.Entity;@314b7945))
AMR:
(天 / 天真-01, degree, 那 / 那么)
(天 / 天真-01, domain, 她 / 她)
(是 / 是-04, ARG1, 那 / 那么)
(是 / 是-04, manner, 又 / 又)

Decoded in 7,943 microseconds
Sentence: 她 只 有 四 根 微不足道 的 刺 ， 保护 自己 ， 抵抗 外敌 … ”

Spans:
Span 9-10:  保护 => 保护-01
Span 7-8:  刺 => 刺-01
Span 1-2:  只 => 只
Span 13-14:  外敌 => 外敌
Span 0-1:  她 => 她
Span 5-6:  微不足道 => 微不足道-01
Span 12-13:  抵抗 => 抵抗-01
Span 2-3:  有 => 有-06
Span 4-5:  根 => 根
Span 10-11:  自己 => 自己

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  保护 => 保护-01
Oracle Span 7-8:  刺 => 刺
Oracle Span 1-2:  只 => 只
Oracle Span 13-14:  外敌 => 外敌
Oracle Span 0-1:  她 => 她
Oracle Span 5-6:  微不足道 => 微不足道-01
Oracle Span 12-13:  抵抗 => 抵抗-01
Oracle Span 2-3:  有 => 有-01

Extra span: 自己 => 自己
Incorrect span: 刺 => 刺-01
Extra span: 根 => 根
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 刺 => 刺
Dependencies:
1	她	_	PN	PN	_	3	nsubj	_	_
2	只	_	AD	AD	_	3	advmod	_	_
3	有	_	VE	VE	_	0	root	_	_
4	四	_	CD	CD	_	5	nummod	_	_
5	根	_	M	M	_	8	clf	_	_
6	微不足道	_	VV	VV	_	8	rcmod	_	_
7	的	_	DEC	DEC	_	6	cpm	_	_
8	刺	_	NN	NN	_	3	dobj	_	_
9	,	_	PU	PU	_	3	punct	_	_
10	保护	_	VV	VV	_	3	conj	_	_
11	自己	_	PN	PN	_	10	dobj	_	_
12	,	_	PU	PU	_	3	punct	_	_
13	抵抗	_	VV	VV	_	3	conj	_	_
14	外敌	_	CD	CD	_	16	nummod	_	_
15	…	_	PU	PU	_	16	punct	_	_
16	”	_	CD	CD	_	13	range	_	_

Oracle:
(x26 / 有-01, arg0, x27 / 她)
(x26 / 有-01, arg1, x29 / 刺)
(x26 / 有-01, manner, x28 / 只)
(x29 / 刺, mod, x30 / 微不足道-01)
(x35 / 抵抗-01, arg1, x36 / 外敌)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),外敌,外敌,false), Span(12,13,List(1),抵抗,抵抗-01,false), Span(10,11,List(2),自己,自己,false), Span(9,10,List(3),保护,保护-01,false), Span(7,8,List(4),刺,刺-01,false), Span(5,6,List(5),微不足道,微不足道-01,false), Span(4,5,List(6),根,根,false), Span(2,3,List(7),有,有-06,false), Span(1,2,List(8),只,只,false), Span(0,1,List(9),她,她,false)),Map(2 -> 自己, 5 -> 微不足道-01, 8 -> 只, 7 -> 有-06, 1 -> 抵抗-01, 4 -> 刺-01, 6 -> 根, 9 -> 她, 0 -> 外敌, 3 -> 保护-01),Map(自 -> 自己, 刺 -> 刺-01, 根 -> 根, 抵 -> 抵抗-01, 保 -> 保护-01, 微 -> 微不足道-01, 只 -> 只, 她 -> 她, 有 -> 有-06, 外 -> 外敌))),[Ljava.lang.String;@32da97fd,Annotation([Ljava.lang.String;@64440065,[Ljava.lang.String;@4aa22cc2,[Ljava.lang.String;@2049e582),Annotation([Ljava.lang.String;@464aeb09,[Ljava.lang.String;@2c99c8d,[Ledu.cmu.lti.nlp.amr.Dependency;@59d6642a),Annotation([Ljava.lang.String;@365cef67,[Ljava.lang.String;@27df5806,[Ljava.lang.String;@69bc9584),Annotation([Ljava.lang.String;@3214bad,[Ljava.lang.String;@52d7ab79,[Ledu.cmu.lti.nlp.amr.Entity;@f95d64d))
AMR:
(保 / 保护-01, manner, 刺 / 刺-01)
(微 / 微不足道-01, degree, 有 / 有-06)
(微 / 微不足道-01, degree, 根 / 根)
(微 / 微不足道-01, prep-on, 刺 / 刺-01)
(抵 / 抵抗-01, degree, 自 / 自己)
(抵 / 抵抗-01, mode, 外 / 外敌)
(有 / 有-06, degree, 她 / 她)
(有 / 有-06, manner, 只 / 只)
(自 / 自己, mod, 保 / 保护-01)

Decoded in 30,343 microseconds
Sentence: 我 也 坐 了 下来 ， 因为 我 再 也 站立 不 住 了 。

Spans:
Span 4-5:  下来 => 下来-02
Span 11-12:  不 => 不
Span 9-10:  也 => 也
Span 1-2:  也 => 也
Span 12-13:  住 => 住-01
Span 8-9:  再 => 再
Span 2-3:  坐 => 坐-03
Span 7-8:  我 => 我
Span 0-1:  我 => 我
Span 10-11:  站立 => 站立-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  坐 => 坐-01
Oracle Span 0-1:  我 => 我
Oracle Span 10-11:  站立 => 站立-01

Extra span: 住 => 住-01
Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 再 => 再
Extra span: 我 => 我
Extra span: 下来 => 下来-02
Incorrect span: 坐 => 坐-03
Extra span: 也 => 也
Missing span: 坐 => 坐-01
Dependencies:
1	我	_	PN	PN	_	3	nsubj	_	_
2	也	_	AD	AD	_	3	advmod	_	_
3	坐	_	VV	VV	_	0	root	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	下来	_	VV	VV	_	3	dep	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	因为	_	P	P	_	13	prep	_	_
8	我	_	PN	PN	_	11	nsubj	_	_
9	再	_	AD	AD	_	11	advmod	_	_
10	也	_	AD	AD	_	11	advmod	_	_
11	站立	_	VV	VV	_	7	pccomp	_	_
12	不	_	AD	AD	_	13	neg	_	_
13	住	_	VV	VV	_	3	dep	_	_
14	了	_	AS	AS	_	13	asp	_	_
15	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 坐-01, arg0, x2 / 我)
(x0 / 坐-01, cause, x3 / 站立-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),住,住-01,false), Span(11,12,List(1),不,不,false), Span(10,11,List(2),站立,站立-01,false), Span(9,10,List(3),也,也,false), Span(8,9,List(4),再,再,false), Span(7,8,List(5),我,我,false), Span(4,5,List(6),下来,下来-02,false), Span(2,3,List(7),坐,坐-03,false), Span(1,2,List(8),也,也,false), Span(0,1,List(9),我,我,false)),Map(2 -> 站立-01, 5 -> 我, 8 -> 也, 7 -> 坐-03, 1 -> 不, 4 -> 再, 6 -> 下来-02, 9 -> 我, 0 -> 住-01, 3 -> 也),Map(站 -> 站立-01, 我 -> 我, 也 -> 也, 我2 -> 我, 下 -> 下来-02, 不 -> 不, 也2 -> 也, 坐 -> 坐-03, 再 -> 再, 住 -> 住-01))),[Ljava.lang.String;@288728e,Annotation([Ljava.lang.String;@b7d2d51,[Ljava.lang.String;@641ed324,[Ljava.lang.String;@45984654),Annotation([Ljava.lang.String;@4c5406b,[Ljava.lang.String;@66b0e207,[Ledu.cmu.lti.nlp.amr.Dependency;@74a58a06),Annotation([Ljava.lang.String;@7308c820,[Ljava.lang.String;@5d601832,[Ljava.lang.String;@3ca17943),Annotation([Ljava.lang.String;@640c216b,[Ljava.lang.String;@5170bc02,[Ledu.cmu.lti.nlp.amr.Entity;@c0c8f96))
AMR:
(下 / 下来-02, manner, 坐 / 坐-03)
(住 / 住-01, ARG4, 站 / 站立-01)
(住 / 住-01, manner, 不 / 不)
(住 / 住-01, time, 下 / 下来-02)
(坐 / 坐-03, beneficiary, 我2 / 我)
(坐 / 坐-03, manner, 也2 / 也)
(站 / 站立-01, manner, 也 / 也)
(站 / 站立-01, manner, 再 / 再)
(站 / 站立-01, op, 我 / 我)

Decoded in 27,829 microseconds
Sentence: 他 说道 ： “ 就 是 这些 … 全 都 说 啦 … ”

Spans:
Span 0-1:  他 => 他
Span 8-9:  全 => 全
Span 4-5:  就 => 就-01
Span 5-6:  是 => 是-04
Span 10-11:  说 => 说-02
Span 1-2:  说道 => 说道
Span 6-7:  这些 => 这些
Span 9-10:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  全 => 全
Oracle Span 4-5:  就 => 就
Oracle Span 10-11:  说 => 说-01
Oracle Span 1-2:  说道 => 说道-01
Oracle Span 6-7:  这些 => 这些

Incorrect span: 说 => 说-02
Extra span: 都 => 都
Extra span: 是 => 是-04
Incorrect span: 就 => 就-01
Incorrect span: 说道 => 说道
Missing span: 说道 => 说道-01
Missing span: 就 => 就
Missing span: 说 => 说-01
Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	说道	_	VV	VV	_	0	root	_	_
3	：	_	PU	PU	_	2	punct	_	_
4	“	_	PU	PU	_	6	punct	_	_
5	就	_	AD	AD	_	6	advmod	_	_
6	是	_	VC	VC	_	2	ccomp	_	_
7	这些	_	PN	PN	_	6	attr	_	_
8	…	_	PU	PU	_	12	punct	_	_
9	全	_	DT	DT	_	12	det	_	_
10	都	_	AD	AD	_	11	advmod	_	_
11	说	_	VV	VV	_	12	rcmod	_	_
12	啦	_	NN	NN	_	7	prnmod	_	_
13	…	_	PU	PU	_	12	punct	_	_
14	”	_	PU	PU	_	6	punct	_	_
15	他	_	PN	PN	_	6	xsubj	_	_

Oracle:
(x0 / 说道-01, arg0, x2 / 他)
(x7 / 这些, manner, x8 / 就)
(x9 / 说-01, manner, x10 / 全)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),说,说-02,false), Span(9,10,List(1),都,都,false), Span(8,9,List(2),全,全,false), Span(6,7,List(3),这些,这些,false), Span(5,6,List(4),是,是-04,false), Span(4,5,List(5),就,就-01,false), Span(1,2,List(6),说道,说道,false), Span(0,1,List(7),他,他,false)),Map(2 -> 全, 5 -> 就-01, 7 -> 他, 1 -> 都, 4 -> 是-04, 6 -> 说道, 0 -> 说-02, 3 -> 这些),Map(就 -> 就-01, 说2 -> 说道, 这 -> 这些, 全 -> 全, 他 -> 他, 说 -> 说-02, 都 -> 都, 是 -> 是-04))),[Ljava.lang.String;@3bd08435,Annotation([Ljava.lang.String;@3e52ed5d,[Ljava.lang.String;@6a96d639,[Ljava.lang.String;@28e94c2),Annotation([Ljava.lang.String;@3d40498a,[Ljava.lang.String;@14d1737a,[Ledu.cmu.lti.nlp.amr.Dependency;@482a58c7),Annotation([Ljava.lang.String;@3e74fd84,[Ljava.lang.String;@147efd9,[Ljava.lang.String;@1e120628),Annotation([Ljava.lang.String;@4e4894d,[Ljava.lang.String;@1de5cc88,[Ledu.cmu.lti.nlp.amr.Entity;@23e2c1ca))
AMR:
(是 / 是-04, location, 这 / 这些)
(是 / 是-04, manner, 全 / 全)
(是 / 是-04, manner, 就 / 就-01)
(说 / 说-02, manner, 全 / 全)
(说 / 说-02, manner, 都 / 都)
(说2 / 说道, quant, 他 / 他)
(说2 / 说道, topic, 是 / 是-04)

Decoded in 18,872 microseconds
Sentence: 他 犹豫 了 一下 ， 然后 站 起来 。

Spans:
Span 0-1:  他 => 他
Span 1-2:  犹豫 => 犹豫-01
Span 6-7:  站 => 站-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 1-2:  犹豫 => 犹豫-01
Oracle Span 6-7:  站 => 站-01

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	犹豫	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一下	_	AD	AD	_	7	advmod	_	_
5	,	_	PU	PU	_	7	punct	_	_
6	然后	_	AD	AD	_	7	advmod	_	_
7	站	_	VV	VV	_	2	ccomp	_	_
8	起来	_	VV	VV	_	7	comod	_	_
9	。	_	PU	PU	_	2	punct	_	_
10	他	_	PN	PN	_	7	xsubj	_	_

Oracle:
(x8 / 犹豫-01, arg0, x9 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),站,站-01,false), Span(1,2,List(1),犹豫,犹豫-01,false), Span(0,1,List(2),他,他,false)),Map(2 -> 他, 1 -> 犹豫-01, 0 -> 站-01),Map(站 -> 站-01, 他 -> 他, 犹 -> 犹豫-01))),[Ljava.lang.String;@2d4fb0d8,Annotation([Ljava.lang.String;@dc1fadd,[Ljava.lang.String;@3ef3f661,[Ljava.lang.String;@baa9ce4),Annotation([Ljava.lang.String;@5b332439,[Ljava.lang.String;@59262a90,[Ledu.cmu.lti.nlp.amr.Dependency;@78479f2b),Annotation([Ljava.lang.String;@2755617b,[Ljava.lang.String;@65859b44,[Ljava.lang.String;@d9f5fce),Annotation([Ljava.lang.String;@49653791,[Ljava.lang.String;@45b7c97f,[Ledu.cmu.lti.nlp.amr.Entity;@c212536))
AMR:
(犹 / 犹豫-01, prep-following, 他 / 他)
(站 / 站-01, time, 犹 / 犹豫-01)

Decoded in 6,734 microseconds
Sentence: 他 迈出 了 一 步 。

Spans:
Span 0-1:  他 => 他
Span 4-5:  步 => 步

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  步 => 步

Dependencies:
1	他	_	PN	PN	_	2	nsubj	_	_
2	迈出	_	VV	VV	_	0	root	_	_
3	了	_	AS	AS	_	2	asp	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	步	_	M	M	_	2	dep	_	_
6	。	_	PU	PU	_	2	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),步,步,false), Span(0,1,List(1),他,他,false)),Map(1 -> 他, 0 -> 步),Map(他 -> 他, 步 -> 步))),[Ljava.lang.String;@7b377a53,Annotation([Ljava.lang.String;@1b0e031b,[Ljava.lang.String;@6009cd34,[Ljava.lang.String;@65844c96),Annotation([Ljava.lang.String;@25214797,[Ljava.lang.String;@4e5c8ef3,[Ledu.cmu.lti.nlp.amr.Dependency;@60928a61),Annotation([Ljava.lang.String;@27358a19,[Ljava.lang.String;@8077c97,[Ljava.lang.String;@22865072),Annotation([Ljava.lang.String;@563317c1,[Ljava.lang.String;@5d5d3a5c,[Ledu.cmu.lti.nlp.amr.Entity;@6e0d16a4))
AMR:
(步 / 步, part, 他 / 他)

Decoded in 3,183 microseconds
Sentence: 而 我 却 动弹不得 。

Spans:
Span 3-4:  动弹不得 => 动弹不得-01
Span 1-2:  我 => 我

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  动弹不得 => 动弹不得-01
Oracle Span 1-2:  我 => 我

Dependencies:
1	而	_	AD	AD	_	4	advmod	_	_
2	我	_	PN	PN	_	4	nsubj	_	_
3	却	_	AD	AD	_	4	advmod	_	_
4	动弹不得	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x6 / 动弹不得-01, arg0, x7 / 我)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),动弹不得,动弹不得-01,false), Span(1,2,List(1),我,我,false)),Map(1 -> 我, 0 -> 动弹不得-01),Map(我 -> 我, 动 -> 动弹不得-01))),[Ljava.lang.String;@7e18ced7,Annotation([Ljava.lang.String;@305b43ca,[Ljava.lang.String;@4601047,[Ljava.lang.String;@25e8e59),Annotation([Ljava.lang.String;@3a0896b3,[Ljava.lang.String;@50a7c72b,[Ledu.cmu.lti.nlp.amr.Dependency;@54c11750),Annotation([Ljava.lang.String;@221b77d7,[Ljava.lang.String;@5cd8d029,[Ljava.lang.String;@32a8ca06),Annotation([Ljava.lang.String;@6e8f2094,[Ljava.lang.String;@1753475d,[Ledu.cmu.lti.nlp.amr.Entity;@d108406))
AMR:
(动 / 动弹不得-01, beneficiary, 我 / 我)

Decoded in 3,219 microseconds
Sentence: 在 他 的 脚踝子骨 附近 ， 一 道 黄光 闪 了 一下 。

Spans:
Span 1-2:  他 => 他
Span 0-1:  在 => 在-01
Span 3-4:  脚踝子骨 => 脚踝子骨
Span 7-8:  道 => 道-01
Span 9-10:  闪 => 闪-01
Span 4-5:  附近 => 附近
Span 8-9:  黄光 => 黄光

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  他 => 他
Oracle Span 3-4:  脚踝子骨 => 脚踝子骨
Oracle Span 9-10:  闪 => 闪-01
Oracle Span 4-5:  附近 => 附近
Oracle Span 8-9:  黄光 => 黄光

Extra span: 道 => 道-01
Extra span: 在 => 在-01
Dependencies:
1	在	_	P	P	_	10	prep	_	_
2	他	_	PN	PN	_	5	assmod	_	_
3	的	_	DEG	DEG	_	2	assm	_	_
4	脚踝子骨	_	NN	NN	_	5	nn	_	_
5	附近	_	NN	NN	_	1	pobj	_	_
6	,	_	PU	PU	_	10	punct	_	_
7	一	_	CD	CD	_	8	nummod	_	_
8	道	_	NN	NN	_	9	nn	_	_
9	黄光	_	NN	NN	_	10	nsubj	_	_
10	闪	_	VV	VV	_	0	root	_	_
11	了	_	AS	AS	_	10	asp	_	_
12	一下	_	AD	AD	_	10	advmod	_	_
13	。	_	PU	PU	_	10	punct	_	_

Oracle:
(x0 / 闪-01, arg0, x2 / 黄光)
(x0 / 闪-01, location, x5 / 附近)
(x13 / 他, part, x8 / 脚踝子骨)
(x5 / 附近, location, x8 / 脚踝子骨)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),闪,闪-01,false), Span(8,9,List(1),黄光,黄光,false), Span(7,8,List(2),道,道-01,false), Span(4,5,List(3),附近,附近,false), Span(3,4,List(4),脚踝子骨,脚踝子骨,false), Span(1,2,List(5),他,他,false), Span(0,1,List(6),在,在-01,false)),Map(2 -> 道-01, 5 -> 他, 1 -> 黄光, 4 -> 脚踝子骨, 6 -> 在-01, 0 -> 闪-01, 3 -> 附近),Map(闪 -> 闪-01, 在 -> 在-01, 黄 -> 黄光, 他 -> 他, 脚 -> 脚踝子骨, 道 -> 道-01, 附 -> 附近))),[Ljava.lang.String;@799c8758,Annotation([Ljava.lang.String;@6e00837f,[Ljava.lang.String;@63e4484d,[Ljava.lang.String;@6a5dd083),Annotation([Ljava.lang.String;@77663cd7,[Ljava.lang.String;@1d17423f,[Ledu.cmu.lti.nlp.amr.Dependency;@5c70d7f0),Annotation([Ljava.lang.String;@582dcd35,[Ljava.lang.String;@1e6bd263,[Ljava.lang.String;@394a6d2b),Annotation([Ljava.lang.String;@635ff2a5,[Ljava.lang.String;@55adcf9e,[Ledu.cmu.lti.nlp.amr.Entity;@1515f782))
AMR:
(他 / 他, part, 脚 / 脚踝子骨)
(在 / 在-01, ARG5, 他 / 他)
(闪 / 闪-01, ARG2, 道 / 道-01)
(闪 / 闪-01, location, 附 / 附近)
(附 / 附近, location, 脚 / 脚踝子骨)
(黄 / 黄光, season, 道 / 道-01)

Decoded in 17,468 microseconds
Sentence: 刹那 间 他 一动 也 不 动 了 。

Spans:
Span 5-6:  不 => 不
Span 4-5:  也 => 也
Span 2-3:  他 => 他
Span 6-7:  动 => 动-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  他 => 他
Oracle Span 6-7:  动 => 动-01

Extra span: 不 => 不
Extra span: 也 => 也
Dependencies:
1	刹那	_	NN	NN	_	2	lobj	_	_
2	间	_	LC	LC	_	7	loc	_	_
3	他	_	PN	PN	_	7	nsubj	_	_
4	一动	_	CD	CD	_	7	nsubj	_	_
5	也	_	AD	AD	_	7	advmod	_	_
6	不	_	AD	AD	_	7	neg	_	_
7	动	_	VV	VV	_	0	root	_	_
8	了	_	AS	AS	_	7	asp	_	_
9	。	_	PU	PU	_	7	punct	_	_

Oracle:
(x0 / 动-01, arg0, x4 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),动,动-01,false), Span(5,6,List(1),不,不,false), Span(4,5,List(2),也,也,false), Span(2,3,List(3),他,他,false)),Map(2 -> 也, 1 -> 不, 0 -> 动-01, 3 -> 他),Map(也 -> 也, 他 -> 他, 动 -> 动-01, 不 -> 不))),[Ljava.lang.String;@7f5ce33e,Annotation([Ljava.lang.String;@638afcaa,[Ljava.lang.String;@58601e7a,[Ljava.lang.String;@62735b13),Annotation([Ljava.lang.String;@7aae1170,[Ljava.lang.String;@4ef5dd23,[Ledu.cmu.lti.nlp.amr.Dependency;@163e8949),Annotation([Ljava.lang.String;@6eede35e,[Ljava.lang.String;@64c25a62,[Ljava.lang.String;@43e8f1c),Annotation([Ljava.lang.String;@66a82a13,[Ljava.lang.String;@675ec28b,[Ledu.cmu.lti.nlp.amr.Entity;@11399548))
AMR:
(他 / 他, location, 不 / 不)
(动 / 动-01, manner, 不 / 不)
(动 / 动-01, manner, 也 / 也)

Decoded in 8,683 microseconds
Sentence: 他 没有 叫喊 。

Spans:
Span 0-1:  他 => 他
Span 2-3:  叫喊 => 叫喊-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 2-3:  叫喊 => 叫喊-01

Dependencies:
1	他	_	PN	PN	_	2	top	_	_
2	没有	_	VE	VE	_	0	root	_	_
3	叫喊	_	NN	NN	_	2	dobj	_	_
4	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x0 / 叫喊-01, arg0, x4 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),叫喊,叫喊-01,false), Span(0,1,List(1),他,他,false)),Map(1 -> 他, 0 -> 叫喊-01),Map(他 -> 他, 叫 -> 叫喊-01))),[Ljava.lang.String;@610fbe1c,Annotation([Ljava.lang.String;@46d0f89c,[Ljava.lang.String;@570b2057,[Ljava.lang.String;@a457c2b),Annotation([Ljava.lang.String;@16a6dc21,[Ljava.lang.String;@5773d271,[Ledu.cmu.lti.nlp.amr.Dependency;@59f45950),Annotation([Ljava.lang.String;@7871d261,[Ljava.lang.String;@58164e9a,[Ljava.lang.String;@11bfffb3),Annotation([Ljava.lang.String;@6a7a1a0d,[Ljava.lang.String;@1c6e3ff9,[Ledu.cmu.lti.nlp.amr.Entity;@76e6c070))
AMR:
(叫 / 叫喊-01, time, 他 / 他)

Decoded in 2,928 microseconds
Sentence: 他 轻轻 地 象 一 棵 树 一样 倒 在 地 上 ，

Spans:
Span 7-8:  一样 => 一样
Span 0-1:  他 => 他
Span 8-9:  倒 => 倒-02
Span 9-10:  在 => 在-01
Span 10-11:  地 => 地
Span 2-3:  地 => 地
Span 6-7:  树 => 树
Span 1-2:  轻轻 => 轻轻-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  他 => 他
Oracle Span 8-9:  倒 => 倒-01
Oracle Span 6-7:  树 => 树
Oracle Span 1-2:  轻轻 => 轻轻-01

Extra span: 地 => 地
Extra span: 在 => 在-01
Incorrect span: 倒 => 倒-02
Extra span: 一样 => 一样
Extra span: 地 => 地
Missing span: 倒 => 倒-01
Dependencies:
1	他	_	PN	PN	_	9	nsubj	_	_
2	轻轻	_	VA	VA	_	9	dvpmod	_	_
3	地	_	DEV	DEV	_	2	dvpm	_	_
4	象	_	P	P	_	8	prep	_	_
5	一	_	CD	CD	_	6	nummod	_	_
6	棵	_	NN	NN	_	7	nn	_	_
7	树	_	NN	NN	_	4	pobj	_	_
8	一样	_	VA	VA	_	9	dep	_	_
9	倒	_	VV	VV	_	0	root	_	_
10	在	_	P	P	_	9	prep	_	_
11	地	_	NN	NN	_	12	lobj	_	_
12	上	_	LC	LC	_	10	plmod	_	_
13	,	_	PU	PU	_	9	punct	_	_

Oracle:
(x24 / 倒-01, manner, x28 / 轻轻-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),地,地,false), Span(9,10,List(1),在,在-01,false), Span(8,9,List(2),倒,倒-02,false), Span(7,8,List(3),一样,一样,false), Span(6,7,List(4),树,树,false), Span(2,3,List(5),地,地,false), Span(1,2,List(6),轻轻,轻轻-01,false), Span(0,1,List(7),他,他,false)),Map(2 -> 倒-02, 5 -> 地, 7 -> 他, 1 -> 在-01, 4 -> 树, 6 -> 轻轻-01, 0 -> 地, 3 -> 一样),Map(地2 -> 地, 在 -> 在-01, 他 -> 他, 地 -> 地, 树 -> 树, 倒 -> 倒-02, 轻 -> 轻轻-01, 一 -> 一样))),[Ljava.lang.String;@184afb78,Annotation([Ljava.lang.String;@22da200e,[Ljava.lang.String;@4f26425b,[Ljava.lang.String;@f03ee8f),Annotation([Ljava.lang.String;@40dd552c,[Ljava.lang.String;@33f4c769,[Ledu.cmu.lti.nlp.amr.Dependency;@4ebd6fd6),Annotation([Ljava.lang.String;@5e5a8718,[Ljava.lang.String;@7404ddca,[Ljava.lang.String;@615e83ac),Annotation([Ljava.lang.String;@4438938e,[Ljava.lang.String;@4e50ae56,[Ledu.cmu.lti.nlp.amr.Entity;@1c68d0db))
AMR:
(一 / 一样, mod, 树 / 树)
(他 / 他, ARG4, 轻 / 轻轻-01)
(倒 / 倒-02, ARG3, 一 / 一样)
(倒 / 倒-02, manner, 轻 / 轻轻-01)
(在 / 在-01, ARG5, 倒 / 倒-02)
(地 / 地, manner, 在 / 在-01)
(轻 / 轻轻-01, ARG1, 地2 / 地)

Decoded in 19,162 microseconds
Sentence: 大概 由于 沙地 的 缘故 ， 连 一 点 响声 都 没有 。

Spans:
Span 9-10:  响声 => 响声
Span 0-1:  大概 => 大概
Span 2-3:  沙地 => 沙地
Span 8-9:  点 => 点
Span 4-5:  缘故 => 缘故
Span 10-11:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 9-10:  响声 => 响声
Oracle Span 0-1:  大概 => 大概
Oracle Span 2-3:  沙地 => 沙地

Extra span: 都 => 都
Extra span: 点 => 点
Extra span: 缘故 => 缘故
Dependencies:
1	大概	_	AD	AD	_	3	advmod	_	_
2	由于	_	CS	CS	_	3	advmod	_	_
3	沙地	_	VV	VV	_	5	rcmod	_	_
4	的	_	DEC	DEC	_	3	cpm	_	_
5	缘故	_	NN	NN	_	12	nsubj	_	_
6	,	_	PU	PU	_	12	punct	_	_
7	连	_	AD	AD	_	9	advmod	_	_
8	一	_	CD	CD	_	9	nummod	_	_
9	点	_	M	M	_	10	clf	_	_
10	响声	_	NN	NN	_	12	nsubj	_	_
11	都	_	AD	AD	_	12	advmod	_	_
12	没有	_	VE	VE	_	0	root	_	_
13	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x13 / 大概, arg0, x14 / 沙地)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),都,都,false), Span(9,10,List(1),响声,响声,false), Span(8,9,List(2),点,点,false), Span(4,5,List(3),缘故,缘故,false), Span(2,3,List(4),沙地,沙地,false), Span(0,1,List(5),大概,大概,false)),Map(2 -> 点, 5 -> 大概, 1 -> 响声, 4 -> 沙地, 0 -> 都, 3 -> 缘故),Map(大 -> 大概, 缘 -> 缘故, 点 -> 点, 沙 -> 沙地, 都 -> 都, 响 -> 响声))),[Ljava.lang.String;@9be7319,Annotation([Ljava.lang.String;@91a2543,[Ljava.lang.String;@42730828,[Ljava.lang.String;@18c7f6b5),Annotation([Ljava.lang.String;@629b780f,[Ljava.lang.String;@3af36922,[Ledu.cmu.lti.nlp.amr.Dependency;@609b041c),Annotation([Ljava.lang.String;@474e34e4,[Ljava.lang.String;@7e2c6702,[Ljava.lang.String;@5fb7ab9c),Annotation([Ljava.lang.String;@6734ff92,[Ljava.lang.String;@51eb0e84,[Ledu.cmu.lti.nlp.amr.Entity;@4ce267cc))
AMR:
(响 / 响声, ARG4, 点 / 点)
(响 / 响声, domain, 缘 / 缘故)
(大 / 大概, part, 沙 / 沙地)
(沙 / 沙地, mod, 缘 / 缘故)
(点 / 点, location, 都 / 都)

Decoded in 13,257 microseconds
Sentence: XXVII 。

Spans:
Span 0-1:  XXVII => XXVII

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  XXVII => XXVII

Dependencies:
1	XXVII	_	VV	VV	_	0	root	_	_
2	。	_	PU	PU	_	1	punct	_	_

Oracle:


Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),XXVII,XXVII,false)),Map(0 -> XXVII),Map(x -> XXVII))),[Ljava.lang.String;@2eebce87,Annotation([Ljava.lang.String;@6ee37ca7,[Ljava.lang.String;@6775c0d1,[Ljava.lang.String;@38f617f4),Annotation([Ljava.lang.String;@4899799b,[Ljava.lang.String;@3dea226b,[Ledu.cmu.lti.nlp.amr.Dependency;@74500e4f),Annotation([Ljava.lang.String;@7c91fe86,[Ljava.lang.String;@7fc7152e,[Ljava.lang.String;@13d289c7),Annotation([Ljava.lang.String;@6704df84,[Ljava.lang.String;@1412682c,[Ledu.cmu.lti.nlp.amr.Entity;@53bb71e5))
AMR:


Decoded in 1,163 microseconds
Sentence: 到 现在 ， 一点 不 错 ， 已经 有 六 年 了 …

Spans:
Span 3-4:  一点 => 一点
Span 4-5:  不 => 不
Span 0-1:  到 => 到-01
Span 7-8:  已经 => 已经
Span 10-11:  年 => 年
Span 8-9:  有 => 有-06
Span 1-2:  现在 => 现在
Span 5-6:  错 => 错-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  一点 => 一点
Oracle Span 0-1:  到 => 到-01
Oracle Span 10-11:  年 => 年
Oracle Span 8-9:  有 => 有-03
Oracle Span 1-2:  现在 => 现在
Oracle Span 5-6:  错 => 错-01

Incorrect span: 有 => 有-06
Extra span: 已经 => 已经
Extra span: 不 => 不
Missing span: 有 => 有-03
Dependencies:
1	到	_	P	P	_	6	prep	_	_
2	现在	_	NT	NT	_	1	pobj	_	_
3	,	_	PU	PU	_	6	punct	_	_
4	一点	_	AD	AD	_	6	advmod	_	_
5	不	_	AD	AD	_	6	neg	_	_
6	错	_	VA	VA	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	已经	_	AD	AD	_	9	advmod	_	_
9	有	_	VE	VE	_	6	dep	_	_
10	六	_	CD	CD	_	11	nummod	_	_
11	年	_	M	M	_	13	rcmod	_	_
12	了	_	SP	SP	_	11	dep	_	_
13	…	_	NN	NN	_	9	dobj	_	_

Oracle:
(x19 / 有-03, arg0, x21 / 到-01)
(x19 / 有-03, manner, x26 / 错-01)
(x21 / 到-01, arg1, x22 / 现在)
(x26 / 错-01, degree, x28 / 一点)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),年,年,false), Span(8,9,List(1),有,有-06,false), Span(7,8,List(2),已经,已经,false), Span(5,6,List(3),错,错-01,false), Span(4,5,List(4),不,不,false), Span(3,4,List(5),一点,一点,false), Span(1,2,List(6),现在,现在,false), Span(0,1,List(7),到,到-01,false)),Map(2 -> 已经, 5 -> 一点, 7 -> 到-01, 1 -> 有-06, 4 -> 不, 6 -> 现在, 0 -> 年, 3 -> 错-01),Map(已 -> 已经, 到 -> 到-01, 不 -> 不, 年 -> 年, 错 -> 错-01, 一 -> 一点, 现 -> 现在, 有 -> 有-06))),[Ljava.lang.String;@54a056e4,Annotation([Ljava.lang.String;@15994b0b,[Ljava.lang.String;@12cd129c,[Ljava.lang.String;@1a717d79),Annotation([Ljava.lang.String;@4cb00fa5,[Ljava.lang.String;@13aed42b,[Ledu.cmu.lti.nlp.amr.Dependency;@698d6d30),Annotation([Ljava.lang.String;@78065fcd,[Ljava.lang.String;@3407aa4f,[Ljava.lang.String;@51ed2f68),Annotation([Ljava.lang.String;@538b3c88,[Ljava.lang.String;@19b9f903,[Ledu.cmu.lti.nlp.amr.Entity;@10e56da9))
AMR:
(到 / 到-01, degree, 不 / 不)
(到 / 到-01, duration, 现 / 现在)
(有 / 有-06, degree, 已 / 已经)
(有 / 有-06, degree, 年 / 年)
(错 / 错-01, degree, 一 / 一点)
(错 / 错-01, degree, 不 / 不)
(错 / 错-01, degree, 有 / 有-06)

Decoded in 17,805 microseconds
Sentence: 我 还 从未 讲 过 这个 故事 。

Spans:
Span 2-3:  从未 => 从未
Span 0-1:  我 => 我
Span 6-7:  故事 => 故事
Span 3-4:  讲 => 讲-02
Span 4-5:  过 => 过-01
Span 1-2:  还 => 还
Span 5-6:  这个 => 这个

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  从未 => 从未
Oracle Span 0-1:  我 => 我
Oracle Span 6-7:  故事 => 故事
Oracle Span 3-4:  讲 => 讲-02
Oracle Span 5-6:  这个 => 这个

Extra span: 过 => 过-01
Extra span: 还 => 还
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	还	_	AD	AD	_	4	advmod	_	_
3	从未	_	AD	AD	_	4	advmod	_	_
4	讲	_	VV	VV	_	0	root	_	_
5	过	_	AS	AS	_	4	asp	_	_
6	这个	_	NN	NN	_	7	nn	_	_
7	故事	_	NN	NN	_	4	dobj	_	_
8	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 讲-02, arg0, x3 / 我)
(x0 / 讲-02, arg1, x4 / 故事)
(x0 / 讲-02, manner, x6 / 从未)
(x4 / 故事, mod, x7 / 这个)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),故事,故事,false), Span(5,6,List(1),这个,这个,false), Span(4,5,List(2),过,过-01,false), Span(3,4,List(3),讲,讲-02,false), Span(2,3,List(4),从未,从未,false), Span(1,2,List(5),还,还,false), Span(0,1,List(6),我,我,false)),Map(2 -> 过-01, 5 -> 还, 1 -> 这个, 4 -> 从未, 6 -> 我, 0 -> 故事, 3 -> 讲-02),Map(从 -> 从未, 故 -> 故事, 我 -> 我, 过 -> 过-01, 这 -> 这个, 还 -> 还, 讲 -> 讲-02))),[Ljava.lang.String;@28cb86b2,Annotation([Ljava.lang.String;@22ae905f,[Ljava.lang.String;@748904e8,[Ljava.lang.String;@4fbaa7f5),Annotation([Ljava.lang.String;@3b3056a6,[Ljava.lang.String;@6d4a05f7,[Ledu.cmu.lti.nlp.amr.Dependency;@51d8f2f2),Annotation([Ljava.lang.String;@4b476233,[Ljava.lang.String;@72fb989b,[Ljava.lang.String;@4f235e8e),Annotation([Ljava.lang.String;@597a7afa,[Ljava.lang.String;@29dcdd1c,[Ledu.cmu.lti.nlp.amr.Entity;@7cdb7fc))
AMR:
(故 / 故事, mod, 这 / 这个)
(讲 / 讲-02, manner, 还 / 还)
(过 / 过-01, ARG0, 从 / 从未)
(过 / 过-01, ARG1, 讲 / 讲-02)
(过 / 过-01, ARG3, 我 / 我)
(过 / 过-01, ARG6, 这 / 这个)

Decoded in 16,429 microseconds
Sentence: 同伴们 重新 见到 了 我 ， 都 为 能 看见 我 活 着 回来 而 高兴 。

Spans:
Span 0-1:  同伴们 => 同伴们
Span 13-14:  回来 => 回来-02
Span 10-11:  我 => 我
Span 4-5:  我 => 我
Span 11-12:  活 => 活-04
Span 9-10:  看见 => 看见-01
Span 8-9:  能 => 能
Span 2-3:  见到 => 见到-01
Span 6-7:  都 => 都
Span 1-2:  重新 => 重新-01
Span 15-16:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  同伴们 => 同伴们
Oracle Span 13-14:  回来 => 回来-01
Oracle Span 4-5:  我 => 我
Oracle Span 11-12:  活 => 活-01
Oracle Span 9-10:  看见 => 看见-01
Oracle Span 8-9:  能 => 能-01
Oracle Span 2-3:  见到 => 见到-01
Oracle Span 1-2:  重新 => 重新-01
Oracle Span 15-16:  高兴 => 高兴-01

Incorrect span: 高兴 => 高兴
Incorrect span: 回来 => 回来-02
Incorrect span: 活 => 活-04
Extra span: 我 => 我
Incorrect span: 能 => 能
Extra span: 都 => 都
Missing span: 高兴 => 高兴-01
Missing span: 能 => 能-01
Missing span: 回来 => 回来-01
Missing span: 活 => 活-01
Dependencies:
1	同伴们	_	NN	NN	_	3	nsubj	_	_
2	重新	_	AD	AD	_	3	advmod	_	_
3	见到	_	VV	VV	_	12	dep	_	_
4	了	_	AS	AS	_	3	asp	_	_
5	我	_	PN	PN	_	3	dobj	_	_
6	,	_	PU	PU	_	3	punct	_	_
7	都	_	AD	AD	_	10	advmod	_	_
8	为	_	P	P	_	10	prep	_	_
9	能	_	VV	VV	_	8	pccomp	_	_
10	看见	_	VV	VV	_	3	dep	_	_
11	我	_	PN	PN	_	12	nsubj	_	_
12	活	_	VV	VV	_	0	root	_	_
13	着	_	AS	AS	_	12	asp	_	_
14	回来	_	VV	VV	_	12	ccomp	_	_
15	而	_	MSP	MSP	_	16	prtmod	_	_
16	高兴	_	VA	VA	_	12	dep	_	_
17	。	_	PU	PU	_	12	punct	_	_

Oracle:
(x18 / 能-01, arg0, x19 / 看见-01)
(x19 / 看见-01, arg0, x20 / 回来-01)
(x2 / 见到-01, arg0, x3 / 同伴们)
(x2 / 见到-01, arg1, x5 / 我)
(x2 / 见到-01, manner, x4 / 重新-01)
(x20 / 回来-01, manner, x22 / 活-01)
(x6 / 高兴-01, arg1, x18 / 能-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),高兴,高兴,false), Span(13,14,List(1),回来,回来-02,false), Span(11,12,List(2),活,活-04,false), Span(10,11,List(3),我,我,false), Span(9,10,List(4),看见,看见-01,false), Span(8,9,List(5),能,能,false), Span(6,7,List(6),都,都,false), Span(4,5,List(7),我,我,false), Span(2,3,List(8),见到,见到-01,false), Span(1,2,List(9),重新,重新-01,false), Span(0,1,List(10),同伴们,同伴们,false)),Map(2 -> 活-04, 5 -> 能, 8 -> 见到-01, 7 -> 我, 1 -> 回来-02, 4 -> 看见-01, 6 -> 都, 9 -> 重新-01, 0 -> 高兴, 10 -> 同伴们, 3 -> 我),Map(高 -> 高兴, 重 -> 重新-01, 我 -> 我, 能 -> 能, 我2 -> 我, 同 -> 同伴们, 活 -> 活-04, 看 -> 看见-01, 都 -> 都, 见 -> 见到-01, 回 -> 回来-02))),[Ljava.lang.String;@524f5ea5,Annotation([Ljava.lang.String;@586843bc,[Ljava.lang.String;@17134190,[Ljava.lang.String;@7d8b66d9),Annotation([Ljava.lang.String;@5599b5bb,[Ljava.lang.String;@4ff66917,[Ledu.cmu.lti.nlp.amr.Dependency;@4264beb8),Annotation([Ljava.lang.String;@647fb583,[Ljava.lang.String;@7cd3e0da,[Ljava.lang.String;@919086),Annotation([Ljava.lang.String;@67e77f52,[Ljava.lang.String;@7ead1d80,[Ledu.cmu.lti.nlp.amr.Entity;@1d1bf7bf))
AMR:
(回 / 回来-02, ARG0, 我 / 我)
(回 / 回来-02, ARG4, 高 / 高兴)
(回 / 回来-02, manner, 活 / 活-04)
(看 / 看见-01, ARG5, 我2 / 我)
(看 / 看见-01, manner, 回 / 回来-02)
(看 / 看见-01, manner, 都 / 都)
(能 / 能, instrument, 看 / 看见-01)
(见 / 见到-01, beneficiary, 我2 / 我)
(见 / 见到-01, manner, 重 / 重新-01)
(见 / 见到-01, mode, 同 / 同伴们)

Decoded in 36,220 microseconds
Sentence: 我 却 很 悲伤 。 我 告诉 他们 ： “ 这 是 因为 疲劳 的 缘故 … ”

Spans:
Span 7-8:  他们 => 他们
Span 6-7:  告诉 => 告诉-01
Span 2-3:  很 => 很
Span 3-4:  悲伤 => 悲伤-01
Span 5-6:  我 => 我
Span 0-1:  我 => 我
Span 11-12:  是 => 是-04
Span 13-14:  疲劳 => 疲劳-01
Span 15-16:  缘故 => 缘故
Span 10-11:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 7-8:  他们 => 他们
Oracle Span 6-7:  告诉 => 告诉-01
Oracle Span 2-3:  很 => 很
Oracle Span 3-4:  悲伤 => 悲伤-01
Oracle Span 0-1:  我 => 我
Oracle Span 13-14:  疲劳 => 疲劳-01
Oracle Span 10-11:  这 => 这

Extra span: 缘故 => 缘故
Extra span: 是 => 是-04
Extra span: 我 => 我
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	却	_	AD	AD	_	4	advmod	_	_
3	很	_	AD	AD	_	4	advmod	_	_
4	悲伤	_	VV	VV	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_
6	我	_	PN	PN	_	7	nsubj	_	_
7	告诉	_	VV	VV	_	4	conj	_	_
8	他们	_	PN	PN	_	7	dobj	_	_
9	：	_	PU	PU	_	4	punct	_	_
10	“	_	PU	PU	_	4	punct	_	_
11	这	_	PN	PN	_	12	top	_	_
12	是	_	VC	VC	_	4	conj	_	_
13	因为	_	P	P	_	16	assmod	_	_
14	疲劳	_	VA	VA	_	13	pccomp	_	_
15	的	_	DEG	DEG	_	13	assm	_	_
16	缘故	_	NN	NN	_	12	attr	_	_
17	…	_	PU	PU	_	4	punct	_	_
18	”	_	PU	PU	_	4	punct	_	_

Oracle:
(x13 / 悲伤-01, arg0, x15 / 我)
(x13 / 悲伤-01, degree, x14 / 很)
(x16 / 告诉-01, arg1, x18 / 这)
(x16 / 告诉-01, arg2, x20 / 他们)
(x18 / 这, cause, x19 / 疲劳-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),缘故,缘故,false), Span(13,14,List(1),疲劳,疲劳-01,false), Span(11,12,List(2),是,是-04,false), Span(10,11,List(3),这,这,false), Span(7,8,List(4),他们,他们,false), Span(6,7,List(5),告诉,告诉-01,false), Span(5,6,List(6),我,我,false), Span(3,4,List(7),悲伤,悲伤-01,false), Span(2,3,List(8),很,很,false), Span(0,1,List(9),我,我,false)),Map(2 -> 是-04, 5 -> 告诉-01, 8 -> 很, 7 -> 悲伤-01, 1 -> 疲劳-01, 4 -> 他们, 6 -> 我, 9 -> 我, 0 -> 缘故, 3 -> 这),Map(疲 -> 疲劳-01, 我 -> 我, 这 -> 这, 我2 -> 我, 很 -> 很, 他 -> 他们, 缘 -> 缘故, 悲 -> 悲伤-01, 告 -> 告诉-01, 是 -> 是-04))),[Ljava.lang.String;@1182413a,Annotation([Ljava.lang.String;@4d43a1b7,[Ljava.lang.String;@5b14f482,[Ljava.lang.String;@19705650),Annotation([Ljava.lang.String;@1a785fd5,[Ljava.lang.String;@4a660b34,[Ledu.cmu.lti.nlp.amr.Dependency;@362a561e),Annotation([Ljava.lang.String;@2df3545d,[Ljava.lang.String;@75ad30c1,[Ljava.lang.String;@fe8aaeb),Annotation([Ljava.lang.String;@6b9697ae,[Ljava.lang.String;@5cf0673d,[Ledu.cmu.lti.nlp.amr.Entity;@40c76f5a))
AMR:
(告 / 告诉-01, decade, 我 / 我)
(告 / 告诉-01, mode, 他 / 他们)
(告 / 告诉-01, prep-along-with, 是 / 是-04)
(告 / 告诉-01, prep-following, 悲 / 悲伤-01)
(悲 / 悲伤-01, degree, 很 / 很)
(悲 / 悲伤-01, poss, 我2 / 我)
(是 / 是-04, mod, 这 / 这)
(是 / 是-04, mode, 疲 / 疲劳-01)
(缘 / 缘故, mod, 疲 / 疲劳-01)

Decoded in 28,597 microseconds
Sentence: 现在 ， 我 稍微 得到 了 些 安慰 。

Spans:
Span 6-7:  些 => 些
Span 7-8:  安慰 => 安慰
Span 4-5:  得到 => 得到-01
Span 2-3:  我 => 我
Span 0-1:  现在 => 现在
Span 3-4:  稍微 => 稍微

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 6-7:  些 => 些
Oracle Span 7-8:  安慰 => 安慰
Oracle Span 4-5:  得到 => 得到-01
Oracle Span 2-3:  我 => 我
Oracle Span 0-1:  现在 => 现在
Oracle Span 3-4:  稍微 => 稍微

Dependencies:
1	现在	_	NT	NT	_	5	tmod	_	_
2	,	_	PU	PU	_	5	punct	_	_
3	我	_	PN	PN	_	5	nsubj	_	_
4	稍微	_	AD	AD	_	5	advmod	_	_
5	得到	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	些	_	CD	CD	_	8	nummod	_	_
8	安慰	_	NN	NN	_	5	dobj	_	_
9	。	_	PU	PU	_	5	punct	_	_

Oracle:
(x0 / 得到-01, arg0, x2 / 我)
(x0 / 得到-01, arg1, x3 / 安慰)
(x0 / 得到-01, degree, x4 / 稍微)
(x0 / 得到-01, time, x6 / 现在)
(x3 / 安慰, quant, x5 / 些)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),安慰,安慰,false), Span(6,7,List(1),些,些,false), Span(4,5,List(2),得到,得到-01,false), Span(3,4,List(3),稍微,稍微,false), Span(2,3,List(4),我,我,false), Span(0,1,List(5),现在,现在,false)),Map(2 -> 得到-01, 5 -> 现在, 1 -> 些, 4 -> 我, 0 -> 安慰, 3 -> 稍微),Map(稍 -> 稍微, 些 -> 些, 我 -> 我, 得 -> 得到-01, 安 -> 安慰, 现 -> 现在))),[Ljava.lang.String;@a323a5b,Annotation([Ljava.lang.String;@5546e754,[Ljava.lang.String;@ad0bb4e,[Ljava.lang.String;@7196a8f1),Annotation([Ljava.lang.String;@6a6da47a,[Ljava.lang.String;@8f39224,[Ledu.cmu.lti.nlp.amr.Dependency;@7f642bf),Annotation([Ljava.lang.String;@43e3a390,[Ljava.lang.String;@44aa91e2,[Ljava.lang.String;@50dc49e1),Annotation([Ljava.lang.String;@650a1aff,[Ljava.lang.String;@3babcaed,[Ledu.cmu.lti.nlp.amr.Entity;@2b9e69fb))
AMR:
(安 / 安慰, quant, 些 / 些)
(得 / 得到-01, degree, 稍 / 稍微)
(得 / 得到-01, snt3, 安 / 安慰)
(得 / 得到-01, time, 现 / 现在)
(得 / 得到-01, value, 我 / 我)

Decoded in 12,176 microseconds
Sentence: 就是 说 … 还 没有 完全 平静 下来 。

Spans:
Span 7-8:  下来 => 下来-02
Span 5-6:  完全 => 完全-01
Span 6-7:  平静 => 平静-02
Span 1-2:  说 => 说-02
Span 3-4:  还 => 还

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  完全 => 完全-01
Oracle Span 6-7:  平静 => 平静-02

Extra span: 下来 => 下来-02
Extra span: 还 => 还
Extra span: 说 => 说-02
Dependencies:
1	就是	_	AD	AD	_	2	advmod	_	_
2	说	_	VV	VV	_	0	root	_	_
3	…	_	PU	PU	_	5	dep	_	_
4	还	_	AD	AD	_	5	advmod	_	_
5	没有	_	VV	VV	_	7	dep	_	_
6	完全	_	AD	AD	_	7	advmod	_	_
7	平静	_	VA	VA	_	2	ccomp	_	_
8	下来	_	VV	VV	_	2	dep	_	_
9	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x14 / 平静-02, degree, x15 / 完全-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),下来,下来-02,false), Span(6,7,List(1),平静,平静-02,false), Span(5,6,List(2),完全,完全-01,false), Span(3,4,List(3),还,还,false), Span(1,2,List(4),说,说-02,false)),Map(2 -> 完全-01, 1 -> 平静-02, 4 -> 说-02, 0 -> 下来-02, 3 -> 还),Map(下 -> 下来-02, 完 -> 完全-01, 说 -> 说-02, 还 -> 还, 平 -> 平静-02))),[Ljava.lang.String;@19bfbe28,Annotation([Ljava.lang.String;@2c579202,[Ljava.lang.String;@49ced9c7,[Ljava.lang.String;@11c7a0b4),Annotation([Ljava.lang.String;@75ed125a,[Ljava.lang.String;@653a5967,[Ledu.cmu.lti.nlp.amr.Dependency;@5a85b4e6),Annotation([Ljava.lang.String;@766b6d02,[Ljava.lang.String;@6b09ce57,[Ljava.lang.String;@5c4f4330),Annotation([Ljava.lang.String;@2b9aeedb,[Ljava.lang.String;@63485d7,[Ledu.cmu.lti.nlp.amr.Entity;@23ea8830))
AMR:
(下 / 下来-02, degree, 平 / 平静-02)
(平 / 平静-02, degree, 完 / 完全-01)
(平 / 平静-02, manner, 还 / 还)
(说 / 说-02, degree, 完 / 完全-01)

Decoded in 8,555 microseconds
Sentence: 可 我 知道 他 已经 回到 了 他 的 星球 上 。 因为 那 天 黎明 ， 我 没有 再 见到 他 的 身躯 。

Spans:
Span 21-22:  他 => 他
Span 7-8:  他 => 他
Span 3-4:  他 => 他
Span 19-20:  再 => 再
Span 0-1:  可 => 可-01
Span 5-6:  回到 => 回到-01
Span 14-15:  天 => (temporal-quantity :unit 天)
Span 4-5:  已经 => 已经
Span 17-18:  我 => 我
Span 1-2:  我 => 我
Span 9-10:  星球 => 星球
Span 2-3:  知道 => 知道-01
Span 20-21:  见到 => 见到-01
Span 23-24:  身躯 => 身躯
Span 13-14:  那 => 那
Span 15-16:  黎明 => 黎明

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 3-4:  他 => 他
Oracle Span 19-20:  再 => 再
Oracle Span 5-6:  回到 => 回到-01
Oracle Span 4-5:  已经 => 已经
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  星球 => 星球
Oracle Span 2-3:  知道 => 知道-01
Oracle Span 20-21:  见到 => 见到-01
Oracle Span 23-24:  身躯 => 身躯
Oracle Span 15-16:  黎明 => 黎明

Extra span: 他 => 他
Extra span: 我 => 我
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 那 => 那
Extra span: 他 => 他
Extra span: 可 => 可-01
Dependencies:
1	可	_	AD	AD	_	3	advmod	_	_
2	我	_	PN	PN	_	3	nsubj	_	_
3	知道	_	VV	VV	_	0	root	_	_
4	他	_	PN	PN	_	6	nsubj	_	_
5	已经	_	AD	AD	_	6	advmod	_	_
6	回到	_	VV	VV	_	3	ccomp	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	6	loc	_	_
12	。	_	PU	PU	_	3	punct	_	_
13	因为	_	P	P	_	21	prep	_	_
14	那	_	DT	DT	_	16	det	_	_
15	天	_	M	M	_	14	clf	_	_
16	黎明	_	NN	NN	_	13	pobj	_	_
17	,	_	PU	PU	_	21	punct	_	_
18	我	_	PN	PN	_	21	nsubj	_	_
19	没有	_	VV	VV	_	21	neg	_	_
20	再	_	AD	AD	_	21	advmod	_	_
21	见到	_	VV	VV	_	3	conj	_	_
22	他	_	PN	PN	_	24	assmod	_	_
23	的	_	DEG	DEG	_	22	assm	_	_
24	身躯	_	NN	NN	_	21	dobj	_	_
25	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x23 / 知道-01, arg0, x24 / 我)
(x23 / 知道-01, arg1, x25 / 回到-01)
(x25 / 回到-01, arg0, x26 / 他)
(x25 / 回到-01, arg1, x27 / 星球)
(x25 / 回到-01, manner, x29 / 已经)
(x42 / 见到-01, arg1, x44 / 身躯)
(x42 / 见到-01, manner, x46 / 再)
(x42 / 见到-01, time, x47 / 黎明)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),身躯,身躯,false), Span(21,22,List(1),他,他,false), Span(20,21,List(2),见到,见到-01,false), Span(19,20,List(3),再,再,false), Span(17,18,List(4),我,我,false), Span(15,16,List(5),黎明,黎明,false), Span(14,15,List(7, 6),天,(temporal-quantity :unit 天),false), Span(13,14,List(8),那,那,false), Span(9,10,List(9),星球,星球,false), Span(7,8,List(10),他,他,false), Span(5,6,List(11),回到,回到-01,false), Span(4,5,List(12),已经,已经,false), Span(3,4,List(13),他,他,false), Span(2,3,List(14),知道,知道-01,false), Span(1,2,List(15),我,我,false), Span(0,1,List(16),可,可-01,false)),Map(2 -> 见到-01, 5 -> 黎明, 12 -> 已经, 15 -> 我, 8 -> 那, 7 -> 天, 1 -> 他, 4 -> 我, 11 -> 回到-01, 14 -> 知道-01, 6 -> temporal-quantity, 0 -> 身躯, 9 -> 星球, 16 -> 可-01, 3 -> 再, 10 -> 他, 13 -> 他),Map(黎 -> 黎明, 已 -> 已经, 他2 -> 他, 星 -> 星球, t -> temporal-quantity, 我 -> 我, 身 -> 身躯, 我2 -> 我, 他 -> 他, 天 -> 天, 他3 -> 他, 知 -> 知道-01, 那 -> 那, 回 -> 回到-01, 见 -> 见到-01, 可 -> 可-01, 再 -> 再))),[Ljava.lang.String;@59a09be,Annotation([Ljava.lang.String;@790ac3e0,[Ljava.lang.String;@5bb2fb2b,[Ljava.lang.String;@2cee5365),Annotation([Ljava.lang.String;@796c68bf,[Ljava.lang.String;@56d6a1b1,[Ledu.cmu.lti.nlp.amr.Dependency;@1a7163e3),Annotation([Ljava.lang.String;@44da7eb3,[Ljava.lang.String;@5e69cf07,[Ljava.lang.String;@3d512652),Annotation([Ljava.lang.String;@2c2e3460,[Ljava.lang.String;@3b96f8b0,[Ledu.cmu.lti.nlp.amr.Entity;@2b170932))
AMR:
(t / temporal-quantity, mod, 那 / 那)
(t / temporal-quantity, unit, 天 / 天)
(可 / 可-01, ARG3, 我2 / 我)
(回 / 回到-01, ARG6, 他3 / 他)
(回 / 回到-01, manner, 已 / 已经)
(回 / 回到-01, op, 星 / 星球)
(星 / 星球, mod, 那 / 那)
(星 / 星球, poss, 他2 / 他)
(知 / 知道-01, accompanier, 回 / 回到-01)
(知 / 知道-01, manner, 可 / 可-01)
(见 / 见到-01, manner, 再 / 再)
(见 / 见到-01, op, 我 / 我)
(见 / 见到-01, snt3, 身 / 身躯)
(见 / 见到-01, time, 黎 / 黎明)
(身 / 身躯, poss, 他 / 他)
(黎 / 黎明, frequency, t / temporal-quantity)

Decoded in 90,602 microseconds
Sentence: 他 的 身躯 并不 那么 重 … 从此 ， 我 就 喜欢 在 夜间 倾听 着 星星 ，

Spans:
Span 7-8:  从此 => 从此
Span 0-1:  他 => 他
Span 14-15:  倾听 => 倾听-01
Span 11-12:  喜欢 => 喜欢-01
Span 12-13:  在 => 在-01
Span 13-14:  夜间 => 夜间
Span 10-11:  就 => 就-01
Span 9-10:  我 => 我
Span 16-17:  星星 => 星星
Span 2-3:  身躯 => 身躯
Span 4-5:  那么 => 那么
Span 5-6:  重 => 重-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  从此 => 从此
Oracle Span 0-1:  他 => 他
Oracle Span 14-15:  倾听 => 倾听-01
Oracle Span 11-12:  喜欢 => 喜欢-01
Oracle Span 13-14:  夜间 => 夜间
Oracle Span 9-10:  我 => 我
Oracle Span 16-17:  星星 => 星星
Oracle Span 2-3:  身躯 => 身躯
Oracle Span 5-6:  重 => 重-02

Extra span: 在 => 在-01
Extra span: 就 => 就-01
Extra span: 那么 => 那么
Dependencies:
1	他	_	PN	PN	_	4	assmod	_	_
2	的	_	DEG	DEG	_	1	assm	_	_
3	身躯	_	NN	NN	_	4	nn	_	_
4	并不	_	NN	NN	_	15	nsubj	_	_
5	那么	_	AD	AD	_	15	advmod	_	_
6	重	_	NN	NN	_	15	nsubj	_	_
7	…	_	PU	PU	_	15	dep	_	_
8	从此	_	AD	AD	_	15	advmod	_	_
9	,	_	PU	PU	_	15	punct	_	_
10	我	_	PN	PN	_	15	dobj	_	_
11	就	_	P	P	_	15	prep	_	_
12	喜欢	_	VV	VV	_	11	pccomp	_	_
13	在	_	AD	AD	_	14	advmod	_	_
14	夜间	_	VV	VV	_	12	ccomp	_	_
15	倾听	_	VV	VV	_	0	root	_	_
16	着	_	AS	AS	_	15	asp	_	_
17	星星	_	NN	NN	_	15	dobj	_	_
18	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x15 / 重-02, arg0, x17 / 身躯)
(x18 / 他, part, x17 / 身躯)
(x19 / 喜欢-01, arg0, x20 / 我)
(x19 / 喜欢-01, arg1, x21 / 倾听-01)
(x19 / 喜欢-01, time, x25 / 从此)
(x21 / 倾听-01, arg1, x23 / 星星)
(x21 / 倾听-01, time, x24 / 夜间)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),星星,星星,false), Span(14,15,List(1),倾听,倾听-01,false), Span(13,14,List(2),夜间,夜间,false), Span(12,13,List(3),在,在-01,false), Span(11,12,List(4),喜欢,喜欢-01,false), Span(10,11,List(5),就,就-01,false), Span(9,10,List(6),我,我,false), Span(7,8,List(7),从此,从此,false), Span(5,6,List(8),重,重-02,false), Span(4,5,List(9),那么,那么,false), Span(2,3,List(10),身躯,身躯,false), Span(0,1,List(11),他,他,false)),Map(2 -> 夜间, 5 -> 就-01, 8 -> 重-02, 7 -> 从此, 1 -> 倾听-01, 11 -> 他, 4 -> 喜欢-01, 6 -> 我, 9 -> 那么, 0 -> 星星, 10 -> 身躯, 3 -> 在-01),Map(从 -> 从此, 就 -> 就-01, 夜 -> 夜间, 倾 -> 倾听-01, 在 -> 在-01, 星 -> 星星, 重 -> 重-02, 我 -> 我, 身 -> 身躯, 他 -> 他, 喜 -> 喜欢-01, 那 -> 那么))),[Ljava.lang.String;@1fc0d9b4,Annotation([Ljava.lang.String;@42107318,[Ljava.lang.String;@4e4f4092,[Ljava.lang.String;@5d829ef0),Annotation([Ljava.lang.String;@4416e18d,[Ljava.lang.String;@5dfc2a4,[Ledu.cmu.lti.nlp.amr.Dependency;@3120495d),Annotation([Ljava.lang.String;@781c2497,[Ljava.lang.String;@b75b890,[Ljava.lang.String;@70c491b8),Annotation([Ljava.lang.String;@439d545c,[Ljava.lang.String;@5a3cf824,[Ledu.cmu.lti.nlp.amr.Entity;@7c2b6acb))
AMR:
(从 / 从此, manner, 重 / 重-02)
(他 / 他, part, 身 / 身躯)
(倾 / 倾听-01, time, 在 / 在-01)
(倾 / 倾听-01, time, 夜 / 夜间)
(倾 / 倾听-01, time, 星 / 星星)
(喜 / 喜欢-01, ARG3, 在 / 在-01)
(喜 / 喜欢-01, manner, 就 / 就-01)
(喜 / 喜欢-01, time, 从 / 从此)
(就 / 就-01, prep-following, 我 / 我)
(那 / 那么, mod, 身 / 身躯)
(重 / 重-02, degree, 那 / 那么)

Decoded in 40,078 microseconds
Sentence: 好象 是 倾听 着 五亿 个 铃铛 …

Spans:
Span 2-3:  倾听 => 倾听-01
Span 1-2:  是 => 是-04
Span 6-7:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  倾听 => 倾听-01
Oracle Span 6-7:  铃铛 => 铃铛

Extra span: 是 => 是-04
Dependencies:
1	好象	_	NR	NR	_	3	top	_	_
2	是	_	VC	VC	_	3	cop	_	_
3	倾听	_	VV	VV	_	0	root	_	_
4	着	_	AS	AS	_	3	asp	_	_
5	五亿	_	CD	CD	_	6	nummod	_	_
6	个	_	M	M	_	8	clf	_	_
7	铃铛	_	NN	NN	_	8	nn	_	_
8	…	_	NN	NN	_	3	dobj	_	_
9	是	_	VC	VC	_	3	conj	_	_

Oracle:
(x7 / 倾听-01, arg1, x8 / 铃铛)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),铃铛,铃铛,false), Span(2,3,List(1),倾听,倾听-01,false), Span(1,2,List(2),是,是-04,false)),Map(2 -> 是-04, 1 -> 倾听-01, 0 -> 铃铛),Map(倾 -> 倾听-01, 铃 -> 铃铛, 是 -> 是-04))),[Ljava.lang.String;@28367da7,Annotation([Ljava.lang.String;@1a0f349,[Ljava.lang.String;@3c60c681,[Ljava.lang.String;@1b3a9ef4),Annotation([Ljava.lang.String;@7a1371,[Ljava.lang.String;@6c6928c,[Ledu.cmu.lti.nlp.amr.Dependency;@3c28181b),Annotation([Ljava.lang.String;@73aaec54,[Ljava.lang.String;@239b98cb,[Ljava.lang.String;@117b2cc6),Annotation([Ljava.lang.String;@6def0632,[Ljava.lang.String;@49038f97,[Ledu.cmu.lti.nlp.amr.Entity;@36211bbc))
AMR:
(倾 / 倾听-01, manner, 是 / 是-04)
(倾 / 倾听-01, prep-within, 铃 / 铃铛)

Decoded in 4,429 microseconds
Sentence: 可是 ， 现在 却 又 发生 了 不 寻常 的 事 。 我 给 小 王子 画 的 羊嘴套 上 ， 忘 了 画 皮带 ！

Spans:
Span 7-8:  不 => 不
Span 10-11:  事 => 事
Span 4-5:  又 => 又
Span 5-6:  发生 => 发生-01
Span 8-9:  寻常 => 寻常-01
Span 14-15:  小 => 小
Span 21-22:  忘 => 忘-01
Span 12-13:  我 => 我
Span 15-16:  王子 => 王子
Span 2-3:  现在 => 现在
Span 23-24:  画 => (thing :arg1-of 画-01)
Span 16-17:  画 => (thing :arg1-of 画-01)
Span 24-25:  皮带 => 皮带
Span 13-14:  给 => 给-02
Span 18-19:  羊嘴套 => 羊嘴套

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 他 再 也 不 可能 把 它 套 在 羊 嘴 上 。

Spans:
Span 3-4:  不 => 不
Span 2-3:  也 => 也
Span 0-1:  他 => 他
Span 1-2:  再 => 再
Span 4-5:  可能 => 可能-02
Span 8-9:  在 => 在-01
Span 7-8:  套 => 套-02
Span 6-7:  它 => 它
Span 9-10:  羊 => 羊

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  他 => 他
Oracle Span 4-5:  可能 => 可能-01
Oracle Span 7-8:  套 => 套-02
Oracle Span 6-7:  它 => 它

Extra span: 羊 => 羊
Extra span: 在 => 在-01
Incorrect span: 可能 => 可能-02
Extra span: 不 => 不
Extra span: 也 => 也
Extra span: 再 => 再
Missing span: 可能 => 可能-01
Dependencies:
1	他	_	PN	PN	_	11	nsubj	_	_
2	再	_	AD	AD	_	11	advmod	_	_
3	也	_	AD	AD	_	11	advmod	_	_
4	不	_	AD	AD	_	11	neg	_	_
5	可能	_	VV	VV	_	11	mmod	_	_
6	把	_	BA	BA	_	11	ba	_	_
7	它	_	PN	PN	_	11	nsubj	_	_
8	套	_	M	M	_	11	dep	_	_
9	在	_	P	P	_	11	prep	_	_
10	羊	_	NN	NN	_	9	pobj	_	_
11	嘴	_	VV	VV	_	0	root	_	_
12	上	_	VV	VV	_	11	comod	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 可能-01, arg0, x3 / 套-02)
(x3 / 套-02, arg0, x4 / 他)
(x3 / 套-02, arg2, x8 / 它)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),羊,羊,false), Span(8,9,List(1),在,在-01,false), Span(7,8,List(2),套,套-02,false), Span(6,7,List(3),它,它,false), Span(4,5,List(4),可能,可能-02,false), Span(3,4,List(5),不,不,false), Span(2,3,List(6),也,也,false), Span(1,2,List(7),再,再,false), Span(0,1,List(8),他,他,false)),Map(2 -> 套-02, 5 -> 不, 8 -> 他, 7 -> 再, 1 -> 在-01, 4 -> 可能-02, 6 -> 也, 0 -> 羊, 3 -> 它),Map(在 -> 在-01, 也 -> 也, 套 -> 套-02, 它 -> 它, 羊 -> 羊, 他 -> 他, 不 -> 不, 再 -> 再, 可 -> 可能-02))),[Ljava.lang.String;@6b3f4bd8,Annotation([Ljava.lang.String;@3e151e1f,[Ljava.lang.String;@d70e9a,[Ljava.lang.String;@5e98032e),Annotation([Ljava.lang.String;@4fe8f2ae,[Ljava.lang.String;@591be8aa,[Ledu.cmu.lti.nlp.amr.Dependency;@61808ecd),Annotation([Ljava.lang.String;@7f1f60a0,[Ljava.lang.String;@77ea806f,[Ljava.lang.String;@71b26880),Annotation([Ljava.lang.String;@14a1769d,[Ljava.lang.String;@10bf1ec9,[Ledu.cmu.lti.nlp.amr.Entity;@33751d49))
AMR:
(可 / 可能-02, ARG1, 套 / 套-02)
(可 / 可能-02, manner, 不 / 不)
(可 / 可能-02, manner, 也 / 也)
(可 / 可能-02, manner, 再 / 再)
(在 / 在-01, ARG0, 羊 / 羊)
(套 / 套-02, ARG0, 它 / 它)
(套 / 套-02, ARG1, 在 / 在-01)
(套 / 套-02, time, 他 / 他)

Decoded in 22,519 microseconds
Sentence: 于是 ， 我 思忖 着 ： “ 他 的 星球 上 发生 了 什么 事 呢 ？

Spans:
Span 14-15:  事 => 事
Span 13-14:  什么 => 什么
Span 7-8:  他 => 他
Span 11-12:  发生 => 发生-01
Span 3-4:  思忖 => 思忖-01
Span 2-3:  我 => 我
Span 9-10:  星球 => 星球

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  事 => 事
Oracle Span 7-8:  他 => 他
Oracle Span 11-12:  发生 => 发生-01
Oracle Span 3-4:  思忖 => 思忖-01
Oracle Span 2-3:  我 => 我
Oracle Span 9-10:  星球 => 星球

Extra span: 什么 => 什么
Dependencies:
1	于是	_	AD	AD	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	我	_	PN	PN	_	4	nsubj	_	_
4	思忖	_	VV	VV	_	0	root	_	_
5	着	_	VV	VV	_	4	ccomp	_	_
6	：	_	PU	PU	_	5	punct	_	_
7	“	_	PU	PU	_	12	punct	_	_
8	他	_	PN	PN	_	10	assmod	_	_
9	的	_	DEG	DEG	_	8	assm	_	_
10	星球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	12	loc	_	_
12	发生	_	VV	VV	_	5	dep	_	_
13	了	_	AS	AS	_	12	asp	_	_
14	什么	_	DT	DT	_	15	det	_	_
15	事	_	NN	NN	_	12	dobj	_	_
16	呢	_	SP	SP	_	12	dep	_	_
17	？	_	PU	PU	_	4	punct	_	_

Oracle:
(x11 / 思忖-01, arg0, x12 / 我)
(x11 / 思忖-01, arg2, x23 / 发生-01)
(x23 / 发生-01, arg0, x25 / 事)
(x23 / 发生-01, location, x27 / 星球)
(x27 / 星球, poss, x28 / 他)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),事,事,false), Span(13,14,List(1),什么,什么,false), Span(11,12,List(2),发生,发生-01,false), Span(9,10,List(3),星球,星球,false), Span(7,8,List(4),他,他,false), Span(3,4,List(5),思忖,思忖-01,false), Span(2,3,List(6),我,我,false)),Map(2 -> 发生-01, 5 -> 思忖-01, 1 -> 什么, 4 -> 他, 6 -> 我, 0 -> 事, 3 -> 星球),Map(发 -> 发生-01, 星 -> 星球, 我 -> 我, 思 -> 思忖-01, 他 -> 他, 事 -> 事, 什 -> 什么))),[Ljava.lang.String;@516195cf,Annotation([Ljava.lang.String;@4eeb14e0,[Ljava.lang.String;@26ca12a2,[Ljava.lang.String;@3d4ecc67),Annotation([Ljava.lang.String;@60dcf9ec,[Ljava.lang.String;@7606bd03,[Ledu.cmu.lti.nlp.amr.Dependency;@afee63),Annotation([Ljava.lang.String;@4b4927e5,[Ljava.lang.String;@4c5da4f9,[Ljava.lang.String;@ff0e6d4),Annotation([Ljava.lang.String;@70d3cdbf,[Ljava.lang.String;@72a7aa4f,[Ledu.cmu.lti.nlp.amr.Entity;@537ca28e))
AMR:
(事 / 事, mod, 什 / 什么)
(发 / 发生-01, location, 思 / 思忖-01)
(发 / 发生-01, location, 星 / 星球)
(发 / 发生-01, snt3, 事 / 事)
(思 / 思忖-01, manner, 我 / 我)
(星 / 星球, poss, 他 / 他)

Decoded in 15,977 microseconds
Sentence: 大概 小羊 把 花 吃掉 了 吧 … ”

Spans:
Span 4-5:  吃掉 => 吃掉-01
Span 0-1:  大概 => 大概
Span 3-4:  花 => 花-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 4-5:  吃掉 => 吃掉-01
Oracle Span 0-1:  大概 => 大概
Oracle Span 3-4:  花 => 花

Incorrect span: 花 => 花-01
Missing span: 花 => 花
Dependencies:
1	大概	_	NN	NN	_	2	nn	_	_
2	小羊	_	NN	NN	_	5	nsubj	_	_
3	把	_	BA	BA	_	5	ba	_	_
4	花	_	NN	NN	_	5	nsubj	_	_
5	吃掉	_	VV	VV	_	0	root	_	_
6	了	_	AS	AS	_	5	asp	_	_
7	吧	_	PU	PU	_	8	punct	_	_
8	…	_	NN	NN	_	5	dobj	_	_
9	”	_	PU	PU	_	8	punct	_	_

Oracle:
(x20 / 大概, arg0, x21 / 吃掉-01)
(x21 / 吃掉-01, arg1, x24 / 花)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),吃掉,吃掉-01,false), Span(3,4,List(1),花,花-01,false), Span(0,1,List(2),大概,大概,false)),Map(2 -> 大概, 1 -> 花-01, 0 -> 吃掉-01),Map(大 -> 大概, 吃 -> 吃掉-01, 花 -> 花-01))),[Ljava.lang.String;@5b322873,Annotation([Ljava.lang.String;@35e2b89f,[Ljava.lang.String;@7ad889be,[Ljava.lang.String;@4c063cb9),Annotation([Ljava.lang.String;@63de4fa,[Ljava.lang.String;@26bb92e2,[Ledu.cmu.lti.nlp.amr.Dependency;@18907af2),Annotation([Ljava.lang.String;@658e7ead,[Ljava.lang.String;@cfd5cd2,[Ljava.lang.String;@762bf32d),Annotation([Ljava.lang.String;@6d7740f0,[Ljava.lang.String;@7b1a30e5,[Ledu.cmu.lti.nlp.amr.Entity;@1de7f898))
AMR:
(吃 / 吃掉-01, manner, 花 / 花-01)
(花 / 花-01, manner, 大 / 大概)

Decoded in 4,523 microseconds
Sentence: 有时 我 又 对 自己 说 ， “ 绝对 不 会 的 ！

Spans:
Span 9-10:  不 => 不
Span 10-11:  会 => 会-03
Span 2-3:  又 => 又
Span 3-4:  对 => 对-02
Span 1-2:  我 => 我
Span 0-1:  有时 => 有时
Span 8-9:  绝对 => 绝对
Span 4-5:  自己 => 自己
Span 5-6:  说 => 说-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 10-11:  会 => 会-02
Oracle Span 2-3:  又 => 又
Oracle Span 1-2:  我 => 我
Oracle Span 0-1:  有时 => 有时
Oracle Span 8-9:  绝对 => 绝对
Oracle Span 4-5:  自己 => 自己
Oracle Span 5-6:  说 => 说-01

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Missing span: 会 => 会-02
Dependencies:
1	有时	_	AD	AD	_	6	advmod	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	自己	_	PN	PN	_	4	pobj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	,	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	11	punct	_	_
9	绝对	_	AD	AD	_	11	advmod	_	_
10	不	_	AD	AD	_	11	neg	_	_
11	会	_	VV	VV	_	6	ccomp	_	_
12	的	_	SP	SP	_	6	dep	_	_
13	！	_	PU	PU	_	6	punct	_	_
14	我	_	PN	PN	_	11	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x8 / 会-02)
(x0 / 说-01, arg3, x11 / 自己)
(x0 / 说-01, manner, x12 / 又)
(x0 / 说-01, time, x7 / 有时)
(x8 / 会-02, degree, x10 / 绝对)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),会,会-03,false), Span(9,10,List(1),不,不,false), Span(8,9,List(2),绝对,绝对,false), Span(5,6,List(3),说,说-02,false), Span(4,5,List(4),自己,自己,false), Span(3,4,List(5),对,对-02,false), Span(2,3,List(6),又,又,false), Span(1,2,List(7),我,我,false), Span(0,1,List(8),有时,有时,false)),Map(2 -> 绝对, 5 -> 对-02, 8 -> 有时, 7 -> 我, 1 -> 不, 4 -> 自己, 6 -> 又, 0 -> 会-03, 3 -> 说-02),Map(又 -> 又, 自 -> 自己, 绝 -> 绝对, 我 -> 我, 不 -> 不, 会 -> 会-03, 说 -> 说-02, 对 -> 对-02, 有 -> 有时))),[Ljava.lang.String;@34fcd292,Annotation([Ljava.lang.String;@63db743d,[Ljava.lang.String;@496cedbb,[Ljava.lang.String;@6b6def36),Annotation([Ljava.lang.String;@3957d88b,[Ljava.lang.String;@1152900,[Ledu.cmu.lti.nlp.amr.Dependency;@2fba0dac),Annotation([Ljava.lang.String;@2b2a4332,[Ljava.lang.String;@2cbe455c,[Ljava.lang.String;@4cb24e2),Annotation([Ljava.lang.String;@7be38eba,[Ljava.lang.String;@2296127,[Ledu.cmu.lti.nlp.amr.Entity;@5ce3409b))
AMR:
(会 / 会-03, degree, 不 / 不)
(对 / 对-02, manner, 又 / 又)
(对 / 对-02, time, 有 / 有时)
(有 / 有时, subset, 我 / 我)
(绝 / 绝对, mod, 不 / 不)
(说 / 说-02, degree, 对 / 对-02)
(说 / 说-02, degree, 绝 / 绝对)
(说 / 说-02, degree, 自 / 自己)

Decoded in 21,555 microseconds
Sentence: 小 王子 每 天 夜里 都 用 玻璃 罩子 罩住 他 的 花 ， 而且 他 会 把 羊 看管 好 的 … ”

Spans:
Span 15-16:  他 => 他
Span 10-11:  他 => 他
Span 16-17:  会 => 会-03
Span 4-5:  夜里 => 夜里
Span 3-4:  天 => (temporal-quantity :unit 天)
Span 20-21:  好 => 好-04
Span 0-1:  小 => 小
Span 2-3:  每 => 每
Span 1-2:  王子 => 王子
Span 7-8:  玻璃 => 玻璃
Span 6-7:  用 => 用
Span 19-20:  看管 => 看管-01
Span 9-10:  罩住 => 罩住-01
Span 8-9:  罩子 => 罩子
Span 18-19:  羊 => 羊
Span 12-13:  花 => 花-01
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 16-17:  会 => 会-02
Oracle Span 20-21:  好 => 好-01
Oracle Span 0-1:  小 => 小-01
Oracle Span 1-2:  王子 => 王子
Oracle Span 7-8:  玻璃 => 玻璃
Oracle Span 6-7:  用 => 用-01
Oracle Span 19-20:  看管 => 看管-01
Oracle Span 9-10:  罩住 => 罩住-01
Oracle Span 8-9:  罩子 => 罩子
Oracle Span 18-19:  羊 => 羊
Oracle Span 12-13:  花 => 花
Oracle Span 5-6:  都 => 都

Incorrect span: 好 => 好-04
Incorrect span: 会 => 会-03
Extra span: 他 => 他
Incorrect span: 花 => 花-01
Extra span: 他 => 他
Incorrect span: 用 => 用
Extra span: 夜里 => 夜里
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 每 => 每
Incorrect span: 小 => 小
Missing span: 用 => 用-01
Missing span: 花 => 花
Missing span: 小 => 小-01
Missing span: 会 => 会-02
Missing span: 好 => 好-01
Dependencies:
1	小	_	JJ	JJ	_	2	amod	_	_
2	王子	_	NN	NN	_	5	nn	_	_
3	每	_	DT	DT	_	5	det	_	_
4	天	_	M	M	_	3	clf	_	_
5	夜里	_	NN	NN	_	10	nsubj	_	_
6	都	_	AD	AD	_	10	advmod	_	_
7	用	_	P	P	_	10	prep	_	_
8	玻璃	_	NN	NN	_	9	nn	_	_
9	罩子	_	NN	NN	_	7	pobj	_	_
10	罩住	_	VV	VV	_	17	conj	_	_
11	他	_	PN	PN	_	13	assmod	_	_
12	的	_	DEG	DEG	_	11	assm	_	_
13	花	_	NN	NN	_	10	dobj	_	_
14	,	_	PU	PU	_	17	punct	_	_
15	而且	_	AD	AD	_	17	advmod	_	_
16	他	_	PN	PN	_	17	nsubj	_	_
17	会	_	VV	VV	_	0	root	_	_
18	把	_	BA	BA	_	21	ba	_	_
19	羊	_	NN	NN	_	20	nn	_	_
20	看管	_	NN	NN	_	21	nsubj	_	_
21	好	_	VA	VA	_	23	rcmod	_	_
22	的	_	DEC	DEC	_	21	cpm	_	_
23	…	_	NN	NN	_	17	dobj	_	_
24	”	_	PU	PU	_	17	punct	_	_

Oracle:
(x28 / 用-01, arg0, x29 / 王子)
(x28 / 用-01, arg1, x31 / 罩子)
(x28 / 用-01, arg2, x34 / 罩住-01)
(x28 / 用-01, manner, x33 / 都)
(x29 / 王子, mod, x30 / 小-01)
(x31 / 罩子, mod, x32 / 玻璃)
(x34 / 罩住-01, arg1, x36 / 花)
(x38 / 会-02, arg0, x39 / 看管-01)
(x39 / 看管-01, arg1, x41 / 羊)
(x39 / 看管-01, manner, x42 / 好-01)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),好,好-04,false), Span(19,20,List(1),看管,看管-01,false), Span(18,19,List(2),羊,羊,false), Span(16,17,List(3),会,会-03,false), Span(15,16,List(4),他,他,false), Span(12,13,List(5),花,花-01,false), Span(10,11,List(6),他,他,false), Span(9,10,List(7),罩住,罩住-01,false), Span(8,9,List(8),罩子,罩子,false), Span(7,8,List(9),玻璃,玻璃,false), Span(6,7,List(10),用,用,false), Span(5,6,List(11),都,都,false), Span(4,5,List(12),夜里,夜里,false), Span(3,4,List(14, 13),天,(temporal-quantity :unit 天),false), Span(2,3,List(15),每,每,false), Span(1,2,List(16),王子,王子,false), Span(0,1,List(17),小,小,false)),Map(2 -> 羊, 5 -> 花-01, 12 -> 夜里, 15 -> 每, 8 -> 罩子, 7 -> 罩住-01, 17 -> 小, 1 -> 看管-01, 4 -> 他, 11 -> 都, 14 -> 天, 6 -> 他, 0 -> 好-04, 9 -> 玻璃, 16 -> 王子, 3 -> 会-03, 10 -> 用, 13 -> temporal-quantity),Map(他2 -> 他, 夜 -> 夜里, t -> temporal-quantity, 用 -> 用, 玻 -> 玻璃, 王 -> 王子, 羊 -> 羊, 每 -> 每, 他 -> 他, 罩 -> 罩住-01, 小 -> 小, 花 -> 花-01, 天 -> 天, 会 -> 会-03, 好 -> 好-04, 罩2 -> 罩子, 看 -> 看管-01, 都 -> 都))),[Ljava.lang.String;@1d283d1,Annotation([Ljava.lang.String;@66234b0f,[Ljava.lang.String;@2fca3eb5,[Ljava.lang.String;@69eb544f),Annotation([Ljava.lang.String;@7cb29ea8,[Ljava.lang.String;@b5c902,[Ledu.cmu.lti.nlp.amr.Dependency;@7e747037),Annotation([Ljava.lang.String;@4d0e1a9a,[Ljava.lang.String;@25218a4d,[Ljava.lang.String;@bf2aa32),Annotation([Ljava.lang.String;@56da96b3,[Ljava.lang.String;@6b3d9c38,[Ledu.cmu.lti.nlp.amr.Entity;@426710f0))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(会 / 会-03, poss, 他 / 他)
(会 / 会-03, purpose, 花 / 花-01)
(夜 / 夜里, mod, 每 / 每)
(天 / 天, mod, 每 / 每)
(好 / 好-04, manner, 看 / 看管-01)
(每 / 每, mod, 王 / 王子)
(王 / 王子, mod, 小 / 小)
(玻 / 玻璃, mod, 用 / 用)
(用 / 用, manner, 都 / 都)
(用 / 用, time, 夜 / 夜里)
(看 / 看管-01, manner, 会 / 会-03)
(看 / 看管-01, value, 羊 / 羊)
(罩 / 罩住-01, ARG6, 他2 / 他)
(罩 / 罩住-01, manner, 罩2 / 罩子)
(罩 / 罩住-01, purpose, 花 / 花-01)
(罩2 / 罩子, mod, 玻 / 玻璃)

Decoded in 89,623 microseconds
Sentence: 我 就 非常 高兴 。

Spans:
Span 1-2:  就 => 就-01
Span 0-1:  我 => 我
Span 2-3:  非常 => 非常
Span 3-4:  高兴 => 高兴

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 1-2:  就 => 就
Oracle Span 0-1:  我 => 我
Oracle Span 2-3:  非常 => 非常
Oracle Span 3-4:  高兴 => 高兴-01

Incorrect span: 高兴 => 高兴
Incorrect span: 就 => 就-01
Missing span: 高兴 => 高兴-01
Missing span: 就 => 就
Dependencies:
1	我	_	PN	PN	_	4	nsubj	_	_
2	就	_	AD	AD	_	4	advmod	_	_
3	非常	_	AD	AD	_	4	advmod	_	_
4	高兴	_	VA	VA	_	0	root	_	_
5	。	_	PU	PU	_	4	punct	_	_

Oracle:
(x0 / 高兴-01, arg0, x4 / 我)
(x0 / 高兴-01, degree, x3 / 非常)
(x0 / 高兴-01, manner, x5 / 就)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),高兴,高兴,false), Span(2,3,List(1),非常,非常,false), Span(1,2,List(2),就,就-01,false), Span(0,1,List(3),我,我,false)),Map(2 -> 就-01, 1 -> 非常, 0 -> 高兴, 3 -> 我),Map(高 -> 高兴, 就 -> 就-01, 我 -> 我, 非 -> 非常))),[Ljava.lang.String;@5c5a91b4,Annotation([Ljava.lang.String;@5e37fb82,[Ljava.lang.String;@59ec7020,[Ljava.lang.String;@23f60b7d),Annotation([Ljava.lang.String;@2ba9f986,[Ljava.lang.String;@4aa3fc9a,[Ledu.cmu.lti.nlp.amr.Dependency;@70f4f89e),Annotation([Ljava.lang.String;@634aa81e,[Ljava.lang.String;@74b1838,[Ljava.lang.String;@52d96367),Annotation([Ljava.lang.String;@5be51aa,[Ljava.lang.String;@3302035b,[Ledu.cmu.lti.nlp.amr.Entity;@6c5747db))
AMR:
(高 / 高兴, degree, 非 / 非常)
(高 / 高兴, manner, 就 / 就-01)
(高 / 高兴, mod, 我 / 我)

Decoded in 6,002 microseconds
Sentence: 这时 ， 所有 的 星星 都 在 柔情 地 轻声 笑 着 。

Spans:
Span 6-7:  在 => 在-01
Span 8-9:  地 => 地
Span 2-3:  所有 => 所有
Span 4-5:  星星 => 星星
Span 7-8:  柔情 => 柔情
Span 10-11:  笑 => 笑-01
Span 9-10:  轻声 => 轻声
Span 0-1:  这时 => 这时
Span 5-6:  都 => 都

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 2-3:  所有 => 所有
Oracle Span 4-5:  星星 => 星星
Oracle Span 7-8:  柔情 => 柔情
Oracle Span 10-11:  笑 => 笑-01
Oracle Span 9-10:  轻声 => 轻声
Oracle Span 0-1:  这时 => 这时

Extra span: 地 => 地
Extra span: 在 => 在-01
Extra span: 都 => 都
Dependencies:
1	这时	_	AD	AD	_	11	advmod	_	_
2	,	_	PU	PU	_	11	punct	_	_
3	所有	_	DT	DT	_	5	assmod	_	_
4	的	_	DEG	DEG	_	3	assm	_	_
5	星星	_	NN	NN	_	11	nsubj	_	_
6	都	_	AD	AD	_	11	advmod	_	_
7	在	_	P	P	_	11	prep	_	_
8	柔情	_	NR	NR	_	9	nn	_	_
9	地	_	NN	NN	_	7	pobj	_	_
10	轻声	_	AD	AD	_	11	advmod	_	_
11	笑	_	VV	VV	_	0	root	_	_
12	着	_	AS	AS	_	11	asp	_	_
13	。	_	PU	PU	_	11	punct	_	_

Oracle:
(x0 / 笑-01, arg0, x2 / 星星)
(x0 / 笑-01, manner, x10 / 柔情)
(x0 / 笑-01, manner, x11 / 轻声)
(x0 / 笑-01, time, x9 / 这时)
(x2 / 星星, mod, x3 / 所有)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),笑,笑-01,false), Span(9,10,List(1),轻声,轻声,false), Span(8,9,List(2),地,地,false), Span(7,8,List(3),柔情,柔情,false), Span(6,7,List(4),在,在-01,false), Span(5,6,List(5),都,都,false), Span(4,5,List(6),星星,星星,false), Span(2,3,List(7),所有,所有,false), Span(0,1,List(8),这时,这时,false)),Map(2 -> 地, 5 -> 都, 8 -> 这时, 7 -> 所有, 1 -> 轻声, 4 -> 在-01, 6 -> 星星, 0 -> 笑-01, 3 -> 柔情),Map(柔 -> 柔情, 星 -> 星星, 在 -> 在-01, 这 -> 这时, 笑 -> 笑-01, 所 -> 所有, 地 -> 地, 都 -> 都, 轻 -> 轻声))),[Ljava.lang.String;@750cd36d,Annotation([Ljava.lang.String;@2c8ff67,[Ljava.lang.String;@21733cbe,[Ljava.lang.String;@77ccded4),Annotation([Ljava.lang.String;@64c8fcfb,[Ljava.lang.String;@21be14c2,[Ledu.cmu.lti.nlp.amr.Dependency;@19105a87),Annotation([Ljava.lang.String;@83b0d0f,[Ljava.lang.String;@2bb717d7,[Ljava.lang.String;@7afe0e67),Annotation([Ljava.lang.String;@6121a7dd,[Ljava.lang.String;@31228d83,[Ledu.cmu.lti.nlp.amr.Entity;@22b82ddf))
AMR:
(在 / 在-01, ARG1, 柔 / 柔情)
(在 / 在-01, ARG4, 星 / 星星)
(在 / 在-01, manner, 都 / 都)
(地 / 地, manner, 柔 / 柔情)
(星 / 星星, mod, 所 / 所有)
(笑 / 笑-01, manner, 柔 / 柔情)
(笑 / 笑-01, manner, 轻 / 轻声)
(笑 / 笑-01, time, 这 / 这时)

Decoded in 26,141 microseconds
Sentence: 忽而 我 又 对 自己 说 ： “ 人们 有时 总 免 不 了 会 疏忽 的 ， 那 就 够戗 ！

Spans:
Span 12-13:  不 => 不
Span 8-9:  人们 => 人们
Span 14-15:  会 => 会-03
Span 11-12:  免 => 免-01
Span 2-3:  又 => 又
Span 20-21:  够戗 => 够戗
Span 3-4:  对 => 对-02
Span 19-20:  就 => 就-01
Span 0-1:  忽而 => 忽而
Span 1-2:  我 => 我
Span 9-10:  有时 => 有时
Span 15-16:  疏忽 => 疏忽-01
Span 4-5:  自己 => 自己
Span 5-6:  说 => 说-02
Span 18-19:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg3 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 8-9:  人们 => 人们
Oracle Span 11-12:  免 => 免-01
Oracle Span 2-3:  又 => 又
Oracle Span 20-21:  够戗 => 够戗
Oracle Span 0-1:  忽而 => 忽而
Oracle Span 1-2:  我 => 我
Oracle Span 9-10:  有时 => 有时
Oracle Span 15-16:  疏忽 => 疏忽-01
Oracle Span 4-5:  自己 => 自己
Oracle Span 5-6:  说 => 说-01
Oracle Span 18-19:  那 => 那

Extra span: 就 => 就-01
Extra span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 说 => 说-02
Extra span: 对 => 对-02
Missing span: 说 => 说-01
Dependencies:
1	忽而	_	NR	NR	_	6	nsubj	_	_
2	我	_	PN	PN	_	6	nsubj	_	_
3	又	_	AD	AD	_	6	advmod	_	_
4	对	_	P	P	_	6	prep	_	_
5	自己	_	PN	PN	_	4	pobj	_	_
6	说	_	VV	VV	_	0	root	_	_
7	：	_	PU	PU	_	6	punct	_	_
8	“	_	PU	PU	_	12	punct	_	_
9	人们	_	NN	NN	_	12	nsubj	_	_
10	有时	_	AD	AD	_	12	advmod	_	_
11	总	_	AD	AD	_	12	advmod	_	_
12	免	_	VV	VV	_	6	ccomp	_	_
13	不	_	AD	AD	_	14	neg	_	_
14	了	_	VV	VV	_	12	ccomp	_	_
15	会	_	VV	VV	_	14	dobj	_	_
16	疏忽	_	NN	NN	_	15	dobj	_	_
17	的	_	DEC	DEC	_	15	cpm	_	_
18	,	_	PU	PU	_	12	punct	_	_
19	那	_	PN	PN	_	21	nsubj	_	_
20	就	_	AD	AD	_	21	advmod	_	_
21	够戗	_	VV	VV	_	12	conj	_	_
22	！	_	PU	PU	_	6	punct	_	_
23	人们	_	NN	NN	_	14	xsubj	_	_

Oracle:
(x0 / 说-01, arg0, x2 / 我)
(x0 / 说-01, arg1, x23 / 够戗)
(x0 / 说-01, arg3, x21 / 自己)
(x0 / 说-01, manner, x30 / 又)
(x0 / 说-01, time, x10 / 忽而)
(x23 / 够戗, cause, x24 / 免-01)
(x23 / 够戗, domain, x29 / 那)
(x24 / 免-01, arg0, x26 / 人们)
(x24 / 免-01, arg2, x27 / 疏忽-01)
(x24 / 免-01, time, x28 / 有时)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),够戗,够戗,false), Span(19,20,List(1),就,就-01,false), Span(18,19,List(2),那,那,false), Span(15,16,List(3),疏忽,疏忽-01,false), Span(14,15,List(4),会,会-03,false), Span(12,13,List(5),不,不,false), Span(11,12,List(6),免,免-01,false), Span(9,10,List(7),有时,有时,false), Span(8,9,List(8),人们,人们,false), Span(5,6,List(9),说,说-02,false), Span(4,5,List(10),自己,自己,false), Span(3,4,List(11),对,对-02,false), Span(2,3,List(12),又,又,false), Span(1,2,List(13),我,我,false), Span(0,1,List(14),忽而,忽而,false)),Map(2 -> 那, 5 -> 不, 12 -> 又, 8 -> 人们, 7 -> 有时, 1 -> 就-01, 4 -> 会-03, 11 -> 对-02, 14 -> 忽而, 6 -> 免-01, 0 -> 够戗, 9 -> 说-02, 3 -> 疏忽-01, 10 -> 自己, 13 -> 我),Map(就 -> 就-01, 又 -> 又, 自 -> 自己, 忽 -> 忽而, 我 -> 我, 免 -> 免-01, 会 -> 会-03, 不 -> 不, 说 -> 说-02, 疏 -> 疏忽-01, 那 -> 那, 人 -> 人们, 对 -> 对-02, 够 -> 够戗, 有 -> 有时))),[Ljava.lang.String;@28bf82d9,Annotation([Ljava.lang.String;@44ccd75c,[Ljava.lang.String;@61a704d3,[Ljava.lang.String;@2120bed),Annotation([Ljava.lang.String;@566fe83c,[Ljava.lang.String;@743bb39a,[Ledu.cmu.lti.nlp.amr.Dependency;@2de3b052),Annotation([Ljava.lang.String;@3f3c8b60,[Ljava.lang.String;@16bbaab3,[Ljava.lang.String;@3f357c9d),Annotation([Ljava.lang.String;@fe42a09,[Ljava.lang.String;@5458c71e,[Ledu.cmu.lti.nlp.amr.Entity;@1ffd0114))
AMR:
(不 / 不, manner, 免 / 免-01)
(会 / 会-03, manner, 不 / 不)
(免 / 免-01, prep-on-behalf, 人 / 人们)
(免 / 免-01, time, 有 / 有时)
(够 / 够戗, domain, 那 / 那)
(够 / 够戗, manner, 就 / 就-01)
(对 / 对-02, manner, 又 / 又)
(对 / 对-02, time, 忽 / 忽而)
(就 / 就-01, manner, 疏 / 疏忽-01)
(忽 / 忽而, destination, 我 / 我)
(疏 / 疏忽-01, manner, 会 / 会-03)
(说 / 说-02, prep-on-behalf, 人 / 人们)
(说 / 说-02, prep-on-behalf, 对 / 对-02)
(说 / 说-02, weekday, 自 / 自己)

Decoded in 62,568 microseconds
Sentence: 某 一 天 晚上 他 忘 了 玻璃 罩子 ， 或者 小羊 夜 里 不声不响 地 跑 出来 … ”

Spans:
Span 14-15:  不声不响 => 不声不响-01
Span 4-5:  他 => 他
Span 17-18:  出来 => 出来
Span 15-16:  地 => 地
Span 2-3:  天 => (temporal-quantity :unit 天)
Span 5-6:  忘 => 忘-01
Span 3-4:  晚上 => 晚上
Span 0-1:  某 => 某
Span 7-8:  玻璃 => 玻璃
Span 8-9:  罩子 => 罩子
Span 16-17:  跑 => 跑-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 14-15:  不声不响 => 不声不响-01
Oracle Span 4-5:  他 => 他
Oracle Span 17-18:  出来 => 出来-01
Oracle Span 5-6:  忘 => 忘-01
Oracle Span 3-4:  晚上 => 晚上
Oracle Span 7-8:  玻璃 => 玻璃
Oracle Span 8-9:  罩子 => 罩子
Oracle Span 16-17:  跑 => 跑-01

Incorrect span: 出来 => 出来
Extra span: 地 => 地
Extra span: 天 => (temporal-quantity :unit 天)
Extra span: 某 => 某
Missing span: 出来 => 出来-01
Dependencies:
1	某	_	DT	DT	_	6	dep	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	天	_	M	M	_	1	dep	_	_
4	晚上	_	NT	NT	_	1	dep	_	_
5	他	_	PN	PN	_	6	nsubj	_	_
6	忘	_	VV	VV	_	0	root	_	_
7	了	_	AS	AS	_	6	asp	_	_
8	玻璃	_	NN	NN	_	9	nn	_	_
9	罩子	_	NN	NN	_	6	dobj	_	_
10	,	_	PU	PU	_	6	punct	_	_
11	或者	_	CC	CC	_	6	cc	_	_
12	小羊	_	NN	NN	_	13	nn	_	_
13	夜	_	NN	NN	_	14	lobj	_	_
14	里	_	LC	LC	_	18	loc	_	_
15	不声不响	_	NN	NN	_	17	nn	_	_
16	地	_	NN	NN	_	17	nn	_	_
17	跑	_	NN	NN	_	18	nsubj	_	_
18	出来	_	VV	VV	_	6	conj	_	_
19	…	_	NN	NN	_	18	dobj	_	_
20	”	_	PU	PU	_	18	punct	_	_

Oracle:
(x18 / 忘-01, arg0, x19 / 他)
(x18 / 忘-01, arg1, x20 / 罩子)
(x18 / 忘-01, time, x23 / 晚上)
(x25 / 跑-01, direction, x29 / 出来-01)
(x25 / 跑-01, manner, x28 / 不声不响-01)
(x31 / 玻璃, consist, x20 / 罩子)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),出来,出来,false), Span(16,17,List(1),跑,跑-01,false), Span(15,16,List(2),地,地,false), Span(14,15,List(3),不声不响,不声不响-01,false), Span(8,9,List(4),罩子,罩子,false), Span(7,8,List(5),玻璃,玻璃,false), Span(5,6,List(6),忘,忘-01,false), Span(4,5,List(7),他,他,false), Span(3,4,List(8),晚上,晚上,false), Span(2,3,List(10, 9),天,(temporal-quantity :unit 天),false), Span(0,1,List(11),某,某,false)),Map(2 -> 地, 5 -> 玻璃, 8 -> 晚上, 7 -> 他, 1 -> 跑-01, 11 -> 某, 4 -> 罩子, 6 -> 忘-01, 9 -> temporal-quantity, 0 -> 出来, 10 -> 天, 3 -> 不声不响-01),Map(t -> temporal-quantity, 玻 -> 玻璃, 跑 -> 跑-01, 某 -> 某, 晚 -> 晚上, 他 -> 他, 罩 -> 罩子, 忘 -> 忘-01, 地 -> 地, 天 -> 天, 不 -> 不声不响-01, 出 -> 出来))),[Ljava.lang.String;@b3857e2,Annotation([Ljava.lang.String;@25a290ee,[Ljava.lang.String;@37d0d373,[Ljava.lang.String;@4052913c),Annotation([Ljava.lang.String;@99c4993,[Ljava.lang.String;@38089dae,[Ledu.cmu.lti.nlp.amr.Dependency;@9729a97),Annotation([Ljava.lang.String;@5dfd31f4,[Ljava.lang.String;@36463b09,[Ljava.lang.String;@4adf3582),Annotation([Ljava.lang.String;@57e4b86c,[Ljava.lang.String;@632241f5,[Ledu.cmu.lti.nlp.amr.Entity;@64bba0eb))
AMR:
(t / temporal-quantity, unit, 天 / 天)
(t / temporal-quantity, weekday, 晚 / 晚上)
(地 / 地, manner, 不 / 不声不响-01)
(忘 / 忘-01, age, 他 / 他)
(忘 / 忘-01, manner, 不 / 不声不响-01)
(忘 / 忘-01, manner, 玻 / 玻璃)
(忘 / 忘-01, time, 晚 / 晚上)
(某 / 某, weekday, 晚 / 晚上)
(玻 / 玻璃, consist, 罩 / 罩子)
(跑 / 跑-01, manner, 不 / 不声不响-01)
(跑 / 跑-01, manner, 出 / 出来)

Decoded in 39,003 microseconds
Sentence: 想到 这里 ， 小 铃铛 都 变成 泪珠 了 ！

Spans:
Span 6-7:  变成 => 变成-01
Span 3-4:  小 => 小
Span 0-1:  想到 => 想到-01
Span 7-8:  泪珠 => 泪珠
Span 1-2:  这里 => 这里
Span 5-6:  都 => 都
Span 4-5:  铃铛 => 铃铛

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :cause in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  变成 => 变成-01
Oracle Span 3-4:  小 => 小-01
Oracle Span 0-1:  想到 => 想到-01
Oracle Span 7-8:  泪珠 => 泪珠
Oracle Span 1-2:  这里 => 这里
Oracle Span 4-5:  铃铛 => 铃铛

Extra span: 都 => 都
Incorrect span: 小 => 小
Missing span: 小 => 小-01
Dependencies:
1	想到	_	VV	VV	_	0	root	_	_
2	这里	_	PN	PN	_	7	nsubj	_	_
3	,	_	PU	PU	_	7	punct	_	_
4	小	_	JJ	JJ	_	5	amod	_	_
5	铃铛	_	NN	NN	_	7	nsubj	_	_
6	都	_	AD	AD	_	7	advmod	_	_
7	变成	_	VV	VV	_	1	ccomp	_	_
8	泪珠	_	NN	NN	_	7	dobj	_	_
9	了	_	SP	SP	_	1	dep	_	_
10	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 变成-01, arg0, x2 / 铃铛)
(x0 / 变成-01, arg1, x4 / 泪珠)
(x0 / 变成-01, cause, x5 / 想到-01)
(x2 / 铃铛, mod, x3 / 小-01)
(x5 / 想到-01, arg1, x6 / 这里)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),泪珠,泪珠,false), Span(6,7,List(1),变成,变成-01,false), Span(5,6,List(2),都,都,false), Span(4,5,List(3),铃铛,铃铛,false), Span(3,4,List(4),小,小,false), Span(1,2,List(5),这里,这里,false), Span(0,1,List(6),想到,想到-01,false)),Map(2 -> 都, 5 -> 这里, 1 -> 变成-01, 4 -> 小, 6 -> 想到-01, 0 -> 泪珠, 3 -> 铃铛),Map(这 -> 这里, 小 -> 小, 变 -> 变成-01, 铃 -> 铃铛, 泪 -> 泪珠, 都 -> 都, 想 -> 想到-01))),[Ljava.lang.String;@577bfadb,Annotation([Ljava.lang.String;@25ae1f80,[Ljava.lang.String;@54f2df29,[Ljava.lang.String;@6df791a4),Annotation([Ljava.lang.String;@655203e3,[Ljava.lang.String;@305552d6,[Ledu.cmu.lti.nlp.amr.Dependency;@729cd862),Annotation([Ljava.lang.String;@23b71d24,[Ljava.lang.String;@568f4faa,[Ljava.lang.String;@4c56644f),Annotation([Ljava.lang.String;@589dfa6f,[Ljava.lang.String;@43588265,[Ledu.cmu.lti.nlp.amr.Entity;@6f8667bb))
AMR:
(变 / 变成-01, degree, 铃 / 铃铛)
(变 / 变成-01, manner, 都 / 都)
(变 / 变成-01, ord, 泪 / 泪珠)
(想 / 想到-01, ord, 这 / 这里)
(铃 / 铃铛, mod, 小 / 小)
(铃 / 铃铛, unit, 这 / 这里)

Decoded in 19,739 microseconds
Sentence: 这 真 是 一 个 很 大 的 奥秘 。

Spans:
Span 6-7:  大 => 大
Span 8-9:  奥秘 => 奥秘
Span 5-6:  很 => 很
Span 2-3:  是 => 是-04
Span 1-2:  真 => 真
Span 0-1:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  大 => 大-04
Oracle Span 8-9:  奥秘 => 奥秘
Oracle Span 5-6:  很 => 很
Oracle Span 0-1:  这 => 这

Incorrect span: 大 => 大
Extra span: 是 => 是-04
Extra span: 真 => 真
Missing span: 大 => 大-04
Dependencies:
1	这	_	PN	PN	_	3	nsubj	_	_
2	真	_	AD	AD	_	3	advmod	_	_
3	是	_	VC	VC	_	0	root	_	_
4	一	_	CD	CD	_	5	nummod	_	_
5	个	_	M	M	_	9	clf	_	_
6	很	_	AD	AD	_	7	advmod	_	_
7	大	_	VA	VA	_	9	rcmod	_	_
8	的	_	DEC	DEC	_	7	cpm	_	_
9	奥秘	_	NN	NN	_	3	attr	_	_
10	。	_	PU	PU	_	3	punct	_	_

Oracle:
(x0 / 奥秘, domain, x8 / 这)
(x0 / 奥秘, mod, x5 / 大-04)
(x5 / 大-04, degree, x6 / 很)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),奥秘,奥秘,false), Span(6,7,List(1),大,大,false), Span(5,6,List(2),很,很,false), Span(2,3,List(3),是,是-04,false), Span(1,2,List(4),真,真,false), Span(0,1,List(5),这,这,false)),Map(2 -> 很, 5 -> 这, 1 -> 大, 4 -> 真, 0 -> 奥秘, 3 -> 是-04),Map(这 -> 这, 很 -> 很, 大 -> 大, 奥 -> 奥秘, 是 -> 是-04, 真 -> 真))),[Ljava.lang.String;@100d0218,Annotation([Ljava.lang.String;@2774dcf4,[Ljava.lang.String;@20b829d5,[Ljava.lang.String;@7c5f29c6),Annotation([Ljava.lang.String;@4baf997,[Ljava.lang.String;@5280688,[Ledu.cmu.lti.nlp.amr.Dependency;@643f6179),Annotation([Ljava.lang.String;@61ab6521,[Ljava.lang.String;@328e4ec2,[Ljava.lang.String;@7757025d),Annotation([Ljava.lang.String;@68fc9167,[Ljava.lang.String;@52c46334,[Ledu.cmu.lti.nlp.amr.Entity;@12fccff0))
AMR:
(大 / 大, degree, 很 / 很)
(奥 / 奥秘, domain, 这 / 这)
(奥 / 奥秘, mod, 大 / 大)
(是 / 是-04, ARG4, 这 / 这)
(是 / 是-04, manner, 真 / 真)

Decoded in 12,053 microseconds
Sentence: 对 你们 这些 喜欢 小 王子 的 人 来说 ， 就 象 对于 我 来说 一样 ， 无论 什么 地方 ， 凡是 某 处 ， 如果 一 只 羊 （ 尽管 我们 并不 认识 它 ） ， 吃 了 一 朵 玫瑰花 ， 或是 没有 吃掉 一 朵 玫瑰花 ， 那么 宇宙 的 面貌 就 全然 不同 。

Spans:
Span 15-16:  一样 => 一样
Span 56-57:  不同 => 不同-01
Span 7-8:  人 => 人
Span 18-19:  什么 => 什么
Span 1-2:  你们 => 你们
Span 55-56:  全然 => 全然
Span 21-22:  凡是 => 凡是
Span 27-28:  只 => 只
Span 37-38:  吃 => (thing :arg1-of 吃-01)
Span 45-46:  吃掉 => 吃掉-01
Span 3-4:  喜欢 => 喜欢-01
Span 19-20:  地方 => 地方
Span 34-35:  它 => 它
Span 51-52:  宇宙 => 宇宙
Span 0-1:  对 => 对-02
Span 4-5:  小 => 小
Span 54-55:  就 => 就-01
Span 10-11:  就 => 就-01
Span 13-14:  我 => 我
Span 31-32:  我们 => 我们
Span 17-18:  无论 => 无论-01
Span 14-15:  来说 => 来说-01
Span 8-9:  来说 => 来说-01
Span 22-23:  某 => 某
Span 5-6:  王子 => 王子
Span 48-49:  玫瑰花 => 玫瑰花
Span 41-42:  玫瑰花 => 玫瑰花
Span 28-29:  羊 => 羊
Span 33-34:  认识 => 认识-01
Span 2-3:  这些 => 这些
Span 50-51:  那么 => 那么
Span 53-54:  面貌 => 面貌

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 望 着 天空 。

Spans:
Span 2-3:  天空 => 天空
Span 0-1:  望 => 望-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  天空 => 天空
Oracle Span 0-1:  望 => 望-01

Dependencies:
1	望	_	VV	VV	_	0	root	_	_
2	着	_	AS	AS	_	1	asp	_	_
3	天空	_	NN	NN	_	1	dobj	_	_
4	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 望-01, arg1, x4 / 天空)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),天空,天空,false), Span(0,1,List(1),望,望-01,false)),Map(1 -> 望-01, 0 -> 天空),Map(天 -> 天空, 望 -> 望-01))),[Ljava.lang.String;@510da778,Annotation([Ljava.lang.String;@20a1b3ae,[Ljava.lang.String;@54567b05,[Ljava.lang.String;@3a5e2525),Annotation([Ljava.lang.String;@6546371,[Ljava.lang.String;@2b458cd6,[Ledu.cmu.lti.nlp.amr.Dependency;@4c2c44e8),Annotation([Ljava.lang.String;@7103745,[Ljava.lang.String;@227a933d,[Ljava.lang.String;@25de8898),Annotation([Ljava.lang.String;@bfb93cf,[Ljava.lang.String;@dd737ea,[Ledu.cmu.lti.nlp.amr.Entity;@7bc2ae16))
AMR:
(望 / 望-01, mod, 天 / 天空)

Decoded in 2,851 microseconds
Sentence: 你们 想 一 想 ： 是 还是 不 是 ？

Spans:
Span 7-8:  不 => 不
Span 0-1:  你们 => 你们
Span 3-4:  想 => 想-05
Span 1-2:  想 => 想-05
Span 8-9:  是 => 是-04
Span 5-6:  是 => 是-04
Span 6-7:  还是 => 还是

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  你们 => 你们
Oracle Span 1-2:  想 => 想-01
Oracle Span 5-6:  是 => 是-03
Oracle Span 8-9:  是 => 是-03

Incorrect span: 是 => 是-04
Extra span: 不 => 不
Extra span: 还是 => 还是
Incorrect span: 是 => 是-04
Extra span: 想 => 想-05
Incorrect span: 想 => 想-05
Missing span: 想 => 想-01
Missing span: 是 => 是-03
Missing span: 是 => 是-03
Dependencies:
1	你们	_	PN	PN	_	2	nsubj	_	_
2	想	_	VV	VV	_	0	root	_	_
3	一	_	AD	AD	_	4	advmod	_	_
4	想	_	VV	VV	_	2	ccomp	_	_
5	：	_	PU	PU	_	4	punct	_	_
6	是	_	VC	VC	_	4	ccomp	_	_
7	还是	_	CC	CC	_	2	cc	_	_
8	不	_	AD	AD	_	9	neg	_	_
9	是	_	VC	VC	_	2	dep	_	_
10	？	_	PU	PU	_	2	punct	_	_
11	你们	_	PN	PN	_	4	xsubj	_	_

Oracle:
(x0 / 想-01, arg0, x2 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),是,是-04,false), Span(7,8,List(1),不,不,false), Span(6,7,List(2),还是,还是,false), Span(5,6,List(3),是,是-04,false), Span(3,4,List(4),想,想-05,false), Span(1,2,List(5),想,想-05,false), Span(0,1,List(6),你们,你们,false)),Map(2 -> 还是, 5 -> 想-05, 1 -> 不, 4 -> 想-05, 6 -> 你们, 0 -> 是-04, 3 -> 是-04),Map(想2 -> 想-05, 你 -> 你们, 不 -> 不, 还 -> 还是, 想 -> 想-05, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@2a0963be,Annotation([Ljava.lang.String;@7d3bf8db,[Ljava.lang.String;@49e7e8f1,[Ljava.lang.String;@27bb4dc5),Annotation([Ljava.lang.String;@464ede1f,[Ljava.lang.String;@64910b2d,[Ledu.cmu.lti.nlp.amr.Dependency;@1247c72e),Annotation([Ljava.lang.String;@6fef75c6,[Ljava.lang.String;@5f61e002,[Ljava.lang.String;@334540a0),Annotation([Ljava.lang.String;@1f179f51,[Ljava.lang.String;@b428830,[Ledu.cmu.lti.nlp.amr.Entity;@5b7308aa))
AMR:
(想 / 想-05, prep-along-with, 是2 / 是-04)
(想2 / 想-05, prep-along-with, 想 / 想-05)
(想2 / 想-05, prep-following, 你 / 你们)
(是 / 是-04, time, 不 / 不)
(是2 / 是-04, direction, 还 / 还是)
(是2 / 是-04, prep-along-with, 不 / 不)

Decoded in 16,277 microseconds
Sentence: 羊 究竟 是 吃 了 还是 没有 吃掉 花 ？

Spans:
Span 3-4:  吃 => (thing :arg1-of 吃-01)
Span 7-8:  吃掉 => 吃掉-01
Span 2-3:  是 => 是-04
Span 1-2:  究竟 => 究竟
Span 0-1:  羊 => 羊
Span 8-9:  花 => 花-01
Span 5-6:  还是 => 还是

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 那么 你们 就 会 看到 一切 都 变 了 样 …

Spans:
Span 5-6:  一切 => 一切
Span 3-4:  会 => 会-03
Span 1-2:  你们 => 你们
Span 7-8:  变 => 变-01
Span 2-3:  就 => 就-01
Span 4-5:  看到 => (thing :arg1-of 看到-01)
Span 0-1:  那么 => 那么
Span 6-7:  都 => 都

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 任何 一 个 大人 将 永远 不 会 明白 这 个 问题 竟 如此 重要 ！

Spans:
Span 6-7:  不 => 不
Span 0-1:  任何 => 任何
Span 7-8:  会 => 会-03
Span 3-4:  大人 => 大人
Span 13-14:  如此 => 如此
Span 4-5:  将 => 将-01
Span 8-9:  明白 => 明白-01
Span 5-6:  永远 => 永远
Span 12-13:  竟 => 竟
Span 9-10:  这 => 这
Span 14-15:  重要 => 重要-01
Span 11-12:  问题 => 问题

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 0-1:  任何 => 任何
Oracle Span 7-8:  会 => 会-02
Oracle Span 3-4:  大人 => 大人
Oracle Span 13-14:  如此 => 如此
Oracle Span 4-5:  将 => 将
Oracle Span 8-9:  明白 => 明白-01
Oracle Span 5-6:  永远 => 永远
Oracle Span 12-13:  竟 => 竟
Oracle Span 9-10:  这 => 这
Oracle Span 14-15:  重要 => 重要-01
Oracle Span 11-12:  问题 => 问题

Incorrect span: 会 => 会-03
Extra span: 不 => 不
Incorrect span: 将 => 将-01
Missing span: 会 => 会-02
Missing span: 将 => 将
Dependencies:
1	任何	_	DT	DT	_	4	det	_	_
2	一	_	CD	CD	_	3	nummod	_	_
3	个	_	M	M	_	1	dep	_	_
4	大人	_	NN	NN	_	9	nsubj	_	_
5	将	_	AD	AD	_	9	advmod	_	_
6	永远	_	AD	AD	_	9	advmod	_	_
7	不	_	AD	AD	_	9	neg	_	_
8	会	_	VV	VV	_	9	mmod	_	_
9	明白	_	VV	VV	_	0	root	_	_
10	这	_	DT	DT	_	12	det	_	_
11	个	_	M	M	_	10	clf	_	_
12	问题	_	NN	NN	_	9	dobj	_	_
13	竟	_	AD	AD	_	15	advmod	_	_
14	如此	_	AD	AD	_	15	advmod	_	_
15	重要	_	VA	VA	_	9	dep	_	_
16	！	_	PU	PU	_	9	punct	_	_

Oracle:
(x0 / 会-02, arg0, x14 / 明白-01)
(x0 / 会-02, time, x25 / 永远)
(x14 / 明白-01, arg0, x15 / 大人)
(x14 / 明白-01, arg1, x26 / 重要-01)
(x14 / 明白-01, time, x23 / 将)
(x15 / 大人, mod, x17 / 任何)
(x26 / 重要-01, arg0, x27 / 问题)
(x26 / 重要-01, degree, x29 / 如此)
(x26 / 重要-01, manner, x30 / 竟)
(x27 / 问题, mod, x28 / 这)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),重要,重要-01,false), Span(13,14,List(1),如此,如此,false), Span(12,13,List(2),竟,竟,false), Span(11,12,List(3),问题,问题,false), Span(9,10,List(4),这,这,false), Span(8,9,List(5),明白,明白-01,false), Span(7,8,List(6),会,会-03,false), Span(6,7,List(7),不,不,false), Span(5,6,List(8),永远,永远,false), Span(4,5,List(9),将,将-01,false), Span(3,4,List(10),大人,大人,false), Span(0,1,List(11),任何,任何,false)),Map(2 -> 竟, 5 -> 明白-01, 8 -> 永远, 7 -> 不, 1 -> 如此, 11 -> 任何, 4 -> 这, 6 -> 会-03, 9 -> 将-01, 0 -> 重要-01, 10 -> 大人, 3 -> 问题),Map(任 -> 任何, 永 -> 永远, 重 -> 重要-01, 这 -> 这, 大 -> 大人, 将 -> 将-01, 不 -> 不, 会 -> 会-03, 明 -> 明白-01, 问 -> 问题, 竟 -> 竟, 如 -> 如此))),[Ljava.lang.String;@7ef8e623,Annotation([Ljava.lang.String;@3d8d970e,[Ljava.lang.String;@2fac80a8,[Ljava.lang.String;@6987a133),Annotation([Ljava.lang.String;@50778bde,[Ljava.lang.String;@1934339,[Ledu.cmu.lti.nlp.amr.Dependency;@4af12a63),Annotation([Ljava.lang.String;@1eab8437,[Ljava.lang.String;@72eed547,[Ljava.lang.String;@69ffdaa8),Annotation([Ljava.lang.String;@2a1e57c6,[Ljava.lang.String;@68d6f48e,[Ledu.cmu.lti.nlp.amr.Entity;@6c96403e))
AMR:
(不 / 不, time, 永 / 永远)
(会 / 会-03, time, 不 / 不)
(大 / 大人, mod, 任 / 任何)
(将 / 将-01, time, 大 / 大人)
(明 / 明白-01, manner, 会 / 会-03)
(明 / 明白-01, manner, 竟 / 竟)
(明 / 明白-01, manner, 这 / 这)
(永 / 永远, time, 将 / 将-01)
(重 / 重要-01, degree, 如 / 如此)
(重 / 重要-01, manner, 竟 / 竟)
(问 / 问题, manner, 竟 / 竟)

Decoded in 38,365 microseconds
Sentence: 对 我 来说 ， 这 是 世界 上 最 美 也 是 最 凄凉 的 地方 。

Spans:
Span 6-7:  世界 => 世界
Span 10-11:  也 => 也
Span 13-14:  凄凉 => 凄凉-01
Span 15-16:  地方 => 地方
Span 0-1:  对 => 对-02
Span 1-2:  我 => 我
Span 11-12:  是 => 是-04
Span 5-6:  是 => 是-04
Span 12-13:  最 => 最
Span 8-9:  最 => 最
Span 2-3:  来说 => 来说-01
Span 9-10:  美 => 美-01
Span 4-5:  这 => 这

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 6-7:  世界 => 世界
Oracle Span 13-14:  凄凉 => 凄凉-01
Oracle Span 15-16:  地方 => 地方
Oracle Span 1-2:  我 => 我
Oracle Span 8-9:  最 => 最
Oracle Span 12-13:  最 => 最
Oracle Span 2-3:  来说 => 来说-01
Oracle Span 9-10:  美 => 美-01
Oracle Span 4-5:  这 => 这

Extra span: 是 => 是-04
Extra span: 也 => 也
Extra span: 是 => 是-04
Extra span: 对 => 对-02
Dependencies:
1	对	_	P	P	_	6	prep	_	_
2	我	_	PN	PN	_	3	nn	_	_
3	来说	_	NN	NN	_	1	pobj	_	_
4	,	_	PU	PU	_	6	punct	_	_
5	这	_	PN	PN	_	6	top	_	_
6	是	_	VC	VC	_	0	root	_	_
7	世界	_	NN	NN	_	8	lobj	_	_
8	上	_	LC	LC	_	9	dep	_	_
9	最	_	NN	NN	_	6	attr	_	_
10	美	_	NR	NR	_	12	nsubj	_	_
11	也	_	AD	AD	_	12	advmod	_	_
12	是	_	VC	VC	_	6	conj	_	_
13	最	_	AD	AD	_	14	advmod	_	_
14	凄凉	_	VA	VA	_	16	rcmod	_	_
15	的	_	DEC	DEC	_	14	cpm	_	_
16	地方	_	NN	NN	_	12	attr	_	_
17	。	_	PU	PU	_	6	punct	_	_

Oracle:
(x26 / 来说-01, arg1, x28 / 我)
(x26 / 来说-01, arg2, x29 / 地方)
(x29 / 地方, domain, x35 / 这)
(x29 / 地方, location, x34 / 世界)
(x29 / 地方, mod, x30 / 美-01)
(x29 / 地方, mod, x32 / 凄凉-01)
(x30 / 美-01, degree, x31 / 最)
(x32 / 凄凉-01, degree, x33 / 最)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),地方,地方,false), Span(13,14,List(1),凄凉,凄凉-01,false), Span(12,13,List(2),最,最,false), Span(11,12,List(3),是,是-04,false), Span(10,11,List(4),也,也,false), Span(9,10,List(5),美,美-01,false), Span(8,9,List(6),最,最,false), Span(6,7,List(7),世界,世界,false), Span(5,6,List(8),是,是-04,false), Span(4,5,List(9),这,这,false), Span(2,3,List(10),来说,来说-01,false), Span(1,2,List(11),我,我,false), Span(0,1,List(12),对,对-02,false)),Map(2 -> 最, 5 -> 美-01, 12 -> 对-02, 8 -> 是-04, 7 -> 世界, 1 -> 凄凉-01, 4 -> 也, 11 -> 我, 6 -> 最, 0 -> 地方, 9 -> 这, 3 -> 是-04, 10 -> 来说-01),Map(美 -> 美-01, 也 -> 也, 来 -> 来说-01, 我 -> 我, 这 -> 这, 最2 -> 最, 地 -> 地方, 凄 -> 凄凉-01, 世 -> 世界, 对 -> 对-02, 是 -> 是-04, 是2 -> 是-04, 最 -> 最))),[Ljava.lang.String;@7babed9e,Annotation([Ljava.lang.String;@2353354a,[Ljava.lang.String;@7c7ed72a,[Ljava.lang.String;@22b7ef2b),Annotation([Ljava.lang.String;@6d421fe,[Ljava.lang.String;@3c17bd0b,[Ledu.cmu.lti.nlp.amr.Dependency;@36dafa24),Annotation([Ljava.lang.String;@2b098563,[Ljava.lang.String;@c758a2d,[Ljava.lang.String;@d0b814d),Annotation([Ljava.lang.String;@6ce15112,[Ljava.lang.String;@ba4f370,[Ledu.cmu.lti.nlp.amr.Entity;@2ba024cb))
AMR:
(也 / 也, ARG1, 美 / 美-01)
(凄 / 凄凉-01, degree, 最2 / 最)
(地 / 地方, domain, 这 / 这)
(地 / 地方, mod, 凄 / 凄凉-01)
(地 / 地方, mod, 美 / 美-01)
(对 / 对-02, ARG3, 来 / 来说-01)
(对 / 对-02, ARG5, 我 / 我)
(是 / 是-04, manner, 也 / 也)
(是2 / 是-04, ARG1, 这 / 这)
(是2 / 是-04, ARG4, 世 / 世界)
(来 / 来说-01, ARG0, 是2 / 是-04)
(美 / 美-01, degree, 最 / 最)

Decoded in 45,623 microseconds
Sentence: 它 与 前 一 页 画 的 是 同 一 个 地方 。 我 再一次 将 它 画 出来 ， 为 的 是 好 让 你们 看 清楚 。

Spans:
Span 25-26:  你们 => 你们
Span 14-15:  再一次 => 再一次
Span 18-19:  出来 => 出来
Span 2-3:  前 => 前
Span 8-9:  同 => 同-01
Span 11-12:  地方 => 地方
Span 23-24:  好 => 好-04
Span 16-17:  它 => 它
Span 0-1:  它 => 它
Span 15-16:  将 => 将-01
Span 13-14:  我 => 我
Span 22-23:  是 => 是-04
Span 7-8:  是 => 是-04
Span 27-28:  清楚 => 清楚-01
Span 17-18:  画 => (thing :arg1-of 画-01)
Span 5-6:  画 => (thing :arg1-of 画-01)
Span 26-27:  看 => 看-10
Span 24-25:  让 => 让-01
Span 4-5:  页 => 页

************* WARNING: Cannot find label = :arg1 in the labelset ***************
 ********** THERE WAS AN EXCEPTION IN THE PARSER. *********
java.util.NoSuchElementException
	at scala.collection.concurrent.TrieMap.apply(TrieMap.scala:836)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.edu$cmu$lti$nlp$amr$GraphDecoder$Alg2$$addEdge$1(Alg2.scala:108)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:136)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2$$anonfun$apply$5.apply(Alg2.scala:131)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:131)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2$$anonfun$decode$2.apply(Alg2.scala:130)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.GraphDecoder.Alg2.decode(Alg2.scala:130)
	at edu.cmu.lti.nlp.amr.GraphDecoder.LagrangianRelaxation.decode(LagrangianRelaxation.scala:45)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:224)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:78)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:194)
	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:192)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:192)
	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
Continuing. To exit on errors, please run without --ignore-parser-errors
Sentence: 就 是 在 这里 ， 小 王子 出现 在 地球 上 ， 后来 ， 也 正 是 在 这里 消失 了 的 。

Spans:
Span 14-15:  也 => 也
Span 7-8:  出现 => 出现-01
Span 12-13:  后来 => 后来-01
Span 17-18:  在 => 在-01
Span 8-9:  在 => 在-01
Span 2-3:  在 => 在-01
Span 9-10:  地球 => 地球
Span 5-6:  小 => 小
Span 0-1:  就 => 就-01
Span 16-17:  是 => 是-04
Span 1-2:  是 => 是-04
Span 15-16:  正 => 正
Span 19-20:  消失 => 消失-01
Span 6-7:  王子 => 王子
Span 18-19:  这里 => 这里
Span 3-4:  这里 => 这里

Langrangian relaxation converged after 2 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
Oracle Span 7-8:  出现 => 出现-01
Oracle Span 12-13:  后来 => 后来-01
Oracle Span 9-10:  地球 => 地球
Oracle Span 5-6:  小 => 小-01
Oracle Span 19-20:  消失 => 消失-01
Oracle Span 6-7:  王子 => 王子
Oracle Span 3-4:  这里 => 这里

Extra span: 这里 => 这里
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 正 => 正
Extra span: 也 => 也
Extra span: 在 => 在-01
Incorrect span: 小 => 小
Extra span: 在 => 在-01
Extra span: 是 => 是-04
Extra span: 就 => 就-01
Missing span: 小 => 小-01
Dependencies:
1	就	_	AD	AD	_	2	advmod	_	_
2	是	_	VC	VC	_	0	root	_	_
3	在	_	P	P	_	2	prep	_	_
4	这里	_	PN	PN	_	3	pobj	_	_
5	,	_	PU	PU	_	2	punct	_	_
6	小	_	JJ	JJ	_	7	amod	_	_
7	王子	_	NN	NN	_	8	nsubj	_	_
8	出现	_	VV	VV	_	2	dep	_	_
9	在	_	P	P	_	8	prep	_	_
10	地球	_	NN	NN	_	11	lobj	_	_
11	上	_	LC	LC	_	9	plmod	_	_
12	,	_	PU	PU	_	2	punct	_	_
13	后来	_	AD	AD	_	17	advmod	_	_
14	,	_	PU	PU	_	17	punct	_	_
15	也	_	AD	AD	_	17	advmod	_	_
16	正	_	AD	AD	_	17	advmod	_	_
17	是	_	VC	VC	_	2	conj	_	_
18	在	_	P	P	_	20	prep	_	_
19	这里	_	PN	PN	_	18	pobj	_	_
20	消失	_	VV	VV	_	17	attr	_	_
21	了	_	AS	AS	_	20	asp	_	_
22	的	_	DEC	DEC	_	20	cpm	_	_
23	。	_	PU	PU	_	2	punct	_	_

Oracle:
(x11 / 消失-01, time, x18 / 后来-01)
(x16 / 王子, mod, x17 / 小-01)
(x6 / 出现-01, arg0, x16 / 王子)
(x6 / 出现-01, location, x9 / 这里)
(x9 / 这里, arg0, x21 / 地球)

Input(Some(Graph(null,ArrayBuffer(Span(19,20,List(0),消失,消失-01,false), Span(18,19,List(1),这里,这里,false), Span(17,18,List(2),在,在-01,false), Span(16,17,List(3),是,是-04,false), Span(15,16,List(4),正,正,false), Span(14,15,List(5),也,也,false), Span(12,13,List(6),后来,后来-01,false), Span(9,10,List(7),地球,地球,false), Span(8,9,List(8),在,在-01,false), Span(7,8,List(9),出现,出现-01,false), Span(6,7,List(10),王子,王子,false), Span(5,6,List(11),小,小,false), Span(3,4,List(12),这里,这里,false), Span(2,3,List(13),在,在-01,false), Span(1,2,List(14),是,是-04,false), Span(0,1,List(15),就,就-01,false)),Map(2 -> 在-01, 5 -> 也, 12 -> 这里, 15 -> 就-01, 8 -> 在-01, 7 -> 地球, 1 -> 这里, 4 -> 正, 11 -> 小, 14 -> 是-04, 6 -> 后来-01, 0 -> 消失-01, 9 -> 出现-01, 3 -> 是-04, 10 -> 王子, 13 -> 在-01),Map(在2 -> 在-01, 就 -> 就-01, 在 -> 在-01, 也 -> 也, 这 -> 这里, 王 -> 王子, 正 -> 正, 小 -> 小, 地 -> 地球, 出 -> 出现-01, 后 -> 后来-01, 在3 -> 在-01, 这2 -> 这里, 消 -> 消失-01, 是2 -> 是-04, 是 -> 是-04))),[Ljava.lang.String;@1c7f6e96,Annotation([Ljava.lang.String;@30ec211a,[Ljava.lang.String;@1ac0cdb0,[Ljava.lang.String;@6684f7f2),Annotation([Ljava.lang.String;@1682e6a,[Ljava.lang.String;@505d2bac,[Ledu.cmu.lti.nlp.amr.Dependency;@4cecc15a),Annotation([Ljava.lang.String;@d969452,[Ljava.lang.String;@4d4df0f4,[Ljava.lang.String;@74f4a2ba),Annotation([Ljava.lang.String;@5e385b6f,[Ljava.lang.String;@67b560fe,[Ledu.cmu.lti.nlp.amr.Entity;@45dde6ac))
AMR:
(出 / 出现-01, ARG3, 在3 / 在-01)
(出 / 出现-01, age, 是 / 是-04)
(后 / 后来-01, degree, 也 / 也)
(在 / 在-01, ARG0, 这 / 这里)
(在 / 在-01, ARG1, 是 / 是-04)
(在 / 在-01, degree, 消 / 消失-01)
(在2 / 在-01, ARG4, 王 / 王子)
(在2 / 在-01, ARG5, 出 / 出现-01)
(在3 / 在-01, ARG5, 这2 / 这里)
(地 / 地球, manner, 在2 / 在-01)
(是 / 是-04, manner, 正 / 正)
(是2 / 是-04, ARG1, 在3 / 在-01)
(是2 / 是-04, manner, 就 / 就-01)
(消 / 消失-01, time, 后 / 后来-01)
(王 / 王子, mod, 小 / 小)

Decoded in 102,617 microseconds
Sentence: 请 你们 仔细 看看 这个 地方 ， 以便 你们 有一天 去 非洲 沙漠 上 旅行 的 时候 ， 能够 准确 地 辨认 出 这个 地方 。

NER Entity: (country :name (name :op "非洲"))
NER Entity: (country :name (name :op "非洲"))
Spans:
Span 2-3:  仔细 => 仔细-01
Span 8-9:  你们 => 你们
Span 1-2:  你们 => 你们
Span 19-20:  准确 => 准确-01
Span 22-23:  出 => 出-04
Span 10-11:  去 => 去-02
Span 20-21:  地 => 地
Span 24-25:  地方 => 地方
Span 5-6:  地方 => 地方
Span 14-15:  旅行 => 旅行-01
Span 16-17:  时候 => 时候
Span 9-10:  有一天 => 有一天
Span 12-13:  沙漠 => 沙漠
Span 3-4:  看看 => 看看-01
Span 18-19:  能够 => 能够-01
Span 0-1:  请 => 请-02
Span 21-22:  辨认 => 辨认-01
Span 23-24:  这个 => 这个
Span 4-5:  这个 => 这个
Span 11-12:  非洲 => 非洲

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  仔细 => 仔细-01
Oracle Span 1-2:  你们 => 你们
Oracle Span 19-20:  准确 => 准确-01
Oracle Span 5-6:  地方 => 地方
Oracle Span 14-15:  旅行 => 旅行-01
Oracle Span 9-10:  有一天 => 有一天
Oracle Span 12-13:  沙漠 => 沙漠
Oracle Span 18-19:  能够 => 能够-01
Oracle Span 0-1:  请 => 请-01
Oracle Span 21-22:  辨认 => 辨认-01
Oracle Span 4-5:  这个 => 这个
Oracle Span 23-24:  这个 => 这个
Oracle Span 11-12:  非洲 => 非洲

Extra span: 地方 => 地方
Extra span: 出 => 出-04
Extra span: 地 => 地
Extra span: 时候 => 时候
Extra span: 去 => 去-02
Extra span: 你们 => 你们
Extra span: 看看 => 看看-01
Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你们	_	PN	PN	_	1	dobj	_	_
3	仔细	_	AD	AD	_	4	advmod	_	_
4	看看	_	VV	VV	_	1	dep	_	_
5	这个	_	NN	NN	_	6	nn	_	_
6	地方	_	NN	NN	_	4	dobj	_	_
7	,	_	PU	PU	_	1	punct	_	_
8	以便	_	AD	AD	_	11	advmod	_	_
9	你们	_	PN	PN	_	11	nsubj	_	_
10	有一天	_	CD	CD	_	11	dep	_	_
11	去	_	VV	VV	_	1	dep	_	_
12	非洲	_	NR	NR	_	13	nn	_	_
13	沙漠	_	NN	NN	_	14	lobj	_	_
14	上	_	LC	LC	_	15	loc	_	_
15	旅行	_	VV	VV	_	17	rcmod	_	_
16	的	_	DEC	DEC	_	15	cpm	_	_
17	时候	_	NN	NN	_	11	dobj	_	_
18	,	_	PU	PU	_	11	punct	_	_
19	能够	_	VV	VV	_	22	mmod	_	_
20	准确	_	VA	VA	_	22	dvpmod	_	_
21	地	_	DEV	DEV	_	20	dvpm	_	_
22	辨认	_	VV	VV	_	11	dep	_	_
23	出	_	VV	VV	_	22	rcomp	_	_
24	这个	_	NN	NN	_	25	nn	_	_
25	地方	_	NN	NN	_	22	dobj	_	_
26	。	_	PU	PU	_	1	punct	_	_

Oracle:
(x37 / 请-01, arg1, x42 / 你们)
(x46 / 地方, mod, x47 / 这个)
(x48 / 能够-01, arg0, x49 / 辨认-01)
(x48 / 能够-01, time, x54 / 旅行-01)
(x49 / 辨认-01, manner, x50 / 准确-01)
(x54 / 旅行-01, location, x56 / 沙漠)
(x54 / 旅行-01, time, x58 / 有一天)
(x56 / 沙漠, location, x57 / 非洲)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),地方,地方,false), Span(23,24,List(1),这个,这个,false), Span(22,23,List(2),出,出-04,false), Span(21,22,List(3),辨认,辨认-01,false), Span(20,21,List(4),地,地,false), Span(19,20,List(5),准确,准确-01,false), Span(18,19,List(6),能够,能够-01,false), Span(16,17,List(7),时候,时候,false), Span(14,15,List(8),旅行,旅行-01,false), Span(12,13,List(9),沙漠,沙漠,false), Span(11,12,List(10),非洲,非洲,false), Span(10,11,List(11),去,去-02,false), Span(9,10,List(12),有一天,有一天,false), Span(8,9,List(13),你们,你们,false), Span(5,6,List(14),地方,地方,false), Span(4,5,List(15),这个,这个,false), Span(3,4,List(16),看看,看看-01,false), Span(2,3,List(17),仔细,仔细-01,false), Span(1,2,List(18),你们,你们,false), Span(0,1,List(19),请,请-02,false)),Map(2 -> 出-04, 5 -> 准确-01, 12 -> 有一天, 15 -> 这个, 8 -> 旅行-01, 18 -> 你们, 7 -> 时候, 17 -> 仔细-01, 1 -> 这个, 4 -> 地, 11 -> 去-02, 14 -> 地方, 6 -> 能够-01, 0 -> 地方, 9 -> 沙漠, 16 -> 看看-01, 19 -> 请-02, 3 -> 辨认-01, 10 -> 非洲, 13 -> 你们),Map(准 -> 准确-01, 仔 -> 仔细-01, 地2 -> 地, 这 -> 这个, 能 -> 能够-01, 你 -> 你们, 旅 -> 旅行-01, 去 -> 去-02, 地 -> 地方, 出 -> 出-04, 非 -> 非洲, 你2 -> 你们, 这2 -> 这个, 请 -> 请-02, 看 -> 看看-01, 沙 -> 沙漠, 辨 -> 辨认-01, 地3 -> 地方, 时 -> 时候, 有 -> 有一天))),[Ljava.lang.String;@14ed7ddf,Annotation([Ljava.lang.String;@892af0e,[Ljava.lang.String;@446c8c72,[Ljava.lang.String;@6e2eead5),Annotation([Ljava.lang.String;@11d2714a,[Ljava.lang.String;@ca546a1,[Ledu.cmu.lti.nlp.amr.Dependency;@2c8a445b),Annotation([Ljava.lang.String;@356b6b5d,[Ljava.lang.String;@37b1149b,[Ljava.lang.String;@1187dc82),Annotation([Ljava.lang.String;@6fd1ea75,[Ljava.lang.String;@18e4551,[Ledu.cmu.lti.nlp.amr.Entity;@3ea48c37))
AMR:
(你 / 你们, ARG3, 有 / 有一天)
(出 / 出-04, ARG0, 辨 / 辨认-01)
(去 / 去-02, ARG1, 有 / 有一天)
(地 / 地方, mod, 这 / 这个)
(地3 / 地方, mod, 这2 / 这个)
(旅 / 旅行-01, location, 沙 / 沙漠)
(旅 / 旅行-01, op, 时 / 时候)
(旅 / 旅行-01, time, 有 / 有一天)
(沙 / 沙漠, location, 非 / 非洲)
(看 / 看看-01, manner, 仔 / 仔细-01)
(看 / 看看-01, time, 去 / 去-02)
(看 / 看看-01, time, 地3 / 地方)
(能 / 能够-01, ARG3, 辨 / 辨认-01)
(能 / 能够-01, time, 旅 / 旅行-01)
(请 / 请-02, prep-on-behalf, 看 / 看看-01)
(请 / 请-02, purpose, 你2 / 你们)
(辨 / 辨认-01, ARG1, 地2 / 地)
(辨 / 辨认-01, manner, 准 / 准确-01)
(辨 / 辨认-01, snt3, 地 / 地方)

Decoded in 118,163 microseconds
Sentence: 如果 ， 你们 有 机会 经过 这个 地方 ， 请 不 要 匆匆 而 过 ，

Spans:
Span 10-11:  不 => 不
Span 2-3:  你们 => 你们
Span 12-13:  匆匆 => 匆匆-01
Span 7-8:  地方 => 地方
Span 3-4:  有 => 有-06
Span 4-5:  机会 => 机会
Span 5-6:  经过 => 经过-01
Span 11-12:  要 => 要-02
Span 9-10:  请 => 请-02
Span 14-15:  过 => 过-01
Span 6-7:  这个 => 这个

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 2-3:  你们 => 你们
Oracle Span 12-13:  匆匆 => 匆匆-01
Oracle Span 7-8:  地方 => 地方
Oracle Span 3-4:  有 => 有-01
Oracle Span 4-5:  机会 => 机会
Oracle Span 5-6:  经过 => 经过-01
Oracle Span 11-12:  要 => 要-03
Oracle Span 9-10:  请 => 请-03
Oracle Span 14-15:  过 => 过-05

Incorrect span: 过 => 过-01
Incorrect span: 要 => 要-02
Extra span: 不 => 不
Incorrect span: 请 => 请-02
Extra span: 这个 => 这个
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 请 => 请-03
Missing span: 要 => 要-03
Missing span: 过 => 过-05
Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	,	_	PU	PU	_	4	punct	_	_
3	你们	_	PN	PN	_	4	nsubj	_	_
4	有	_	VE	VE	_	15	dep	_	_
5	机会	_	NN	NN	_	4	dobj	_	_
6	经过	_	VV	VV	_	4	conj	_	_
7	这个	_	VV	VV	_	4	dep	_	_
8	地方	_	NN	NN	_	7	dobj	_	_
9	,	_	PU	PU	_	4	punct	_	_
10	请	_	VV	VV	_	4	conj	_	_
11	不	_	AD	AD	_	15	neg	_	_
12	要	_	VV	VV	_	15	mmod	_	_
13	匆匆	_	AD	AD	_	15	advmod	_	_
14	而	_	MSP	MSP	_	15	prtmod	_	_
15	过	_	VV	VV	_	0	root	_	_
16	,	_	PU	PU	_	15	punct	_	_

Oracle:
(x11 / 要-03, arg0, x12 / 过-05)
(x12 / 过-05, manner, x14 / 匆匆-01)
(x4 / 有-01, arg0, x6 / 你们)
(x4 / 有-01, arg1, x7 / 机会)
(x5 / 请-03, arg2, x11 / 要-03)
(x8 / 经过-01, arg1, x9 / 地方)
(x8 / 经过-01, time, x7 / 机会)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),过,过-01,false), Span(12,13,List(1),匆匆,匆匆-01,false), Span(11,12,List(2),要,要-02,false), Span(10,11,List(3),不,不,false), Span(9,10,List(4),请,请-02,false), Span(7,8,List(5),地方,地方,false), Span(6,7,List(6),这个,这个,false), Span(5,6,List(7),经过,经过-01,false), Span(4,5,List(8),机会,机会,false), Span(3,4,List(9),有,有-06,false), Span(2,3,List(10),你们,你们,false)),Map(2 -> 要-02, 5 -> 地方, 8 -> 机会, 7 -> 经过-01, 1 -> 匆匆-01, 4 -> 请-02, 6 -> 这个, 9 -> 有-06, 0 -> 过-01, 10 -> 你们, 3 -> 不),Map(这 -> 这个, 要 -> 要-02, 过 -> 过-01, 你 -> 你们, 机 -> 机会, 地 -> 地方, 不 -> 不, 请 -> 请-02, 经 -> 经过-01, 有 -> 有-06, 匆 -> 匆匆-01))),[Ljava.lang.String;@11e834ad,Annotation([Ljava.lang.String;@710ae6a7,[Ljava.lang.String;@25d911a,[Ljava.lang.String;@18026052),Annotation([Ljava.lang.String;@489f62a3,[Ljava.lang.String;@6e068ac9,[Ledu.cmu.lti.nlp.amr.Dependency;@3d0352),Annotation([Ljava.lang.String;@bb6f3f7,[Ljava.lang.String;@388f1258,[Ljava.lang.String;@62058742),Annotation([Ljava.lang.String;@aca2fc3,[Ljava.lang.String;@36df4c26,[Ledu.cmu.lti.nlp.amr.Entity;@76828577))
AMR:
(有 / 有-06, ARG3, 你 / 你们)
(有 / 有-06, degree, 机 / 机会)
(经 / 经过-01, ARG3, 这 / 这个)
(经 / 经过-01, time, 机 / 机会)
(要 / 要-02, manner, 不 / 不)
(要 / 要-02, prep-through, 过 / 过-01)
(请 / 请-02, ARG0, 这 / 这个)
(请 / 请-02, direction, 要 / 要-02)
(过 / 过-01, manner, 匆 / 匆匆-01)
(这 / 这个, quant, 地 / 地方)

Decoded in 39,852 microseconds
Sentence: 请 你们 就 在 那 颗 星星 底下 等 一 等 ！

Spans:
Span 1-2:  你们 => 你们
Span 3-4:  在 => 在-01
Span 2-3:  就 => 就-01
Span 7-8:  底下 => 底下
Span 6-7:  星星 => 星星
Span 10-11:  等 => 等-01
Span 8-9:  等 => 等-01
Span 0-1:  请 => 请-02
Span 4-5:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 1-2:  你们 => 你们
Oracle Span 7-8:  底下 => 底下
Oracle Span 6-7:  星星 => 星星
Oracle Span 8-9:  等 => 等-01
Oracle Span 0-1:  请 => 请-01
Oracle Span 4-5:  那 => 那

Extra span: 等 => 等-01
Extra span: 在 => 在-01
Extra span: 就 => 就-01
Incorrect span: 请 => 请-02
Missing span: 请 => 请-01
Dependencies:
1	请	_	VV	VV	_	0	root	_	_
2	你们	_	PN	PN	_	1	dobj	_	_
3	就	_	AD	AD	_	7	advmod	_	_
4	在	_	P	P	_	7	prep	_	_
5	那	_	DT	DT	_	4	pobj	_	_
6	颗	_	M	M	_	5	clf	_	_
7	星星	_	VV	VV	_	1	dep	_	_
8	底下	_	NN	NN	_	7	dobj	_	_
9	等	_	ETC	ETC	_	8	etc	_	_
10	一	_	CD	CD	_	11	nummod	_	_
11	等	_	M	M	_	7	range	_	_
12	！	_	PU	PU	_	1	punct	_	_

Oracle:
(x0 / 请-01, arg1, x2 / 你们)
(x0 / 请-01, arg2, x6 / 等-01)
(x10 / 底下, arg0, x11 / 星星)
(x11 / 星星, mod, x12 / 那)
(x6 / 等-01, location, x10 / 底下)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),等,等-01,false), Span(8,9,List(1),等,等-01,false), Span(7,8,List(2),底下,底下,false), Span(6,7,List(3),星星,星星,false), Span(4,5,List(4),那,那,false), Span(3,4,List(5),在,在-01,false), Span(2,3,List(6),就,就-01,false), Span(1,2,List(7),你们,你们,false), Span(0,1,List(8),请,请-02,false)),Map(2 -> 底下, 5 -> 在-01, 8 -> 请-02, 7 -> 你们, 1 -> 等-01, 4 -> 那, 6 -> 就-01, 0 -> 等-01, 3 -> 星星),Map(就 -> 就-01, 在 -> 在-01, 星 -> 星星, 你 -> 你们, 底 -> 底下, 等 -> 等-01, 请 -> 请-02, 那 -> 那, 等2 -> 等-01))),[Ljava.lang.String;@38732372,Annotation([Ljava.lang.String;@639cb788,[Ljava.lang.String;@2fee69a1,[Ljava.lang.String;@4d25f816),Annotation([Ljava.lang.String;@6c6c2a73,[Ljava.lang.String;@6a4af081,[Ledu.cmu.lti.nlp.amr.Dependency;@36b53f08),Annotation([Ljava.lang.String;@54329480,[Ljava.lang.String;@590013c7,[Ljava.lang.String;@64f32e9e),Annotation([Ljava.lang.String;@7b211077,[Ljava.lang.String;@3b770d07,[Ledu.cmu.lti.nlp.amr.Entity;@62b0bf85))
AMR:
(在 / 在-01, manner, 就 / 就-01)
(在 / 在-01, mod, 那 / 那)
(底 / 底下, location, 星 / 星星)
(星 / 星星, mod, 那 / 那)
(等 / 等-01, location, 等2 / 等-01)
(等2 / 等-01, location, 底 / 底下)
(请 / 请-02, manner, 就 / 就-01)
(请 / 请-02, ord, 你 / 你们)

Decoded in 24,289 microseconds
Sentence: 如果 这时 ， 有 个 小孩子 向 你 走来 ， 如果 他 笑 着 ， 他 有 金黄色 的 头发 ， 如果 当 你 问 他 问题 时 他 不 回答 ， 你 一定 会 猜得 出 他 是 谁 。

Spans:
Span 33-34:  一定 => 一定
Span 29-30:  不 => 不
Span 37-38:  他 => 他
Span 28-29:  他 => 他
Span 25-26:  他 => 他
Span 15-16:  他 => 他
Span 11-12:  他 => 他
Span 34-35:  会 => 会-03
Span 32-33:  你 => 你
Span 23-24:  你 => 你
Span 7-8:  你 => 你
Span 36-37:  出 => 出-04
Span 30-31:  回答 => 回答-01
Span 19-20:  头发 => 头发
Span 22-23:  当 => 当-04
Span 38-39:  是 => 是-04
Span 16-17:  有 => 有-06
Span 3-4:  有 => 有-06
Span 12-13:  笑 => 笑-01
Span 39-40:  谁 => 谁
Span 8-9:  走来 => 走来-01
Span 1-2:  这时 => 这时
Span 17-18:  金黄色 => 金黄色
Span 24-25:  问 => 问-01
Span 26-27:  问题 => 问题

Langrangian relaxation converged after 13 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 33-34:  一定 => 一定
Oracle Span 34-35:  会 => 会-02
Oracle Span 7-8:  你 => 你
Oracle Span 30-31:  回答 => 回答-01
Oracle Span 19-20:  头发 => 头发
Oracle Span 3-4:  有 => 有-01
Oracle Span 12-13:  笑 => 笑-01
Oracle Span 39-40:  谁 => 谁
Oracle Span 8-9:  走来 => 走来-01
Oracle Span 1-2:  这时 => 这时
Oracle Span 17-18:  金黄色 => 金黄色
Oracle Span 24-25:  问 => 问-01
Oracle Span 26-27:  问题 => 问题

Extra span: 是 => 是-04
Extra span: 他 => 他
Extra span: 出 => 出-04
Incorrect span: 会 => 会-03
Extra span: 你 => 你
Extra span: 不 => 不
Extra span: 他 => 他
Extra span: 他 => 他
Extra span: 你 => 你
Extra span: 当 => 当-04
Extra span: 有 => 有-06
Extra span: 他 => 他
Extra span: 他 => 他
Incorrect span: 有 => 有-06
Missing span: 有 => 有-01
Missing span: 会 => 会-02
Dependencies:
1	如果	_	CS	CS	_	4	advmod	_	_
2	这时	_	AD	AD	_	4	advmod	_	_
3	,	_	PU	PU	_	4	punct	_	_
4	有	_	VE	VE	_	39	pccomp	_	_
5	个	_	M	M	_	6	dep	_	_
6	小孩子	_	NN	NN	_	9	nsubj	_	_
7	向	_	P	P	_	9	prep	_	_
8	你	_	PN	PN	_	7	pobj	_	_
9	走来	_	VV	VV	_	4	dep	_	_
10	,	_	PU	PU	_	4	punct	_	_
11	如果	_	CS	CS	_	13	advmod	_	_
12	他	_	PN	PN	_	13	nsubj	_	_
13	笑	_	VV	VV	_	17	pccomp	_	_
14	着	_	AS	AS	_	13	asp	_	_
15	,	_	PU	PU	_	17	punct	_	_
16	他	_	PN	PN	_	17	top	_	_
17	有	_	VE	VE	_	4	dep	_	_
18	金黄色	_	JJ	JJ	_	20	assmod	_	_
19	的	_	DEG	DEG	_	18	assm	_	_
20	头发	_	NN	NN	_	17	dobj	_	_
21	,	_	PU	PU	_	39	punct	_	_
22	如果	_	CS	CS	_	31	advmod	_	_
23	当	_	P	P	_	31	prep	_	_
24	你	_	PN	PN	_	25	nsubj	_	_
25	问	_	VV	VV	_	28	lccomp	_	_
26	他	_	PN	PN	_	27	nsubj	_	_
27	问题	_	NN	NN	_	25	ccomp	_	_
28	时	_	LC	LC	_	23	plmod	_	_
29	他	_	PN	PN	_	31	nsubj	_	_
30	不	_	AD	AD	_	31	neg	_	_
31	回答	_	VV	VV	_	39	pccomp	_	_
32	,	_	PU	PU	_	31	punct	_	_
33	你	_	PN	PN	_	36	nsubj	_	_
34	一定	_	AD	AD	_	36	advmod	_	_
35	会	_	VV	VV	_	36	mmod	_	_
36	猜得	_	VV	VV	_	31	conj	_	_
37	出	_	VV	VV	_	36	comod	_	_
38	他	_	PN	PN	_	39	top	_	_
39	是	_	VC	VC	_	0	root	_	_
40	谁	_	PN	PN	_	39	attr	_	_
41	。	_	PU	PU	_	39	punct	_	_

Oracle:
(x45 / 走来-01, direction, x58 / 你)
(x45 / 走来-01, time, x48 / 这时)
(x51 / 有-01, arg1, x53 / 头发)
(x53 / 头发, mod, x54 / 金黄色)
(x55 / 回答-01, time, x57 / 问-01)
(x57 / 问-01, arg1, x60 / 问题)
(x62 / 一定, arg0, x63 / 会-02)

Input(Some(Graph(null,ArrayBuffer(Span(39,40,List(0),谁,谁,false), Span(38,39,List(1),是,是-04,false), Span(37,38,List(2),他,他,false), Span(36,37,List(3),出,出-04,false), Span(34,35,List(4),会,会-03,false), Span(33,34,List(5),一定,一定,false), Span(32,33,List(6),你,你,false), Span(30,31,List(7),回答,回答-01,false), Span(29,30,List(8),不,不,false), Span(28,29,List(9),他,他,false), Span(26,27,List(10),问题,问题,false), Span(25,26,List(11),他,他,false), Span(24,25,List(12),问,问-01,false), Span(23,24,List(13),你,你,false), Span(22,23,List(14),当,当-04,false), Span(19,20,List(15),头发,头发,false), Span(17,18,List(16),金黄色,金黄色,false), Span(16,17,List(17),有,有-06,false), Span(15,16,List(18),他,他,false), Span(12,13,List(19),笑,笑-01,false), Span(11,12,List(20),他,他,false), Span(8,9,List(21),走来,走来-01,false), Span(7,8,List(22),你,你,false), Span(3,4,List(23),有,有-06,false), Span(1,2,List(24),这时,这时,false)),Map(2 -> 他, 5 -> 一定, 12 -> 问-01, 8 -> 不, 15 -> 头发, 21 -> 走来-01, 18 -> 他, 24 -> 这时, 7 -> 回答-01, 1 -> 是-04, 17 -> 有-06, 23 -> 有-06, 4 -> 会-03, 11 -> 他, 14 -> 当-04, 20 -> 他, 6 -> 你, 9 -> 他, 0 -> 谁, 22 -> 你, 16 -> 金黄色, 19 -> 笑-01, 10 -> 问题, 3 -> 出-04, 13 -> 你),Map(头 -> 头发, 问2 -> 问-01, 他2 -> 他, 有2 -> 有-06, 他5 -> 他, 你3 -> 你, 这 -> 这时, 笑 -> 笑-01, 谁 -> 谁, 你 -> 你, 他 -> 他, 他4 -> 他, 出 -> 出-04, 不 -> 不, 会 -> 会-03, 你2 -> 你, 走 -> 走来-01, 他3 -> 他, 问 -> 问题, 是 -> 是-04, 回 -> 回答-01, 一 -> 一定, 金 -> 金黄色, 当 -> 当-04, 有 -> 有-06))),[Ljava.lang.String;@1fcaea93,Annotation([Ljava.lang.String;@6c9bf3b5,[Ljava.lang.String;@6f07d414,[Ljava.lang.String;@8ac12e6),Annotation([Ljava.lang.String;@40faff12,[Ljava.lang.String;@734fbae3,[Ledu.cmu.lti.nlp.amr.Dependency;@223967ea),Annotation([Ljava.lang.String;@4a6a6a69,[Ljava.lang.String;@5d7f1e59,[Ljava.lang.String;@53e93fb7),Annotation([Ljava.lang.String;@3a861417,[Ljava.lang.String;@2326180c,[Ledu.cmu.lti.nlp.amr.Entity;@68e47e7))
AMR:
(一 / 一定, degree, 会 / 会-03)
(不 / 不, ARG1, 他2 / 他)
(他 / 他, ARG3, 是 / 是-04)
(会 / 会-03, ARG3, 出 / 出-04)
(出 / 出-04, ARG0, 你 / 你)
(出 / 出-04, ARG4, 他 / 他)
(回 / 回答-01, ARG4, 你 / 你)
(回 / 回答-01, manner, 不 / 不)
(回 / 回答-01, time, 问2 / 问-01)
(头 / 头发, mod, 金 / 金黄色)
(头 / 头发, mode, 当 / 当-04)
(当 / 当-04, ARG4, 问2 / 问-01)
(有 / 有-06, ARG6, 他4 / 他)
(有2 / 有-06, time, 头 / 头发)
(笑 / 笑-01, ARG4, 有 / 有-06)
(笑 / 笑-01, prep-from, 他5 / 他)
(谁 / 谁, ARG3, 是 / 是-04)
(走 / 走来-01, direction, 你3 / 你)
(走 / 走来-01, time, 有 / 有-06)
(走 / 走来-01, time, 这 / 这时)
(金 / 金黄色, ARG1, 有 / 有-06)
(问 / 问题, mod, 他3 / 他)
(问2 / 问-01, compared-to, 你2 / 你)
(问2 / 问-01, degree, 问 / 问题)

Decoded in 499,402 microseconds
Sentence: 那 就 请 你们 帮 个 忙 ， 不 要 让 我 这么 忧伤 ：

Spans:
Span 8-9:  不 => 不
Span 3-4:  你们 => 你们
Span 1-2:  就 => 就-01
Span 6-7:  忙 => 忙-01
Span 13-14:  忧伤 => 忧伤-01
Span 11-12:  我 => 我
Span 9-10:  要 => 要-02
Span 10-11:  让 => 让-01
Span 2-3:  请 => 请-02
Span 12-13:  这么 => 这么
Span 0-1:  那 => 那

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 3-4:  你们 => 你们
Oracle Span 13-14:  忧伤 => 忧伤-01
Oracle Span 11-12:  我 => 我
Oracle Span 9-10:  要 => 要-03
Oracle Span 10-11:  让 => 让-02
Oracle Span 2-3:  请 => 请-02
Oracle Span 12-13:  这么 => 这么

Incorrect span: 让 => 让-01
Incorrect span: 要 => 要-02
Extra span: 不 => 不
Extra span: 忙 => 忙-01
Extra span: 就 => 就-01
Extra span: 那 => 那
Missing span: 要 => 要-03
Missing span: 让 => 让-02
Dependencies:
1	那	_	PN	PN	_	3	nsubj	_	_
2	就	_	AD	AD	_	3	advmod	_	_
3	请	_	VV	VV	_	0	root	_	_
4	你们	_	PN	PN	_	5	nsubj	_	_
5	帮	_	VV	VV	_	3	ccomp	_	_
6	个	_	M	M	_	5	dobj	_	_
7	忙	_	VA	VA	_	5	dep	_	_
8	,	_	PU	PU	_	5	punct	_	_
9	不	_	AD	AD	_	11	neg	_	_
10	要	_	VV	VV	_	11	mmod	_	_
11	让	_	VV	VV	_	5	conj	_	_
12	我	_	PN	PN	_	11	dobj	_	_
13	这么	_	AD	AD	_	14	advmod	_	_
14	忧伤	_	VA	VA	_	11	dep	_	_
15	：	_	PU	PU	_	3	punct	_	_

Oracle:
(x10 / 要-03, arg0, x12 / 让-02)
(x12 / 让-02, arg1, x13 / 我)
(x12 / 让-02, arg2, x14 / 忧伤-01)
(x14 / 忧伤-01, mod, x15 / 这么)
(x2 / 请-02, arg1, x3 / 你们)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),忧伤,忧伤-01,false), Span(12,13,List(1),这么,这么,false), Span(11,12,List(2),我,我,false), Span(10,11,List(3),让,让-01,false), Span(9,10,List(4),要,要-02,false), Span(8,9,List(5),不,不,false), Span(6,7,List(6),忙,忙-01,false), Span(3,4,List(7),你们,你们,false), Span(2,3,List(8),请,请-02,false), Span(1,2,List(9),就,就-01,false), Span(0,1,List(10),那,那,false)),Map(2 -> 我, 5 -> 不, 8 -> 请-02, 7 -> 你们, 1 -> 这么, 4 -> 要-02, 6 -> 忙-01, 9 -> 就-01, 0 -> 忧伤-01, 10 -> 那, 3 -> 让-01),Map(就 -> 就-01, 忙 -> 忙-01, 我 -> 我, 要 -> 要-02, 这 -> 这么, 你 -> 你们, 忧 -> 忧伤-01, 不 -> 不, 请 -> 请-02, 那 -> 那, 让 -> 让-01))),[Ljava.lang.String;@1c00d406,Annotation([Ljava.lang.String;@16ac4d3d,[Ljava.lang.String;@559d19c,[Ljava.lang.String;@719c1faf),Annotation([Ljava.lang.String;@6ba6557e,[Ljava.lang.String;@1f172892,[Ledu.cmu.lti.nlp.amr.Dependency;@5409dfdd),Annotation([Ljava.lang.String;@45f9d394,[Ljava.lang.String;@1c2d63f0,[Ljava.lang.String;@3a588b5f),Annotation([Ljava.lang.String;@20b54cfe,[Ljava.lang.String;@2bdb5e0f,[Ledu.cmu.lti.nlp.amr.Entity;@5c9e8a67))
AMR:
(就 / 就-01, mod, 那 / 那)
(忙 / 忙-01, ARG3, 不 / 不)
(忙 / 忙-01, manner, 请 / 请-02)
(忧 / 忧伤-01, mod, 这 / 这么)
(要 / 要-02, ARG3, 让 / 让-01)
(要 / 要-02, manner, 不 / 不)
(让 / 让-01, mode, 忧 / 忧伤-01)
(让 / 让-01, prep-along-with, 我 / 我)
(请 / 请-02, ARG3, 你 / 你们)
(请 / 请-02, manner, 就 / 就-01)

Decoded in 37,821 microseconds
Sentence: 赶快 写信 告诉 我 ， 他 又 回来 了 …

Spans:
Span 5-6:  他 => 他
Span 1-2:  写信 => 写信-01
Span 6-7:  又 => 又
Span 2-3:  告诉 => 告诉-01
Span 7-8:  回来 => 回来-02
Span 3-4:  我 => 我
Span 0-1:  赶快 => 赶快

Langrangian relaxation converged after 1 iterations. Delta = 0.0
************* WARNING: Cannot find label = :arg0 in the labelset ***************
************* WARNING: Cannot find label = :arg2 in the labelset ***************
************* WARNING: Cannot find label = :arg1 in the labelset ***************
Oracle Span 5-6:  他 => 他
Oracle Span 1-2:  写信 => 写信-01
Oracle Span 6-7:  又 => 又
Oracle Span 2-3:  告诉 => 告诉-01
Oracle Span 7-8:  回来 => 回来-02
Oracle Span 3-4:  我 => 我
Oracle Span 0-1:  赶快 => 赶快

Dependencies:
1	赶快	_	NN	NN	_	2	nn	_	_
2	写信	_	NN	NN	_	3	nsubj	_	_
3	告诉	_	VV	VV	_	0	root	_	_
4	我	_	PN	PN	_	8	nsubj	_	_
5	,	_	PU	PU	_	8	punct	_	_
6	他	_	PN	PN	_	8	nsubj	_	_
7	又	_	AD	AD	_	8	advmod	_	_
8	回来	_	VV	VV	_	3	ccomp	_	_
9	了	_	AS	AS	_	8	asp	_	_
10	…	_	NN	NN	_	8	dobj	_	_

Oracle:
(x0 / 告诉-01, arg1, x2 / 回来-02)
(x0 / 告诉-01, arg2, x5 / 我)
(x0 / 告诉-01, manner, x6 / 写信-01)
(x2 / 回来-02, arg0, x3 / 他)
(x2 / 回来-02, manner, x9 / 又)
(x6 / 写信-01, manner, x7 / 赶快)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),回来,回来-02,false), Span(6,7,List(1),又,又,false), Span(5,6,List(2),他,他,false), Span(3,4,List(3),我,我,false), Span(2,3,List(4),告诉,告诉-01,false), Span(1,2,List(5),写信,写信-01,false), Span(0,1,List(6),赶快,赶快,false)),Map(2 -> 他, 5 -> 写信-01, 1 -> 又, 4 -> 告诉-01, 6 -> 赶快, 0 -> 回来-02, 3 -> 我),Map(写 -> 写信-01, 又 -> 又, 我 -> 我, 他 -> 他, 告 -> 告诉-01, 赶 -> 赶快, 回 -> 回来-02))),[Ljava.lang.String;@2262f0d8,Annotation([Ljava.lang.String;@283a8ad6,[Ljava.lang.String;@59e082f8,[Ljava.lang.String;@7185e611),Annotation([Ljava.lang.String;@44d43cc9,[Ljava.lang.String;@384472bf,[Ledu.cmu.lti.nlp.amr.Dependency;@656ec00d),Annotation([Ljava.lang.String;@3b8507df,[Ljava.lang.String;@5ed25612,[Ljava.lang.String;@451816fd),Annotation([Ljava.lang.String;@56e5c8fb,[Ljava.lang.String;@45cd8607,[Ledu.cmu.lti.nlp.amr.Entity;@9e33a6a))
AMR:
(写 / 写信-01, manner, 赶 / 赶快)
(告 / 告诉-01, manner, 写 / 写信-01)
(告 / 告诉-01, manner, 我 / 我)
(回 / 回来-02, manner, 他 / 他)
(回 / 回来-02, manner, 写 / 写信-01)
(回 / 回来-02, manner, 又 / 又)

Decoded in 23,906 microseconds
--- Stage1 evaluation ---
Precision: 0.5860805860805861
Recall: 0.7812023191943851
F1: 0.6697187704381948
